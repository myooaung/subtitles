WEBVTT

00:03.290 --> 00:08.540
I opened the project folder we created 50 views Seelye in the last lecture.

00:08.570 --> 00:11.570
This view Fromberg intro folder with web store.

00:11.600 --> 00:13.580
The idea I'm using in this course.

00:13.670 --> 00:19.670
Now you don't have to use web store and you could use Microsoft which has to do code or is some popular

00:19.730 --> 00:26.840
editors like sublime or Adam in whichever editor you open this you'll see a couple of files and two

00:26.840 --> 00:27.690
folders.

00:27.800 --> 00:32.990
The node modules folder here simply holds all the dependencies which were installed and you might be

00:32.990 --> 00:34.460
shocked if you have a look at it.

00:34.490 --> 00:36.830
There are a lot of dependencies but no worries.

00:36.890 --> 00:40.580
Pretty much all of them are only required during development.

00:40.610 --> 00:46.160
So for our workflow to function correctly I'm going to say some words about this workflow in the next

00:46.160 --> 00:54.270
module but also in a few seconds the source folder is where we hold our actual view Chia's application.

00:54.440 --> 00:59.870
And you see that we here have two files and diasters folder where you can store assets like images you

00:59.870 --> 01:02.050
want to use and your app wrap the main.

01:02.140 --> 01:02.470
Yes.

01:02.510 --> 01:04.820
And the App Store view files.

01:04.820 --> 01:10.280
Now Dot the view that's a strange file extension and I'll have a lecture on this in one of the next

01:10.280 --> 01:13.170
lectures where I will dive deeper into that file.

01:13.300 --> 01:13.700
Gotcha.

01:13.730 --> 01:19.100
Yes basically is the first file we load and our app the first fall we start with and what we do here

01:19.100 --> 01:26.060
is for one we import view and we imported it like this because we're using NPM as a package manager.

01:26.150 --> 01:32.030
So Vue wasn't Dete installed as a dependency Office project and therefore we can't easily imported like

01:32.030 --> 01:32.690
this.

01:32.690 --> 01:35.710
So that replaces our old import from the Cdn.

01:35.720 --> 01:41.320
Now importing it from our local node modules folder with with that command and app.

01:41.340 --> 01:45.090
Well that's simply inboards something from that or the view file.

01:45.140 --> 01:46.770
And I'll come back to this.

01:46.790 --> 01:53.170
You'll see we don't need a new view instance we control an element with an idea of app and just render

01:53.180 --> 01:59.980
function is new but it basically just renders whatever is in this episode view file to the DOM.

01:59.990 --> 02:02.170
And again I will come back to this.

02:02.240 --> 02:05.630
Now the other files are mainly there for configuration.

02:05.630 --> 02:08.620
However interesting to us the index H-G a mouthful.

02:08.660 --> 02:15.830
There's just a single page of our single page application and this file here actually has a normal HVM

02:15.950 --> 02:19.470
skeleton but then it has two very interesting things.

02:19.580 --> 02:27.110
Does Dave with the idea app which we control here and then does import based builds start.

02:27.170 --> 02:28.060
Yes.

02:28.100 --> 02:34.610
Now we don't have a disk folder here but in the end web page Debo tool they're using in the set up will

02:34.640 --> 02:37.630
create one single Builth dot Chia's fall.

02:37.640 --> 02:43.580
So it will Bonnell our application which consists of multiple files to already into one single stripped

02:43.630 --> 02:47.100
Folland DND and stored in a disk folder.

02:47.270 --> 02:52.460
However since we're running in development mode with NPM run death which we ran and which is running

02:52.460 --> 02:59.030
down there in an integrated terminal in my ID in this development mode the disk folder is created in

02:59.030 --> 03:00.020
memory only.

03:00.050 --> 03:01.750
So that is why we don't see it.

03:02.000 --> 03:08.030
If you were to run another script which you could find in the package or Chaisson NPM run build then

03:08.030 --> 03:14.330
you would actually physically create dead disk folder and that disk folder would hold all the files

03:14.330 --> 03:16.600
you need to deploy to a real server.

03:16.610 --> 03:22.740
If you want to run your app on a real server deadest a single page application I was referring to and

03:22.760 --> 03:27.590
you will only need a server which is able to host the static files because there is no server side code

03:27.830 --> 03:31.560
in the far end deploy its only a HMO and a script file in the end.

03:31.600 --> 03:37.290
A couple of assets may be noted were in this package Duchessa fall already.

03:37.640 --> 03:43.640
You can see we got a couple of development dependencies and one production dependency the one production

03:43.640 --> 03:50.120
dependency really is just the view framework develop and dependencies are all only needed during development.

03:50.120 --> 03:56.400
As the name implies and basically here we have Web pig we have some Lowder's for web pick.

03:56.420 --> 03:59.580
Again more on web pegan the module author through this one.

03:59.630 --> 04:04.820
And with that we're able to write code in a very comfortable way we can split it over multiple files

04:04.820 --> 04:07.370
and we can use some extra features like SAS.

04:07.460 --> 04:12.780
So this is as preprocessor at least if people have installed it during the setup of the project.

04:12.950 --> 04:16.220
And with Babel we can also use it as six.

04:16.220 --> 04:21.690
So next the next version of javascript and it will be transported to iOS 5 for us.

04:21.770 --> 04:27.380
So that what we shipped to the browser will run in all browsers and not just in the most recent ones.

04:27.950 --> 04:33.530
Well the other Fahd's like Westpac conflict touchiest simply just configure our development workflow

04:33.680 --> 04:35.370
and I won't dive into this right here.

04:35.390 --> 04:37.180
But in the next module.

04:37.310 --> 04:42.330
So that is what was created by Seelye we will work in the source folder.

04:42.500 --> 04:47.890
And I'd say Why don't we have a look at that strange app dot view followed in the next lecture.
