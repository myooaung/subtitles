WEBVTT

00:02.270 --> 00:06.090
So the last lecture we saw or we understood what was created for us.

00:06.090 --> 00:12.570
Now we can work with this folder here or with this set up and we can simply add a new folder for example

00:12.650 --> 00:19.780
named components and there I could add my info component to my info dot chafers file here.

00:19.800 --> 00:24.800
We could create such a new component by basically following the pattern seen here.

00:24.900 --> 00:28.610
We import react and component from react.

00:28.620 --> 00:29.430
We need both.

00:29.430 --> 00:30.660
That's important.

00:31.140 --> 00:36.350
And then we can simply export our app which extends component.

00:36.570 --> 00:42.200
So I'll create my class here it's named info and with it.

00:42.300 --> 00:43.890
No not exports.

00:43.910 --> 00:47.240
It extends component in there.

00:47.240 --> 00:54.800
We have a render method of course which returns our J as X code like this.

00:54.800 --> 01:00.260
So here we could have wrapping def because remember only one root element in there.

01:00.290 --> 01:07.540
We could simply have a heading where we say the info and bloated maybe a paragraph re-act is awesome.

01:07.940 --> 01:09.380
Something like that.

01:09.440 --> 01:16.580
Now at the very end our export info export default info to make this the default export of this file

01:16.580 --> 01:17.240
here.

01:17.540 --> 01:23.720
And with that we create our first component we may use and we can use it in yapped Acharyas fall.

01:23.810 --> 01:30.980
So here I can add a new import import info from and now from the components folder from the info file

01:31.040 --> 01:31.970
without.

01:32.000 --> 01:34.940
Yes that will be resolved by the PAG workflow.

01:34.940 --> 01:39.060
Behind the scenes automatically and now we can simply include this.

01:39.140 --> 01:46.550
So here I will actually remove all that content to just leave the dev and now I will simply add my info

01:46.550 --> 01:47.700
like this.

01:47.750 --> 01:53.980
Now if we save this and we still have our workflow running in that terminal window where we started

01:54.120 --> 01:59.630
with with NPM start it will automatically recompile and reload the browser window.

01:59.780 --> 02:03.620
So now we see they invoke re-act is awesome.

02:03.690 --> 02:07.090
Dad was really quick and that's how we can work with this setup.

02:07.220 --> 02:11.030
We can add our own components just like we created them on chairs fiddle.

02:11.090 --> 02:14.750
Now split up over several files to make them easier to manage.

02:14.780 --> 02:21.390
Then we import them into each other with the import statement here and we use them just as we used to

02:21.390 --> 02:23.730
before ingenius fiddle.

02:23.780 --> 02:25.440
Now that we understood this.

02:25.490 --> 02:31.460
Well let's see how we can turn this into a multi page single page application so simulating multiple

02:31.460 --> 02:36.160
pages with different or else using the re-act router in the next lectures.
