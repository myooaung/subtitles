WEBVTT

00:02.370 --> 00:06.120
Here's the first way we may use a javascript framework.

00:06.120 --> 00:12.960
We have a typical web application of full stack application where we have some back end using ph p with

00:13.020 --> 00:17.020
maybe some framework like Lehrer will always be dot net or node.

00:17.040 --> 00:20.230
J.S. maybe we have a framework like Express.

00:20.370 --> 00:23.760
Now we send the requester and typically we get by this page.

00:23.760 --> 00:29.080
However in most applications we have a couple of routes registered on the server so that once we send

00:29.080 --> 00:35.810
the requester for different requests so different you are it's basically like Slash block or slash about

00:35.810 --> 00:36.380
us.

00:36.660 --> 00:39.200
We get back different pages like that.

00:39.210 --> 00:44.260
So we get back different HVM all pages and you end different HMO code.

00:44.700 --> 00:47.290
Typically this is referred to as views.

00:47.310 --> 00:54.330
So the backend ph piu or node or whatever renders back a view to us to the client.

00:54.330 --> 01:00.600
So this view consists of HIV all javascript and CSSA typically And in a sense or it makes up the web

01:00.600 --> 01:00.950
page.

01:00.960 --> 01:05.480
We then see and we can work with where we can click a link to load a new page maybe.

01:05.670 --> 01:11.430
Now in this approach we can of course use javascript to do something on these individual pages and we

01:11.430 --> 01:17.910
can also use some frameworks there you could add a framework like view chess to enhance the individual

01:17.910 --> 01:18.940
pages here.

01:19.140 --> 01:21.090
And that is super important.

01:21.090 --> 01:27.420
We would add the framework javascript import code to each of these pages of course because we need the

01:27.420 --> 01:28.450
framework on each page.

01:28.500 --> 01:30.620
At least on each page where we want to use it.

01:30.810 --> 01:36.710
So back to the chase fit like sambal from the first application from the first module and the scores

01:37.050 --> 01:37.600
there.

01:37.620 --> 01:43.880
We obviously had only one page we were working with but you could think of that page that Jay as for

01:43.880 --> 01:51.210
the editor we worked with that H.T. Melchior's S-M javascript section as one page of many pages in such

01:51.210 --> 01:54.690
an approach in such a typical web app.

01:54.690 --> 02:03.570
Now in this approach as mentioned we have different instances and could say apps built with you chest

02:03.570 --> 02:09.200
for different pages and some pages might maybe not use our framework at all if they don't need it.

02:09.210 --> 02:10.350
Why would they use it.

02:10.560 --> 02:14.630
So we create an app with that framework for two different pages.

02:14.820 --> 02:21.660
Deaders also referred to as a multi-page application because we get back multiple pages from the server

02:21.720 --> 02:23.860
for different requests.

02:23.970 --> 02:26.620
That is the first way of using such a framework.

02:26.640 --> 02:32.560
And as you will learn from this course not every framework is suited for this approach.

02:32.820 --> 02:35.040
Well if that's the case what's the alternative.

02:35.040 --> 02:35.370
Dan.
