WEBVTT

00:02.560 --> 00:06.070
So in the last lectures we had a look at vanilla javascript.

00:06.100 --> 00:08.380
We added Cheikh work to improve it.

00:08.380 --> 00:15.270
We added low dash to improve our app and then we replaced Cheikh weary with view chess and you learned

00:15.280 --> 00:22.030
how a framework like view chess can make many things easier how it automatically takes care about some

00:22.030 --> 00:24.580
of the things you had to do manually before.

00:24.910 --> 00:31.720
So in the world of javascript there are some things Jake we angler and so on which we now understand

00:31.720 --> 00:32.720
a bit better.

00:32.880 --> 00:40.630
We all learned that these are libraries or frameworks which do fulfil certain tasks and which sometimes

00:40.630 --> 00:47.470
may replace Shavar you typically use every Angler or react or view or you might replace J.A.G. with

00:47.470 --> 00:53.600
any of these frameworks or are complimentary to jobber loadout or simply provide some utility functions

00:53.800 --> 00:58.480
so you can use it just fine with either of the other frameworks or packages.

00:58.510 --> 01:03.970
Now that's nice but the javascript the world has more things than just libraries and frameworks which

01:03.970 --> 01:05.020
we kind of understand.

01:05.030 --> 01:13.180
Now we also have things like ESX the next javascript word basically typescript wept and Babyland you

01:13.180 --> 01:17.830
might have heard about these things but what do they mean which role do they play.

01:18.250 --> 01:23.550
Well as mentioned we understand what libraries are and which are will frameworks play.

01:23.740 --> 01:25.530
But what about the other things.

01:25.930 --> 01:27.900
Well for weap I can babble.

01:28.090 --> 01:33.330
These are basically built tools packages we use during development and that's important.

01:33.340 --> 01:34.870
Which played no role.

01:34.870 --> 01:41.290
Once the app is running on a server but which we used during development to make our life our developer's

01:41.290 --> 01:43.260
life a bit easier.

01:43.360 --> 01:49.030
They allow us to use features we couldn't use otherwise in conjunction with frameworks they may allow

01:49.030 --> 01:55.060
us to use certain features easier to split our code over multiple files and then bundled together into

01:55.060 --> 01:59.710
one bundle which we ship in the end or to optimize minute fire code.

02:00.100 --> 02:04.480
But they are also connected to things like ESX and typescript.

02:04.480 --> 02:07.580
These are basically just Alber words of javascript.

02:07.590 --> 02:13.620
You could say now we only have one worker which runs in pretty much all browsers and that has javascript

02:13.630 --> 02:16.260
or to be precise as 5.

02:16.580 --> 02:23.230
You might not be aware of that but javascript is weren't and regularly we receive new versions of javascript

02:23.680 --> 02:25.880
now since javascript runs in the browser.

02:25.920 --> 02:32.560
A new version which might be available isn't automatically supported by all browsers because old browsers

02:32.770 --> 02:37.140
typically aren't updated so they won't support a new word of javascript.

02:37.190 --> 02:42.040
Yes 6 for example is the next question of Chalis script and it is generally available.

02:42.040 --> 02:47.860
You could use it you could write your code in iOS 6 but if you were to ship your code like that it wouldn't

02:47.860 --> 02:49.530
run in all browsers.

02:49.980 --> 02:51.900
That is why we have web page.

02:51.910 --> 02:59.080
For example a built tool and specifically baseball utterance piler which allows us to use E-6 during

02:59.080 --> 03:04.710
development so that we can take advantage of all these nice features but then babe integrate it into

03:04.720 --> 03:11.580
weapon which manages our whole build workflow you could say will transpire transpired iOS ESX to S-5.

03:11.650 --> 03:17.770
So it basically comes up with ways of rewriting our E6 code and it is 5 code so that we can use new

03:17.770 --> 03:23.710
features but ship working code and typescript is the same it's not the next wish of though it's a separate

03:23.710 --> 03:28.840
language developed by Microsoft which builds up on javascript and adds new features and which of course

03:28.900 --> 03:30.400
also doesn't run the browser.

03:30.520 --> 03:35.590
So there's also has to be compiled with a different compiler here but that could also be integrated

03:35.620 --> 03:42.700
into a workflow managed by web peg and thatis how that works to gabber how we have these different pieces

03:42.820 --> 03:48.040
different languages just belt tools which allow us to use more features different features during development

03:48.040 --> 03:52.810
and optimize our code and then libraries and frameworks which we already learned about.
