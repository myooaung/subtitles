WEBVTT

00:02.390 --> 00:06.370
So now you really learn a lot about the base and takes off Eyler.

00:06.650 --> 00:12.530
One important thing is missing though one thing that if you know or one really made English one popular

00:13.100 --> 00:19.610
how to add two way data binding and therefore how you can easily fetch de-value user entered into an

00:19.610 --> 00:20.870
input field.

00:21.410 --> 00:29.060
Let's say we have just like in your examples and put below our list here type text maybe.

00:29.420 --> 00:35.050
And I want to allow the user to enter a message here and then output that message below the input.

00:35.090 --> 00:42.050
First of all I'll create a new property here I'll name it message and it's a empty string by default.

00:42.050 --> 00:48.100
Again I could explicitly make this a string but typescript was able to infer this since I assign the

00:48.110 --> 00:49.850
empty string.

00:49.850 --> 00:56.870
Now I want to output this message here in the paragraph and I want to set this message was typing in

00:56.870 --> 00:58.580
this import field.

00:58.610 --> 01:01.500
Now how can we do that in future.

01:01.520 --> 01:05.760
Yes we used the model for that in angular.

01:05.810 --> 01:06.860
It's kind of similar.

01:06.860 --> 01:13.940
We have Engy model here and that sets up two way binding which means we react to every keystroke we

01:13.940 --> 01:15.200
react to event.

01:15.440 --> 01:20.390
But at the same time we update the value of the input with the value the user entered.

01:20.390 --> 01:25.460
I realize you would hit the problem we saw in the re-act example where we can type but we don't actually

01:25.460 --> 01:33.350
change the input the model doesn't work like this though since we also passed data to the value of the

01:33.350 --> 01:36.670
input we need to wrap it in square brackets.

01:36.980 --> 01:43.250
But remember we also listen to the event to the keystroke event to the input event the user emits with

01:43.250 --> 01:44.570
every keystroke.

01:44.930 --> 01:52.630
So we also have to add parentheses so we have this mixed syntax and that's a special case for Engy mall

01:52.630 --> 01:57.030
here which simply is there to allow you to implement to wear binding.

01:57.190 --> 02:01.030
So you don't mix the square brackets in parentheses in every case.

02:01.060 --> 02:02.650
But here we need to do that.

02:02.740 --> 02:05.620
That's just how Engy model of works.

02:05.620 --> 02:13.040
Now we can assign a reference to the property we want to store the value in and that would be message.

02:13.060 --> 02:15.720
So that is where we store the value we enter.

02:15.730 --> 02:18.600
But of course it's also a data source for the input.

02:18.630 --> 02:23.530
So which is output there just to make sure that we have the two way binding as mentioned.

02:23.530 --> 02:26.270
Now with that in place it should already work.

02:26.290 --> 02:32.910
One important note though Engy model is a directive made available by the form's module.

02:32.980 --> 02:36.500
So you need to have this important year to make it work.

02:36.610 --> 02:38.270
If you didn't have that.

02:38.290 --> 02:41.730
So if you would have that code you would get an error.

02:41.740 --> 02:46.660
So make sure that you indeed do have forms module here.

02:46.720 --> 02:51.620
Now with that let's save this and let's have a look at our running application.

02:51.760 --> 02:58.930
And if I now start typing here you'll see it updates below it and therefore we successfully can read

02:58.990 --> 03:02.540
what the user and dressier time to practice all these things.
