WEBVTT

00:02.850 --> 00:10.070
As you saw in the Getting Started section view just need some place in aged female some age HTML code

00:10.080 --> 00:12.200
that can take control over.

00:12.300 --> 00:18.480
So let's add such code here and with hash tag app and then tab you quickly create a def with the idea

00:18.480 --> 00:22.280
app and app is not an idea you have to use.

00:22.290 --> 00:24.140
You could use any ID here.

00:24.240 --> 00:28.390
It's just something you see quite a lot which is Wiles's stick to that.

00:28.400 --> 00:37.570
Now this simple is possible future yes app we can build is to have this app dev year and then go to

00:37.570 --> 00:44.800
the javascript section and create a new view instance and that's generally how you initialize view chairs

00:44.950 --> 00:51.880
you create such instances where each instance and you can have multiple ones takes control over some

00:51.880 --> 00:54.080
part of your HCM code.

00:54.520 --> 01:01.030
You pass a javascript object to this instance to configure it and then you tell it to take control over

01:01.030 --> 01:09.130
which part of your code with the L property reserved word of course which you chaps will recognize here

01:09.400 --> 01:11.920
you pass a C-s as selector.

01:12.130 --> 01:18.730
So here it's hash tag app to select this death and then now that you've got control over this part of

01:18.790 --> 01:24.130
H.T. email you can actually change it with the huge yes.

01:24.190 --> 01:29.270
Now what do I mean with take control over HVM L here though.

01:29.830 --> 01:35.710
Let's see how it works by adding a number property view Cheras will recognize the data property to that

01:35.770 --> 01:42.480
object you passed to the instance the data property takes a javascript object as an argument.

01:42.670 --> 01:48.440
And here we may define any data we want to work with in this view instance.

01:48.610 --> 01:52.050
So here that could simply be our name.

01:52.090 --> 01:56.740
Of course you can choose any name for this property you want could be age could be anything.

01:56.740 --> 01:58.090
I'll stick to name.

01:58.300 --> 01:59.920
I'll assign a value here.

01:59.920 --> 02:05.560
A string named Max and a normal javascript syntax you're right nothing special is this normal javascript

02:05.560 --> 02:07.970
object with a key value pair.

02:08.050 --> 02:15.280
Now that we registered this data field this name property we can use it in the H team all code in the

02:15.280 --> 02:23.350
day if we're controlling by adding some syntax view chips will recognize diabolically races opening

02:23.350 --> 02:24.690
and closing.

02:24.700 --> 02:27.980
This is called string interpellation basically.

02:28.090 --> 02:33.360
And it means that DHS will dynamically output some text in this place.

02:33.430 --> 02:37.750
The text here is simply the value of name.

02:37.810 --> 02:45.460
So what ever we enter between the curly braces has to in the end give us a string or something which

02:45.460 --> 02:48.960
can be converted to a string like a number or a boolean.

02:49.390 --> 02:52.380
So this could also be a function call here.

02:52.420 --> 02:57.220
So we could cause a method we were just read on the view object come back to this later.

02:57.460 --> 03:01.240
Or anything else which in the end gives us some text.

03:01.240 --> 03:07.090
If we now had control ENTRAR we see Mxs and we don't see curly braces name.

03:07.300 --> 03:08.270
So viewed as.

03:08.290 --> 03:17.350
Replaced curly braces name with the value of name Max that's a very simple view gigas application in

03:17.380 --> 03:18.440
the next lecture.

03:18.440 --> 03:21.120
I want to explain how this magic here happens.
