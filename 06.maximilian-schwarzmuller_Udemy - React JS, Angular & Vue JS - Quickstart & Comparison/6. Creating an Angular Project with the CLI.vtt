WEBVTT

00:02.810 --> 00:08.660
I did mention before that for setting up a single project we need to do more than just import a single

00:08.660 --> 00:15.950
script from a Cdn or a local file into our aged him the fall because angler uses typescript and because

00:15.950 --> 00:22.880
some features of a singular and how it compiles your code your templates so how it works behind the

00:22.880 --> 00:29.150
scenes I could say because of these reasons we need a more complex workflow which does a lot of analyzing

00:29.150 --> 00:30.530
and compiling for us.

00:30.710 --> 00:35.510
So that in the end we get some javascript code which will run fine on the browser but which we can't

00:35.510 --> 00:36.250
write like this.

00:36.290 --> 00:41.840
Or we could write it like this but we wouldn't have any fun this workflow we need to set up to create

00:41.900 --> 00:47.360
a single project involves a couple of steps and it can be very cumbersome and error prone to set it

00:47.360 --> 00:48.560
up on your own.

00:48.620 --> 00:53.900
Therefore a great tool which is offered by the angler team is the angular Seelye.

00:54.020 --> 01:01.040
It makes it very easy to create and manage angler projects and get a working elaborate and production

01:01.040 --> 01:03.500
ready work flow out of the box.

01:03.560 --> 01:05.790
I'm on seal I don't angle or not I know.

01:05.810 --> 01:09.720
And here we actually see the steps we need to run to install the Seelye.

01:09.860 --> 01:11.500
Now one prerequisite.

01:11.570 --> 01:17.550
We all had this in view chase and the reaction has Marchal is that you have node J.S. installed.

01:17.690 --> 01:24.320
So make sure you install the latest version of node j us so that you also have NPM notes package manager

01:24.410 --> 01:27.540
which is used to install the angler's seal package.

01:27.830 --> 01:29.050
Let's do that now.

01:29.210 --> 01:34.430
I'm in the terminal and as we saw on the web page about the Seelye we can simply install the Sealab

01:34.430 --> 01:39.650
are running NPM install Dasch g to install it globally on our machine so that we can use it from anywhere

01:39.650 --> 01:43.410
on our machine at Engler Seelye.

01:43.460 --> 01:48.620
Now that will work like this on the windows on Mac and Linux you probably need to give this command

01:48.620 --> 01:51.430
to write permissions by adding sudo in front of it.

01:51.440 --> 01:54.420
Now I'm prompted to enter my password and offer a disc.

01:54.470 --> 01:58.490
It will start installing the latest version of the Seelye.

01:58.490 --> 02:01.010
Now that may take a couple of seconds or minutes.

02:01.040 --> 02:03.340
I'll be back once it did finish.

02:03.480 --> 02:08.510
DC line solution did finish for me now and now you can navigate into the folder where you want to create

02:08.510 --> 02:12.390
your new angle project which will then be stored in a separate folder.

02:12.680 --> 02:16.190
So I'm already in that folder and here it can simply use energy.

02:16.190 --> 02:21.710
This command should now be available since you installed the Selye package engine you will create a

02:21.710 --> 02:24.640
new project and I will simply name it.

02:24.720 --> 02:29.550
Angular frame work intro.

02:29.580 --> 02:31.460
Now if I hit enter this will.

02:31.500 --> 02:37.650
As I said courageous new folder and install all the dependencies and set up a very basic app for S and

02:37.650 --> 02:38.120
dismay.

02:38.200 --> 02:39.890
To take a couple of seconds.

02:39.900 --> 02:46.540
I'll be back once this process finished Deak set uprose is finished here and now I can simply switch

02:46.570 --> 02:49.700
into the newly created package here.

02:49.890 --> 02:55.500
Angular framework introduced this newly created folder and then we can run Engy serve an novel command

02:55.510 --> 03:01.360
made available by the Selye to serve for this project so to start a little development server which

03:01.360 --> 03:03.930
will host it and start.

03:04.030 --> 03:06.000
It give us the address where we can then visit it.

03:06.010 --> 03:11.500
It will also do all the compilation I was talking about so compiling typescript to javascript and some

03:11.500 --> 03:14.940
other optimizations so that we get code which runs in a browser.

03:15.100 --> 03:18.610
And as you will see Jusco differs from the code we write.

03:18.820 --> 03:23.730
Now that start at the server we can find it here at localhost 4200.

03:23.770 --> 03:30.130
So let's visit this application now here localhost four thousand two hundred and you should see appliques

03:30.190 --> 03:31.620
which means it works.

03:31.620 --> 03:34.860
That's the basic app the angle Selye created for us.

03:34.930 --> 03:40.780
That's our first application now in the next lecture I want to open it in my ID web store and take a

03:40.780 --> 03:44.650
closer look at it and see what actually got created by Selye.
