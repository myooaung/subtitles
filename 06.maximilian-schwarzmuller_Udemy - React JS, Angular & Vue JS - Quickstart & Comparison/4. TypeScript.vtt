WEBVTT

00:02.610 --> 00:08.070
I mention that the four angler will use typescript not javascript.

00:08.130 --> 00:15.330
Well kind of typescript is just an extension to Javascript the way it works is that typescript Indiana

00:15.390 --> 00:21.810
offers more features than javascript even more futurist in Essex but it also covers a lot of the features

00:21.840 --> 00:28.650
iOS 6 will enter use like classes and so on but beyond Klaas's it also offers types and interfaces.

00:28.650 --> 00:35.700
So these are features as 6000 offer types actually are the reason why it's named typescript in typescript.

00:35.700 --> 00:43.020
We have strong typing which means when we define a variable we also have to define which type this variable

00:43.020 --> 00:43.660
will hold.

00:43.740 --> 00:48.810
In normal javascript if you have a variable you can assign any type and you can change that type during

00:48.810 --> 00:49.610
runtime.

00:49.620 --> 00:54.360
You could have a variable which holds a string initially and later holds a number not with typescript

00:54.600 --> 01:02.130
and therefore typescript and this extra type checking gives you extra security or extra safety I should

01:02.130 --> 01:08.010
say when you develop your code because before your code gets compiled to javascript that before it runs

01:08.010 --> 01:13.800
on the browser typescript will check your code and we'll find out if you are using some variables in

01:13.800 --> 01:19.920
a wrong way if you assign a wrong value or a wrong type to a variable so that indeed is a very nice

01:19.920 --> 01:20.500
feature.

01:20.610 --> 01:23.670
But of course typescript doesn't run like this in the browser.

01:23.670 --> 01:28.860
It's a language developed by Microsoft and it's not supported by browsers.

01:28.860 --> 01:35.550
However what does run in the browser is javascript S-5 5 and pretty much all browsers iOS 6 and some

01:35.550 --> 01:36.630
of the browsers.

01:36.780 --> 01:43.350
So typescript in the end always compiles to Javascript the typescript compiler estus one of the Futurist

01:43.350 --> 01:49.310
types can ships with and to set up little use in this module automatically has this compiler included.

01:49.350 --> 01:51.170
So we will write types code.

01:51.390 --> 01:55.810
But what people get in the end and what runs in the browser is javascript code.

01:55.830 --> 02:01.350
Now why don't we just write our English code in javascript to begin with and skip that type of part

02:02.100 --> 02:08.940
because Engler embraces typescript It uses many of the features type offers like classes which of course

02:08.940 --> 02:15.280
are all offered by iOS 6 but here to have some extra features like interfaces like decorator's.

02:15.310 --> 02:18.710
I will come back to debt and types them selfs.

02:18.960 --> 02:22.980
So if you want to learn angler make sure you use typescript.

02:22.980 --> 02:27.870
You might want to pick an extra course covering typescript you won't need for this module I will explain

02:27.870 --> 02:28.880
the basics here.

02:29.160 --> 02:33.480
But you should also be fine just starting with it and learning time along the way.

02:33.480 --> 02:38.220
It's not that complicated especially if you have a background in the novel strongly typed language like

02:38.220 --> 02:39.110
C-sharp.

02:39.420 --> 02:41.460
But in the end it really is a great improvement.

02:41.640 --> 02:48.090
But if you need to stick to vanilla javascript absolutely don't want to use typescript angler probably

02:48.150 --> 02:49.750
isn't the language of FREYBERG.

02:49.800 --> 02:50.840
You should use.

02:51.120 --> 02:52.980
Now with that out of the way.

02:52.980 --> 02:54.050
Enough of the talking.

02:54.060 --> 02:58.520
Let's finally set up our first Igor project and learn how we can set it up.
