WEBVTT

00:02.590 --> 00:08.290
So in the last lecture we learn about conditional it's about the if and how we could use it to conditionally

00:08.290 --> 00:14.510
display something in the dorm and never common use case is outputting a list and we already did this

00:14.520 --> 00:17.870
in the Getting Started section let's do it again.

00:18.360 --> 00:24.580
Let's say we have an ordered list and we got a button here.

00:24.670 --> 00:30.550
So when we click this button here I simply want to output a new list element.

00:30.550 --> 00:35.420
So I'll say new element on the bottom and then the unordered list.

00:35.470 --> 00:43.010
I don't want to output a list item where I say element does is hard coded in this element.

00:43.030 --> 00:49.750
Now I will add the On Click here to the button to also do something once you click it and I'll name

00:49.750 --> 00:51.590
this add element.

00:51.880 --> 00:53.860
There's of course the same method we have to add.

00:53.860 --> 00:58.770
So let's go to our methods property and add add element here.

00:58.780 --> 01:00.300
This is a function.

01:00.580 --> 01:05.470
And in this function here I now want to add new elements to an array of elements.

01:05.620 --> 01:08.140
So I'll create this array of elements here.

01:08.130 --> 01:14.140
The name is up to you and it's an empty array initially but whenever I click this button I want to reach

01:14.140 --> 01:17.680
out to this element and push a new element on it.

01:17.680 --> 01:22.900
And now this could be anything could be a string could be a javascript object could be an array whatever

01:22.900 --> 01:24.610
you like here.

01:24.850 --> 01:30.530
I will simply push this elements length plus one.

01:30.530 --> 01:33.830
So a number on to this array.

01:33.850 --> 01:41.590
Now if I do this and I go back to my template on the list item the element I want to repeat.

01:41.590 --> 01:48.940
Eventually I'll add the for a number directive recognized by View chess which basically tells you chess

01:49.180 --> 01:52.440
hey please recreate this element.

01:52.450 --> 01:53.210
You sit on.

01:53.240 --> 01:59.770
So the list item as often as required and to determine if that is required between the quotation marks

01:59.830 --> 02:03.050
we tell it through which elements to loop.

02:03.070 --> 02:08.440
So there are a couple of different loops syntax supported by View chess and you can check out the official

02:08.440 --> 02:10.870
documentation to learn more about.

02:11.110 --> 02:19.620
The basic and most common syntax is to say any variable name you like like L in elements.

02:19.630 --> 02:22.570
And again this part here can be named the way you want.

02:22.580 --> 02:28.960
Elementis possible any other name as possible but elements here of course refers to our data property.

02:29.290 --> 02:33.090
And now the list item will be repeated for every element in the array.

02:33.340 --> 02:37.920
So if we had control enter Let's open the console to see if we get any errors.

02:37.990 --> 02:45.700
If I now click new element you'll see I add new elements here and that is the amazing thing we can of

02:45.700 --> 02:46.150
course.

02:46.170 --> 02:52.430
You can update our list item and say element and then use stringin tribulation again.

02:52.450 --> 02:58.120
Keep in mind we're still in the view template here of course to output element which will just be a

02:58.120 --> 03:01.480
number as we define it to be one down here.

03:01.480 --> 03:07.480
So now the control enter you'll see element 1 to free and so on that is really amazing and that is how

03:07.480 --> 03:10.940
we can output lists with future as super simple.

03:10.960 --> 03:17.590
And if you have a look at the HMO code we have your entered javascript code and what we can do with

03:17.590 --> 03:18.220
that.

03:18.220 --> 03:23.640
Imagine writing this with vanilla javascript or with javascript only without future.

03:23.710 --> 03:25.050
Have fun with that.
