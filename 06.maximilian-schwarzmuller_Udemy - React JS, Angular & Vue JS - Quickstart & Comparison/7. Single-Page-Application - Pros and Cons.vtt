WEBVTT

00:02.550 --> 00:08.100
So now in the last lecture we had a look at the pros and cons for the full stack approach where we add

00:08.100 --> 00:13.200
the framework to the individual pages and create tiny apps for these pages.

00:13.200 --> 00:17.340
Now what about the single page approach which pros and cons do we have there.

00:17.370 --> 00:19.600
Let's start with the pros again.

00:19.740 --> 00:23.450
It kind of hasty in the words of the cons of the approach.

00:23.520 --> 00:30.300
It has a very fast reaction time obviously since we only use javascript and Javascript runs in the browser.

00:30.420 --> 00:34.990
Once we click somewhere and we change something it happens almost instantly.

00:35.100 --> 00:41.050
And that offers a great user experience because things will update if you need to load some data.

00:41.070 --> 00:46.370
Show us Spener but it will feel much more reactive and interactive to the user.

00:46.430 --> 00:51.420
And dad really makes up a lot and that really is important.

00:51.420 --> 00:52.910
Over advantages.

00:52.920 --> 00:59.490
We have a better separation of the business and presentation logic since our critical business logic

00:59.490 --> 01:01.070
has to run on the server.

01:01.140 --> 01:04.220
Javascript is always open to everyone.

01:04.260 --> 01:06.910
We have to differentiate.

01:06.960 --> 01:12.360
We will have to focus on the things which are important to the user experience in our front end code

01:12.660 --> 01:21.330
and will have to focus on the critical business logic items on the server and mixing it is harder.

01:21.360 --> 01:23.370
And thats a good thing.

01:23.370 --> 01:29.730
Additionally we can provide a great user experience because everything is reactive because everything

01:29.730 --> 01:31.870
happens very very fast.

01:31.980 --> 01:37.530
And because if we create a single page application we still have change in you or else.

01:37.530 --> 01:40.880
So it feels like a traditional web page to the user.

01:41.130 --> 01:47.620
But again things happen faster and we can react better to what the user is doing on our page.

01:47.640 --> 01:56.280
We can track the user better and provide a good user experience and we might also offer off line support

01:56.460 --> 02:00.570
again since we are using javascript and that runs in the client.

02:00.630 --> 02:04.080
Theoretically we don't need the internet connection all the time.

02:04.080 --> 02:09.000
So if we provide to write code we could ensure that our app still works.

02:09.000 --> 02:15.480
Once the user is off line or if he temporarily uses the internet connection again adding to this great

02:15.510 --> 02:19.480
user experience we do have disadvantages though.

02:19.740 --> 02:26.220
The biggest disadvantage is that search engine optimization is hard if you want your pages to get indexed

02:26.220 --> 02:30.210
by Google using a single page application is difficult.

02:30.240 --> 02:39.210
Now there are tools and ways emerging which make this easier which work with free rendering parts of

02:39.210 --> 02:43.150
your app on the servers so that Google sees what the user sees.

02:43.260 --> 02:48.920
But this is still emerging and doable but harder than in the average approach.

02:49.020 --> 02:57.030
So if se o is very critical to your page you might ever dig into these emerging ways or stick to the

02:57.030 --> 03:03.230
multi-page application where again you can still use the frameworks just not for a single page app.

03:03.390 --> 03:10.060
Additionally security needs more for it and with that I meant not that it's insecure.

03:10.380 --> 03:14.610
But since this way of creating apps is relatively new.

03:14.610 --> 03:22.160
A lot of the typical security issues are partly solved but you will have to dig into more tutorials

03:22.170 --> 03:28.690
more blog posts to read about best practices to learn how to solve specific security issues.

03:28.740 --> 03:33.230
So it's all doable but a bit harder than in the Old World.

03:33.270 --> 03:38.980
In the multi-page applications where many frameworks have that deeply baked into them.

03:39.480 --> 03:42.960
And another point it won't work without a script.

03:42.960 --> 03:46.320
If the user turned off Javascript your app won't work.

03:46.320 --> 03:52.220
Keep in mind however that only around 2 percent of all Internet users have that turned off.

03:52.260 --> 03:57.990
So that might not matter for you but if it doesn't matter a single page application is no option for

03:57.990 --> 03:59.500
you.

03:59.580 --> 04:04.780
So there were the advantages and disadvantages of creating a single page application.

04:04.950 --> 04:09.920
With that you hopefully get a good overview over the two approaches when you might use which in this

04:09.940 --> 04:16.020
course will dive into deep frameworks in a way which will allow you to create or to use them in ever

04:16.110 --> 04:16.810
way.

04:16.950 --> 04:21.900
But of course as always you will have to take some courses dedicated to these frameworks to learn more

04:21.900 --> 04:23.090
about them thereafter.

04:23.150 --> 04:26.010
But before getting to this point let's continue first.
