WEBVTT

00:02.630 --> 00:05.320
Knouted you learn about the binder and The Last Lecture.

00:05.360 --> 00:13.550
We can also have a look at dynamically setting and changing styles and see us as classes for our elements.

00:14.000 --> 00:22.670
Let's say we want to give each element here in the list item a style depending on where for the number.

00:22.670 --> 00:26.160
So this number here is odd or even.

00:26.690 --> 00:32.130
Well we can do this by using the point again and binding to style.

00:32.240 --> 00:37.220
So this normal style attribute each HDMI element supports this.

00:37.220 --> 00:42.190
Now expects to get a javascript object because it isn't the default style element anymore.

00:42.200 --> 00:49.850
It's now controlled by beauteous and for setting the style view now expects to get a javascript object

00:50.090 --> 00:54.220
where the key the property defines which style to set.

00:54.230 --> 01:00.210
Like with hied background color and the value is the actual style.

01:00.290 --> 01:06.660
Since this is now a javascript object we can of course now set the Stiner amicably so we could set back

01:06.660 --> 01:11.220
ground color and here it's important to use the camel case notation.

01:11.240 --> 01:21.470
So this javascript background color property Alternatively use single quotation marks to enclose background

01:21.470 --> 01:26.700
color with the dash because the dash is not a support of character in property names.

01:26.780 --> 01:30.050
So you have to choose either of the two approaches.

01:30.050 --> 01:35.270
So with that background color and now we want to set this dynamically right.

01:35.480 --> 01:44.150
So what we can do is we can add a new method get color maybe get color as a function therefore and all

01:44.150 --> 01:48.440
we do here is we return which color we want to set.

01:48.440 --> 01:55.970
So here I expect to get a number as an argument and then I simply check if the number is odd or even.

01:56.180 --> 02:07.700
So I can simply say return number then modulus is division operator of your 2 and if dad gives us back

02:07.760 --> 02:11.450
something we know it's OT because we have a remainder.

02:11.840 --> 02:18.710
If it is zero what we get back then it's true because then the division well can be made without any

02:18.710 --> 02:20.290
remaining part.

02:20.390 --> 02:25.160
So if turn number is equal to zero.

02:25.220 --> 02:27.610
Then we know it's a even number.

02:27.890 --> 02:31.490
So we can then that's just a turner expression again.

02:31.610 --> 02:41.570
We can then return let's say green for even numbers or red for all the Obert so odd numbers again just

02:41.570 --> 02:43.850
the ternary expression with condition.

02:43.860 --> 02:44.990
Then the.

02:45.380 --> 02:52.400
Well if the condition is true return value ante if the condition is false return value.

02:52.400 --> 03:00.380
We can now use get color here in the style by adding get color and simply pass element which is just

03:00.380 --> 03:02.790
a number as an argument.

03:03.080 --> 03:11.450
If we do this and we hit Control enter and add new elements you see ot red that's even green and so

03:11.450 --> 03:12.080
on.

03:12.230 --> 03:17.280
And I guess that's super awesome because how easy is that to get the set styles.

03:17.300 --> 03:21.860
And of course you can use any logic you want to dynamically set Stahl's.
