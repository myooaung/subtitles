WEBVTT

00:02.480 --> 00:05.100
Were you successful let's solve it together.

00:05.340 --> 00:11.360
I'll leave instructions here and above that I want to put an array of hobbies so add on to the list

00:11.990 --> 00:19.820
and I need to have an array of hobbies in the up component I'll get rid of the title here and simply

00:19.820 --> 00:23.050
add a new hobby's property.

00:23.090 --> 00:24.520
It's an empty array.

00:24.560 --> 00:29.090
And since my hobbies are strings I will set to type 2 string array.

00:29.120 --> 00:35.060
Now I will add some default values and since I do that I could have omitted the type definition only

00:35.060 --> 00:36.750
that here just to be clear though.

00:37.040 --> 00:43.760
And I'll add cooking and sportier knouted we have these hobbies.

00:43.760 --> 00:52.040
I can output them by adding a list item here and in this list item I want to output the individual hobbies

00:52.040 --> 00:53.710
I want to loop for all hobbies.

00:53.930 --> 01:00.820
Well we learned that we can use Ngee for for this here doesn't X was a let and then any name you like

01:00.830 --> 01:06.700
like hobby off a hobby is so off the property we have here.

01:06.950 --> 01:11.990
This will loop for all the hobbies here and with that I can use string deflation to output the individual

01:11.990 --> 01:12.710
hobby.

01:12.740 --> 01:15.900
Now if we save this and make sure Engy service still running.

01:15.950 --> 01:23.940
Restart it if you've created a new project or if you downloaded my project so restart Engy serve and

01:23.940 --> 01:26.960
you should see cooking and sportier awesome.

01:27.390 --> 01:32.390
Now of course that's not all I want to add a new hobby button and an input field.

01:32.430 --> 01:38.340
So let's add in part here and then let me add a button whereas a new hobby.

01:38.340 --> 01:40.340
Now to get the value the user entered.

01:40.470 --> 01:48.040
I will use two way data binding here so I will simply add new hobby input as a property.

01:48.060 --> 01:52.810
The name is totally up to you and it's empty string by default.

01:52.890 --> 01:59.580
Now in my template I can bind it with Engy model remember to add both the square brackets and the parentheses

02:00.080 --> 02:07.150
and you model and bind this to new hobby input that will get the data.

02:07.320 --> 02:14.760
Now I will add a click listener on the new hobby button where I'll execute on a new hobby and this method

02:14.760 --> 02:19.730
needs to be added to my app component type script file and an on new hobby.

02:19.740 --> 02:25.140
We could check if new hobby input is an empty string or not so if it's a valid data I will leave out

02:25.140 --> 02:25.680
the check.

02:25.680 --> 02:32.160
I will just reach out to my hobbies and now push this new hobby import onto desirÃ©.

02:32.250 --> 02:38.320
Now why push and not concat as indie re-act example because Anglo works differently.

02:38.520 --> 02:46.710
Unlike the state management and react here we don't have to be so secure about using immutable objects

02:46.800 --> 02:49.560
so we can simply mutate the existing array here.

02:49.590 --> 02:54.690
That's totally OK and that's just how we did it in the view as example.

02:55.170 --> 03:01.360
So now we can save this and we should be able to enter reading here.

03:02.450 --> 03:05.710
Like new hobby and Attis as often as we want.

03:05.710 --> 03:09.640
Also if you check the console we shouldn't see any error or warning.

03:09.940 --> 03:15.820
So one thing to note is that we don't need to add a key here like we did need to react.

03:15.860 --> 03:20.950
Angler will manage to stay friendly so that is the next task.

03:20.950 --> 03:21.670
Solved.

03:21.730 --> 03:23.480
Adding the apartment input.

03:23.500 --> 03:27.340
Now we want to make the hobbies clickable so that we can remove them.

03:27.430 --> 03:28.870
Nothing easier than that.

03:28.900 --> 03:33.580
I will simply split these lines to make it easier to read and then I'll add a click listener to the

03:33.580 --> 03:41.170
hobby and I want to execute on remove Harbi year and a little past the hobby I want to remove as argument

03:41.170 --> 03:41.580
here.

03:42.870 --> 03:47.040
Now I can use only move as a method in my typescript code.

03:48.930 --> 03:53.460
And here I noted I will get the hobby which in the end is just a string.

03:53.460 --> 03:54.550
Keep that in mind.

03:54.840 --> 03:59.790
Now I can find out where it is hubby lives are stored in the constants and so don't plan on changing

03:59.800 --> 04:06.150
does variable and a name and position name is up to you and I'll reach out to my hobbies and with index

04:06.180 --> 04:08.830
of a built in method provided by arrays.

04:08.940 --> 04:12.020
I can find this specific string in there.

04:12.600 --> 04:17.830
So now that I found this element I can of course remove it.

04:18.150 --> 04:24.570
So here I can now called this hobby's splice the same method as in the view Exxon-Mobile to remove a

04:24.570 --> 04:25.570
given element.

04:25.770 --> 04:30.980
So here I passed the position and then one since I only want to remove this element.

04:31.560 --> 04:34.440
This always splice will remove it.

04:34.440 --> 04:47.170
Now he's saved this and I add reading here and maybe also running sports reading that works just as

04:47.170 --> 04:52.300
a side note if you have the same string multiple times it'll actually only removed the first one all

04:52.300 --> 04:53.030
the time.

04:53.140 --> 04:57.180
But of course it doesn't make a difference to us here because it is the exact same string.

04:57.670 --> 05:02.550
So that is the next task solved.

05:02.560 --> 05:08.860
Now I want to display how deleted as soon as we did delete at least one so I'll add a new paragraph

05:08.880 --> 05:19.820
here where else say Harbi deleted and we can use NGF with a star to check whether a hobby was deleted.

05:19.840 --> 05:23.440
Now I will again use the same approach as in the other modules.

05:23.440 --> 05:30.930
I'll add a new property to my type of class hobby was deleted and by default it's false.

05:30.940 --> 05:33.120
So that's a boolean set to false.

05:33.460 --> 05:37.820
But as soon as we call on remove Harbi all said Hobby was deleted.

05:37.950 --> 05:39.240
Too true.

05:39.370 --> 05:43.030
Now we have a boolean which is changed at some point of time.

05:43.090 --> 05:48.910
We can simply used as boolean here so we can simply refer to how we was deleted to that property which

05:48.910 --> 05:50.390
holds true or false.

05:50.830 --> 05:57.400
If we now save this and we again add reading but we don't even have to add this here if I click on one

05:57.400 --> 06:00.220
to remove it we see hobby deleted.

06:00.340 --> 06:02.760
So that does also work.

06:03.220 --> 06:07.210
Onto the next task I want to add does hobby counter.

06:07.210 --> 06:09.770
So let's add another paragraph here.

06:10.570 --> 06:17.710
Where I'll say hobbies and then it's super easy to output the number of hobbies I can simply refer to

06:17.710 --> 06:22.690
my hobbies array and then output the length that's all.

06:22.690 --> 06:24.060
Now that was simple right.

06:24.190 --> 06:30.670
If I do this use the hobby's to here and if I start adding more this number grows and if I delete hobby's

06:30.850 --> 06:31.740
it shrinks.

06:31.900 --> 06:37.860
So that is how I can add this counter onto the dynamic styles.

06:38.060 --> 06:44.560
I one to style my hobby countered inimically depending on whether I have more or less than free hobby's.

06:44.820 --> 06:52.470
So what I can do to change to style is I can of course use and style so I'll wrap this in square brackets

06:52.470 --> 06:55.080
since I need to pass some data to this directive.

06:55.410 --> 06:58.740
And here I'll pass a javascript object.

06:58.740 --> 07:02.030
Now it's totally up to you on how you want to style this.

07:02.040 --> 07:09.510
I will change the text color here by binding to color see us as property and I want to set it to red

07:09.510 --> 07:15.630
if we have more than free and black so the default if we have less than 3 or equal to free will I can

07:15.630 --> 07:19.680
simply check hobby's length and see if it's greater than free.

07:19.800 --> 07:27.140
If that's the case using that turn their expression here all set the color to read overwise.

07:27.180 --> 07:29.160
Also the two black.

07:29.190 --> 07:31.180
No that's all if I now had save.

07:31.410 --> 07:39.720
You see it's black but if I start adding new hobbies as soon as it go above free hobbies to Hobby counter

07:39.750 --> 07:40.920
becomes red.

07:40.920 --> 07:47.520
So that's great and if I remove hobbies to go below for well then we have the black color again.

07:47.610 --> 07:50.010
No dad was using N-G style.

07:50.010 --> 07:56.670
Why don't we also use energy class and I can do this by defining this class here so I'll name it.

07:56.670 --> 08:04.550
Multiple hobbies and they're asked before I want to set my border to one pixel solid and red.

08:04.590 --> 08:11.550
Now I want to add just KLOS if we have more than three hobbies so I can simply add another directive

08:11.550 --> 08:12.160
here.

08:13.160 --> 08:16.820
It's Angie Clauss.

08:17.040 --> 08:21.960
And here again I pass a javascript object now with the key being the class name.

08:22.080 --> 08:27.530
I have to wrap it in quotation marks since my class name model hobby's contains a dash.

08:27.900 --> 08:29.940
Multiple hobbies.

08:30.210 --> 08:32.920
And now the value is if the should be attached or not.

08:32.940 --> 08:34.460
So true or false.

08:34.470 --> 08:38.460
So again I'll add my check of Hobbes length is greater than 3.

08:38.460 --> 08:44.240
Now if I do that and we go back to the running application we don't see any special special styling.

08:44.250 --> 08:46.170
If I add one hobby nothing changes.

08:46.170 --> 08:53.010
If I add another one with the red color and the red border CDnow it indeed did change and it applies

08:53.040 --> 08:57.220
both dynamic styles onto the final task.

08:57.360 --> 08:59.700
Let's outsource the hobby element.

08:59.730 --> 09:06.620
So this list item into its own component and you learned how to do this or create a new folder here

09:07.140 --> 09:08.550
and I'll name it hobby.

09:08.570 --> 09:13.000
The name is up to you but again since I have a single hobby in there it kind of makes sense.

09:13.050 --> 09:17.100
Now add a new component file hobby darts component or TS.

09:17.190 --> 09:23.760
Following that convention of describing what's inside the file and here in this hobby component types

09:23.760 --> 09:25.920
can fall or export my class.

09:26.090 --> 09:27.690
The hobby component

09:30.270 --> 09:36.470
and here I will add at component which needs to be imported from at angular core.

09:36.480 --> 09:43.440
As you learned now here I want to define a select or app hobby maybe to have a unique selector and as

09:43.440 --> 09:49.290
you learned we need a template you could use template you are l to have a relative path to an external

09:49.290 --> 09:52.170
file or just template to have an inline template.

09:52.170 --> 09:54.770
Here I'll go with the latter approach.

09:54.810 --> 10:01.320
I'll add back ticks to again be able to write a modeline string and here I can simply go to my app component

10:01.350 --> 10:07.100
HMO file and basically copy that code here.

10:07.210 --> 10:07.980
Add it here.

10:07.980 --> 10:12.960
Remove Engy for I don't want to repeat the element inside of that component.

10:12.960 --> 10:17.080
I leave to click listener here and I'll leave hubby here.

10:17.070 --> 10:23.400
However I don't have to pass Hawi to remove hobby year and year.

10:23.430 --> 10:26.910
I now need to add the hobby property to that class.

10:26.910 --> 10:31.510
It's a string I want to be able to set us from outside so as you learned.

10:31.590 --> 10:39.070
I also have to add input here to be able to do so and we need to import import from an Anglo core.

10:39.330 --> 10:45.660
Now hobby can be passed in from outside backwood renamed to Hobby name so that we don't have any naming

10:45.660 --> 10:49.410
confusion with the names you use outside of this component.

10:49.470 --> 10:53.730
However it doesn't really matter just for you to have an easier differentiation.

10:53.820 --> 10:56.870
So hobby name set from outside.

10:56.870 --> 10:59.030
I'll take care about the listener later.

10:59.130 --> 11:11.340
For now I will only at the on remove hobby method to your now India component I want to use my new component.

11:11.510 --> 11:13.540
So we named it app hobby right.

11:13.550 --> 11:15.580
So I'll use that as a tag.

11:15.890 --> 11:22.120
I want to loop through my hobbies and still repeat this component as often as needed for all my hobbies.

11:22.460 --> 11:29.190
I'll remove the click listener here don't need debt and I don't use string or jubilation here.

11:29.190 --> 11:31.810
Instead I need to pass the data.

11:31.820 --> 11:34.190
Q My hobby component.

11:34.490 --> 11:41.390
So here I'm one a blind to my hobby name property I have here so let's do that.

11:41.390 --> 11:48.040
Hobby name and that was the reason why I renamed it so that it's easier to differentiate because here

11:48.040 --> 11:51.390
I will pass Harbi so that variable of my loop.

11:51.460 --> 11:57.880
Note that I just need to remove that so that the Linter doesn't complain that we have valid code style

11:57.880 --> 11:58.820
here.

11:58.840 --> 12:01.560
Now we would almost be able to use this.

12:01.750 --> 12:03.600
But do you remember what's missing.

12:03.880 --> 12:05.430
Well let's have a look at the running app.

12:05.440 --> 12:07.760
Or D not running app.

12:07.900 --> 12:15.580
If we open the console we get an error we saw before that Apple B isn't a known element.

12:15.610 --> 12:18.430
Of course it isn't because we didn't add it to app Marchal.

12:18.430 --> 12:20.080
You must not forget this.

12:20.200 --> 12:27.310
So let's go to declarations and add our hobby component and its import pointing to that hobby component

12:27.310 --> 12:28.390
file here.

12:28.540 --> 12:30.640
Once we added the two declarations.

12:30.670 --> 12:37.280
Now if I save this we see that's looking good and if I start adding hobby's again that's all working.

12:37.330 --> 12:43.430
Removing doesn't work though because our own remove Harbi thing doesn't do anything.

12:43.540 --> 12:50.530
So let's make that thing that method to work is basically one to emit my own event here.

12:50.860 --> 12:54.160
So did the parent component the app component here.

12:54.160 --> 12:57.350
I can listen to it and then added my array.

12:57.730 --> 12:59.260
Well nothing easier than that.

12:59.320 --> 13:01.410
You learned how to create your own event.

13:01.540 --> 13:10.690
We could name and Harbi removed any name you like and we use the event emitter which we import from

13:10.710 --> 13:16.800
at a lower court we need the new keyword to create an instance of this class.

13:17.020 --> 13:18.490
And here we need parentheses.

13:18.490 --> 13:25.660
And also since this is a generic type D is smaller than and greater than signs to tell which kind of

13:25.660 --> 13:26.740
data do we mature.

13:26.800 --> 13:29.570
Here it's going to be a string.

13:29.770 --> 13:37.870
Now since we emit a string here in on remove hobby I will simply call Harbi removed emit and emit does

13:37.960 --> 13:39.190
hobby name.

13:39.220 --> 13:43.460
So our property here which is a string of course again.

13:43.600 --> 13:46.430
So we can listen to it as he went from outside.

13:46.450 --> 13:50.200
I need to add at output in front of it with parentheses.

13:50.200 --> 13:55.190
Don't forget these and then import output from.

13:55.210 --> 13:57.070
At a low cost.

13:57.070 --> 14:04.600
Now if they can go back to the component HMO file and listen to that event on our custom component here.

14:04.810 --> 14:07.640
So here all now listen to.

14:08.070 --> 14:17.310
Be removed and now I can execute my method on remove hobby or I'll name it on Harbi remove to be a bit

14:17.310 --> 14:21.540
more in line with our custom event name on hobby removed.

14:21.690 --> 14:27.060
Execute this here and where important past dollar sign event.

14:27.210 --> 14:29.600
So extract the data or use this very well.

14:29.650 --> 14:35.760
Angler gives us to extract the data we emit no dollar sign event we'll just hold the string in the end

14:35.790 --> 14:37.560
because that is what we emit.

14:37.710 --> 14:40.290
So dead code here should still work.

14:40.290 --> 14:45.800
Now with that if I save this one final time we opened Konsole to check any errors.

14:45.960 --> 14:54.900
If I add reading here that works and now if I start removing elements that also works again and that

14:54.900 --> 14:57.210
are all the tasks solved.

14:57.280 --> 15:00.290
That's our regular exercise finished.

15:00.360 --> 15:07.140
I hope a lot of these concepts now are clearer to you and you feel confident using these very basics

15:07.140 --> 15:07.830
of angular.
