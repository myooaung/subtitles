WEBVTT

00:02.560 --> 00:05.610
In the last lecture we saw that we hit a wall.

00:05.690 --> 00:12.110
If we try to create reusable pieces of code with view chairs but of course such a feature would be nice

00:12.110 --> 00:16.110
to have and therefore Buquet as office components.

00:16.280 --> 00:18.290
And that's not just a little bonus.

00:18.320 --> 00:24.110
This is actually a huge part of the view chairs and it will become even more important once we dive

00:24.110 --> 00:27.170
into the single page application approach.

00:27.170 --> 00:34.660
So let's say I want to have a component which basically outputs my user name which is reusable.

00:35.120 --> 00:39.980
So I'll get rid of this for instance and of this death year.

00:40.190 --> 00:47.510
Instead I wanted to find a view component which I can use in my existing templates in my existing view

00:47.510 --> 00:54.440
instances therefore I'll do it at the very top of my file so that I can use it in all the code below

00:54.440 --> 00:55.080
it.

00:55.430 --> 01:01.620
We define a new component by accessing the view instance without new and without parentheses.

01:01.850 --> 01:05.580
But there we call the static component method.

01:05.600 --> 01:07.390
This method takes two arguments.

01:07.550 --> 01:10.820
The first one is the selector of the component.

01:11.150 --> 01:16.760
And this again is a CSSA selector but typically here you choose D textile.

01:16.760 --> 01:23.080
So for example app username does allows you to now use this component.

01:23.150 --> 01:30.860
Let's say right here at the top at the beginning of our first instance by adding app username clearly

01:30.860 --> 01:36.970
not HVM element you have at your disposal by default but now recognized by future as.

01:37.040 --> 01:40.920
Since we register this as our own component here.

01:41.000 --> 01:47.120
Now the second argument is a javascript object where we configured a component just like we configure

01:47.210 --> 01:51.470
a normal view instance with two important differences though.

01:52.360 --> 01:55.640
The first important difference is we don't set up Al.

01:55.720 --> 02:00.360
We don't need to do that because here we don't control part parts of the dorm.

02:00.430 --> 02:07.340
Instead here we already have a select or we already tell you chairs where we want to insert this component.

02:07.840 --> 02:10.190
The second important piece is data.

02:10.480 --> 02:18.650
Your data is not an object but it's a function which returns the object which then holds the actual

02:18.650 --> 02:19.200
data.

02:19.310 --> 02:20.400
So return.

02:20.570 --> 02:27.880
And then let's say username Max does has something to do with the internals on how beauteous works.

02:27.920 --> 02:33.530
If we were to have an object here it would actually overwrite the optic of abuse such as of the same

02:33.530 --> 02:34.250
component.

02:34.370 --> 02:41.850
So therefore we have to encapsulate our object in a function that's important but you might recognize

02:41.850 --> 02:45.140
the one thing that's all nice we can use our component.

02:45.470 --> 02:49.100
But where do we define the hemol killed of this component.

02:49.550 --> 02:51.010
Well for.

02:51.230 --> 02:57.790
We got a number property we can use that as a template template.

02:58.040 --> 03:02.600
It's normally for a normal instance generated automatically by the task.

03:02.690 --> 03:10.720
As I told you by selecting it with this L element and then Mujeres automatically composites to javascript.

03:10.760 --> 03:15.680
Now since components were the other way around we have to define our template here and the template

03:15.710 --> 03:17.230
is a string.

03:17.270 --> 03:21.490
And this of course means that we have some well things to watch out for.

03:21.500 --> 03:27.980
For example multiline strings it's not that easy to create possible especially with six features like

03:27.980 --> 03:32.280
string expressions but here not super easy.

03:32.330 --> 03:36.630
We'll soon learn a much easier way of creating Capones though.

03:36.860 --> 03:41.170
Let's use a simple way here though let's say that we wanted a paragraph.

03:41.270 --> 03:47.860
So let's create our paragraph here where we output the user name for let's use stringin for Appalachian

03:48.070 --> 03:56.350
the features you learn about eventless sinning interrelation we bind the if for all to work in here

03:56.360 --> 03:57.600
or in this template.

03:57.920 --> 04:03.640
So you I want to put a user name referring to the user name of this component.

04:03.860 --> 04:05.230
For now word control enter.

04:05.240 --> 04:09.020
We therefore see Max here that is our component.

04:09.260 --> 04:12.290
Let's rename it to Chris to see that even clearer.

04:12.290 --> 04:21.490
Chris Antek read thing now is if we reuse this well then as soon as I had control enter We have two

04:21.530 --> 04:22.570
Chris here.

04:22.580 --> 04:28.480
Now we get a reusable component which we can use in any of our view instances.
