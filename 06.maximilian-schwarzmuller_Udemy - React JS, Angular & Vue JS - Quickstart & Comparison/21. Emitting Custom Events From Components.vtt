WEBVTT

00:03.010 --> 00:06.950
We were able to pass our own data into the component.

00:06.970 --> 00:13.150
How about listening to our own events in view a chance we could emit our only event in re-act we had

00:13.150 --> 00:17.940
to pass event handler to dead on to that component.

00:18.160 --> 00:23.800
No actually we could pass event handler here too but angle does have an easier way or a nice way of

00:23.800 --> 00:32.770
creating a custom event I can add my own event let's named user clicked the name is totally up to you

00:32.770 --> 00:40.690
and that is just an old property and I will assign a value which is initialization of a class angler

00:40.730 --> 00:41.590
offers.

00:41.710 --> 00:46.240
So I'll use the new keyword to create a new instance of a class.

00:46.240 --> 00:48.760
Classes are just blueprints you could say.

00:48.980 --> 00:53.940
And to create objects based on these classes you have to add new.

00:54.040 --> 00:56.140
Now which class do I want to use.

00:56.150 --> 01:03.050
It's the event emitter class and you need to add parentheses to kind of executed like a method and event

01:03.120 --> 01:10.900
motor needs to be imported from an Anglo core to that as the name implies is a class which offers some

01:10.900 --> 01:13.760
functionality to emit our own events.

01:14.860 --> 01:21.990
Event better actually is a generic type generic types are special types which means the event dimeter

01:22.000 --> 01:27.790
class can in this case emit events or holding different types of data.

01:28.090 --> 01:30.550
You could emit event which passes a string.

01:30.550 --> 01:38.410
You could even emit a vent which passes a number two Inforum angler and most of all types stript which

01:38.410 --> 01:44.890
type of data you will eventually emit we add lower than and greater than signs before the parentheses

01:45.250 --> 01:46.910
and then the type of data we want to emit.

01:47.020 --> 01:51.590
Here it's a string because I want to emit a username which is a string.

01:51.710 --> 01:57.670
Now that is our custom property holding a reference or holding this object to see Vandeman or object

01:57.670 --> 01:59.260
we instantiate it.

01:59.260 --> 02:08.170
Now I can add a click listener here and it can execute on user name collect or any name you want.

02:08.170 --> 02:10.290
Don't forget the parentheses.

02:10.300 --> 02:16.750
Now I can add this as a method to my typescript code and here I now want to refer to my user clicked

02:17.050 --> 02:22.450
property which again holds this event dimeter object and used the emit method.

02:22.480 --> 02:24.760
This object provides.

02:24.760 --> 02:29.070
Now here we need to emit a string because that is what we defined here.

02:29.400 --> 02:32.240
And I want to emit my username here.

02:32.800 --> 02:36.760
Now with that we passed that username with our event.

02:36.790 --> 02:42.520
The main problem we have right now is I want to listen to that event in my app component so it would

02:42.520 --> 02:50.410
be nice if I could listen to in parenthesis to use that singular event syntax as used for click and

02:50.410 --> 02:56.000
then listen to the event which probably has the same name as my property user clicked like that.

02:56.210 --> 03:02.650
However out of the box that doesn't work just like we couldn't pass data to username before we added

03:02.690 --> 03:05.600
an input we have to form angular.

03:05.720 --> 03:11.820
That this should leave the scope of that component that we want to be able to listen to that event.

03:11.890 --> 03:17.210
Outside of that component nobody's syntax makes a lot of sense.

03:17.380 --> 03:26.350
If we remembered that at input allowed us to send data from outside so to input data from outside here

03:26.440 --> 03:28.300
we add at output.

03:28.510 --> 03:30.800
And I guess this really makes sense.

03:30.850 --> 03:33.370
We want to output some data to the outside.

03:33.370 --> 03:40.310
We want to output our event output also needs to be imported from an English court.

03:40.740 --> 03:47.830
And now we can go back to the app component file and listen to user clicked in parentheses and execute

03:47.830 --> 03:58.540
some code here like on user was clicked like debt capital W maybe I will copy that and also added to

03:58.570 --> 04:01.050
my ever component.

04:01.300 --> 04:07.530
And now I need to get data which we emitted and that actually works exactly in the same way as in beauteous

04:07.920 --> 04:15.580
we add a dollar sign event that's a reserved variable name provided by angler which will always give

04:15.580 --> 04:18.660
you any data of event ships.

04:18.820 --> 04:24.640
That's also available for native events like to click here Dolorosa event would give us the click event

04:24.760 --> 04:31.510
object the normal object you can get in the javascript to here in the case of our costumey when it's

04:31.510 --> 04:32.630
the day that we emerged.

04:32.710 --> 04:35.380
So the user name a string in the end.

04:35.920 --> 04:42.670
So now we only have to implement on user was clicked in our app component typescript file like this.

04:42.790 --> 04:46.870
And here we know we will eventually get the user name as a string.

04:47.050 --> 04:51.090
So a user name you can give us any name you like and we know it's of type string.

04:51.090 --> 04:56.500
So why don't we tell types that we know that we can do this by adding this type definition as a side

04:56.500 --> 04:56.890
note.

04:56.950 --> 05:00.520
We could also do this here for element where we noted it will be a number.

05:00.730 --> 05:03.700
You don't have to add it as you saw it worked without it.

05:03.700 --> 05:08.470
But it's a good practice to be explicit about the types you're using it makes sure that you get the

05:08.470 --> 05:13.380
best support types can offer you and that will inform you if you use a wrong type.

05:13.660 --> 05:15.130
So your username is a string.

05:15.130 --> 05:22.150
We know that because we emit a string here we can now simply again follow an alert and simply output

05:22.330 --> 05:23.850
that username.

05:23.860 --> 05:30.310
Now if we save this and we go back to our running application if I click Chris It opens on a new screen.

05:30.400 --> 05:32.450
But here we see that it never click.

05:32.490 --> 05:34.290
Anna we see Anna.

05:34.420 --> 05:37.790
So that is how we can implement our own events in angler.
