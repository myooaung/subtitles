WEBVTT

00:02.500 --> 00:07.390
In the last lecture we add links but what is that hashtag doing here.

00:07.540 --> 00:12.170
Keep in mind that now we're routing on the client in javascript.

00:12.340 --> 00:17.900
However if you enter a new you are l by default.

00:17.920 --> 00:23.090
So if we manually type log here we send the request to the server.

00:23.260 --> 00:25.090
In our case here to our little node.

00:25.340 --> 00:29.710
Development server which was spun up by web pick automatically.

00:29.710 --> 00:37.270
Now if you send this route to the server and the route would just be slash block it would work on our

00:37.270 --> 00:43.090
develop unserer because it is configured in a certain way but by default you would get a 4 0 for error

00:43.150 --> 00:49.360
because your server probably doesn't know a slashed log route it would look for a Flashblock folder

00:49.660 --> 00:54.030
or if you have some framework handling the routing it would search for such a route in this Fromberg

00:54.040 --> 00:59.580
routing file but it wouldn't find that because the router is registered in javascript on our front end.

00:59.920 --> 01:06.490
So by adding the hash tag in between we basically tell the server you're only responsible for the part

01:06.520 --> 01:12.580
in front of the hash tag which is just a root domain and therefore it will serve to index HMO file and

01:12.580 --> 01:14.920
the Thereafter often can be ignored by you.

01:14.920 --> 01:21.070
That is handled by javascript and that is how we ensure that routing works even if and that's the common

01:21.070 --> 01:24.700
case the backend doesn't know that route.

01:24.700 --> 01:31.660
However if you want to have a pretty you are l you can configure your server to always send back to

01:31.660 --> 01:35.310
index HVM file in case of 4 0 4 errors.

01:35.320 --> 01:44.140
So in case of route's it doesn't recognize like this one to tail the router to use dead without a hash

01:44.140 --> 01:48.730
tag mode use that mode to history.

01:49.060 --> 01:50.890
It's called The History mode.

01:50.890 --> 01:57.730
If you have that well known hash tag path if you set the mode two days you will recognize that if you

01:57.730 --> 02:00.790
now want to get around we don't have a hash tag in the world.

02:00.910 --> 02:03.790
Even if we reload the page and it will still work fine.

02:03.850 --> 02:11.500
But this only works if your server is configured to always return the next HDMI file in case of 4 0

02:11.500 --> 02:13.030
4 errors.
