WEBVTT

00:03.200 --> 00:08.730
And the last lectures we learn a lot about component's how they work and how we can use state and props

00:08.850 --> 00:15.120
props to pass data in from outside and state to change data from within the component before we have

00:15.120 --> 00:19.750
a look at creating multiple components to construct or to build our Dom.

00:20.090 --> 00:25.680
Let's learn more about how we can output Canth and conditionally in this lecture.

00:25.680 --> 00:32.760
In view we had the if to tell view chairs only rendered this part of the template if certain conditions

00:32.790 --> 00:35.840
met what we can do the same here.

00:35.850 --> 00:39.450
Keep in mind in the end we just write everything and Javascript.

00:39.450 --> 00:45.030
And here in the render method of this component we return what should get shown on the dorm or in the

00:45.030 --> 00:45.710
dorm.

00:45.720 --> 00:48.820
Now therefore we can easily control what should get shown here.

00:49.020 --> 00:54.510
Let's say we want to show a paragraph which says name updated if we updated the name.

00:54.510 --> 00:56.150
Now we don't have a directive.

00:56.160 --> 01:01.150
We could place here which would tell the if if we should show that.

01:01.410 --> 01:09.990
But instead we have to think about it in the re-act way we could say that we have a certain variable

01:10.320 --> 01:13.790
alignment update paragraph but the name is totally up to you.

01:14.100 --> 01:16.320
And by default that's an empty string.

01:16.350 --> 01:23.420
So nothing not I want to change this variable and place the actual paragraph in there.

01:23.610 --> 01:30.090
If my name was changed so I will simply create a normal javascript if statement where I will check if

01:30.180 --> 01:35.310
this state name equals this prop's name.

01:35.310 --> 01:39.920
Keep in mind prop's are set from outside a not changed state is changed.

01:40.170 --> 01:42.840
To be precise I will check if it is not equal.

01:42.840 --> 01:47.920
If it is not equal that means we did change to state so we did change the name.

01:47.940 --> 01:55.550
So therefore if this is true I will set up date paragraph so this variable here too.

01:55.830 --> 02:04.830
Well keep in mind we can simply use JJ as XO to a new paragraph where it will say name updated and then

02:04.830 --> 02:06.410
update paragraph is set in.

02:06.420 --> 02:11.900
Well every case is set to nothing by default but it is set to this paragraph.

02:11.900 --> 02:19.620
If this is true so then I can go into my chest X which I return in the end and use single Cauley braces

02:19.620 --> 02:24.270
to output something dynamically or to output update paragraph.

02:24.270 --> 02:30.660
Now if I now had control enter you don't see it but if I click Change name you see name updated and

02:30.660 --> 02:33.600
this really is just the re-act way of thinking about it.

02:33.840 --> 02:35.750
You write javascript code here.

02:35.790 --> 02:37.530
I can't emphasize it enough.

02:37.620 --> 02:43.410
So use the javascript features use if statements to change some variables and then use the single curly

02:43.410 --> 02:51.420
braces syntax to output variables or results of function calls in the return block here of your render

02:51.420 --> 02:54.790
method to define what should get rendered to the dawn.

02:54.840 --> 02:56.710
And since we change to state.

02:56.850 --> 03:02.460
Keep in mind reactivates We'll compare the old Dom to the new one and therefore it will rerun the render

03:02.460 --> 03:08.220
method here in the end and therefore this code gets rerun Whenever to change state changes so it will

03:08.610 --> 03:12.460
recognize the DUP the paragraph is set to a different value and day.

03:12.480 --> 03:15.690
For correctly outputted in our real Dom here.
