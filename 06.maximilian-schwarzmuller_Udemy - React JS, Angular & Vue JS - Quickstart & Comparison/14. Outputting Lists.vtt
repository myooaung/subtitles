WEBVTT

00:02.710 --> 00:07.250
In the last lecture we learn how to use NGF to conditionally display something.

00:07.450 --> 00:14.920
Of course what we saw before and what I want to use now too is how we can at least so below that button

00:15.190 --> 00:18.030
I might want to output a list for that.

00:18.040 --> 00:23.890
First of all we'll add another button which says new elements so that we can add list items and then

00:23.890 --> 00:29.680
here I want to add a click list to execute on ADD element with parentheses.

00:29.680 --> 00:32.210
That's just how the syntax works Nagler.

00:32.260 --> 00:38.200
Now with that I can go to my app component and for one add this method so that we actually have this

00:38.200 --> 00:39.940
method which we try to execute.

00:40.180 --> 00:45.850
But I also need an array of elements so I'll add a number property because we want to have numbered

00:46.090 --> 00:52.240
data piece basically which are named elements and which is empty array initially.

00:52.240 --> 00:59.400
Now in this elements array I want to store numbers here we can use a typescript feature.

00:59.470 --> 01:05.760
Do you remember that I told you that typescript allows you to define which type of variable may hold.

01:06.070 --> 01:08.380
Well we don't do that anywhere in this code.

01:08.740 --> 01:14.440
And we are not just assigning types to variables and properties but neither name nor elements have some

01:14.440 --> 01:16.120
type definition.

01:16.120 --> 01:19.750
The reason for this is the typescript can also inferred the type.

01:19.750 --> 01:25.300
So since we assign a string here it and first name is of type string.

01:25.300 --> 01:30.760
Now for elements it knows that it is of type array but we could also tell it which elements to will

01:30.790 --> 01:31.490
actually hold.

01:31.510 --> 01:33.070
So which type of elements.

01:33.190 --> 01:36.560
It could be a mixed array but in this case it will only hold numbers.

01:36.730 --> 01:43.840
So we can define this type by adding a colon off-Terra elements and the number with square brackets

01:43.930 --> 01:45.980
which says it's an array of numbers.

01:46.030 --> 01:50.710
If we would have just number we would say it's just a number which clearly is not the case.

01:50.710 --> 01:57.630
So now we may only add numbers here and if we try to add something else we will actually get an error.

01:57.640 --> 02:04.270
So here in on an element let me reach out to my elements array push a new element on it and I will use

02:04.270 --> 02:09.020
the elements length for this plus one which of course is a number.

02:09.070 --> 02:11.890
Now with that we're adding elements to the array.

02:11.980 --> 02:16.560
Now to display it I'll go back to the template and I'll add the unordered list.

02:16.600 --> 02:22.150
And here I have a couple of list items here it works again kind of similar to view cheapass But we also

02:22.170 --> 02:30.000
defined one last item and then added a directive to it to repeat this item as often as needed.

02:30.010 --> 02:37.240
The directive and angler's case is star because it's a structural directive again and for it it's a

02:37.240 --> 02:39.640
structural directive because it again adds.

02:39.670 --> 02:44.460
And possibly if we reduce the array removes elements to it from the DOM.

02:44.470 --> 02:51.490
So change is done here Engy for it then has to loop through the elements in our array and the syntax

02:51.490 --> 02:58.320
here actually is the same syntax as in the for loop in javascript or in typescript.

02:58.550 --> 03:05.360
We define a variable and we use lead for this lead and Konst are ESX keywords to define variables basically.

03:05.380 --> 03:12.750
So let defines a variable and you can choose any name you want like L or aliment I'll choose L here.

03:13.130 --> 03:15.490
And then you'd have loop through the array by writing.

03:15.530 --> 03:20.370
Let L off and then the name of your array elements in my case.

03:20.390 --> 03:27.470
So referring to this elements property here with that were elements therefore of course with that were

03:27.470 --> 03:28.940
looping from that array.

03:29.090 --> 03:33.190
And now this will replicate this list as often as needed.

03:33.350 --> 03:39.590
Since we get to individual element of each iteration and storing it in this L variable we can also output

03:39.590 --> 03:47.780
this year so we could output L or to stick again with the example from before element l like this.

03:47.780 --> 03:53.960
Now with this if I say if that Engy serve again is still running you'll see we get this new new element

03:53.960 --> 03:54.340
button.

03:54.350 --> 04:00.170
And if I click it we add elements here and this is how we can render lists with angular.
