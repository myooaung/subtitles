WEBVTT

00:02.430 --> 00:05.930
So let's start solving this assignment together.

00:06.150 --> 00:14.340
I'll start by adding div Dev D id app and we already or do we and theriac Dom here so we can immediately

00:14.370 --> 00:18.820
create our component and we'll create a class for this which I'll name.

00:18.840 --> 00:26.020
App which extends re-act component just as you'll learn to create a component with that class syntax.

00:26.280 --> 00:32.050
Now there you learned we need to have a render method which should return some GSX which can be output.

00:32.070 --> 00:38.440
I'll put this in parentheses to make or to be able to write multi-line GSX code and here for now it

00:38.460 --> 00:45.540
will simply output a paragraph where I say my hobbies something like that will improve this app soon.

00:45.570 --> 00:56.130
Now we need to call re-act Dom render to output is root component so I'll use appliqued it's a self-closing

00:56.130 --> 00:57.630
h tim l element.

00:57.930 --> 01:03.500
And don't want to put it in this place so I simply get access to it with normal Javascript code.

01:03.600 --> 01:10.080
Document queries selector and then selecting hash tag app to get the element with the idea.

01:10.380 --> 01:16.580
If we have control enter we should see my hobby stare and that's part 1 of the exercise solved.

01:17.010 --> 01:19.330
But we shouldn't only output this paragraph.

01:19.410 --> 01:24.080
You may actually remove it if you don't like it but we should output an array of hobby's.

01:24.360 --> 01:29.930
Now for this I will store desirÃ© of hobbies in my initial state so that we can change it thereafter.

01:30.210 --> 01:37.470
So I will add a constructor to the app to the app component and I left out a space between constructor

01:37.470 --> 01:43.360
and renderer to save some space so that it's easier to read all the code in this constructor.

01:43.560 --> 01:49.350
We noted we get the props even if we don't receive any props here we still have to fetch them and we

01:49.350 --> 01:55.480
should then call super and pass the props to the parent constructor of re-act component here.

01:55.680 --> 02:03.340
Then I can set up my own state by calling this state and setting it equal to a javascript object.

02:03.630 --> 02:09.390
And here I simply want to have my hobbies array and it's not an empty array initially.

02:09.390 --> 02:15.590
Instead I'll add cooking and sports maybe something like that.

02:15.630 --> 02:20.680
Now I want to output this array because that's all that hask we have here.

02:20.790 --> 02:23.400
So let's change this year.

02:23.420 --> 02:23.810
Let's.

02:23.850 --> 02:27.510
Well let me actually leave this paragraph here but important.

02:27.630 --> 02:35.310
Let's wrap it in one diff because you must only have one root element in your Jarras X code.

02:35.460 --> 02:38.870
So sibling elements on the root level are not allowed.

02:39.060 --> 02:45.950
So let's put our paragraph in there and then add an ordered list to output our list items.

02:45.960 --> 02:48.820
Do you remember how we could create such a list.

02:48.990 --> 02:51.470
We simply use the map method.

02:51.810 --> 03:01.440
Now we could do this in line here in Singler calling braces accessing this state hobby's map and then

03:01.440 --> 03:04.090
putting our code in there that would actually work.

03:04.440 --> 03:08.100
But to make this a bit cleaner I'll outsource it in my render method here.

03:08.130 --> 03:16.560
So let's say method but well before the return statement and I will return my list L elements maybe

03:16.650 --> 03:17.520
like this.

03:17.520 --> 03:24.800
Which is equal to this state hobby's map to create something for each element in disarray.

03:25.170 --> 03:31.850
And there I will use again the E-6 arrow syntax to get my individual element or hobby you can names

03:31.890 --> 03:33.090
whatever you like.

03:33.090 --> 03:34.530
Then execute this code.

03:34.770 --> 03:40.450
And again the long form would be function hobby without the arrow in between.

03:40.560 --> 03:44.610
But I'm using Diorio for well simply because it's a bit shorter in this case.

03:44.600 --> 03:50.890
Here again dive into IIS 6 course if you want to learn more about all these E-6 features like this syntax.

03:51.150 --> 03:56.610
So here I get the individual hobbies so the code here is executed for each element in this irrate and

03:56.600 --> 04:04.840
your I simply want to return my list item with the Harbi being output between it.

04:04.890 --> 04:09.930
So then I can use my list elements and output there and my unordered list because it will be a bunch

04:09.930 --> 04:11.690
of such items.

04:11.900 --> 04:15.480
If I now had control enter Usie cooking and sports here.

04:15.570 --> 04:16.770
So that's working.

04:16.770 --> 04:18.930
That's the second part solved.

04:18.960 --> 04:24.630
Now we should add a new hobby button and the input field so that we are able to add new hobbies.

04:25.020 --> 04:32.010
Well let's add a button above an unordered list where say new hobby and in front of the button.

04:32.130 --> 04:34.030
Let's add our input element.

04:34.140 --> 04:41.220
Now input of course is a self-closing task here and now input should be of type text here and now we

04:41.220 --> 04:45.200
need to set up our own to a binding so that we get access to what the user entered here.

04:45.540 --> 04:53.030
So in my state all named as new hobby or new hobby input whatever you like it's an empty string initially.

04:53.220 --> 05:00.620
I'll use this state property on this input now to bind the value to in single curly braces.

05:00.660 --> 05:06.620
Does state new hobby and put an empty string initially.

05:06.620 --> 05:11.270
And now we need to do something whenever the user types solves this over multiple lines again to make

05:11.270 --> 05:12.670
it easier to read.

05:12.710 --> 05:19.760
Now I will add a new method where I will say change Harbi input.

05:19.760 --> 05:26.760
For example we will receive the event here that's passed to us automatically by reactor's default chala

05:26.760 --> 05:33.510
script event object and therefore here we can say this set state to change our state.

05:33.800 --> 05:41.600
But of course I only want to change my new hobby input here and set it to what the user entered.

05:41.600 --> 05:46.770
So event target gives me the input element and then value the value the user entered.

05:46.840 --> 05:52.860
This now change does so now we can access the value with new hobby input.

05:53.180 --> 06:00.590
And now what I can do here is I can hook up a button to call another method here which I'll name at

06:00.830 --> 06:03.940
Hobby and at Hobby here.

06:04.150 --> 06:11.950
Now I should also call this set state and here of course I want to change my hobbies every so hobbies

06:12.520 --> 06:13.640
should change.

06:13.660 --> 06:18.260
You always array so I will store the old array in a constant here.

06:18.270 --> 06:23.090
So old hobby's maybe should be does state hobbies.

06:23.250 --> 06:26.300
Just accessing my hubby's array in the state.

06:26.670 --> 06:27.770
Now as before.

06:27.810 --> 06:30.270
I don't want to push an element on there.

06:30.510 --> 06:37.510
Instead I will use old hobbies and then concat to add the element and get back and mew.

06:37.680 --> 06:44.490
And here I will simply push this state New hobby input's I want to use are entered.

06:44.580 --> 06:52.260
And you could add a check in here to check if the user did actually enter something and simply return.

06:52.350 --> 06:57.570
So check the value of new hobby input here and return.

06:57.570 --> 07:03.820
If the input is empty and only set to state if it is not empty I will leave it like it is.

07:03.900 --> 07:04.960
Or like this here.

07:04.980 --> 07:10.290
However So does will now add this to the hobbies array.

07:10.320 --> 07:19.050
Now with that I can call it and first of all I need to hook up my on change Lisner on the input.

07:19.280 --> 07:27.590
So here we want to call change hobby input so let's call this between single call races.

07:27.770 --> 07:33.910
However of course this change how we input because we're inside a class so I need this to access this.

07:34.430 --> 07:42.620
And now on the button I can add on click with single call the braces to call this and now add hobby

07:42.630 --> 07:47.610
we so call add hobby for both methods.

07:47.660 --> 07:56.990
I need to bind this however so that this refers to the correct thing to declasse at runtime.

07:56.990 --> 07:57.830
No let's hear it.

07:57.830 --> 08:00.060
Control enter and lions.

08:00.080 --> 08:03.590
Let's try entering reading here.

08:04.590 --> 08:05.190
This looks good.

08:05.190 --> 08:12.510
It gets added and of course we do have a warning though that we didn't add keys because remember if

08:12.510 --> 08:20.610
you work with lists in react you should add keys so it's better if you go to your list item and set

08:20.610 --> 08:21.560
the key.

08:21.900 --> 08:25.470
And now hobby of course isn't a unique identifier.

08:25.770 --> 08:31.040
So what we can do here and that's not optimal is we can use the index of the element.

08:31.050 --> 08:38.820
In theory that is exposed as a second argument by the map method so we can set key equal to index.

08:38.940 --> 08:45.960
It's not optimal because the index Well if you change the array then the element which had index 1 in

08:45.960 --> 08:51.690
the first iteration might not still have index one because maybe we added a new element at the beginning

08:51.690 --> 08:52.530
of the array.

08:52.710 --> 08:58.290
We don't do here but in general using the index as a key is not optimal but here it does actually work

08:58.290 --> 09:00.210
and do the trick.

09:00.230 --> 09:08.070
So now if we rerun this you'll see the warning has gone and I can again enter my new hobbies and it

09:08.070 --> 09:09.920
works as before.

09:10.160 --> 09:14.150
There is this task here solved task free.

09:14.190 --> 09:18.700
Now we should make our hobby's clickable to remove them once we collect them.

09:18.720 --> 09:19.990
Nothing easier than that.

09:20.130 --> 09:21.350
Let's add a new method.

09:21.390 --> 09:29.210
Remove Harbi and there I want to well remove it obviously from my array of hobbies.

09:29.210 --> 09:37.820
If we did click it here I expect to get the hobby and then I want to access where I want to get my hobbies

09:37.830 --> 09:46.020
so Konst old hobbies should be this state hobbies not a hobby I get here will be part of disarray.

09:46.060 --> 09:51.110
So the position of that will be in the old hobbies and then I can get it.

09:51.110 --> 09:56.520
Why index off to find out which index this hobby has in my array of hobbies.

09:56.900 --> 10:04.770
And then I want to call this set state a javascript object to update my hobbies and now we need to do

10:04.770 --> 10:07.310
the opposite of concat.

10:07.530 --> 10:10.170
Well there are many solutions for this.

10:10.380 --> 10:11.130
The solution.

10:11.130 --> 10:21.250
I will go with is to access my old hobbies here and then use the Folder method a built in javascript

10:21.250 --> 10:23.630
method we can use on arrays.

10:23.860 --> 10:29.310
The Thota method now also allows us to execute the arrow function.

10:29.410 --> 10:33.660
The first element or the first argument here will just be the element.

10:33.700 --> 10:38.520
We don't really need that but the second one will be the index of that element.

10:38.830 --> 10:44.120
And now we need to return true or false to decide whether this should be part of the filtered result.

10:44.170 --> 10:46.780
Which is a new array or not.

10:46.780 --> 10:52.510
So here we want to return all elements where the index is not equal to the position of the element we

10:52.510 --> 10:53.980
actually want to remove.

10:54.310 --> 11:03.190
So here I can simply return if index is not equal to position because if it is equal it is that single

11:03.190 --> 11:03.570
element.

11:03.580 --> 11:09.910
I want to remove So there I want to return false in all cases I want to return true so that these elements

11:09.910 --> 11:14.090
are still part of the new array which is returned by filter.

11:14.290 --> 11:20.650
So this is how we can remove the hobby with the filter method to return a new array with all elements

11:20.710 --> 11:22.720
but the one I want to get rid of.

11:23.050 --> 11:25.600
Now of course we need to call remove hobby.

11:25.810 --> 11:28.920
So we should do this when we click a list id..

11:28.930 --> 11:39.100
So here I can add on click and I will again use this as 6 trick to be able to pass some extra data when

11:39.100 --> 11:40.360
I click.

11:40.450 --> 11:47.620
So here I will use the arrow function to execute to kill it between DS curly braces and there I actually

11:47.620 --> 11:56.680
just want to execute this remove hobby and pass the hobby and I will split this over month lines to

11:56.680 --> 11:59.110
again make this a bit easier to read

12:03.150 --> 12:04.330
like that.

12:04.560 --> 12:08.430
So datus now my list item here.

12:08.490 --> 12:13.930
The interesting thing now is this hobby I pass here is part of this map function.

12:13.950 --> 12:17.190
So that's just for you to keep in mind where this is coming from.

12:17.190 --> 12:21.910
Keep in mind we're creating this list item for each iteration in this map function.

12:22.080 --> 12:27.690
So we get Harbi which will be the individual items in this list so therefore we can simply pass hobby

12:28.080 --> 12:33.690
and you would be right if you say that we could immediately all to pass the index here and save the

12:33.690 --> 12:38.880
time of getting the position with index off and just received the index of the element you want to remediate

12:38.880 --> 12:40.220
removed immediately.

12:40.260 --> 12:44.260
There would be a shorter solution but also want to show the more flexible one.

12:44.400 --> 12:46.340
If that would not be an option.

12:46.740 --> 12:51.380
So if we do this let's call it control enter and let's look.

12:51.390 --> 12:52.830
Cooking looks good.

12:52.860 --> 12:54.140
Let's talk sports.

12:54.390 --> 12:56.420
Let's check the console.

12:56.760 --> 13:03.210
All right let's click reading and cooking and sports.

13:03.210 --> 13:10.180
Let's remove cooking reading cooking and sport and that seems to work.

13:10.190 --> 13:13.940
So now we can remove elements when they click on them.

13:14.660 --> 13:23.180
Task five wants us to display how we delete it if we well delete that at least one hobby.

13:23.180 --> 13:25.340
So maybe we should do this.

13:25.340 --> 13:29.460
Below are buttons but above is unaware to list here.

13:29.480 --> 13:29.970
Hobby.

13:29.970 --> 13:30.940
Delete that.

13:30.940 --> 13:34.310
But of course if you do it like this we would always display it.

13:34.580 --> 13:41.330
So let's remove it from there and instead let's go into our render method where we already create our

13:41.330 --> 13:43.140
list elements.

13:43.140 --> 13:49.810
And here I now want to output does if the list elements did change.

13:50.000 --> 14:00.560
For this I will first go to my state however and add a new property and it Harbi was deleted which is

14:00.560 --> 14:04.570
false initially in remove hobby.

14:04.580 --> 14:09.590
I will set it to true though so it does set state.

14:09.590 --> 14:14.410
I will now not only set my hobbies but also Harbi was deleted.

14:14.450 --> 14:18.830
We can of course change to state of more than one property at the same time.

14:18.870 --> 14:26.360
I will say that to true here Abi was deleted does state here and now with that I can go to my render

14:26.360 --> 14:32.920
function and check if this state Harbi was deleted which is a boolean.

14:33.140 --> 14:41.440
So if this is true then I want to output where I went to change a new variable which will name Harbi

14:41.520 --> 14:44.240
delete that paragraph again.

14:44.240 --> 14:46.440
Choose a shorter name if you want.

14:46.660 --> 14:49.090
And there I will set this too.

14:49.300 --> 14:53.860
Well GSX to a paragraph where I say hobbie was deleted.

14:53.860 --> 14:56.470
Otherwise it's just an empty string.

14:56.470 --> 15:02.440
Now I can use the hobby delete a paragraph in my code which I return in the end.

15:02.680 --> 15:08.200
And here below my buttons are simply used to single curly braces to output hobby delete the paragraph

15:08.700 --> 15:13.050
Fahid control enter now you see as soon as I delete the hobby.

15:13.210 --> 15:14.410
It appears here.

15:14.560 --> 15:19.050
So we added this to and we solved task 5.

15:19.280 --> 15:21.150
Now onto task 6.

15:21.190 --> 15:24.420
Add a hobby counter above the list of hobbies.

15:24.460 --> 15:26.310
So here basically.

15:26.650 --> 15:29.300
Well that should be easy and it is easy.

15:29.350 --> 15:36.070
We can edit any year in a return statement and we can simply say hobbyists and then single call the

15:36.080 --> 15:44.080
braces because we need some dynamic context content here comes up the extra steps state hobby's length

15:44.260 --> 15:48.340
because hobbys and our state object of course is an array.

15:48.340 --> 15:51.070
So if I hit enter you see too.

15:51.460 --> 15:59.510
But if I add more here you see that this updates and if I remove elements it reduces of course so dad

15:59.510 --> 16:01.220
already has toxics solved.

16:01.310 --> 16:08.300
Only two to go now in Task 7 we should solve at Hobby counter depending on whether we have more or less

16:08.310 --> 16:09.490
than free hobbies.

16:09.710 --> 16:15.130
So it's this hobby's counter a one to style and you learned how you may style it.

16:15.410 --> 16:18.420
Let's again create a new property here.

16:19.290 --> 16:26.340
All name it Harbi counter style and this will be a javascript object.

16:26.570 --> 16:32.910
And here I will simply say I want to set the text color on one to set it depending on the web we have

16:32.910 --> 16:41.100
more or less free hobby's So check if this state hobby's length is greater than 3.

16:41.190 --> 16:43.950
If that is the case that's ternary expression here.

16:44.160 --> 16:45.670
I will set it to read.

16:45.780 --> 16:49.320
Otherwise I will set it to black.

16:49.350 --> 16:51.630
Now that already is all I need here.

16:52.020 --> 16:58.040
Without the semi-colon though I can now use this variable or actually I can make it a constant.

16:58.260 --> 17:00.170
I can use this constant now.

17:00.510 --> 17:08.950
In my paragraph here add style and bind it to this constant which is just as object of conditional styles.

17:09.210 --> 17:12.910
If I hit Control enter you see it has the normal black color.

17:13.080 --> 17:16.560
But if I add a 440 it changes to red.

17:16.560 --> 17:27.220
Now let's also add a class maybe name at multiple hobby's year to gift as a border of one pixel solid

17:27.250 --> 17:31.570
and rat and now you are attached his class conditionally.

17:31.840 --> 17:34.510
Well I will simply go here.

17:35.250 --> 17:44.150
And add my constant Harbi counter class and I will simply copy this check here.

17:44.520 --> 17:48.630
If we have more free I will add multiple hobby's.

17:48.660 --> 17:50.620
The class be created here.

17:50.670 --> 17:53.470
Otherwise I will add no class.

17:53.470 --> 17:55.340
That's all I want to do.

17:56.820 --> 18:00.390
So with that hobby Kountry Klosters constant should be an empty string.

18:00.390 --> 18:06.500
If we have less or equal to free hobbies are wise it should refer to multiple hobbies.

18:06.810 --> 18:14.640
Now that allows me to use stat in my javascript or the J as X code here to add CLOS remembered that

18:14.640 --> 18:22.770
as used with class name not just with class and then single called braces to refer to Harbi Kountry

18:22.770 --> 18:25.930
class to constantly create a tear.

18:26.160 --> 18:28.020
With that if I hit enter.

18:28.320 --> 18:34.760
Nothing changes but if I enter reading your add one time nothing changes.

18:34.770 --> 18:40.540
Added a fourth time or a second time actually we got the red color and the red border.

18:40.710 --> 18:43.710
So Dadis task 7 solved.

18:43.710 --> 18:48.360
Let's go to the final hask and let's outsource our hobbies.

18:48.420 --> 18:52.480
The list items here into a reusable component.

18:52.950 --> 18:58.620
Now for this I will create a new component and I mentioned in the challenge that you should use the

18:58.620 --> 18:59.950
function form.

19:00.300 --> 19:04.830
So I will simply name this hobby dysfunction here.

19:05.710 --> 19:11.440
And as you learned does function form receives the prop's argument and we need that because we need

19:11.440 --> 19:14.020
to know which hobby to output.

19:14.080 --> 19:19.860
Now in this function I want to return J as X which renders such a single list item.

19:19.870 --> 19:26.230
Right now we do that down here so I can just copy or cut this code from the render method of our abro

19:26.230 --> 19:35.340
component of the component and output it here like dead it was a little bit to the left here.

19:35.550 --> 19:41.140
We still need the key and well of course on click and so on won't work here.

19:41.140 --> 19:49.630
All named as props hobby name because we will get the data from outside it will all get to click listener

19:49.630 --> 19:50.310
from outside.

19:50.310 --> 19:53.110
So for now I will just remove this year.

19:53.110 --> 19:55.700
Of course this will break it for now we'll fix it soon.

19:56.170 --> 20:02.350
And well the index here will be prop's hobby index.

20:02.520 --> 20:06.130
Now with that we got our results reusable component.

20:06.270 --> 20:11.610
We can now go down to a render method where I cut this code and here instead.

20:11.670 --> 20:16.510
I now want to output my heartbeat discompose and we just create it.

20:16.590 --> 20:19.190
And of course I need to pass the two props I'm using right now.

20:19.200 --> 20:20.950
Hobby index a name.

20:21.060 --> 20:24.150
So here I was at Harbi index too.

20:24.330 --> 20:33.480
Well the index we got here and I will said Hobby name well to the Harbi we have the map function.

20:33.480 --> 20:40.100
If I hit Control ENTRAR this should still work just clicking on them doesn't work but the rest so works.

20:40.350 --> 20:45.810
Now to make that click listener word you learned how we can pass a reference to the method we want to

20:45.810 --> 20:51.360
execute in the parent component to the child component and that's exactly what I need to do here.

20:51.570 --> 20:54.990
So let's split this over multiple lines to make this a bit easier to read.

20:55.350 --> 21:03.810
And now I actually want to set a new method here and you Propertius me Harbi clicked maybe and pass

21:03.810 --> 21:08.540
a reference to the well method I want to execute.

21:08.560 --> 21:10.350
Remove hobby in this case.

21:10.560 --> 21:16.650
So remove hobby this remove hobby is the function I one to execute.

21:16.700 --> 21:18.570
If we click a hobby.

21:18.680 --> 21:24.570
So for this to work I all to bind this year of course.

21:24.580 --> 21:27.000
Now I got the hobby click prop.

21:27.350 --> 21:33.050
So in my hobby component I can now add this year in the On Click listener.

21:33.060 --> 21:40.810
I will still use the iOS 6 index because I want to pass some extra data but I cannot execute prop's

21:40.870 --> 21:46.860
hobby clicked because it is a prob probably clicked which holds this reference and executed like this.

21:47.050 --> 21:55.420
And I pass the hobby name in the end so props Harbi name fanout control enter and then click on cooking.

21:55.420 --> 21:59.260
It still is deleted just like it was before.

21:59.260 --> 22:00.760
Now that's all looking nice.

22:00.820 --> 22:04.980
But if we open the console log we see that we get this warning.

22:04.990 --> 22:08.950
We saw earlier and of course we should assign a key.

22:09.010 --> 22:12.540
Now clearly we are assigning a key to each list item.

22:12.550 --> 22:14.960
Why do we get that error then.

22:15.120 --> 22:18.620
Because that's a common gotcha which is why I wanted to show it.

22:18.730 --> 22:25.150
The key should always be assigned in a place where you map through your elements where you actually

22:25.150 --> 22:26.840
repeat an element.

22:27.220 --> 22:32.170
And if you are looking closely we're not really repeating the list item.

22:32.170 --> 22:34.020
It's part of a component.

22:34.030 --> 22:36.980
And in this component we only use it once.

22:37.240 --> 22:43.720
The thing we're actually repeating is our hobby component here in the map function.

22:43.720 --> 22:48.430
So it is on this hobby component where we should set our key.

22:48.430 --> 22:52.510
So we should remove the key from within our hobby component.

22:52.510 --> 22:55.980
We don't need it there we only have one element in there.

22:56.250 --> 22:58.940
Instead we should add it here.

22:58.960 --> 23:02.500
Here we should set our key on the hobby component itself.

23:02.800 --> 23:06.220
That of course means we can remove the hobby index property.

23:06.250 --> 23:14.400
We don't need debt but instead we should simply set the key like we did before but now in the hobby

23:14.400 --> 23:21.460
component and if we now clear our error log here and hit control and try to reload this.

23:21.480 --> 23:22.970
Now you see it's gone.

23:23.250 --> 23:31.560
And it works as before but now with the right key assignment and that ISDE assignments solved a lot

23:31.560 --> 23:39.480
of work using a lot of features of re-act staying in this re-act world and thinking re-act which is

23:39.480 --> 23:40.680
quite different to view.

23:40.710 --> 23:42.350
Yes I will admit this.

23:42.540 --> 23:49.980
Now we will dive into how we can use react on a local setup with workflow which allows us to use all

23:49.980 --> 23:57.670
these ESX and j as X features and how we may use it to create a single page application.
