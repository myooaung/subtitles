WEBVTT

00:02.720 --> 00:06.740
Knouted we learn about property binding with these square brackets.

00:06.740 --> 00:11.180
Let's change the styling of some of our elements dynamically.

00:11.180 --> 00:16.520
Now let's start with the list item and not want to stick to the examples used in the other modules.

00:16.800 --> 00:20.920
I want to style my Odd and Even numbers differently.

00:20.930 --> 00:29.420
Now for this I will create a new helper method which will get a name get color and what gets color will

00:29.420 --> 00:34.690
do is it will receive the number so it will receive the element.

00:34.700 --> 00:41.330
Basically you code named as argument however you want to name it though and it will return the information

00:41.330 --> 00:43.690
or the style and want to apply.

00:43.700 --> 00:49.750
So here what I will do is I will again use the modulus operator to check if we do have a remainder.

00:49.760 --> 00:53.380
So check if it say all or even number if it's even.

00:53.390 --> 00:58.970
So if you have no remaining part then I want to return Green as a string.

00:59.030 --> 01:01.540
Otherwise I want to return read.

01:02.030 --> 01:10.520
So this method simply returns does check all use free equal sign who also assigns to as a check d the

01:10.520 --> 01:13.220
type that we really ought to have two numbers here.

01:13.520 --> 01:20.900
And now with that with that method returning a string we can go back to the template and use a number

01:20.900 --> 01:21.940
directive.

01:22.190 --> 01:31.100
Remember in view we could rebind the style attribute of this element in re-act we set a style equal

01:31.100 --> 01:35.810
to the javascript object Engler kind of has a mixture in angler.

01:35.810 --> 01:37.700
We use a directive for this.

01:37.700 --> 01:42.810
It's a special directive and it's called ngi style which allows us to dynamically change the style of

01:42.840 --> 01:48.940
element behind the scenes that will reach out to the style attribute and property of element and we'll

01:49.000 --> 01:50.360
change it.

01:50.360 --> 01:52.640
Now Engy style needs some input.

01:52.640 --> 01:55.990
We need to tell it which stars do we want to change how.

01:56.280 --> 02:02.900
So we need to send some data into Engy style and as we learn we can pass data to something by wrapping

02:02.900 --> 02:04.650
it in square brackets.

02:04.880 --> 02:11.930
So and restyled styled this directive shipping with angular actually has a property named end style

02:12.620 --> 02:18.740
and there that is the property we bind to here with property binding can be confusing but it's really

02:18.740 --> 02:19.440
important.

02:19.480 --> 02:24.330
And the directive is just named Engy style without the square brackets.

02:24.530 --> 02:30.680
But this directive happens to also have a property just like our class here has a property named name

02:31.160 --> 02:37.500
happens to have a property named Engy style and it has the same name for the property as for that directive.

02:37.610 --> 02:41.140
So that we can easily and conveniently just bind to the directive like this.

02:41.140 --> 02:48.980
It's a shortcut offered by Engler and we do bind cutis property in this directive with this command.

02:49.310 --> 02:51.820
So now we pass some data into that directive.

02:51.980 --> 02:55.400
And then she style happens to expect a javascript object.

02:55.400 --> 03:01.400
So single curly braces don't mistake that with double curly braces.

03:01.400 --> 03:05.580
We're not using string ablation here because we already used the square brackets.

03:05.600 --> 03:11.780
So we already are binding to the data and just like for ID where I also told you to not use to double

03:11.780 --> 03:12.720
curly braces.

03:12.920 --> 03:14.270
We don't do it here.

03:14.660 --> 03:20.780
Single curly braces simply means pass a javascript object and this object now has a key value pairs

03:20.870 --> 03:26.660
where the key is the style you want to change and the value Wilda value of the style you want to set

03:27.380 --> 03:33.950
the style you want to change could be background color camel case because the dash is a forbidden character

03:33.950 --> 03:39.650
in a property name if you want to use the normal Zia's as a name you can use background color repped

03:39.680 --> 03:41.440
in single quotation marks.

03:42.050 --> 03:44.620
But I'll go back to the camel case notation.

03:44.620 --> 03:45.830
Both will work though.

03:45.980 --> 03:55.500
So background color and now it will call gef color which if you recall it simply returns me a string.

03:55.550 --> 03:58.320
It simply returns me green or red.

03:58.580 --> 04:04.040
However get color expects to get the element but I have the element here since I am inside the loop

04:04.250 --> 04:07.550
so I can't just pass out like this.

04:07.550 --> 04:13.850
Now if we save this and go back to that page if I start adding elements you'll see or even as colored

04:13.850 --> 04:14.810
differently.

04:14.810 --> 04:20.720
So dead were X and we're now applying or Stahl's conditionally with and you style.
