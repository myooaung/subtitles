WEBVTT
1
00:00:00.630 --> 00:00:00.940
All right.

2
00:00:00.960 --> 00:00:05.670
Hello welcome to another lecture we're going to be learning a new skill here and once we learn this

3
00:00:05.670 --> 00:00:10.110
we're going to be applying it to making another app but let's just focus on what this lectures about

4
00:00:10.440 --> 00:00:16.200
and that is timer's how you can make your code delayed to only run at a certain point or repeat to run

5
00:00:16.200 --> 00:00:18.720
over and over again at certain time intervals.

6
00:00:18.720 --> 00:00:19.210
OK.

7
00:00:19.470 --> 00:00:20.720
So let's go ahead and get started.

8
00:00:20.720 --> 00:00:27.270
We're going to start a new project I'm just going to call this timer demo and we'll go ahead and make

9
00:00:27.270 --> 00:00:32.580
this project so I'm going to show you two different ways that you can make timers you can kind of decide

10
00:00:32.580 --> 00:00:33.840
which one you think is best.

11
00:00:33.840 --> 00:00:36.060
And you'll see how we use them moving forward.

12
00:00:36.120 --> 00:00:38.910
But just wanted to introduce you to a couple of ways to do this.

13
00:00:38.940 --> 00:00:44.910
I'd also like to take this time to note if you ever want to change the layout of Android studio you've

14
00:00:45.270 --> 00:00:49.250
probably seen I've bumped up the font size here on this.

15
00:00:49.290 --> 00:00:52.180
You can go up to Android studio preferences.

16
00:00:52.230 --> 00:00:59.370
This is if you're on a Mac but even on Windows and Linux I believe you can still get to your preferences

17
00:01:00.180 --> 00:01:07.110
as long as you get to the preference pane you want to go down to editor into where the fonts and colors

18
00:01:07.110 --> 00:01:07.370
are.

19
00:01:07.370 --> 00:01:11.510
Go down to the font and you can increase the size and a bunch of other things too.

20
00:01:11.520 --> 00:01:15.300
But I just want to show you how to do that in case you were interested.

21
00:01:15.300 --> 00:01:15.950
All right.

22
00:01:16.200 --> 00:01:21.600
So let's go ahead and talk about the first way to work with a timer and that's by using something called

23
00:01:21.600 --> 00:01:23.730
a handler and a runnable.

24
00:01:23.790 --> 00:01:24.250
OK.

25
00:01:24.450 --> 00:01:28.440
So what we're going to do first is we're going to make a handler and the handler basically allows us

26
00:01:28.440 --> 00:01:30.510
to do some timing functions.

27
00:01:30.540 --> 00:01:35.070
So what we're going to do is we're going to create a handler.

28
00:01:35.490 --> 00:01:37.370
And we're going to give us some sort of name.

29
00:01:37.440 --> 00:01:42.840
Let's just be kind of bland here we'll just call her handler handler when you say this should be a new

30
00:01:42.860 --> 00:01:43.990
handler.

31
00:01:44.370 --> 00:01:45.630
Excellent.

32
00:01:45.920 --> 00:01:51.420
Then with this handler we have to create a runnable that says you know here's some code that I want

33
00:01:51.420 --> 00:01:51.750
to run.

34
00:01:51.750 --> 00:01:54.980
So the handler runs the Runnable.

35
00:01:55.110 --> 00:01:58.650
I know that's kind of little bit chunky there but we'll work through it.

36
00:01:58.650 --> 00:02:03.440
So we're going to create a runnable so it'll do runnable.

37
00:02:03.660 --> 00:02:07.900
OK so we have a new runnable which we'll just call run.

38
00:02:07.890 --> 00:02:11.140
We're going to set this equal to a new runnable.

39
00:02:11.370 --> 00:02:12.130
Excellent.

40
00:02:12.180 --> 00:02:17.520
And you can see it's created this function for us called Run which basically this is the code that is

41
00:02:17.520 --> 00:02:18.650
going to get run here.

42
00:02:18.660 --> 00:02:22.390
Let me put an end in semi-colon there.

43
00:02:22.620 --> 00:02:28.590
So yeah our handler is going to run the code inside of this runnable and we can decide what that's going

44
00:02:28.590 --> 00:02:29.110
to be.

45
00:02:29.130 --> 00:02:35.220
So let's go ahead and write our code for now which is let's just log out something so we're going to

46
00:02:35.220 --> 00:02:46.680
say log I just say hey it's us and we're also going to be say like a second has passed by we're going

47
00:02:46.680 --> 00:02:52.430
to make a timer that runs every second so a second has passed by excellent.

48
00:02:52.710 --> 00:02:59.280
Now with this what we're going to do is they're going to say after we've logged this information we

49
00:02:59.280 --> 00:03:05.640
then want to schedule the handler to say hey go ahead and run this runnable again after X amount of

50
00:03:05.640 --> 00:03:05.970
time.

51
00:03:05.970 --> 00:03:12.240
So in order to do that we reference the handler and then we say Dot post delayed.

52
00:03:12.240 --> 00:03:18.180
You can see that down there and you have to pass it a runnable which in this case if we just say this

53
00:03:18.180 --> 00:03:20.250
it's going to refer to the Runnable that we're in now.

54
00:03:20.250 --> 00:03:26.250
So we'll say this and then we have to give it a certain amount of time now it will refer to time in

55
00:03:26.250 --> 00:03:30.570
milliseconds so 1000 essentially equals one second.

56
00:03:30.570 --> 00:03:37.680
So when we say hey it's us a second has passed by you know we're And then it says OK run the same thing

57
00:03:37.710 --> 00:03:39.000
in 1000 milliseconds.

58
00:03:39.000 --> 00:03:42.020
This means it's going to run every second day.

59
00:03:42.420 --> 00:03:48.600
So this looks all fine and dandy but if we were to go ahead and run this right now on our emulator nothing

60
00:03:48.600 --> 00:03:54.200
would happen because we've created this Hebler we've created this runnable that sort of you know reregistered

61
00:03:54.270 --> 00:03:58.170
the handler every time it does its thing it says hey I'm going to schedule myself to run again I'm going

62
00:03:58.170 --> 00:03:59.480
to schedule myself to run again.

63
00:03:59.490 --> 00:03:59.740
Right.

64
00:03:59.740 --> 00:04:01.920
Like you know that works.

65
00:04:01.920 --> 00:04:06.450
But at some point we've got to kick off the process and we haven't done that yet.

66
00:04:06.450 --> 00:04:12.270
So what we would need to do in order for that to happen is simply to like what we had here.

67
00:04:12.270 --> 00:04:19.200
We would say hÃ¤ndler dot instead of post Alade we would just say post but we do have to pass the rentable

68
00:04:19.200 --> 00:04:25.050
which in this case we called rhumb So go ahead and say run and that's all we've got to do.

69
00:04:25.150 --> 00:04:26.070
Okay.

70
00:04:26.460 --> 00:04:33.300
So now that this code actually has a position to start Let's go ahead and run this looks like are emulators

71
00:04:33.300 --> 00:04:35.530
still coming online here.

72
00:04:35.730 --> 00:04:38.240
But let's go ahead and make sure that we're running this new version.

73
00:04:38.250 --> 00:04:44.910
Yeah we want to we want to restart the up well I guess let's let's give the emulator here a second to

74
00:04:44.910 --> 00:04:46.950
get itself up and running.

75
00:04:46.950 --> 00:04:50.160
All right so the emulator finally got ready to rock and roll here.

76
00:04:50.160 --> 00:04:53.370
Let's go ahead and open up log can see what we got and look at that.

77
00:04:53.370 --> 00:04:58.640
We've got a second pass by it's showing up and you know we've got every second here.

78
00:04:58.680 --> 00:04:59.850
So that is good news.

79
00:04:59.930 --> 00:05:01.540
Means we're ready to rock and roll.

80
00:05:01.760 --> 00:05:02.180
All right.

81
00:05:02.180 --> 00:05:08.420
So this is one way that we can do a timer so let's go ahead and just comment this out because I have

82
00:05:08.420 --> 00:05:15.640
another way that I want to show you can go ahead and just do the line comment there.

83
00:05:16.040 --> 00:05:21.320
And the next way that we're going to learn how to do a timer is something called a countdown timer so

84
00:05:21.410 --> 00:05:27.050
I preferred this method more than doing the handler in the Runnable that the handler in the Runnable

85
00:05:27.050 --> 00:05:31.860
those can be more useful in some situations that aren't just for timers.

86
00:05:31.860 --> 00:05:37.190
So I think that was a good skill to learn but this would be my more preferred way about doing timer's

87
00:05:37.190 --> 00:05:43.110
of course up to you how you want to handle that but just go ahead and we're going to create a new countdown

88
00:05:43.130 --> 00:05:47.150
timer and we're not going to pass it into a variable anything create a new variable we're just going

89
00:05:47.150 --> 00:05:50.300
to create this and have it run its course one time.

90
00:05:50.300 --> 00:05:53.600
So we're going to see a new countdown timer.

91
00:05:53.600 --> 00:05:56.020
Make sure you've got the one from Android OS.

92
00:05:56.210 --> 00:06:01.250
And in this new count down timer there's a couple of things we've got to pass and so you can see how

93
00:06:01.250 --> 00:06:05.060
many milliseconds you want this thing to ultimately run for.

94
00:06:05.060 --> 00:06:12.350
So if we wanted to run for 10 seconds we would pass ten thousand milliseconds and then it's going to

95
00:06:12.350 --> 00:06:18.140
ask you for the countdown interval meaning like how often do you want to check back in with you.

96
00:06:18.140 --> 00:06:24.020
So if you want to every one second do something you would pass in 1000 milliseconds.

97
00:06:24.020 --> 00:06:30.830
Now if you want to you know every tenth of a second be able to run some code well in that case you would

98
00:06:30.830 --> 00:06:33.250
want to do just like 100 there.

99
00:06:33.650 --> 00:06:37.820
But you know I think we should just have this run every second for 10 seconds so let's go ahead and

100
00:06:37.820 --> 00:06:38.690
do that.

101
00:06:38.690 --> 00:06:40.390
And we actually don't want a semi-colon here.

102
00:06:40.400 --> 00:06:45.170
We want our opening curly bracket and then adding curly brackets at the end of that is where we'll put

103
00:06:45.170 --> 00:06:46.650
our semi-colon.

104
00:06:46.730 --> 00:06:51.320
Now with this countdown timer we have to implement two functions so the first one.

105
00:06:51.320 --> 00:06:54.740
Let's go ahead and just say public void.

106
00:06:55.070 --> 00:07:03.920
This one is going to be called on tick case so this one is going to get called every time this countdown

107
00:07:03.950 --> 00:07:08.120
interval has been reached again you can choose what this is going to be right now since it's a thousand

108
00:07:08.120 --> 00:07:10.720
milliseconds it's going to be every second second.

109
00:07:10.880 --> 00:07:13.310
We're going to have on tick called.

110
00:07:13.310 --> 00:07:18.690
But inside of here what's going to be passed is a long which is basically a really big event.

111
00:07:18.920 --> 00:07:25.530
And we're just going to go ahead and call this milah seconds until done OK.

112
00:07:25.550 --> 00:07:30.950
So this is kind of telling us you know how much further we have on what's going on.

113
00:07:31.010 --> 00:07:35.510
So we're going to go ahead and log this information.

114
00:07:35.510 --> 00:07:38.230
So we'll do our capital log on.

115
00:07:38.560 --> 00:07:39.490
All right.

116
00:07:39.770 --> 00:07:47.220
And we'll say seconds left and let's go ahead and say how many seconds left.

117
00:07:47.270 --> 00:07:51.530
If you think about it we've got milliseconds and we want to show them as seconds we should divide that

118
00:07:51.530 --> 00:07:53.170
by 1000.

119
00:07:53.180 --> 00:07:54.070
All right.

120
00:07:54.080 --> 00:07:57.530
Now if we're going to do this we've got to turn this into a string.

121
00:07:57.770 --> 00:08:06.580
So we're going to say string dot value and we'll go ahead and pass that information in there.

122
00:08:06.870 --> 00:08:11.530
And in parentheses and a semi-colon Let's give ourselves some space to look at this code here.

123
00:08:11.660 --> 00:08:12.090
Okay.

124
00:08:12.320 --> 00:08:17.110
So that's one function that we've got there the next one that we want to do is on finish.

125
00:08:17.280 --> 00:08:27.710
So let's do public voyde on the capital and finish here gang.

126
00:08:27.740 --> 00:08:34.520
And this is going to be run whenever the countdown timer is completely finished so we're going to go

127
00:08:34.520 --> 00:08:43.620
ahead and do a log here or forget to do the capital on that and we'll say something like we're done.

128
00:08:43.790 --> 00:08:46.420
Exclamation point.

129
00:08:46.580 --> 00:08:49.430
No more countdown.

130
00:08:49.620 --> 00:08:50.360
OK.

131
00:08:50.390 --> 00:08:55.880
So you can see this sort of timer is more geared towards counting down to a particular point in time

132
00:08:55.880 --> 00:09:01.300
where is this just sort of ran on into the future you would probably want to add this sort of time or

133
00:09:01.310 --> 00:09:06.980
have some sort of if statement saying hey after this thing has happened or whatever I want to end this

134
00:09:06.980 --> 00:09:12.150
thing you know doing something every one second until the end of time.

135
00:09:12.230 --> 00:09:14.380
So anyways something to note there.

136
00:09:14.960 --> 00:09:17.380
And yeah let's just go ahead and test this right.

137
00:09:17.390 --> 00:09:21.870
So in a hit run here let's get Lague that open.

138
00:09:22.060 --> 00:09:24.470
Oh we forgot our semi-colon.

139
00:09:24.470 --> 00:09:26.490
Make sure we've got that.

140
00:09:26.500 --> 00:09:32.440
But I guess by having that air it opened up blog for us so that was kind of nice.

141
00:09:32.450 --> 00:09:33.140
Here comes our app.

142
00:09:33.140 --> 00:09:36.700
I don't know where we're looking at the screen it doesn't do anything.

143
00:09:37.520 --> 00:09:42.920
Oh and we don't have anything here because I forgot the very last important step of a countdown timer

144
00:09:42.950 --> 00:09:43.790
you have to start it.

145
00:09:43.790 --> 00:09:47.230
So here at the end of our curly bracket we're going to do dot start.

146
00:09:47.240 --> 00:09:52.670
So do you see when we make this new countdown timer on this we did not start now if we'd put this in

147
00:09:52.670 --> 00:09:53.420
a variable.

148
00:09:53.420 --> 00:09:57.190
We would maybe call the variable name dot start but here we're just going to do that.

149
00:09:57.500 --> 00:10:04.200
So let's run that one more time and now we should see something actually showing up here in log cabin.

150
00:10:04.300 --> 00:10:07.140
So there it goes and look at this.

151
00:10:07.150 --> 00:10:15.340
Eight seconds left seven six five four three two one zero.

152
00:10:15.460 --> 00:10:16.600
No more countdown.

153
00:10:16.630 --> 00:10:17.410
And that's it.

154
00:10:17.410 --> 00:10:20.820
So the timer ran it's course did its thing totally awesome.

155
00:10:20.830 --> 00:10:27.190
And I just want to show you just kind of for fun here if we drop this down to one hundred milliseconds

156
00:10:27.190 --> 00:10:30.280
meaning this is going to run every tenth of a second.

157
00:10:30.440 --> 00:10:33.160
And so let's go ahead and run this.

158
00:10:33.170 --> 00:10:35.120
This will be kind of interesting to see.

159
00:10:37.250 --> 00:10:38.040
OK.

160
00:10:39.200 --> 00:10:42.060
So here comes the app and look at this.

161
00:10:42.080 --> 00:10:45.310
So it's calling it much much more frequently.

162
00:10:45.560 --> 00:10:50.290
You'll notice that it can't keep up with how many times it's supposed to be called.

163
00:10:50.290 --> 00:10:56.240
So you know even though we were supposed to have it run every you know tenth of a second here it kind

164
00:10:56.240 --> 00:10:58.190
of topped out at some situations right.

165
00:10:58.190 --> 00:11:04.490
Like we've seen nine only showed up you know four times eight only showed up twice.

166
00:11:04.550 --> 00:11:05.390
But anyways.

167
00:11:05.570 --> 00:11:11.480
So not always perfect here with these timers but definitely two different ways that you can handle these.

168
00:11:11.540 --> 00:11:14.370
We are then going to use this moving forward in our next step.

169
00:11:14.360 --> 00:11:18.290
So remember I said you know I want to teach you new skills and then we're going to take those skills

170
00:11:18.290 --> 00:11:21.550
and apply it to other stuff you've learned just make sure it's really cemented.

171
00:11:21.550 --> 00:11:24.590
So let's go ahead to move forward to the egg timer.
