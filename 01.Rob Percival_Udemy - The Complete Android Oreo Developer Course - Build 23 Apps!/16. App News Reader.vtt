WEBVTT
1
00:00:00.660 --> 00:00:05.400
Hello and welcome to the lecture we're we're going to be creating a news reader app.

2
00:00:05.400 --> 00:00:10.740
So the idea is that you'd come into an app like this with a bunch of news articles that you wanted to

3
00:00:10.740 --> 00:00:11.010
read.

4
00:00:11.010 --> 00:00:15.570
This one is about tech and you know you go ahead and you tap on one of these.

5
00:00:15.570 --> 00:00:20.730
It's going to open up a new activity with a web browser inside of it and then you can you know scroll

6
00:00:20.730 --> 00:00:23.890
through and see the information that comes through.

7
00:00:24.240 --> 00:00:29.250
Again look here's one that comes through Twitter we can see all the cool stuff there should be saved

8
00:00:29.250 --> 00:00:31.710
in as well a database.

9
00:00:31.740 --> 00:00:33.690
And you should be able to get that now.

10
00:00:33.810 --> 00:00:36.120
The source for information on this.

11
00:00:36.300 --> 00:00:37.680
Let me go ahead and open up Safari.

12
00:00:37.680 --> 00:00:49.470
Here is a Web site called Hacker News or news dot Y Combinator dot com is where new Y Combinator or

13
00:00:51.330 --> 00:00:56.040
just search Hacker News that's going to take us to the appropriate place so there we go.

14
00:00:56.040 --> 00:01:01.170
I must have spelled something wrong through there but this is a cool web site that shows a bunch of

15
00:01:01.170 --> 00:01:09.220
kind of trending tech articles and there's an awesome API for this if you just search Hacker News API.

16
00:01:09.540 --> 00:01:14.050
You're going to get this awesome link to get hub where you can go.

17
00:01:14.070 --> 00:01:16.950
They have detailed out what it is you know that you want to do.

18
00:01:16.950 --> 00:01:23.670
So for us essentially your call that you're looking for is you want to get the top stories so if you

19
00:01:23.670 --> 00:01:28.770
just go ahead and click on this you get a result back like this that gives you a bunch article IDs then

20
00:01:28.770 --> 00:01:33.650
what those article IDs IDs you can plug them into this you are.

21
00:01:33.690 --> 00:01:40.020
So up here where it says 8 8 6 3 that's where you'd put in whatever current news item that you want

22
00:01:40.590 --> 00:01:44.460
and then you'll get like the title that your L and that will help you create the reader.

23
00:01:44.460 --> 00:01:49.740
So some important pieces of information for you to know if you're going to go out and do this on your

24
00:01:49.740 --> 00:01:50.670
own.

25
00:01:50.770 --> 00:01:54.600
Again any the help you can watch me but I think you can do this.

26
00:01:54.600 --> 00:01:55.110
Go ahead.

27
00:01:55.110 --> 00:01:57.170
Hit pause now.

28
00:01:58.050 --> 00:01:58.310
All right.

29
00:01:58.320 --> 00:02:01.970
Let's go ahead and get started with the new Android studio project.

30
00:02:02.040 --> 00:02:06.330
We're just going to go ahead and call this one the news reader.

31
00:02:06.720 --> 00:02:12.630
Go ahead and do all our standard default configurations and get this party started.

32
00:02:12.630 --> 00:02:18.780
So really the first thing that we want to dive into with this app is we want to be able to access the

33
00:02:18.780 --> 00:02:23.380
Hacker News API get to figure out how we can get all the stories.

34
00:02:23.380 --> 00:02:29.440
So let's go ahead and open up a browser and see if we can't find the Hacker News API.

35
00:02:29.450 --> 00:02:32.530
So I'm just going to search Hacker News API

36
00:02:35.230 --> 00:02:37.370
and once I'm there look at this.

37
00:02:37.480 --> 00:02:44.560
We've got some nice documentation here and it looks like this is going to be what we need in order to

38
00:02:44.560 --> 00:02:45.390
get this.

39
00:02:45.640 --> 00:02:51.310
So the basic idea with this API is that if you want to know the top stories and if you want to see what

40
00:02:51.310 --> 00:02:58.800
the Web site looks like go to news dot Y Combinator dot com.

41
00:02:58.900 --> 00:03:05.830
There we go and look it kind of shows you the top this gives you like the top 30 articles that have

42
00:03:05.830 --> 00:03:07.070
been uploaded here.

43
00:03:07.120 --> 00:03:14.640
But if you want to get that information let's look for it new top and best stories.

44
00:03:15.010 --> 00:03:16.420
I think that's what we're looking for.

45
00:03:16.420 --> 00:03:22.510
So if we want to do that and we look at this API hit it just gives us a bunch of these idea numbers

46
00:03:22.840 --> 00:03:30.370
ID numbers and the ideas that you take these ID numbers and then if you ask for a specific ID item then

47
00:03:30.370 --> 00:03:36.520
it's going to tell you more about it so let's see if we scroll up to the top here.

48
00:03:36.520 --> 00:03:37.480
I believe this is it.

49
00:03:37.630 --> 00:03:38.130
Yes.

50
00:03:38.200 --> 00:03:43.820
So if we give it a particular item it's going to say hey you know this is the title.

51
00:03:44.050 --> 00:03:48.220
This is the you are all connected with that that's where we're going to want to load the web page and

52
00:03:48.220 --> 00:03:52.600
there's also the kids here forward talking about the comments and stuff and we're not going to worry

53
00:03:52.600 --> 00:03:53.290
about the comments.

54
00:03:53.290 --> 00:03:58.500
We just want to be able to let the user go look at all the different stories there.

55
00:03:58.780 --> 00:04:03.100
So with this in place this is what we're aiming towards.

56
00:04:03.100 --> 00:04:06.040
Let's go ahead and start building out the app.

57
00:04:06.310 --> 00:04:12.820
So the first step for us is we want to put a list view on the very first activity of the app.

58
00:04:12.880 --> 00:04:18.620
So we'll go ahead and give Android studio a second here to load.

59
00:04:18.640 --> 00:04:25.210
But in the meantime let's go ahead and go down to containers and that list is what we want to lead the

60
00:04:25.210 --> 00:04:29.450
existing text you will bring out that list view.

61
00:04:29.950 --> 00:04:36.550
And yeah we'll go ahead hit all the pluses here have that fill up the screen and will simply call that

62
00:04:36.670 --> 00:04:38.140
a list view.

63
00:04:38.570 --> 00:04:43.380
They like to keep things simple here when we're working with this activity.

64
00:04:43.390 --> 00:04:50.890
So once that's in place this app is going to be connected to an API so let's do this before we forget.

65
00:04:50.890 --> 00:04:55.630
Let's go ahead and make sure we have permission to use the Internet in this app so we're going on your

66
00:04:55.690 --> 00:04:57.760
tag here for users permission.

67
00:04:57.760 --> 00:05:02.190
We want the Internet and we'll go ahead put our closing tag there.

68
00:05:02.590 --> 00:05:04.120
Excellent.

69
00:05:04.120 --> 00:05:09.310
Now with that in place we can move forward with getting our list view set up so we've done this a million

70
00:05:09.310 --> 00:05:10.750
times.

71
00:05:10.750 --> 00:05:15.710
First thing that we need is an array list so let's go ahead and make one of those.

72
00:05:15.730 --> 00:05:23.680
So we want an array list of string objects and we're going to call this the titles and this will be

73
00:05:23.680 --> 00:05:26.570
equal to a new array list.

74
00:05:26.920 --> 00:05:28.290
Excellent.

75
00:05:28.330 --> 00:05:35.260
From there we want to create an array adapter so we'll go ahead and get one of these that we'll just

76
00:05:35.260 --> 00:05:38.580
simply call array adapter and we will set that up yet.

77
00:05:38.640 --> 00:05:40.780
That will be in this on create.

78
00:05:40.780 --> 00:05:44.300
So with that in place let's go ahead and get access to that list view.

79
00:05:44.410 --> 00:05:51.010
So we're going to say List View give it the name of lower case list view is equal to or find you by

80
00:05:51.010 --> 00:05:55.240
ID are not ID dot list view.

81
00:05:55.700 --> 00:05:58.100
OK so we've got that in place.

82
00:05:58.120 --> 00:06:05.890
Next thing we do is set up that array adapter so will say array adapters equal to a new array adapter

83
00:06:06.850 --> 00:06:09.130
past four this is context.

84
00:06:09.130 --> 00:06:21.650
Android are lay out dot simple list item one will go ahead and pass that array called titles.

85
00:06:21.860 --> 00:06:26.470
So I guess the array adapter all set up then the next thing we need to do is just set the adapter sort

86
00:06:26.470 --> 00:06:33.940
of site list you set adapter and we'll pass in our array adapter.

87
00:06:33.950 --> 00:06:35.530
Simple enough right.

88
00:06:35.540 --> 00:06:36.740
So let's go ahead and hit run.

89
00:06:36.730 --> 00:06:40.550
I know it's going to take a second for the emulator to get up and running and there's really not much

90
00:06:40.550 --> 00:06:44.710
to look at right now because we don't have anything even in the array.

91
00:06:45.050 --> 00:06:48.160
But we at least want to just know that the app can work.

92
00:06:48.170 --> 00:06:53.840
So while that is going let's go ahead and move on to our next big task and that's that because we're

93
00:06:53.840 --> 00:06:54.900
working with an API.

94
00:06:54.890 --> 00:07:01.430
No we haven't done this since last section but we need to go create something that extends async task

95
00:07:01.440 --> 00:07:05.750
right we'll make our own download task or whatever it is that we want to call it so we can go get the

96
00:07:05.750 --> 00:07:07.480
appropriate data.

97
00:07:07.490 --> 00:07:13.940
So while we're still within this main activity class we want to make our own class here so we're going

98
00:07:13.940 --> 00:07:19.010
to say public class and you can call this whatever you want.

99
00:07:19.250 --> 00:07:20.980
I'm going to call it download task.

100
00:07:20.990 --> 00:07:25.640
I think that kind of just represents what we're going for and this is going to you know we're going

101
00:07:25.640 --> 00:07:30.800
to first use this to go get the list of all the IDs right.

102
00:07:30.800 --> 00:07:34.590
Remember where was that all the top stories right.

103
00:07:34.580 --> 00:07:39.880
That gives us all these and then we're going to go use it to get the specific news items and whatnot

104
00:07:39.890 --> 00:07:42.490
so this can be used in a couple of different ways.

105
00:07:42.500 --> 00:07:56.430
But this is going to extend async a scene I'm still in this room a sink task just like that.

106
00:07:56.700 --> 00:08:03.930
And we want to be able to pass on a string you know for the updates and then we'll go ahead and have

107
00:08:04.530 --> 00:08:10.410
somehow open preferences I don't know how that happened and then we'll have it return a string at the

108
00:08:10.410 --> 00:08:11.010
end there.

109
00:08:11.170 --> 00:08:14.990
OK so we're going to have all those pieces.

110
00:08:15.270 --> 00:08:23.070
And with that in place that should allow us the chance to go ahead and implement some methods here although

111
00:08:23.070 --> 00:08:31.950
I think Android studio is just taking a second here because it's trying to get the emulator up and running

112
00:08:31.950 --> 00:08:40.740
here but let's see hover over this unexpected token though we have and I think taskin a void not know

113
00:08:40.770 --> 00:08:42.860
that's why it's freaking out of me.

114
00:08:42.960 --> 00:08:43.590
OK.

115
00:08:43.830 --> 00:08:49.140
When you think the computer is wrong it's almost never wrong it's almost always you will go ahead and

116
00:08:49.140 --> 00:08:54.870
with this hit our red light bulbs they implement the methods we want that mice do in background.

117
00:08:55.130 --> 00:08:55.830
OK.

118
00:08:56.280 --> 00:09:03.920
So with this let's go ahead and write the code so that we can then you know get to an appropriate neuro.

119
00:09:04.290 --> 00:09:11.700
So with this first thing we need to do is have a string set aside for the result to set that equal to

120
00:09:11.700 --> 00:09:13.970
an empty string.

121
00:09:14.440 --> 00:09:18.750
And let's check this emulator looks like the app is fine there's nothing on the list view but that's

122
00:09:18.750 --> 00:09:21.810
because we haven't added anything so that's that's good.

123
00:09:21.810 --> 00:09:30.040
The next thing we need is your whole object that we will simply call you l and we need to create an

124
00:09:30.100 --> 00:09:36.930
h t t p your L connection that we will call your real connection.

125
00:09:37.450 --> 00:09:44.860
Excellent and let's actually go ahead and just set that equal to know to start off and once we have

126
00:09:44.860 --> 00:09:50.230
these three things in place then we need to do a try catch where we actually try and get something from

127
00:09:50.230 --> 00:09:54.760
that you are well and you know start an input stream all that good stuff.

128
00:09:55.090 --> 00:09:59.490
So let's go and start a try catch it or try it.

129
00:09:59.500 --> 00:10:06.580
Let's make our catch and we're going to take an exception and if case something goes wrong here let's

130
00:10:06.580 --> 00:10:08.500
go ahead and print it out.

131
00:10:08.530 --> 00:10:09.260
All right.

132
00:10:09.370 --> 00:10:15.530
Now inside of this try first we are going to take a u r l r u r l object here and we're going to try

133
00:10:15.530 --> 00:10:21.000
and convert the string so we're going to say new you r l object just like this.

134
00:10:21.040 --> 00:10:27.160
Now for this Usually we'd like to change this to say your L's kind of make it a little bit more readable

135
00:10:27.160 --> 00:10:34.770
here and I'll say are else does give us the item at position Zero came Satel hopefully create your own

136
00:10:34.840 --> 00:10:37.800
object if not the catch will take care of that.

137
00:10:37.840 --> 00:10:40.710
After that we are going to set up our your connection.

138
00:10:40.760 --> 00:10:43.540
We're going to say this is equal to.

139
00:10:44.560 --> 00:10:49.540
We want to do your l dot open connection.

140
00:10:49.540 --> 00:10:54.580
Now we got to make sure we cast this to the appropriate HTP

141
00:10:56.820 --> 00:10:58.230
your whole connection.

142
00:10:58.370 --> 00:10:59.620
Excellent.

143
00:11:00.050 --> 00:11:04.670
And I'm going to go ahead and move cause that left side give us some space to work with here.

144
00:11:04.700 --> 00:11:07.330
Next thing that we need is an input stream.

145
00:11:07.400 --> 00:11:12.860
So that's two capital input stream.

146
00:11:13.010 --> 00:11:21.620
I call that lower case input stream is equal to your L connection dot and this is where we need to get

147
00:11:21.740 --> 00:11:23.450
the input stream.

148
00:11:23.810 --> 00:11:31.260
And after we've done that we need an input stream reader so input stream reader will call that lower

149
00:11:31.260 --> 00:11:37.500
case input stream reader is equal to a new capital input stream reader.

150
00:11:37.880 --> 00:11:44.960
And once we have that in place we now have to insert our input stream.

151
00:11:45.080 --> 00:11:46.580
We get called input stream.

152
00:11:46.580 --> 00:11:51.140
I mean you do those names it kind of helps keeps things a little bit easier to work with.

153
00:11:51.140 --> 00:11:54.990
All right so now that we have that let's go ahead and make our new data.

154
00:11:55.010 --> 00:11:58.520
This is going to allow us to parse through each bit of data that we need.

155
00:11:58.520 --> 00:12:07.430
So we're going to say input stream reader dot and read just like that.

156
00:12:07.460 --> 00:12:12.020
This is where we'll set up our cool little while loop that goes through this until we run out of information

157
00:12:12.850 --> 00:12:17.350
and we'll say data not equal to negative 1.

158
00:12:17.570 --> 00:12:19.280
Then go ahead and do the following.

159
00:12:19.280 --> 00:12:26.240
So we get a character for the current piece of data that we're looking at so we're going to say this

160
00:12:26.240 --> 00:12:33.530
into a character just take whatever's inside of data then we're going to take our results and say OK

161
00:12:33.530 --> 00:12:38.690
we're going to add on to you with a plus or equals whatever current is that'll will slowly build up

162
00:12:38.690 --> 00:12:47.090
that string and then we'll take our data and move onto the next one by saying data is equal to our input

163
00:12:47.330 --> 00:12:54.220
stream reader not read we're just essentially takes us to the next item.

164
00:12:54.340 --> 00:12:54.820
All right.

165
00:12:54.820 --> 00:12:59.830
So once all of this is done we're going to go ahead and log out this information.

166
00:12:59.830 --> 00:13:01.720
So let's just do a log.

167
00:13:02.250 --> 00:13:10.030
And we'll just say you are all content and then we'll go ahead and specify whatever it is that we got

168
00:13:10.030 --> 00:13:12.070
back in the result.

169
00:13:12.070 --> 00:13:16.910
So go ahead and specify that right there.

170
00:13:16.930 --> 00:13:21.190
We also want to make sure that we actually return what we get back from that.

171
00:13:21.190 --> 00:13:24.210
So because right now we're just saying return no.

172
00:13:24.730 --> 00:13:32.830
But after we've gone through the whole while loop there we'll go ahead and return the result just like

173
00:13:32.830 --> 00:13:33.370
that.

174
00:13:33.620 --> 00:13:34.260
Okay.

175
00:13:34.630 --> 00:13:38.780
So with this in place we want to you know test it to see if it works out.

176
00:13:38.780 --> 00:13:44.930
So let's go ahead and move up to our uncreate and let's see.

177
00:13:44.980 --> 00:13:50.940
We are getting an error here because we are returning before that is saying it's an unreachable statement.

178
00:13:50.950 --> 00:13:52.720
Thank you android studio.

179
00:13:52.720 --> 00:13:54.920
The order of that does matter.

180
00:13:55.210 --> 00:13:58.870
But now we can go to this on create method and we can get some information.

181
00:13:58.870 --> 00:14:06.370
So before we set up the Saray adapter and all that good stuff let's go ahead and make it so that we

182
00:14:06.370 --> 00:14:10.930
can create a new download task and let's in fact just do this before all the list view and all that

183
00:14:10.930 --> 00:14:13.300
we want to keep these things together.

184
00:14:13.300 --> 00:14:19.300
In fact I'm just going to kind of get rid of some of the spaces so we know that's a group so we want

185
00:14:19.300 --> 00:14:27.600
to start a new download task which I'm going to call task and I'm going to set this equal to and you

186
00:14:28.350 --> 00:14:31.210
download task just like that.

187
00:14:31.500 --> 00:14:38.700
Once we have that in place we're going to have to do a try catch for executing this so go ahead and

188
00:14:38.700 --> 00:14:40.340
get that set up.

189
00:14:43.650 --> 00:14:49.140
Came with all of that in place you want to take this task that we just created and we're going to do

190
00:14:49.170 --> 00:14:52.920
dot execute and we're going to pass a string.

191
00:14:52.920 --> 00:15:01.320
So remember this is where we first want to try the hacker news you are l to go and get all the top stories

192
00:15:01.330 --> 00:15:04.740
so let's go back to Safari here.

193
00:15:05.070 --> 00:15:10.380
And remember we want to scroll down till we get that call that gives us all the latest stuff.

194
00:15:10.410 --> 00:15:15.500
So it's the new top and best stories so this one right here.

195
00:15:15.800 --> 00:15:18.480
There's top stories new stories best stories I think.

196
00:15:18.480 --> 00:15:20.850
Top stories is what we're looking for.

197
00:15:20.970 --> 00:15:24.790
So if we go ahead and click on this that's the oil that we're looking for.

198
00:15:25.020 --> 00:15:27.810
So let's just go ahead and copy this your l.

199
00:15:27.810 --> 00:15:29.250
Exactly.

200
00:15:29.250 --> 00:15:36.090
And we're going to come back to android studio and simply paste that and right there.

201
00:15:36.210 --> 00:15:36.770
OK.

202
00:15:37.080 --> 00:15:43.020
So with that in place let's go ahead and run this we should see and log cat because we are logging it

203
00:15:43.170 --> 00:15:44.640
down here.

204
00:15:45.000 --> 00:15:50.710
All those the big string of IDS which then we need to go get the information for.

205
00:15:50.730 --> 00:15:56.640
So let's open up log cat here and we'll scroll.

206
00:15:56.640 --> 00:15:57.110
Let's see.

207
00:15:57.120 --> 00:15:58.800
And look at that your aerial content.

208
00:15:58.800 --> 00:16:03.170
Look there's all those IDs and they just go and go and go and go and go.

209
00:16:03.590 --> 00:16:04.260
So that's great.

210
00:16:04.260 --> 00:16:06.060
Well we're at a pretty good point here right.

211
00:16:06.060 --> 00:16:12.270
Like we have all these ideas really the next step for us is we need to go take this information and

212
00:16:12.270 --> 00:16:15.760
then go get the actual news stories for them at least.

213
00:16:15.810 --> 00:16:21.270
You know you are all of that story the title of that story and then from there we can go get the actual

214
00:16:21.270 --> 00:16:22.080
age Tim l4.

215
00:16:22.080 --> 00:16:25.170
But the next step we need to get like the title and the URL.

216
00:16:25.320 --> 00:16:31.260
So in order to do that let's go ahead and move back to our main activity here as we're going through

217
00:16:31.260 --> 00:16:37.690
this data we get it back as a string but we actually want to process that as some Jaison data right.

218
00:16:37.700 --> 00:16:40.820
And so let's go ahead after this wall statement.

219
00:16:41.010 --> 00:16:47.910
We're going to create a saw an array and let's just go ahead and call this maybe just lowercase J sunray

220
00:16:48.450 --> 00:16:53.930
say this is new Jason Horray and we're going to pass in our result string.

221
00:16:54.030 --> 00:16:59.010
So the idea here is we're going to take the string that is a you know is an actual array of things actually

222
00:16:59.010 --> 00:17:02.330
turn into adjacent arrays so that we could loop through stuff.

223
00:17:02.400 --> 00:17:05.730
So we kind of have to choose how many different items we want to work with.

224
00:17:05.730 --> 00:17:10.710
I know we get back I think the API said 30 but let's keep things simple and just work with 20 because

225
00:17:11.070 --> 00:17:15.210
the more things that we have the more things we have to download and we can kind of just be a little

226
00:17:15.210 --> 00:17:19.560
bit of tough work and we can in our testing keep it a low number and then in the actual app you can

227
00:17:19.560 --> 00:17:20.040
bump it up.

228
00:17:20.040 --> 00:17:23.580
That's the nice thing about making a variable like this.

229
00:17:23.580 --> 00:17:24.830
You can always change what it should be.

230
00:17:24.840 --> 00:17:31.350
But let's just go ahead and call it something like number of items will set this equal to 20 for now

231
00:17:32.430 --> 00:17:38.010
and then when we're going to do is let's do an if statement and we're going to check and make sure that

232
00:17:38.010 --> 00:17:50.770
we have at least enough of these so we're going to say all right if Jason Auray dot length is less than

233
00:17:50.920 --> 00:18:00.370
20 then we want to take our number of items and set that equal to Jason Auray length.

234
00:18:00.370 --> 00:18:03.510
So for some reason I don't think this would happen.

235
00:18:03.520 --> 00:18:05.910
But you know we get back 15 items right.

236
00:18:05.910 --> 00:18:10.720
So we're saying OK if there's less than 20 items that we just say the number of items equal to whatever

237
00:18:10.720 --> 00:18:12.300
the length is.

238
00:18:12.340 --> 00:18:17.760
So this is just kind of putting a max cap on things and just making sure everything's OK there.

239
00:18:17.770 --> 00:18:22.490
Now once we have that in place let's do a for loop where we can loop through all of these items.

240
00:18:22.540 --> 00:18:24.970
So we'll get our four loops set up.

241
00:18:25.240 --> 00:18:31.270
Let's do our classic where you know we have the entire eye and you know moving through saurian say implies

242
00:18:31.330 --> 00:18:32.670
equal to zero.

243
00:18:33.050 --> 00:18:41.270
And while I is less than the number of items I want to do on a plus plus can.

244
00:18:41.680 --> 00:18:45.330
So with this in place let's go ahead and fill in the rest that we need here.

245
00:18:45.330 --> 00:18:51.070
So the first thing that we want to do through when we're looping through is we want to see what items

246
00:18:51.130 --> 00:18:55.290
it is that we can find and the first thing that we've got to do is we've got to get the article ID.

247
00:18:55.300 --> 00:19:04.720
So we're going to say string article ID and we're going to set this equal to our Jason array and get

248
00:19:04.720 --> 00:19:07.650
the string at whatever particular index that we're at.

249
00:19:07.640 --> 00:19:09.610
So this put the high right in there.

250
00:19:09.610 --> 00:19:15.070
So for example if we're looking at the API this will grab the very first item right here.

251
00:19:15.070 --> 00:19:20.090
So once we have that in place let's get back to android studio here.

252
00:19:20.320 --> 00:19:25.170
The next step that we want to do is we want to get the URL for the particular article.

253
00:19:25.260 --> 00:19:34.680
So for that particular ID so we're going to say your L is equal to a new capital you are now.

254
00:19:35.110 --> 00:19:38.720
And inside of here we want to pass in a string.

255
00:19:39.250 --> 00:19:42.840
So let's go back to the API ones that are back button real quick.

256
00:19:42.910 --> 00:19:45.720
And again remember if we scroll to the top.

257
00:19:45.940 --> 00:19:51.190
We're looking for something like this right where we can give some sort of ID in this case it's 8 8

258
00:19:51.190 --> 00:19:53.100
6 3.

259
00:19:53.200 --> 00:19:58.720
And so it's going to give us back the title The YOUR all that good information who want to copy this

260
00:19:58.950 --> 00:20:01.880
L come back to android studio paste that end.

261
00:20:01.900 --> 00:20:08.260
But instead of having this 8 8 6 3 that should be whatever article ideas so go ahead and break up the

262
00:20:08.260 --> 00:20:14.400
string right there and we'll just do a plus in between the two of those can.

263
00:20:14.710 --> 00:20:22.110
And the thing that will go on and add right smack dab in the middle is our article Id say.

264
00:20:22.360 --> 00:20:28.630
So it gives us a new york deal with this article ID ready to go grab that particular piece of information

265
00:20:29.260 --> 00:20:30.150
then we're going to go.

266
00:20:30.160 --> 00:20:33.370
Want to run this basically the same code that we had before right.

267
00:20:33.370 --> 00:20:40.090
We want to make a New York connection and you know get this data do the input stream reader all that

268
00:20:40.090 --> 00:20:46.380
good stuff so let's just go ahead and copy that big chunk and we'll paste it down below.

269
00:20:46.420 --> 00:20:51.100
Now we don't need to recreate the input stream so we'll just go ahead and delete that again input stream

270
00:20:51.100 --> 00:20:52.200
reader.

271
00:20:52.840 --> 00:20:57.520
We're just going to go ahead and make it so we're not recreating those for the first time.

272
00:20:57.520 --> 00:21:03.010
Same thing goes with data and then we can go through read all the stuff.

273
00:21:03.010 --> 00:21:08.650
And if this all worked we should be able to get some article info so we're going to go ahead and log

274
00:21:08.740 --> 00:21:18.880
out information about the articles all say article info and we're going to go ahead and spit out whatever

275
00:21:18.970 --> 00:21:20.410
result is here.

276
00:21:20.500 --> 00:21:21.190
OK.

277
00:21:21.460 --> 00:21:26.440
Now I'm sensing something that we're going to have a problem with and that's that after we've completed

278
00:21:26.440 --> 00:21:31.530
this if we keep changing what this is it could it could get confusing with the resoled stuff right.

279
00:21:31.540 --> 00:21:34.900
Especially if we're Retrying a return result after that.

280
00:21:34.900 --> 00:21:40.270
So let's say rather than result we're going to make a new string that's going to be called Article info.

281
00:21:40.270 --> 00:21:42.550
So let's make a new string.

282
00:21:42.550 --> 00:21:48.890
I'm going to call it article info and I'll set this equal to an empty string.

283
00:21:49.180 --> 00:21:49.800
OK.

284
00:21:50.080 --> 00:21:56.740
And then we'll take this article info and we'll do that and then we can print out whatever article info

285
00:21:57.130 --> 00:22:01.660
is supposed to be and that will just make things a little bit easier to work with here.

286
00:22:01.660 --> 00:22:08.760
So with that in place let's go ahead and run our app and see what it looks like.

287
00:22:09.040 --> 00:22:10.430
OK.

288
00:22:11.170 --> 00:22:18.870
So go ahead and get log cat open here ready to rock n roll for emulator to open up.

289
00:22:18.910 --> 00:22:19.980
OK so here it comes.

290
00:22:20.000 --> 00:22:20.540
Boom.

291
00:22:20.540 --> 00:22:20.980
Look at that.

292
00:22:20.980 --> 00:22:22.630
We are printing out a ton of stuff.

293
00:22:22.630 --> 00:22:25.140
So it went and got.

294
00:22:25.220 --> 00:22:30.730
You can see at the very end there print out results which was all the ideas but then also when got all

295
00:22:30.730 --> 00:22:35.000
these new stories how to explain your tech jobs your family during the holidays.

296
00:22:35.410 --> 00:22:36.560
That's kind of funny.

297
00:22:36.590 --> 00:22:37.440
Did you go for it.

298
00:22:37.440 --> 00:22:37.870
No.

299
00:22:37.960 --> 00:22:39.220
Yes.

300
00:22:39.550 --> 00:22:40.700
Lightning makes new.

301
00:22:40.720 --> 00:22:44.770
I still have no idea what that was about you Theertham now handles more transactions than all digital

302
00:22:44.770 --> 00:22:45.950
currencies combined.

303
00:22:46.260 --> 00:22:47.180
That's kind of cool.

304
00:22:47.570 --> 00:22:49.070
And that's why I like Hacker News.

305
00:22:49.070 --> 00:22:52.330
You know there's all sorts of interesting stuff on here.

306
00:22:52.370 --> 00:22:59.300
But we now got these articles and really just the next step for us is we want to pull out two pieces

307
00:22:59.300 --> 00:23:02.500
of information that's the title and the are are.

308
00:23:02.510 --> 00:23:06.130
Those are the two pieces of information that we're looking for.

309
00:23:06.140 --> 00:23:09.260
So let's go ahead and write the code to grab those.

310
00:23:09.260 --> 00:23:14.090
All right so let's go ahead and down here rather than just printing out the article in FOL Let's go

311
00:23:14.090 --> 00:23:16.550
ahead and parse through this information.

312
00:23:16.550 --> 00:23:19.910
So our first step is going to be to turn this into a Jaison object.

313
00:23:19.970 --> 00:23:26.660
So go ahead type out Jason object and we'll just call it lowercase J some object and we'll say this

314
00:23:26.660 --> 00:23:33.140
is equal to a new capital Jaison object and let's pass in the article info right.

315
00:23:33.170 --> 00:23:34.370
That's that string.

316
00:23:34.580 --> 00:23:36.840
So we've just compiled that we had logging out.

317
00:23:36.830 --> 00:23:43.270
So once we have that piece of information then let's make sure we have both a title and a you are l

318
00:23:43.280 --> 00:23:44.200
ready to rock n roll.

319
00:23:44.200 --> 00:23:47.780
It's important that we check this because you know for some instance me one of the articles doesn't

320
00:23:47.780 --> 00:23:49.220
have a your L or something like that.

321
00:23:49.220 --> 00:23:51.920
We want to make sure that that is the case.

322
00:23:51.920 --> 00:23:57.320
So we're going to say we're going to check on our Jason object that we have.

323
00:23:57.520 --> 00:24:00.600
We're going to say Dot is no.

324
00:24:00.700 --> 00:24:05.360
No we're going to check it for a particular item so in this case we're going to say title.

325
00:24:05.420 --> 00:24:09.660
So we're going to put the exclamation point to say as long as this is not normal.

326
00:24:10.060 --> 00:24:14.180
And we also want to confirm that the R L is there so we're going to do.

327
00:24:14.180 --> 00:24:17.310
Exclamation point J some object.

328
00:24:17.430 --> 00:24:19.290
Dot is no.

329
00:24:19.430 --> 00:24:21.360
And again we'll pass inside of here.

330
00:24:21.380 --> 00:24:23.210
Lowercase u r l.

331
00:24:23.390 --> 00:24:23.970
All right.

332
00:24:24.380 --> 00:24:30.350
So with that in there we now know for sure that there is a title and a u r l that we can work with so

333
00:24:30.350 --> 00:24:32.150
we can go ahead and pull those two things out.

334
00:24:32.150 --> 00:24:40.040
So let's first make a string for our article title and we're going to set this equal to or Jason object

335
00:24:40.820 --> 00:24:47.990
and then we want to get to the string for title all lowercase there gang.

336
00:24:48.110 --> 00:24:55.700
Next we want to go ahead and get the article you or else we're going to do a string particle u r l and

337
00:24:56.180 --> 00:25:04.810
we're going to say that this is equal to our J song not a saw an object dot get string.

338
00:25:04.910 --> 00:25:07.370
In this case we'll pass in lowercase.

339
00:25:07.550 --> 00:25:09.320
You are ill in a semi-colon.

340
00:25:09.620 --> 00:25:15.260
So with those two pieces in place let's go ahead and log out make sure we're getting what it is that

341
00:25:15.260 --> 00:25:23.210
we're hoping for some will say log I am going to say the title and your L and the second piece that

342
00:25:23.210 --> 00:25:27.290
will provide in there is the article.

343
00:25:27.290 --> 00:25:28.370
Got to spell it correctly.

344
00:25:28.370 --> 00:25:32.440
Article title.

345
00:25:33.150 --> 00:25:35.000
No I didn't spell it correctly over here.

346
00:25:35.000 --> 00:25:36.520
Article title

347
00:25:40.170 --> 00:25:49.530
see the plus the article you so have those two pieces of information that will go ahead and print out.

348
00:25:49.670 --> 00:25:52.950
And I'm really botching it here on the spelling.

349
00:25:52.950 --> 00:25:53.820
But there we go.

350
00:25:53.970 --> 00:25:56.090
That's finally going to show out that information.

351
00:25:56.090 --> 00:26:01.540
So let's go ahead and run this and make sure that we're getting the title title and the your all all

352
00:26:01.550 --> 00:26:06.450
printed out and so if we have that that means we have those two pieces of information really just the

353
00:26:06.450 --> 00:26:12.150
last step for us is that we have to you know go download that information so let's get Lague can't open

354
00:26:12.150 --> 00:26:14.200
up here and help.

355
00:26:14.220 --> 00:26:19.390
Looks like Arap already opened up and there was art content there.

356
00:26:19.680 --> 00:26:22.220
And here we're printing out.

357
00:26:22.510 --> 00:26:26.620
This looks like it's from last time.

358
00:26:26.700 --> 00:26:29.050
Let's go ahead and run this one more time.

359
00:26:31.170 --> 00:26:41.350
So run this know we didn't see a change down here so we need to reconnect this to the new emulator.

360
00:26:41.350 --> 00:26:43.050
There we go.

361
00:26:43.270 --> 00:26:48.280
Now after doing this look at that for a title and you are well we've got these beautiful titles and

362
00:26:48.280 --> 00:26:50.650
then we've got the that you are all showing up.

363
00:26:50.710 --> 00:26:53.820
That's exactly perfect this is what we wanted.

364
00:26:53.830 --> 00:26:55.380
This is looking great.

365
00:26:55.780 --> 00:27:00.970
So now that we have that in place like I said the next step for us is really and I know we've done a

366
00:27:00.970 --> 00:27:06.130
lot of you know Internet data processing here we just got to do one more step and that's where we're

367
00:27:06.130 --> 00:27:11.680
going to take this title and that's your goal and we're going to go download the appropriate information

368
00:27:11.680 --> 00:27:12.430
for this.

369
00:27:12.430 --> 00:27:18.610
So after we've got the article you are your the article title we're going to pass at least the U R L

370
00:27:18.610 --> 00:27:26.680
into R U R L object when I say you are l is equal to capital U R L and inside of they're going to pass

371
00:27:26.680 --> 00:27:31.740
the call your own.

372
00:27:31.960 --> 00:27:32.950
Excellent.

373
00:27:33.340 --> 00:27:41.350
And with that in place we're going to reset up that your real connection so I'll say here and let's

374
00:27:41.350 --> 00:27:43.740
see oh this needs to be a new york.

375
00:27:43.750 --> 00:27:45.840
That's why we're getting some errors there.

376
00:27:45.880 --> 00:27:52.030
Your connection will take that you are all that we just made and say open connection and once we've

377
00:27:52.030 --> 00:28:00.790
gone ahead and done that we're going to have to cast this so we'll say HTP your connection looks good.

378
00:28:00.850 --> 00:28:01.150
All right.

379
00:28:01.150 --> 00:28:04.660
Once we have the moral connection then we have to get our input stream.

380
00:28:04.660 --> 00:28:13.300
So we're going to say input stream you are equal to our your old connection dot input excuse me get

381
00:28:13.370 --> 00:28:15.100
your input stream.

382
00:28:15.370 --> 00:28:19.620
Then once we have that we need to set up the input stream reader.

383
00:28:20.080 --> 00:28:25.560
So we're going to say input stream reader is equal to.

384
00:28:26.050 --> 00:28:35.320
And this is where we get a new input stream reader and we're going to pass in our existing input stream.

385
00:28:35.320 --> 00:28:36.140
Excellent.

386
00:28:36.370 --> 00:28:44.170
Then after we've done this then we want to get our data set up so we're going to say data is equal to

387
00:28:44.170 --> 00:28:50.180
our input stream reader read.

388
00:28:50.750 --> 00:28:51.260
OK.

389
00:28:51.310 --> 00:28:56.660
So we've gone ahead and gotten that in place then we need to have a new string that represents the email

390
00:28:56.670 --> 00:29:05.830
mail from the article so maybe let's call this article content and we'll say this is equal to an empty

391
00:29:05.830 --> 00:29:06.390
string.

392
00:29:06.390 --> 00:29:08.130
At least for the time being.

393
00:29:08.410 --> 00:29:14.200
And then we'll just do our classic while loop here this will be the last one for us where we go ahead

394
00:29:14.200 --> 00:29:19.790
and get all the data so we're going to say as long as data's not equal to negative 1.

395
00:29:19.870 --> 00:29:25.300
That means it's stopped out and we're going to go get a character which we're going to call current

396
00:29:25.850 --> 00:29:37.930
We say this is equal to char data and then we're going to add this onto our article content say article

397
00:29:38.200 --> 00:29:41.260
content plus equals.

398
00:29:41.360 --> 00:29:48.250
We're going to pass on current there and then we'll finish up by saying hey data you need to go ahead

399
00:29:48.250 --> 00:29:55.310
and move onto the next one so we'll get our input stream reader say not read anything.

400
00:29:55.420 --> 00:29:58.140
That will go ahead and get that information.

401
00:29:58.150 --> 00:30:05.020
Now to make sure that this is all working we want to go ahead and log out this information or say log

402
00:30:05.020 --> 00:30:05.760
done.

403
00:30:05.960 --> 00:30:17.260
And I'll say maybe I'll just call this H2 your mail and we want to pass forward the article content.

404
00:30:17.260 --> 00:30:22.040
Now this is going to take a little bit of time because you know this one where it works.

405
00:30:22.150 --> 00:30:28.010
If you think about this were first hitting the API for all the article IDs once we do that we go and

406
00:30:28.010 --> 00:30:33.460
get all the information for each of those IDs which gives us a title and a u r l and then now we are

407
00:30:33.460 --> 00:30:38.560
going forward in getting all the h t M-L for each of those individual Web sites so there's a lot of

408
00:30:38.560 --> 00:30:42.370
different calls that are kind of going out to the Internet.

409
00:30:42.380 --> 00:30:48.790
So I mean you'll actually see if we just open up log cat here it's expected that this is going to take

410
00:30:49.210 --> 00:30:55.030
a little bit of time and you know we might not see results immediately so go ahead and give this a second

411
00:30:55.030 --> 00:30:59.280
here to get to its place and we will come back.

412
00:30:59.500 --> 00:31:04.360
So it took some time but finally we got a ton of e-mail showing up here and this is great because this

413
00:31:04.360 --> 00:31:09.700
means we went in for each of those individual individual articles we have the title now we have the

414
00:31:09.700 --> 00:31:16.750
aids team mail that we got via the u r l We data wise have everything that we need now in order to finish

415
00:31:16.750 --> 00:31:22.690
our app we need to make a list view that shows all the different articles and that needs to be stored

416
00:31:22.720 --> 00:31:27.370
inside of our eschewing database which at this point we don't even have an ask.

417
00:31:27.400 --> 00:31:31.810
Well database to work with so there's a couple of steps that we've got to go and even from there we've

418
00:31:31.810 --> 00:31:36.850
got to go create a new city so that when someone wants to view this that they can go ahead and do that.

419
00:31:36.850 --> 00:31:40.280
So let's go ahead and get to the top of the page here.

420
00:31:40.320 --> 00:31:42.840
There's a few extra things that we want to set up here.

421
00:31:42.840 --> 00:31:47.660
So the first one is we want to have a database where we can store all this information.

422
00:31:47.670 --> 00:31:51.940
So let's make it new as well.

423
00:31:52.170 --> 00:32:01.690
Light database and we're going to go ahead and call this art KOLs D-B case or just go ahead and saying

424
00:32:01.710 --> 00:32:09.260
we want to define that then we'll come down here and in our actual code we'll go get this all set up.

425
00:32:09.360 --> 00:32:14.970
So and let's do this before we go and hit any sort of download tasks because we want to make sure the

426
00:32:14.970 --> 00:32:17.370
database is ready before we go and do that.

427
00:32:17.700 --> 00:32:25.710
So what we're going to do is first take our articles TV and we're going to set this up by saying we

428
00:32:25.710 --> 00:32:36.040
want this to be equal to this open or create database and we'll just give it the name of capital articles.

429
00:32:36.290 --> 00:32:36.980
OK.

430
00:32:37.290 --> 00:32:41.190
And we want to pass in capital mode private.

431
00:32:41.550 --> 00:32:47.550
And we also want to say no here at the banks we don't need any sort of special handling.

432
00:32:47.820 --> 00:32:48.260
All right.

433
00:32:48.270 --> 00:32:54.840
With that in place the next thing that we need to do is do an execute a statement to say hey you know

434
00:32:54.840 --> 00:32:57.790
let's go ahead and get the table set up for all this.

435
00:32:57.870 --> 00:33:05.450
So articles divi got execute as well and the string that we're going to put inside of here is would

436
00:33:05.480 --> 00:33:11.760
be ready because we got a lot of typing create to make sure this is ALL CAPS.

437
00:33:11.780 --> 00:33:14.310
I'm turning my capsulize make this a little bit easier.

438
00:33:14.430 --> 00:33:18.660
Create table if not exists.

439
00:33:19.080 --> 00:33:26.970
And now in lower case we're going to say lowercase articles back to our upper case excuse me we're going

440
00:33:26.970 --> 00:33:29.880
to do print this is to say what this is going to consist of.

441
00:33:30.120 --> 00:33:37.110
So we're going to have I.D. which we want to be an integer and not only that it's also going to be our

442
00:33:37.110 --> 00:33:38.630
primary key.

443
00:33:38.630 --> 00:33:44.370
Remember when we learned about that does some auto incrementing stuff really great.

444
00:33:44.370 --> 00:33:54.360
Next thing that we're looking for is we want to have the article ID and we're going to have this be

445
00:33:54.360 --> 00:33:59.040
just integer k and we've got that in place.

446
00:33:59.040 --> 00:34:06.240
The next thing that we're looking for is a title that's just going to be a VAR char Akkad the databases

447
00:34:06.300 --> 00:34:08.010
version of a string.

448
00:34:08.280 --> 00:34:10.290
And then the last thing that we need is content.

449
00:34:10.290 --> 00:34:13.660
This is essentially going to hold that string of HVM now.

450
00:34:13.890 --> 00:34:16.510
And this is also going to be a VAR char.

451
00:34:16.530 --> 00:34:19.410
So we'll just go ahead and plop that in.

452
00:34:19.410 --> 00:34:27.330
So with all that information in place we now have everything that we need in order to get the table

453
00:34:27.450 --> 00:34:28.420
all set up.

454
00:34:28.630 --> 00:34:29.230
Okay.

455
00:34:29.670 --> 00:34:36.540
And then you know we want to go about creating you know this is fine now to go do hit up this your L

456
00:34:36.540 --> 00:34:38.000
for all that information.

457
00:34:38.010 --> 00:34:44.390
So the next step for us is after we've gone and gotten that information we need to be storing that inside

458
00:34:44.400 --> 00:34:50.070
the database so we're going to move down here all the way to where we've gotten our article content

459
00:34:50.070 --> 00:34:53.410
because that means we've essentially gotten everything that we need.

460
00:34:53.880 --> 00:34:59.120
And the first thing that we're going to do is we're going to make a string of some as well content that

461
00:34:59.130 --> 00:35:04.620
we want to do and I'm going to show you how to pass some data into an Eskew well line of code this will

462
00:35:04.620 --> 00:35:05.190
be pretty neat.

463
00:35:05.190 --> 00:35:10.520
So we're going to make a new string or we'll just call lower case as well.

464
00:35:10.650 --> 00:35:20.030
And this will be equal to say insert into lowercase articles.

465
00:35:20.340 --> 00:35:21.740
Make sure you have the s on there.

466
00:35:21.780 --> 00:35:31.560
And we're going to pass through what we want to add so we want to say what the article ID is.

467
00:35:31.650 --> 00:35:34.160
We also want to say what the title is going to be.

468
00:35:34.170 --> 00:35:36.820
And we also want to specify the content.

469
00:35:37.010 --> 00:35:41.650
And so if we scroll up here to the top we had set this up right.

470
00:35:41.670 --> 00:35:47.760
We don't need to set the ID but these three things article ID title on content we do want to set those

471
00:35:47.760 --> 00:35:48.870
up.

472
00:35:49.200 --> 00:35:51.640
So I'll say those are the three things that we want to pass in.

473
00:35:51.660 --> 00:35:57.270
And then if you remember you have to say values and then specify in parentheses what it is that you

474
00:35:57.270 --> 00:35:57.820
want to add.

475
00:35:57.840 --> 00:36:04.410
And this is where things get a little bit tricky or just a question mark comma question mark comma question

476
00:36:04.410 --> 00:36:11.550
mark and what we're going to do is we're going to then add in appropriate information in here so that

477
00:36:11.550 --> 00:36:13.950
it will go and add the appropriate data.

478
00:36:13.950 --> 00:36:21.520
So with this in place we're going to create a new kind of object code as well.

479
00:36:21.840 --> 00:36:23.170
Light statement.

480
00:36:23.220 --> 00:36:30.570
So I ask you how light statement and we can just go ahead and call this statement and say this is equal

481
00:36:30.570 --> 00:36:40.560
to our articles D-B not we want to do compile statement and we need to pass at some sort of strings.

482
00:36:40.560 --> 00:36:43.280
So that's going to be our string here called as well.

483
00:36:43.680 --> 00:36:48.150
And once we have this in place we're now going to start passing in information so we're going to say

484
00:36:48.390 --> 00:36:53.260
statement does it bind string.

485
00:36:53.460 --> 00:36:58.290
And this is where we're going to pass in the appropriate information so you need to say where what position

486
00:36:58.290 --> 00:37:04.110
you're passing this and that and it's not a zero based counting it's one to one based counting system

487
00:37:04.110 --> 00:37:07.740
so we're going to start with one that's the index and then we need to provide a string.

488
00:37:07.740 --> 00:37:11.280
So in this case the first thing that we want to pass through is an article ID.

489
00:37:11.280 --> 00:37:14.030
So we're going to pass through article ID.

490
00:37:14.040 --> 00:37:15.210
Simple as that.

491
00:37:15.360 --> 00:37:21.300
And I'm going to just go ahead and copy and paste this two more times so I can properly add in title

492
00:37:21.300 --> 00:37:21.990
and content.

493
00:37:21.990 --> 00:37:30.420
So for index number 2 which should be title we're going to go ahead and pass an article not article

494
00:37:30.420 --> 00:37:33.130
article title.

495
00:37:33.140 --> 00:37:33.660
Excellent.

496
00:37:33.660 --> 00:37:36.690
And then for index number three the last one we want the content.

497
00:37:36.960 --> 00:37:42.120
So that is going to be this article content that we just took all that code to get soring take article

498
00:37:42.120 --> 00:37:44.740
content and pass that in.

499
00:37:44.760 --> 00:37:48.940
OK so once we have this we're going to take this and say statement.

500
00:37:49.020 --> 00:37:54.090
Execute and you might be wondering well why do we go through all the worry of passing these things here

501
00:37:54.090 --> 00:37:59.100
into an eschewing light statement and you know having to put those them in that position.

502
00:37:59.110 --> 00:38:03.610
Well because you know like we could have just said hey make some make a string and put this all together

503
00:38:03.630 --> 00:38:09.730
but by doing this as cue a light statement it protects our database in case we accidentally put something

504
00:38:09.730 --> 00:38:15.330
then that would try to delete our database because this is life code that's going into our database.

505
00:38:15.640 --> 00:38:21.900
There's other things that we'd want to consider here that you know with HCM there might be something

506
00:38:21.900 --> 00:38:26.760
that breaks the string up there's just all sorts of situations in which we would want to make sure that

507
00:38:26.760 --> 00:38:28.090
this is all OK.

508
00:38:28.260 --> 00:38:34.350
So with that in place this should insert everything we need in there and each time we run the app we

509
00:38:34.350 --> 00:38:38.850
want to make sure that if we're going to go hit up all this information before we do we clear out the

510
00:38:38.850 --> 00:38:39.500
table.

511
00:38:39.750 --> 00:38:45.720
So let's go ahead and before we go loop through each of the items let's just execute a statement so

512
00:38:45.720 --> 00:38:50.660
we're going to say articles D-B execute as well.

513
00:38:51.000 --> 00:38:56.250
And inside of here we're going to say all caps delete from

514
00:38:58.970 --> 00:39:00.860
and we want lowercase articles.

515
00:39:00.870 --> 00:39:06.040
That's the table that we're going to be deleting from Ken.

516
00:39:06.120 --> 00:39:12.810
So with all this in place we should be in a pretty good position for storing some information but we

517
00:39:12.810 --> 00:39:17.850
need to have a way to update our app whenever we get this new information.

518
00:39:17.850 --> 00:39:23.930
So we are going to make a new method here so let's do this below the uncreate.

519
00:39:24.330 --> 00:39:30.240
We're just going to say public void and the function or method that we want to create is called update

520
00:39:30.240 --> 00:39:31.260
list view.

521
00:39:31.620 --> 00:39:36.500
So this is going to allow us to just make sure everything's all up to date.

522
00:39:36.510 --> 00:39:37.970
Ready to rock and roll.

523
00:39:37.980 --> 00:39:42.270
So the first thing that we got to do is you know we essentially want to get stuff out of the database

524
00:39:42.540 --> 00:39:46.140
get it into the appropriate arrays and then display that to the user.

525
00:39:46.380 --> 00:39:50.410
So what we're going to do first is get a cursor that we'll call.

526
00:39:50.940 --> 00:39:58.610
And this is going to be equal to articles D.B dot RA query.

527
00:39:58.610 --> 00:40:00.800
Remember this is how we pull things out.

528
00:40:00.800 --> 00:40:07.730
You want to say select star which is the same as select everything from articles.

529
00:40:08.000 --> 00:40:08.780
OK.

530
00:40:09.170 --> 00:40:12.040
And we'll go ahead and for the second parameter we're going to pass in.

531
00:40:12.110 --> 00:40:13.390
No.

532
00:40:13.820 --> 00:40:19.640
And once we have that in place we want to go ahead and get you know have a way to get to the content

533
00:40:19.640 --> 00:40:20.180
in the title.

534
00:40:20.180 --> 00:40:23.090
Those are the main two things that we want to pull from our database.

535
00:40:23.090 --> 00:40:27.460
We also have an article ID but we're not particularly concerned about that right now.

536
00:40:27.680 --> 00:40:36.560
So we need to make indexes for those who are going to say content index is equal to the DOT get column

537
00:40:36.560 --> 00:40:42.180
index for content just like that.

538
00:40:42.680 --> 00:40:53.090
And we're going to say inte title index is equal to see get the column index for a title.

539
00:40:53.090 --> 00:40:53.760
All right.

540
00:40:54.050 --> 00:40:59.340
So now that we have those two things in place we're going to go ahead and start moving through.

541
00:40:59.360 --> 00:41:05.720
So the first thing that we want to check here is we're going to do an if statement make sure that we

542
00:41:05.720 --> 00:41:08.030
have something that we can appropriately do.

543
00:41:08.030 --> 00:41:12.330
So we're going to say See move to first.

544
00:41:12.330 --> 00:41:18.260
So as long as that works out we're going to first take our titles array and we're going to go ahead

545
00:41:18.260 --> 00:41:21.220
and clear everything out of there.

546
00:41:21.260 --> 00:41:27.410
Next we need to have a content R-ALA So we're actually just going to go ahead and copy this right here

547
00:41:27.410 --> 00:41:29.030
pace it down below.

548
00:41:29.030 --> 00:41:33.400
We need to make a new parathas called content.

549
00:41:33.410 --> 00:41:34.370
All right.

550
00:41:34.370 --> 00:41:42.200
So with that we're going to say content dot clear clear out whatever we have inside of there then we're

551
00:41:42.200 --> 00:41:43.440
going to do a dual.

552
00:41:43.450 --> 00:41:47.720
While loops so this is a little bit different from a while loop in that we do the code first then we

553
00:41:47.720 --> 00:41:52.460
do the while statement to check if things are working it's essentially the same it just sort of checks

554
00:41:52.460 --> 00:41:54.970
things in different order so we have a do with curly brackets.

555
00:41:54.980 --> 00:42:01.100
And then a while where in parentheses We're checking a particular situation and this one we have seen

556
00:42:01.140 --> 00:42:02.860
not move to first.

557
00:42:02.860 --> 00:42:08.270
So we'll go ahead and do that and then we want to do inside of here is just fill up those titles and

558
00:42:08.270 --> 00:42:14.030
content arrays so we're going to say titles dot add.

559
00:42:14.870 --> 00:42:25.370
And what we want to add is see Dot get strain and we're going to pass in the title index boom just like

560
00:42:25.370 --> 00:42:31.070
that we're filling it up and we're going to take our content array list and and we're going to add and

561
00:42:31.070 --> 00:42:37.610
see get string and we are going to pass in the content index.

562
00:42:37.610 --> 00:42:43.670
So we'll go ahead and put in those two pieces of information and once we loop through all those things

563
00:42:44.110 --> 00:42:49.280
where want to go ahead and take our array adapter and say hey you've got some new information.

564
00:42:49.310 --> 00:42:55.220
So we're going to do notify data set change and that should prompted to say I need to go update all

565
00:42:55.220 --> 00:42:56.650
of this information.

566
00:42:56.720 --> 00:43:02.530
So now that we have this function called update list view we have to call it in the appropriate places.

567
00:43:02.540 --> 00:43:06.230
So the first one is going to be inside of our on create.

568
00:43:06.230 --> 00:43:12.020
So after we've got all this information up ready to rock and roll like the databases and whatnot we're

569
00:43:12.020 --> 00:43:14.660
going to go ahead and say all right update list view.

570
00:43:14.690 --> 00:43:21.050
That's one place that we're going to want to run this and the next one is if we scroll down on our download

571
00:43:21.050 --> 00:43:29.060
task class here we're going to go all the way down here so you know the big function that we have here

572
00:43:29.060 --> 00:43:35.960
is called do in background remember there's a nother function that we can add which is called on post

573
00:43:36.050 --> 00:43:38.270
execute and this gets run at the very end.

574
00:43:38.270 --> 00:43:46.460
So with this we're going to just call update list view right there because that saying hey after everything's

575
00:43:46.460 --> 00:43:51.770
finished let's go ahead an update list view so that we get all the appropriate information.

576
00:43:51.770 --> 00:43:54.050
So big moment of truth here.

577
00:43:54.060 --> 00:43:56.510
Let's go ahead and give this a run.

578
00:43:56.510 --> 00:44:02.420
Like I said earlier this will be a little bit tricky because you know there's so many different articles

579
00:44:02.420 --> 00:44:04.820
it's got to go out and get there.

580
00:44:04.970 --> 00:44:08.370
So it's going to take a little bit of time to get that information.

581
00:44:08.520 --> 00:44:11.210
But let's see.

582
00:44:12.020 --> 00:44:15.800
No such table articles.

583
00:44:16.340 --> 00:44:20.120
I believe I've done some misspelling here.

584
00:44:20.210 --> 00:44:25.170
So let's go ahead and make sure I've got this all correct.

585
00:44:25.190 --> 00:44:30.170
Let's see our articles.

586
00:44:30.170 --> 00:44:31.460
That should fix it.

587
00:44:31.460 --> 00:44:35.000
Let's go ahead and give us a run what you yet now.

588
00:44:35.990 --> 00:44:42.710
OK Luckily I asked you a light has some pretty good logs so that when I make some mistakes there's a

589
00:44:42.710 --> 00:44:44.290
chance for me to recover from those.

590
00:44:44.290 --> 00:44:50.390
So we'll have our app open here because the idea is that you know as new information comes through that

591
00:44:50.390 --> 00:44:53.870
we'll get that although we're going to have to wait for all of the data to come through.

592
00:44:53.870 --> 00:44:55.090
So this could take some time.

593
00:44:55.530 --> 00:44:59.540
I'm going to go ahead and pause the video and come back when this is finished.

594
00:44:59.670 --> 00:45:05.470
Well you look at my spelling killed me again in our insert statement I accidentally misspelled article

595
00:45:05.470 --> 00:45:10.380
so I've got articles one more time and I'm going to looks like I've misspelled this a couple of places

596
00:45:10.380 --> 00:45:13.390
so article ID.

597
00:45:13.530 --> 00:45:14.420
That all looks fine.

598
00:45:14.420 --> 00:45:17.060
I've got articles there.

599
00:45:17.670 --> 00:45:20.560
Let's make sure up at the top here.

600
00:45:20.570 --> 00:45:22.770
That's all good articles.

601
00:45:22.770 --> 00:45:23.610
Yeah.

602
00:45:24.270 --> 00:45:28.250
OK articles articles article ID.

603
00:45:28.260 --> 00:45:30.650
You know this should be all better.

604
00:45:31.050 --> 00:45:32.730
I wouldn't be surprised if we come back here.

605
00:45:32.730 --> 00:45:36.600
But again let me pause this now should go get that data.

606
00:45:36.870 --> 00:45:41.280
So I decided while we're waiting for this to load here it might be worth going ahead and moving on to

607
00:45:41.280 --> 00:45:45.520
the next step and just working on that next activity that we're going to create.

608
00:45:45.750 --> 00:45:52.860
So let's go ahead and inside of our app here let's make that new activity we'll say file new activity.

609
00:45:53.120 --> 00:45:55.260
Let's just pick one from the gallery.

610
00:45:55.560 --> 00:45:57.660
We want an empty activity.

611
00:45:57.870 --> 00:46:03.030
And let's go ahead and give this the name of maybe something like art and whole activity.

612
00:46:03.240 --> 00:46:09.900
So once we go ahead and hit finish on that this is going to add that new activity for us and this new

613
00:46:09.900 --> 00:46:13.880
activity this is where we're going to display the HCM l right.

614
00:46:13.890 --> 00:46:19.190
So the idea here is that you know there's this list of articles you can see all the titles of them and

615
00:46:19.200 --> 00:46:23.870
if someone taps on one of these then you could go over and see the HVM for it.

616
00:46:23.880 --> 00:46:24.150
Right.

617
00:46:24.150 --> 00:46:28.150
And so when they're all listed out we would want to see that information.

618
00:46:28.170 --> 00:46:34.060
So let's go ahead and visually get working on this and then we'll do the code side of things.

619
00:46:34.190 --> 00:46:40.410
So let's give ourselves a little bit of space to work with here and all that we're essentially wanting

620
00:46:40.410 --> 00:46:45.450
to do here is we just want to have a nice big web view inside of all of this.

621
00:46:45.450 --> 00:46:47.960
So let's go ahead and see.

622
00:46:48.190 --> 00:46:49.500
There we go inside of containers.

623
00:46:49.500 --> 00:46:50.610
We've had a web view.

624
00:46:50.610 --> 00:46:52.800
So I'm just going to pull that out.

625
00:46:52.950 --> 00:46:58.170
Luckily Naturally this fills up almost the whole screen so let's just go ahead and add some constraints

626
00:46:58.170 --> 00:47:05.630
to make that official and I'll just give this the ID of web view and that should be appropriate there.

627
00:47:05.670 --> 00:47:11.360
Now with this information in place we're ready to go ahead and actually write some code for this.

628
00:47:11.370 --> 00:47:15.720
So the first thing that we want to do is get access to that web view.

629
00:47:15.780 --> 00:47:25.530
So say web view and we'll just call it web view as equal to find view by id Capitol our DOT ID dot and

630
00:47:25.530 --> 00:47:28.290
then we want to get web view.

631
00:47:28.330 --> 00:47:29.820
There we go.

632
00:47:29.820 --> 00:47:35.910
The next thing that we want to do is we want to get the web view all set up so will say web view dot

633
00:47:36.060 --> 00:47:42.090
and we're going to go ahead and say get some jeans on this make sure javascript does and they've also

634
00:47:42.090 --> 00:47:45.610
said javascript enabled equal to true.

635
00:47:45.660 --> 00:47:52.410
The next thing that we want to do with this web view is we want to say okay set web view client.

636
00:47:52.410 --> 00:47:56.850
Remember this is important because if not it's going to launch the user's own browser which we want

637
00:47:56.850 --> 00:47:58.980
the user to be able to quickly move back and forth.

638
00:47:59.010 --> 00:48:07.290
So we can say new web view client is like to capitalize that new web view client.

639
00:48:07.650 --> 00:48:11.180
And there we go that's enough to get started there.

640
00:48:11.190 --> 00:48:16.360
Now with this information in place there's a little bit more that we have to do.

641
00:48:16.380 --> 00:48:25.380
So the big one is we have to have an intent created that's going to contain some information about you

642
00:48:25.380 --> 00:48:29.000
know the your L or that rather the H.T. mail that we're passing over.

643
00:48:29.000 --> 00:48:35.890
So let's go back to our main activity and we're going to go to our on create method here.

644
00:48:35.960 --> 00:48:42.390
So at the top after we've created the list view and set the adapter all that good stuff then we have

645
00:48:42.390 --> 00:48:48.040
to make it so that if someone clicks on one of these that we know can move over to this new activity.

646
00:48:48.330 --> 00:48:55.980
So we're going to say list few dot and then we want to set on item click Lisner make sure you don't

647
00:48:55.980 --> 00:49:00.880
do the long click listener or else you're going to be trying and trying to never get anything.

648
00:49:00.880 --> 00:49:04.500
So they knew what to do.

649
00:49:04.500 --> 00:49:10.130
Adapter view on item click listener gives us a nice function to work with.

650
00:49:10.170 --> 00:49:18.650
And we want to make a new intent and say intent will call intent is equal to a new capital intent.

651
00:49:19.140 --> 00:49:23.450
And within that we want to get the application context.

652
00:49:23.560 --> 00:49:29.460
After that we want to get say where it is that we're moving to and that is the article

653
00:49:31.920 --> 00:49:33.000
misspellings.

654
00:49:33.030 --> 00:49:37.330
Again we want to go to the article activity class.

655
00:49:37.350 --> 00:49:37.790
OK.

656
00:49:37.890 --> 00:49:40.580
So now the content knows where it's supposed to go to.

657
00:49:40.620 --> 00:49:46.440
Now we want to give it the age e-mail that it needs to move forward so we're going to say intent dot

658
00:49:46.530 --> 00:49:51.810
and we're going to put extra and the answer that we want to put in there first has the name of content.

659
00:49:51.810 --> 00:49:53.520
Remember this is the H.T. mail.

660
00:49:53.520 --> 00:50:00.300
Now to get that each e-mail simple as just sayin content which is our rainless dot get and we're going

661
00:50:00.300 --> 00:50:01.310
to pass it on.

662
00:50:01.350 --> 00:50:06.200
Which is the index of whatever item in the list view is that they tapped on.

663
00:50:06.210 --> 00:50:11.790
So with those two pieces in place we can go ahead and start the activity by simply passing that intent

664
00:50:11.830 --> 00:50:14.550
and then it should move us over to the new activity.

665
00:50:14.550 --> 00:50:14.860
Right.

666
00:50:14.880 --> 00:50:17.390
And then we can see that information.

667
00:50:17.400 --> 00:50:25.140
So let's go ahead and move over back to Article activity and once we are here this is where we can write

668
00:50:25.140 --> 00:50:28.730
some code to go ahead and get the intent and have that information displayed.

669
00:50:28.740 --> 00:50:33.480
So we're going to say we're going to make a new object called intent.

670
00:50:33.500 --> 00:50:37.960
There should be equal to get intent just like that.

671
00:50:38.190 --> 00:50:46.470
And then we're going to say web view on load data and this is where we'll go get the information from

672
00:50:46.590 --> 00:50:52.860
the intents are going to say intent not get string extra.

673
00:50:52.860 --> 00:50:59.130
We're looking for lower case content there that should have all of that and then we're going to simply

674
00:50:59.490 --> 00:51:10.850
say the type is a tech slash HMO or lower case there and the encoding is going to be UTF dash it.

675
00:51:11.220 --> 00:51:11.810
Okay.

676
00:51:12.210 --> 00:51:17.190
So with that in place there should be all the information needs so when someone clicks on one of them

677
00:51:17.240 --> 00:51:21.370
that will come through to the next screen and have a display and a web view.

678
00:51:21.390 --> 00:51:26.070
Now an issue that we're going to have here as you can see we still haven't gotten this list view to

679
00:51:26.070 --> 00:51:32.100
show up like it's really taking a long time to go get all this HVM T.M. data.

680
00:51:32.140 --> 00:51:38.610
And so what I'm going to do is I'm just going to go ahead and re run the sap except one important thing

681
00:51:38.610 --> 00:51:44.040
I wanted to do there so I'm going to wait till the starts and I'm going to hit the stop button because

682
00:51:44.040 --> 00:51:46.950
we should already have some information saved.

683
00:51:46.980 --> 00:51:48.270
I'm going to go ahead hit the X here.

684
00:51:48.270 --> 00:51:50.220
Try and stop this process.

685
00:51:50.220 --> 00:51:51.070
There we go.

686
00:51:51.450 --> 00:51:57.420
So if we can go back to our main activity here what I want to do is this next time we run the app I

687
00:51:57.420 --> 00:52:04.320
don't want to do this task execute because you already have some information state saved inside of the

688
00:52:04.320 --> 00:52:11.730
database so let's go ahead and run this now and this time we're not going to go hit the API because

689
00:52:11.730 --> 00:52:15.300
hopefully we have some of these articles saved inside.

690
00:52:15.300 --> 00:52:20.020
So let's go ahead and see what this looks like on our emulator.

691
00:52:20.390 --> 00:52:22.700
And oh we've got an issue here.

692
00:52:22.830 --> 00:52:24.840
So there's a couple of issues that we need to fix.

693
00:52:24.840 --> 00:52:28.550
The first one is here inside of this update list view.

694
00:52:28.560 --> 00:52:34.560
When we say CDATA moved a first inside of this wall loop and it needs to be sealed up move to next.

695
00:52:34.590 --> 00:52:38.580
When I said set up moved to first it just kept looping over and over and over and that's why we had

696
00:52:38.580 --> 00:52:39.750
memory issues.

697
00:52:40.080 --> 00:52:46.160
So that needs to be fixed but also in this update list view we say array adapter dot notify data set

698
00:52:46.170 --> 00:52:53.460
changed yet up here in our create we are creating the array adapter here and we are calling update list

699
00:52:53.460 --> 00:52:54.090
view up there.

700
00:52:54.090 --> 00:52:59.910
So we're going to wait and call this update list view all the way here at the bottom so that we don't

701
00:52:59.910 --> 00:53:03.750
run into those issues that can then appropriately talk to a re adapter.

702
00:53:03.960 --> 00:53:08.800
So with those two pieces of information in place and now that we've got all the activity set up that

703
00:53:08.850 --> 00:53:10.890
you know we can move to the next activity.

704
00:53:11.040 --> 00:53:13.230
Let's run this emulator one more time.

705
00:53:13.260 --> 00:53:15.290
Hopefully we'll get some good results here.

706
00:53:15.450 --> 00:53:21.090
And you can see we don't have the full 20 but it was you know taken a while so let's see S-sh versus

707
00:53:21.120 --> 00:53:23.100
open VPM for tunneling.

708
00:53:23.100 --> 00:53:24.280
We go ahead and click on this.

709
00:53:24.300 --> 00:53:27.320
It opens up a new web browser and look at that.

710
00:53:27.480 --> 00:53:29.430
We can goal go ahead and move through.

711
00:53:29.460 --> 00:53:32.370
And you know see it all that information.

712
00:53:32.370 --> 00:53:38.350
I fell down a bit of a runes research rabbit hole today let's go ahead and see what this is all about.

713
00:53:38.940 --> 00:53:40.820
And look something here from Twitter.

714
00:53:40.820 --> 00:53:45.530
Now it's important to note that our app has access to the Internet and that's how it's downloading all

715
00:53:45.550 --> 00:53:46.620
these images and stuff.

716
00:53:46.620 --> 00:53:51.420
If we you know you had downloaded all these articles to go view at a different time and you didn't have

717
00:53:51.420 --> 00:53:56.730
data like you wouldn't see these images you wouldn't see the cool CSSA javascript that comes along with

718
00:53:56.730 --> 00:53:59.400
these so it's you know an interesting point.

719
00:53:59.400 --> 00:54:05.010
For example this one I don't know if that's just what the Web site looks like but the word we're not

720
00:54:05.010 --> 00:54:10.370
seeing all the data come through so I'm not sure what the situation is there maybe just the website

721
00:54:10.440 --> 00:54:15.540
is broke because everything else is looking good here but there you have it.

722
00:54:15.540 --> 00:54:18.730
So we have a completed news reader app.

723
00:54:19.050 --> 00:54:23.850
Again we had a little bit of issue with it taking a long time to download those articles you'll learn

724
00:54:23.850 --> 00:54:27.700
as we move through the course more efficient ways to go about doing that.

725
00:54:27.720 --> 00:54:29.670
Hopefully you enjoyed learning that.
