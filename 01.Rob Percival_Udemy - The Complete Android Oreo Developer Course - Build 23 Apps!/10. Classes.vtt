WEBVTT
1
00:00:00.450 --> 00:00:04.410
All right in this lecture we're going to be talking about classes and this is sort of stepping things

2
00:00:04.410 --> 00:00:05.100
up a bit here.

3
00:00:05.100 --> 00:00:09.570
I know you have worked with classes before but this is probably more advanced than anything we've worked

4
00:00:09.570 --> 00:00:13.480
with before but with your background you're going to do absolutely fine.

5
00:00:13.530 --> 00:00:16.530
So making classes and Codlin very straightforward.

6
00:00:16.530 --> 00:00:21.120
All we do is just say class give the name of a class which is upper case.

7
00:00:21.120 --> 00:00:24.500
So in this case if I want to make a dog class I just say class dog.

8
00:00:24.660 --> 00:00:30.960
And just like that I now have a class which then means if I want to create a object from this class

9
00:00:30.960 --> 00:00:36.560
I could say bar my dog is equal to a new dog object with parentheses.

10
00:00:36.570 --> 00:00:40.220
And that's how simple it is to make an object from a class.

11
00:00:40.230 --> 00:00:46.830
Now to add properties to a class you can do it sort of manually here by saying something like var name

12
00:00:47.160 --> 00:00:53.460
and setting this initially equal to some sort of string and you know var age setting that maybe initially

13
00:00:53.460 --> 00:00:55.450
equal to zero.

14
00:00:55.620 --> 00:01:01.530
Right so then now I could say something like my dog dot name and set this equal to something that kind

15
00:01:01.530 --> 00:01:07.890
of has this built in getters and setters stuff so that you can just directly manipulate the properties

16
00:01:07.890 --> 00:01:09.090
there.

17
00:01:09.270 --> 00:01:14.870
But this doesn't really have an initialiser that we can provide a name and an age for.

18
00:01:14.910 --> 00:01:21.240
So if you would like to do that Kollin has this awesome syntax where when you make a class like a dog

19
00:01:21.240 --> 00:01:29.700
class you just put parentheses after it and then you say it's going to have a property called name and

20
00:01:29.700 --> 00:01:37.800
it's going to be of type String comma and it's going to have a variable property of age and it's going

21
00:01:37.800 --> 00:01:39.490
to be of type.

22
00:01:39.580 --> 00:01:48.720
It got to do my capital in there and just by doing this now when I want to make a new dog object you

23
00:01:48.720 --> 00:01:53.900
know I've got to provide a name and there may be something like Fido and then the age of like 5.

24
00:01:54.120 --> 00:01:59.460
But what it's done is it's created these properties for me and it's created this initialiser So it's

25
00:01:59.460 --> 00:02:03.840
kind of a two in one package here which is really really sweet.

26
00:02:03.840 --> 00:02:10.680
Now if we wanted to go back to our previous example here where we had the property showing up let me

27
00:02:10.740 --> 00:02:12.040
undo till we get there.

28
00:02:12.150 --> 00:02:12.760
OK.

29
00:02:13.020 --> 00:02:19.470
What I can also do is if I don't want to set this equal to like an empty string or zero then I want

30
00:02:19.470 --> 00:02:21.380
to make my own custom initialiser.

31
00:02:21.480 --> 00:02:26.580
Well what I can do is say rather than this is equal to an empty string I'm just going to say name is

32
00:02:26.580 --> 00:02:31.450
going to be of type string and age is going to be of type int.

33
00:02:31.530 --> 00:02:32.390
So I have a couple.

34
00:02:32.390 --> 00:02:36.630
I mean so the big air that I'm getting here is that saying hey these got to be initialized at some point

35
00:02:36.630 --> 00:02:41.190
like these have to be equal to something when you create a new dog object.

36
00:02:41.340 --> 00:02:46.750
So one option is to do the function so this will get called whenever a new class is created.

37
00:02:47.010 --> 00:02:52.680
So I could do something where I say inside of here you know name is equal to the double quotes or I

38
00:02:52.680 --> 00:02:59.700
could say age is equal to you know 85 something like that if I wanted to or against zero would be sort

39
00:02:59.700 --> 00:03:01.750
of the default value.

40
00:03:01.770 --> 00:03:06.990
But you know if you were going to do this you might as well just set it equal to that up at the top

41
00:03:06.990 --> 00:03:07.190
there.

42
00:03:07.190 --> 00:03:11.580
But if there's some more sort of complex thing that you want to do you can always do that inside of

43
00:03:11.580 --> 00:03:12.930
the IT function.

44
00:03:12.930 --> 00:03:17.010
Another thing that you can do is you can make constructors and you can have multiple constructors and

45
00:03:17.010 --> 00:03:20.040
this is where you can actually pass in some information.

46
00:03:20.110 --> 00:03:25.920
So so for example if I want to have a constructor where I'm you know taking a name which is going to

47
00:03:25.920 --> 00:03:29.960
be like a string I could take an age as well.

48
00:03:30.140 --> 00:03:32.460
Make sure I've got capital in there.

49
00:03:32.490 --> 00:03:35.190
Do my curly brackets then I could say something like this.

50
00:03:35.190 --> 00:03:43.410
Dot name is equal to name and this age is equal to age so you can see in this constructor its handling

51
00:03:44.010 --> 00:03:45.890
filling in these properties.

52
00:03:45.900 --> 00:03:50.310
Now the this that refers to the class object.

53
00:03:50.310 --> 00:03:55.440
Whenever I use the term this way when I say this name I'm saying take this property and said it equal

54
00:03:55.440 --> 00:03:57.150
to the name parameter.

55
00:03:57.150 --> 00:04:03.150
That was just passed in here and because you know like name and name are the same age and age are the

56
00:04:03.150 --> 00:04:08.340
same that's why you have to specify this dot when I'm doing the constructor stuff here.

57
00:04:08.340 --> 00:04:12.870
But the cool thing is you can have multiple constructor so I could do a constructor where it doesn't

58
00:04:12.870 --> 00:04:14.960
take in anything for example.

59
00:04:15.150 --> 00:04:21.630
And I just say all right in this case name will be equal to this and age will be equal to zero.

60
00:04:21.660 --> 00:04:27.360
So the awesome thing is now this line of code where I make a dog object with no parameters is totally

61
00:04:27.360 --> 00:04:27.880
fine.

62
00:04:27.990 --> 00:04:31.590
But I could also do one where I pass in something like Feydeau.

63
00:04:31.800 --> 00:04:37.290
And the age of 8 or something like that and I can still make a new object there.

64
00:04:37.440 --> 00:04:41.970
So that's kind of some of the basic information on classes.

65
00:04:41.970 --> 00:04:44.910
The other thing too you can have functions inside of your class.

66
00:04:44.910 --> 00:04:50.670
So if I can make a function that gives me some info about this dog I might call it something like dog

67
00:04:50.670 --> 00:04:51.460
info.

68
00:04:51.510 --> 00:04:52.240
I don't know.

69
00:04:52.400 --> 00:04:56.700
And this is going to print out some information about the dog.

70
00:04:57.030 --> 00:04:58.610
So I'm going to say.

71
00:04:59.100 --> 00:04:59.900
All right.

72
00:04:59.970 --> 00:05:05.850
Go ahead and say something like Fido is five years old.

73
00:05:06.120 --> 00:05:10.860
And then again what we've got to do here is say all right rather than Fido we're going to do our dollar

74
00:05:10.860 --> 00:05:16.220
sign name and then rather than five are going to do our dollar sign age.

75
00:05:16.860 --> 00:05:22.210
So those are the basics when it comes to classes kind of some cool things that you can do.

76
00:05:22.260 --> 00:05:26.510
Like I said initially where you could just kind of do the parentheses here and make your properties.

77
00:05:26.520 --> 00:05:31.380
I think that's sort of the slickest way to do it in my own programming I found that's what I end up

78
00:05:31.380 --> 00:05:33.550
doing most often.

79
00:05:33.570 --> 00:05:37.160
So my challenge for you is very very straightforward.

80
00:05:37.200 --> 00:05:51.720
I want you to add a new property called for color to the dog class and update dog info.

81
00:05:51.750 --> 00:05:53.080
The function can.

82
00:05:53.370 --> 00:05:55.490
So go ahead and do that.

83
00:05:55.590 --> 00:05:58.270
Hit pause on the video now.

84
00:06:00.360 --> 00:06:00.710
OK.

85
00:06:00.720 --> 00:06:02.580
So hopefully that went well for you.

86
00:06:02.580 --> 00:06:10.800
All it would take to do something like this is just say var dog fur it's going to be I could just hear

87
00:06:10.800 --> 00:06:15.300
said equal to an empty string or if I wanted to follow convention I could you know just say this string

88
00:06:15.300 --> 00:06:16.720
and set it up down there.

89
00:06:16.830 --> 00:06:23.010
I think I'll just do this to be fun and I think I could even if I wanted to specify this one of the

90
00:06:23.010 --> 00:06:26.380
class top we'll see if this actually works.

91
00:06:26.430 --> 00:06:28.510
I have my doubts.

92
00:06:29.530 --> 00:06:31.940
See if I say that that's a string.

93
00:06:31.990 --> 00:06:36.570
Yeah it's looking like that's not going to fly all too well with.

94
00:06:36.580 --> 00:06:44.020
So I always love to try new things on the fly as I'm recording you know just for fun scientific purposes.

95
00:06:44.170 --> 00:06:44.860
Very wise.

96
00:06:44.890 --> 00:06:51.460
I'm going to update now this dog for property inside of the dog info where it says OK Fido is six years

97
00:06:51.460 --> 00:07:04.270
old and has dog fur for so if I had said dog for equal to like brown or something like that dog food

98
00:07:04.280 --> 00:07:06.490
is not the right name it should be for color.

99
00:07:06.760 --> 00:07:09.690
Let's go ahead and change that for color.

100
00:07:09.750 --> 00:07:11.630
Now this will make a little more sense.

101
00:07:11.700 --> 00:07:12.220
OK.

102
00:07:12.390 --> 00:07:16.500
And has brown for white for orange for whatever it is.

103
00:07:16.680 --> 00:07:18.030
What's going on here.

104
00:07:18.100 --> 00:07:18.770
OK.

105
00:07:19.110 --> 00:07:24.450
So congratulations you've made it through the basics of cotland this is as far as I took the cotton

106
00:07:24.450 --> 00:07:27.590
for beginners but at a much much slower base.

107
00:07:27.640 --> 00:07:32.490
So congrats on getting this far but I got to teach you one more thing and that's about unknowables in

108
00:07:32.490 --> 00:07:33.290
cotland.

109
00:07:33.600 --> 00:07:37.470
And then I'm also going to have that special lecture about cotland in Java so let's go ahead and talk

110
00:07:37.470 --> 00:07:41.260
about unknowables and next on this is kind of a special bonus for you guys.

111
00:07:41.310 --> 00:07:43.500
And then after that we'll talk about Kollin and job.
