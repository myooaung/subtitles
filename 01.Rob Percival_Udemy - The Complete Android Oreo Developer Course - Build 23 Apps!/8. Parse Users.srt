1
00:00:00,420 --> 00:00:06,000
So in this lecture we're going to learn more about this User class about how we can make new users sign

2
00:00:06,000 --> 00:00:11,290
them in sign them up check to see if someone is logged in or not.

3
00:00:11,490 --> 00:00:15,420
We're going to need that for our app to know you know what we need to show the user in the end so let's

4
00:00:15,420 --> 00:00:19,250
go ahead and learn the basics and then we'll start building our Instagram app.

5
00:00:19,260 --> 00:00:25,500
So let's go ahead and clear out enough space here and one thing before we dive into the nitty gritty

6
00:00:25,500 --> 00:00:28,340
is I want to go over to the starter application on Java.

7
00:00:28,570 --> 00:00:34,290
There's this line of code here that says parse user data enable automatic user so this can be if you

8
00:00:34,290 --> 00:00:39,120
want to have an app that you don't have to require a log in but you still want to know some information

9
00:00:39,120 --> 00:00:42,330
about how people use the app like get back analytics and whatnot.

10
00:00:42,560 --> 00:00:49,560
This automatic user if you go back to the browser here you can see there's this been this user that's

11
00:00:49,560 --> 00:00:54,810
been created they don't have an e-mail or a user name and they have a user name but it's just a random

12
00:00:54,810 --> 00:00:58,250
string of numbers that don't have a password or anything like that.

13
00:00:58,410 --> 00:01:02,050
But this has created for us because we have that checked.

14
00:01:02,050 --> 00:01:08,370
So for our app now that we're adding our own user logon information let's go ahead and comment that

15
00:01:08,370 --> 00:01:14,470
out and then we're going to come back to our main activity and start writing some log in code.

16
00:01:14,640 --> 00:01:19,590
So now that we're here the first thing that we want to do is we want to create something called a parse

17
00:01:19,650 --> 00:01:20,340
user.

18
00:01:20,430 --> 00:01:26,250
So we're going to make a new parse user who will just call user and or this is just going to be equal

19
00:01:26,250 --> 00:01:29,100
to a new parse user.

20
00:01:29,100 --> 00:01:34,290
Now with this user there's two main things that you have to set and that's the username and password.

21
00:01:34,290 --> 00:01:39,310
So first let's set the user set username.

22
00:01:39,690 --> 00:01:46,470
And with this go ahead and pick something I might say something as simple as Nick and then we're going

23
00:01:46,470 --> 00:01:49,710
to take our user and we need to set a password.

24
00:01:49,770 --> 00:01:52,910
So these are the two main things that username and password.

25
00:01:52,920 --> 00:01:57,750
So with a password maybe we'll just go ahead and do something as simple as mine pass with the capital

26
00:01:57,750 --> 00:01:59,310
P there.

27
00:01:59,310 --> 00:02:04,560
Then what we're going to do is because you know we want to simulate First how do you sign up a user

28
00:02:04,560 --> 00:02:06,930
then we'll worry about the log and stuff.

29
00:02:06,930 --> 00:02:08,100
Let's go ahead and do that.

30
00:02:08,100 --> 00:02:13,650
We're going to sign up a user so we're going to say user sign up and there's all sorts of different

31
00:02:13,650 --> 00:02:16,530
options to sign up and background and whatnot.

32
00:02:16,540 --> 00:02:19,650
But let's go ahead and do the sign up in background that has a callback.

33
00:02:19,740 --> 00:02:24,490
So we're going to see a new sign up call back and use the auto complete there to get this.

34
00:02:24,540 --> 00:02:28,060
And then when it's finished it will tell us whether or not that worked out.

35
00:02:28,260 --> 00:02:34,050
So we'll do our IF statement with the error or excuse me the exception that comes through so I'll say

36
00:02:34,050 --> 00:02:39,190
if this is equal to know then we know that everything was OK else.

37
00:02:39,480 --> 00:02:43,170
This is where we do like in the print stack trace.

38
00:02:43,270 --> 00:02:44,220
OK.

39
00:02:44,310 --> 00:02:49,080
Now with this let's go ahead and just give ourselves a simple log.

40
00:02:49,260 --> 00:02:59,640
If everything did work out and we'll just say something like sign up OK and maybe something like we

41
00:02:59,640 --> 00:03:00,940
did it.

42
00:03:01,500 --> 00:03:01,870
All right.

43
00:03:01,890 --> 00:03:05,120
So with that in place let's go ahead and run this.

44
00:03:05,190 --> 00:03:13,380
And again if this works out we should see a new user inside of the class here this table that is going

45
00:03:13,380 --> 00:03:14,820
to have a user name of Nic.

46
00:03:14,850 --> 00:03:20,600
So looks like we got things up and running Let's check log cat here it says we did it.

47
00:03:20,620 --> 00:03:23,180
So that should hopefully mean we're successful.

48
00:03:23,380 --> 00:03:28,440
Let's reload the page here and look at this says user name Nick.

49
00:03:28,450 --> 00:03:34,150
The password is hidden so I guess maybe that last user did have a password it was just hidden there.

50
00:03:34,660 --> 00:03:38,500
But look at that we were able to successfully create a user.

51
00:03:38,710 --> 00:03:45,310
Now you may be wondering OK let's say someone comes into our app and they want to log in.

52
00:03:45,310 --> 00:03:46,870
How do we handle that situation.

53
00:03:46,900 --> 00:03:51,830
Well let's go ahead and comment this out.

54
00:03:51,840 --> 00:03:58,770
Will do slash star star slash and let's write some logon codes so the above stuff was for the Sign-Up

55
00:03:58,780 --> 00:04:00,570
up to some logon code.

56
00:04:00,880 --> 00:04:07,000
So it's quite similar except we don't create a user object or anything first we just go straight to

57
00:04:07,000 --> 00:04:15,310
the chase here where we say parse user dot and we do log in and we want to do our log in and background

58
00:04:15,340 --> 00:04:20,010
but do the one where we can pass in the username and password and then also a callback.

59
00:04:20,230 --> 00:04:25,510
So first let's pass it a user name so maybe let's do the one that we did earlier Nick and let's go ahead

60
00:04:25,510 --> 00:04:35,710
and provide a password which we had as my pass and then we also need to do a new one.

61
00:04:36,040 --> 00:04:38,600
Oh excuse me log in callback.

62
00:04:38,710 --> 00:04:41,740
So this will tell us whether or not it was able to work.

63
00:04:41,830 --> 00:04:45,330
And it also gives a sparse user which is pretty great.

64
00:04:45,520 --> 00:04:51,670
So we're going to say if statement here check and make sure we have the user so if user is not equal

65
00:04:51,670 --> 00:05:00,760
to nil meaning you know we were able to successfully get back the user then we can log out something

66
00:05:00,760 --> 00:05:09,720
that says success like we logged in.

67
00:05:09,850 --> 00:05:10,340
Right.

68
00:05:10,510 --> 00:05:17,340
But ELTs If that doesn't work out then you know we want to say something like You know you don't print

69
00:05:17,350 --> 00:05:21,150
Stracke stack trace you know we had some sort of air.

70
00:05:21,220 --> 00:05:22,850
So let's go ahead and try this.

71
00:05:22,870 --> 00:05:29,140
We should be able to see success if we use the correct name and password that we had set earlier here.

72
00:05:29,140 --> 00:05:36,920
So let's go ahead and get log up and look at that we logged in so we know that that was successful Well

73
00:05:36,920 --> 00:05:42,720
let's say we go ahead and add a wrong path right here like I take one of the S's off of my pass will

74
00:05:42,740 --> 00:05:45,400
now we should see an exception.

75
00:05:45,410 --> 00:05:51,200
We do something like a print stack trace so let's go ahead and try this out.

76
00:05:51,950 --> 00:05:54,620
And when we get this boom look at that.

77
00:05:54,620 --> 00:05:59,000
So invalid user name slash password.

78
00:05:59,000 --> 00:06:01,380
So we know that something went wrong there.

79
00:06:01,550 --> 00:06:02,650
OK.

80
00:06:02,810 --> 00:06:05,510
Then finally the last thing that we want to do.

81
00:06:05,600 --> 00:06:13,220
Go ahead and also comment this out is we want to talk about how we open the app we don't want to log

82
00:06:13,220 --> 00:06:14,690
someone in we don't want to sign them up.

83
00:06:14,690 --> 00:06:18,950
We just want to check and see if there's currently a logged in user and parse handles all the work if

84
00:06:18,950 --> 00:06:22,540
somebody logs in they'll stay logged in until you log them out.

85
00:06:22,820 --> 00:06:26,270
So we can simply just write an IF statement.

86
00:06:26,270 --> 00:06:35,030
Where in our parentheses we say capital parse user dot get current user and we'll just see if this thing

87
00:06:35,030 --> 00:06:36,190
is equal to no.

88
00:06:36,200 --> 00:06:39,700
Because if it's equal to no we know that no one is logged in.

89
00:06:39,700 --> 00:06:44,150
But if it's not equal and all that means we have a user that's logged in and we can move forward.

90
00:06:44,150 --> 00:06:51,880
So when in fact let's go ahead and log out something that says signed in.

91
00:06:52,400 --> 00:06:58,440
And what we're going to provide for the other string here is we're going to get this parse user get

92
00:06:58,460 --> 00:07:05,220
current user and then we're going to say get user names or even get a printout what their username is.

93
00:07:05,510 --> 00:07:12,920
And if we that doesn't work out then you know we are going to display some sort of information here.

94
00:07:12,990 --> 00:07:17,510
And you know this might be the place where then you'd want to provide some code to say hey you know

95
00:07:17,690 --> 00:07:23,720
you weren't currently signed in I should so the user or the log in functionality or the Sign-Up functionality.

96
00:07:23,840 --> 00:07:30,800
So we'll say no luck I'm not signed in.

97
00:07:30,830 --> 00:07:31,850
All right.

98
00:07:31,850 --> 00:07:39,830
So let's go ahead and try this get Lague can open up here to check this out so we should get a successful

99
00:07:39,860 --> 00:07:48,250
signed in and the user name because we've logged in before and if we go ahead and do this let's see

100
00:07:48,250 --> 00:07:52,010
you look at that signed in Nick so that successfully worked.

101
00:07:52,250 --> 00:07:54,890
But now let's say you know you want to log out.

102
00:07:54,890 --> 00:07:57,270
How do you successfully log someone out of an app.

103
00:07:57,530 --> 00:08:05,720
Well all you have to do is you just say capital parse user dot log out and that's it.

104
00:08:05,720 --> 00:08:07,660
It's really that simple.

105
00:08:07,670 --> 00:08:11,380
So let's go ahead and run this what should happen now is we'll log out.

106
00:08:11,540 --> 00:08:17,270
Then when we do this check get current news will bring us back now which then should bring the message

107
00:08:17,270 --> 00:08:18,080
to say no.

108
00:08:18,140 --> 00:08:19,250
No luck I guess.

109
00:08:19,250 --> 00:08:28,580
I said not luck but if we do this look it up not look not signed in with your new skills of learning

110
00:08:28,580 --> 00:08:33,010
about the user how to manipulate parse data queries all that good stuff.

111
00:08:33,020 --> 00:08:36,230
You are now ready to move forward on building the Instagram app.

112
00:08:36,230 --> 00:08:39,840
So let's go take a stab at it in the next lecture.
