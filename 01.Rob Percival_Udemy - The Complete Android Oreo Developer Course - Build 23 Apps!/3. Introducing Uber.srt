1
00:00:00,280 --> 00:00:07,440
In this section we'll be making a clone of one of the most popular apps in recent times uber Ebba is

2
00:00:07,440 --> 00:00:08,900
a pretty straightforward idea.

3
00:00:09,090 --> 00:00:15,810
A writer taps on the app when they want to take a car somewhere and then a nearby driver is alerted

4
00:00:16,080 --> 00:00:19,250
of that rider and then goes and pick them up.

5
00:00:19,260 --> 00:00:25,230
So simple idea but for us it will give us an opportunity to merge our past server cloud storage skills

6
00:00:25,500 --> 00:00:32,420
with maps and GPS which are perhaps the two most powerful aspects of mobile apps working together.

7
00:00:32,580 --> 00:00:42,270
So it should be a lot of fun and we're going to start over on AWOS creating a new easy to instance for

8
00:00:42,510 --> 00:00:44,510
our past server code.

9
00:00:44,710 --> 00:00:50,310
So if you miss that go to US Amazon Dot com where we went before for Instagram and we're just going

10
00:00:50,310 --> 00:00:52,170
to follow that process again.

11
00:00:52,380 --> 00:00:57,420
If you really don't want to go through the process again you can use the same path server set up as

12
00:00:57,420 --> 00:00:57,890
before.

13
00:00:57,900 --> 00:01:03,570
But I wouldn't recommend it it's easier to keep different instances in the Hap's separate and will cause

14
00:01:03,570 --> 00:01:06,550
less confusion in the long term.

15
00:01:06,570 --> 00:01:16,340
So here we go we're looking into AWOS and then we'll jump over to ECAC member it's in the services dropdown

16
00:01:16,340 --> 00:01:17,780
as well.

17
00:01:17,830 --> 00:01:22,320
Either that or the.

18
00:01:22,460 --> 00:01:30,080
And then as before we want to launch a new C-2 instant cyclic the big blue launch instance button and

19
00:01:30,080 --> 00:01:40,770
then down to AWOS marketplace search for pass and select pass server powered by bit NAMI.

20
00:01:40,790 --> 00:01:51,670
Make sure you choose the T-2 micro instance to avoid any charges and then click launch.

21
00:01:51,840 --> 00:02:00,050
I'm going to create a new key pair and this is going to be uber Android keep

22
00:02:03,550 --> 00:02:04,040
download.

23
00:02:04,040 --> 00:02:04,730
That's

24
00:02:07,700 --> 00:02:16,770
and then launch instance and that's now in the process of setting up.

25
00:02:16,790 --> 00:02:25,110
So what that's doing that's let's jump over and download our past project Android dev of course dot

26
00:02:25,110 --> 00:02:33,490
com slash pass project zip so we'll open that up.

27
00:02:33,710 --> 00:02:39,840
And then when that's downloaded we can see we've got it there on the desktop.

28
00:02:40,340 --> 00:02:51,610
So I'm now going to open that up in Android studio and get it ready to change out new Passover settings.

29
00:02:51,860 --> 00:03:06,260
Actually I we'll just rename the folder to the then we're looking in users for a possible desktop and

30
00:03:06,260 --> 00:03:06,710
there it is

31
00:03:09,570 --> 00:03:10,150
OK.

32
00:03:10,380 --> 00:03:18,720
So while that's opening up back over to Firefox and are easy to see management console and now we want

33
00:03:18,720 --> 00:03:25,710
to connect to our new instance as before we'll use our Java S-sh client and the keypad.

34
00:03:25,710 --> 00:03:30,840
Remember if you're in Windows it will be wherever you saved it.

35
00:03:30,840 --> 00:03:37,710
If you're in Mac it'll be something like slashy uses slash and then your username and then wherever

36
00:03:37,710 --> 00:03:38,190
you saved it.

37
00:03:38,190 --> 00:03:45,160
So for me it was the desktop and then just to remind myself I call that Uber Android keypad.

38
00:03:45,310 --> 00:03:45,890
PM

39
00:03:52,210 --> 00:03:56,860
And I don't want to type that in next time so I'll store it in the browser cache.

40
00:03:59,130 --> 00:04:02,460
And then launch S-sh client and off we go.

41
00:04:03,000 --> 00:04:03,860
And here we go.

42
00:04:04,020 --> 00:04:09,200
So now we're locked into the server via S-sh or secure shell.

43
00:04:09,210 --> 00:04:20,000
So we start by changing directory using CD to apps slash pass slash H.T. Dokes which is where the paths

44
00:04:22,040 --> 00:04:30,980
files are stored and then we use vi to open up the text editor and we want to edit the file server at

45
00:04:31,430 --> 00:04:35,690
J.S. because that has allowed server settings in it.

46
00:04:35,900 --> 00:04:37,020
And here we go.

47
00:04:37,400 --> 00:04:42,450
So I'll start by copying the app the.

48
00:04:42,700 --> 00:04:48,740
And then back over to Android studio is out Hiba app.

49
00:04:48,850 --> 00:05:00,030
So I open up the project Java starter application and then our new application ID goes in there next

50
00:05:00,030 --> 00:05:05,710
the client key which is the same as the master key.

51
00:05:06,020 --> 00:05:07,090
Copy that's

52
00:05:11,300 --> 00:05:11,780
there we go.

53
00:05:11,780 --> 00:05:20,020
And then the server is that long you are out there.

54
00:05:20,210 --> 00:05:22,330
Forget the slash at the end.

55
00:05:26,320 --> 00:05:27,270
All right.

56
00:05:27,410 --> 00:05:32,250
So we'll run that's on our Nexus device.

57
00:05:32,300 --> 00:05:40,370
And while it's running we'll jump back over to Firefox and into you again so that we can view the data

58
00:05:40,370 --> 00:05:42,860
browser which is exactly the same you are.

59
00:05:42,880 --> 00:05:46,050
But instead of parse it has apps on the end.

60
00:05:46,700 --> 00:05:47,520
And here we go.

61
00:05:47,750 --> 00:05:52,280
So here's our data browser type on them.

62
00:05:52,830 --> 00:06:03,740
So we haven't got anything in there yet but when our app is up and running which it should be seen.

63
00:06:04,290 --> 00:06:06,230
Now we do have a small issue here.

64
00:06:06,450 --> 00:06:09,280
I think that was worth living in what's happened here.

65
00:06:09,300 --> 00:06:13,440
This has failed because of invalid session tokens.

66
00:06:13,440 --> 00:06:21,570
What's going on is that they passed on to it is recognized as the same app as the Instagram project

67
00:06:21,570 --> 00:06:22,610
that we had before.

68
00:06:22,740 --> 00:06:28,050
So it's trying to log on as the previous user but because we've got a new pass installation that's not

69
00:06:28,050 --> 00:06:29,180
working.

70
00:06:29,190 --> 00:06:37,520
So what I'd recommend doing is between apps if we're using the same simulator just delete the app

71
00:06:40,340 --> 00:06:43,030
by dragging it to uninstall

72
00:06:47,310 --> 00:06:51,580
and then re-install it again via Android studio.

73
00:06:51,940 --> 00:06:57,250
And that will get rid of the nasty invalid session token error.

74
00:06:57,410 --> 00:06:58,570
All right let's have a look.

75
00:06:59,130 --> 00:06:59,780
And there we go.

76
00:06:59,780 --> 00:07:01,520
Much better passwords result.

77
00:07:01,660 --> 00:07:03,450
Successful.

78
00:07:03,510 --> 00:07:04,580
And just to confirm.

79
00:07:04,620 --> 00:07:12,360
Let's jump back over to Firefox and refresh the page and we should now see not only a user but also

80
00:07:13,170 --> 00:07:15,740
the example object.

81
00:07:16,020 --> 00:07:16,980
And there we go.

82
00:07:20,880 --> 00:07:29,460
All right so now we're set up to use pass once again for our app that's go on to the next video where

83
00:07:29,460 --> 00:07:33,360
we're going to be creating our pass anonymous logon page.
