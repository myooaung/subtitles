1
00:00:00,840 --> 00:00:05,540
Hello and welcome to the lecture we're we're going to build the guests the celebrity app.

2
00:00:05,550 --> 00:00:10,920
So with this the whole idea is that we're going to have an app that has a picture of a celebrity with

3
00:00:10,920 --> 00:00:15,360
four different names and you're supposed to guess OK which celebrity is this.

4
00:00:15,360 --> 00:00:18,880
And I'm going to guess Mauleon Griffith look that was correct.

5
00:00:18,900 --> 00:00:19,680
Oh I know this one.

6
00:00:19,680 --> 00:00:20,610
Nicki Minaj.

7
00:00:20,610 --> 00:00:21,980
That was correct.

8
00:00:22,050 --> 00:00:26,530
You know if for some reason I said Alec Baldwin It tells me that you were wrong.

9
00:00:26,760 --> 00:00:28,730
If I say it is Vin Diesel right so wrong.

10
00:00:28,740 --> 00:00:32,650
Oh that's Daniel Radcliffe I know that one.

11
00:00:33,140 --> 00:00:34,980
Pixi Yeah I got it.

12
00:00:34,980 --> 00:00:40,110
So anyways kind of a fun little app that you can just try and guess who the top 100 celebrities are

13
00:00:40,480 --> 00:00:42,060
in for this app.

14
00:00:42,060 --> 00:00:46,420
We are going to be using the information from this past 2014 as the flash.

15
00:00:46,440 --> 00:00:52,980
Candace Sarr so we reference this in the previous lecture but just wanted to reiterate this is what

16
00:00:52,980 --> 00:00:54,260
we're going to be using.

17
00:00:54,270 --> 00:01:02,250
So you have the skills to be able to actually go ahead and create this whole app like you have everything

18
00:01:02,250 --> 00:01:03,780
that you would need to do this.

19
00:01:03,780 --> 00:01:08,940
So what I would really encourage you to go do this as a challenge on your own but of course if you need

20
00:01:08,940 --> 00:01:12,700
any help I'm going to be walking you through it through the rest of the lecture.

21
00:01:12,870 --> 00:01:17,550
But see how far you can get with this and maybe just come watch with me when you get stuck on something.

22
00:01:17,550 --> 00:01:20,880
But remember when you go on your own that's where the real learning takes place.

23
00:01:20,880 --> 00:01:22,530
So go ahead get at it.

24
00:01:22,540 --> 00:01:25,050
And good luck.

25
00:01:25,050 --> 00:01:29,670
All right let's go ahead and get started here with a new Android studio project.

26
00:01:29,680 --> 00:01:32,190
We're going to call this guess.

27
00:01:32,400 --> 00:01:39,160
So Bridie just go ahead and do defaults on all of this.

28
00:01:39,210 --> 00:01:43,260
So the basic idea here is that there's going to be an image of a celebrity.

29
00:01:43,280 --> 00:01:46,180
There's going to be four different options to select from.

30
00:01:46,230 --> 00:01:49,950
Of potential names of that celebrity and then you pick one of those.

31
00:01:50,170 --> 00:01:54,640
And the apple either tell you whether you were correct or incorrect.

32
00:01:54,660 --> 00:01:58,550
So let's go ahead and move into the SML here.

33
00:01:58,590 --> 00:02:02,970
Want to get the design side of things working first and then we'll go ahead and start working about

34
00:02:03,420 --> 00:02:06,800
you know downloading stuff and getting images every everything there.

35
00:02:06,900 --> 00:02:11,790
So first thing that we need to add to here is a image view.

36
00:02:12,000 --> 00:02:18,660
And so I'm going to go ahead and just select an image for you and we'll just go ahead and give it some

37
00:02:18,660 --> 00:02:21,960
sort of default color for now as a background.

38
00:02:21,960 --> 00:02:27,380
But with this we want to go ahead and say that it should be a certain distance from the top left and

39
00:02:27,380 --> 00:02:28,320
the right.

40
00:02:28,980 --> 00:02:34,330
But we want these to be much bigger so maybe just 10 on the sides of each of here.

41
00:02:34,560 --> 00:02:41,750
And let's go ahead and change this to actually fill up the space and have this maybe be like 10 there.

42
00:02:41,790 --> 00:02:46,650
The next thing we want to do is we want to add our buttons inside of here and then we'll have the top

43
00:02:46,650 --> 00:02:51,180
button be connected with the image view to get the correct size there so let's go ahead and back to

44
00:02:51,180 --> 00:02:55,620
all I'm going to add a button down here at the bottom of the screen.

45
00:02:55,650 --> 00:03:06,870
So for this button I want this to be 10 from the bottom and it should also be 10 from the left and 10

46
00:03:06,870 --> 00:03:08,100
from the right.

47
00:03:08,100 --> 00:03:09,030
Excellent.

48
00:03:09,330 --> 00:03:10,190
Let's change that.

49
00:03:10,190 --> 00:03:13,470
So it goes ahead and fills up the space.

50
00:03:13,470 --> 00:03:18,150
And then what we're going to do is we're going to copy and paste this button so we have a second button

51
00:03:18,150 --> 00:03:20,030
there now button two.

52
00:03:20,220 --> 00:03:26,190
We're going to go ahead and move up a little bit here and we're going to change its bottom constraint

53
00:03:26,190 --> 00:03:32,050
here to now be a certain distance between the other button and let's change that to be 10.

54
00:03:32,330 --> 00:03:36,750
And we go and we're going to copy button 2 and paste that.

55
00:03:36,750 --> 00:03:44,350
So copy and paste I will have button three and again move button up there.

56
00:03:44,490 --> 00:03:56,130
Delete its bottom constraint and go ahead and have its new spacing be 10 and then one more time here.

57
00:03:56,130 --> 00:04:07,110
Copy Paste we get our fourth button we put up the lead and add and we'll change that to be 10.

58
00:04:07,110 --> 00:04:07,690
Excellent.

59
00:04:07,890 --> 00:04:12,540
So now that we have those things in place we can go ahead and select the image you and now add it's

60
00:04:12,630 --> 00:04:17,400
bottom connection here and we'll go ahead and just make this 10 as well.

61
00:04:17,640 --> 00:04:22,640
And now you can see the image of us taking up the right amount of space there.

62
00:04:22,650 --> 00:04:28,350
So with each of these buttons we want to go ahead and change the text to just be blank.

63
00:04:28,350 --> 00:04:33,540
So if you go ahead and select one and then hit shift to select all those together you can kind of edit

64
00:04:33,570 --> 00:04:37,090
things and mass that's you know a little bit helpful there.

65
00:04:37,470 --> 00:04:43,890
But you know we've got the basics here we've got the image you we've got buttons we're ready to go as

66
00:04:43,890 --> 00:04:46,100
far as the visual side of things go.

67
00:04:46,230 --> 00:04:51,300
But now we need to make it so that we can actually go download the data about the celebrities and then

68
00:04:51,360 --> 00:04:56,560
you know we can then go about putting in particular images and random guesses here.

69
00:04:56,670 --> 00:05:00,200
So let's go back to our main activity here.

70
00:05:00,230 --> 00:05:07,410
And let's just go ahead and write the code that we need in order to actually download the code from

71
00:05:07,470 --> 00:05:08,360
our Web site right.

72
00:05:08,370 --> 00:05:12,440
The posh 24 This is where we're going to get all that data from.

73
00:05:12,450 --> 00:05:15,670
So let's go back to android studio here.

74
00:05:16,290 --> 00:05:19,770
And the first thing that we need to create is our own download task right.

75
00:05:19,770 --> 00:05:22,380
The thing that extends a sync task.

76
00:05:22,380 --> 00:05:30,530
So we're going to say public class and let's go ahead and name it download task.

77
00:05:30,700 --> 00:05:37,180
We're going to say that this extends a sync task hit enter on that.

78
00:05:37,200 --> 00:05:44,010
Now this is going to go back to our classic here where we say string void and then string because we

79
00:05:44,010 --> 00:05:52,890
want it to return X back an actual string object will hover over this and implement the methods there.

80
00:05:52,950 --> 00:05:53,730
So go ahead and hit.

81
00:05:53,730 --> 00:05:54,920
OK.

82
00:05:55,830 --> 00:06:01,050
So as always let's change this to be you are els just to kind of keep consistent there.

83
00:06:01,050 --> 00:06:06,310
And again the big goal of this method is to eventually return a string.

84
00:06:06,330 --> 00:06:13,200
So in order to do this let's go ahead and make a new string that we'll call result and that'll just

85
00:06:13,200 --> 00:06:15,220
be equal to an empty string.

86
00:06:15,240 --> 00:06:23,010
Next thing that we need to do is make a proper u r l object and let's go ahead and hit enter on that.

87
00:06:23,280 --> 00:06:29,820
So we can get the proper imports and then we need an H TTP u r l connection and we'll just simply call

88
00:06:29,820 --> 00:06:34,960
that your all connection and start by setting that equal to no.

89
00:06:35,310 --> 00:06:41,070
All right so there is our set up for that then what we need to do is we're going to convert the string

90
00:06:41,070 --> 00:06:45,630
into a u r l but of course that in several hours things are going to require a try catch.

91
00:06:45,690 --> 00:06:47,710
So we'll do our Try here.

92
00:06:47,940 --> 00:06:53,160
And then a catch that we'll just get any exception that we'll call.

93
00:06:53,700 --> 00:07:00,980
And if there does happen to be an exception we want to do in print stack trace and return.

94
00:07:01,190 --> 00:07:02,650
No.

95
00:07:03,450 --> 00:07:09,060
But then inside of this try the first thing that we need to do is try and convert this string into actual

96
00:07:09,060 --> 00:07:09,930
you IRL.

97
00:07:10,260 --> 00:07:18,660
So say you are l is equal to capital U R L and then go get the first object out of our little Uriel's

98
00:07:19,110 --> 00:07:20,600
pseudo array.

99
00:07:22,470 --> 00:07:25,200
Then once we've got this in place.

100
00:07:25,350 --> 00:07:29,970
Oh I forgot the term new in front of there we go.

101
00:07:30,030 --> 00:07:33,870
Once we got that in place we need to set up our your L connection.

102
00:07:33,870 --> 00:07:40,000
So we'll say this is equal to you r l dot open connection.

103
00:07:40,650 --> 00:07:44,300
And we're going to have to cast this to say that this should be an H.

104
00:07:44,550 --> 00:07:47,990
TTP Yoro connection.

105
00:07:48,000 --> 00:07:54,010
Once we have a U R L connection in place we're going to create our input stream which we'll call I N

106
00:07:54,900 --> 00:08:06,500
and will say you r l connection not get input stream excellent then we need to get our input stream

107
00:08:06,540 --> 00:08:10,910
reader almost you know missing our

108
00:08:13,580 --> 00:08:18,310
bitmap example from last time because it's a little bit less work than having to go through all this

109
00:08:18,320 --> 00:08:25,040
but that's OK we're going to make it through this say new input stream reader and just go ahead and

110
00:08:25,040 --> 00:08:31,160
pass in our input stream and I should probably call that reader.

111
00:08:31,250 --> 00:08:32,810
There we go.

112
00:08:32,810 --> 00:08:37,140
Once we have our reader in place we'll make our inte that we'll call data.

113
00:08:37,150 --> 00:08:45,020
This is going to be equal to the reader not read like sort of moves on to the next one and then we'll

114
00:08:45,020 --> 00:08:53,180
use a while loop to successfully move through everything so we'll say as long as data is not equal to

115
00:08:53,210 --> 00:08:55,110
negative 1.

116
00:08:55,220 --> 00:09:02,720
So then we need to go ahead and make a character which we'll call Current I'll say this is equal to

117
00:09:02,720 --> 00:09:03,620
data.

118
00:09:04,070 --> 00:09:10,150
We need to make sure that we cast this to be char excellent.

119
00:09:10,730 --> 00:09:22,400
After we've done that we're going to say result plus equals current.

120
00:09:22,400 --> 00:09:24,110
Here we go.

121
00:09:24,150 --> 00:09:34,370
And then we are going to take our data and we're going to say this should be equal to our reader reader

122
00:09:34,470 --> 00:09:37,670
so we'll move on to the next one.

123
00:09:38,070 --> 00:09:45,140
Jane So that's all the code that we need in order to get you know the downloading happening.

124
00:09:45,150 --> 00:09:48,480
But then we have to actually provide a u r l and get this up and running.

125
00:09:48,480 --> 00:09:55,090
So then inside of her create we are going to create a download task which will just simply called task

126
00:09:55,090 --> 00:10:00,060
and set the sequel to a new download task.

127
00:10:00,060 --> 00:10:07,200
We also are going to have a string we'll call a result which for the time being we'll just set equal

128
00:10:07,200 --> 00:10:08,040
to no.

129
00:10:08,430 --> 00:10:14,160
And then we need to have a little try catch for actually going out and working this code so well Drew

130
00:10:14,460 --> 00:10:22,930
a try catch again we get any exception we call it the on doing each print stack trace.

131
00:10:22,950 --> 00:10:23,280
All right.

132
00:10:23,280 --> 00:10:31,280
So the actual code that we're going to try here is we need to say task Gadot execute Tang.

133
00:10:31,530 --> 00:10:36,870
It's looking for you or else we'll just put an empty string for now and then we need to do the dot get

134
00:10:36,930 --> 00:10:41,130
the dot get is really important because that's what gives us back the actual string.

135
00:10:41,210 --> 00:10:46,650
And because we're getting back a string that's when we would want to feed it into result and to make

136
00:10:46,650 --> 00:10:48,450
sure that this is working.

137
00:10:48,600 --> 00:10:57,870
Let's go ahead and do a log and let's just log out we get sold say contents of your L should be the

138
00:10:57,870 --> 00:11:00,180
result.

139
00:11:00,180 --> 00:11:00,720
All right.

140
00:11:00,990 --> 00:11:08,730
So with this in place let's go ahead and get the L of this Web site remember GWW posh 24 that see slash

141
00:11:09,080 --> 00:11:10,460
can do SAR.

142
00:11:10,560 --> 00:11:12,670
So go ahead and copy this.

143
00:11:12,670 --> 00:11:15,320
Come back and we'll paste that in there.

144
00:11:15,330 --> 00:11:19,690
Make sure you got that HTP if your browser doesn't automatically add that.

145
00:11:19,980 --> 00:11:25,530
And with all of this let's go ahead and run this on the simulator and see what we get.

146
00:11:25,880 --> 00:11:30,450
And I realize there's one last area here that I forgot to address and that's the inside of our DO IN

147
00:11:30,450 --> 00:11:37,680
BACKGROUND method here we forgot to say return and then return the actual results so we're going to

148
00:11:37,680 --> 00:11:44,090
say return result here and that's going to make this app work a lot better.

149
00:11:44,100 --> 00:11:50,190
Also important to note that you need to go to your Android manifest X amount and add this used permission

150
00:11:50,650 --> 00:11:51,960
for the Internet.

151
00:11:51,960 --> 00:11:57,090
So we've done this a couple of times before but just make sure you add this because since we'll be accessing

152
00:11:57,090 --> 00:12:00,940
data from the Internet we need to have this line somehow.

153
00:12:00,990 --> 00:12:05,080
My app was able to run without it but make sure that you go ahead and add that.

154
00:12:05,100 --> 00:12:05,670
All right.

155
00:12:05,670 --> 00:12:07,990
All right back to getting the app running.

156
00:12:08,100 --> 00:12:11,340
So this will go ahead and load in the emulator now.

157
00:12:11,350 --> 00:12:17,700
Now I do want to point out as you'll probably notice that it takes quite a while to load up the particular

158
00:12:17,850 --> 00:12:25,080
web page and you may see some similar message messages to what you see running here saying that you

159
00:12:25,080 --> 00:12:27,050
know it's processing a lot of stuff.

160
00:12:27,060 --> 00:12:32,350
And this is not the most efficient way to be downloading stuff.

161
00:12:32,350 --> 00:12:34,260
We're going to be covering this more as we move further.

162
00:12:34,260 --> 00:12:38,870
There's actually a lot of great libraries that can do a lot of this stuff for us.

163
00:12:38,970 --> 00:12:43,980
So it's kind of good to know that if things are going slow for you that's expected we're going to cover

164
00:12:43,980 --> 00:12:46,480
better ways to handle this in the future.

165
00:12:46,530 --> 00:12:51,390
But with enough time we will see this e-mail come out right.

166
00:12:51,400 --> 00:12:58,950
This is you know the age to mail for the web page that talks about all the different you know celebrities

167
00:12:58,950 --> 00:13:00,150
and whatnot so this is good.

168
00:13:00,150 --> 00:13:06,810
This means we have access to that HQ mail and now it's just a matter of parsing that and pulling out

169
00:13:07,140 --> 00:13:12,960
the link to the images and also the famous people's names.

170
00:13:12,960 --> 00:13:13,200
All right.

171
00:13:13,200 --> 00:13:18,620
So let's go back to the browser and I just want to look at the source text for this web page right.

172
00:13:18,630 --> 00:13:25,560
So we have inside of here we have all the different you know celebrities right and they've got their

173
00:13:25,560 --> 00:13:31,050
images and their names and so you know we might just think OK we'll just go ahead and search through

174
00:13:31,050 --> 00:13:36,240
here anything that has like an image tag that then has a source.

175
00:13:36,450 --> 00:13:44,700
So if we say image space SIRC it looks pretty good but you notice we have 105 matches which isn't good.

176
00:13:44,730 --> 00:13:50,880
So the first celebrity here Taylor Swift gets that so you know you might say OK is there something at

177
00:13:50,880 --> 00:13:53,520
the bottom that this matches up with if we scroll up.

178
00:13:53,520 --> 00:13:59,190
Yeah we can see that there's some other articles here and that's not necessarily a good point for us.

179
00:13:59,190 --> 00:14:08,280
So one way that we can fix this is we can kind of break up the Web site by something that sort of stinks

180
00:14:08,280 --> 00:14:12,670
like oh hey you know we are now approaching a different part of the Web site.

181
00:14:12,690 --> 00:14:18,630
So for example here this div class equals listed articles or something I it sounds pretty unique.

182
00:14:18,650 --> 00:14:20,640
And let's see if there's really only one of these.

183
00:14:20,720 --> 00:14:27,040
And look at that that only occurs once on the page so we can use this as a split in our string in order

184
00:14:27,040 --> 00:14:31,570
to move forward and say OK we only want the information before this.

185
00:14:31,570 --> 00:14:34,050
So in fact that's what we're going to do.

186
00:14:34,090 --> 00:14:39,400
Let's go back to android studio and we're going to come here to after we get our result and we're going

187
00:14:39,400 --> 00:14:44,200
to do a little bit of work here to sort of split this up parse it in the whole reason for that last

188
00:14:44,200 --> 00:14:48,670
lecture that we had where we were working with all the strings like Mississippi so that we could come

189
00:14:48,670 --> 00:14:50,330
here and do this.

190
00:14:50,410 --> 00:14:58,360
So first thing that we want to do is make a string array or a string array called split result should

191
00:14:58,360 --> 00:15:06,760
be equal to this result dot and this is where we want to do a split and with this split we want to put

192
00:15:06,760 --> 00:15:09,550
in this div class whatever.

193
00:15:09,670 --> 00:15:14,560
Right because this only occurs once so it's going to split it before and after this and we want the

194
00:15:14,560 --> 00:15:15,410
first part of that.

195
00:15:15,430 --> 00:15:19,310
And you'll notice this is an awesome feature of Android studio when we pasted this in.

196
00:15:19,420 --> 00:15:24,630
It automatically you know escaped those double quotes by putting the backslash in front of them.

197
00:15:24,640 --> 00:15:26,740
So that's very nice thank you.

198
00:15:26,740 --> 00:15:28,540
Android studio for that.

199
00:15:28,540 --> 00:15:34,870
Now the next thing that we need to do is we need to be able to do some rejects on this and we're going

200
00:15:34,870 --> 00:15:37,710
to use the exact same code that we had before.

201
00:15:37,750 --> 00:15:45,190
So if we just go back to our Brau X-Y dotcom we should have this code right where we essentially ran

202
00:15:45,190 --> 00:15:50,920
through that HCM code so I'm just going to go ahead and copy that come back to our project I'm going

203
00:15:50,920 --> 00:15:53,260
to paste this in now.

204
00:15:53,500 --> 00:15:57,760
There's a couple of things here so we've got to make sure as we type out pattern we hit enter on this

205
00:15:57,760 --> 00:16:03,880
same thing with the matchers so that we can get the proper stuff imported there will no longer be working

206
00:16:03,880 --> 00:16:04,540
with each.

207
00:16:04,540 --> 00:16:09,400
In fact it's going to be the first item in the split result so we'll say split result.

208
00:16:09,580 --> 00:16:18,310
Give us item at zero index and same thing goes for down here stead of doing that can.

209
00:16:18,700 --> 00:16:25,480
So if this all works if we go ahead and run this we should see you know all the image yourselves and

210
00:16:25,480 --> 00:16:27,520
all the celebrity names working.

211
00:16:27,550 --> 00:16:30,280
So go ahead and give that a run.

212
00:16:30,340 --> 00:16:35,860
Now it's not just enough to go ahead and have these things printout we actually want to put them into

213
00:16:35,860 --> 00:16:41,230
a list so then we can go ahead and use them inside of the different parts of our code.

214
00:16:41,230 --> 00:16:45,220
So let's go ahead and take this moment to go make some a re list up top.

215
00:16:45,220 --> 00:16:48,450
While we're waiting for app to load up here.

216
00:16:49,020 --> 00:16:55,900
So over here at the top of our class for example we're going to make a new array list we want this to

217
00:16:55,900 --> 00:17:04,660
be an array list of type string and we're going to call this one celeb your Elle's came got a spell

218
00:17:04,660 --> 00:17:11,920
that correctly celeb your Elle's and we'll set this equal to a new array list.

219
00:17:11,980 --> 00:17:15,840
We want to make sure that this is a whole array list of string objects.

220
00:17:15,910 --> 00:17:16,840
OK.

221
00:17:16,990 --> 00:17:24,610
And same thing we want to do this but we want to do it for the celeb names so let's go ahead and copy

222
00:17:24,610 --> 00:17:25,500
this.

223
00:17:25,690 --> 00:17:27,660
We'll paste that one more time.

224
00:17:27,730 --> 00:17:31,470
We're going to call this celeb names.

225
00:17:31,610 --> 00:17:34,870
OK so now we have these two lists.

226
00:17:34,930 --> 00:17:40,750
So if we go ahead and look in our logs here it was successfully able to go grab all these cool images

227
00:17:41,140 --> 00:17:44,080
and also the names they're getting.

228
00:17:44,350 --> 00:17:48,190
So again taking a long time I promise there is going to be better ways to handle this.

229
00:17:48,280 --> 00:17:53,170
And it's also worth noting what we're doing here is kind of risky with our code right like inside of

230
00:17:53,170 --> 00:17:54,480
our job file.

231
00:17:54,490 --> 00:17:56,440
This is where we're parsing.

232
00:17:56,620 --> 00:17:58,870
You know this HCM that we get back.

233
00:17:58,900 --> 00:18:04,080
The problem with that is let's say you know posh 24 decides to change how they lay out their code.

234
00:18:04,080 --> 00:18:05,630
They get rid of this Divx thing.

235
00:18:05,650 --> 00:18:08,050
Well that completely breaks our code.

236
00:18:08,050 --> 00:18:13,690
So the more proper way to work with something is using Jasons and API is what we're going to talk about

237
00:18:13,690 --> 00:18:18,550
the incoming lectures I wanted to give you sort of a rough and tumble way of downloading some web content

238
00:18:18,550 --> 00:18:20,770
and being able to use it.

239
00:18:21,480 --> 00:18:27,790
So back to the code we know that this is working so now rather than just logging out the information

240
00:18:27,800 --> 00:18:32,170
let's go ahead and put these into a these array lists.

241
00:18:32,260 --> 00:18:40,690
So we'll start here first where we're getting the images and so we'll go ahead and say celeb your Elle's

242
00:18:40,960 --> 00:18:50,290
dot ad and we're going to go ahead and add that am group and we're going to we want group one there

243
00:18:50,770 --> 00:18:52,740
and bam that's all we need.

244
00:18:52,750 --> 00:18:58,460
We're going to do essentially the same thing but instead with celeb names so we'll go ahead and paste

245
00:18:58,460 --> 00:19:04,290
this and just change this to celeb names and then that will go ahead and give us now to array lists

246
00:19:04,300 --> 00:19:08,260
that are filled up with both celebrity your L's and celebrity names.

247
00:19:08,290 --> 00:19:13,240
So the next step for us is we need to pick one of these celebrity at random and download their image

248
00:19:13,240 --> 00:19:18,080
so that we can display that for the user and then we'll work on getting the name stuff right so we need

249
00:19:18,080 --> 00:19:22,730
to extend another async task to be able to download an image.

250
00:19:23,030 --> 00:19:28,460
So we're going to say public class and you can call this whatever you'd like but I'm going to call it

251
00:19:28,490 --> 00:19:36,370
image downloader and this is going to extend a sync task just like before.

252
00:19:36,430 --> 00:19:41,090
Now with this one we're going to say strings for the progress will be void and it's going to return

253
00:19:41,120 --> 00:19:42,920
back a bitmap.

254
00:19:42,950 --> 00:19:47,440
So go ahead put down their curly bracket this bad boy.

255
00:19:47,450 --> 00:19:52,300
And with that let's go ahead and implement the methods that we need.

256
00:19:52,680 --> 00:19:58,220
Let's go ahead and do that then here inside a bitmap of course everything's got to be inside of a try

257
00:19:58,220 --> 00:19:58,880
catch.

258
00:19:58,970 --> 00:20:00,320
So there's a try.

259
00:20:00,320 --> 00:20:01,700
Here's the catch.

260
00:20:02,040 --> 00:20:09,370
For any and all exceptions we'll call e and we'll go ahead and print out e.

261
00:20:10,250 --> 00:20:11,480
Excellent.

262
00:20:11,480 --> 00:20:16,100
Now inside of our Try this is where we got to do our classic conversion stuff.

263
00:20:16,100 --> 00:20:22,400
So first thing we need to create a new york L which will call u r l and this will be equal to a new

264
00:20:22,970 --> 00:20:29,980
U R L and we want to pass inside of here the string so remember we want to rename this to you or else

265
00:20:30,560 --> 00:20:34,380
and will reference that by saying you or else get us the very first item.

266
00:20:34,720 --> 00:20:36,130
And that's going to be.

267
00:20:36,290 --> 00:20:43,440
Are you at all object now we need to create an h t t p u r l connection.

268
00:20:43,630 --> 00:20:53,240
We'll just call connection and we need to make sure this is cast as an H TDP your L connection.

269
00:20:53,240 --> 00:20:58,870
But this is going to be your all open connection.

270
00:20:59,140 --> 00:20:59,800
OK.

271
00:21:00,110 --> 00:21:06,450
Once we got that in place we're going to say Connection dot connect.

272
00:21:06,530 --> 00:21:15,410
After that we'll go ahead and start an input stream that will just simply call input stream and all

273
00:21:15,410 --> 00:21:22,630
set this equal to connections that get input stream.

274
00:21:22,850 --> 00:21:23,390
All right.

275
00:21:23,420 --> 00:21:25,860
So hopefully this is starting to feel pretty familiar.

276
00:21:25,940 --> 00:21:27,530
We've done this a few times.

277
00:21:27,530 --> 00:21:34,850
Next step for us is we've got to create a bitmap so we're going to say bitmap my bitmap it's going to

278
00:21:34,850 --> 00:21:38,870
be equal to a new bitmap factory.

279
00:21:39,600 --> 00:21:40,380
OK.

280
00:21:40,640 --> 00:21:46,340
And then with that we're going to do dot de-code stream and we're going to go ahead and pass in our

281
00:21:46,340 --> 00:21:48,850
input stream to make that all work.

282
00:21:49,400 --> 00:21:54,200
Then once we have that we have our bitmap we just simply have to return that back.

283
00:21:54,470 --> 00:22:00,800
So I'll say return my bitmap and we just want to make sure in case we catch something here we are going

284
00:22:00,800 --> 00:22:02,690
to return NULL.

285
00:22:02,720 --> 00:22:05,020
Just in case something goes wrong there.

286
00:22:05,020 --> 00:22:05,680
OK.

287
00:22:06,140 --> 00:22:08,600
So this looks pretty good for downloading an image.

288
00:22:08,600 --> 00:22:15,050
Now we have to go about the business of making sure that we can get some sort of random celebrity.

289
00:22:15,050 --> 00:22:19,740
So we'll come down to our on create code.

290
00:22:19,740 --> 00:22:26,260
All right so after we've done all of this about finding the celebrity right or putting them into array

291
00:22:26,310 --> 00:22:32,240
lists then the next thing that we need to do is create some randomness are going to say random that

292
00:22:32,280 --> 00:22:43,410
we'll call rand is equal to new random can then with this random we need to create a chosen celebrity

293
00:22:43,550 --> 00:22:47,070
that we actually need to be accessing this in several places.

294
00:22:47,070 --> 00:22:49,230
So we're going to define this up at the top.

295
00:22:49,290 --> 00:22:58,770
We're going to say inte chosen and I'm going to do a lower case here chosen celeb and will initially

296
00:22:58,770 --> 00:23:00,730
just set that equal to zero.

297
00:23:00,990 --> 00:23:07,800
But then here down on our own create After we've got our Random we'll say chosen celeb should be equal

298
00:23:07,800 --> 00:23:13,070
to random or Rande that next.

299
00:23:13,080 --> 00:23:18,070
And and as far as what you know and how many different possibilities there are.

300
00:23:18,150 --> 00:23:21,090
It should be however many celebrities that we have.

301
00:23:21,090 --> 00:23:26,600
So one way that we can do this is we can go ahead and just say all right however many celeb Uriel's

302
00:23:26,610 --> 00:23:30,560
there are we're going to go ahead and get the count of that.

303
00:23:31,050 --> 00:23:31,780
Excuse me.

304
00:23:31,860 --> 00:23:36,240
What we're looking for is the size and that'll give us back a proper answer.

305
00:23:36,460 --> 00:23:41,170
And then that way we can you know have a number between 0 and whatever it is.

306
00:23:41,170 --> 00:23:46,440
So remember when you're trying to get the next random act like if you're doing zero on Ford you'd have

307
00:23:46,440 --> 00:23:47,360
to put in 41.

308
00:23:47,370 --> 00:23:53,820
But because a list or zero based accounting we can just use the size and that's going to give us an

309
00:23:53,820 --> 00:23:56,690
equal chance to get anybody in that list.

310
00:23:56,700 --> 00:24:05,250
So once we got that in place let's go ahead and fire up our image downloader image downloader and we're

311
00:24:05,250 --> 00:24:08,350
going to go ahead and call this image task.

312
00:24:08,520 --> 00:24:12,170
This is equal to a new image downloader.

313
00:24:12,180 --> 00:24:19,140
All right then with this image task we have to go ahead and get the bitmap out of it.

314
00:24:19,140 --> 00:24:26,580
So we're going to say bitmap let's give it some sort of name we'll maybe call it like celeb image.

315
00:24:26,640 --> 00:24:34,730
It's going to be equal to image task to execute and we're going to have to pass it to your all was just

316
00:24:34,730 --> 00:24:39,840
making an empty string for now and then we want to you get good which gives us that map.

317
00:24:39,840 --> 00:24:42,480
Now as for what you are Ehle we passed through there.

318
00:24:42,480 --> 00:24:47,160
Well this is where we're going to use our chosen celeb and we need to get that from the celebs your

319
00:24:47,180 --> 00:24:53,620
ell's a list so to say celeb you are Elle's got get.

320
00:24:53,910 --> 00:25:00,280
And we're going to pass in the chosen celeb just like that and they'll give us the proper role.

321
00:25:00,300 --> 00:25:05,890
And then once we have that we have to update the image view with whoever the random celebrity is.

322
00:25:05,940 --> 00:25:11,750
So let's get back to our main activity let's see what name we have given this image view.

323
00:25:11,790 --> 00:25:12,570
OK.

324
00:25:13,050 --> 00:25:20,100
So let's go ahead and define this up top will say image view that we'll just simply call it image view

325
00:25:20,340 --> 00:25:21,970
is equal to.

326
00:25:22,310 --> 00:25:27,690
Well I actually will just define it here and then create this is where we'll get it all set up.

327
00:25:27,690 --> 00:25:38,500
So even before we do any of this we'll just say image view equal to find view by id our ID image view.

328
00:25:38,990 --> 00:25:45,780
OK so now that we've got that in place then we'll go ahead and update that image view by saying all

329
00:25:45,780 --> 00:25:55,620
right image you set image bitmap and we'll pass in celeb image and just like that we should have a celebrity

330
00:25:56,640 --> 00:25:57,400
showing up.

331
00:25:57,480 --> 00:25:59,900
So I'll go ahead and get this running.

332
00:25:59,970 --> 00:26:06,180
So if we just sort of follow what's going on here we want our app to go out get the list of celebrities

333
00:26:06,180 --> 00:26:12,900
we're going to do all this sort of crazy parsing here to you know figure out you know who what are the

334
00:26:12,900 --> 00:26:17,280
celebrity image or els what are the celebrity names that are going to put those in the proper array

335
00:26:17,280 --> 00:26:23,010
list then we're going to choose one of those your L's at random and then we're going to go ahead and

336
00:26:23,010 --> 00:26:26,260
download that image and then we want it to display here.

337
00:26:26,280 --> 00:26:32,610
So as I said earlier this can sometimes take a little bit longer than you would enjoy.

338
00:26:32,670 --> 00:26:37,650
But I'll just go ahead and wait for this for a second to pop up.

339
00:26:37,650 --> 00:26:40,860
All right so the app finally opened up here and ran it's course.

340
00:26:40,860 --> 00:26:42,840
We've got the image of some celebrity.

341
00:26:42,840 --> 00:26:44,340
I'm not sure who it is.

342
00:26:44,370 --> 00:26:49,620
So it will be helpful for us to figure out you know do the quiz here fill in these buttons so that we

343
00:26:49,620 --> 00:26:53,630
can get the name and we can figure out who some of these people are.

344
00:26:53,640 --> 00:26:58,710
So the first thing that we need to do is scroll up to the very top here and we need to add a couple

345
00:26:58,710 --> 00:27:01,940
of different properties for handling.

346
00:27:02,040 --> 00:27:07,140
You know what our answers are going to be and who which one of those answers is going to be correct.

347
00:27:07,140 --> 00:27:14,190
So the first thing that we need to do is we need to make an array of string objects and we're going

348
00:27:14,190 --> 00:27:22,630
to go ahead and call this answers and we're going to set this called a new string array of four objects

349
00:27:22,630 --> 00:27:27,580
because we're always going to have four answers so that's something we can know for sure and just always

350
00:27:27,580 --> 00:27:28,220
do.

351
00:27:28,560 --> 00:27:33,850
OK so once we've got that in place we also need to know what the location of the correct answer is going

352
00:27:33,850 --> 00:27:35,300
to be so we'll say it.

353
00:27:35,680 --> 00:27:40,780
Location of correct answer.

354
00:27:40,780 --> 00:27:47,220
And we'll go ahead and for the time being just set that equal to zero though that will be updated.

355
00:27:47,220 --> 00:27:52,710
And I'm also realizing that I have choose in Celeb it should be chosen celeb.

356
00:27:52,870 --> 00:27:56,790
So doing that I'm sure we're going to get a couple of errors down here.

357
00:27:56,980 --> 00:28:02,290
And if we scroll down you know look at that we'll have to delete there have to delete one o there but

358
00:28:02,290 --> 00:28:05,390
I think that should fix everything for us.

359
00:28:05,500 --> 00:28:05,960
OK.

360
00:28:06,100 --> 00:28:12,160
So now that we got those items in place now we can go ahead with actually writing some code to pick

361
00:28:12,160 --> 00:28:15,730
out you know what the correct and incorrect answer should be.

362
00:28:16,000 --> 00:28:21,490
Before we do that I want to point out one thing that we should look at before we do this is just make

363
00:28:21,490 --> 00:28:25,210
sure that you have this image tagged before the SIRC.

364
00:28:25,540 --> 00:28:30,220
If you didn't have this from before you just had SIRC you'll notice that you're going to have some problems

365
00:28:30,220 --> 00:28:32,350
there but things should be pretty clean.

366
00:28:32,350 --> 00:28:34,800
Now that we have that in place.

367
00:28:35,120 --> 00:28:35,490
OK.

368
00:28:35,500 --> 00:28:42,400
With that said first thing that we've got to do is we've got to create or choose the location of the

369
00:28:42,400 --> 00:28:43,030
correct answer.

370
00:28:43,030 --> 00:28:48,680
So if we just type out location of correct answer we're going to set the will the Rand dot next.

371
00:28:48,680 --> 00:28:53,950
And and it could be four possibilities so we'll just put the number four in there and that should work

372
00:28:53,950 --> 00:28:55,120
out OK.

373
00:28:55,180 --> 00:29:01,600
The next thing that we want to do is we want to create a variable to be the location of the incorrect

374
00:29:01,600 --> 00:29:02,540
answer.

375
00:29:02,680 --> 00:29:10,840
So we'll call this incorrect answer location and we'll just go ahead and define this for the time being

376
00:29:11,200 --> 00:29:13,230
and then we'll update it here in a second.

377
00:29:13,480 --> 00:29:18,630
Then we want to do a for loop where we loop through four times to fill in the answers.

378
00:29:18,730 --> 00:29:25,130
So we're going to pay for it equal to zero.

379
00:29:26,350 --> 00:29:30,640
As long as it is less than four we want to do.

380
00:29:30,970 --> 00:29:32,330
Plus plus.

381
00:29:32,510 --> 00:29:33,130
OK.

382
00:29:33,550 --> 00:29:35,790
Go ahead and do our curly brackets there.

383
00:29:35,920 --> 00:29:41,560
Then the next thing that we want to do is first and check see if I is equal to the location of the correct

384
00:29:41,560 --> 00:29:42,270
answer.

385
00:29:42,340 --> 00:29:51,520
So I'll say if I is equal to the location of the correct answer meaning that this should be our correct

386
00:29:51,520 --> 00:30:01,540
one we'll say okay answers at position 0 answers with an S answers that position should be equal to.

387
00:30:01,660 --> 00:30:06,220
We want to go get our celeb names array and we'll do dot get.

388
00:30:06,250 --> 00:30:14,470
And we're going to go ahead and pass in the chosen excuse me only one s now or 1 0 now chosen celeb.

389
00:30:14,530 --> 00:30:17,770
So that's as simple as it is for if it's the correct answer.

390
00:30:17,770 --> 00:30:23,160
Now if it's the false one you should remember this from our number guessing game is that we're going

391
00:30:23,160 --> 00:30:26,450
to have to do a little bit of work to make sure we don't have repeats here.

392
00:30:26,470 --> 00:30:32,800
So first of all we're going to do is we're going to say are incorrect answer location should be equal

393
00:30:32,800 --> 00:30:41,560
to new random numbers I'll say Rand that next ant and we'll go ahead and pass in however many celeb

394
00:30:41,680 --> 00:30:46,150
your L's that we have will say dot sized just like that.

395
00:30:46,280 --> 00:30:46,650
OK.

396
00:30:46,660 --> 00:30:50,330
So that's going to go choose one at random there.

397
00:30:50,860 --> 00:30:56,760
And you know eventually what we want to do is to say OK answers at position.

398
00:30:57,010 --> 00:31:07,610
I want you to be equal to celeb names don't get and we can go ahead and pass in an incorrect answer

399
00:31:07,610 --> 00:31:08,540
or location.

400
00:31:08,770 --> 00:31:11,010
So this is sort of the dream that we want.

401
00:31:11,020 --> 00:31:15,430
But the problem with this one is we could accidentally choose the correct answer amongst them.

402
00:31:15,430 --> 00:31:19,880
So this is where that nifty little while loop comes in handy that we did before.

403
00:31:20,010 --> 00:31:20,440
Right.

404
00:31:20,470 --> 00:31:28,890
We want to say while incorrect answer location is equal to the chosen celeb.

405
00:31:29,080 --> 00:31:31,720
Right so meaning if we accidently got the correct one.

406
00:31:31,930 --> 00:31:36,040
Well then we simply just want to run this line of code again and say let's let's try another random

407
00:31:36,040 --> 00:31:40,440
number and we'll just keep going until we get the correct one.

408
00:31:40,960 --> 00:31:45,940
So once this is in place once we've gone through the entire four loop we want to update the buttons

409
00:31:46,120 --> 00:31:46,670
text.

410
00:31:46,690 --> 00:31:50,530
Now in order to do that we have to have access to those buttons.

411
00:31:50,530 --> 00:31:55,210
Let's go back to our main activity and we'll just work on these different buttons so I'm going to call

412
00:31:55,210 --> 00:31:59,270
this button zero and call.

413
00:31:59,620 --> 00:32:02,290
Yes we want to update this.

414
00:32:02,450 --> 00:32:07,570
I want to update this button to be button 1.

415
00:32:07,960 --> 00:32:11,550
Update we want to update this one to be 0.

416
00:32:11,550 --> 00:32:12,840
Luckily button too.

417
00:32:12,880 --> 00:32:19,570
So that kind of worked out for us and then we just want to update this one to say button three.

418
00:32:20,020 --> 00:32:23,290
So now we have the appropriate names for all those.

419
00:32:23,490 --> 00:32:30,100
The top Here's where we want to set those buttons so will say button and we'll call that button zero

420
00:32:30,100 --> 00:32:31,580
to be the first one.

421
00:32:31,700 --> 00:32:35,080
I'll just copy and paste this three more times.

422
00:32:35,580 --> 00:32:42,210
OK so we've got button one two and three that will come in are on create.

423
00:32:42,310 --> 00:32:48,410
And after this image you here will go ahead and set up all the button so button 0 is equal to find view

424
00:32:48,440 --> 00:32:58,250
by ID card that Id button 0 OK and copy and paste three more times.

425
00:32:58,840 --> 00:33:03,380
So we get all our other buttons all just to update this for button 1 2 and 3.

426
00:33:03,590 --> 00:33:06,940
And we also want 1 2 and 3.

427
00:33:07,170 --> 00:33:12,830
So once we have these in place then we can actually go ahead and set up these buttons properly.

428
00:33:12,850 --> 00:33:20,290
So for instance let's set up the first button will say button 0 that's set text and inside of here we

429
00:33:20,290 --> 00:33:23,910
want to pass hey whatever at answers in position 0.

430
00:33:24,130 --> 00:33:25,670
Go ahead and do that.

431
00:33:25,940 --> 00:33:30,530
And we just want to do this for all four of the buttons.

432
00:33:31,020 --> 00:33:37,650
So that button 1 2 and 3 1 2 and 3.

433
00:33:38,220 --> 00:33:44,890
So let's go ahead and give this a run and see if we get the correct celebrity image with at least one

434
00:33:44,920 --> 00:33:45,650
correct name.

435
00:33:45,670 --> 00:33:50,490
And then you know three false names that you know makes it so the user has to guess.

436
00:33:50,530 --> 00:33:51,070
All right.

437
00:33:51,070 --> 00:33:51,950
The gap opened up.

438
00:33:51,970 --> 00:33:57,610
I'm pretty sure this is Angelina Jolie and that kind of leads us into the next step of our app is we

439
00:33:57,610 --> 00:34:02,070
need a way to sort of test whether our answer is right or wrong.

440
00:34:02,170 --> 00:34:05,950
When we tap on one of these we should know whether we got it right or wrong.

441
00:34:05,950 --> 00:34:08,390
So let's go back to our buttons.

442
00:34:08,500 --> 00:34:13,210
Let's make sure that we have an on click for each of these going to go ahead and select all the buttons

443
00:34:13,210 --> 00:34:14,780
here.

444
00:34:14,950 --> 00:34:16,030
You have got all four of those.

445
00:34:16,030 --> 00:34:21,820
I'm going to give all of these in on quick even though for some reason when I selected all the buttons

446
00:34:21,820 --> 00:34:23,500
that won't let me choose the on click.

447
00:34:23,500 --> 00:34:25,000
There we go.

448
00:34:25,330 --> 00:34:30,160
Makes go way I go self to scroll down here to the on click.

449
00:34:30,520 --> 00:34:38,620
So I'm going to call this celeb chosen and go ahead and have that name.

450
00:34:38,620 --> 00:34:43,600
So that means we have to go back to our code here and make a new function.

451
00:34:43,690 --> 00:34:51,510
So we're going to do public void celeb chosen.

452
00:34:51,580 --> 00:34:58,120
All right and this is where we're going to take in our view that we'll just call you and we'll do our

453
00:34:58,120 --> 00:34:59,850
nice curly brackets there.

454
00:35:00,250 --> 00:35:05,110
So the first thing that we want to do is you want to compare which celebrity was chosen with the one

455
00:35:05,110 --> 00:35:06,700
that is the correct answer.

456
00:35:06,700 --> 00:35:10,650
Now in order to do that we have to have tags for each of these buttons.

457
00:35:10,690 --> 00:35:15,730
So we're going to go ahead and just move to the TX side of things here for a second work through each

458
00:35:15,730 --> 00:35:16,900
of these buttons.

459
00:35:17,290 --> 00:35:20,440
So we need to add a tag to each of these.

460
00:35:20,440 --> 00:35:26,140
And let's go back let's see can we set the tag here.

461
00:35:26,200 --> 00:35:26,400
All right.

462
00:35:26,410 --> 00:35:30,720
So we're going to set the tag for one of these on button 0 just like 0.

463
00:35:30,910 --> 00:35:33,560
So you can see what that text is going to be.

464
00:35:33,610 --> 00:35:34,910
And let's see where is that.

465
00:35:34,930 --> 00:35:35,390
OK.

466
00:35:35,410 --> 00:35:36,710
Android tag 0.

467
00:35:36,880 --> 00:35:39,040
So for Button zero we want that to be zero.

468
00:35:39,050 --> 00:35:41,850
But let's copy and paste this for button 1.

469
00:35:41,920 --> 00:35:48,580
We want this to be a tag of one the other button button too we want that to be too.

470
00:35:48,940 --> 00:35:52,770
And for the top button here we want that to be three games.

471
00:35:53,080 --> 00:35:59,730
So we've set all the tags for our buttons so that now we can come do this awesome if statement here.

472
00:35:59,740 --> 00:36:05,650
So the thing that we want to check is first get access to our view and say Get tag.

473
00:36:05,820 --> 00:36:06,280
All right.

474
00:36:06,340 --> 00:36:11,350
And with this tag we want to convert that to a string and once we've converted the string we want to

475
00:36:11,350 --> 00:36:18,980
see if it is equal to the tag or the number of the correct chosen celebrity.

476
00:36:19,000 --> 00:36:26,950
So inside of here we want to do integer dot to string and the integer that we want to pass and there

477
00:36:26,950 --> 00:36:30,480
is a location of correct answer game.

478
00:36:30,700 --> 00:36:35,400
So this will tell us if we're in this portion and this means that we got the answer right.

479
00:36:35,410 --> 00:36:39,130
So this is where we would want to do a toast.

480
00:36:39,130 --> 00:36:41,610
And with this toast we'll say toast.

481
00:36:41,710 --> 00:36:47,010
Make text inside of here we're going to say get application context.

482
00:36:47,230 --> 00:36:50,680
Then we have to provide the string that we want to know say so will say.

483
00:36:50,680 --> 00:36:53,190
Correct exclamation point.

484
00:36:53,290 --> 00:37:00,280
And then finally we want to provide a toast with a you can choose whether you want it to be long or

485
00:37:00,280 --> 00:37:00,660
short.

486
00:37:00,670 --> 00:37:05,470
I'm going to choose length short just so that we can you know get three or more of these answers and

487
00:37:05,470 --> 00:37:09,430
the user doesn't have the message lingering around too long.

488
00:37:09,910 --> 00:37:14,380
So in the ELTs situation meaning that they got the answer incorrect.

489
00:37:14,530 --> 00:37:20,530
You know we could just go with simply a saying wrong you know just like that but it would be nice to

490
00:37:20,530 --> 00:37:25,450
tell them who the celebrity was so that they were trying to train and for some reason memorize the top

491
00:37:25,450 --> 00:37:26,400
100.

492
00:37:26,620 --> 00:37:32,200
You know they could do that so we'd want to say some message like it was and then we'd want to provide

493
00:37:32,260 --> 00:37:33,560
the actual answer.

494
00:37:33,580 --> 00:37:42,130
So to get that actual answer we'd reference the celeb names get and then we simply just have to pass

495
00:37:42,130 --> 00:37:45,200
in whoever the chosen celeb was.

496
00:37:45,300 --> 00:37:45,940
OK.

497
00:37:46,180 --> 00:37:50,620
So we'll get rid of that semi-colon there and then that should show the answer.

498
00:37:50,620 --> 00:37:56,800
So I'll go ahead and hit run here on the app and we'll be our first live quiz where we can actually

499
00:37:56,800 --> 00:38:02,140
see if we were able to successfully guess who the celebrity is.

500
00:38:02,140 --> 00:38:04,930
So here the app opened up it's our very first live question.

501
00:38:04,930 --> 00:38:09,310
I'm excited about this because I'm not sure my guest is Sheryl Crow.

502
00:38:10,330 --> 00:38:14,980
And I get no such message anywhere.

503
00:38:15,430 --> 00:38:20,650
So my big guess is that when I'm ever I tap on any of these I'm not getting That's because I forgot

504
00:38:20,650 --> 00:38:24,510
to do a dot show at the end of each of these.

505
00:38:24,520 --> 00:38:25,000
All right.

506
00:38:25,000 --> 00:38:26,760
So I've added my dot show.

507
00:38:27,100 --> 00:38:30,190
I'll run this one more time and we'll see what we get.

508
00:38:30,190 --> 00:38:30,600
All right.

509
00:38:30,610 --> 00:38:32,500
We've gone ahead and run this again.

510
00:38:32,500 --> 00:38:35,080
I should have the show messages showing up.

511
00:38:35,080 --> 00:38:40,030
I think this is Serena Williams I'll go ahead and click on that and look at that I'm correct.

512
00:38:40,030 --> 00:38:41,150
And just to check.

513
00:38:41,170 --> 00:38:45,430
We'll try some of these other ones and say oh it was three and a Williams looks like I should add a

514
00:38:45,430 --> 00:38:47,260
space there so will say wrong.

515
00:38:47,260 --> 00:38:48,440
It was space.

516
00:38:48,460 --> 00:38:51,140
And then the celebrity's name change.

517
00:38:51,310 --> 00:38:56,020
So now that we've got that in place really the last thing that we need to do is after someone chooses

518
00:38:56,020 --> 00:38:58,460
one of these things we want to give them another question.

519
00:38:58,460 --> 00:39:06,130
And so basically what we just need to do is take our code where we you know go through and pick random

520
00:39:06,130 --> 00:39:10,450
answers and all this stuff like we just need to do this inside of its own function.

521
00:39:10,450 --> 00:39:14,430
So we go ahead and make a new method here.

522
00:39:14,500 --> 00:39:23,250
Public void and I'm going to call this new question and we'll do our nice little curly brackets there.

523
00:39:23,260 --> 00:39:30,280
Now we don't want to always go download you know the code to go hit the Web site and put these into

524
00:39:30,280 --> 00:39:36,190
the proper Rayson stuff it's really from this random portion down this is where you know we're going

525
00:39:36,190 --> 00:39:42,010
to want to just do this every single time so we're going to go ahead and copy from random all the way

526
00:39:42,010 --> 00:39:50,260
down cut rather and we'll go paste this side of New question and then what we'll do is inside of our

527
00:39:50,560 --> 00:39:56,530
create after we've done all this we do want to say new question for the very first time that the app

528
00:39:56,530 --> 00:40:01,520
runs with the code that we have inside of here.

529
00:40:01,810 --> 00:40:04,420
We need to have this wrapped inside of a try catch.

530
00:40:04,420 --> 00:40:08,950
Let's go ahead and do an opening try here.

531
00:40:08,950 --> 00:40:10,800
We'll put that at the end of all this.

532
00:40:10,840 --> 00:40:20,810
And then also provide a catch where you get an exception that we'll call the do either print stack trace.

533
00:40:21,250 --> 00:40:26,800
With that then we also want to do new question whenever somebody chooses a celebrity whether or not

534
00:40:26,800 --> 00:40:29,460
they got it wrong or correct.

535
00:40:29,470 --> 00:40:30,330
We do want to do.

536
00:40:30,330 --> 00:40:31,650
New question.

537
00:40:31,780 --> 00:40:32,210
OK.

538
00:40:32,470 --> 00:40:34,480
So let's go ahead and give this a roll.

539
00:40:34,630 --> 00:40:40,970
And if this all works out this means we have a fully functioning app ready to go.

540
00:40:40,990 --> 00:40:41,260
All right.

541
00:40:41,260 --> 00:40:42,430
App opens up.

542
00:40:42,670 --> 00:40:44,430
I'm not sure about this one I'll try.

543
00:40:44,470 --> 00:40:46,920
Kiki was Eamon.

544
00:40:46,960 --> 00:40:47,550
OK.

545
00:40:47,560 --> 00:40:50,730
That's not Vin Diesel.

546
00:40:51,310 --> 00:40:53,440
Natalie Dormer.

547
00:40:54,130 --> 00:40:55,180
Oh that's Jimmy Fallon.

548
00:40:55,180 --> 00:40:56,710
I got that one for sure.

549
00:40:59,640 --> 00:41:01,960
This is the only female name that I see.

550
00:41:02,020 --> 00:41:02,630
Oh no.

551
00:41:02,760 --> 00:41:06,740
I was wrong.

552
00:41:07,200 --> 00:41:11,000
Melanie Griffith Yeah I got that one.

553
00:41:13,330 --> 00:41:14,600
Per Nello.

554
00:41:15,020 --> 00:41:16,620
Oh looks like I got that right.

555
00:41:17,650 --> 00:41:19,150
You look like a puzzle.

556
00:41:19,300 --> 00:41:20,470
Oh looks like I was right.

557
00:41:20,470 --> 00:41:22,110
K. ball dude.

558
00:41:22,120 --> 00:41:25,450
It's not Jimmy Fallon Glahn thing.

559
00:41:25,600 --> 00:41:30,730
Well anyway as you can see we've got a completely functioning app here and there's so many different

560
00:41:30,820 --> 00:41:32,260
additions we could make to this right.

561
00:41:32,260 --> 00:41:38,230
We could do score counter just like we had with our brain app we could do other things about the way

562
00:41:38,230 --> 00:41:42,490
that we display the message rather than doing a toaster that kind of shows up above the buttons we could

563
00:41:42,490 --> 00:41:47,070
display it inside of a text view maybe up top that makes it a little bit easier.

564
00:41:47,110 --> 00:41:50,730
So the user doesn't have to kind of look around that for their next pick.

565
00:41:50,830 --> 00:41:54,700
All different things that we could do but a very solid app here.

566
00:41:54,700 --> 00:41:58,960
And you've been doing great truckin through the section we've still got some more for you but we're

567
00:41:58,960 --> 00:42:04,030
definitely more than halfway done and we're just going to add a few more things to your knowledge base

568
00:42:04,030 --> 00:42:06,330
here and then we'll go ahead and move forward.

569
00:42:06,340 --> 00:42:08,290
But still more great stuff for you.

570
00:42:08,290 --> 00:42:09,710
Let's go to the next lecture.
