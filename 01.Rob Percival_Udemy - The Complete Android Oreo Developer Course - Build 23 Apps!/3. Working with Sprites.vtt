WEBVTT
1
00:00:00.600 --> 00:00:06.780
All right so in this video we're going to see how we can add our own sprites to our flappy bird app

2
00:00:07.140 --> 00:00:11.790
and we'll do a little bit of basic animation as well to make our bird flap up and down.

3
00:00:11.790 --> 00:00:12.120
All right.

4
00:00:12.120 --> 00:00:18.840
So to be able to add our sprites we're going to need some images for them so you can download these

5
00:00:19.890 --> 00:00:29.140
from Android deck of course dot com slash Flappy Bird assets datsik.

6
00:00:29.480 --> 00:00:38.850
So I just get flappy bird as it starts it will be a folder or is it file that downloads and then just

7
00:00:38.910 --> 00:00:44.610
open up that zip file and you'll have a little folder with.

8
00:00:44.740 --> 00:00:45.480
Very simple.

9
00:00:45.480 --> 00:00:46.330
We've got a background.

10
00:00:46.330 --> 00:00:52.900
We've got Bert in two states so you might just be able to see their wings up and then wings down

11
00:00:57.090 --> 00:00:58.890
and then we've got two cubes.

12
00:00:58.890 --> 00:01:04.330
So this is a chip coming up from the bottom and coming up or coming down from the top.

13
00:01:04.330 --> 00:01:05.280
That's all we need.

14
00:01:05.280 --> 00:01:06.430
Very simple.

15
00:01:06.660 --> 00:01:09.900
And of course we're going to need to add those two hour gap.

16
00:01:09.900 --> 00:01:22.310
The way I would do it is to get over the Android studio and open the android and then assets folder.

17
00:01:22.310 --> 00:01:24.600
So you can see that's where we've got bad logic.

18
00:01:24.660 --> 00:01:27.500
Jay peg the default there.

19
00:01:27.560 --> 00:01:30.690
And then I'm just going to reveal that in the Finder.

20
00:01:32.370 --> 00:01:33.480
Again if you own windows

21
00:01:36.180 --> 00:01:45.960
you can open it in Windows Explorer instead and then just select those images and drag them into the

22
00:01:45.960 --> 00:01:50.570
assets folder like that.

23
00:01:50.790 --> 00:01:56.430
Now we can go back over and you can see that all that wonderful and I'm actually going to get rid of

24
00:01:57.750 --> 00:02:00.330
bad logic too because we don't need that anymore.

25
00:02:02.350 --> 00:02:02.950
All right.

26
00:02:03.060 --> 00:02:10.980
Just before we add our first sprite there's one change I want to make and that is we noticed last time

27
00:02:11.010 --> 00:02:16.120
that the app is in landscape mode by default.

28
00:02:16.140 --> 00:02:21.720
Now that's great for most games but flappy bird is actually one of the few games that you play in portrait

29
00:02:21.720 --> 00:02:24.670
mode or that's how we're going to make it anyway.

30
00:02:24.900 --> 00:02:29.790
So if you go into an android manifests and then Android manifest you can see we've got all the usual

31
00:02:29.790 --> 00:02:30.780
stuff that we're used to.

32
00:02:30.810 --> 00:02:32.780
And then a bit of other stuff as well.

33
00:02:32.790 --> 00:02:36.480
The key thing that we want to change here is the screen orientation.

34
00:02:36.480 --> 00:02:41.650
So obviously we want to change it from landscape to portrait OK.

35
00:02:41.950 --> 00:02:44.010
So now we are in a position to at

36
00:02:47.950 --> 00:02:48.610
code.

37
00:02:48.940 --> 00:02:53.700
So pretty much everything we do is going to be in this single flappy bird class here.

38
00:02:53.980 --> 00:02:59.560
And I'm just going to get rid of everything that's here and here as well.

39
00:02:59.560 --> 00:03:01.670
In fact maybe we'll leave that one line.

40
00:03:01.990 --> 00:03:04.660
And so we're more or less starting from scratch.

41
00:03:05.410 --> 00:03:10.090
So as I mentioned in the previous video we've got two main methods and the create method which happens

42
00:03:10.090 --> 00:03:16.960
obviously when the app is run and the render method that happens continuously as the app is processed.

43
00:03:16.960 --> 00:03:19.920
So our main aim here is to add a couple of sprites.

44
00:03:19.920 --> 00:03:25.030
We're going to start with the background and then we're going to bring in our flappy bird and we add

45
00:03:25.060 --> 00:03:26.960
our sprites as a batch.

46
00:03:27.130 --> 00:03:28.950
So sprite batch is exactly what you might think.

47
00:03:28.960 --> 00:03:34.930
A sprite is essentially an image or a character or background something like that and we create a sprite

48
00:03:34.930 --> 00:03:40.170
batch to manage the displaying an animation of those sprites.

49
00:03:40.180 --> 00:03:46.720
So the first thing that we're going to do to add our background is to begin our batch

50
00:03:49.550 --> 00:03:55.700
so this just tells the rendah method that we're going to start displaying sprites now.

51
00:03:56.330 --> 00:04:01.610
And we're only going to display the one but we're going to display the background so instead of having

52
00:04:01.670 --> 00:04:09.110
a texture called image that's have a texture called background and the texture.

53
00:04:09.110 --> 00:04:11.130
It really is just an image.

54
00:04:11.150 --> 00:04:16.190
It's exactly the same thing but in game creation they're known as textures rather than images.

55
00:04:17.170 --> 00:04:23.150
And then we're going to define which image this background is going to be.

56
00:04:23.380 --> 00:04:27.430
So we want a new texture created from.

57
00:04:27.700 --> 00:04:35.260
And of course we're going to use B.G. to PMG background top hangi G.

58
00:04:35.290 --> 00:04:45.200
So now this background refers to this texture and then to display it we take Colebatch and then we draw.

59
00:04:45.790 --> 00:04:51.160
And you can see we've got a bunch of options there of ways that we can draw things.

60
00:04:51.350 --> 00:04:57.130
And the main ones that we're going to be using is like this third one down so we get the texture first

61
00:04:57.520 --> 00:05:01.840
then the x coordinate and the y coordinates then the width and that one.

62
00:05:01.840 --> 00:05:03.990
If you could say it would say height.

63
00:05:04.030 --> 00:05:11.140
So very simple we get the x coordinate y coordinate with and then the height so start with the texture

64
00:05:12.460 --> 00:05:15.440
background then the x coordinate.

65
00:05:15.460 --> 00:05:17.660
I want this background to be full screen.

66
00:05:17.770 --> 00:05:20.680
So I wanted to begin at the bottom left.

67
00:05:21.010 --> 00:05:28.360
So 0 0 0 and then I want the width to be the same as the width of the screen and I can get that from

68
00:05:28.360 --> 00:05:37.960
the GDX library using GDX dot graphics to get with I would go.

69
00:05:37.990 --> 00:05:40.170
You can maybe anticipate what's going to come next.

70
00:05:40.170 --> 00:05:47.340
We want the height of this thing to be the same as the height of the screen which is GDX dot graphics

71
00:05:47.980 --> 00:05:52.860
to get height simple as that.

72
00:05:53.140 --> 00:05:55.710
And then that's all we're having this time.

73
00:05:55.720 --> 00:06:04.210
So then we use Bachche and and and simple as that.

74
00:06:04.240 --> 00:06:11.380
So we've now created our Renda method and we've told it to repeatedly display the background on our

75
00:06:11.380 --> 00:06:16.090
phone screen and we're stretching it so that it's going to be whole screen because the bottom left of

76
00:06:16.090 --> 00:06:18.470
our image is going to be the bottom left of the screen.

77
00:06:18.550 --> 00:06:22.750
The width is going to be the width of the screen and the height is going to be the height of the screen.

78
00:06:23.380 --> 00:06:25.090
So let's just take a look.

79
00:06:25.170 --> 00:06:25.810
There we go.

80
00:06:26.020 --> 00:06:29.450
There's a lovely background stretched to full screen.

81
00:06:29.590 --> 00:06:30.730
Wonderful.

82
00:06:30.760 --> 00:06:31.960
So that's a good start.

83
00:06:32.050 --> 00:06:35.210
Now let's bring our bird in.

84
00:06:35.210 --> 00:06:40.970
So as you can imagine we create a new texture.

85
00:06:41.180 --> 00:06:45.220
It's called Bird.

86
00:06:45.760 --> 00:06:50.820
And then we'll set bird to be equal to a new texture.

87
00:06:51.520 --> 00:06:52.720
And it's bad.

88
00:06:53.000 --> 00:06:53.360
Angie

89
00:06:57.900 --> 00:06:58.480
OK.

90
00:06:58.730 --> 00:07:00.000
Now here's a challenge for you.

91
00:07:00.080 --> 00:07:07.190
And it's not easy but can you get the bird to be drawn in exactly the middle of the screen.

92
00:07:07.520 --> 00:07:11.690
So we want the bird to appear in exactly the middle of the screen the center of the screen.

93
00:07:12.070 --> 00:07:18.760
Go for it.

94
00:07:18.920 --> 00:07:20.960
I wonder if you manage that.

95
00:07:21.560 --> 00:07:23.180
It's harder than you might think.

96
00:07:23.780 --> 00:07:26.920
So probably a lot of you started with something like batched don't draw.

97
00:07:26.960 --> 00:07:29.670
And then bird which is a good start.

98
00:07:31.630 --> 00:07:35.660
And then you're thinking Why what do we want the x coordinate to be.

99
00:07:35.830 --> 00:07:40.870
Well presumably if we want the bird to be in the center of the screen we want the x coordinate to be

100
00:07:41.140 --> 00:07:42.390
the center of the screen.

101
00:07:42.820 --> 00:07:45.360
Now we know what the screen with is.

102
00:07:45.550 --> 00:07:48.010
That's this.

103
00:07:48.080 --> 00:07:54.130
So if we divide that by two that will give us the center of the screen.

104
00:07:54.200 --> 00:07:55.670
So let's try that out.

105
00:07:55.700 --> 00:08:05.400
So GDX took graphics took it with divided party and then similarly with the height we want the height

106
00:08:06.900 --> 00:08:08.040
divided by two.

107
00:08:08.280 --> 00:08:16.110
And then you may have noticed that if we don't need to specify the width and height then of the actual

108
00:08:17.040 --> 00:08:19.980
asset or texture We don't need to.

109
00:08:20.010 --> 00:08:26.610
So why not just let the size be whatever the size of the sprite is.

110
00:08:26.760 --> 00:08:33.330
Because I didn't specify that I wanted it a certain size so that be a very reasonable solution.

111
00:08:33.420 --> 00:08:39.540
So if you attempt to that you would have seen this and then you might have thought wait a minute that

112
00:08:39.540 --> 00:08:45.210
doesn't look quite central and that's because it's not quite central and that's because what what you

113
00:08:45.210 --> 00:08:50.440
gave when you give this coordinate is you give the coordinates of the bottom left of the sprite.

114
00:08:50.610 --> 00:08:56.430
So that's this bit here because it's a square that's around there and that point there is exactly the

115
00:08:56.430 --> 00:08:57.560
center of the screen.

116
00:08:57.810 --> 00:09:02.990
But of course what we actually want is the center of the sprite to be in the center of the screen.

117
00:09:03.360 --> 00:09:10.170
So what we're going to need to do is move the sprite half its width to the left and then Hafetz with

118
00:09:10.560 --> 00:09:18.110
down and then the center of the sprite will be in the center of the screen which is what we want.

119
00:09:18.180 --> 00:09:21.030
So you may have worked out how to do that.

120
00:09:21.300 --> 00:09:29.730
We need to get the weight of the sprite or the width of the bird which we can do using bird don't get

121
00:09:30.150 --> 00:09:39.420
with exactly the same as GDX don't Grafix don't get with but obviously on birds this time and we want

122
00:09:39.420 --> 00:09:45.150
to subtract half the width of the bird so that the center of the bird will be in the center of the screen

123
00:09:46.380 --> 00:09:52.520
and exactly the same for the height.

124
00:09:52.520 --> 00:09:58.740
But we want to subtract half the height of the bird this time not half of the width.

125
00:09:59.100 --> 00:10:01.340
So well done if you figured that out.

126
00:10:01.740 --> 00:10:02.660
This is a little taste.

127
00:10:02.660 --> 00:10:04.730
There's going to be a lot of math in here I'm afraid.

128
00:10:04.860 --> 00:10:06.830
Game development is quite math heavy.

129
00:10:07.110 --> 00:10:13.530
And you are going to need to do quite a lot of thinking and working out formulas to get everything to

130
00:10:13.530 --> 00:10:15.930
appear in the right place.

131
00:10:16.080 --> 00:10:19.820
And there we go that bird now looks much more central than it did before.

132
00:10:20.980 --> 00:10:21.430
Wonderful.

133
00:10:21.430 --> 00:10:27.110
So we got our bird we've got our background our only other aim for this video is to get the bird flapping.

134
00:10:27.280 --> 00:10:29.480
So remember this looks static.

135
00:10:29.500 --> 00:10:32.750
But this rendah method is actually being run again and again.

136
00:10:32.830 --> 00:10:39.040
So all we need to do is to instead of drawing bird each time we need to draw bird once and then we need

137
00:10:39.040 --> 00:10:41.040
to draw bird to the next time.

138
00:10:41.140 --> 00:10:47.020
And then bird once and then bird to bird bird but two etc. we need to go back and forth between bird

139
00:10:47.080 --> 00:10:48.690
and two.

140
00:10:48.700 --> 00:11:00.220
So what I'm going to do is I'm going to create an array of textures and I'm going to call it birds and

141
00:11:00.250 --> 00:11:09.730
then we're going to have birds this time instead of being a new texture it's going to be a new array

142
00:11:09.730 --> 00:11:17.320
of textures which recreate using texture and then square brackets.

143
00:11:17.350 --> 00:11:23.190
And we need to specify the number of items in our array and there's going to be two.

144
00:11:23.470 --> 00:11:29.720
It's going to be Bert and Betty and we just specify each of them.

145
00:11:29.920 --> 00:11:40.510
So birds 0 is going to be a new texture based on top.

146
00:11:40.740 --> 00:11:42.490
So same as what we had before.

147
00:11:43.080 --> 00:11:44.670
And then that's one

148
00:11:48.020 --> 00:11:57.300
is going to be a new texture based on bird to hangi.

149
00:11:57.350 --> 00:12:02.360
So now instead of displaying just bird every time we're going to be displaying birds zero and then birds

150
00:12:02.360 --> 00:12:05.020
one and then birds zero et cetera.

151
00:12:05.370 --> 00:12:11.120
Now of course to manage that we're going to have to keep track of which one we want to display at any

152
00:12:11.120 --> 00:12:12.160
given time.

153
00:12:12.560 --> 00:12:17.810
So I'm just going to split these up a little bit so that there all the bird information is kept together.

154
00:12:18.320 --> 00:12:23.470
And the way I'm going to deal with that is to have an integer which I'm going to call Fluff's state

155
00:12:25.990 --> 00:12:29.220
and that's initially going to be zero.

156
00:12:29.740 --> 00:12:37.620
So flat state just flips between 0 and 1 and that will keep track of which one we want to display at

157
00:12:37.620 --> 00:12:41.330
each time.

158
00:12:41.340 --> 00:12:51.420
So now we're just going to do a quick check to see if flap state is equal to zero and we want to set

159
00:12:51.510 --> 00:13:00.580
flap state equal to one else slept state equals zero or so flaps 8.

160
00:13:00.580 --> 00:13:04.590
We'll just also like to go back and forth between 1 and 0.

161
00:13:05.580 --> 00:13:10.020
And then instead of birds we're going to use bird instead of bird.

162
00:13:10.050 --> 00:13:18.780
We're going to use bird and then the one that we want is flap state and is going to replace that.

163
00:13:18.780 --> 00:13:19.880
Each time it pops up

164
00:13:23.250 --> 00:13:25.370
we go.

165
00:13:25.390 --> 00:13:31.000
So now we should find that instead of just having a static bird we get a bird which oscillates between

166
00:13:31.510 --> 00:13:38.150
0 and birds 1 which are out to textures with the wings up and the wings down.

167
00:13:38.290 --> 00:13:42.050
So we should get this animated bird.

168
00:13:42.280 --> 00:13:47.080
Now one issue of course is that when actually controlling the flaps speed here and is flapping pretty

169
00:13:47.080 --> 00:13:49.360
fast I'm actually going to leave it like that.

170
00:13:49.360 --> 00:13:50.830
I'm quite happy with a fast track.

171
00:13:50.830 --> 00:13:52.140
It makes it look a little bit desperate.

172
00:13:52.300 --> 00:13:57.670
But if you want to use that and slow that down you might want to look into animations with GDX involve

173
00:13:57.670 --> 00:14:02.300
creating something called a texture outlets and texture regions.

174
00:14:02.380 --> 00:14:04.170
A lot of help out there on the web for that.

175
00:14:04.170 --> 00:14:08.680
And if you want to get seriously into game development I'd recommend going in that direction but this

176
00:14:08.680 --> 00:14:11.800
is a perfectly good rough and ready way of getting an animation going.

177
00:14:12.940 --> 00:14:13.750
All right.

178
00:14:13.750 --> 00:14:18.070
So we've got our background and we've got our flapping bird in the next video.

179
00:14:18.070 --> 00:14:24.010
We'll see how to make the bird respond to a tap and float up and down in the way that we saw in the

180
00:14:24.010 --> 00:14:25.340
previous video.

181
00:14:25.420 --> 00:14:25.950
See them.
