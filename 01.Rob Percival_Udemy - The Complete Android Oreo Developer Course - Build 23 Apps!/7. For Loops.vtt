WEBVTT
1
00:00:00.390 --> 00:00:05.100
In this lecture we're going to be talking about four loops and this is an awesome segue from our last

2
00:00:05.100 --> 00:00:10.050
lecture where we were talking about lists and arrays because with four loops they worked beautifully

3
00:00:10.050 --> 00:00:12.280
together you can iterate through each item there.

4
00:00:12.330 --> 00:00:16.590
But first I'm going to show you how we can do for loops where we just iterate through a range of numbers

5
00:00:16.980 --> 00:00:22.110
so in Scotland the way to do this is to just say for with some parentheses and let's say if we want

6
00:00:22.110 --> 00:00:27.420
to run through the numbers one through ten we'd have to represent some sort of variable that we want

7
00:00:27.420 --> 00:00:29.390
to hold value each time we iterate through.

8
00:00:29.390 --> 00:00:36.090
So for example if I made that X I might say X and then one dot dot 10 and that's saying I want to go

9
00:00:36.090 --> 00:00:41.700
from the number one to the number 10 then I do curly brackets and the idea here is basically that each

10
00:00:41.700 --> 00:00:46.520
time we loop through this range that we are going to run the code inside of these curly brackets.

11
00:00:46.650 --> 00:00:53.600
And so initially X would be 1 and 2 and 3 than 4 and if we want to check out this functionality really

12
00:00:53.600 --> 00:00:59.070
as simple as just printing out x so let's go ahead and run that just to kind of prove what's going on

13
00:00:59.070 --> 00:00:59.640
here.

14
00:00:59.640 --> 00:01:02.410
Boom there it is all 10 numbers.

15
00:01:02.550 --> 00:01:04.590
This range doesn't have to start at 1.

16
00:01:04.590 --> 00:01:10.350
We could go from like five to seven or six even if we wanted to.

17
00:01:10.410 --> 00:01:15.450
Right so if we run this it'll just do the numbers 5 and 6 and there's nothing magical about X here I

18
00:01:15.450 --> 00:01:17.830
could call this X man if I wanted to.

19
00:01:17.940 --> 00:01:21.110
It's really up to you about what you want to name things.

20
00:01:21.120 --> 00:01:26.010
So now the question becomes you know how do four loops look work with lists or arrays.

21
00:01:26.040 --> 00:01:27.370
And here's what we do.

22
00:01:27.390 --> 00:01:36.000
So let's say I make a list of my favorite candy songs say far fav candy and this is going to be equal

23
00:01:36.000 --> 00:01:37.610
to a list of.

24
00:01:38.010 --> 00:01:45.610
And I'm going to put some strings in here so Snicker's definitely one of than we've got.

25
00:01:46.140 --> 00:01:50.690
I do like the 100 grand bar and maybe Fun Dip.

26
00:01:50.820 --> 00:01:53.010
Those are like my favorite candy maybe.

27
00:01:53.040 --> 00:01:57.840
So I go ahead and I put these here and now if I want to iterate through all of these with a loop I'm

28
00:01:57.840 --> 00:02:03.680
going to follow a very similar format that I did before where I say something like four with my parentheses.

29
00:02:03.830 --> 00:02:08.760
And just to keep things consistent I'm going to say X and rather than giving a range I'm just going

30
00:02:08.760 --> 00:02:09.840
to give the list here.

31
00:02:09.850 --> 00:02:14.940
Fav candy and then I'm going to do my curly brackets after that.

32
00:02:14.940 --> 00:02:19.560
So now what it will do is it will run through each item and fav candy starting at the beginning going

33
00:02:19.560 --> 00:02:23.600
to then so first X will be equal to Snicker's in hundred grand bargain Fun Dip.

34
00:02:23.850 --> 00:02:28.710
So if we wanted to make sure that this thing worked we'd just go ahead and print out X again.

35
00:02:28.710 --> 00:02:30.270
So let's go ahead and run this.

36
00:02:30.270 --> 00:02:35.710
We should see these three items printed out and look at that Snicker's 100 Grand Bar and fund.

37
00:02:35.850 --> 00:02:36.300
OK.

38
00:02:36.430 --> 00:02:37.390
So you know that's working now.

39
00:02:37.410 --> 00:02:42.930
I will say when you're working through an array like this or a list x is not a great name.

40
00:02:42.930 --> 00:02:48.300
So for example if the array is fav candy will I would probably name this something like candy because

41
00:02:48.300 --> 00:02:50.920
that makes sense it's a list of candy objects.

42
00:02:50.970 --> 00:02:57.100
If I'm talking about one particular candy that's probably a better name for it rather than X..

43
00:02:57.150 --> 00:02:57.680
OK.

44
00:02:57.810 --> 00:03:01.350
So the challenge that I have for you is not one that I proposed to the beginners.

45
00:03:01.350 --> 00:03:02.730
This one's a little bit of a level up.

46
00:03:02.730 --> 00:03:07.830
And in fact it's talking about something that I haven't even covered as far as cotland in math is concerned

47
00:03:07.840 --> 00:03:23.390
so I want you to do the following loop through the numbers one to two hundred and print out all odd

48
00:03:23.810 --> 00:03:25.200
numbers k.

49
00:03:25.430 --> 00:03:30.710
So loop through the numbers 1 to 200 and print out all the odd numbers you're going to have to learn

50
00:03:30.710 --> 00:03:31.960
how to do this on your own.

51
00:03:31.970 --> 00:03:36.800
But I think this will be a good practice to go you know check out how to find the answer to a cotland

52
00:03:36.800 --> 00:03:42.590
problem on the web if you have any issues I'm going to show you how I would google this for myself.

53
00:03:42.650 --> 00:03:46.660
But anyways that is the challenge for you go ahead and hit pause on the video now.

54
00:03:48.780 --> 00:03:53.680
OK so hopefully enjoyed this one a little bit tougher than what we had before.

55
00:03:54.120 --> 00:03:59.490
As far as challenges go the big thing that we want to do here is we want to find what are odd numbers

56
00:03:59.490 --> 00:04:01.290
and print them out in order to do that.

57
00:04:01.290 --> 00:04:06.000
We're going to use something that's called a Modu low but we have to figure out how to do that in Scotland

58
00:04:06.000 --> 00:04:10.560
so I first know that I need to know you know loop through the numbers 1 to 200.

59
00:04:10.560 --> 00:04:12.070
So I'll just start by doing that.

60
00:04:12.180 --> 00:04:18.070
I'll say for X in one dot dot 200 so that I know that I'm looping through all of those.

61
00:04:18.480 --> 00:04:23.340
And then the next thing that I need to do is I need to do some sort of if statement checks to see if

62
00:04:23.340 --> 00:04:25.560
a number is odd or even.

63
00:04:25.560 --> 00:04:27.830
So again I think the Modu Doulos the way to do that.

64
00:04:27.840 --> 00:04:31.390
I've often seen as percentage signs but let's see what it is in Scotland.

65
00:04:31.640 --> 00:04:38.710
So I'm going to open up Safari and I'm just going to search Modu low in Codlin.

66
00:04:38.730 --> 00:04:41.390
Let's see what Google has for me.

67
00:04:42.120 --> 00:04:52.770
We've got operating overload Let's see here I'm not sure that this is what I'm looking for.

68
00:04:53.110 --> 00:04:59.190
Ah there we go so arithmetic operators we do have the Modelo there.

69
00:04:59.190 --> 00:05:02.160
Sounds like it should be pretty straightforward.

70
00:05:02.160 --> 00:05:08.370
So it's what it is it's dividing doing division and then it gives you the remainder afterwards so we'll

71
00:05:08.370 --> 00:05:20.100
say all right if inside of parentheses X Modu Lo 2 is equal to 1 meaning that there is a remainder then

72
00:05:20.100 --> 00:05:23.150
we know that that number is odd.

73
00:05:23.310 --> 00:05:31.960
And so what we will do is we will do a print line or we print out whatever Xs k.

74
00:05:32.040 --> 00:05:36.520
So looks like maybe it's this simple let's go ahead and run it see what we get.

75
00:05:36.990 --> 00:05:40.910
And down here OK these are all looking of us make sure we got the number one.

76
00:05:40.940 --> 00:05:43.330
Yep that even got the number one perfect.

77
00:05:43.410 --> 00:05:48.000
So there is the solution for that and we still got more to go so let's keep drucken.
