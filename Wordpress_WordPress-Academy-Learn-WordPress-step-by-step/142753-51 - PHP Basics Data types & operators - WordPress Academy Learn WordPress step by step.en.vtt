WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.110 --> 00:00:04.080
Welcome back. So far in the last couple of videos,

00:00:04.080 --> 00:00:08.670
we've taken a look at how variables can store data in PHP.

00:00:08.670 --> 00:00:12.480
We've looked at numbers or integers,

00:00:12.480 --> 00:00:16.890
and we've taken a look at how we can store them into variables.

00:00:16.890 --> 00:00:20.430
An integer, we can have various different types.

00:00:20.430 --> 00:00:24.555
You can see some examples such as a positive number,

00:00:24.555 --> 00:00:29.310
a negative number, or a hexadecimal number.

00:00:29.310 --> 00:00:32.755
We've also taken a look at strings,

00:00:32.755 --> 00:00:35.390
which you know is a series of characters.

00:00:35.390 --> 00:00:40.150
I may comply the strings in different ways such as single or double quotes.

00:00:40.150 --> 00:00:45.665
But there's also many different types of data that we can use in PHP.

00:00:45.665 --> 00:00:48.385
For example there's a boolean.

00:00:48.385 --> 00:00:52.425
A boolean is a simple true or false.

00:00:52.425 --> 00:00:56.195
So for example, we can see if something returns true,

00:00:56.195 --> 00:00:59.700
and if it does, we can perform a certain action.

00:01:00.290 --> 00:01:03.515
There's also a data types such as arrays,

00:01:03.515 --> 00:01:05.690
which we'll look at in the section.

00:01:05.690 --> 00:01:09.880
But next we're going to take a look at some PHP operators.

00:01:09.880 --> 00:01:14.535
So to begin, we're going to take a look at some arithmetic operators.

00:01:14.535 --> 00:01:19.220
Let's use our number example we looked at before.

00:01:19.220 --> 00:01:23.140
So number one equal to 100.

00:01:23.150 --> 00:01:29.590
A second variable of number two equal to 200.

00:01:30.680 --> 00:01:37.830
Then we can do an echo. So echo number one plus number two.

00:01:39.550 --> 00:01:43.700
We should get a value of 300 in the browser.

00:01:43.700 --> 00:01:47.960
So this plus symbol is a arithmetic operator.

00:01:47.960 --> 00:01:52.055
It adds the value of number one to number two.

00:01:52.055 --> 00:01:57.510
We can also take these values away with the take away symbol.

00:01:58.210 --> 00:02:02.490
Now we'll get minus or negative 100.

00:02:02.540 --> 00:02:05.265
We can also multiply,

00:02:05.265 --> 00:02:06.830
and to do that in PHP,

00:02:06.830 --> 00:02:09.480
we need to use the star symbol.

00:02:12.340 --> 00:02:15.925
We get a value of 20,000.

00:02:15.925 --> 00:02:21.030
We can also divide with the forward slash.

00:02:24.020 --> 00:02:26.730
We can also find out the remainder.

00:02:26.730 --> 00:02:30.315
We can do that with the percent symbol.

00:02:30.315 --> 00:02:34.895
The percent symbol gives us the remainder after the division.

00:02:34.895 --> 00:02:38.920
To do this, we need to change the values to something more suitable.

00:02:38.920 --> 00:02:41.805
Number one equals 10.

00:02:41.805 --> 00:02:45.160
Number two is equal to three.

00:02:45.170 --> 00:02:48.920
Then refresh and we should get the value of one.

00:02:48.920 --> 00:02:51.650
The reason why is because three goes into

00:02:51.650 --> 00:02:57.065
10 three times and then leaves a value of one as a remainder.

00:02:57.065 --> 00:03:02.435
So let's take a look at some more examples on the W3 Schools website.

00:03:02.435 --> 00:03:09.900
Go to W3 Schools and then PHP operators.

00:03:12.440 --> 00:03:18.335
Let's scroll down. We looked at some of the arithmetic operators, which you can see here.

00:03:18.335 --> 00:03:20.870
There's also assignment operators.

00:03:20.870 --> 00:03:25.660
The most basic assignment operator is the equal symbol.

00:03:25.660 --> 00:03:27.950
We have looked at these in previous videos.

00:03:27.950 --> 00:03:32.470
We assign the value of 10 to the variable name of number one.

00:03:32.470 --> 00:03:37.010
There's also other assignment operators, such as addition,

00:03:37.010 --> 00:03:42.530
subtraction, multiplication, division, and the modulus,

00:03:42.530 --> 00:03:43.990
which is the remainder.

00:03:43.990 --> 00:03:48.624
There is also comparison and logical operators.

00:03:48.624 --> 00:03:54.110
We can check if two values are equal or less than or greater than.

00:03:54.110 --> 00:03:59.330
But we'll take a look at these in more detail in the if/else statement section.

00:03:59.330 --> 00:04:02.785
We can also increment and decrement the value.

00:04:02.785 --> 00:04:04.940
We can increment, for example,

00:04:04.940 --> 00:04:09.600
a value by one or we can decrement a value by one.

00:04:10.390 --> 00:04:16.510
We'll look at increment and decrement operators more in the loops video.

00:04:16.510 --> 00:04:21.915
But for now, let's take a look at a few basic examples of how we can use them.

00:04:21.915 --> 00:04:26.660
So we've had a variable called number,

00:04:26.660 --> 00:04:30.120
and we simply set this to the value of one.

00:04:30.460 --> 00:04:35.405
If we echo this to the browser we just get the value of one printed.

00:04:35.405 --> 00:04:39.450
But we can increment this value by one every time,

00:04:39.450 --> 00:04:45.000
by setting the variable name of number and then using plus plus.

00:04:45.170 --> 00:04:50.945
Save that. Now the value of one should be incremented by one.

00:04:50.945 --> 00:04:53.120
Then we should get printed to the browser,

00:04:53.120 --> 00:04:55.535
the value of two.

00:04:55.535 --> 00:05:03.640
Refresh. Sorry a semicolon on the end of that, and then refresh.

00:05:05.060 --> 00:05:08.770
Then should be the one of that and save.

00:05:08.870 --> 00:05:13.140
Refresh the browser and then we get the value of two.

00:05:13.140 --> 00:05:15.345
We can keep repeating this.

00:05:15.345 --> 00:05:21.235
If we wanted to increment by one once more and take the value to be number three,

00:05:21.235 --> 00:05:23.410
we can add that and again,

00:05:23.410 --> 00:05:26.465
and then we should get the value taken to three.

00:05:26.465 --> 00:05:29.045
If wanted to decrement, it,

00:05:29.045 --> 00:05:32.750
we could use the negative symbol and if we use it twice,

00:05:32.750 --> 00:05:35.480
we should get the value of negative one.

00:05:35.480 --> 00:05:38.715
Refresh. There we go.

00:05:38.715 --> 00:05:41.420
The value of one gets decremented to be

00:05:41.420 --> 00:05:45.930
zero and then decremented again to be negative one.

00:05:46.190 --> 00:05:51.300
So that's a quick look at data types and operators in PHP.

00:05:51.300 --> 00:05:52.770
I'll see you in the next video,

00:05:52.770 --> 00:05:55.840
we'll take a look at PHP arrays.
