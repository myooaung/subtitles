WEBVTT
1
00:00:00.480 --> 00:00:01.810
Hello and welcome back.

2
00:00:01.860 --> 00:00:04.570
Today we will be talking about dates.

3
00:00:04.590 --> 00:00:11.360
Dates are very important in our everyday life and even more important in corporate life everything in

4
00:00:11.380 --> 00:00:16.410
business world is based around time projects start project and people get hired.

5
00:00:16.410 --> 00:00:17.190
People get fired.

6
00:00:17.190 --> 00:00:21.660
People have to get paid on the same day of every month or every fortnight.

7
00:00:21.660 --> 00:00:28.200
This is the most crucial aspect of any business and businesses can track their time more efficient and

8
00:00:28.980 --> 00:00:35.830
maybe get some insightful information about it will do better in the market than those who don't.

9
00:00:36.090 --> 00:00:41.420
So as you can see I have Microsoft SPL Server Management Studio opened up as always and inside of it

10
00:00:41.470 --> 00:00:46.080
have console games database that they will we'll be working with console dates table.

11
00:00:46.290 --> 00:00:51.660
So let's go ahead and as with any entertainment that we've never worked before was going to select all

12
00:00:52.080 --> 00:00:56.320
from console dates just to see what exactly are we dealing with here.

13
00:00:56.370 --> 00:01:02.290
In our case we have 50 rows about five columns and the columns that are platform name first are Taylorville

14
00:01:02.290 --> 00:01:02.810
ability.

15
00:01:02.850 --> 00:01:08.550
This continued units sold in millions and played from common that are first applied from basically every

16
00:01:08.550 --> 00:01:14.130
gaming platform that was released the day when it was released first and the day when it was discontinued

17
00:01:14.160 --> 00:01:17.350
and how many millions of units it has sold.

18
00:01:17.640 --> 00:01:22.560
So the first thing I want to do is instead of going through every row and calculating in my head how

19
00:01:22.560 --> 00:01:25.180
many years this or not existed.

20
00:01:25.440 --> 00:01:27.370
I want to do it for me.

21
00:01:27.540 --> 00:01:32.830
And thankfully as you well how's function specifically for this.

22
00:01:32.910 --> 00:01:38.890
So all I need to do is I need to put a comma after the select star which I'll say a date.

23
00:01:39.060 --> 00:01:43.620
So the def is a function made specifically for dealing of dates.

24
00:01:43.710 --> 00:01:45.670
So they didn't open your brackets.

25
00:01:45.870 --> 00:01:51.510
And inside of it it consists of three elements so decent XOs they def open brackets inside of them.

26
00:01:51.600 --> 00:01:53.040
First we put the data part.

27
00:01:53.040 --> 00:01:58.440
So the part that we're interested in year month week second and so on.

28
00:01:58.530 --> 00:02:04.230
In our case it's going to be years then we put the older column first so the stuff that happened first

29
00:02:04.290 --> 00:02:11.460
in our case its first retail availability and then we put the more recent stuff in our case it's discontinued

30
00:02:11.610 --> 00:02:17.790
because the product can survive on the market negative from on the base so it has to be released and

31
00:02:17.790 --> 00:02:19.300
then it has to be discontinued.

32
00:02:19.320 --> 00:02:24.300
So if we execute it right now we'll get this new column at it that has a number of years that each one

33
00:02:24.300 --> 00:02:25.420
of these can survive.

34
00:02:25.710 --> 00:02:30.120
As you remember we did not do any other table functions right now.

35
00:02:30.180 --> 00:02:34.700
That's why this column will disappear as soon as we and this quarter.

36
00:02:34.950 --> 00:02:39.940
And if we go ahead and select the columns and the object of color and refresh we can see that there

37
00:02:39.940 --> 00:02:42.050
is no new column added.

38
00:02:42.090 --> 00:02:45.230
So what you want to do with this is I want to name it.

39
00:02:45.270 --> 00:02:49.770
I don't want this column to be nameless even though it will only exist for a short while.

40
00:02:49.830 --> 00:02:50.910
I want to name it.

41
00:02:50.910 --> 00:02:53.910
Years exist I was going had years existed.

42
00:02:53.940 --> 00:02:55.580
You can name it whatever you want.

43
00:02:55.860 --> 00:03:01.660
And now if we execute it we will get a very nice neat looking table ready.

44
00:03:01.860 --> 00:03:07.350
And now another thing that's very useful to do when working many table is to run order by function.

45
00:03:07.350 --> 00:03:14.130
In our case those ordered by years existed and because I wanted to be displayed oldest platforms first

46
00:03:14.220 --> 00:03:18.510
the ones that survived the most amount of years first I need to put in the center.

47
00:03:18.660 --> 00:03:23.760
So now we have a very nice table that will give us a lot of insight to what is the maximum amount of

48
00:03:23.760 --> 00:03:28.020
years that the new platform survived and with the least amount of years that any platform has survived

49
00:03:28.170 --> 00:03:29.120
up to date.

50
00:03:29.250 --> 00:03:34.680
As you can see we have a lot of null values and that is because all of these platforms have not been

51
00:03:35.310 --> 00:03:40.530
discontinued yet and it's we just can't put anything into the discontinued code.

52
00:03:40.530 --> 00:03:43.360
Don't be afraid we'll learn about nulls in a short while.

53
00:03:43.370 --> 00:03:46.620
And every question will be hopefully answered.

54
00:03:46.740 --> 00:03:51.840
Now again if we do collude in the object Explorer window right here and the columns we can see that

55
00:03:51.840 --> 00:03:52.940
first of all available.

56
00:03:52.960 --> 00:03:55.820
And this continued are both date data type.

57
00:03:55.830 --> 00:04:00.480
So this is just a very important thing that you're working with the data type with the function that

58
00:04:00.480 --> 00:04:01.710
will be learning today.

59
00:04:03.140 --> 00:04:07.180
So now let's run some more practice into day.

60
00:04:07.250 --> 00:04:11.370
I want now to show how many months each one of these platform survive.

61
00:04:11.600 --> 00:04:12.670
So a set of years here.

62
00:04:12.730 --> 00:04:13.830
Let's try it a month.

63
00:04:13.850 --> 00:04:18.450
Just down arrow enter and change the name of the column if you want to.

64
00:04:18.530 --> 00:04:26.370
Just so it makes more sense once existed and then let it go had an order by month's system.

65
00:04:26.810 --> 00:04:35.540
So now if we're on this we will get a bit different table because every year will be now swapped for

66
00:04:35.570 --> 00:04:40.310
the month's existed and it is quite interesting to see this new table.

67
00:04:40.340 --> 00:04:45.140
So it's all the same as the previous example just a bit more practice for you.

68
00:04:45.140 --> 00:04:50.230
Now let's go ahead and answer some very important for myself a very important question.

69
00:04:50.480 --> 00:04:55.190
It's a question that everybody knows Black Friday like Friday is basically the biggest consumer event

70
00:04:55.340 --> 00:05:01.960
out there and every company wants to sell people stuff in that holiday on that holiday week.

71
00:05:01.970 --> 00:05:07.640
So because it's shifting constantly shifting holiday let's just say that we are curious about what platforms

72
00:05:07.670 --> 00:05:10.560
were released in the month of November.

73
00:05:10.640 --> 00:05:15.230
If you go ahead and take a look in person or television ability and this continued you will see a very

74
00:05:15.230 --> 00:05:19.050
interesting pattern in that all of them originate in a very specific type.

75
00:05:19.070 --> 00:05:25.900
So they have four numbers followed by a dash followed by a month followed by a dash followed by a day.

76
00:05:25.910 --> 00:05:30.420
Now if we go ahead and swab down here we can see that is 0 2.

77
00:05:30.440 --> 00:05:33.800
So it will always have 10 characters in debate.

78
00:05:33.860 --> 00:05:38.360
There's just a very important thing to remember for the next election.

79
00:05:38.360 --> 00:05:39.270
We're going to run.

80
00:05:39.920 --> 00:05:45.470
We're going to run a new party in which we will say select platform name because we don't need to select

81
00:05:45.500 --> 00:05:46.240
a.

82
00:05:46.400 --> 00:05:52.560
We're just curious about what exact friends are or at least nothing else from core's cancel dates.

83
00:05:52.820 --> 00:05:58.010
And all we can say even involved working with any specific date functions we get already solved this

84
00:05:58.430 --> 00:06:06.350
question by typing in a WHERE statement in we will put where first tell availability because that time

85
00:06:06.350 --> 00:06:11.570
it was made available to public the date when it was first ever sold.

86
00:06:11.570 --> 00:06:15.040
So first we tell it our ability has to be like.

87
00:06:15.170 --> 00:06:20.580
And then we put in two apostrophes in which we'll put our wild cards.

88
00:06:20.580 --> 00:06:28.880
So as I already said this date format consists of ten characters so I put 10 dashes and if we exit this

89
00:06:29.240 --> 00:06:31.620
they should return to us all 30 rows.

90
00:06:31.650 --> 00:06:38.190
So now if I want to find eleventh month that month Lumba all I need to do is scroll five characters

91
00:06:38.190 --> 00:06:43.900
for four characters for a year and a dash and then and said the next two characters write in 11.

92
00:06:44.100 --> 00:06:49.620
So now if we run this piece of code we will get only 11 rows and all of these platforms will be the

93
00:06:49.620 --> 00:06:51.370
ones that were released in November.

94
00:06:51.420 --> 00:06:56.790
We can go ahead and type in here first availability just to be sure.

95
00:06:56.790 --> 00:07:01.170
And as you can see all of them were released in November different units different days but all of them

96
00:07:01.170 --> 00:07:02.830
were released in November.

97
00:07:03.390 --> 00:07:09.720
Now let's practice some specific functions in case of this example I only in the where function and

98
00:07:09.720 --> 00:07:12.090
after that I need to write and they part.

99
00:07:12.330 --> 00:07:17.480
So they partner turnstyles a very specific part of date as the name would suggest and the physics behind

100
00:07:17.480 --> 00:07:25.080
it is that you put in one or any other data type that you want to see and then where what are you working

101
00:07:25.080 --> 00:07:26.400
with which column are you working with.

102
00:07:26.400 --> 00:07:28.580
In our case it's first retail availability.

103
00:07:28.590 --> 00:07:33.770
Now let's go ahead and say that this month's minus 11 has to be equal zero.

104
00:07:33.780 --> 00:07:38.940
Basically we're saying that this man can only be 11 if we execute this now we'll get the same exact

105
00:07:38.940 --> 00:07:42.810
result of all the plans that were released in November.

106
00:07:42.810 --> 00:07:47.380
So this is just a more specific way of executing the same inquiry.

107
00:07:47.640 --> 00:07:53.520
Now let's just for some practice find out all the plans that were released in December before the Christmas

108
00:07:53.520 --> 00:07:56.880
holidays and New Year's printed in our case.

109
00:07:56.910 --> 00:07:58.270
This is all the same.

110
00:07:58.290 --> 00:08:00.560
We're still working the same column.

111
00:08:00.570 --> 00:08:03.840
All we need to do is use this well and execute it.

112
00:08:04.050 --> 00:08:09.240
Now you can see that only 5 platforms were ever released in December.

113
00:08:09.360 --> 00:08:14.850
But to get her to give us quite a lot of information for example we can just run or a statement here

114
00:08:15.030 --> 00:08:22.320
in which rules specify that they part by as well as equals zero for more than just Control-C QUANTRILL

115
00:08:22.320 --> 00:08:27.950
we were put here 11 and we were on and now we can see 16 rows of data.

116
00:08:27.960 --> 00:08:34.050
So basically more than 50 percent of platforms were released either in the MBR or December just before

117
00:08:34.050 --> 00:08:35.090
big holidays.

118
00:08:35.250 --> 00:08:38.540
That's a very interesting piece of information to keep in your mind.

119
00:08:39.000 --> 00:08:42.850
This shows you a very little part of what we can do with data.

120
00:08:42.870 --> 00:08:50.210
So you can change this month for a day or for day of year or week or quarter.

121
00:08:50.220 --> 00:08:55.340
Just if you live in blank it will let you select and roofing it you can change here and the worry if

122
00:08:55.350 --> 00:09:03.270
you see Q-Q here or year year year year basically is abbreviations for the same values and there's just

123
00:09:03.300 --> 00:09:08.790
easier and quicker to write when you're going to be working a lot of rescue all but as you can see there

124
00:09:08.790 --> 00:09:16.020
is a lot of different information and useful information that you can extract from Bates in Microsoft

125
00:09:16.040 --> 00:09:17.090
ask you all.

126
00:09:17.400 --> 00:09:18.720
I hope you enjoyed this lecture.

127
00:09:18.720 --> 00:09:24.660
I hope you enjoyed working with Bates and with this specific functions and I'll see you in the next

128
00:09:24.660 --> 00:09:25.120
one.
