WEBVTT
1
00:00:00.330 --> 00:00:01.250
Hello and welcome back.

2
00:00:01.260 --> 00:00:07.260
Hope you're enjoying using Pinyin and for it really makes using sequel much easier compared to directly

3
00:00:07.260 --> 00:00:08.940
working on the command prompt.

4
00:00:09.210 --> 00:00:10.880
Or possibly as well.

5
00:00:11.240 --> 00:00:17.480
OK so today we will be taking a look at the WHERE condition the next logical step after displaying the

6
00:00:17.510 --> 00:00:20.950
results is to find a way to display specific results.

7
00:00:20.970 --> 00:00:23.010
Only the ones we are interested in.

8
00:00:23.010 --> 00:00:27.040
This is the exact purpose of where clause in a school.

9
00:00:27.230 --> 00:00:30.690
The structure of the Querrey in a school is as follows.

10
00:00:30.690 --> 00:00:37.110
First we select some data then we specify from which table it comes and then we narrow down the data

11
00:00:37.140 --> 00:00:38.990
by using a WHERE condition.

12
00:00:39.090 --> 00:00:42.900
So to begin with let's quickly create a new query.

13
00:00:43.050 --> 00:00:49.950
So all we need to do is like right click your select query tool and then legist open table's menu.

14
00:00:49.980 --> 00:00:55.610
Open the consumer complaints all the columns just so it's easier to work directly with this table.

15
00:00:55.680 --> 00:00:59.450
So as our first example let's quickly write select query.

16
00:00:59.460 --> 00:01:04.500
Just a simple select from query and select all the product names.

17
00:01:06.280 --> 00:01:13.850
And issues that these products have from consumer complaints.

18
00:01:13.940 --> 00:01:20.420
Now if we run this all with the square he does it displays a table with two columns product name and

19
00:01:20.420 --> 00:01:22.310
issue from consumer complaints.

20
00:01:22.310 --> 00:01:26.200
It will despite our sixty five point five thousand rows of data.

21
00:01:26.360 --> 00:01:32.060
Basically it will get us from all the products and all the issues these products have.

22
00:01:32.060 --> 00:01:39.500
So as you can see exactly what it does and if we just given this out a bit we can see that is all true

23
00:01:39.500 --> 00:01:40.300
and correct.

24
00:01:40.520 --> 00:01:49.370
But now let's say you are only interested in products and the issues these products have that come from

25
00:01:49.370 --> 00:01:51.820
the state of New York in order to do this.

26
00:01:51.860 --> 00:01:54.460
We implement the WHERE statement.

27
00:01:54.560 --> 00:02:04.330
So what we do here is we write the where then we say state name and then we put equals New York.

28
00:02:04.820 --> 00:02:13.730
So now if we execute it what ill would turn to us it will in turn only 4.4 files and rows of data.

29
00:02:13.970 --> 00:02:16.780
And as you can see it performed much quicker this time.

30
00:02:16.970 --> 00:02:23.360
So what happens here is that it scans for all the columns through the whole table of consumer complaints

31
00:02:23.420 --> 00:02:26.590
and through product name and issue specifically.

32
00:02:26.630 --> 00:02:32.480
But then it also puts a condition that the state name has to be New York.

33
00:02:32.480 --> 00:02:38.760
And because this is nicely organized they they set all the state names consist of two letters.

34
00:02:38.780 --> 00:02:44.220
So it's pretty easy for us to find all the products from any state we want.

35
00:02:44.480 --> 00:02:48.220
And this particular example is from New York just to demonstrate to you.

36
00:02:48.220 --> 00:02:55.050
Let's quickly display the state name on the data output window again as well.

37
00:02:55.100 --> 00:03:00.530
So now as you can see the state name will be New York and the blue scroll down we can make sure that

38
00:03:00.560 --> 00:03:10.760
that's all New York and hopefully you now understand the logic behind the ware query because the understanding

39
00:03:10.880 --> 00:03:17.540
of the logic behind the simplest Eskew or queries is what separates actual users and ask yields masters

40
00:03:17.660 --> 00:03:19.900
that you will soon surely become.

41
00:03:20.240 --> 00:03:24.190
Ok so now I'll give you a bit more difficult example.

42
00:03:24.230 --> 00:03:30.170
And let's imagine that your boss asks you to display the companies and the products that these companies

43
00:03:30.170 --> 00:03:34.870
make that received complaints on the same day that they were sent for me.

44
00:03:34.880 --> 00:03:40.460
This is actually a very interesting topic since every time I sent an email to customer support I always

45
00:03:40.460 --> 00:03:46.730
wondered does it take them long to receive my email or are they just taking their sweet time to answer

46
00:03:46.730 --> 00:03:47.290
it.

47
00:03:47.300 --> 00:03:53.490
So again as always let's try to first and then defy our key elements in this example.

48
00:03:53.510 --> 00:03:56.960
It's company product name.

49
00:03:57.040 --> 00:03:59.460
They receive it and they are sent.

50
00:03:59.590 --> 00:04:01.890
So we'll be working with four elements.

51
00:04:01.930 --> 00:04:09.160
So let's go and quickly create a new query just by right clicking anywhere and selecting queries from

52
00:04:09.160 --> 00:04:10.080
the dropdown menu.

53
00:04:10.150 --> 00:04:14.520
And now let's actually get to our favorite part actually writing the query.

54
00:04:14.590 --> 00:04:24.750
So first we select the company and product name then we select where from.

55
00:04:24.780 --> 00:04:31.380
In this case consumer complaints as always because we only have one table to work with right now and

56
00:04:31.380 --> 00:04:37.830
then we add the word statement in which we're saying that that they receive has to be equal to the date

57
00:04:37.860 --> 00:04:38.650
sent.

58
00:04:39.030 --> 00:04:41.990
And let's quickly run this query.

59
00:04:42.150 --> 00:04:50.290
It will have to return to us a table of two columns with I'm expecting less than sixty five point five

60
00:04:50.290 --> 00:04:51.060
thousand rows.

61
00:04:51.210 --> 00:04:58.100
And as you can see it tells only about 50000 rows and this is what we get.

62
00:04:58.100 --> 00:05:00.310
So to demonstrate how this process works.

63
00:05:00.310 --> 00:05:08.150
Again let's quickly go and add the data received and they sent to a select statement.

64
00:05:08.220 --> 00:05:13.530
This will just make it a bit easier to demonstrate what the query has done for us.

65
00:05:13.530 --> 00:05:21.520
So right now it will turn towards a table of four columns and then they'd received and they'd send has

66
00:05:21.520 --> 00:05:24.530
to be identical in every single line.

67
00:05:24.820 --> 00:05:31.530
And as you can see if we scroll down we will see that a read date received corresponds to the same data

68
00:05:31.550 --> 00:05:34.240
sent inside one line.

69
00:05:34.510 --> 00:05:38.320
So any row has to have exactly the same.

70
00:05:38.320 --> 00:05:42.700
They do Tifft and they send as you can see different rows can have different values.

71
00:05:42.710 --> 00:05:48.030
And for example this one was sent on the first of August this final ascent of 23rd of July.

72
00:05:48.190 --> 00:05:54.320
But inside throe they have to be the same and that's exactly what we needed.

73
00:05:54.520 --> 00:05:55.010
OK.

74
00:05:55.180 --> 00:06:00.220
I hope you feel confident around the work clothes and ask you all since it's important to understand

75
00:06:00.220 --> 00:06:07.360
the logic behind the queries because this way you will be able to solve any problem any task that comes

76
00:06:07.360 --> 00:06:08.100
your way.

77
00:06:08.500 --> 00:06:11.980
And that's exactly what we want to achieve.

78
00:06:11.980 --> 00:06:15.780
I hope you enjoyed this lecture and I'll see you in the next one.
