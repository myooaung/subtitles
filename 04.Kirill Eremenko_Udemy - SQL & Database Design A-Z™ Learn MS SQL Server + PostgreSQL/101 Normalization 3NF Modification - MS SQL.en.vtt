WEBVTT
1
00:00:00.360 --> 00:00:03.220
Hello we'll welcome back to the course on databases.

2
00:00:03.360 --> 00:00:09.210
Previously we performed the investigation of our current database structure and we found that out of

3
00:00:09.210 --> 00:00:14.070
the two tables that we have we have the transactions table and the customers that well those are our

4
00:00:14.070 --> 00:00:15.460
working tables.

5
00:00:15.540 --> 00:00:21.840
We found that out of those two tables the Customers table is indeed in a third normal form.

6
00:00:21.840 --> 00:00:23.650
So let's have a look at that one.

7
00:00:23.670 --> 00:00:24.510
There it is.

8
00:00:24.810 --> 00:00:31.800
And at the same time we found that the transactions table unfortunately isn't in a third normal form.

9
00:00:31.800 --> 00:00:42.240
The problem here is that we've got two columns description and a retail price that depend on a candidate

10
00:00:42.270 --> 00:00:43.270
key any candidate.

11
00:00:43.270 --> 00:00:48.380
Q So this candidate here this one whichever one she is but as long as it's true for at least one candidate

12
00:00:48.410 --> 00:00:49.330
key.

13
00:00:49.770 --> 00:00:55.950
These columns depend on the candidate key transitively So even though before every single transaction

14
00:00:55.950 --> 00:01:02.820
id there is indeed a specific description specific retail price and specific item the description actually

15
00:01:02.820 --> 00:01:05.140
doesn't depend directly on the transaction ID.

16
00:01:05.190 --> 00:01:07.990
It depends on the transaction ID through item.

17
00:01:07.980 --> 00:01:14.590
So basically item that dictates description item Taser's scription and then item depends on transaction.

18
00:01:14.610 --> 00:01:20.940
So the dependency is trans. it goes like this description through item depends on transaction id retail

19
00:01:20.940 --> 00:01:30.630
price through item depends on transaction ID and that is sufficient to tell us that this table is not

20
00:01:30.630 --> 00:01:32.160
in third normal form.

21
00:01:32.220 --> 00:01:37.860
And basically what that means is that these two columns need to be separated out into their own table

22
00:01:37.890 --> 00:01:40.210
a lookup table for items.

23
00:01:40.230 --> 00:01:46.620
So basically that table just contained these three columns and then that the item column would be the

24
00:01:46.650 --> 00:01:47.930
primary key in the table.

25
00:01:48.000 --> 00:01:53.190
And here in this remaining table it would be the foreign key and then we would use this column to look

26
00:01:53.250 --> 00:01:57.750
up the description and the retail price of each item.

27
00:01:57.750 --> 00:02:02.780
So that is our goal and that's good news that we really know what needs to be done.

28
00:02:02.790 --> 00:02:13.230
So basically now it's all up to us to just simply code this modification and adjust or alter our database

29
00:02:13.260 --> 00:02:17.640
and turn it into a third normal form data structure.

30
00:02:17.640 --> 00:02:19.970
So let's get straight into it.

31
00:02:19.980 --> 00:02:21.720
All right.

32
00:02:21.720 --> 00:02:32.580
The first thing that we want to do is we want to say that transitive dependencies needs to be separated

33
00:02:33.980 --> 00:02:35.980
said.

34
00:02:36.500 --> 00:02:43.300
Ted on a separate and into their own table.

35
00:02:43.300 --> 00:02:44.630
So that's exactly what we're going to do.

36
00:02:44.630 --> 00:02:53.440
Again to say select item out by the way just before we continue I wanted to say that what we're going

37
00:02:53.440 --> 00:02:55.200
to be doing is going to be very similar.

38
00:02:55.210 --> 00:03:04.030
The process is going to be very similar to what we did for the two and half parts so this parts were

39
00:03:04.070 --> 00:03:11.890
done the check and then the separate columns through the team table then check and then remove the columns

40
00:03:12.340 --> 00:03:18.850
then drop the team table so all of this part that we were done this what we're going to be doing now

41
00:03:18.850 --> 00:03:19.990
is going to be very similar to that.

42
00:03:19.990 --> 00:03:25.750
So if you feel confident after all the trials we've had to proceed on your own and create this little

43
00:03:25.750 --> 00:03:32.440
exercise for ourselves then I highly encourage you to pause the video right now and go ahead and try

44
00:03:32.440 --> 00:03:36.980
it on your own and try practicing this code will be a very good exercise.

45
00:03:37.150 --> 00:03:42.340
And then you can always continue the video and compare your result to what I'm going to be presenting

46
00:03:42.520 --> 00:03:44.110
in the rest of the story.

47
00:03:44.380 --> 00:03:48.560
So on that note if you'd like to do that then go ahead and post the video.

48
00:03:48.580 --> 00:03:56.710
Otherwise I'm going to continue and show you how I would go about solving this challenge and normalizing

49
00:03:56.710 --> 00:03:57.930
this database.

50
00:03:57.940 --> 00:03:58.260
All right.

51
00:03:58.260 --> 00:03:58.770
Here we go.

52
00:03:58.780 --> 00:04:06.900
So select star or rock star select want to select these three rights are on us like these.

53
00:04:06.920 --> 00:04:17.450
Let's solve that let's say select item description that's put in brackets because it is a key word Komarr

54
00:04:17.970 --> 00:04:20.920
retail price.

55
00:04:21.090 --> 00:04:21.390
Right.

56
00:04:21.390 --> 00:04:22.360
So there we go.

57
00:04:22.470 --> 00:04:28.280
And we're the most like that from from transactions.

58
00:04:28.320 --> 00:04:31.660
So if we were on this code we just select those three columns.

59
00:04:31.680 --> 00:04:37.170
Now we want to put all of that as we know into a tempy file into tempy table.

60
00:04:37.170 --> 00:04:37.620
Why is that.

61
00:04:37.620 --> 00:04:42.120
Well because we don't want to put into the final table yet because there's lots of duplicates in here

62
00:04:43.040 --> 00:04:47.850
life you'll see have a look let's have a look you'll probably will probably be able to pick some of

63
00:04:47.850 --> 00:04:50.450
them up just by looking through here.

64
00:04:50.850 --> 00:04:56.640
But it basically makes sense that people would buy the same items so they can see somebody bought this

65
00:04:56.640 --> 00:05:03.740
dish towel which has this item code for forty nine dollars 50 and then again that was purchased again.

66
00:05:03.780 --> 00:05:06.120
So this is going to be lots of duplicate in here.

67
00:05:06.120 --> 00:05:07.270
It's a huge table.

68
00:05:07.600 --> 00:05:09.690
Three thousand four and fifty five rows.

69
00:05:09.780 --> 00:05:16.110
So we want to first put into a temp table and then we'll remove the pictures from there.

70
00:05:16.110 --> 00:05:19.620
So there's go around that.

71
00:05:19.710 --> 00:05:20.740
It's always good.

72
00:05:20.850 --> 00:05:28.690
Well always good to copy this for as an audit trail how many rows were affected.

73
00:05:28.860 --> 00:05:37.780
And then you want to select start from DMP just to check what you got.

74
00:05:37.800 --> 00:05:41.130
And they basically duplicated here.

75
00:05:41.340 --> 00:05:42.490
Here's another one.

76
00:05:42.660 --> 00:05:45.060
The duplicates here are just a.

77
00:05:45.330 --> 00:05:48.900
Because they are here because of the way we created this table.

78
00:05:49.050 --> 00:05:54.660
And what we want we want to reduce this table to simply priceless so by removing the duplicates we'll

79
00:05:54.930 --> 00:05:58.690
end up with a price where we have the item description the retail price.

80
00:05:59.130 --> 00:06:03.430
Every single roll is going to be unique and that in essence is a priceless.

81
00:06:03.870 --> 00:06:06.160
So here we want to do what you want to do.

82
00:06:06.240 --> 00:06:13.020
We want to make the new table one enough so we want to make it put in first animal form.

83
00:06:13.050 --> 00:06:16.000
We're going to remove duplicates right.

84
00:06:16.020 --> 00:06:21.360
So that's the reason we want this table to eventually be third normal form as well.

85
00:06:21.360 --> 00:06:27.840
So first step is to make it first on the form and that requires removing duplicates select distinct

86
00:06:29.240 --> 00:06:37.940
star from you're from Tempe they'll take the distinct values and we want to put them into items that's

87
00:06:37.940 --> 00:06:41.660
going to be our new table that's going to be a look up table.

88
00:06:41.660 --> 00:06:43.090
OK 126.

89
00:06:43.160 --> 00:06:47.880
You can see we kind of down from over 3000 to only 126 items.

90
00:06:47.910 --> 00:06:50.600
I told them of items we have in our dataset.

91
00:06:50.630 --> 00:06:50.960
All right.

92
00:06:51.050 --> 00:06:54.800
So now let's check our table.

93
00:06:54.800 --> 00:07:01.440
So let's say select star from items right.

94
00:07:01.510 --> 00:07:05.860
So go ahead and do that for refresh here.

95
00:07:06.040 --> 00:07:11.720
So basically the remaining tables that we're going to have our transactions items and customers right.

96
00:07:11.720 --> 00:07:17.050
We were going to drop the tempy table and our organization table is not a working table that's just

97
00:07:17.050 --> 00:07:23.610
the way we got the data set into skills serviced my Microsoft SQL Server.

98
00:07:23.950 --> 00:07:28.780
And we rejected customers is indeed in third normal form so we are going to need to make sure that the

99
00:07:28.780 --> 00:07:31.430
items and transactions tables are in third normal form.

100
00:07:31.600 --> 00:07:33.250
So that's what we're going to start off with.

101
00:07:33.250 --> 00:07:37.780
Now we're going to while we're here we're going to discuss the items table and make sure it's Ceridian

102
00:07:37.810 --> 00:07:38.900
third normal form.

103
00:07:39.160 --> 00:07:43.840
So we know that it's really in first of all form because we've just removed the duplicate values and

104
00:07:43.840 --> 00:07:51.280
you can see that in every single row or in every single cell you only have one individual value.

105
00:07:51.280 --> 00:07:57.910
So even though we have like slashes here or the ampersands and so on that's just the way this description

106
00:07:57.910 --> 00:08:04.190
is structured it's not actually it's not two separate values that should be in separate rows.

107
00:08:04.240 --> 00:08:09.700
So that's what we are looking for are there any values that actually should be separate not even separate

108
00:08:09.700 --> 00:08:11.380
calls but separate rows.

109
00:08:11.570 --> 00:08:13.270
And no we don't have any of those.

110
00:08:13.270 --> 00:08:20.770
And also you can just assume that that's going to happen because of the way this database is designed

111
00:08:20.770 --> 00:08:23.170
because of the purpose of this table.

112
00:08:23.200 --> 00:08:27.980
So because the way this table gets populated whenever they have a new item they just put an item code

113
00:08:27.980 --> 00:08:30.510
a description and a retail price into this table.

114
00:08:30.670 --> 00:08:31.090
That's it.

115
00:08:31.090 --> 00:08:40.130
So it's not possible or it's not intended for the stable to have two values in one cell.

116
00:08:40.930 --> 00:08:43.180
All right so these tables and first normal form.

117
00:08:43.180 --> 00:08:45.760
Now we need to check second normal form.

118
00:08:45.760 --> 00:08:51.280
So for that we're going first need to identify the prime and non-prime attributes prime attributes are

119
00:08:51.280 --> 00:08:59.620
the ones that are part of at least one candidate key non-prime attributes are not part of any candidate.

120
00:08:59.620 --> 00:09:01.840
Q So what are our candidates here.

121
00:09:01.930 --> 00:09:09.600
Well we've got the primary key here and by definition a primary key is a candidate.

122
00:09:09.610 --> 00:09:10.320
So there we go there.

123
00:09:10.360 --> 00:09:11.200
We have one.

124
00:09:11.260 --> 00:09:17.210
And the question is is any are any of these or their combination a candidate key as well.

125
00:09:17.320 --> 00:09:25.870
Well is description a candidate key well on its own description is not a candidate key because well

126
00:09:25.870 --> 00:09:30.670
because two items different items can have the same description you can have different two different

127
00:09:30.670 --> 00:09:33.070
hand-bags or two different t shirts and so on.

128
00:09:33.070 --> 00:09:37.900
So that's not a candidate key retail price and thing two items can have the same price and be different

129
00:09:37.900 --> 00:09:38.830
items.

130
00:09:38.830 --> 00:09:42.040
Is the combination of the two a candidate key.

131
00:09:42.310 --> 00:09:44.870
Well the combination of the two is not a candidate.

132
00:09:44.920 --> 00:09:45.610
Q Why is that.

133
00:09:45.610 --> 00:09:48.040
Well let's have a look this is actually an interesting question.

134
00:09:48.050 --> 00:09:52.640
So let's say you've got let's find something interesting.

135
00:09:53.230 --> 00:09:58.500
Let's say you have a blazer for 20 688.

136
00:09:58.510 --> 00:09:58.750
Right.

137
00:09:58.750 --> 00:10:10.990
So does a combination of the two uniquely identify that item that specific Blaser or more or more put

138
00:10:10.990 --> 00:10:18.460
more blatantly if you have if this is an item that is a blazer for 2068 And then this is a different

139
00:10:18.460 --> 00:10:23.920
item so the let's say can it be possible that the item is different but this is also Blaser and it's

140
00:10:23.920 --> 00:10:25.360
also 26 88.

141
00:10:25.420 --> 00:10:25.660
Right.

142
00:10:25.660 --> 00:10:26.600
Is that possible.

143
00:10:26.770 --> 00:10:31.810
Well yes that is possible you can have to Blazer's which are in fact two different Blazer's and they

144
00:10:31.810 --> 00:10:36.340
have therefore two different items but they're both described as Blazer's because they are indeed lasers

145
00:10:36.850 --> 00:10:39.090
and they're priced the same 26:18.

146
00:10:39.100 --> 00:10:44.680
But at the same time the first place or might be from Hugo Boss and the second Blaser might be from

147
00:10:44.680 --> 00:10:47.620
caliber orce or some other company.

148
00:10:47.630 --> 00:10:51.760
And basically in essence there are two different Blazer's this might have different colors different

149
00:10:51.760 --> 00:10:55.650
styles and so on but just happens so happens that they have the same price.

150
00:10:55.930 --> 00:10:57.380
And that totally can happen.

151
00:10:57.520 --> 00:11:01.360
And therefore these two together are not a candidate.

152
00:11:01.660 --> 00:11:03.610
And one final comment.

153
00:11:03.700 --> 00:11:11.370
Just to refresh on candidate keys the reason why we're not looking at considering the combination of

154
00:11:11.370 --> 00:11:19.930
all three as a candidate key because it will not be a candidate key because a candidate key it will

155
00:11:19.930 --> 00:11:20.870
be a super scheme.

156
00:11:20.890 --> 00:11:26.200
But as a candidate key is a super key that you can break down further and because this is already a

157
00:11:26.200 --> 00:11:27.310
candidate key.

158
00:11:27.400 --> 00:11:32.920
So this cannot be a candidate key because part of it is already a candidate and means you can break

159
00:11:32.920 --> 00:11:33.480
it down further.

160
00:11:33.500 --> 00:11:40.120
So therefore we stop there and we know that this is a candidate key and none of these or their combination

161
00:11:40.180 --> 00:11:41.570
is a candidate.

162
00:11:42.340 --> 00:11:43.330
And what does that mean.

163
00:11:43.330 --> 00:11:47.480
Well that means that this is all prime attribute and these are non-prime attributes good.

164
00:11:47.500 --> 00:11:50.330
Now we can investigate second and third normal form.

165
00:11:50.530 --> 00:11:52.350
So second normal form what does it say.

166
00:11:52.360 --> 00:11:59.620
It says that if you remember the moment of Monnick it says that every non-prime attribute must state

167
00:11:59.650 --> 00:12:04.800
a fact about the key the whole key and nothing but the key.

168
00:12:04.800 --> 00:12:11.090
All right beautiful Monica I really like it because it helps remember so on the second on the part that

169
00:12:11.100 --> 00:12:16.540
we're interested in is it states a fact about the whole key.

170
00:12:16.570 --> 00:12:16.810
Right.

171
00:12:16.810 --> 00:12:26.680
So basically it means that none or so that every single non-prime attribute has to be dependent fully

172
00:12:27.250 --> 00:12:33.760
on the on the on each of the candidate keys.

173
00:12:33.760 --> 00:12:35.830
We only have one candidate so that's easy.

174
00:12:36.010 --> 00:12:43.040
And also our candidate key cannot be split into two or more columns because only contains one column

175
00:12:43.050 --> 00:12:43.400
right.

176
00:12:43.450 --> 00:12:45.610
This candidate only has one column.

177
00:12:45.700 --> 00:12:51.940
So therefore by default this and this every single prime non-prime attribute is going to be dependent

178
00:12:51.940 --> 00:12:57.010
wholly or fully on this kind of the key is simply because we can split it up.

179
00:12:57.010 --> 00:13:00.130
So definitely this table is in second normal form.

180
00:13:00.550 --> 00:13:06.580
And now let's proceed to third normal form and the definition of third normal form is the third part

181
00:13:06.580 --> 00:13:13.870
of them and the Monnick that's every single non-prime attribute must specify a factor must provide a

182
00:13:13.870 --> 00:13:19.020
fact about the key the whole key and nothing about the about nothing but the key.

183
00:13:19.020 --> 00:13:26.850
So basically every non-prime attribute must be non-trans entirely dependent on the key.

184
00:13:26.870 --> 00:13:32.980
Right on the on the candidate key on every candidate.

185
00:13:32.980 --> 00:13:34.710
We only have one candidate key again.

186
00:13:34.900 --> 00:13:39.970
And the question is so his description directly dependent on him or is a dependent either the retail

187
00:13:39.970 --> 00:13:44.690
price no description is directly dependent on item.

188
00:13:44.870 --> 00:13:45.380
And why is that.

189
00:13:45.380 --> 00:13:51.420
Well because even if the price changes the description doesn't have to change.

190
00:13:51.420 --> 00:13:59.830
You might have a coat for $135 a three and you can have a code for 93 tokenize So there is no link here.

191
00:14:00.380 --> 00:14:01.410
There it is better.

192
00:14:01.910 --> 00:14:07.550
QUESTION The next question is retail price directly dependent item or is it really depend on item through

193
00:14:07.550 --> 00:14:08.400
description.

194
00:14:08.630 --> 00:14:17.330
Well it's directly depend on item because you might have a house code for $135 a three and you could

195
00:14:17.330 --> 00:14:20.480
have a blazer for $135 83.

196
00:14:20.900 --> 00:14:25.410
It can totally happen that two items of different descriptions have the same retail price.

197
00:14:25.460 --> 00:14:30.380
So therefore there is no link and retail price is directly dependent on item.

198
00:14:30.410 --> 00:14:30.830
There we go.

199
00:14:30.830 --> 00:14:37.700
So that means that there are no transitive dependencies of non-primary attributes on candidate keys

200
00:14:37.970 --> 00:14:42.140
and therefore this table is in third normal form.

201
00:14:42.140 --> 00:14:47.940
So here we can say three and half confirm.

202
00:14:48.740 --> 00:14:49.580
Wonderful.

203
00:14:49.580 --> 00:14:50.480
Okay.

204
00:14:51.140 --> 00:15:01.610
So now the final step that we need to do is or nearer to final step is now we need to remove the extracted

205
00:15:01.670 --> 00:15:09.360
rows from the Transactions table.

206
00:15:09.560 --> 00:15:21.640
But at the same time as previously we need to keep the 14 foreign key item because that's the only way

207
00:15:21.640 --> 00:15:27.310
we can interact with that table connected to a table so there's our transactions table.

208
00:15:27.430 --> 00:15:31.610
We basically need to remove these columns these two columns because we have them in a separate table

209
00:15:31.610 --> 00:15:31.850
now.

210
00:15:31.960 --> 00:15:39.300
But we want to keep the item column because it's our only way to connect to that new table that we created

211
00:15:39.400 --> 00:15:40.090
the items table.

212
00:15:40.090 --> 00:15:42.050
So let's go ahead and do that.

213
00:15:43.770 --> 00:15:44.800
There we go.

214
00:15:45.180 --> 00:15:56.780
So we're going to say alter table transactions and then we're going to say drop column description.

215
00:15:56.780 --> 00:16:10.610
So this is a key word so description and also we want to drop retail price we don't need brackets here.

216
00:16:11.460 --> 00:16:15.430
We do need to underscore because it has an underscore.

217
00:16:15.570 --> 00:16:20.830
If you didn't have the underscore then if I had a space we'd need the brackets.

218
00:16:21.250 --> 00:16:21.640
OK.

219
00:16:21.640 --> 00:16:22.980
So we want to do that.

220
00:16:23.050 --> 00:16:31.240
Let's go ahead and drop it and then we're going to say select star from transactions

221
00:16:33.770 --> 00:16:35.370
that should work.

222
00:16:35.370 --> 00:16:37.610
There we go so now we have this table.

223
00:16:37.640 --> 00:16:40.780
The question is is this table in third normal form.

224
00:16:41.000 --> 00:16:45.740
Well we don't even need to check because we already know that the only two columns that are preventing

225
00:16:45.740 --> 00:16:49.430
it from being in the third normal form have been removed.

226
00:16:49.430 --> 00:16:55.490
So we've already performed this check we already know that the remaining part of this table is already

227
00:16:55.490 --> 00:16:56.530
in third normal form.

228
00:16:56.600 --> 00:17:03.300
So we can safely say that we've got three Neph confirmed here.

229
00:17:03.740 --> 00:17:08.070
And finally the last step that we need to do is we need to drop table MP.

230
00:17:08.150 --> 00:17:11.720
Always good to clean up after yourself.

231
00:17:11.720 --> 00:17:17.180
So if you refresh there you'll see we've got customers items and transactions and for each one of them

232
00:17:17.180 --> 00:17:20.780
if you go through your comments that's why it's good to put these comments because you can have a lot

233
00:17:20.780 --> 00:17:26.180
of tables and then you will not know which is not remember which one you've looked at which we haven't.

234
00:17:26.180 --> 00:17:36.050
So here we can see transaction's 3 and if confirmed check items 3 and confirm check and customers through

235
00:17:36.120 --> 00:17:37.580
and have confirmed check.

236
00:17:37.580 --> 00:17:40.530
So all of our three tables are in third normal form.

237
00:17:40.550 --> 00:17:43.930
Therefore our database is in third normal form.

238
00:17:43.940 --> 00:17:45.130
Congratulations.

239
00:17:45.140 --> 00:17:49.470
We have normalized this database to sort of forum.

240
00:17:49.550 --> 00:17:56.210
It has been a massive undertaking I can imagine when we went through it together so we we are looking

241
00:17:56.210 --> 00:17:59.520
back we can see that it took quite a bit of time.

242
00:17:59.520 --> 00:18:05.150
It's it's a heavy undertaking but it is totally worth it and is actually quite exciting.

243
00:18:05.150 --> 00:18:11.510
I like thinking about these things like investigating I like them bringing taking action and taking

244
00:18:11.720 --> 00:18:15.630
these databases to their normal form that is required.

245
00:18:15.740 --> 00:18:18.820
I think it was very very fun.

246
00:18:19.010 --> 00:18:20.630
I hope you think so too.

247
00:18:21.190 --> 00:18:26.750
And so just to finish off basically we have these tables and now if you want to ever connect them you

248
00:18:26.750 --> 00:18:32.960
have this transaction stable and if you want to get information on customers you just do a join like

249
00:18:32.960 --> 00:18:35.580
a left join or in a join to the customers table.

250
00:18:35.720 --> 00:18:41.270
Sure Fire information on the items you do adjoint the item so getting information reading formation

251
00:18:41.330 --> 00:18:48.410
is a bit time consuming but on the other hand writing information is efficient and that is the difference

252
00:18:48.410 --> 00:18:55.400
between oil AP databases which are designed for online analytics processing versus oil T.P. which are

253
00:18:55.400 --> 00:18:57.740
designed for online transaction processing.

254
00:18:57.740 --> 00:19:04.430
So here we are focusing on processing transactions so we want to make the writing process as simple

255
00:19:04.430 --> 00:19:11.640
as possible to save to increase efficiency saves space and also minimize potential for errors.

256
00:19:11.720 --> 00:19:15.530
The sacrifices of course will have to do Joines to get information out of it.

257
00:19:15.620 --> 00:19:16.360
When we read it.

258
00:19:16.640 --> 00:19:19.730
But that's how oil Topy databases work.

259
00:19:19.730 --> 00:19:24.810
I hope you enjoyed this section and these tutorials and I can't wait to see you next time.

260
00:19:24.830 --> 00:19:26.390
Until then happy analyzing.
