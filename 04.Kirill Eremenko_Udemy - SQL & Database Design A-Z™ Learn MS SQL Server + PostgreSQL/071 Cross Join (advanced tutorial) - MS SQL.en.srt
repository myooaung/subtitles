1
00:00:00,860 --> 00:00:03,550
Hello and welcome back to the course on databases.

2
00:00:03,740 --> 00:00:10,690
So we've talked about all sorts of Joines we've talked about Left-Right inner outer full outer joins

3
00:00:10,690 --> 00:00:18,320
that we've talked about cleaning up your joins with a complex join and joins multiple fields so very

4
00:00:18,320 --> 00:00:25,940
well you're probably very well-versed by now in the topic of Joines and today I have one bonus tutorial

5
00:00:25,940 --> 00:00:26,570
for you.

6
00:00:26,900 --> 00:00:35,490
It's about a specific type of Joines that is not always covered in educational material.

7
00:00:35,690 --> 00:00:45,430
It's and if you will say typical Secret's type of information that you get to find out eventually with

8
00:00:45,440 --> 00:00:46,730
the course of your career.

9
00:00:46,820 --> 00:00:53,980
But I do need to warn you that this is kind of an advanced topic and feel free to skip this tutorial

10
00:00:54,080 --> 00:00:58,550
and get come back to it some time later when you do come across this type of join.

11
00:00:58,700 --> 00:01:02,510
But at the same time if you feel prepared then let's go ahead and check it out.

12
00:01:02,510 --> 00:01:08,710
So today we're talking about something very interesting it's called a cross.

13
00:01:09,110 --> 00:01:16,160
And I personally didn't find out about cross join for at least a year or more of you more.

14
00:01:16,670 --> 00:01:25,730
While I was working with fescue well until I actually needed it in my work and then I had to you know

15
00:01:25,820 --> 00:01:28,850
I thought maybe it's an inner Joyner's an outer join.

16
00:01:28,880 --> 00:01:33,260
I was trying to figure out what exactly I needed and wasn't any of those it was actually specifically

17
00:01:33,260 --> 00:01:34,850
a cross join that I needed.

18
00:01:35,120 --> 00:01:38,470
And luckily Asgill actually has this facility.

19
00:01:38,480 --> 00:01:40,150
So what is a cross doing.

20
00:01:40,370 --> 00:01:47,770
Well a cross join is a is an implementation of a Cartesian product in a scale.

21
00:01:47,780 --> 00:01:53,210
I know it sounds a bit complex but at the same time it actually isn't that bad.

22
00:01:53,210 --> 00:01:59,990
So I went across a Cartesian product is at the Wikipedia page here is in mathematics a Cartesian product

23
00:01:59,990 --> 00:02:06,830
some mathematical operation that returns a set or product set or some product from multiple sets.

24
00:02:06,950 --> 00:02:13,070
That is for sets and being created product is a set of all ordered pairs a b where A's from ABC from

25
00:02:13,070 --> 00:02:13,430
B.

26
00:02:13,550 --> 00:02:18,200
And the best way to illustrate this is to look at this example so if you have just think of it in terms

27
00:02:18,200 --> 00:02:25,040
of table so if you have an all Table A and table B and these are the rows so x y and that are the rows

28
00:02:25,040 --> 00:02:27,370
and B these columns are also rows.

29
00:02:27,370 --> 00:02:29,980
You could call a rose a one two and three.

30
00:02:29,990 --> 00:02:36,510
So the cartesian product is all possible combinations of these two sets.

31
00:02:36,710 --> 00:02:39,580
These two tables all possible combinations of the rows.

32
00:02:39,580 --> 00:02:42,590
So the X1 matches up 1.

33
00:02:42,650 --> 00:02:47,480
So the first rule match up for show Frostrup much second row first row match up third row second row

34
00:02:47,480 --> 00:02:52,860
much of first second second second third third match up with first third of second third of third.

35
00:02:52,970 --> 00:03:02,090
So basically you know how in a join Left-Right inner or outer join we usually match them up so X would

36
00:03:02,090 --> 00:03:06,920
match up to maybe row two and whites row three and this one wouldn't have a match on have a match and

37
00:03:06,920 --> 00:03:10,290
that's what the result would have in a Cartesian product.

38
00:03:10,340 --> 00:03:18,270
There is no on there's no parts there's no criteria for the match it just matches everything.

39
00:03:18,410 --> 00:03:24,890
And that is why that's why this story is a bit advanced is that because now after so many tutorials

40
00:03:24,890 --> 00:03:32,390
on joins in a row we are in the mindset of having this on part of the statement that we are specifying

41
00:03:32,390 --> 00:03:34,790
how to match the two tables.

42
00:03:34,790 --> 00:03:40,130
We want this to be equal to that when the criterion product or in the cross join you're not actually

43
00:03:40,130 --> 00:03:46,550
going to have this part you're just going to grow cross join two tables full stop and it'll do everything

44
00:03:46,550 --> 00:03:46,910
for you.

45
00:03:46,910 --> 00:03:49,410
So let's have a look at that.

46
00:03:49,670 --> 00:03:52,670
We'll start by selecting we'll actually let's talk through this a bit.

47
00:03:52,670 --> 00:03:59,080
We're going to take two of the we're going to take the product prove procedure history table that's

48
00:03:59,090 --> 00:04:04,400
for show which is going to take the owners and pets tables and was that because we want smaller tables

49
00:04:04,400 --> 00:04:10,370
this table has several thousand rows and when you look at the all all possible combinations of two tables

50
00:04:10,370 --> 00:04:12,970
were one to at least one of them is big or large.

51
00:04:13,190 --> 00:04:19,000
You will you'll get a huge resulting table and we don't want that we're not going to break out computers.

52
00:04:19,010 --> 00:04:28,040
So we're going to we're going to just cross join pets and owners so we're going to say select select

53
00:04:29,150 --> 00:04:31,490
start from pets.

54
00:04:31,730 --> 00:04:40,430
And here is sort of inner left outer or right or full outer join we can to say cross joy to owners call

55
00:04:40,490 --> 00:04:44,930
the colon so you can see there's no on statement that comes afterwards.

56
00:04:44,990 --> 00:04:50,480
So when you run this remember we have a hundred pets and about eighty nine owners.

57
00:04:50,480 --> 00:04:54,600
So if you run this is going to take a while to run.

58
00:04:54,670 --> 00:04:58,260
So here we have eight thousand nine hundred so a hundred times.

59
00:04:58,280 --> 00:04:59,270
Eighty nine right.

60
00:04:59,300 --> 00:05:02,940
Eight thousand nine hundred different combinations.

61
00:05:02,940 --> 00:05:05,180
And what does this results show us.

62
00:05:07,570 --> 00:05:15,160
So what we have here is for instance at the start of Ricardo Peterson who got matched to every single

63
00:05:15,160 --> 00:05:18,850
pet so we got Ricardo or starting from here.

64
00:05:18,890 --> 00:05:28,630
Honer ID So Ricardo got matched to every single pet in our database so we scroll down see that he got

65
00:05:28,630 --> 00:05:30,030
matched to 100 different pets.

66
00:05:30,040 --> 00:05:34,030
Then Arthur read he got mice too.

67
00:05:34,030 --> 00:05:35,700
Again all those same pets.

68
00:05:35,750 --> 00:05:38,000
But once again they got mice.

69
00:05:38,020 --> 00:05:43,360
Each one of them so he called Mr. Black rhumba Simba Keller and so on and so on.

70
00:05:43,360 --> 00:05:43,830
Hundred.

71
00:05:43,870 --> 00:05:50,680
And then we got George Donald who are much to again all of our pets all hundred of our pets black dog

72
00:05:50,680 --> 00:05:53,070
rhumba Simba Keller and so on.

73
00:05:53,260 --> 00:05:56,860
And so you can see that that happened for each one of our 18:9 owners.

74
00:05:56,860 --> 00:06:02,430
Each one of them got matched to each of the 100 pets that we have in our dataset.

75
00:06:02,450 --> 00:06:05,770
Now what is the purpose of a cross-train like this makes no sense right.

76
00:06:05,770 --> 00:06:11,890
Why would you match a black to the dog to all these owners when a black dog actually has just one owner.

77
00:06:11,890 --> 00:06:15,100
What's the point of matching a black.

78
00:06:15,100 --> 00:06:16,980
You have all these other owners.

79
00:06:17,290 --> 00:06:28,000
Well the reason for a cross join is there are actually situations sometimes when you might need to see

80
00:06:28,180 --> 00:06:32,920
see all of the possible combinations of two of the rows of two tables.

81
00:06:32,920 --> 00:06:45,670
Right so like for example you have a set of colors like seven colors and you have a set of let's say

82
00:06:45,670 --> 00:06:53,670
a set of tiles that are used in Buffle bathroom floor and you need a resulting table right.

83
00:06:53,710 --> 00:06:58,840
And for example all those columns have certain attributes and all those tiles have certain attributes

84
00:06:58,840 --> 00:07:00,190
or prices attached to them.

85
00:07:00,370 --> 00:07:07,120
So you have seven different types of tiles like made out of different materials and you want to get

86
00:07:07,120 --> 00:07:12,490
a resulting table which will combine which will have a combination of all of those colors and tiles

87
00:07:12,490 --> 00:07:12,710
right.

88
00:07:12,730 --> 00:07:14,620
So then you would do a cross join.

89
00:07:14,650 --> 00:07:15,830
Right.

90
00:07:15,900 --> 00:07:26,940
And another example would be when you have for example a you know five people and or a certain number

91
00:07:26,940 --> 00:07:32,140
of people and they have each one of them has three choices right.

92
00:07:32,140 --> 00:07:32,450
Yeah.

93
00:07:32,460 --> 00:07:36,720
Each one of them has three choices that they can well like three doors that they can go through and

94
00:07:36,720 --> 00:07:44,610
you want to see the results of all possible combinations of like for each person what's if they go through

95
00:07:44,610 --> 00:07:47,800
which door how those parameters will add up.

96
00:07:47,820 --> 00:07:52,350
So you want a table with all of those and then you'll make some analysis based on that.

97
00:07:52,370 --> 00:07:58,170
The example when I need the crows during my career was when I was analyzing some socioeconomic patterns

98
00:07:58,170 --> 00:08:01,020
in Queensland in Australia.

99
00:08:01,020 --> 00:08:07,140
So that's the north eastern part of Australia and there the whole of this region in my database was

100
00:08:07,200 --> 00:08:17,460
broken down into these little Parus which are called S-A ones and they basically each of those statistical

101
00:08:17,460 --> 00:08:26,460
authorities contains about 200 peoples 200 people and in each one of them and then in each other in

102
00:08:26,520 --> 00:08:35,610
each of those statistical regions I knew that there were several levels or civil economic social economic

103
00:08:36,540 --> 00:08:44,100
levels and with different incomes basically several social classes of different incomes and so forth

104
00:08:44,400 --> 00:08:51,540
I knew that I have like for example like five different social economic classes and I have 20000 or

105
00:08:51,660 --> 00:08:58,430
less let's say for argument's sake 10 different social economic classes and I have 20 and like 200000

106
00:08:58,500 --> 00:09:01,500
of these little blocks of

107
00:09:05,130 --> 00:09:11,430
geographical blocks and that means that I need a cross join in my resulting table I need all possible

108
00:09:11,430 --> 00:09:18,390
combinations for each of those geographical little segments I need a socioeconomic one in each of those

109
00:09:18,390 --> 00:09:20,730
sectors socioeconomic classes are assigned to it.

110
00:09:20,760 --> 00:09:22,530
That means I need 10 times.

111
00:09:22,590 --> 00:09:25,680
I mean I need two million rows in my resulting database.

112
00:09:25,680 --> 00:09:31,830
In fact it was much more so than just some numbers of overhead was a long time ago but I remember that

113
00:09:31,830 --> 00:09:37,800
the resulting table had close to 900 million roles.

114
00:09:37,800 --> 00:09:42,510
So as you can imagine like when because it had I think maybe even a couple of Crossroads or something

115
00:09:42,650 --> 00:09:48,720
different it was multiple joins I don't remember how many Cross joins it had but the size of that table

116
00:09:48,720 --> 00:09:53,660
was immense and that was you know a legitimate analysis that I had to do.

117
00:09:53,940 --> 00:10:01,800
And that's my other warning or caution recommendation to you here is that cross-bones are also complex

118
00:10:01,800 --> 00:10:07,650
or advanced not just because the way they're structured and the way they're used but also because of

119
00:10:08,130 --> 00:10:13,770
the amount of resources that they take up so if you were to run a cross join for example with the procedure

120
00:10:13,770 --> 00:10:20,640
history table of itself that's 2000 times 2000 all of a sudden you have a four million road table right

121
00:10:20,640 --> 00:10:24,420
from a not such a big table of 2000 rows.

122
00:10:24,430 --> 00:10:29,190
You're jumping into a four million row table and you caused join that one more time of the procedure

123
00:10:29,190 --> 00:10:36,420
history table and all of a sudden you have a billion rules and if used incorrectly your joint can really

124
00:10:36,420 --> 00:10:42,570
hang your computer not on your computer probably your whole organization's database and hopefully you

125
00:10:42,570 --> 00:10:48,720
know your organization has protection mechanisms against it so they'll they'll just cut your session

126
00:10:48,720 --> 00:10:54,930
and then you'll get a call from the database administrator saying hey you shouldn't do that but just

127
00:10:54,930 --> 00:10:56,060
be careful of it.

128
00:10:56,640 --> 00:11:05,480
And be warned that a cross join does grow very very quickly once you start working with larger tables.

129
00:11:05,700 --> 00:11:07,770
So we go that's what a cross join is.

130
00:11:07,800 --> 00:11:15,780
And hopefully now even if you don't go running into your work and using it right away maybe one day

131
00:11:15,780 --> 00:11:21,480
when you do come across this situation when you need it you'll remember this tutorial and you will know

132
00:11:21,550 --> 00:11:24,210
that what you need might be a crossroad.

133
00:11:24,570 --> 00:11:26,030
And I hope you enjoy this Tauriel.

134
00:11:26,070 --> 00:11:27,300
I'll look for you next time.

135
00:11:27,390 --> 00:11:29,070
Until then happy analyzing.
