1
00:00:00,300 --> 00:00:01,510
Hello and welcome back.

2
00:00:01,530 --> 00:00:07,920
Today we have a very important topic to cover and I'm very excited about it and it's important we do

3
00:00:07,920 --> 00:00:13,390
a bit of practice and skill to learn and understand if you still haven't.

4
00:00:13,390 --> 00:00:19,200
Today's topic Well it's the end clause and or cloth as well.

5
00:00:19,200 --> 00:00:24,060
The next logical step to improve your search results after specifying which data are you looking at

6
00:00:24,420 --> 00:00:30,090
and where it's located and what specific condition it has to satisfy you need to put more and more specific

7
00:00:30,090 --> 00:00:30,790
conditions.

8
00:00:30,840 --> 00:00:34,740
Narrowing your results to only the most relevant.

9
00:00:34,770 --> 00:00:38,220
This is where OR and AND clauses come to play.

10
00:00:38,490 --> 00:00:44,130
Let's return to our example from previous lecture where we have to find a product from New York and

11
00:00:44,130 --> 00:00:50,330
they issued has now let's say you want to also find older products from California and there are issues

12
00:00:50,700 --> 00:00:56,950
now instead of running two separate similar inquiries you can run one query using simple or clause.

13
00:00:57,050 --> 00:00:58,240
So to begin with.

14
00:00:58,240 --> 00:01:03,480
Again let's open up the database make sure we have the table up and running it has 18 columns.

15
00:01:03,480 --> 00:01:08,000
Now let's select to create the query to open a new window.

16
00:01:08,040 --> 00:01:17,660
First we'll select the company name and the product name and the issues having inside that company name

17
00:01:17,660 --> 00:01:20,200
just to get a bit of the Versteeg results.

18
00:01:20,220 --> 00:01:32,000
Then we specify that we selected from consumer complaints and finally we say where state name equals

19
00:01:33,270 --> 00:01:34,170
New York.

20
00:01:34,200 --> 00:01:41,430
So as you remember this is the clause we had previously and as you can see I've made a bit of mistake

21
00:01:41,430 --> 00:01:49,920
here because the company just goes like that and as you can see it returns Soss all the data we expect

22
00:01:50,130 --> 00:01:51,420
to return to us.

23
00:01:51,510 --> 00:01:58,600
So now as already mentioned if we want to display all the company's products and the issue does Farthing's

24
00:01:58,620 --> 00:02:06,090
have from say New York and state of California we can run two similar rockeries and here we'll just

25
00:02:06,090 --> 00:02:14,490
have to replace this with CA for California and that will return TAWS all of the company's products

26
00:02:14,580 --> 00:02:16,770
and issues from state California.

27
00:02:17,100 --> 00:02:23,780
Now instead of doing that what we can do is we can live this as it is and then just at the end of it.

28
00:02:23,970 --> 00:02:30,290
Or and just copy the state name equals and then just put it in any state want.

29
00:02:30,300 --> 00:02:32,020
In our case it's New York.

30
00:02:32,040 --> 00:02:38,790
Now if you run it we should see that we have more results because now is displaying pretty much twice

31
00:02:38,880 --> 00:02:41,880
as many results just to prove that it works.

32
00:02:41,880 --> 00:02:46,570
Let's make sure that we display the state names as well.

33
00:02:46,570 --> 00:02:51,840
And now when we run it we will see that all the state names will be either New York or California.

34
00:02:51,870 --> 00:02:54,230
We should not get any other states here.

35
00:02:54,570 --> 00:02:56,450
And as you can see there we go.

36
00:02:56,460 --> 00:02:58,900
It all works right and correct.

37
00:02:59,190 --> 00:02:59,660
OK.

38
00:02:59,730 --> 00:03:00,270
Awesome.

39
00:03:00,270 --> 00:03:07,080
Now let's take a look at the example of using and statement before we do toddlers quickly go and create

40
00:03:07,170 --> 00:03:14,100
new query and so for example we need to display all the product and the companies that produce these

41
00:03:14,100 --> 00:03:19,980
products were consumers who submitted the complaint were service members and they received the timely

42
00:03:19,980 --> 00:03:21,120
response.

43
00:03:21,120 --> 00:03:27,030
So at the first look this looks a bit tricky because we don't exactly understand where the service member

44
00:03:27,300 --> 00:03:33,600
value come from and if we dig around in the table we will find out that the tags column consists of

45
00:03:33,600 --> 00:03:37,880
such values as older Americans or service number.

46
00:03:38,040 --> 00:03:39,640
So that's exactly what we need.

47
00:03:39,780 --> 00:03:46,680
So now if we go ahead and think of all the key elements we need in order to complete this Querrey is

48
00:03:46,710 --> 00:03:52,410
obviously tags to identify where they are the consumer who submitted the complaint to a service member

49
00:03:52,410 --> 00:03:53,430
or not.

50
00:03:53,430 --> 00:03:58,470
That is the timely response to identify whether it was a time to respond or not.

51
00:03:58,500 --> 00:04:00,500
And of course product name and company.

52
00:04:00,540 --> 00:04:05,610
So let's begin to write the query by putting and select statement.

53
00:04:05,970 --> 00:04:15,600
Then we put in product name company that was specified that we take it from consumer complaints and

54
00:04:15,600 --> 00:04:16,880
then we go to where.

55
00:04:16,980 --> 00:04:25,540
And here we put in tags and you already know we just put in service member right here and then we just

56
00:04:25,540 --> 00:04:30,120
specify that it has to be a time to respond.

57
00:04:32,360 --> 00:04:36,170
And then we just put it like this.

58
00:04:36,170 --> 00:04:38,930
So now let's run it and see what we get.

59
00:04:39,260 --> 00:04:44,000
As you can see we've got three thousand two hundred seventy rows worth of data.

60
00:04:44,270 --> 00:04:51,950
So that is why a lot not going to show you how the square works let's go here and put tags and time

61
00:04:52,000 --> 00:04:54,580
response into the select statement.

62
00:04:54,590 --> 00:05:00,530
So it displays everything for us and we can take a better look at it.

63
00:05:00,680 --> 00:05:08,720
So you can see the time loose Boylan's has to be yes and it will be on all of these rows that tags has

64
00:05:08,720 --> 00:05:14,810
to say service member and all of them well and then company and product name will be different depending

65
00:05:14,870 --> 00:05:15,670
on the company.

66
00:05:15,680 --> 00:05:18,550
And product name of course.

67
00:05:18,550 --> 00:05:24,940
So the difference between and and or is that and it has to be.

68
00:05:24,970 --> 00:05:30,970
So tags have to be service member time response also has to be yes.

69
00:05:31,090 --> 00:05:38,670
Whereas if we vote or in the same statement and run it now we will get way more results because now

70
00:05:38,670 --> 00:05:45,990
is basically two queries running at the same time and there is less exclusion of data happening.

71
00:05:45,990 --> 00:05:51,550
We're including more data so including all the service member has admitted complaints even the ones

72
00:05:51,550 --> 00:05:54,100
that did not receive a timely response.

73
00:05:54,950 --> 00:06:04,010
And we also include all the complaints submitted by anyone where the time the response was yes.

74
00:06:04,010 --> 00:06:14,250
So as you can see we get back and rose which is quite a lot because it's only about a thousand of the

75
00:06:14,250 --> 00:06:16,320
complete set of rows here.

76
00:06:16,340 --> 00:06:23,630
So as you can see in this case the tags can say even older American or nothing and the time response

77
00:06:24,540 --> 00:06:32,380
can say no as well as long as there is a service member in the tag's condition.

78
00:06:32,390 --> 00:06:38,440
So I hope you understand and and or sent this a bit better.

79
00:06:38,480 --> 00:06:44,810
I mean it's nothing hard to get around but it is very useful because it's very simple conditions that

80
00:06:44,810 --> 00:06:49,540
are used on many levels and you will encounter a lot for all the scores.

81
00:06:49,550 --> 00:06:52,480
And actually when are you going to be programming in real life.

82
00:06:52,520 --> 00:06:59,720
But before we're going up just a quick reminder that it does not matter which order you put these tags

83
00:06:59,720 --> 00:07:00,250
in.

84
00:07:00,350 --> 00:07:02,690
The only thing is it's personal preference.

85
00:07:02,720 --> 00:07:11,570
Or maybe if you have a very big database to work with it's better to put in the smaller value first

86
00:07:11,600 --> 00:07:17,570
so the programme runs quicker and then the bigger values are less number of them.

87
00:07:17,570 --> 00:07:22,510
So the computer can analyze them in less amount of time.

88
00:07:22,660 --> 00:07:25,430
Other than that it really has nothing to do.

89
00:07:25,550 --> 00:07:32,510
Also I again like to put tags and time your response into this select condition all the time just because

90
00:07:32,600 --> 00:07:39,950
it makes a bit more sense to show that and data form to the customers or clients or the people you're

91
00:07:39,950 --> 00:07:46,750
working with because otherwise you just get these two columns and you have to write down to conditions

92
00:07:46,790 --> 00:07:54,680
and a bit of background on what of what information this table provides you with which can be messy

93
00:07:54,680 --> 00:07:55,730
at times.

94
00:07:55,770 --> 00:08:00,840
But yeah I feel like of card and and or statements quite well.

95
00:08:00,890 --> 00:08:06,490
They're very simple to understand but are very powerful tools if used correctly.

96
00:08:06,740 --> 00:08:10,340
I hope you enjoyed today's lecture and I'll see you in the next one.
