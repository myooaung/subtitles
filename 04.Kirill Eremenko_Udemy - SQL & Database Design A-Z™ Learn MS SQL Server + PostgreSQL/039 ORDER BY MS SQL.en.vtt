WEBVTT
1
00:00:00.390 --> 00:00:02.620
Hello and welcome back.

2
00:00:02.660 --> 00:00:06.450
Today we'll be working we're order by function in Microsoft.

3
00:00:06.460 --> 00:00:08.370
SAGAL Server Management Studio.

4
00:00:08.640 --> 00:00:16.020
It's a very interesting function and it's certainly very needed when working with large tables of big

5
00:00:16.020 --> 00:00:22.110
amounts of data and just wanting to make it all look a bit better be a bit easier to read and they just

6
00:00:22.590 --> 00:00:30.980
so let's go ahead run an inquiry in which we will say that we want to select all from console games.

7
00:00:31.020 --> 00:00:38.820
As you can see I'm working of console games database and inside of it I'm working with console games

8
00:00:38.820 --> 00:00:39.710
table.

9
00:00:39.750 --> 00:00:49.830
So if we go ahead just this a bit to see a bit better maybe just closer to here so that we can see our

10
00:00:49.830 --> 00:00:58.430
table we can scroll around and the first thing that stands out is that game rank starts with 630.

11
00:00:58.650 --> 00:01:07.560
And this is a very important fact that as you already know as we already told you databases are not

12
00:01:07.590 --> 00:01:18.910
about organizing data nicely for you like Excel might do or any other explore or table organizing software.

13
00:01:19.290 --> 00:01:29.100
Databases are about keeping data about storing data for you and about allowing you insane possibilities

14
00:01:29.100 --> 00:01:35.640
to do with an insane amount of different functions you can use on this data in order to extract useful

15
00:01:35.640 --> 00:01:39.420
information from it and analyze it any way you want.

16
00:01:39.420 --> 00:01:45.890
This is why Microsoft server doesn't care two straws game rank in not a pretty way.

17
00:01:45.960 --> 00:01:51.930
Also if you can go ahead you can see a lot of different columns that you might want to organize the

18
00:01:51.960 --> 00:01:53.310
database by.

19
00:01:53.310 --> 00:01:57.250
For example I want to see game names in alphabetical order.

20
00:01:57.280 --> 00:02:02.850
I want to see Game years the oldest game that was released first or the newest game but it was released

21
00:02:02.850 --> 00:02:05.580
first and also organized by global sales.

22
00:02:05.580 --> 00:02:10.180
I want to see what games were most successful and what games were the least successful.

23
00:02:10.200 --> 00:02:13.360
This is why Microsoft ask you all.

24
00:02:13.380 --> 00:02:20.940
Justin Asgill in general we have the order by function so ordered by basically the cynics behind us

25
00:02:21.030 --> 00:02:24.570
is you put order by then you say call them name that you want.

26
00:02:24.570 --> 00:02:25.960
Let's begin with game rank.

27
00:02:26.010 --> 00:02:27.060
The highest one.

28
00:02:27.330 --> 00:02:29.020
And then you can run it straightaway.

29
00:02:29.130 --> 00:02:34.890
So if you execute right now you can see that the game rank this first column is organized nice and neatly.

30
00:02:34.890 --> 00:02:37.350
And if you scroll down you will never find a mistake.

31
00:02:37.590 --> 00:02:42.200
It will be constantly going in the right order.

32
00:02:42.220 --> 00:02:48.900
Now the thing with game rank is that it represents to us the global sales.

33
00:02:48.930 --> 00:02:55.980
So global sales game rank are corresponding to each other which is very good and very interesting but

34
00:02:56.070 --> 00:03:03.060
it's not that useful for us because now we can run one less order by function in this area.

35
00:03:03.300 --> 00:03:08.790
On the other hand let's say I want to see what game came in last what game sold the least amount of

36
00:03:08.790 --> 00:03:15.530
copies so I can order my game rank or in this case less order by global sales just to see what happens.

37
00:03:15.540 --> 00:03:23.130
So order by global sales and then just run by this is already swopped because as you can see global

38
00:03:23.130 --> 00:03:26.530
sales have zero in them.

39
00:03:26.580 --> 00:03:34.880
And because when you try to send it meaning the lesser value goes first and the bigger value goes lost.

40
00:03:34.890 --> 00:03:40.140
Global sales automatically put 0 number 1 0 1 0 1 number 2 and so on.

41
00:03:40.150 --> 00:03:49.220
And our game rank 1 the Wii Sports will be at the very very end of this new table or of this table.

42
00:03:49.530 --> 00:03:54.990
So now if we go ahead and this is by the way from the last tutorial if you remember why we had to specify

43
00:03:55.010 --> 00:03:59.120
the global sales has to be non-zero has to be bigger than zero.

44
00:03:59.130 --> 00:04:01.160
This is why because for this game it's old.

45
00:04:01.170 --> 00:04:05.560
So little amount of copies that we just can't divide by zero.

46
00:04:05.700 --> 00:04:07.890
And this Waianae sales percentage is still zero.

47
00:04:07.890 --> 00:04:09.170
Here is now.

48
00:04:09.450 --> 00:04:16.710
So now if we go ahead and write this in descending what will happen because we're organizing a global

49
00:04:16.710 --> 00:04:17.420
sales.

50
00:04:17.470 --> 00:04:21.010
It will basically flip the table back again.

51
00:04:21.090 --> 00:04:21.870
Sorry about that.

52
00:04:21.870 --> 00:04:23.150
Just executed.

53
00:04:23.190 --> 00:04:24.680
I selected some part of it.

54
00:04:24.690 --> 00:04:30.780
So if we exec you that you can see that flipped back and because eighty two point seventy four is bigger

55
00:04:30.780 --> 00:04:32.040
than zero.

56
00:04:32.100 --> 00:04:34.670
It now goes first and this is again.

57
00:04:34.680 --> 00:04:39.910
So again rank and global sales again say mirror each other in the order by function.

58
00:04:40.080 --> 00:04:44.820
So that's fun but let's go ahead and order it my platform name and see what happens.

59
00:04:44.820 --> 00:04:55.830
So when you do platform name is going to have exited and now we can see that this was also a type in

60
00:04:55.890 --> 00:04:58.030
ascending by default and sending.

61
00:04:58.050 --> 00:04:59.430
So nothing will change.

62
00:04:59.860 --> 00:05:08.340
But now we can see that the first value that gives us is nothing is no input.

63
00:05:08.560 --> 00:05:14.530
Then it goes to numbers and after numbers it goes to letters in alphabetical order.

64
00:05:14.740 --> 00:05:21.430
So as you can see here for example different platform and they have two or three letters in them and

65
00:05:21.430 --> 00:05:22.780
have the first letter the same.

66
00:05:22.780 --> 00:05:27.510
It will go first later on for medical ordered and second letter and for medical ordered and ferde want.

67
00:05:27.520 --> 00:05:28.580
And so on.

68
00:05:28.630 --> 00:05:36.100
Now if we run it by game name we will see another interesting part of what do we get when we have different

69
00:05:36.100 --> 00:05:37.930
symbolist in the mix.

70
00:05:37.930 --> 00:05:41.990
First of all give us nothing again not novels but nothing.

71
00:05:42.130 --> 00:05:46.490
Then it will give us different symbols then that will give us numbers in ascending order.

72
00:05:46.510 --> 00:05:53.530
So the lesser numbers go through a larger number of school last and then it starts giving us the letters.

73
00:05:53.560 --> 00:05:55.960
This is already way better looking.

74
00:05:55.960 --> 00:05:58.590
Table that you might see organized by game name.

75
00:05:58.600 --> 00:06:03.200
This is the most common way of sorting different tables.

76
00:06:03.610 --> 00:06:07.480
In most workplaces sorting them by game names or by game rings.

77
00:06:07.480 --> 00:06:09.800
Also we can just go and practice.

78
00:06:09.820 --> 00:06:12.140
So let's say I want you to do gaming.

79
00:06:12.160 --> 00:06:15.880
I want you to organize this table by game you're in the standing order.

80
00:06:16.330 --> 00:06:17.650
So go ahead do that.

81
00:06:17.650 --> 00:06:21.250
It should take you no longer than one minute.

82
00:06:21.470 --> 00:06:23.880
And here we go.

83
00:06:23.900 --> 00:06:29.350
So all I need to do is change this to year change ascending descending execute it.

84
00:06:29.480 --> 00:06:34.920
And so the games that were released latest will be displayed first and the games that were the oldest

85
00:06:34.940 --> 00:06:38.070
will be displayed in the last sections.

86
00:06:38.120 --> 00:06:43.970
So I think we took a look at different ways you can understand the stable work of this table by ordering

87
00:06:43.970 --> 00:06:46.890
it by different columns.

88
00:06:47.120 --> 00:06:53.720
I think the most useful one is game rank because it just gives you the lumber sales in a very interesting

89
00:06:53.720 --> 00:06:57.980
way and just it looks nice and gives you a lot of information.

90
00:06:57.980 --> 00:07:01.380
So again order by is not a difficult function.

91
00:07:01.400 --> 00:07:07.070
It's a very simple one but it's a very powerful one because it can immediately show you any mistakes

92
00:07:07.070 --> 00:07:14.090
you've made of data input any mistakes that data has any of the maladies anything that might concern

93
00:07:14.090 --> 00:07:20.560
you later on you can already see it at the very early stages of working with different databases.

94
00:07:20.600 --> 00:07:23.670
I hope you enjoy this lecture and I'll see you in the next one.
