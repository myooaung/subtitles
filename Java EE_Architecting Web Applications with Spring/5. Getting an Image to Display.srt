1
00:00:02,340 --> 00:00:05,080
[Autogenerated] So what about displaying the image is,

2
00:00:05,080 --> 00:00:07,810
at the moment we can see the titles in the browser,

3
00:00:07,810 --> 00:00:11,210
but we can't see the images that we've saved into the database.

4
00:00:11,210 --> 00:00:14,010
So every time somebody adds a link to Jacket,

5
00:00:14,010 --> 00:00:15,850
we capture a screenshot of the page.

6
00:00:15,850 --> 00:00:18,430
They added the link from when they display the list

7
00:00:18,430 --> 00:00:19,690
of links that they've captured.

8
00:00:19,690 --> 00:00:24,390
We want to display that screenshot on the page, and so is part of our database.

9
00:00:24,390 --> 00:00:26,740
We've got an image column that's a blob.

10
00:00:26,740 --> 00:00:29,510
So we say the data in there we can then write a

11
00:00:29,510 --> 00:00:32,060
method on the service to retrieve that data.

12
00:00:32,060 --> 00:00:34,970
But we haven't implemented that yet, so it's just returns null.

13
00:00:34,970 --> 00:00:38,340
Currently, this is what you want to implement now.

14
00:00:38,340 --> 00:00:39,290
So to do this,

15
00:00:39,290 --> 00:00:44,260
I've IDE to help a project here called Jacket Image and Jacket Image just as,

16
00:00:44,260 --> 00:00:44,350
um,

17
00:00:44,350 --> 00:00:47,080
methods on here to basically taken image or a bite

18
00:00:47,080 --> 00:00:49,840
array on convert one to the other.

19
00:00:49,840 --> 00:00:51,860
So if I get a set of base from the database,

20
00:00:51,860 --> 00:00:54,640
I can convert those base into a Java image.

21
00:00:54,640 --> 00:00:56,920
If I get a stream of the database I can convert that

22
00:00:56,920 --> 00:01:03,070
stream into a job or image I can, use that in my service before I do that,

23
00:01:03,070 --> 00:01:06,740
I need to update my entity so that the entity is able

24
00:01:06,740 --> 00:01:09,140
to read the image from the database.

25
00:01:09,140 --> 00:01:12,240
So I'm going to have a bite every object here with an annotation off

26
00:01:12,240 --> 00:01:15,970
large object and then some getters and setters on this to allow me to

27
00:01:15,970 --> 00:01:19,340
retrieve the image data from this article object.

28
00:01:19,340 --> 00:01:23,740
So the gett article image method in the service looks like this.

29
00:01:23,740 --> 00:01:27,300
We call fine by IDE on the repository to get back to the article.

30
00:01:27,300 --> 00:01:28,730
This is an optional article.

31
00:01:28,730 --> 00:01:29,470
So it's empty.

32
00:01:29,470 --> 00:01:30,840
We throw an exception.

33
00:01:30,840 --> 00:01:31,610
It's not empty.

34
00:01:31,610 --> 00:01:33,690
We get the article from the option.

35
00:01:33,690 --> 00:01:37,920
We then called get image on that article and then call get image

36
00:01:37,920 --> 00:01:41,560
from Beit Array to return that bite right back to the caller on

37
00:01:41,560 --> 00:01:43,740
that caller will be the controller.

38
00:01:43,740 --> 00:01:44,810
So in the controller,

39
00:01:44,810 --> 00:01:50,140
we can had a method that will be called from the browser to retrieve this image.

40
00:01:50,140 --> 00:01:50,730
We are another.

41
00:01:50,730 --> 00:01:56,060
You are all mapping for image slash image IDE which will be 123 or four.

42
00:01:56,060 --> 00:01:59,590
This will be the IDE of the entity in the database we call

43
00:01:59,590 --> 00:02:01,560
get article image on a service True.

44
00:02:01,560 --> 00:02:03,340
Turn the image.

45
00:02:03,340 --> 00:02:04,820
We know it's a buffet image.

46
00:02:04,820 --> 00:02:06,420
Get the bite rate from that.

47
00:02:06,420 --> 00:02:08,600
Turned this into a buttery resource on.

48
00:02:08,600 --> 00:02:12,120
Then we returning the response bodies we return.

49
00:02:12,120 --> 00:02:12,700
Okay.

50
00:02:12,700 --> 00:02:13,410
HTTP.

51
00:02:13,410 --> 00:02:17,190
Status see the content length to be the length of the bite.

52
00:02:17,190 --> 00:02:21,990
Ray, we've retrieved see the content type to be image slash PNG.

53
00:02:21,990 --> 00:02:24,440
That's the type of saved in the database.

54
00:02:24,440 --> 00:02:28,440
I just populate the body with the base that we get back.

55
00:02:28,440 --> 00:02:33,670
If I look in in next or HTML then the HTML AD DS an image tag on the source.

56
00:02:33,670 --> 00:02:39,090
Attribute of that tag is slash article slash image on, then an IDE vary.

57
00:02:39,090 --> 00:02:42,590
That's enough to send that request into the controller and the controller.

58
00:02:42,590 --> 00:02:44,140
It'll hit this method.

59
00:02:44,140 --> 00:02:46,390
The method will then reach up into the database,

60
00:02:46,390 --> 00:02:51,040
pull out the data and return that data back to the page.

61
00:02:51,040 --> 00:02:55,310
So if I say for that and we start the app if I go back to the browser,

62
00:02:55,310 --> 00:02:56,740
just refresh.

63
00:02:56,740 --> 00:02:58,470
We now see the snapshots.

64
00:02:58,470 --> 00:02:59,980
So for each of these pages,

65
00:02:59,980 --> 00:03:05,240
you get a snapshot of the page at the time the page was captured so

66
00:03:05,240 --> 00:03:12,000
we cannot retrieve these images from the database. And it's all part of the articles component

