WEBVTT
1
00:00:10.240 --> 00:00:12.800
[Autogenerated] So the first thing I'd like to do is to show you

2
00:00:12.800 --> 00:00:15.620
what this application will end up looking like just to give you an

3
00:00:15.620 --> 00:00:18.040
idea of where we're going with us.

4
00:00:18.040 --> 00:00:21.020
What we're building is not location that will allow us to stall

5
00:00:21.020 --> 00:00:24.640
links on the Web on display those links within a UI.

6
00:00:24.640 --> 00:00:27.190
There are many applications out there to do this.

7
00:00:27.190 --> 00:00:31.930
I'm shamelessly ripping off some UI from a well known one called Pocket No code.

8
00:00:31.930 --> 00:00:33.560
Obviously from the application,

9
00:00:33.560 --> 00:00:36.340
the code is written purely with Java using spring.

10
00:00:36.340 --> 00:00:40.940
I've just stolen the way the user interface looks.

11
00:00:40.940 --> 00:00:45.090
I'm inside IntelliJ IDEA here, so I can run the application.

12
00:00:45.090 --> 00:00:47.740
This is a spring boot web application.

13
00:00:47.740 --> 00:00:50.840
We'll talk a little about spring boot as we go along.

14
00:00:50.840 --> 00:00:52.730
This is going to run a web process.

15
00:00:52.730 --> 00:00:56.030
There's an embedded version of Tomcat on When this runs up,

16
00:00:56.030 --> 00:01:00.060
is going to use things like hibernate to connect to a database we can't use.

17
00:01:00.060 --> 00:01:02.140
My SQL is the data store.

18
00:01:02.140 --> 00:01:06.640
This is now running as we can see in the console at the bottom here.

19
00:01:06.640 --> 00:01:09.660
So if they're on a Web browser and go to local host 80

20
00:01:09.660 --> 00:01:12.250
81 this is gonna ask me to log in.

21
00:01:12.250 --> 00:01:18.140
And once I've done that, click on log in and a shows me a list of images.

22
00:01:18.140 --> 00:01:21.840
These are the snapshots of website pages.

23
00:01:21.840 --> 00:01:25.410
These are pages that I would have favorited, for example, their pages.

24
00:01:25.410 --> 00:01:28.340
I want to go back to and visit again later.

25
00:01:28.340 --> 00:01:29.760
I have built a UI for this.

26
00:01:29.760 --> 00:01:31.990
Although the UI at the moment has no functionality behind,

27
00:01:31.990 --> 00:01:35.030
it just allows me to show the set of web page is

28
00:01:35.030 --> 00:01:37.440
that I've saved for later viewing.

29
00:01:37.440 --> 00:01:42.740
So this is what we're going to build as we go through the course.

30
00:01:42.740 --> 00:01:45.540
So we're going to start with a fairly simple structure.

31
00:01:45.540 --> 00:01:47.350
I'm also gonna walk through some of the thought

32
00:01:47.350 --> 00:01:50.840
processes as I build out the project.

33
00:01:50.840 --> 00:01:53.730
So you might have noticed when I showed you the finished project.

34
00:01:53.730 --> 00:01:56.600
We have a project in there called jacket Entities.

35
00:01:56.600 --> 00:02:00.040
And here we have a project called Jacket Repository.

36
00:02:00.040 --> 00:02:03.390
My initial thought when I was building this project was that I

37
00:02:03.390 --> 00:02:06.580
needed a repository along with a web project.

38
00:02:06.580 --> 00:02:10.740
So I created a repository project is part of my starter ID

39
00:02:10.740 --> 00:02:13.350
got to web project that I know I'm going to need.

40
00:02:13.350 --> 00:02:18.040
I will see as we go through this with this project structure will change.

41
00:02:18.040 --> 00:02:20.860
So we know we're building a web project we know we're using

42
00:02:20.860 --> 00:02:24.040
Spring and I wanted to use spring boot.

43
00:02:24.040 --> 00:02:26.490
I'm also using grade URL is part of the project.

44
00:02:26.490 --> 00:02:32.940
So all of my dependencies, even inside idea are based on grade or build files.

45
00:02:32.940 --> 00:02:35.270
These far as are called grade URL build.

46
00:02:35.270 --> 00:02:36.890
If you've not used greater before,

47
00:02:36.890 --> 00:02:41.340
I have a class on Pluralsight the covers creating and managing grader bills.

48
00:02:41.340 --> 00:02:42.090
You can look at that.

49
00:02:42.090 --> 00:02:43.940
If you want more details on grade URL,

50
00:02:43.940 --> 00:02:45.820
we won't be using greater extensively here.

51
00:02:45.820 --> 00:02:48.030
But you need to be aware that this is the bill tool

52
00:02:48.030 --> 00:02:49.740
we're using for this project.

53
00:02:49.740 --> 00:02:51.610
Now, in my greater bill file,

54
00:02:51.610 --> 00:02:54.840
we have what is known to start a project from spring boot.

55
00:02:54.840 --> 00:02:59.080
So we have this spring boots start a web spring Bootstrap are two time leaf,

56
00:02:59.080 --> 00:03:01.840
timely S3 UI IT who were using.

57
00:03:01.840 --> 00:03:04.360
I'm gonna see more on this as you go further into this

58
00:03:04.360 --> 00:03:07.190
course without more started projects, we need them.

59
00:03:07.190 --> 00:03:07.950
We have, for example,

60
00:03:07.950 --> 00:03:12.470
security projects on data access projects in here is well so if I open up,

61
00:03:12.470 --> 00:03:15.380
for example, the buildup cradle in the repository project.

62
00:03:15.380 --> 00:03:16.040
In here, we'll see.

63
00:03:16.040 --> 00:03:18.190
We've got a Data JPA starter on.

64
00:03:18.190 --> 00:03:20.440
We also have a test starter.

65
00:03:20.440 --> 00:03:22.750
One of the ideas behind Spring Boot is to make my

66
00:03:22.750 --> 00:03:24.990
dependency management much more simple.

67
00:03:24.990 --> 00:03:26.730
So by adding a starter project,

68
00:03:26.730 --> 00:03:29.890
this spring's in all of the other dependencies that are needed.

69
00:03:29.890 --> 00:03:33.990
So, for example, with the app Starter brings in all the dependencies for JPA.

70
00:03:33.990 --> 00:03:37.160
And a test starter brings in all the dependencies for test.

71
00:03:37.160 --> 00:03:40.140
So in grade URL, when we have a multi project built,

72
00:03:40.140 --> 00:03:42.540
we have a root build great URL file.

73
00:03:42.540 --> 00:03:45.310
And if I open up that file and that's the one that's simply

74
00:03:45.310 --> 00:03:47.640
in the root project here called Jacket.

75
00:03:47.640 --> 00:03:48.660
If I look in this buildup,

76
00:03:48.660 --> 00:03:52.830
cradle file will see that I can also specify project dependencies.

77
00:03:52.830 --> 00:03:56.540
So here I have my web project that's called Jacket web.

78
00:03:56.540 --> 00:03:59.540
That depends on my repository project,

79
00:03:59.540 --> 00:04:03.540
so we are already building this idea of dependencies within the application.

80
00:04:03.540 --> 00:04:06.110
So in the web project for look in the Main Jarvis,

81
00:04:06.110 --> 00:04:08.610
a sources on look inside the controllers,

82
00:04:08.610 --> 00:04:13.300
I have a single controller called article Controller and currently this Jest,

83
00:04:13.300 --> 00:04:16.430
maps and endpoint called article that returns a view,

84
00:04:16.430 --> 00:04:18.840
which is called Article Index.

85
00:04:18.840 --> 00:04:22.360
I have to look for that view in the next two HTML.

86
00:04:22.360 --> 00:04:24.940
This is a timely food.

87
00:04:24.940 --> 00:04:27.340
There's quite a lot of HTML in here.

88
00:04:27.340 --> 00:04:33.420
The section we care about it rates over a set of articles on displays,

89
00:04:33.420 --> 00:04:35.440
each article on the page.

90
00:04:35.440 --> 00:04:38.890
So somehow we have to get this collection of articles on pull

91
00:04:38.890 --> 00:04:42.140
that collection into my user interface.

92
00:04:42.140 --> 00:04:44.900
This field then opens our collection on display some

93
00:04:44.900 --> 00:04:48.540
information for each article in the collection.

94
00:04:48.540 --> 00:04:51.840
These articles are the links that I've saved previously.

95
00:04:51.840 --> 00:04:54.390
The links that I'm interested in at the moment the

96
00:04:54.390 --> 00:04:56.740
controller doesn't do that is just displace,

97
00:04:56.740 --> 00:04:59.240
um, empty information into the UI.

98
00:04:59.240 --> 00:05:00.590
But you'll see later how to do that.

99
00:05:00.590 --> 00:05:04.140
Obviously, as we build up the application more on more.

100
00:05:04.140 --> 00:05:09.590
So currently, if I run this on, go to a browser on go to local host 80 81.

101
00:05:09.590 --> 00:05:12.040
There's no security, just some UI on.

102
00:05:12.040 --> 00:05:14.190
There's no date run here at the moment and we'll see.

103
00:05:14.190 --> 00:05:15.320
As we go through this,

104
00:05:15.320 --> 00:05:27.000
we build out the application how to add this data on how to AD DS security, and we'll talk about how to design the application using a logical structure

