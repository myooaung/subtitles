WEBVTT
1
00:00:02.354 --> 00:00:06.945
Next let's look at Resource Monitor and Performance Monitor.

2
00:00:06.945 --> 00:00:10.273
Resource Monitor, the way I described it at the beginning of this module,

3
00:00:10.273 --> 00:00:13.032
was a hopped-up version of Task Manager.

4
00:00:13.032 --> 00:00:17.067
Resource Monitor takes a look at running system processes and allows

5
00:00:17.067 --> 00:00:21.134
you to plot them in real time against your hardware.

6
00:00:21.134 --> 00:00:24.055
Specifically, as you can see it right in this screenshot,

7
00:00:24.055 --> 00:00:26.667
you can select a process and look at what it's using

8
00:00:26.667 --> 00:00:31.074
right now in terms of CPU or processor, hard disk,

9
00:00:31.074 --> 00:00:32.658
network, and memory.

10
00:00:32.658 --> 00:00:35.078
Once again, in the name of troubleshooting,

11
00:00:35.078 --> 00:00:36.333
performance tuning, and optimization,

12
00:00:36.333 --> 00:00:40.329
if you have a clear picture of what code is running on your system

13
00:00:40.329 --> 00:00:43.107
and the impact that code has on your system,

14
00:00:43.107 --> 00:00:48.070
this can take you a long way towards making good improvements.

15
00:00:48.070 --> 00:00:51.693
Performance Monitor is used for all of the above reasons,

16
00:00:51.693 --> 00:00:53.934
troubleshooting, performance tuning, optimization,

17
00:00:53.934 --> 00:00:57.296
and it actually includes a whole lot of stuff

18
00:00:57.296 --> 00:00:58.976
besides just what you're seeing here.

19
00:00:58.976 --> 00:01:02.282
This EKG-type view is Performance Monitor itself,

20
00:01:02.282 --> 00:01:06.090
but in the left-hand part of this MMC console,

21
00:01:06.090 --> 00:01:08.776
you see Reports and Data Collector Sets.

22
00:01:08.776 --> 00:01:11.222
We'll get into specifically what that is in the demo,

23
00:01:11.222 --> 00:01:15.206
but the great beauty of Performance Monitor is that you can monitor,

24
00:01:15.206 --> 00:01:19.634
well, the performance of a system either locally or remotely.

25
00:01:19.634 --> 00:01:22.460
You'll recall a module or two ago when I showed you the

26
00:01:22.460 --> 00:01:23.622
Microsoft System Information tool?

27
00:01:23.622 --> 00:01:27.078
The fact that you can easily connect to a remote machine,

28
00:01:27.078 --> 00:01:31.541
as long as you A) can connect to that computer through the firewall

29
00:01:31.541 --> 00:01:34.510
and other network controls you have in place,

30
00:01:34.510 --> 00:01:38.420
and also you have a privileged account that works on that remote machine.

31
00:01:38.420 --> 00:01:40.181
The same idea with Performance Monitor.

32
00:01:40.181 --> 00:01:43.402
In point of fact, when you're doing real troubleshooting,

33
00:01:43.402 --> 00:01:45.039
especially on server systems,

34
00:01:45.039 --> 00:01:48.198
you never want to start Performance Monitor on that system.

35
00:01:48.198 --> 00:01:49.164
Do you know why?

36
00:01:49.164 --> 00:01:53.191
You don't want to add overhead of the monitoring process to skew your results.

37
00:01:53.191 --> 00:01:57.168
So instead, you'd run Performance Monitor and run a trace from,

38
00:01:57.168 --> 00:02:00.035
say, your desktop workstation, point to the server in question,

39
00:02:00.035 --> 00:02:03.396
and that way you're able to get a much better baseline of

40
00:02:03.396 --> 00:02:10.000
what's actually happening on the system without the overhead of the monitoring process.

