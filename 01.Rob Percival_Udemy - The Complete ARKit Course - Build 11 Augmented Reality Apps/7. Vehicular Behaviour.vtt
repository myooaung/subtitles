WEBVTT
1
00:00:00.210 --> 00:00:04.500
In the last video we looked at how the accelerometer is able to detect the Phelan's acceleration due

2
00:00:04.500 --> 00:00:05.600
to gravity.

3
00:00:05.640 --> 00:00:10.210
We were able to devise a relationship between orientation and the acceleration due to gravity.

4
00:00:10.230 --> 00:00:15.450
If the phone is oriented vertically then all of the acceleration due to gravity is being applied on

5
00:00:15.450 --> 00:00:16.860
the vertical part of the phone.

6
00:00:17.070 --> 00:00:21.690
If the phone is oriented horizontally then all of the acceleration due to gravity is being applied on

7
00:00:21.690 --> 00:00:23.900
the horizontal part of the phone.

8
00:00:23.910 --> 00:00:29.660
So based on what the acceleration due to gravity is we can determine the orientation of the phone.

9
00:00:29.850 --> 00:00:35.390
Once we know the orientation of the phone we can steer the car based on how the phone is oriented.

10
00:00:35.800 --> 00:00:41.650
Welcome back to this function for now let's take a step backwards and go to our IAB action and car.

11
00:00:41.760 --> 00:00:44.910
I've been saying that we need to control the orientation of the car.

12
00:00:44.940 --> 00:00:45.480
Sure.

13
00:00:45.480 --> 00:00:48.780
In this scene file we made something that looks like a car.

14
00:00:48.810 --> 00:00:55.320
However this car is not going to move like a vehicle unless we give it the behavior of a physics vehicle.

15
00:00:55.320 --> 00:01:01.330
So back to the controller we need to modify our physics body to behave like a vehicle.

16
00:01:01.380 --> 00:01:10.080
So on top of your Wii controller make a variable var vehicle is equal to a C in physics physical and

17
00:01:10.080 --> 00:01:13.250
inside of your Iby action.

18
00:01:13.420 --> 00:01:18.900
When we add our car right self the vehicle is equal to.

19
00:01:19.030 --> 00:01:21.400
I see and physics vehicle.

20
00:01:22.120 --> 00:01:27.040
The Cerasus body simply refers to the body of the car the base the frame.

21
00:01:27.040 --> 00:01:34.950
So right frame the physics body and asked for the wheels before proceeding with that go to your scene.

22
00:01:35.140 --> 00:01:39.480
Change the perspective of the frame to front double click frame.

23
00:01:39.490 --> 00:01:43.500
It doesn't show up so click on the play button click on the play button again.

24
00:01:43.540 --> 00:01:46.270
Double click on the frame and there is our car.

25
00:01:46.270 --> 00:01:49.380
Now ask for the first wheel wheel one.

26
00:01:49.390 --> 00:01:55.310
It looks to be the rear right will so change the name of this the rear right.

27
00:01:55.330 --> 00:01:59.550
Change the name of this to rear left as it seems to be the rear left wheel.

28
00:02:01.370 --> 00:02:08.070
Wheel 3 seems to be the front right wheel and that only leaves the front left wheel wheel for it.

29
00:02:08.810 --> 00:02:12.350
So now inside of the Wii controller we need to declare our wheels.

30
00:02:12.350 --> 00:02:15.260
Recall that the wheels are children of the frame.

31
00:02:15.380 --> 00:02:20.380
So your challenge is to try and declare those wheels inside of our IAB action.

32
00:02:20.450 --> 00:02:22.860
Pause the video and give it a try.

33
00:02:24.990 --> 00:02:36.260
Left front left wheel is equal to frame child node with name the name of the front left wheel make sure

34
00:02:36.260 --> 00:02:40.220
to get it from your seat file and its front left.

35
00:02:40.220 --> 00:02:43.880
Copy this for the name and recursively will be false.

36
00:02:43.880 --> 00:02:50.530
Since we're sure that the front left wheel is a direct child an immediate child of the friend enough

37
00:02:50.540 --> 00:03:00.110
for the front wheel just right left front right wheel is equal to frame the child node and copy your

38
00:03:00.110 --> 00:03:02.810
front right wheel name right into your seat file.

39
00:03:05.200 --> 00:03:07.780
Recursively will be false.

40
00:03:07.780 --> 00:03:13.730
Now ask for their rear left wheel make that also equal to frame that child node.

41
00:03:14.110 --> 00:03:15.940
The name of the rear left wheel is rear left.

42
00:03:15.940 --> 00:03:21.160
Let me just go into my sig file and make sure of that and it's spelled exactly as how I have it in the

43
00:03:21.160 --> 00:03:29.500
Wii controller recursively as false as well and let me just copy this for their rewrite wheel and copy

44
00:03:29.500 --> 00:03:32.710
the name of your rewrite wheeler right into your view controller.

45
00:03:35.390 --> 00:03:39.050
So now we loaded all of our wheels into our Wii controller.

46
00:03:39.050 --> 00:03:41.260
We have all of our nodes.

47
00:03:41.720 --> 00:03:48.080
Now we need to declare all of these nodes as vehicular wheels before placing them in our array.

48
00:03:48.110 --> 00:03:51.930
So right left the front left wheel.

49
00:03:52.220 --> 00:03:58.370
V stands for vehicular is equal to a C in physics vehicle wheel.

50
00:03:58.610 --> 00:04:02.950
The node is just going to be the front left wheel itself.

51
00:04:02.960 --> 00:04:07.910
Do the same thing for every other wheel by just copying and pasting this three times.

52
00:04:07.970 --> 00:04:10.610
This is going to be the front right wheel

53
00:04:13.220 --> 00:04:14.750
the rear right wheel

54
00:04:18.340 --> 00:04:25.930
and as you may have guessed the rear left wheel and now for each vehicular wheel make sure that you

55
00:04:25.930 --> 00:04:27.680
put the proper node.

56
00:04:28.120 --> 00:04:31.470
This will be the rear left wheel and this will be the rear right wheel.

57
00:04:33.510 --> 00:04:37.090
So now we can put all of our wheels into the wheels array.

58
00:04:37.500 --> 00:04:40.160
So make sure to put the back wheels first.

59
00:04:40.170 --> 00:04:48.840
First put the rear right wheel or the rear left wheel whichever one once you put your back wheels then

60
00:04:48.840 --> 00:04:52.510
put your front wheels front right well in front left wheel

61
00:04:55.920 --> 00:04:56.190
OK.

62
00:04:56.190 --> 00:05:01.800
Now it's important to note that by declaring this vehicle we're not making a new car we already have

63
00:05:01.800 --> 00:05:09.600
a car we made it right here in the CFL I only created this vehicle variable so that this car can actually

64
00:05:09.750 --> 00:05:16.920
act like a vehicle for example by putting our cars wheels in the vehicles the right the cars wheels

65
00:05:16.920 --> 00:05:22.860
will now roll in turn and just like a real life vehicle would by putting our cars frame for the chassis

66
00:05:22.860 --> 00:05:29.940
this body our cars frame is going to move with the wheels again just like a real life vehicle would.

67
00:05:29.970 --> 00:05:36.660
So basically we made this vehicle variable to control the behavior of our car and mix it so that the

68
00:05:36.660 --> 00:05:39.890
car can move like a relay vehicle.

69
00:05:40.140 --> 00:05:49.050
So to add this vehicular behavior to our car just right self does scene view the scene physics world

70
00:05:49.530 --> 00:05:55.290
thought and behavior vehicle or a self-taught vehicle to just keep things consistent.

71
00:05:57.370 --> 00:05:59.430
This line of code is really important.

72
00:05:59.470 --> 00:06:05.440
So physics world is a property used to manage how certain physics bodies participate in physics simulations

73
00:06:06.190 --> 00:06:11.540
our car and our floor both our physics bodies.

74
00:06:12.040 --> 00:06:18.420
So they are both part of our physics world by adding the vehicle behavior to the physics world.

75
00:06:18.430 --> 00:06:24.490
We're adding the vehicle behavior to our car since the vehicle behavior is modified to affect only the

76
00:06:24.490 --> 00:06:31.080
wheels of our car as well as our cars frim then by doing this behavior to the physical world our cars

77
00:06:31.150 --> 00:06:33.090
wheels will behave like real life wheels.

78
00:06:33.100 --> 00:06:37.360
They will roll and turn our cars frame will move with the wheels.

79
00:06:37.390 --> 00:06:40.840
So now our car finally moves like a relay vehicle.

80
00:06:40.860 --> 00:06:42.430
There is one more step to this.

81
00:06:42.490 --> 00:06:46.740
How do we actually move the car before we get to any of this.

82
00:06:46.810 --> 00:06:47.590
Run the up

83
00:06:50.800 --> 00:06:52.600
wait for the world origin to load.

84
00:06:52.640 --> 00:06:58.690
Once the world origin loads start detecting some surfaces once you've detected a big enough surface

85
00:06:59.160 --> 00:07:03.300
had your car and everything gets all messed up.

86
00:07:09.310 --> 00:07:13.330
Before I explain this bug let me just go back to my wii controller.

87
00:07:13.360 --> 00:07:21.360
Bring him to justice and make sure to call it Chalcis where ever it says friend so Chasse's up position

88
00:07:21.360 --> 00:07:23.520
will equal the current position of the camera.

89
00:07:23.700 --> 00:07:26.530
The physics body will have our chust this node.

90
00:07:26.850 --> 00:07:32.400
The chances tough physics body will equal the body and the chances to ever seen view.

91
00:07:33.300 --> 00:07:37.190
Rename the node that's inside of the scene view to cestus as well.

92
00:07:40.400 --> 00:07:45.420
OK now the reason why I renamed this the Chasse's is because in the future if you're ever working with

93
00:07:45.420 --> 00:07:49.660
more vehicular physics you'll come across the term Chasse's a lot.

94
00:07:49.710 --> 00:07:52.280
It's the more correct term to identify the base.

95
00:07:52.290 --> 00:07:55.190
The frame of the car to back to our bug.

96
00:07:55.350 --> 00:07:56.920
If you look at the green arrow.

97
00:07:57.210 --> 00:07:59.040
Let me just go on the front perspective.

98
00:07:59.070 --> 00:08:01.070
Presti played but twice.

99
00:08:01.320 --> 00:08:07.520
Click on the choices and if you look at this green arrow notice that it's pointing upwards.

100
00:08:07.980 --> 00:08:15.330
So when we register our chance is known as a vehicle or our frim the car actually gets an engine.

101
00:08:15.510 --> 00:08:21.480
So if the chassis is facing upwards if the base the frame of the car is facing upwards then the engine

102
00:08:21.510 --> 00:08:28.410
is going to propel the chassis upwards as well by propelling the chassis upwards.

103
00:08:28.410 --> 00:08:31.370
The wheels will be inverted upwards as well.

104
00:08:31.830 --> 00:08:38.230
And since our concrete won't be supporting the wheels anymore the wheels just fly off into oblivion.

105
00:08:38.430 --> 00:08:40.200
So I just reran the OP.

106
00:08:40.300 --> 00:08:48.920
Notice as I added the car the whole car gets inverted because the engine propels the car upwards.

107
00:08:48.920 --> 00:08:53.650
The concrete isn't supporting the wheels anymore and the wheels just fly into oblivion.

108
00:08:54.600 --> 00:08:57.220
So to fix this it's very simple.

109
00:08:57.270 --> 00:09:04.530
Go back to your scene and simply make sure that the choices the frame faces downwards by rotating at

110
00:09:04.530 --> 00:09:05.970
180 degrees

111
00:09:09.360 --> 00:09:14.830
so now the Chasse's is facing downwards but the wheels are on the wrong side.

112
00:09:15.080 --> 00:09:20.900
Here's your challenge trying to reverse the orientation of the wheels such that they're under the Chasse's

113
00:09:21.440 --> 00:09:23.270
paused the video and give it a try.

114
00:09:27.160 --> 00:09:32.010
To reverse the orientation just switch the vertical position sign.

115
00:09:32.030 --> 00:09:38.180
So instead of negative 0.1 make it 0.1 do the same thing for every other wheel.

116
00:09:40.060 --> 00:09:42.790
0.1 for the rear left wheel.

117
00:09:42.850 --> 00:09:49.350
Zero point one for the front right wheel and for the front left wheel it's going to be zero point one

118
00:09:49.360 --> 00:09:58.120
as well now the head should be above the Cerasus so paused the video and try to reverse the heads orientation.

119
00:10:00.530 --> 00:10:04.840
Again all you have to do is reverse the sign of the vertical position.

120
00:10:05.000 --> 00:10:12.470
So instead of point 1 8 make it negative point 1 8 and this is looking good the chances if you look

121
00:10:12.470 --> 00:10:14.570
at the Green Arrow is facing downwards.

122
00:10:14.600 --> 00:10:22.200
We are on the up wait till the world origin loads as soon as the world origin loads start detecting

123
00:10:22.200 --> 00:10:23.290
some surfaces.

124
00:10:25.220 --> 00:10:32.590
Once you've detected a large enough surface on your car and everything works fine.

125
00:10:32.620 --> 00:10:35.470
The engine is propelling the Cerasus downwards.

126
00:10:35.770 --> 00:10:42.280
And since we're propelling the Chasse's downwards the concrete supports the car so it stays in place.

127
00:10:42.280 --> 00:10:46.320
The Chasse's is facing downwards towards the concrete not towards oblivion.

128
00:10:46.690 --> 00:10:50.410
OK so we just successfully added vehicular behavior to our car.

129
00:10:50.410 --> 00:10:53.800
Notice how the car is vibrating like it has a real life engine.

130
00:10:53.800 --> 00:10:54.850
This is pretty cool.

131
00:10:55.000 --> 00:11:00.790
Now when you add vehicular behavior to your car it automatically rotates your wheels 90 degrees.

132
00:11:00.790 --> 00:11:06.200
Notice how the wheels are vertical when they should be horizontal like what we have in our sigfile.

133
00:11:06.220 --> 00:11:09.710
We don't want the wheels to rotate 90 degrees to fix this.

134
00:11:09.730 --> 00:11:10.860
Back to your scene.

135
00:11:12.480 --> 00:11:14.860
Give the chances for children.

136
00:11:15.120 --> 00:11:22.320
So press on child node 4 times child no child node no child node.

137
00:11:22.560 --> 00:11:24.350
Call the children rear right.

138
00:11:24.360 --> 00:11:24.960
Parent

139
00:11:28.370 --> 00:11:29.610
we're left parent

140
00:11:32.670 --> 00:11:37.550
front right parent in front left parent

141
00:11:41.480 --> 00:11:44.630
position the parents exactly where the wheels are.

142
00:11:44.780 --> 00:11:46.730
So the rear right wheel has the position.

143
00:11:46.730 --> 00:11:49.620
Point one point one a negative point one two for dessert.

144
00:11:49.880 --> 00:11:52.940
So give their parent the exact same positioning.

145
00:11:53.000 --> 00:11:56.520
Point one point one and negative point went to

146
00:11:59.370 --> 00:12:03.090
do the same thing for the rear left parent the rear left has positions negative.

147
00:12:03.120 --> 00:12:05.450
Point one point one negative point one two.

148
00:12:05.550 --> 00:12:10.410
So I'm just going to put that negative point one point one and I think it was a negative point when

149
00:12:10.420 --> 00:12:14.180
to so negative points went to for the zent

150
00:12:17.460 --> 00:12:23.540
the front right wheel has positions point one point one point and one to all positive.

151
00:12:23.590 --> 00:12:27.570
So point one point one and point one to.

152
00:12:28.150 --> 00:12:29.450
As for the front left.

153
00:12:29.480 --> 00:12:33.220
It will have positions negative point at one point and one point went to.

154
00:12:33.570 --> 00:12:37.970
So a negative point at one point one point one two.

155
00:12:38.730 --> 00:12:42.900
And now make each wheel a child of its respective parents.

156
00:12:42.900 --> 00:12:48.600
So the rear right wheel will be a child of the rear right parents the rear left will be a child of the

157
00:12:48.600 --> 00:12:53.250
rear left parents the front right will be a child of the front right parent and the same thing for the

158
00:12:53.250 --> 00:13:00.440
front left and all the wheels are positioned relative to the wheel parent not the Cerasus.

159
00:13:00.450 --> 00:13:04.840
Now position the wheels exactly where their respective real parents are.

160
00:13:04.910 --> 00:13:09.840
This one the rear right wheel is already positioned exactly where its parent is.

161
00:13:09.950 --> 00:13:14.810
Notice it's position is 0 0 0 so it's perfectly aligned with its parent.

162
00:13:14.960 --> 00:13:19.870
The same thing for the rear left wheel the front right wheel and the front left Paran as well.

163
00:13:20.000 --> 00:13:25.670
So the wheel parents are positioned exactly where the wheels used to be.

164
00:13:25.670 --> 00:13:31.790
And since the wheels are positioned exactly where the parents are then the position of the wheels didn't

165
00:13:31.790 --> 00:13:32.480
really change.

166
00:13:32.480 --> 00:13:34.560
It's the same as it was before.

167
00:13:34.610 --> 00:13:43.490
So why did I just do this in the view controller instead of loading the wheels load the wheel parents.

168
00:13:43.590 --> 00:13:47.240
So just parents to the end of each string.

169
00:13:47.520 --> 00:13:49.920
And now we're loading the wheel parents not the wheel.

170
00:13:49.980 --> 00:13:55.040
And now we're registering the parents as the vehicle or wheels not the wheels themselves.

171
00:13:55.230 --> 00:14:01.230
So the wheel parents are going to be the ones that rotate 90 degrees and the wheels themselves however

172
00:14:01.230 --> 00:14:02.280
will remain the same.

173
00:14:02.310 --> 00:14:05.310
The wheel parents are invisible nodes.

174
00:14:05.340 --> 00:14:08.490
They don't have any shape color or geometry.

175
00:14:08.490 --> 00:14:14.280
We don't care if they are rotated or not as long as the wheels themselves remain the same as how we

176
00:14:14.280 --> 00:14:15.310
have them right here.

177
00:14:16.200 --> 00:14:22.530
So once we add vehicular behavior to our car it's just going to rotate some invisible nodes instead

178
00:14:22.530 --> 00:14:24.600
of rotating the wheels themselves.

179
00:14:24.720 --> 00:14:27.570
So run the UP WAIT TILL THE WORLD origin loads

180
00:14:31.450 --> 00:14:35.350
as soon as the world orange and loads start detecting some surfaces.

181
00:14:36.410 --> 00:14:39.980
Once you've detected a big enough surface and your car

182
00:14:43.550 --> 00:14:48.410
and the wheels look perfect the car is now a perfect vehicle.

183
00:14:48.410 --> 00:14:55.390
We can finally give it vehicular behavior the first vehicular behavior we're going to give our car is

184
00:14:55.390 --> 00:14:59.900
orienting and moving the wheels according to how we're moving the phone.

185
00:15:00.040 --> 00:15:01.900
We'll do that in the next video.
