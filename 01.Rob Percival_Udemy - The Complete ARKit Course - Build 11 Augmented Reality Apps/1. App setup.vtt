WEBVTT
1
00:00:00.530 --> 00:00:07.180
In this section we're going to make our final lap the shooter up in the app.

2
00:00:07.180 --> 00:00:09.020
You just aim and shoot

3
00:00:11.690 --> 00:00:16.910
so open up X code create and you project a single application.

4
00:00:16.940 --> 00:00:25.430
Call the project a shooter press next and create like always go to the main storyboard.

5
00:00:25.440 --> 00:00:32.150
Let me just resize my X code project and tear initial The controller.

6
00:00:32.340 --> 00:00:40.260
Are kids seeing a view to the middle expand your air kids scene give you to the edges of your super

7
00:00:40.260 --> 00:00:50.710
view and now pin it to the top bottom leading and trailing space at a button to the center of your air.

8
00:00:50.740 --> 00:00:55.770
Kitsune give you and pin it horizontally as well as vertically

9
00:00:59.950 --> 00:01:01.210
in your resources folder.

10
00:01:01.210 --> 00:01:03.730
I placed an image of this plus icon.

11
00:01:03.760 --> 00:01:05.830
We're going to use it for this button.

12
00:01:06.130 --> 00:01:10.170
So into your assets folder make a new image set.

13
00:01:11.280 --> 00:01:18.390
Call the set plus and drag your plus icon right into your image assets folder.

14
00:01:19.580 --> 00:01:26.840
The second and third one to maximize the go to and back to your storyboard.

15
00:01:26.840 --> 00:01:33.580
Remove this default text that you have for the button and give it the image itself.

16
00:01:33.700 --> 00:01:41.310
Plus open up the assistant editor and link your arcade seem you two your controller with ibl this scene

17
00:01:41.320 --> 00:01:49.720
view import air kit clothes the assistant editor and back to your Wii controller.

18
00:01:49.870 --> 00:01:56.110
We need to declare a constant configuration now since downloading the new tax code they change our world

19
00:01:56.110 --> 00:02:01.010
tracking session configuration to just say our world tracking configuration.

20
00:02:01.030 --> 00:02:03.300
You probably already have this on yours.

21
00:02:03.640 --> 00:02:06.450
Now just write self-deceit view session.

22
00:02:06.550 --> 00:02:11.130
Run configuration.

23
00:02:11.170 --> 00:02:13.360
I hope you've memorized it this step by now.

24
00:02:13.420 --> 00:02:21.610
Now just write self-trust scene view debug options is equal to an array type of debug options such that

25
00:02:21.610 --> 00:02:28.470
we're showing the world origin and were also showing feature points right.

26
00:02:28.530 --> 00:02:35.040
And the final step which you're probably already aware of is to declare a property privacy camer use

27
00:02:35.090 --> 00:02:38.180
description to prevent these are to enable the camera.

28
00:02:38.460 --> 00:02:50.460
Add a descriptive message saying you need the camera to display cool or content.

29
00:02:50.460 --> 00:02:55.250
Now back to your view controller let me just put some lighting so self-deceit viewed.

30
00:02:55.380 --> 00:02:58.400
Auto enables default lighting is equal to true.

31
00:02:58.650 --> 00:03:03.180
This just makes everything look better by providing an omni directional light in all directions of your

32
00:03:03.180 --> 00:03:03.710
scene.

33
00:03:03.930 --> 00:03:07.410
So the first thing we want to do is place our targets in the scene.

34
00:03:07.410 --> 00:03:11.020
View our eggs in your resources folder.

35
00:03:11.340 --> 00:03:17.220
I placed the scene file of an egg which I got from Turbo's dot.

36
00:03:17.370 --> 00:03:20.740
I already told you how to download 3D models from Turbo squid.

37
00:03:20.850 --> 00:03:25.230
If you're not sure how to download and use a 3D model make sure to revisit the section where we built

38
00:03:25.320 --> 00:03:28.150
our jellyfish up anyway.

39
00:03:28.260 --> 00:03:37.670
Drag this egg into your X code project like so and we have to put it in an SC and assets folder.

40
00:03:37.730 --> 00:03:42.860
Now since downloading the X code for some reason they made it harder to place stuff in the CNN assets

41
00:03:42.860 --> 00:03:44.780
folder you'll see how in a bit.

42
00:03:45.230 --> 00:03:50.920
So go to your acid catalog press next and create.

43
00:03:51.060 --> 00:03:54.270
Now if I can just convert this to an SC and assets folder

44
00:03:57.590 --> 00:04:00.660
fine just try to place this in the CN assets folder.

45
00:04:00.660 --> 00:04:03.230
It's almost impossible to do so.

46
00:04:03.690 --> 00:04:12.060
So the workaround that I found for it is to actually press add files to media as assets click on eg

47
00:04:12.660 --> 00:04:16.330
press add and even then it still doesn't work.

48
00:04:16.380 --> 00:04:21.060
So what you have to do now is to close your X good project open it again.

49
00:04:23.010 --> 00:04:26.560
And now the egg scene file is still not even in your folder.

50
00:04:26.820 --> 00:04:29.600
But now you can drag it in.

51
00:04:29.920 --> 00:04:31.410
This is a really big pain.

52
00:04:31.570 --> 00:04:38.560
But every time X code updates its platform it comes with its fair share of bugs and now delete this

53
00:04:39.810 --> 00:04:41.790
and instead of putting moved to trash.

54
00:04:41.790 --> 00:04:47.720
Make sure you put remove reference and we should be good to go from here.

55
00:04:47.910 --> 00:04:53.200
Now we need a button which whenever pressed displays this egg as a target.

56
00:04:53.700 --> 00:05:03.360
So into your storyboard add a button to the bottom of your view controller called the button and targets

57
00:05:04.820 --> 00:05:06.250
pivot horizontally.

58
00:05:07.200 --> 00:05:11.330
And 30 pixels from the bottom of your controller.

59
00:05:11.730 --> 00:05:16.330
And that constraint going to give the sponge a custom font.

60
00:05:16.350 --> 00:05:25.830
So click on custom and the font itself will be venir next with a size of 70 and looks good and a style

61
00:05:25.830 --> 00:05:28.450
of bold done.

62
00:05:28.630 --> 00:05:35.460
And now open up the assistant editor to link this one to the View Controller with an IAB action and

63
00:05:35.610 --> 00:05:38.770
targets connect.

64
00:05:38.980 --> 00:05:41.190
I put an IB outlet instead of an IB action.

65
00:05:41.190 --> 00:05:48.480
Let me just fix that mistake by unlinking the outlet and linking a new action.

66
00:05:48.720 --> 00:05:53.930
So action targets connects

67
00:05:56.370 --> 00:05:57.000
close up.

68
00:05:57.000 --> 00:06:00.870
The assistant editor and back to your controller.

69
00:06:00.870 --> 00:06:06.270
Whenever we press this button we're going to place three eggs in the same view.

70
00:06:06.270 --> 00:06:13.780
So declare a function add egg with arguments x of type float.

71
00:06:13.810 --> 00:06:16.460
I forgot the fun keyboard right here.

72
00:06:16.980 --> 00:06:23.480
An argument why F-Type float and arguments of type float as well with no return value.

73
00:06:26.470 --> 00:06:29.660
And call this function three times and not target.

74
00:06:29.660 --> 00:06:38.340
So self egg and the first egg we're going to place is going to be five metres to the right of the world

75
00:06:38.340 --> 00:06:44.960
the origin 0 metres vertically it's going to be perfectly aligned with the origin and negative 40 meters

76
00:06:44.960 --> 00:06:46.710
behind the origin.

77
00:06:46.730 --> 00:06:53.390
So even though I'm positioning the eggs far away very far away this egg is so large that you'll still

78
00:06:53.390 --> 00:06:54.890
be able to see it.

79
00:06:54.890 --> 00:07:00.100
This is three metres wide four metres high and three meters deep.

80
00:07:00.320 --> 00:07:05.300
That's about the size of a room and it makes sense to position the eggs so far away since we want the

81
00:07:05.300 --> 00:07:08.360
bullet to travel a long distance.

82
00:07:08.360 --> 00:07:15.920
So the other end by writing self-taught egg this egg is going to be aligned horizontally with the world

83
00:07:15.920 --> 00:07:18.070
origin vertically with the warlords.

84
00:07:18.110 --> 00:07:25.010
And it's also going to be 40 meters away from us the origin and now we're self-taught at Egg for the

85
00:07:25.010 --> 00:07:31.100
third one which is going to be five metres to the left 0 metres from the origin so perfectly aligned

86
00:07:31.760 --> 00:07:38.460
and negative 40 meters away behind us behind the origin.

87
00:07:38.520 --> 00:07:42.770
Now inside of an egg we're going to load our egg.

88
00:07:43.180 --> 00:07:52.200
So right let egg scene is equal to c and c and to access our scene.

89
00:07:52.210 --> 00:07:55.900
First we need to navigate to the first directory which is media

90
00:07:58.540 --> 00:08:05.530
don't see and assets slash AG dust seen

91
00:08:08.510 --> 00:08:15.020
now we need to load the node that's inside of the scene and the node is an immediate child of the same

92
00:08:15.410 --> 00:08:16.530
node.

93
00:08:16.580 --> 00:08:19.010
So back to the Wii controller right.

94
00:08:19.040 --> 00:08:29.010
Node is equal to exceed dot node child node and the name of the node.

95
00:08:29.050 --> 00:08:29.970
I'm not too sure.

96
00:08:29.970 --> 00:08:32.390
To be honest with you it's AG.

97
00:08:33.010 --> 00:08:38.620
So copy and paste this and recursively will be false since the egg is an immediate child of the scene

98
00:08:38.620 --> 00:08:41.320
views node of the scene root node.

99
00:08:41.920 --> 00:08:46.830
Now we need to place the egg node in the position that was specified for it.

100
00:08:47.140 --> 00:08:50.710
So whatever X Y or Z that was specified.

101
00:08:50.710 --> 00:08:58.080
And finally add the egg to the scene view by writing self and this is a very silly mistake for me it's

102
00:08:58.170 --> 00:09:01.520
equal to seeing vector 3 x y and z.

103
00:09:01.960 --> 00:09:11.340
And finally just add it to the scene view by writing self does scene view that scene the root node child

104
00:09:11.340 --> 00:09:15.340
node AG node and you know what.

105
00:09:15.360 --> 00:09:27.370
Let me just write this remove this question mark and we should be get to go run the app going to wait

106
00:09:27.370 --> 00:09:37.680
till the world or you know as soon as it loads I'm going to add my target's there they're now we need

107
00:09:37.680 --> 00:09:41.700
something to shoot these tags whenever the screen is touched.

108
00:09:41.700 --> 00:09:48.110
So back to the controller declare a tap gesture recognizer.

109
00:09:48.120 --> 00:09:59.730
So right let gesture recognizer is equal to you I tap gesture recognizer with Target's self and the

110
00:09:59.730 --> 00:10:03.900
actual function that's going to get triggered when we tap the scene view.

111
00:10:03.900 --> 00:10:06.500
Let me just stop writing the app before doing anything.

112
00:10:06.600 --> 00:10:11.130
And the actual function that will be triggered when we tap the scene view will be handled top.

113
00:10:11.340 --> 00:10:20.610
So right here right phunk handle top with arguments sender of type you tab gesture recognizer and no

114
00:10:20.610 --> 00:10:30.320
return value in place handle type in your selector handle type and make sure to expose this to objective

115
00:10:30.350 --> 00:10:34.990
c and everything should work fine.

116
00:10:35.150 --> 00:10:43.860
Now and this gesture recognizer to the scene view by writing self scene view gesture recognizer gesture

117
00:10:44.010 --> 00:10:46.200
recognizer.

118
00:10:46.200 --> 00:10:52.560
So whenever we tap the screen we want to shoot a bullet in Hendel top and we want to shoot a bullet

119
00:10:52.560 --> 00:10:57.350
such that the bullet flies off in the camera view of the film.

120
00:10:57.810 --> 00:11:03.150
The bullet will simply be a red sphere with a radius of zero point three.

121
00:11:03.150 --> 00:11:07.640
This follows the exact same logic as shooting the basketball.

122
00:11:07.660 --> 00:11:10.100
So pause the video and give this one a try.

123
00:11:18.410 --> 00:11:27.700
First off guard let scene view is equal to center of view as they as C-n view.

124
00:11:28.100 --> 00:11:28.610
Ritter

125
00:11:33.350 --> 00:11:37.510
what this line of code word just making sure that the view that was stopped on is at the scene view.

126
00:11:37.580 --> 00:11:43.310
If it's not then return the card statement will always succeed since the function only gets triggered

127
00:11:43.550 --> 00:11:46.620
if we tapped on the scene view anyway.

128
00:11:46.700 --> 00:11:58.220
You need the point of view of the camera so guard let point of view is equal to seen view point of view

129
00:11:58.520 --> 00:11:59.940
else return.

130
00:12:00.660 --> 00:12:08.360
So from the point of view of the camera we can get the transform matrix by writing a let transform is

131
00:12:08.360 --> 00:12:09.000
equal to.

132
00:12:09.010 --> 00:12:16.270
Point of view transform from the transform we can get the current orientation and location of the film

133
00:12:16.340 --> 00:12:17.610
camera view.

134
00:12:17.810 --> 00:12:24.130
So right left orientation is equal to s c and vector 3.

135
00:12:24.230 --> 00:12:30.770
As we discussed before the x value of the camera's orientation is in column 3 row 1 so right transform

136
00:12:31.220 --> 00:12:34.880
thought and 3 1 the y value is and wrote.

137
00:12:34.910 --> 00:12:36.880
So transform it.

138
00:12:36.950 --> 00:12:41.460
And 3 2 and the Zed value is in column 3.

139
00:12:41.510 --> 00:12:45.080
Row 3.

140
00:12:45.300 --> 00:12:49.380
We also discussed that the orientation we're given is always reversed.

141
00:12:49.530 --> 00:12:56.100
If you're confused as to why that is make sure to visit Section 3 of the drawing up any way to reverse

142
00:12:56.100 --> 00:13:01.330
the orientation give each value a negative.

143
00:13:01.430 --> 00:13:04.610
And now we need the current location of the camera view.

144
00:13:05.110 --> 00:13:13.600
So right let location is equal to see a vector 3 transform.

145
00:13:13.770 --> 00:13:14.650
M for one.

146
00:13:14.680 --> 00:13:24.160
The location is in column for The X field as in row 1 the Y field is in row 2 and 4 to the set field

147
00:13:24.160 --> 00:13:25.970
respectively as in row 3.

148
00:13:29.060 --> 00:13:36.800
Now combine the location and orientation by writing let position is equal to orientation plus location

149
00:13:38.030 --> 00:13:44.860
and we should get an error very soon since we cannot add to the vector of 3 operands and there is r

150
00:13:45.530 --> 00:13:54.330
unless we modify this binary operator which we will right now by declaring a function plus and modify

151
00:13:54.330 --> 00:13:55.370
the binary operator.

152
00:13:55.370 --> 00:14:03.480
Just that it takes to SC and vector three operands left operand and a right one.

153
00:14:03.490 --> 00:14:04.760
CN adductor 3.

154
00:14:05.150 --> 00:14:11.670
And from the two vectors return another three dimensional vector as C and vector 3.

155
00:14:12.530 --> 00:14:19.640
And now return as c in vector 3 make such that we're making a new vector from these two vectors but

156
00:14:19.670 --> 00:14:21.490
by adding the x value.

157
00:14:21.530 --> 00:14:26.380
So right left dot X plus right dot x.

158
00:14:26.390 --> 00:14:33.320
We're also adding there are y values so left or Y plus right Dalt Y as well as there is that values

159
00:14:33.410 --> 00:14:36.140
left does that plus right.

160
00:14:37.580 --> 00:14:44.060
Now that we have the current position of the camera we need to place the bullet in the current position.

161
00:14:44.060 --> 00:14:51.920
First we need to declare a bullet node and do that by writing that bullet is equal to see a node with

162
00:14:51.920 --> 00:15:02.520
a geometry of a sphere seat and sphere with a radius of zero point three meters.

163
00:15:02.550 --> 00:15:06.660
You know what I did say the radius would be 0.3 but make zero point once.

164
00:15:06.690 --> 00:15:09.420
Bullets are usually small.

165
00:15:09.770 --> 00:15:12.790
OK now give the sphere a color of your choice.

166
00:15:12.790 --> 00:15:17.550
I'm going to give it a color of red by writing bullet geometry.

167
00:15:17.630 --> 00:15:27.620
The first material diffuse dot contents is equal to you white color red.

168
00:15:27.900 --> 00:15:31.270
Again feel free to give it any color that you want.

169
00:15:31.350 --> 00:15:36.190
Now position the bullet in the current position of the camera by writing bullet.

170
00:15:36.310 --> 00:15:43.430
That position is equal to position and now from the current position of the camera.

171
00:15:43.440 --> 00:15:45.480
We need to shoot the bullet.

172
00:15:45.480 --> 00:15:51.480
In other words we need to apply force on the bullet to apply a force on the bullet the bullet needs

173
00:15:51.480 --> 00:15:53.420
to be a physical body.

174
00:15:53.430 --> 00:16:02.220
We discussed physics bodies in great detail in the vehicle up so right left body is equal to s c in

175
00:16:02.220 --> 00:16:11.940
physics body the type of the body will be dynamic such that we want our bullet to be effected by forces

176
00:16:12.000 --> 00:16:15.160
like the applied force that we want to apply on it.

177
00:16:16.230 --> 00:16:19.620
And ask for shape right a C and physics shape

178
00:16:23.580 --> 00:16:31.410
and the shape that we want our body to apply is the shape of our bullet node and we don't want any options

179
00:16:31.410 --> 00:16:41.010
so just leave that as no now a sign this physics body to our node by writing bullet physics body is

180
00:16:41.010 --> 00:16:43.550
equal to body.

181
00:16:43.670 --> 00:16:48.820
Now finally we need to apply a force on the bullet.

182
00:16:48.880 --> 00:16:54.980
We did that in the last section simply by a writing bullet physics body.

183
00:16:55.060 --> 00:16:56.810
Does it apply force.

184
00:16:56.890 --> 00:17:02.260
And the first argument is the direction into which you're applying the force the direction in which

185
00:17:02.260 --> 00:17:05.860
you're applying the force is simply where your camera is facing.

186
00:17:06.100 --> 00:17:08.650
So the orientation of the camera.

187
00:17:08.650 --> 00:17:23.340
So right I see in vector three orientation X orientation dot Y and orientation Gartside and as impulse

188
00:17:23.460 --> 00:17:24.320
will be true.

189
00:17:24.390 --> 00:17:30.130
Since we want the effect of the force to be instantaneous we want the bullet to be fired off right away.

190
00:17:31.070 --> 00:17:37.290
And finally just add the bullet to the scene if you by writing self scene view the scene.

191
00:17:37.400 --> 00:17:40.460
No doubt child Noad bullet

192
00:17:43.290 --> 00:17:45.030
now just run up

193
00:17:50.960 --> 00:17:52.970
mithai up the screen.

194
00:17:53.000 --> 00:17:59.780
This doesn't seem like much of a bullet effect when the bullet to be faster such that it's also not

195
00:17:59.780 --> 00:18:01.500
affected by gravity.

196
00:18:01.940 --> 00:18:11.260
So the view controller declares a variable var power of type float is equal to 50

197
00:18:14.090 --> 00:18:19.710
and multiply every direction in which you are applying your force by the power of times power for the

198
00:18:19.710 --> 00:18:29.820
next Times power for the Y and times power for this and so the bullet will be 50 times more powerful

199
00:18:30.150 --> 00:18:33.870
in every direction that the force was applied to it.

200
00:18:33.890 --> 00:18:35.210
And finally right.

201
00:18:35.210 --> 00:18:47.080
Body is affected by gravity is equal to false so that the bullet doesn't experience any gravity it just

202
00:18:47.080 --> 00:18:49.720
keeps moving straight run up

203
00:18:52.730 --> 00:19:02.710
going to wait till my world orange and loads once it loads your targets and now try and shoot your targets

204
00:19:03.160 --> 00:19:05.360
and obviously nothing happens.

205
00:19:05.410 --> 00:19:13.720
Now we need the bullet to actually collide with the X let me just stop running the app.

206
00:19:13.900 --> 00:19:21.910
Now the eggs we want them to stay in place not be affected by any forces however still be able to collide

207
00:19:21.910 --> 00:19:23.430
with other objects.

208
00:19:23.680 --> 00:19:27.380
So what kind of physics body should the egg be.

209
00:19:27.470 --> 00:19:29.750
I hope you guessed stuck.

210
00:19:29.810 --> 00:19:42.170
So in your view controller right leg node does physics body is equal to a C and physics body but static

211
00:19:45.270 --> 00:19:46.050
run the up

212
00:19:50.650 --> 00:19:57.740
going to wait until my world origin loads once the origin loads add your targets.

213
00:19:57.780 --> 00:20:01.720
And now if I shoot the bullet it collides with the eggs.

214
00:20:01.730 --> 00:20:04.430
However if I shoot the bullet from the side.

215
00:20:04.460 --> 00:20:12.610
So somewhere like here now seat when I shot the bullet from the side there was no collision.

216
00:20:12.620 --> 00:20:17.150
The problem is right here by declaring the node simply static.

217
00:20:17.150 --> 00:20:21.680
Let me just stop writing me up by declaring the node simply as static.

218
00:20:21.680 --> 00:20:24.770
We're not giving the physics body a shape.

219
00:20:24.770 --> 00:20:30.680
If you don't give the physics body an exact shape collision will be estimated based on the rendered

220
00:20:30.680 --> 00:20:32.700
geometry of the node.

221
00:20:33.020 --> 00:20:34.870
However if I write this instead

222
00:20:37.690 --> 00:20:46.600
fudged expand the arguments and leave the type as static but this time declare a shape.

223
00:20:46.600 --> 00:20:53.300
So I see in physics shape node will simply be the node

224
00:20:56.830 --> 00:21:03.970
and so right now the physics body when it wants to perform contact detection when it wants to detect

225
00:21:04.030 --> 00:21:06.560
a contact between two nodes.

226
00:21:06.580 --> 00:21:15.310
It uses the physics shape of this know the egg node it's solid volume instead of a render geometry to

227
00:21:15.310 --> 00:21:22.420
better and more precisely detect contact leave the options is no we don't need them run the up

228
00:21:25.740 --> 00:21:33.860
going to wait till the world origin loads soon as the world order unknown's I'm going to add my targets.

229
00:21:34.030 --> 00:21:40.380
Now if I shoot one of the eggs where ever I shoot it it's going to collide with the egg because now

230
00:21:40.390 --> 00:21:45.200
collision is better tuned to fit the entire shape of the note.

231
00:21:45.290 --> 00:21:51.020
And now we need it such that one should dig the egg blows up we'll do that in the next video.
