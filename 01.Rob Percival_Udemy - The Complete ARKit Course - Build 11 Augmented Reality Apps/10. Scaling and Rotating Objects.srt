1
00:00:00,210 --> 00:00:04,430
In this video we're going to scale and rotate objects as they are in the scene view.

2
00:00:06,130 --> 00:00:12,580
I need to start if I put my index finger and my thumb on the cup and I pinch words the cup would expand

3
00:00:12,940 --> 00:00:19,720
to accomplish this in the View Controller in the function register just gesture recognizer declare a

4
00:00:19,750 --> 00:00:29,740
pinch gesture recognizer let a bench gesture recognizer is equal to you I pinched just a recognizer

5
00:00:31,180 --> 00:00:42,070
with Target's self and asked for the action declare a function pinch funk pinch with arguments sender

6
00:00:42,490 --> 00:00:46,800
of type you I pinched just a recognizer and no return value.

7
00:00:48,580 --> 00:00:55,270
Make the pinch function the auction of pens just a recognized by a writing selector Penge

8
00:00:58,880 --> 00:01:05,600
selector is an objective argument so make sure that Penge is exposed to Objective C by just clicking

9
00:01:05,630 --> 00:01:12,770
on fix and Raggatt add this pinch just a recognizer to the scene view by writing self does scene view

10
00:01:13,270 --> 00:01:19,340
the gesture recognizer pinch gesture recognizer.

11
00:01:19,340 --> 00:01:24,890
Now every time we print something the Pens just a recognizer it will send us information on what we

12
00:01:24,890 --> 00:01:31,080
pinched in the form of a sender similar to how the tap gesture recognizer works.

13
00:01:33,370 --> 00:01:38,160
So we know that whatever we pinched is inside of the market sink view.

14
00:01:38,230 --> 00:01:48,010
So right last seen view is the pull to sender view as a see and view we need to get the location that

15
00:01:48,010 --> 00:01:57,520
we pinched in the scene view by writing let Penge location is equal to sender that location inside of

16
00:01:57,520 --> 00:02:00,060
the scene viewed that we Pinchon.

17
00:02:00,430 --> 00:02:02,530
Now we need to do a hit test.

18
00:02:02,600 --> 00:02:08,900
The test is going to check if your pinch location matches the location of an object in the scene.

19
00:02:08,910 --> 00:02:20,140
The right let hit test is equal to seen view dart hit test bench location and we don't need any types

20
00:02:23,410 --> 00:02:31,010
so if there is a cup and I pinch the cup the pinch location will match the location of the cups co-ordinates.

21
00:02:31,300 --> 00:02:37,510
The hit test will be a success and this test array will get one element of results.

22
00:02:37,660 --> 00:02:43,900
If I just pinch nothing in the scene view the hit test will fail and this test array will be empty.

23
00:02:45,450 --> 00:02:53,750
So if hit test is empty and add the exclamation mark here to make sure that the statement says if the

24
00:02:53,790 --> 00:02:55,530
test is not empty.

25
00:02:57,640 --> 00:03:03,550
So if you actually punch something in the scene you get the results from the hit test by writing let

26
00:03:03,550 --> 00:03:10,440
result is equal to hit test the first.

27
00:03:10,450 --> 00:03:12,130
I hope this looks familiar to you.

28
00:03:14,660 --> 00:03:18,980
Get the node from the result by writing the node is equal to.

29
00:03:18,980 --> 00:03:20,240
Result.

30
00:03:20,240 --> 00:03:24,960
Don't know who's going to rhenium this to results instead.

31
00:03:25,460 --> 00:03:27,870
So this is the node that you pinched.

32
00:03:28,220 --> 00:03:33,500
Now we need to scale the know that you pinched based on how far you're pinching it.

33
00:03:33,500 --> 00:03:40,290
So right let pinch action is equal to see an action dot scale.

34
00:03:41,420 --> 00:03:47,330
So the scale action changes at the scale of a node based on another value.

35
00:03:47,420 --> 00:03:53,570
We're going to scale the know that we're pinching based on the sender does scale the center of that

36
00:03:53,570 --> 00:03:57,300
scale is given to us by the Pens just to recognizer.

37
00:03:57,560 --> 00:04:00,140
And it's the scale of what you're pinching the node.

38
00:04:00,500 --> 00:04:06,780
If I pinched the node 1.5 metre at words the node is going to grow 1.5 metre outwards.

39
00:04:06,980 --> 00:04:14,360
If I pinched the nose 0.5 metre inwards the node is going to shrink 0.5 metres and put the duration

40
00:04:14,360 --> 00:04:15,250
is zero.

41
00:04:15,470 --> 00:04:22,900
So basically as soon as I start the pinching gesture I want the node to grow or shrink immediately.

42
00:04:22,970 --> 00:04:29,090
I don't want there to be any time in between for the note to grow or shrink according to how I'm pinching

43
00:04:29,090 --> 00:04:29,950
it.

44
00:04:30,170 --> 00:04:37,190
We need to give the node this option by writing node run action the hinge action

45
00:04:42,280 --> 00:04:42,670
run the

46
00:04:45,600 --> 00:04:51,010
wait till the world origin Loeb's right here is the world origin.

47
00:04:51,010 --> 00:04:57,880
Now I'm going to place my phone right on top of a horizontal surface and wait till it detects the horizontal

48
00:04:57,880 --> 00:04:59,300
surface.

49
00:04:59,410 --> 00:05:01,910
I'm going to assume that it did just now.

50
00:05:02,050 --> 00:05:06,380
So I'm going to press on cup tab on this surface.

51
00:05:06,440 --> 00:05:08,170
The cup is displayed.

52
00:05:08,260 --> 00:05:14,880
Now if I pinch outwards the cup just gets exponentially bigger.

53
00:05:14,880 --> 00:05:17,120
This is not how it should be.

54
00:05:17,190 --> 00:05:19,510
So let me explain this.

55
00:05:19,580 --> 00:05:23,720
The more I pinch outwards the bigger the scale becomes.

56
00:05:23,820 --> 00:05:26,700
I need the scale to be constant.

57
00:05:26,700 --> 00:05:30,330
So back to X code to prove that that is indeed the case.

58
00:05:30,360 --> 00:05:37,260
I'm going to print sender dot scale as we're scaling the cut going to rerun the

59
00:05:41,800 --> 00:05:46,830
wait till the world origin loaves had just loaded pointed to a horizontal surface.

60
00:05:46,830 --> 00:05:49,500
Way to let you touch it as a surface.

61
00:05:49,510 --> 00:05:55,230
I'm going to assume it did just now so rest on the lay of the cup.

62
00:05:55,230 --> 00:05:58,830
And if I start sizing it up I pinch outwards.

63
00:05:59,140 --> 00:06:01,010
Notice the debugger.

64
00:06:01,420 --> 00:06:04,010
So back to X code.

65
00:06:04,270 --> 00:06:06,390
If I expand this a little bit.

66
00:06:06,490 --> 00:06:12,220
Notice that the cup first starts growing 1 1 1 times bigger then it starts growing one point two times

67
00:06:12,220 --> 00:06:19,420
bigger and then almost at one point three times bigger and it just keeps growing at an exponential rate.

68
00:06:19,510 --> 00:06:21,940
We need it to grow at a constant rate.

69
00:06:22,120 --> 00:06:29,290
So if it started growing at one point one it should remain growing at this rate the rate of growth should

70
00:06:29,290 --> 00:06:31,060
not keep increasing.

71
00:06:31,060 --> 00:06:38,390
To put the debugger down a little bit so we want it to grow at a constant rate not exponentially.

72
00:06:38,600 --> 00:06:46,600
So as soon as you pinch it the first center does scale of value is about 1.1 1.0 way according to your

73
00:06:46,630 --> 00:06:51,470
pinch your cup would grow at this point 1.0 eight times bigger.

74
00:06:51,890 --> 00:06:56,530
But then make sure to set the standards scale right back to one.

75
00:06:56,570 --> 00:07:06,890
As soon as it grew up so assuming the scale at first is 1.0 it's so D-cup would grow at a rate of 1.0

76
00:07:06,960 --> 00:07:15,780
wait times its original size as you pinch out words the scale keeps increasing which makes sense since

77
00:07:15,780 --> 00:07:23,070
the sender gives us a scale based on how we're pinching the gesture recognizer we want to reset the

78
00:07:23,070 --> 00:07:24,970
scale back to 1.

79
00:07:25,290 --> 00:07:28,760
We don't want the skill to keep getting bigger and bigger.

80
00:07:29,220 --> 00:07:35,820
So once we reach a scale about 1 in the next atwork pinch the center of that scale is just going to

81
00:07:35,820 --> 00:07:40,210
go back to its original scale or something very close to it.

82
00:07:40,230 --> 00:07:44,600
So the cup will keep getting 1.0 eight times bigger every time.

83
00:07:44,790 --> 00:07:47,300
And now our scale is constant.

84
00:07:47,370 --> 00:07:55,540
So run up wait till the world origin shows up try and detect as much of the environment as you can before

85
00:07:55,540 --> 00:07:56,610
it does.

86
00:07:56,620 --> 00:08:00,970
Here is your world origin point your device to a horizontal surface.

87
00:08:00,970 --> 00:08:08,020
I'm going to wait till it detects it assuming interested press on the display of that cup.

88
00:08:08,020 --> 00:08:14,430
And now if I start scaling it it scales at a constant rate.

89
00:08:14,470 --> 00:08:17,320
This is looking good but there is a bug.

90
00:08:17,350 --> 00:08:23,900
Notice as I am scaling the cup the liquid inside the cup remains the same size.

91
00:08:23,920 --> 00:08:25,270
This is not very good.

92
00:08:27,110 --> 00:08:29,400
Go to your cup does scene.

93
00:08:29,470 --> 00:08:33,960
And one thing to notice about the cup is that it's not made from only one node.

94
00:08:34,190 --> 00:08:36,320
It's made from two different nodes.

95
00:08:36,650 --> 00:08:42,750
So instead of scaling the entire cup we're only pinching the part of the cup that we're touching.

96
00:08:43,250 --> 00:08:51,320
So combine these nodes into one node by flattening them so just press on flatten node and do the same

97
00:08:51,320 --> 00:08:56,020
thing for the boxing bag since the boxing bag is made up of four nodes.

98
00:08:56,210 --> 00:08:58,960
We don't want to pinch one cylinder at a time.

99
00:08:59,210 --> 00:09:07,220
So right click on boxing and press on flattened the table and these are fine.

100
00:09:07,280 --> 00:09:10,280
These are formed from one single node.

101
00:09:10,730 --> 00:09:17,120
And as for the phase I've noticed that the vase has been looking a bit small from the previous lecture

102
00:09:17,840 --> 00:09:31,820
change its scale from 0.1 to about 0.8 to that for what this is a bit hard to click on.

103
00:09:32,460 --> 00:09:46,020
Do that for height and 0.8 for that the Vai's should be 0.8 times 0.5 metres wide 0.8 times zero point

104
00:09:46,020 --> 00:09:51,210
six nine eight metres high and 0.8 times your post 6 1 7 meters deep.

105
00:09:51,620 --> 00:09:52,230
OK.

106
00:09:52,360 --> 00:10:00,150
Rerun the up wait till the phone to touch your environment and shows your world origin.

107
00:10:00,210 --> 00:10:06,690
Once it does place the phone on the horizontal surface so that it can detect the plane I'm assuming

108
00:10:06,690 --> 00:10:16,100
it just did so clicked on your cup and display there is your cup now a fine sized cup the liquid grows

109
00:10:16,160 --> 00:10:17,680
along with the cup.

110
00:10:17,690 --> 00:10:19,200
This is looking pretty good.

111
00:10:20,420 --> 00:10:26,850
And now try putting the V's right on top of here and this is actually way too big.

112
00:10:27,190 --> 00:10:29,370
I'm going to rescale it in the seam view.

113
00:10:29,640 --> 00:10:37,080
But back to the scene file instead of zero point it just give it a scale of zero point five for every

114
00:10:37,080 --> 00:10:38,140
single dimension.

115
00:10:39,760 --> 00:10:44,720
Zero point five for height is 0.5 for the debt.

116
00:10:45,010 --> 00:10:48,090
Rerun the app to see how this looks.

117
00:10:48,260 --> 00:10:56,900
Wait till the world origin loads click on your vase and point to this horizontal surface once it detects

118
00:10:56,900 --> 00:10:58,210
it as a surface.

119
00:10:58,220 --> 00:11:02,710
Make sure to place your vase.

120
00:11:02,710 --> 00:11:04,460
This looks pretty good.

121
00:11:04,480 --> 00:11:06,910
This is how it should look like.

122
00:11:06,910 --> 00:11:08,220
Now one more thing to note.

123
00:11:08,260 --> 00:11:13,990
I've been finding it a bit annoying that I have to kind of guess every time the device detects a horizontal

124
00:11:13,990 --> 00:11:15,190
surface.

125
00:11:15,250 --> 00:11:19,510
I need some kind of indicator to tell me when the surface was detected.

126
00:11:20,050 --> 00:11:30,950
So 2 X code in the main storyboard add a label on top of your scene if View buy a writing label add

127
00:11:30,970 --> 00:11:39,390
it to the top line it horizontally and pin it to the top of your screen.

128
00:11:39,420 --> 00:11:48,610
You buy zero pencils for the label give it a text of plain detected.

129
00:11:48,660 --> 00:11:54,360
As for the font I'm going to choose a custom font of Avenir next if I can just find it.

130
00:11:54,570 --> 00:11:56,020
It's right here.

131
00:11:56,250 --> 00:12:00,710
And I'm also going to pull this font OK.

132
00:12:01,060 --> 00:12:02,410
Press on done.

133
00:12:02,560 --> 00:12:05,580
And lastly in the ads which Inspector.

134
00:12:05,710 --> 00:12:09,260
Make sure that the label is hidden at first.

135
00:12:09,280 --> 00:12:20,560
Open up the assistant editor connect the label to the controller with an IBM call the outlet plane detected

136
00:12:22,180 --> 00:12:33,120
cannot close the assistant editor and back to the controller inherit from a r s c and you delegate and

137
00:12:33,130 --> 00:12:41,580
let me just make the smaller it's a bit too big and and call the function did it right on the button.

138
00:12:42,170 --> 00:12:45,600
Did I think so.

139
00:12:45,620 --> 00:12:51,530
When we did the floor is lava you learn that this function gets called whenever an anchor is added to

140
00:12:51,530 --> 00:12:52,760
the scene.

141
00:12:53,000 --> 00:12:59,570
However if a plain anchor was added that means a horizontal surface was detected to check if the anchor

142
00:12:59,570 --> 00:13:12,830
that was added is a plain anchor guard anchor is of type A plain anchor else return so if the anchor

143
00:13:12,830 --> 00:13:18,100
is of type A plain anchor that was detected then unhide the detected plane.

144
00:13:18,350 --> 00:13:23,810
So self detected Labem is hidden.

145
00:13:25,300 --> 00:13:29,920
Is equal to false and after about three seconds.

146
00:13:30,040 --> 00:13:43,390
So dispatch can main async after so after about three seconds from now now plus three.

147
00:13:43,850 --> 00:13:46,080
Make sure to hide the one.

148
00:13:46,730 --> 00:13:53,850
We don't want the label to show up forever cause we're going to be detecting other planes.

149
00:13:53,980 --> 00:13:55,670
Now you call this delegate function.

150
00:13:55,680 --> 00:14:05,790
Make sure to go to if you did load and write self does scene view that delegate is equal to self run

151
00:14:05,790 --> 00:14:13,710
your app OK wait till the world origin loans and in the meantime try and detect as much of your environment

152
00:14:13,710 --> 00:14:14,980
as possible.

153
00:14:15,090 --> 00:14:21,220
There is your world origin point your phone to the horizontal surface once it detects the surface.

154
00:14:21,240 --> 00:14:26,890
The label should show up going to keep moving my phone around

155
00:14:29,870 --> 00:14:32,130
and the label never shows up.

156
00:14:32,320 --> 00:14:36,730
Here is the reason this ad gets triggered on a background thread.

157
00:14:37,140 --> 00:14:40,680
So we need to make sure that all of this happens on the main thread.

158
00:14:41,160 --> 00:14:42,690
So make sure to call dispatch.

159
00:14:42,690 --> 00:14:49,450
Q Does it mean that async and place all of this inside of your dispatch

160
00:14:53,780 --> 00:14:54,290
rerun the

161
00:14:57,250 --> 00:15:04,890
wait till your world orange and Lote's world orange and just floated point your phone to the horizontal

162
00:15:04,890 --> 00:15:05,530
surface.

163
00:15:05,550 --> 00:15:07,860
Wait let me touch it as a surface

164
00:15:11,590 --> 00:15:13,660
and right here it says plane detected.

165
00:15:13,840 --> 00:15:14,690
Perfect.

166
00:15:14,800 --> 00:15:17,170
And it disappears after three seconds.

167
00:15:17,230 --> 00:15:18,940
We know that the plane was detected.

168
00:15:18,940 --> 00:15:21,870
So if I add up it should work.

169
00:15:21,880 --> 00:15:23,310
There you go.

170
00:15:23,320 --> 00:15:25,290
This is looking really good.

171
00:15:25,330 --> 00:15:27,820
Now there is one more thing we have to do.

172
00:15:28,240 --> 00:15:34,370
If I called the cops so if I press it for a long time I want the cup to rotate around itself.

173
00:15:34,830 --> 00:15:35,520
OK.

174
00:15:35,710 --> 00:15:43,580
So back to X code in your view controller in registered just recognizers we need a gesture recognizer

175
00:15:43,590 --> 00:15:48,140
that detects when I'm pressing something for a long time when I'm holding it.

176
00:15:48,150 --> 00:15:54,770
So right let a long press gesture recognizer is equal to you.

177
00:15:54,790 --> 00:15:59,960
I long press just to recognizer with Target's self.

178
00:16:00,300 --> 00:16:08,950
And as for the action make a function called rotate phunk rotate with arguments center of type you want

179
00:16:09,000 --> 00:16:14,160
long press gesture recognizer and no return value.

180
00:16:14,370 --> 00:16:22,670
Make that the action by going to your gesture recognizer and writing selector and the function that

181
00:16:22,680 --> 00:16:27,200
will get called when you long press something is going to be rotate.

182
00:16:29,530 --> 00:16:30,490
OK.

183
00:16:30,910 --> 00:16:36,070
Now rotate is not exposed to Objective-C so we should get an error pretty soon.

184
00:16:37,200 --> 00:16:43,520
The error shows up and it's telling us to expose it to Objective-C by clicking thicks.

185
00:16:43,770 --> 00:16:44,980
And there you go.

186
00:16:44,990 --> 00:16:51,050
Now add our gesture to this scene view just like we did before with every single other gesture by writing

187
00:16:51,090 --> 00:16:58,020
software that scene view that gesture recognizer at Long press gesture writing Nizer.

188
00:16:58,430 --> 00:16:59,060
OK.

189
00:17:00,070 --> 00:17:07,450
So when I hold my finger on the scene view this function should get called inside of the function.

190
00:17:07,450 --> 00:17:08,080
Right.

191
00:17:08,110 --> 00:17:12,740
If gesture or inside of the function.

192
00:17:12,750 --> 00:17:13,350
Right.

193
00:17:13,370 --> 00:17:19,480
If sender does state is equal to begin.

194
00:17:19,560 --> 00:17:25,350
So if I'm currently pressing somewhere in the scene view if I'm currently holding my finger somewhere

195
00:17:25,770 --> 00:17:39,060
but a print statement of holding else if sender that state is equal to dot ended put a print statement

196
00:17:39,120 --> 00:17:42,440
of a released finger.

197
00:17:42,810 --> 00:17:45,710
I'm not holding my finger on the same view anymore.

198
00:17:46,080 --> 00:17:49,360
Run the app to see if this works so.

199
00:17:49,430 --> 00:17:55,530
So if I hold my finger on the View it prints holding and if I let go it prints or at least finger this

200
00:17:55,530 --> 00:17:56,930
is looking good.

201
00:17:57,030 --> 00:18:00,290
Now I'm going to add a cup to this horizontal surface.

202
00:18:00,300 --> 00:18:02,270
Wait till the plane is detected.

203
00:18:03,720 --> 00:18:11,500
Once my label shows up the plane was detected I had your cup and now I want it to start if I hold the

204
00:18:11,500 --> 00:18:12,770
cup it rotates.

205
00:18:12,790 --> 00:18:15,340
I explained this before but this is just from there minor.

206
00:18:15,580 --> 00:18:19,750
So if your controller know that the scene view we're pressing on is an arcade scene.

207
00:18:19,920 --> 00:18:24,080
So right last scene view is equal to sender.

208
00:18:24,100 --> 00:18:32,210
Doug you as a market sink you I'm hoping that you're starting to notice the pattern between all these

209
00:18:32,290 --> 00:18:37,990
wide gesture recognizers.

210
00:18:38,000 --> 00:18:41,910
Anyway back to your road take gesture recognizer.

211
00:18:42,000 --> 00:18:46,670
We need to get the location of where you're holding your finger by writing left fold.

212
00:18:46,830 --> 00:18:55,310
Location is equal to sender in that location inside of the scene you

213
00:18:58,390 --> 00:19:00,710
so great seeing you right here.

214
00:19:02,670 --> 00:19:08,680
And now we need to check if the location where I'm holding my finger matches the location of an object

215
00:19:09,180 --> 00:19:11,500
past the video and try to figure that one out.

216
00:19:12,850 --> 00:19:19,290
So as we've done it twice before with the other gesture recognizers we need to do a hit test.

217
00:19:19,330 --> 00:19:24,310
So right him test is equal to seen fume.

218
00:19:24,530 --> 00:19:28,890
Don't hit test hold location.

219
00:19:32,780 --> 00:19:38,500
This checks if the location where you're holding your finger matches the location of an object.

220
00:19:38,600 --> 00:19:43,880
If it does the hit test array will have one element of results such that that element of results is

221
00:19:43,880 --> 00:19:47,930
the first one the hit test will have one element of results.

222
00:19:47,930 --> 00:19:52,340
Otherwise if the location where you're holding your finger does not match the location of any object

223
00:19:52,340 --> 00:19:53,190
in the scene.

224
00:19:53,450 --> 00:19:55,310
And the hit test will be empty.

225
00:19:55,550 --> 00:20:04,010
So inside of your gesture recognizer if hit test is empty and your exclamation mark to make a bully

226
00:20:04,010 --> 00:20:06,840
in shock of if hit test is not empty.

227
00:20:10,210 --> 00:20:16,980
We're going to start rotating our node so right leg result is equal to hit.

228
00:20:16,980 --> 00:20:23,290
Test the first remember that results are always the first element in the test.

229
00:20:23,310 --> 00:20:23,880
Right.

230
00:20:23,880 --> 00:20:30,040
Since we're not spending any other results there's only one get the note from the results by writing

231
00:20:30,260 --> 00:20:32,560
node is equal to result.

232
00:20:32,760 --> 00:20:37,410
Darton code we want to rotate the Snoad with an LCN action.

233
00:20:37,450 --> 00:20:45,100
So when we're building the object one more pressing on it right like action is equal to SC and action

234
00:20:45,970 --> 00:20:50,650
rotate by the X is going to be left as your.

235
00:20:50,950 --> 00:20:56,580
And as for the y value we're going to rotate the note 360 degrees around itself.

236
00:20:56,800 --> 00:21:03,040
But you need this to be ingredients this extension is inside of your resources folder.

237
00:21:03,040 --> 00:21:11,750
We've used it many times before and we're about to use that again to convert degrees 360 degrees tradition's.

238
00:21:11,840 --> 00:21:18,450
As for these add value we're not going to rotate clockwise so make sure this is zero and the duration.

239
00:21:18,460 --> 00:21:23,790
So it's going to take a note about 1 second for it to rotate around itself.

240
00:21:24,140 --> 00:21:28,660
We're going to make sure that this rotation we just call this rotation.

241
00:21:28,810 --> 00:21:37,290
So we're going to make sure that this rotation last forever by writing forever is equal to se an action

242
00:21:37,580 --> 00:21:42,470
that repeat forever rotation.

243
00:21:43,740 --> 00:21:49,230
If you're confused about CNA actions make sure to visit the planet section of this course and we have

244
00:21:49,230 --> 00:21:53,940
a bug which is telling us to convert our values to C.G. float.

245
00:21:53,940 --> 00:21:54,860
Fair enough.

246
00:21:54,900 --> 00:21:57,430
And now right now and you know what.

247
00:21:57,440 --> 00:22:00,780
Just directly apply the animation to result in no.

248
00:22:00,780 --> 00:22:02,050
So delete this.

249
00:22:02,280 --> 00:22:08,470
So right result that node Dot run action forever.

250
00:22:08,490 --> 00:22:12,160
So we just find this forever rotation to the know that we're holding.

251
00:22:12,360 --> 00:22:15,610
So here's a summary by I long press on any node.

252
00:22:15,660 --> 00:22:20,190
The test succeeds and the node rotates forever.

253
00:22:20,700 --> 00:22:22,830
However when I release the node.

254
00:22:23,310 --> 00:22:31,830
So when I take my finger off make sure to start the animations by writing result that node remove all

255
00:22:31,830 --> 00:22:38,260
actions ok delete the Prince came in it was just for a demonstration purposes and run the

256
00:22:42,280 --> 00:22:48,770
wait till the world origin loads try and detect as much of your environment as possible as it's floating.

257
00:22:50,950 --> 00:22:57,170
Here is my world origin and if I point this phone to this on the surface I'm going to wait till my label

258
00:22:57,170 --> 00:23:01,450
shows up here's my signal add your cup.

259
00:23:01,480 --> 00:23:02,770
Now if I hold the cup

260
00:23:08,460 --> 00:23:09,810
the cup starts rotating.

261
00:23:09,810 --> 00:23:11,290
This is pretty awesome.

262
00:23:12,110 --> 00:23:12,630
OK.

263
00:23:12,670 --> 00:23:14,270
There is one more thing to do.

264
00:23:14,290 --> 00:23:16,770
It kind of took a while for it to start rotating.

265
00:23:16,930 --> 00:23:19,540
I can control this by going to X code.

266
00:23:20,840 --> 00:23:28,280
And into your gesture recognizers and the right long press just recognizer minimum press duration is

267
00:23:28,280 --> 00:23:30,170
equal to 0.1.

268
00:23:30,440 --> 00:23:38,330
So 0.1 seconds after I first touch the cup it should start rotating.

269
00:23:38,730 --> 00:23:45,480
OK wait till your world origin shows up trying to take as much of the environment as possible.

270
00:23:45,600 --> 00:23:50,540
There is a world origin right behind us and if I point to this horizontal surface.

271
00:23:50,700 --> 00:23:53,700
Wait till the label shows up to give me the signal that we're good.

272
00:23:53,700 --> 00:23:56,430
It just did add your cup.

273
00:23:56,430 --> 00:23:59,790
Now if I hold the cup everything works fine.

274
00:24:02,440 --> 00:24:07,380
There is a bug however if I rotate the table it doesn't rotate around itself.

275
00:24:07,770 --> 00:24:09,810
To explain this go in X code.

276
00:24:09,840 --> 00:24:11,580
And here is what's up.

277
00:24:11,610 --> 00:24:15,780
For example the cup is rotating around a pivot point.

278
00:24:15,780 --> 00:24:17,340
This is the pivot point right here.

279
00:24:17,340 --> 00:24:21,860
These arrows the pivot point is positioned exactly where the cup is.

280
00:24:21,990 --> 00:24:25,500
So the cup is basically rotating around itself.

281
00:24:25,590 --> 00:24:32,820
As for the table for example the pivot point and the table are located in different locations so the

282
00:24:32,820 --> 00:24:37,880
table will not rotate around that self it rotates around the pivot points location.

283
00:24:37,890 --> 00:24:44,290
We need to position the pivot point exactly where the table is so that the table rotates around itself.

284
00:24:44,310 --> 00:24:50,430
Unfortunately we can't physically position it in the interface builder X code doesn't allow it but we

285
00:24:50,430 --> 00:24:51,830
can do it with code.

286
00:24:52,200 --> 00:24:56,900
So into your view controller this function is inside of your resources folder.

287
00:24:56,930 --> 00:25:02,850
It centers the pivot point exactly where your node is about Make sure to copy this function into your

288
00:25:02,850 --> 00:25:11,030
view controller and into an item when we're first adding that table right after you position your node.

289
00:25:11,610 --> 00:25:13,580
If the node your positioning as a table.

290
00:25:13,650 --> 00:25:23,390
So if selected item is equal to table make sure the pivot point is centered around your table saw itself

291
00:25:23,800 --> 00:25:32,170
does center pivot node run the ones I detect you surface.

292
00:25:32,190 --> 00:25:37,180
Make sure to add your table.

293
00:25:37,260 --> 00:25:45,660
There is a table now five table it rotates around itself not around another position.

294
00:25:45,710 --> 00:25:50,170
Now it's hard to see because the table was perfectly around and it's a uniform black color.

295
00:25:50,330 --> 00:25:51,920
But the bug is actually gone.

296
00:25:51,920 --> 00:26:00,320
Finally there is one last thing I want to add to this app which is lighting by writing self scene view.

297
00:26:00,510 --> 00:26:06,300
Auto enables default lighting is equal to true since lighting just makes everything look better in general

298
00:26:06,360 --> 00:26:13,040
by providing an omni directional light in all directions of the scene if you run the app OK now now

299
00:26:13,230 --> 00:26:15,170
is finally complete.

300
00:26:18,650 --> 00:26:23,960
You learn how to effectively hit test and place objects onto horizontal surfaces.

301
00:26:29,520 --> 00:26:38,060
And add many gesture recognizers such as scaling and rotating in the next section we're going to apply

302
00:26:38,060 --> 00:26:42,270
all our knowledge and make it pretty cool game with planes and surfaces.
