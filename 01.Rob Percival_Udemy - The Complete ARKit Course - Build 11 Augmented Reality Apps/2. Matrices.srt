1
00:00:00,260 --> 00:00:03,840
This section we're going to learn how to measure distances in the real world.

2
00:00:05,640 --> 00:00:08,690
ESOP is very simple when you type on the scene.

3
00:00:08,800 --> 00:00:14,750
It places a starting point and from the starting point you can measure the distance traveled.

4
00:00:15,210 --> 00:00:21,530
Open up X code create a new project a single application called the project.

5
00:00:21,540 --> 00:00:23,920
They are measuring press next.

6
00:00:24,000 --> 00:00:32,210
And create like always go to the main storyboard into your controller and they are kids in view.

7
00:00:32,490 --> 00:00:34,740
I hope you know what an etiquette scene give you is by now.

8
00:00:34,740 --> 00:00:37,550
We've used it in every single app.

9
00:00:37,560 --> 00:00:45,870
Expand it to the edges of your super view and pin the market scene to the top bottom leading and trailing

10
00:00:45,870 --> 00:00:53,920
space inside of our seat of view we need a stock view to place all of our labels in the stock view is

11
00:00:53,990 --> 00:00:57,500
just going to be on top inside of the stack.

12
00:00:57,770 --> 00:01:06,540
For labels one here another label.

13
00:01:06,600 --> 00:01:07,740
There you go.

14
00:01:07,860 --> 00:01:15,750
Once you add your four labels go to your stock view and we're going to need a spacing of 25 pixels between

15
00:01:15,750 --> 00:01:16,920
each label.

16
00:01:17,040 --> 00:01:23,670
Align the stock view horizontally inside of the scene of view and place it a bow 30 pixels from the

17
00:01:23,670 --> 00:01:26,380
top for each label.

18
00:01:26,380 --> 00:01:28,640
I'm going to put a background color of white.

19
00:01:28,720 --> 00:01:33,100
So good to the attributes Inspektor into your background.

20
00:01:33,220 --> 00:01:36,250
Put a background of white or whatever color you choose.

21
00:01:36,250 --> 00:01:40,990
I've found white to be a good color for this up background snow.

22
00:01:41,030 --> 00:01:44,890
There you go for this label as well.

23
00:01:51,380 --> 00:02:02,700
The first label I will call distance the other 3 x y and now I have been to the middle of your extreme

24
00:02:02,930 --> 00:02:07,300
view and align it horizontally and vertically to your scene view

25
00:02:10,490 --> 00:02:20,190
give the bun a width and height of 40 pixels by going to your constraints spar with a 40 height of 40.

26
00:02:20,210 --> 00:02:34,100
Remove the text we have at the moment and in your assets folder an image set called AD and inside of

27
00:02:34,100 --> 00:02:39,240
your resources folder there are image assets of a plus symbol.

28
00:02:39,290 --> 00:02:44,600
Drag those images into your assets folder.

29
00:02:44,600 --> 00:02:47,180
This didn't work out so well.

30
00:02:47,180 --> 00:02:49,540
Let me just add them all individually.

31
00:02:49,580 --> 00:02:58,080
This one out of 12 something is going to drop times two times three back into your main storyboard give

32
00:02:58,080 --> 00:03:03,810
the above the image that we just put in the assets folder by going to the attributes inspector and inside

33
00:03:03,810 --> 00:03:04,800
of image.

34
00:03:04,830 --> 00:03:09,730
Put the odd button and make sure the burn is aspect fit.

35
00:03:09,730 --> 00:03:15,370
Now open up the assistant editor and connect every label to your controller with an idea.

36
00:03:15,760 --> 00:03:17,600
Start with this one.

37
00:03:17,920 --> 00:03:19,710
Call this label distance

38
00:03:22,790 --> 00:03:26,630
this one will be named X X label

39
00:03:30,720 --> 00:03:31,410
y label

40
00:03:35,740 --> 00:03:42,180
and Zed label and lastly connect you're seeing view within IBM that as well call this one scene view

41
00:03:43,570 --> 00:03:46,810
close up the assistant editor and back to our Wii controller.

42
00:03:46,810 --> 00:03:51,240
The next step to get Eric working is something we've done a million times before.

43
00:03:51,340 --> 00:03:54,600
I want you to pause the video and try to do it yourself this time.

44
00:03:58,940 --> 00:04:07,040
First off we need to import a kit to use the air framework and declare a constant configuration equal

45
00:04:07,040 --> 00:04:10,030
to our world tracking session configuration.

46
00:04:10,030 --> 00:04:16,490
In order to track the phones orientation and position at all times now we need to run a scene view session

47
00:04:17,420 --> 00:04:18,710
with that configuration

48
00:04:22,120 --> 00:04:27,370
and it's always good to debug options to see if every feature points are working and we're our world

49
00:04:27,370 --> 00:04:28,540
origin is.

50
00:04:28,810 --> 00:04:32,090
So make it equal to an array type of debug options.

51
00:04:32,110 --> 00:04:39,670
Or C and debug options does show a world origin and a r s n d about other options does show feature

52
00:04:39,670 --> 00:04:40,260
points

53
00:04:43,400 --> 00:04:45,010
now into your input list.

54
00:04:45,050 --> 00:04:56,020
Declare a property privacy camera a user's description this property prompts the user to give the phone

55
00:04:56,050 --> 00:05:05,640
access to the camera at a descriptive message of your choice such as you need the camera for cool market

56
00:05:05,710 --> 00:05:08,070
content.

57
00:05:08,200 --> 00:05:11,110
Now run your app to make sure that everything is fine.

58
00:05:12,280 --> 00:05:14,630
And everything looks pretty good so far.

59
00:05:14,630 --> 00:05:19,550
Now whenever you tap on the screen we want to display a note right in front of the camera to indicate

60
00:05:19,550 --> 00:05:21,140
the user starting position.

61
00:05:21,950 --> 00:05:25,870
To trigger a tap on a screen we need a tap just a recognizer.

62
00:05:25,970 --> 00:05:30,890
So go to your view controller in the right leg tap gesture

63
00:05:33,300 --> 00:05:40,140
recognizer is equal to UI type gesture recognizer.

64
00:05:40,140 --> 00:05:42,450
The target will be self.

65
00:05:42,960 --> 00:05:49,440
And as for the action the function that we want to trigger when we tap the screen is the following phunk

66
00:05:49,530 --> 00:05:59,670
handle top with arguments sender of type you tap gesture recognizer and no return value.

67
00:06:00,800 --> 00:06:06,080
I had this tier action by writing selector handle type

68
00:06:10,940 --> 00:06:16,470
and since selector is an objective argument we just have to expose handle top to Objective-C by just

69
00:06:16,470 --> 00:06:17,550
writing the following.

70
00:06:17,580 --> 00:06:19,550
And we're good to go now.

71
00:06:19,570 --> 00:06:26,280
And this tab just to recognize or to the scene view by writing self scene view does it add gesture recognizer

72
00:06:27,120 --> 00:06:35,550
top just to recognize So whenever we tap the scene view this function will get triggered and remember

73
00:06:35,550 --> 00:06:37,850
that whenever the top just recognizer gets triggered.

74
00:06:37,850 --> 00:06:40,770
It gives us information in the form of a sender.

75
00:06:40,770 --> 00:06:46,170
We're going to use the sender to clear the view that we tapped on by writing Gardella scene.

76
00:06:46,170 --> 00:06:57,560
View is equal to sender view as a cricket scene if you else return if the view that was topped on is

77
00:06:57,560 --> 00:07:02,380
in our kids same view then proceed otherwise return.

78
00:07:02,380 --> 00:07:07,690
Now I'm sure that the view that was tacked on is in a case of you since we registered this register

79
00:07:07,690 --> 00:07:09,440
recognize your to obscene view.

80
00:07:09,650 --> 00:07:13,200
So only if we tap the scene view will this function get triggered.

81
00:07:13,290 --> 00:07:17,650
But this guard statement is just for good practice it's not always good to forcefully interrupt things

82
00:07:18,120 --> 00:07:18,800
anyway.

83
00:07:18,940 --> 00:07:23,800
Whenever the user taps the scene we want to display a note right in front of where the phone is already

84
00:07:23,800 --> 00:07:25,120
positioned.

85
00:07:25,120 --> 00:07:32,460
This is something we've done before in the drawing up.

86
00:07:32,540 --> 00:07:37,550
I'm not going to reuse the code from the drawing up since I want you to get more familiar with other

87
00:07:37,550 --> 00:07:42,920
types of matrices as you will be dealing with them a lot when making a circuit ops.

88
00:07:42,980 --> 00:07:47,510
So first off declare a sphere node by writing the sphere is equal to.

89
00:07:47,540 --> 00:07:52,150
I see a node with geometry as CN sphere

90
00:07:54,910 --> 00:08:03,880
with a radius zero point zero zero five meters that's five millimeters give the sphere a diffuse color

91
00:08:03,880 --> 00:08:15,040
of yellow by writing sphere geometry the first material that diffuse the contents is equal to you color

92
00:08:15,530 --> 00:08:16,630
dot yellow.

93
00:08:16,630 --> 00:08:19,770
Now how do we position this fear right in front of the camera.

94
00:08:20,200 --> 00:08:25,330
So with your current knowledge and from what you've learned and suction to this is what you would do

95
00:08:25,660 --> 00:08:30,580
you would get the point of view of the scene view since the point of view can change the current location

96
00:08:30,580 --> 00:08:32,740
and orientation of your camera view.

97
00:08:33,160 --> 00:08:37,860
However I'm going to approach this another way instead of getting the current point of view of the same

98
00:08:37,870 --> 00:08:38,730
view.

99
00:08:38,800 --> 00:08:48,660
We're just going to get the current frame by guard letting guard let current friend is equal to seeing

100
00:08:48,710 --> 00:08:56,630
view that session current friend else return

101
00:09:00,170 --> 00:09:05,180
the current frame represents the frame that was just rendered from the current frame you can access

102
00:09:05,180 --> 00:09:06,930
the camera property.

103
00:09:06,980 --> 00:09:11,510
So right like camera is equal to

104
00:09:14,430 --> 00:09:21,990
current friend dock camera and this camera property gives us information about the current position

105
00:09:22,320 --> 00:09:26,340
orientation and imaging parameters of the camera.

106
00:09:26,340 --> 00:09:30,160
All of this information is encoded in a transformed matrix.

107
00:09:30,270 --> 00:09:40,770
So right let transform is equal to camera that transform this transform is a four by four matrix and

108
00:09:40,770 --> 00:09:44,310
therefore encodes the exact position of our phone.

109
00:09:44,340 --> 00:09:52,050
Now our Sfeir node also has a transform matrix to encode its position however its transformed matrix

110
00:09:52,140 --> 00:09:57,000
at the moment is just a standard linearly independent matrix.

111
00:09:57,000 --> 00:10:00,480
It contains no information on the nodes position.

112
00:10:00,480 --> 00:10:06,600
Now if I set the nodes transform matrix equal to the transform matrix of the phone's current position

113
00:10:06,900 --> 00:10:08,420
Sarette sphere.

114
00:10:08,460 --> 00:10:10,210
SIMD transform.

115
00:10:10,320 --> 00:10:13,080
This is how you access the transfer matrix of the sphere.

116
00:10:13,170 --> 00:10:19,680
It's a 4 by 4 Matrix just like this one and set it equal to the transform which encodes the current

117
00:10:19,680 --> 00:10:22,720
position of the phone.

118
00:10:22,980 --> 00:10:27,950
Then the node is going to be positioned exactly where the phone is currently positioned.

119
00:10:28,140 --> 00:10:34,260
Since its transfer matrix now also encoded the current position of the phone therefore the node will

120
00:10:34,260 --> 00:10:36,880
be positioned exactly where the phone is.

121
00:10:37,170 --> 00:10:46,050
Finally just add the note to the scene view by writing self does scene view that scene a root node.

122
00:10:46,210 --> 00:10:52,530
Add child node sphere and now just run the app

123
00:10:56,200 --> 00:11:01,340
wait till the world origin loads once it loads top the screen view.

124
00:11:01,960 --> 00:11:07,490
Right now the node is positioned exactly where my phone is so if I go back I should be able to see it.

125
00:11:08,940 --> 00:11:11,470
And here is our starting position.

126
00:11:11,790 --> 00:11:18,060
Now it's a bit annoying that every time I tap on the scene of view like right now I have to go back

127
00:11:18,120 --> 00:11:20,230
to see the starting position.

128
00:11:20,400 --> 00:11:26,160
I want the starting position to show up right in front of my camera view right in front of me were this

129
00:11:26,160 --> 00:11:27,530
plus sign.

130
00:11:27,630 --> 00:11:33,180
So instead of putting the know exactly where your phone is why not just move it about 10 centimeters

131
00:11:33,180 --> 00:11:34,250
away.

132
00:11:34,290 --> 00:11:36,260
How would I even do this.

133
00:11:36,360 --> 00:11:44,500
First off print the transformer of the camera print transform run the app

134
00:11:48,490 --> 00:11:50,600
move away from your old origin.

135
00:11:51,960 --> 00:11:57,650
Top on the screen and this right here is your transform matrix back to your debugger.

136
00:11:57,660 --> 00:12:01,410
This right here is the transform of the camera.

137
00:12:01,410 --> 00:12:03,060
It is a matrix.

138
00:12:03,060 --> 00:12:10,900
And I remember that we said the transform of the camera encodes the exact position of the camera whereas

139
00:12:10,920 --> 00:12:15,420
that position encoded it's inside of the third column.

140
00:12:15,420 --> 00:12:20,870
This right here is called them the Missouri column number one column number two.

141
00:12:21,090 --> 00:12:22,730
And this is call them number three.

142
00:12:22,740 --> 00:12:26,310
All we care about is this column in this column.

143
00:12:26,310 --> 00:12:31,830
This represents the phone's current exposition relative to the world origin.

144
00:12:31,830 --> 00:12:37,230
This isn't the y position Zad position and we don't care about the fourth argument.

145
00:12:37,230 --> 00:12:39,750
All we've ever dealt with was X Y and Z.

146
00:12:39,990 --> 00:12:47,580
So when I tap the scene view the phone was currently zero point to seven meters to the right of the

147
00:12:47,580 --> 00:12:48,990
world origin.

148
00:12:48,990 --> 00:12:53,130
It was 0.07 meters above the world origin.

149
00:12:53,580 --> 00:12:58,470
And it was zero point two meters away from the world origin behind it.

150
00:12:58,470 --> 00:12:59,730
Notice the negative.

151
00:13:00,060 --> 00:13:06,890
And since we're giving the sphere nodes transform these exact same values the sphere know will also

152
00:13:06,910 --> 00:13:15,280
be 0.7 meters so the rest of the world origin 0.07 meters above it and 0.2 metres behind it so exactly

153
00:13:15,280 --> 00:13:20,850
where the is I don't want to position the sphere exactly where my phone is.

154
00:13:21,200 --> 00:13:28,520
I want to position in the point of view of my camera which is by default 0.1 metres away from the current

155
00:13:28,520 --> 00:13:30,120
position of the phone.

156
00:13:30,710 --> 00:13:37,010
So had we just copied the code we had for the drawing up which already places the node and the point

157
00:13:37,010 --> 00:13:42,860
of view of the camera it would have already placed our sphere 0.1 metres away from the current position

158
00:13:42,860 --> 00:13:44,750
of the phone in the point of view.

159
00:13:45,230 --> 00:13:48,320
But for the sake of learning more about matrices let's do it the hard way.

160
00:13:49,100 --> 00:13:55,190
So instead of putting our sphere exactly where my phone is I'm going to put it 0.1 metres away from

161
00:13:55,190 --> 00:13:57,020
the current position behind it.

162
00:13:57,230 --> 00:14:03,560
How will I do this while I need to modify the zent position of this matrix.

163
00:14:03,560 --> 00:14:08,510
Remember that these that position controls how far or how close you are to your apparent node.

164
00:14:08,870 --> 00:14:12,480
In our case the parent node is the seen news world origin.

165
00:14:12,590 --> 00:14:19,970
I'm going to modify the value of this transform matrix by subtracting negative points 0 2 with 0.1.

166
00:14:20,510 --> 00:14:26,900
So finally everything the same the node will be positioned exactly where the phone is which is 0.2 meters

167
00:14:26,900 --> 00:14:28,660
behind the world origin.

168
00:14:28,820 --> 00:14:36,290
And if I substracted by 0.1 the node will be in the point of view of the camera 0.1 meters behind the

169
00:14:36,290 --> 00:14:43,070
current position of the phone which would be negative zero point three meters behind the world origin.

170
00:14:43,070 --> 00:14:46,590
Now to modify a matrix you need another matrix.

171
00:14:46,700 --> 00:14:54,800
So declare in other matrix by writing Vire translation matrix is equal to Matrix

172
00:14:57,220 --> 00:15:00,150
identity four by four.

173
00:15:00,160 --> 00:15:03,360
So we just declared a four by four matrix.

174
00:15:03,460 --> 00:15:07,930
We're going to multiply this matrix to modify this one.

175
00:15:07,930 --> 00:15:14,320
Right now this matrix is linearly independent which means that we didn't give this matrix any values

176
00:15:14,320 --> 00:15:16,060
right now which equals 1.

177
00:15:16,150 --> 00:15:21,600
If you multiply anything by 1 nothing with change five times one is still five.

178
00:15:21,610 --> 00:15:28,420
So by multiplying this transform matrix by 1 this transform matrix would not change at all.

179
00:15:28,450 --> 00:15:34,960
So we need to modify this one access the third column of this transform matrix by writing translation

180
00:15:34,960 --> 00:15:35,470
matrix

181
00:15:38,010 --> 00:15:48,770
Daut columns 3 and change its value to negative 0.1.

182
00:15:49,300 --> 00:15:58,060
Now declare a new matrix var modified matrix is equal to

183
00:16:02,200 --> 00:16:05,050
SIMD Muhl.

184
00:16:05,080 --> 00:16:08,260
So we're going to multiply two matrices.

185
00:16:08,260 --> 00:16:19,920
We're going to multiply the transform of the camera's current position by the translation transform.

186
00:16:19,920 --> 00:16:22,380
Now this is not a linear algebra course.

187
00:16:22,410 --> 00:16:28,770
I won't teach you how transform multiplication works just know that the only value we changed in this

188
00:16:28,770 --> 00:16:35,460
matrix is the said field in the third column which makes sense since we want to modify the value of

189
00:16:35,460 --> 00:16:38,370
this Zed field which is in the third column.

190
00:16:38,820 --> 00:16:46,410
So by multiplying these two matrices these two values since they are both in the same column and are

191
00:16:46,410 --> 00:16:50,270
both Zad values are going to be added.

192
00:16:50,580 --> 00:16:59,250
So a negative 0.2 plus minus 0.1 which is simply negative 0.2 minus 0.1 would equal negative 0.3.

193
00:16:59,290 --> 00:17:04,950
None of these other values will change since we only modified these add value of the third column.

194
00:17:05,370 --> 00:17:12,780
And so by giving the sphere know this transform it will now be 0.1 metres away from the current position

195
00:17:12,780 --> 00:17:13,450
of the phone.

196
00:17:13,530 --> 00:17:18,420
As soon as we tap on the scene view run the app to see if that's the case.

197
00:17:19,610 --> 00:17:24,320
If I just wait till the world origin loads and then tap on the scene view

198
00:17:27,410 --> 00:17:33,110
the sphere shows up right in the point of view of the camera 10 centimeters away from the current position

199
00:17:33,110 --> 00:17:34,460
of the phone.

200
00:17:34,550 --> 00:17:40,430
Now that we set up the starting position of our node in the next video we're going to start making measurements

201
00:17:40,490 --> 00:17:42,430
relative to our starting position.
