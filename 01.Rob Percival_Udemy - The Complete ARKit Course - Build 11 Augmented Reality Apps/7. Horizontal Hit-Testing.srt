1
00:00:00,220 --> 00:00:03,380
In the last video we set up the user interface of our up.

2
00:00:03,390 --> 00:00:06,830
Now it's time to start placing items on horizontal surfaces.

3
00:00:07,140 --> 00:00:11,250
First off I placed these 3D models in your resources folder.

4
00:00:11,250 --> 00:00:16,020
If you don't know how to download or use 3D models make sure you visit lecture two of the 3D models

5
00:00:16,020 --> 00:00:21,410
section of this course before proceeding with this video anyway into your school project.

6
00:00:21,420 --> 00:00:27,850
Make sure to drag this folder create folder references and press vinous.

7
00:00:27,880 --> 00:00:33,940
Now your first challenge is to apply what you learned in lecture 2 of the 3D model section and fix the

8
00:00:33,940 --> 00:00:38,030
orientation of these models as the video and give it a try.

9
00:00:42,090 --> 00:00:45,410
Now that you've tried it I'm going to start with the boxing bag.

10
00:00:45,690 --> 00:00:52,800
So click on perspective and we want to see how the boxing bag looks like when it's in front of us.

11
00:00:52,890 --> 00:00:58,890
So from this you can conclude that when the boxing bag is in front of us you can only see the bottom

12
00:00:58,890 --> 00:01:00,190
of it.

13
00:01:00,210 --> 00:01:04,830
We need to rotate the bag 90 degrees such that it's in front of us vertically.

14
00:01:05,220 --> 00:01:12,090
So click on the boxing bag and go to the node inspector and rotate it 90 degrees in the field to get

15
00:01:12,090 --> 00:01:19,880
a horizontal rotation so right 90 it's vertical but it's facing the wrong direction it's upside down.

16
00:01:19,990 --> 00:01:26,440
So instead of rotating it at 90 degrees towards us rotate it 90 degrees in the other direction by putting

17
00:01:26,440 --> 00:01:28,040
in negative.

18
00:01:28,380 --> 00:01:34,820
Now things still look a little bit off and the reason is that the boxing bag is made up of four cylinders

19
00:01:35,390 --> 00:01:38,700
one cylinder on top and three on the bottom.

20
00:01:38,720 --> 00:01:44,300
We need to rotate the bottom cylinders as well by negative 90 to keep things consistent.

21
00:01:44,540 --> 00:01:47,260
So start with this one and instead of zero.

22
00:01:47,300 --> 00:01:51,380
Put negative 90 do the same thing for the second cylinder.

23
00:01:51,380 --> 00:01:54,570
This is the inner cylinder of the bottom.

24
00:01:55,160 --> 00:02:00,710
And this is also another cylinder that's on the bottom so make sure to rotate that by negative 90 degrees

25
00:02:01,340 --> 00:02:03,230
and things are looking good.

26
00:02:03,230 --> 00:02:08,270
Now it's important to note that I didn't purposely mess up the orientation of this boxing bag for this

27
00:02:08,270 --> 00:02:09,260
lesson.

28
00:02:09,320 --> 00:02:11,480
Whenever you download a 3D model.

29
00:02:11,480 --> 00:02:14,610
More often than not it's going to be disoriented.

30
00:02:15,230 --> 00:02:21,930
So now to fix the girl on the front perspective to see how the cup looks like when it's in front of

31
00:02:21,930 --> 00:02:26,200
us and the cup looks good it oriented the right way.

32
00:02:26,490 --> 00:02:35,600
Now to try the table click on the front respective and the table top is pointing towards us.

33
00:02:35,760 --> 00:02:36,760
Go to the table.

34
00:02:36,770 --> 00:02:38,900
No inspector.

35
00:02:39,030 --> 00:02:45,440
And it looks like the tables are already rotated 9 degrees and fire remove this 90 degree rotation.

36
00:02:45,510 --> 00:02:47,350
Everything should look fine.

37
00:02:48,880 --> 00:02:54,920
I mean these reinsertion that OK and the table is now oriented the right way.

38
00:02:55,240 --> 00:02:57,250
Now for the vase.

39
00:02:57,250 --> 00:03:02,410
Click on the front perspective of the vase to see how it looks like in front of us and it looks like

40
00:03:02,410 --> 00:03:05,960
the top of the vase is what shows up when it's in front of us.

41
00:03:05,980 --> 00:03:10,140
So go to the node inspector and notice that it's rotated 90 degrees.

42
00:03:10,240 --> 00:03:14,310
Change that to zero remove the rotation and everything works fine.

43
00:03:15,130 --> 00:03:18,360
If this ever happens to us that DeMeo just disappears.

44
00:03:18,440 --> 00:03:24,310
Just click on the title and it should pop up in front of me and notice that now it's oriented the right

45
00:03:24,310 --> 00:03:25,060
way.

46
00:03:25,060 --> 00:03:28,900
Now we can place these models on a horizontal surface.

47
00:03:28,900 --> 00:03:38,810
Back to the Wii controller we need to be able to detect horizontal surfaces simply by writing self configuration.

48
00:03:39,300 --> 00:03:42,820
The plane detection is equal to horizontal

49
00:03:45,590 --> 00:03:50,740
and place starting with loads of started before the the session running before proceeding with this

50
00:03:50,740 --> 00:03:51,040
video.

51
00:03:51,040 --> 00:03:57,490
I'm going to rerun the finished version of the app so first I need to detect a horizontal surface when

52
00:03:57,490 --> 00:04:00,640
there is a lot of feature points for me around the surface like right now.

53
00:04:00,760 --> 00:04:07,240
You just detected a horizontal surface tap on it and the item shows up to our controller.

54
00:04:07,240 --> 00:04:11,040
We need to detect when to use your taps on the horizontal surface.

55
00:04:11,050 --> 00:04:23,710
We need a tap gesture recognized so declare a function func register gesture recognizers with no argument

56
00:04:23,710 --> 00:04:26,380
type and no return on inside of it.

57
00:04:26,380 --> 00:04:35,440
The Clarie top just recognizers lap top gesture recognizer is equal to you typed up gesture recognizer

58
00:04:35,980 --> 00:04:39,150
with target itself and the action.

59
00:04:39,280 --> 00:04:43,140
As I explained before is simply when you tap on something.

60
00:04:43,180 --> 00:04:45,230
What function gets triggered.

61
00:04:45,310 --> 00:04:54,370
Make a function taps on taps with no argument and no return value and set that as the action by writing

62
00:04:54,460 --> 00:05:01,440
selector to now selector is an objective argument.

63
00:05:01,490 --> 00:05:08,210
So just expose top to Objective C by clicking on the air and clicking on effects and the function is

64
00:05:08,210 --> 00:05:14,440
not exposed to Objective-C at the top just to recognize her to the scene to you by writing self does

65
00:05:15,480 --> 00:05:21,430
that add just the recognizer tab gesture recognition.

66
00:05:21,530 --> 00:05:25,990
Now whenever you touch on the scene view this function gets called.

67
00:05:26,380 --> 00:05:35,190
Put a print statement of taps on the scene you make sure you register the gesture recognizers into that

68
00:05:35,210 --> 00:05:39,330
load and run the.

69
00:05:39,350 --> 00:05:46,240
So whenever I tap on the scene view the function gets called and it prints out the scene view.

70
00:05:46,730 --> 00:05:48,680
This is working out pretty well.

71
00:05:48,800 --> 00:05:56,780
Now I need it such that only a fight on a horizontal plane like this for it should print top a horizontal

72
00:05:56,780 --> 00:05:57,500
plane.

73
00:05:57,890 --> 00:05:59,210
So back to X code.

74
00:05:59,210 --> 00:06:04,930
Delete this print statement and as we've seen before in a previous lecture at the top just the recognizer

75
00:06:04,940 --> 00:06:07,150
sends its auction top.

76
00:06:07,160 --> 00:06:14,890
In this case information on what was tapped it sends that information in the form of a sender of type

77
00:06:14,920 --> 00:06:18,120
you tap just a recognizer.

78
00:06:18,140 --> 00:06:23,400
First off we know that this seems top down is an aortic Simkins you're so right.

79
00:06:23,480 --> 00:06:30,920
Less is equal to sender dot viewed as a Arcade's seen it.

80
00:06:31,850 --> 00:06:34,800
Now we need to know where the user tapped in the scene view.

81
00:06:35,060 --> 00:06:44,390
So right like top location is equal to sender that location in the scene you know we need to know if

82
00:06:44,390 --> 00:06:50,320
the location in which the user tapped matches the location of a horizontal plane to do that.

83
00:06:50,340 --> 00:06:53,310
Remember his tests were about to use them again.

84
00:06:53,660 --> 00:07:00,110
So right like head test is equal to seen you hit test.

85
00:07:00,110 --> 00:07:04,260
The point that we're testing is where you tapped the top location.

86
00:07:04,850 --> 00:07:11,800
And these types will be existing or not existing plane using extents.

87
00:07:11,990 --> 00:07:17,810
What this line of code does is it checks if the location where you tapped matches the location of a

88
00:07:17,810 --> 00:07:20,360
plane a horizontal surface.

89
00:07:20,360 --> 00:07:23,900
If it does the hit task array is going to have results.

90
00:07:23,930 --> 00:07:29,680
One element of results is the location you touched doesn't match data.

91
00:07:29,690 --> 00:07:33,360
The horizontal surface then this test will be empty.

92
00:07:33,380 --> 00:07:43,430
So if the test array is not empty if test is empty and make sure to add the exclamation mark since the

93
00:07:43,430 --> 00:07:51,500
exclamation mark makes it such that if you hit us or right is not empty then print touched the horizontal

94
00:07:51,500 --> 00:07:57,500
surface touched a horizontal surface.

95
00:07:57,500 --> 00:08:06,240
However if the array is indeed empty and you didn't touch a horizontal surface just print no match run

96
00:08:06,240 --> 00:08:07,790
the app to see if this works.

97
00:08:10,350 --> 00:08:19,060
I'm going to wait till my device recognizes its environment and fire point my phone to the floor and

98
00:08:19,060 --> 00:08:20,920
wait till it be time for work.

99
00:08:20,920 --> 00:08:25,090
On the surface I think I just did because of all the feature points.

100
00:08:25,360 --> 00:08:30,090
And then if I tap it it should say touch a horizontal surface.

101
00:08:30,100 --> 00:08:36,870
Now if I point it anywhere and see you I'm not typing on a horizontal surface so it should say you know

102
00:08:37,900 --> 00:08:39,320
this works perfectly.

103
00:08:39,340 --> 00:08:45,760
Now what I need is just that if I select a certain item like the cup and tap on a horizontal surface

104
00:08:45,850 --> 00:08:51,470
it should display that in X code declare a function item.

105
00:08:51,720 --> 00:08:57,730
So func item where the argument had test results

106
00:09:01,710 --> 00:09:04,540
of type they are test results

107
00:09:07,770 --> 00:09:12,580
for some reason my autocomplete doesn't work with no return value.

108
00:09:14,440 --> 00:09:18,690
Call this function whenever you tap on a horizontal surface.

109
00:09:18,700 --> 00:09:21,760
So when we hit test array is not empty.

110
00:09:22,000 --> 00:09:27,070
So right here call self dot an item in array.

111
00:09:27,070 --> 00:09:29,500
Here we have to put our result.

112
00:09:29,530 --> 00:09:36,550
So when the top location the place where you tapped matches with a horizontal surface it's going to

113
00:09:36,550 --> 00:09:43,570
give this head test array one element of results such that it's the first element to access that element

114
00:09:43,620 --> 00:09:44,790
of results just right.

115
00:09:44,790 --> 00:09:49,550
Hit test does first start it's unwrapped.

116
00:09:49,750 --> 00:09:50,950
Delete these print statements.

117
00:09:50,950 --> 00:09:52,110
We don't need them anymore.

118
00:09:52,120 --> 00:09:54,950
They were just for demonstration purposes.

119
00:09:55,000 --> 00:10:01,170
Now in item we need to load the scene of the item that we want to place so the entire scene of the vase

120
00:10:01,180 --> 00:10:12,300
for example to do the right let's see is equal to c and c namely to access the name of the scene you

121
00:10:12,300 --> 00:10:14,550
have to start with the folder.

122
00:10:14,550 --> 00:10:20,270
So right model dot C and assets.

123
00:10:20,340 --> 00:10:23,210
Now how do we know which item to go to.

124
00:10:23,850 --> 00:10:27,890
Well it's based on which item the user selected.

125
00:10:27,900 --> 00:10:34,940
So first make sure that these strings match exactly your file names in terms of spelling.

126
00:10:34,980 --> 00:10:38,390
In my case they do match.

127
00:10:38,480 --> 00:10:44,180
You'll see quite a bit make a variable var selected item

128
00:10:47,480 --> 00:10:55,040
of type optional string and in that select set the selected item equal to whatever the user selected.

129
00:10:55,360 --> 00:11:01,170
So self selected item is equal to items array index.

130
00:11:01,230 --> 00:11:12,050
Dara and inside of an item if selected item is equal to self selected item.

131
00:11:12,240 --> 00:11:19,710
So if the user did select an item to place if the selected item variable is not know then navigate to

132
00:11:19,710 --> 00:11:22,430
the scene which has that item.

133
00:11:22,500 --> 00:11:27,870
So slash selected item.

134
00:11:27,990 --> 00:11:29,350
I see.

135
00:11:30,290 --> 00:11:39,290
So if I selected the item boxing it would go to model SDN assets and then to boxing s.c.i.

136
00:11:39,740 --> 00:11:43,560
And so from the scene we need to extract our note.

137
00:11:43,880 --> 00:11:48,050
So if I choose Vai's it would get the Vaizey seen.

138
00:11:48,110 --> 00:11:49,560
Now I need to get the vase.

139
00:11:49,580 --> 00:11:53,910
No that's inside of the see the vase is a child of the root node.

140
00:11:53,960 --> 00:12:03,380
So in the Wii controller or right node is equal to the root node child node and the child know what

141
00:12:03,410 --> 00:12:11,970
we want is what we select so selected make sure that the elements in your items Uren match your child

142
00:12:11,970 --> 00:12:13,000
notes.

143
00:12:13,130 --> 00:12:19,100
For example make sure that the child no Vinnies is spelled exactly the way this is spelled.

144
00:12:19,100 --> 00:12:26,390
Otherwise if I did let's say an extra e here and that was the selected item the name wouldn't match

145
00:12:26,510 --> 00:12:29,650
any of the child nodes and you wouldn't get any results.

146
00:12:29,690 --> 00:12:35,480
So it's really important that these names match with your child node so veins should be spelled exactly

147
00:12:35,480 --> 00:12:40,670
as Vai's and table is called and exactly as table is right here.

148
00:12:40,670 --> 00:12:46,290
So let's remove that and set recursively false.

149
00:12:46,430 --> 00:12:51,330
Remember that if recursively is true it checks the entire subtree of the root node.

150
00:12:51,560 --> 00:12:55,490
So basically that child of the child of a child of the root node etc..

151
00:12:55,640 --> 00:12:59,880
Whereas if it's false it only checks for the immediate children of the Rowton album.

152
00:13:00,290 --> 00:13:08,430
All these nodes so vains Cup are boxing are immediate children of their respective scenes rutin up.

153
00:13:08,720 --> 00:13:13,490
So we don't need to check the whole subthread so leave this as false.

154
00:13:13,490 --> 00:13:19,790
Now how do I position the items such that it's exactly on top of the horizontal surface.

155
00:13:19,820 --> 00:13:23,900
Well the hit test result has a transform matrix.

156
00:13:23,900 --> 00:13:29,200
We looked at transfer matrices when we did the drawing up to get the transform right.

157
00:13:29,210 --> 00:13:36,280
Let transform let transform is equal to it.

158
00:13:36,350 --> 00:13:44,990
Test results that world transform just like the other transform matrix we used before.

159
00:13:45,030 --> 00:13:49,390
This one also encodes information inside of columns and wraps.

160
00:13:49,420 --> 00:13:56,850
However this transformed matrix in particular encodes the position of a detected surface in the third

161
00:13:56,850 --> 00:13:58,070
column.

162
00:13:58,620 --> 00:14:00,120
That's exactly what we want.

163
00:14:00,150 --> 00:14:03,130
The position of the horizontal surface we detected.

164
00:14:03,240 --> 00:14:14,650
So right left there Calo is called to transform doc columns does three.

165
00:14:14,650 --> 00:14:18,250
So the third call now position the No.

166
00:14:18,330 --> 00:14:26,070
Right worthy detected surface is by writing no that position is equal to a C and vector three

167
00:14:29,030 --> 00:14:35,940
for the x value point third column X for the y of value as well.

168
00:14:35,960 --> 00:14:37,290
Third column not Y.

169
00:14:37,490 --> 00:14:42,160
And third column nonsense for these Belang.

170
00:14:42,410 --> 00:14:47,620
So now the item is positioned exactly where the plane was detected.

171
00:14:48,670 --> 00:14:54,360
Now that we positioned our nodes makes sure that the nodes aren't also positioned in nursing.

172
00:14:54,370 --> 00:14:57,200
This could mess up the positioning overall.

173
00:14:57,310 --> 00:15:05,080
For example if I go on the table scene and click on the table itself and the node inspector you'll see

174
00:15:05,080 --> 00:15:10,970
that the table also has nice positions on top of what we already have in the controller.

175
00:15:10,990 --> 00:15:13,650
Make sure to set everything here to zero.

176
00:15:13,660 --> 00:15:17,300
We don't want any of these positions.

177
00:15:17,580 --> 00:15:19,290
As for the cup.

178
00:15:19,800 --> 00:15:22,900
Click on the cup and everything seems fine here.

179
00:15:23,100 --> 00:15:24,710
Go to the vase.

180
00:15:24,720 --> 00:15:29,190
The vase is fine as well but as for the vase.

181
00:15:29,310 --> 00:15:31,240
Let me just go on the front perspective.

182
00:15:31,350 --> 00:15:35,430
Now I would rather the vase to be a color of brown instead of red.

183
00:15:35,430 --> 00:15:37,760
Since to me that makes a lot more sense.

184
00:15:37,890 --> 00:15:44,850
Click on the material inspector and inside of the fuse instead of having it being read go with something

185
00:15:44,850 --> 00:15:46,140
like Mocha

186
00:15:49,150 --> 00:15:51,030
and ask for the boxing bag.

187
00:15:51,670 --> 00:15:55,830
The boxing bag has many cylinders Chuck on each cylinder.

188
00:15:56,010 --> 00:16:00,610
Go to the note inspector and this one has positioning as well.

189
00:16:00,610 --> 00:16:05,140
Make sure this is juror and he said is 0 as well.

190
00:16:05,140 --> 00:16:13,490
Do it for the other cylinder 0 and 0 0 for the third cylinder.

191
00:16:14,410 --> 00:16:19,570
Do the same thing for the top cylinder.

192
00:16:19,860 --> 00:16:23,230
Ok everything should work fine right now.

193
00:16:23,670 --> 00:16:28,010
One more thing to note is that the boxing bag dimensions are way too big.

194
00:16:28,050 --> 00:16:29,740
The height is nine years.

195
00:16:29,760 --> 00:16:31,230
That is crazy.

196
00:16:31,320 --> 00:16:40,380
So make sure to scale everything down to a size of 0.2 of its original scale so zero point two times

197
00:16:40,380 --> 00:16:49,310
its original with your 0.2 times its original height and zero point two times its original.

198
00:16:49,320 --> 00:16:54,670
Now back to the Wii controller and the island to the scene by writing self.

199
00:16:54,930 --> 00:17:07,390
That scene here does seem that a root node that our child node node and finally we can run the app.

200
00:17:08,000 --> 00:17:11,370
There seems to be a problem this node is an optional.

201
00:17:11,480 --> 00:17:18,040
So make sure to wrap it by setting this in a parenthesis and unwrapping it like so.

202
00:17:18,110 --> 00:17:21,570
Remove this question mark and run the app again.

203
00:17:21,650 --> 00:17:25,510
I'm going to point my phone to the table once it recognizes it.

204
00:17:25,550 --> 00:17:28,490
I will choose a cup and it shows a cup.

205
00:17:28,760 --> 00:17:32,210
I will place the Vaizey right here and onto the floor.

206
00:17:32,210 --> 00:17:35,290
I'm going to find a good place for the boxing bag.

207
00:17:44,100 --> 00:17:47,740
Add another place for the table and there you go.

208
00:17:47,740 --> 00:17:54,580
We're actually placing household items inside of our house or in this case my office in the next video

209
00:17:54,580 --> 00:17:58,280
we're going to learn how to resize and rotate our items.
