1
00:00:00,040 --> 00:00:01,240
In this section,

2
00:00:01,240 --> 00:00:05,430
we reviewed how to create custom inbound and outbound channel adapters.

3
00:00:05,430 --> 00:00:09,330
Throughout the various integrations that we built in this course,

4
00:00:09,330 --> 00:00:14,480
we saw that inbound channel adapters typically work with MessageSources,

5
00:00:14,480 --> 00:00:18,340
and outbound channel adapters typically work with MessageHandlers.

6
00:00:18,340 --> 00:00:21,550
And we saw that we can build a custom inbound channel

7
00:00:21,550 --> 00:00:25,690
adapter by extending the abstract MessageSource class and

8
00:00:25,690 --> 00:00:27,940
overriding its doReceive method.

9
00:00:27,940 --> 00:00:30,710
And we could build custom outbound channel adapters by

10
00:00:30,710 --> 00:00:34,680
extending the abstract MessageHandler class and overriding

11
00:00:34,680 --> 00:00:37,140
its handleMessage internal method.

12
00:00:37,140 --> 00:00:38,430
So at this point,

13
00:00:38,430 --> 00:00:42,940
you should understand how to build custom inbound and outbound channel adapters.

14
00:00:42,940 --> 00:00:44,270
Throughout this course,

15
00:00:44,270 --> 00:00:47,890
we reviewed several of the more popular integrations that Spring

16
00:00:47,890 --> 00:00:54,410
Integration provides out of the box from AMQP and JMS message brokers to

17
00:00:54,410 --> 00:00:58,990
Apache Kafka, to relational databases, and Mongo DB,

18
00:00:58,990 --> 00:01:01,440
as well as RESTful web services.

19
00:01:01,440 --> 00:01:05,640
Now that you understand custom inbound and outbound channel adapters,

20
00:01:05,640 --> 00:01:09,200
you should be prepared to integrate with any system for which

21
00:01:09,200 --> 00:01:14,000
Spring Integration does not provide native support, so happy coding.

