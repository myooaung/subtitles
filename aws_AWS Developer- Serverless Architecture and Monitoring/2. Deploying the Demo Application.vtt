WEBVTT
1
00:00:00.940 --> 00:00:05.230
The way I've set up this course is that a lot of the legwork for creating a

2
00:00:05.230 --> 00:00:08.550
robust serverless application has already been completed.

3
00:00:08.550 --> 00:00:10.160
Using the Serverless Framework,

4
00:00:10.160 --> 00:00:15.330
we'll be able to quickly create and deploy resources into AWS.

5
00:00:15.330 --> 00:00:18.730
Then, as I explain certain architectural concepts,

6
00:00:18.730 --> 00:00:23.940
we'll hook things together and configure them so everything will work correctly.

7
00:00:23.940 --> 00:00:26.050
So before we get into the weeds,

8
00:00:26.050 --> 00:00:29.650
let's deploy the demo resources with the Serverless Framework.

9
00:00:29.650 --> 00:00:33.140
In your code editor, open up the demo project code.

10
00:00:33.140 --> 00:00:36.960
In the root of the project is the serverless.yml file.

11
00:00:36.960 --> 00:00:40.010
This is where all the information is on how to

12
00:00:40.010 --> 00:00:42.910
construct our serverless application.

13
00:00:42.910 --> 00:00:46.910
Open this up and look online 8 for the bucketName property.

14
00:00:46.910 --> 00:00:50.740
This is where we define the name for the S3 bucket

15
00:00:50.740 --> 00:00:53.230
where static assets will be stored.

16
00:00:53.230 --> 00:00:57.410
Replace the your_name portion with a unique identifier,

17
00:00:57.410 --> 00:01:00.230
potentially your name or something else.

18
00:01:00.230 --> 00:01:04.140
Remember, S3 bucket names must be globally unique,

19
00:01:04.140 --> 00:01:07.810
which is why we need this unique identifier here.

20
00:01:07.810 --> 00:01:12.140
Now, save the file, and we're all set to deploy.

21
00:01:12.140 --> 00:01:15.560
Open a command line and navigate to the root of our project.

22
00:01:15.560 --> 00:01:21.430
If you haven't yet, install all the dependencies with an npm install command.

23
00:01:21.430 --> 00:01:27.230
Once that's complete, you can deploy with the command npm run deploy.

24
00:01:27.230 --> 00:01:32.280
What this is doing is building the client code with Webpack and then

25
00:01:32.280 --> 00:01:35.600
deploying the application with the Serverless Framework.

26
00:01:35.600 --> 00:01:39.770
This will actually take quite awhile, especially the first time.

27
00:01:39.770 --> 00:01:42.960
The actual serverless part, creating lambda functions,

28
00:01:42.960 --> 00:01:48.160
is fairly quick, but the framework also has to create an RDS instance,

29
00:01:48.160 --> 00:01:50.600
which is what will make us wait.

30
00:01:50.600 --> 00:01:53.370
I'm going to speed my video up here,

31
00:01:53.370 --> 00:01:57.700
and once everything has been deployed and you're back at your command prompt,

32
00:01:57.700 --> 00:02:01.140
scroll up some until you see a bunch of URLs.

33
00:02:01.140 --> 00:02:06.870
These are the API Gateway endpoints that the Serverless Framework has created.

34
00:02:06.870 --> 00:02:12.140
Copy the first URL here that ends in /dev/.

35
00:02:12.140 --> 00:02:14.640
This is the index of our application.

36
00:02:14.640 --> 00:02:16.920
Paste the URL in a browser,

37
00:02:16.920 --> 00:02:21.320
and you should see this home page for Trash Panda Buffet appear,

38
00:02:21.320 --> 00:02:22.960
images and all.

39
00:02:22.960 --> 00:02:25.910
Now we don't have all of the connections set up to make

40
00:02:25.910 --> 00:02:28.250
this demo application function correctly,

41
00:02:28.250 --> 00:02:31.140
so you won't be able to play it just yet.

42
00:02:31.140 --> 00:02:38.000
Sorry. Let's continue on with the course to learn more of the ins and outs of Lambda.

