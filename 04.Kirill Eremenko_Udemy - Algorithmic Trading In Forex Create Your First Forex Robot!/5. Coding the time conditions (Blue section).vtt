WEBVTT
1
00:00:07.620 --> 00:00:12.600
Hello this is Carol from for example dot com and welcome to the 25th tutorial on algorithmic training

2
00:00:12.600 --> 00:00:13.630
for beginners.

3
00:00:13.860 --> 00:00:19.350
In the previous tutorial we talked about the design of our training system and we looked at a diagram

4
00:00:19.410 --> 00:00:23.960
which shows what our program will look like on the inside.

5
00:00:23.970 --> 00:00:29.910
And today we're actually going to start coding our very first picture system.

6
00:00:30.150 --> 00:00:33.130
And so this is a very exciting tutorial.

7
00:00:33.480 --> 00:00:38.520
Basically in a couple of tutorials they will be done and it will be ready to go.

8
00:00:38.940 --> 00:00:43.250
So without further ado let's begin.

9
00:00:43.380 --> 00:00:50.920
And today we're going to be looking at this blue part of our diagram which we discussed last time.

10
00:00:50.910 --> 00:00:57.900
So as you can remember this is our summary diagram for the whole trading strategy and we're going to

11
00:00:57.900 --> 00:01:03.990
be looking at this part which is check time conditions and make sure that this is the first take of

12
00:01:03.990 --> 00:01:05.390
this bar.

13
00:01:06.060 --> 00:01:15.460
So let's go to Mr. Editor and we're no longer going to be working with scripts at this stage.

14
00:01:15.460 --> 00:01:21.950
We're going to be working with experts and we hope that this is a the expert wise which we create in

15
00:01:22.030 --> 00:01:23.330
words troll 21.

16
00:01:23.400 --> 00:01:24.890
That was for demonstration purposes.

17
00:01:24.910 --> 00:01:34.380
And today we'll create a new one expert advisor and this one we will call it a simple system because

18
00:01:36.120 --> 00:01:39.620
our system is fairly simple.

19
00:01:40.230 --> 00:01:40.730
OK.

20
00:01:40.730 --> 00:01:49.420
Finish open that up and we'll just go ahead and delete all of this and we'll know.

21
00:01:49.440 --> 00:01:56.460
Maybe you'll leave the on tick function because we will actually just get rid of the comments.

22
00:01:56.640 --> 00:02:03.000
So this is the Atlantic function as we've discussed previously it will be executed on and on and on

23
00:02:03.480 --> 00:02:05.270
and on with every tick.

24
00:02:05.340 --> 00:02:09.520
We won't be needing to owning it on Dean it functions at this stage.

25
00:02:09.720 --> 00:02:15.960
And let's go back to the diagram and let's go to the detailed version of that diagram and understand

26
00:02:15.960 --> 00:02:17.730
what we're going to be coding today.

27
00:02:17.760 --> 00:02:24.870
So we're going to have to if else conditions we can just check the hour and then we're going to check

28
00:02:24.870 --> 00:02:32.730
our flag which tells us if it was if the current tick is the first take of this hour.

29
00:02:32.780 --> 00:02:36.930
Also we're going to be working off a flag to make sure that its values are correct.

30
00:02:36.960 --> 00:02:39.560
And that's basically it.

31
00:02:39.750 --> 00:02:45.210
Also we're going to be getting this hour from the trader because we want the trader to be able to input

32
00:02:45.210 --> 00:02:46.560
this time.

33
00:02:46.860 --> 00:02:48.590
So let's get started.

34
00:02:48.600 --> 00:03:01.440
First thing we need to get this are from a Trader Joe's line was it was in line and unlike in scripts

35
00:03:01.440 --> 00:03:07.590
we don't need to add that property scripture Jones put because inputs for expert advisors are always

36
00:03:07.590 --> 00:03:10.230
shown shown by default so that's fine.

37
00:03:10.530 --> 00:03:20.610
Well I'm just going to put this back and now we're going to check if the hour is correct.

38
00:03:20.790 --> 00:03:22.580
If it is our hour.

39
00:03:22.650 --> 00:03:26.600
So there is a function in m m call for which is our.

40
00:03:26.820 --> 00:03:35.760
And if we click one and we go to the help the reference will see that our returns the hour our 0 1 2

41
00:03:36.120 --> 00:03:40.260
and so on until 23 of the last known server time.

42
00:03:40.380 --> 00:03:45.560
So basically this is the current hour of trading terminal.

43
00:03:45.900 --> 00:03:52.740
So if that hour is equal to our start our Sumeet meaning if it's a nine note case

44
00:03:56.040 --> 00:04:01.720
in that case we will execute our trading algorithm.

45
00:04:01.870 --> 00:04:12.100
Otherwise we will do what what is prescribed by the diagram in the opposite scenario.

46
00:04:12.780 --> 00:04:14.950
Then we want to see that.

47
00:04:15.090 --> 00:04:21.680
So that was us implementing this bit over here so yes because this way the note goes that way.

48
00:04:21.740 --> 00:04:24.930
Now we want to check if the flag is true.

49
00:04:24.930 --> 00:04:32.070
So first of all we have to introduce a flag and this flag will tell us if this current Take that we

50
00:04:32.070 --> 00:04:39.970
are working with is the very first take of the bar of this hour.

51
00:04:40.200 --> 00:04:46.110
And we want to set it to true initially because of course when the program launches for the first time

52
00:04:46.740 --> 00:04:55.930
that Tich will be the very if it happens to be in this hour it will be the first pick for the hour.

53
00:04:55.950 --> 00:04:59.690
Well the first tick that the program sees and that's what we want.

54
00:05:00.000 --> 00:05:02.370
So now we want to implement a check here.

55
00:05:02.400 --> 00:05:13.710
If they will take this is first take he calls true then this is where implanting this check.

56
00:05:13.710 --> 00:05:21.890
So if it's true the first thing I would do is we set the flag to false we set it to false.

57
00:05:22.980 --> 00:05:26.250
And then what else do we need to do we need to do this box who we're done that we've done that we've

58
00:05:26.250 --> 00:05:28.140
done that we should do this last box.

59
00:05:28.140 --> 00:05:32.310
So if the hours is not nine then set the flag to true the hour is nine.

60
00:05:32.310 --> 00:05:33.310
Is this bit.

61
00:05:33.420 --> 00:05:36.030
That's it for the hour is nine hours not nine hours.

62
00:05:36.060 --> 00:05:40.000
So here we need to set the Flucht false Carol.

63
00:05:40.000 --> 00:05:44.240
Stan sorry to true.

64
00:05:44.340 --> 00:05:51.940
So if the fight are not nice to say that all of these blue bits are done and basically that would have

65
00:05:51.940 --> 00:05:56.660
been it we would have finished with the blueprint here.

66
00:05:56.670 --> 00:06:02.220
But however there is a caveat here.

67
00:06:03.370 --> 00:06:12.010
When the on Tich function executes every time it starts all of its variables are reset and that is basically

68
00:06:13.360 --> 00:06:23.970
a concept which can be which is evident not only in em kill for but it comes back all the way back from

69
00:06:24.280 --> 00:06:33.640
C C++ and all most or basically all the programming languages that I've come across that are functional

70
00:06:33.640 --> 00:06:40.330
programming languages work in the following way that between these two brackets of a function that's

71
00:06:40.330 --> 00:06:41.650
where variables can live.

72
00:06:41.650 --> 00:06:44.610
So this variable is first take.

73
00:06:44.770 --> 00:06:51.040
It is only going to be able to maintain its value whatever value is set.

74
00:06:51.040 --> 00:06:51.630
True.

75
00:06:51.640 --> 00:06:54.350
And then if we sit at fault here we set a tree here.

76
00:06:54.520 --> 00:06:59.950
It will only be able to remember its own value until the end of this function as soon as the function

77
00:06:59.950 --> 00:07:07.750
we leave the function the variable will lose its value will be removed from the stack or it will be

78
00:07:07.750 --> 00:07:08.870
removed from memory.

79
00:07:09.250 --> 00:07:14.620
And then when we go back into the function the variable will be created again and will be reset to the

80
00:07:14.650 --> 00:07:16.130
default value.

81
00:07:16.130 --> 00:07:21.580
And so that's something we haven't discussed before and that was because we didn't really come across

82
00:07:21.580 --> 00:07:30.810
something like that and we didn't require this but now it is going to influence how we structure code.

83
00:07:31.060 --> 00:07:34.650
And why is it going to influence our code.

84
00:07:34.660 --> 00:07:41.320
That's because if we leave everything as is then every time the tick this function is called on and

85
00:07:41.320 --> 00:07:46.920
you tick what will happen is this variable will be recreated with the value for true value.

86
00:07:46.960 --> 00:07:52.240
And that means well if this check goes through this check will always be correct.

87
00:07:52.240 --> 00:08:04.680
And here is where we're going to have the body of the arrhythmic trading system.

88
00:08:05.120 --> 00:08:05.810
So.

89
00:08:05.940 --> 00:08:10.850
And in that case the body of the algorithmic trading system will be always executed.

90
00:08:10.900 --> 00:08:16.450
Probably not but probably core it will always be execute and that's not something we want.

91
00:08:16.450 --> 00:08:24.280
We want this variable to preserve its value even when its execution leaves the optic function comes

92
00:08:24.280 --> 00:08:26.740
back to it afresh.

93
00:08:26.770 --> 00:08:33.410
So there is a keyword in Emco for to do that and it's called static and that does make sense.

94
00:08:33.480 --> 00:08:40.480
It turns this variable from a dynamic route or from a changing variable to a static static variable

95
00:08:40.480 --> 00:08:47.870
which remembers its value even when execution leaves this function.

96
00:08:47.950 --> 00:08:50.550
So you go ahead and compile that no errors or warnings.

97
00:08:50.560 --> 00:08:57.900
And what I always recommend is to check your code and make sure it's working correct.

98
00:08:57.910 --> 00:09:03.220
And you can always do that through the strategy Tester the strategy test.

99
00:09:03.440 --> 00:09:09.400
We won't be discussing strategy tests or in detail here in this course.

100
00:09:09.430 --> 00:09:15.340
I'm working on all the time of recording this video I'm working on a separate course for each strategy

101
00:09:15.340 --> 00:09:20.820
tester which probably now you can find a DVD out for export.

102
00:09:20.820 --> 00:09:25.670
Dot com well at the time when you're watching the video it's probably already there.

103
00:09:26.020 --> 00:09:31.510
But we will use the strategy tested just to make sure that our code is working correctly.

104
00:09:31.510 --> 00:09:41.230
So here will add an alert and I say the first tick of

105
00:09:43.840 --> 00:09:55.760
our So we'll just add this alert and see if it will come up only one time in every time the expert advisor

106
00:09:55.770 --> 00:10:02.870
comes across the bar within the ninth hour or every time an expert adviser comes across a tick.

107
00:10:02.890 --> 00:10:09.240
So compile that will go to the training terminal and the strategy tests so you can it should be able

108
00:10:09.240 --> 00:10:12.640
to find you a simple simple system or here.

109
00:10:13.200 --> 00:10:18.870
Select British pound dollar will select every take visual mode doesn't matter.

110
00:10:18.870 --> 00:10:20.690
The dates don't matter.

111
00:10:20.700 --> 00:10:22.500
Make sure optimization is off.

112
00:10:22.740 --> 00:10:23.490
If you're good.

113
00:10:23.570 --> 00:10:28.070
Sorry if you click expert properties you'll be able to see your inputs here.

114
00:10:28.080 --> 00:10:33.270
Once again this is something we're not going into detail because this is a topic for a separate course

115
00:10:33.810 --> 00:10:37.870
if you just follow the exact same procedures which I'm doing.

116
00:10:37.980 --> 00:10:42.970
You should be able to successfully just see what's happening with your strategy.

117
00:10:43.020 --> 00:10:45.910
So a quick start here.

118
00:10:45.930 --> 00:10:51.030
I'm just going to take the grid off so it's not in our way and you just have to wait a sec wait a bit

119
00:10:51.120 --> 00:11:01.530
while the terminal prepares itself to collect enough data to run the tests so they you it's running.

120
00:11:02.010 --> 00:11:04.380
So right now it's zero clock.

121
00:11:04.380 --> 00:11:12.970
And if you click the journal you'll see all the messages coming from your expert adviser training system.

122
00:11:12.990 --> 00:11:15.620
So I'm just going to speed this up a little bit.

123
00:11:17.130 --> 00:11:17.450
OK.

124
00:11:17.460 --> 00:11:21.240
So here you can see that a take her and message has come through.

125
00:11:21.510 --> 00:11:27.840
And you can see as well that how many ticks they are in every hour so every time the price is moving

126
00:11:27.840 --> 00:11:32.750
that's a new tick in within this hour so even 9:00 there was quite a lot of ticks.

127
00:11:32.910 --> 00:11:36.220
But we only got one message saying first take of our.

128
00:11:36.420 --> 00:11:45.090
And that means that our system is working correctly that means that bit of the code which we saw here

129
00:11:45.180 --> 00:11:47.110
it only got executed once.

130
00:11:47.190 --> 00:11:50.580
Irrespective of the huge number of ticks and that are.

131
00:11:51.180 --> 00:11:57.240
So I hope you followed this tutorial useful and I hope you are able to follow the code if not the source

132
00:11:57.240 --> 00:12:01.230
code is always available at not for export dot com.

133
00:12:01.320 --> 00:12:08.080
And in this tutorial we're going to program the green section.

134
00:12:08.090 --> 00:12:13.110
Well most of the green section and I hope to see you then until the next I'm happy coding.
