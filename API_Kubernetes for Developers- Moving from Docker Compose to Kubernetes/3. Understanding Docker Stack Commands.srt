1
00:00:00,940 --> 00:00:02,440
[Autogenerated] Now that we've seen how to enable

2
00:00:02,440 --> 00:00:04,450
Docker stack support for kubernetes,

3
00:00:04,450 --> 00:00:08,100
you might be wondering what are Docker stack commands in the first place?

4
00:00:08,100 --> 00:00:08,570
After all,

5
00:00:08,570 --> 00:00:10,580
if you haven't used them before and you've only

6
00:00:10,580 --> 00:00:14,340
done the standard Docker commands, these might be something that you're going.

7
00:00:14,340 --> 00:00:15,900
I don't even know what that is, Dan.

8
00:00:15,900 --> 00:00:19,340
Well, I'm here to tell you, so let's jump on in.

9
00:00:19,340 --> 00:00:22,420
So, Docker stat commands have been around for quite a while,

10
00:00:22,420 --> 00:00:26,280
but if you haven't been using swarm mode before then

11
00:00:26,280 --> 00:00:28,040
you probably haven't used them.

12
00:00:28,040 --> 00:00:31,100
But they allow you to take a Docker Compose file with

13
00:00:31,100 --> 00:00:35,410
services in it and deploy that to a swarm.

14
00:00:35,410 --> 00:00:39,240
Basically a cluster somewhat like kubernetes.

15
00:00:39,240 --> 00:00:40,740
Actually.

16
00:00:40,740 --> 00:00:45,020
Now, the first command you'd want to know about is called Docker Stack deploy,

17
00:00:45,020 --> 00:00:48,740
and this command allows you to pass it a Docker Compose file.

18
00:00:48,740 --> 00:00:52,140
It will then parse out all the services in that file

19
00:00:52,140 --> 00:00:55,340
and then deploy those to a swarm.

20
00:00:55,340 --> 00:00:57,640
Now, that's the normal mode.

21
00:00:57,640 --> 00:01:00,760
When we check the check box to override Docker stack

22
00:01:00,760 --> 00:01:03,030
commands and run them in kubernetes.

23
00:01:03,030 --> 00:01:07,950
Then of course, it will parse that Yamil from Docker Compose get the services,

24
00:01:07,950 --> 00:01:11,880
but translate all of that to kubernetes resource is which is

25
00:01:11,880 --> 00:01:16,170
actually a really cool way to kind of try your app out without

26
00:01:16,170 --> 00:01:20,310
having to translate all that Docker Compose stuff over to

27
00:01:20,310 --> 00:01:25,970
Kubernetes XAML now another commanders Docker stack ls we can list

28
00:01:25,970 --> 00:01:28,440
the stacks that have been deployed.

29
00:01:28,440 --> 00:01:31,370
We can also see the different tasks that are running with E.

30
00:01:31,370 --> 00:01:33,440
P s command.

31
00:01:33,440 --> 00:01:38,290
We can remove a stack with RM and we can actually just

32
00:01:38,290 --> 00:01:41,510
list all the services in a given stack.

33
00:01:41,510 --> 00:01:44,540
And that's the Docker Stack services Command.

34
00:01:44,540 --> 00:01:47,910
Now, one thing to understand when I say services at this level,

35
00:01:47,910 --> 00:01:51,360
we're talking Docker Compose services because,

36
00:01:51,360 --> 00:01:52,710
of course, if you do kubernetes,

37
00:01:52,710 --> 00:01:56,740
we know KUBERNETES also has services and that's related to networking.

38
00:01:56,740 --> 00:01:59,130
Very different use cases for those terms,

39
00:01:59,130 --> 00:02:01,270
so kind of make sure that's clear in your mind.

40
00:02:01,270 --> 00:02:03,160
We have Docker Compose services,

41
00:02:03,160 --> 00:02:07,560
and that would be like you're running ASP.NET core Node.js a database

42
00:02:07,560 --> 00:02:10,840
that'd be a service that you want to contain arise.

43
00:02:10,840 --> 00:02:15,740
And then, of course, we have kubernetes services, which are for networking.

44
00:02:15,740 --> 00:02:17,590
All right, so now that we've seen some of that,

45
00:02:17,590 --> 00:02:21,240
let's dive in a little bit deeper to the key commands here.

46
00:02:21,240 --> 00:02:24,050
The main one you need to know about is Docker Stack

47
00:02:24,050 --> 00:02:27,040
deploy and then we can give it this dash.

48
00:02:27,040 --> 00:02:27,500
See,

49
00:02:27,500 --> 00:02:31,350
now this represents the composed file and we simply

50
00:02:31,350 --> 00:02:32,940
give it the name of that file.

51
00:02:32,940 --> 00:02:37,140
In this case, I'm using the standard name Docker Compose XAML.

52
00:02:37,140 --> 00:02:40,210
Then after that, we put the name of the stack.

53
00:02:40,210 --> 00:02:42,090
Now, this could be any valid names,

54
00:02:42,090 --> 00:02:47,140
so you can put food fo fum or maybe more valid name than that.

55
00:02:47,140 --> 00:02:50,840
And assuming that you've checked that box that I showed earlier,

56
00:02:50,840 --> 00:02:54,800
what will happen is it will translate the Docker Compose file and

57
00:02:54,800 --> 00:02:58,240
run it in your local kubernetes on Docker desktop.

58
00:02:58,240 --> 00:03:00,350
It makes it really easy again to just keep a

59
00:03:00,350 --> 00:03:02,580
Docker Compose file in your project,

60
00:03:02,580 --> 00:03:07,940
but still run that in kubernetes without having to be a kubernetes guru.

61
00:03:07,940 --> 00:03:12,020
Now, once you've deployed a stack, you can run Docker stack ls.

62
00:03:12,020 --> 00:03:16,240
And that would simply list all the deployed stacks that we have running.

63
00:03:16,240 --> 00:03:20,080
And you can also now run to kubernetes and you could do kubectl

64
00:03:20,080 --> 00:03:23,010
commands and you could do kubectl get all,

65
00:03:23,010 --> 00:03:26,390
for example or kubectl get pods.

66
00:03:26,390 --> 00:03:28,850
And if you had, you know, five services,

67
00:03:28,850 --> 00:03:34,940
then you're probably at a minimum going to C five pods deployed into kubernetes.

68
00:03:34,940 --> 00:03:36,920
And then finally, when you're done,

69
00:03:36,920 --> 00:03:40,970
just like you could do Docker Compose up and Docker Compose down and

70
00:03:40,970 --> 00:03:44,190
then you can even remove You could do Docker stack,

71
00:03:44,190 --> 00:03:48,750
remove RM and then give it that name of the stack that you used when

72
00:03:48,750 --> 00:03:51,400
you first deployed it when you first created it,

73
00:03:51,400 --> 00:03:52,810
that will take care of them.

74
00:03:52,810 --> 00:03:56,890
Cleaning up all those services that we have in our Docker Compose

75
00:03:56,890 --> 00:04:02,120
file from our kubernetes resource is so you could see that doing

76
00:04:02,120 --> 00:04:04,160
this is actually pretty straightforward.

77
00:04:04,160 --> 00:04:04,930
And like I said,

78
00:04:04,930 --> 00:04:09,130
if you're not looking to translate Docker Compose into

79
00:04:09,130 --> 00:04:11,340
all the cooper nadie XAML files,

80
00:04:11,340 --> 00:04:15,520
then this is certainly an option you could consider if you just want to see

81
00:04:15,520 --> 00:04:18,740
how your app runs in kubernetes with those containers.

82
00:04:18,740 --> 00:04:23,000
So now that we've talked about some of these commands, let's put them into action.

