1
00:00:01,740 --> 00:00:05,850
The main takeaways of this module are, OAuth2 and OpenID

2
00:00:05,850 --> 00:00:08,340
Connect can be difficult to implement.

3
00:00:08,340 --> 00:00:14,060
Fortunately for you, Spring Security simplifies things a lot. Ideally,

4
00:00:14,060 --> 00:00:15,940
for authenticating your users,

5
00:00:15,940 --> 00:00:20,240
you should prefer OpenID Connect to an OAuth2 implementation.

6
00:00:20,240 --> 00:00:23,880
Now, the default implementations in demo application

7
00:00:23,880 --> 00:00:29,170
are far from production ready, but neither is our web app, and fortunately,

8
00:00:29,170 --> 00:00:31,690
Spring Security is very configurable,

9
00:00:31,690 --> 00:00:34,940
so you can tailor the framework to your application's

10
00:00:34,940 --> 00:00:38,140
architecture and unique security requirement.

11
00:00:38,140 --> 00:00:39,260
In the next module,

12
00:00:39,260 --> 00:00:42,620
you will learn how to complement your current inâ€‘house

13
00:00:42,620 --> 00:00:46,140
authentication with OAuth2 Login,

14
00:00:46,140 --> 00:00:50,400
effectively giving users the option to either register with

15
00:00:50,400 --> 00:00:54,510
your application or use their Facebook and Google accounts

16
00:00:54,510 --> 00:01:00,000
to sign into your application. Let's check this out, next.

