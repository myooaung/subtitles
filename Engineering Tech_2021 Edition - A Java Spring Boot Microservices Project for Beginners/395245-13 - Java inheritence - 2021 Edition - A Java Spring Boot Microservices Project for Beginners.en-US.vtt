WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.710
Inheritance is another concept of object oriented programming.

00:00:04.710 --> 00:00:09.370
In inheritance, one class inherits the behavior of another class.

00:00:09.410 --> 00:00:14.160
For example, doc and innate the behavior of animal class.

00:00:14.160 --> 00:00:15.960
Similarly, cat can integrate that.

00:00:15.960 --> 00:00:18.520
We have enough animal class.

00:00:19.280 --> 00:00:22.540
Let's see how it works.

00:00:23.330 --> 00:00:26.295
So we've already created a Docklands.

00:00:26.295 --> 00:00:29.980
Let's delete these member variables and methods.

00:00:30.290 --> 00:00:33.850
Now we'll create an animal class

00:00:37.010 --> 00:00:42.310
and will have a property name, private String name.

00:00:45.070 --> 00:00:49.740
And let's generate getter and setter for name.

00:00:52.690 --> 00:00:57.920
Now, we can say dog extents any money.

00:00:57.920 --> 00:01:00.930
This is how we cleared Americans in Java.

00:01:02.080 --> 00:01:04.970
Now let's go back to the main class.

00:01:04.970 --> 00:01:07.740
We'll delete this code.

00:01:08.620 --> 00:01:12.740
And this time we do not have any member variables in dog class.

00:01:12.740 --> 00:01:15.665
However, dog extends anyone and anyone is

00:01:15.665 --> 00:01:20.730
name and then getter and setter to interact with Don name property.

00:01:21.160 --> 00:01:24.780
Let's now in Spencer, dog.

00:01:27.100 --> 00:01:30.395
Now we can set the name property of the dog.

00:01:30.395 --> 00:01:34.415
Dog, dog doesn't have a name variable and x's methods,

00:01:34.415 --> 00:01:35.765
it inherits any one,

00:01:35.765 --> 00:01:39.990
which is the name variable and get and set access methods.

00:01:41.440 --> 00:01:45.860
And now we can retrieve the same also.

00:01:45.860 --> 00:01:50.510
Has a dog one getName. Will run it.

00:01:50.510 --> 00:01:55.445
Now. You'll forget to R plus here.

00:01:55.445 --> 00:02:03.510
Let's run it again. And we are able to get the name.

00:02:03.730 --> 00:02:07.470
Similarly, let's create a cat.

00:02:11.230 --> 00:02:14.670
And we'll sit got extents.

00:02:21.370 --> 00:02:30.990
Now let's instantiate that class and create a cat one object. We'll run it again.

00:02:32.260 --> 00:02:36.000
And Catalan name is getting printed.

00:02:36.730 --> 00:02:40.410
Now let's add a member variables.

00:02:40.930 --> 00:02:44.990
Private, double height, knowledge,

00:02:44.990 --> 00:02:47.460
gendered getters and setters.

00:02:50.890 --> 00:02:54.200
Back in the main class.

00:02:54.200 --> 00:02:56.000
We can say the hype.

00:02:56.000 --> 00:03:05.225
Now, how would this height is not available for the cat?

00:03:05.225 --> 00:03:11.610
Only state name is available because we added a member variable for the dog class.

00:03:12.040 --> 00:03:18.180
And cat has the name property because it is available at the parent element level.

00:03:18.790 --> 00:03:21.425
These are inheritance works in Java.

00:03:21.425 --> 00:03:22.760
You can have a base class with

00:03:22.760 --> 00:03:26.360
some common properties and then have other classes extend from it.

00:03:26.360 --> 00:03:29.820
And the other classes can have additional properties.
