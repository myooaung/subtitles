WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.500 --> 00:00:04.950
In the previous slide, we saw how the same object can take

00:00:04.950 --> 00:00:08.880
different forms depending on which class we map it to.

00:00:08.880 --> 00:00:10.905
However, if we look at this curve,

00:00:10.905 --> 00:00:13.140
this is a tight coupling.

00:00:13.140 --> 00:00:17.115
So here we have to specify every time whether it's a cat or dog.

00:00:17.115 --> 00:00:18.720
And then depending on that,

00:00:18.720 --> 00:00:22.155
either cat or dog object will get instantiated.

00:00:22.155 --> 00:00:24.135
Now to understand this better,

00:00:24.135 --> 00:00:28.720
let's change this class name2, animal speak.

00:00:29.450 --> 00:00:34.335
And we want this animal speak class to speak like a cat or a dog,

00:00:34.335 --> 00:00:37.420
depending on what we decided that untamed.

00:00:37.580 --> 00:00:41.230
Now let's remove this main method.

00:00:41.820 --> 00:00:46.360
We learned a private variable called animal,

00:00:46.360 --> 00:00:50.060
and then let's add getter and setter for that.

00:00:57.900 --> 00:01:01.100
Will remove this also.

00:01:01.290 --> 00:01:04.420
So now this animal speakers in

00:01:04.420 --> 00:01:09.055
animal class variable and then it has getter and setter methods.

00:01:09.055 --> 00:01:11.750
And we'll artist speak method.

00:01:18.780 --> 00:01:22.405
This animal speakers animal type member variable.

00:01:22.405 --> 00:01:25.340
And then it can invoke them exon.

00:01:25.360 --> 00:01:29.820
Now this is no reference to cat or dog.

00:01:30.280 --> 00:01:37.340
Now we have to make this animal speak either speak like a cat or a dog that

00:01:37.340 --> 00:01:40.355
aren't aimed to ensure there is

00:01:40.355 --> 00:01:44.850
no reference to cat or dog in the animal speak implementation.

00:01:45.820 --> 00:01:48.230
Now to achieve the same,

00:01:48.230 --> 00:01:54.185
we'll inject the gatt dot dot class at the runtime to this animal speak class.

00:01:54.185 --> 00:01:56.060
And depending on what we are injecting,

00:01:56.060 --> 00:01:57.680
the animal speak could create

00:01:57.680 --> 00:02:02.990
an Animal object of that particular type and invoke dot corresponding speak method.

00:02:02.990 --> 00:02:06.980
We learned another class, animal behavior.

00:02:06.980 --> 00:02:10.250
Now that class would be our entry point.

00:02:10.250 --> 00:02:13.730
And let's move this outside this package.

00:02:13.730 --> 00:02:23.400
And we'll rename this Packages com dot future external animals.

00:02:24.400 --> 00:02:26.900
Now we didn't go anywhere beyond.

00:02:26.900 --> 00:02:32.880
Let say we have main method will import the animal speak class.

00:02:36.130 --> 00:02:41.520
Now we'll set any malice, cat or dog.

00:02:42.490 --> 00:02:45.990
Now let's have an enumerated type.

00:02:50.440 --> 00:02:53.640
We'll call it new cat.

00:02:57.070 --> 00:03:01.730
Will instantiate the animal with Gatto duck tape and then

00:03:01.730 --> 00:03:06.140
past data Animal object to the animal speak class.

00:03:06.140 --> 00:03:12.095
And we'll call does anyone speak, makes unmetered now.

00:03:12.095 --> 00:03:18.125
And we'll run it. Now is getting printed.

00:03:18.125 --> 00:03:22.830
And if we change it to dog, let's import dog.

00:03:23.350 --> 00:03:27.800
Now animal speak is calling the speak method of their dog.

00:03:27.800 --> 00:03:34.550
Plus, this is how you can inject an objective, the runtime.

00:03:34.550 --> 00:03:37.400
And depending on what object you are injecting,

00:03:37.400 --> 00:03:40.295
a particular module will behave in a certain way.

00:03:40.295 --> 00:03:42.530
This is a very powerful concept.

00:03:42.530 --> 00:03:46.415
Dependency injection is a core concept of Spring framework.

00:03:46.415 --> 00:03:48.830
And if you have understood this module,

00:03:48.830 --> 00:03:51.230
it'll be easy for you to pick up what

00:03:51.230 --> 00:03:54.245
we're going to discuss next in the Spring framework.

00:03:54.245 --> 00:03:56.060
And Spring framework has

00:03:56.060 --> 00:03:59.900
simply fire dependency injection using something called annotation.

00:03:59.900 --> 00:04:03.870
So let's understand annotation concepts next.
