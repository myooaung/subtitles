WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.110 --> 00:00:06.370
Welcome back. In this lab we'll understand how to return an object back to the STP.

00:00:07.100 --> 00:00:11.265
Let's add a controller using this class.

00:00:11.265 --> 00:00:16.120
So we manage the risk DPA interaction.

00:00:19.240 --> 00:00:23.945
Let's add the rest controller ambition that we have done earlier.

00:00:23.945 --> 00:00:31.350
And will also create a good courses method and map it to course's URL.

00:00:34.870 --> 00:00:39.485
So created a controller now with the required adaptations.

00:00:39.485 --> 00:00:45.300
And let's run it first and see if everything is fine.

00:00:46.360 --> 00:00:49.025
We should see all courses.

00:00:49.025 --> 00:00:50.945
So this you have done earlier also,

00:00:50.945 --> 00:00:53.150
let's not try to return an object.

00:00:53.150 --> 00:01:01.680
Will create a new class called course and add some fields to it.

00:01:03.310 --> 00:01:06.110
Let's have three-phase course ID,

00:01:06.110 --> 00:01:08.550
course name and author name.

00:01:10.960 --> 00:01:15.750
Let's generate getter and setter methods.

00:01:18.430 --> 00:01:22.280
So created for the course ID field.

00:01:22.280 --> 00:01:25.200
Let's simulate it for the remaining fields.

00:01:28.720 --> 00:01:33.480
So now I've generated getter and setter for all three fields.

00:01:36.550 --> 00:01:41.940
We now are at a constructor using which we will instantiate the object.

00:01:43.420 --> 00:01:46.770
Select all three fields.

00:01:53.590 --> 00:01:56.300
Now back into course controller.

00:01:56.300 --> 00:01:58.010
Instead of returning a string,

00:01:58.010 --> 00:02:00.990
will only stop objects,

00:02:03.970 --> 00:02:07.950
which will be core subjects in this case.

00:02:08.770 --> 00:02:14.070
So let's create instances of the course Class.

00:02:20.020 --> 00:02:22.910
C will create three objects,

00:02:22.910 --> 00:02:25.880
specifying the course id name and author name.

00:02:25.880 --> 00:02:29.940
And using the res.json to will return a list.

00:02:32.620 --> 00:02:36.980
String could convert objects to the JSON format and displayed on

00:02:36.980 --> 00:02:45.810
the webpage. Let's now run it.

00:02:53.620 --> 00:02:56.135
It gives some error.

00:02:56.135 --> 00:02:58.670
Just make sure all the field names are correct and

00:02:58.670 --> 00:03:01.625
all the required libraries are important.

00:03:01.625 --> 00:03:06.960
For list, we need to import Java util list package.

00:03:11.510 --> 00:03:15.210
Make sure all the field names are correct.

00:03:22.150 --> 00:03:25.040
Now when you refresh the page,

00:03:25.040 --> 00:03:29.190
you should see all the objects in JSON format.

00:03:31.480 --> 00:03:36.215
So this is how you can return an object back to the rest API.

00:03:36.215 --> 00:03:39.140
In the next slide, we will understand how to integrate a database with

00:03:39.140 --> 00:03:43.790
a spring application and return data from a database table flourished EPA.

00:03:43.790 --> 00:03:45.630
Thank you.
