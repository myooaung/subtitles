WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.905
We'll now arctic course and register it on the Eureka server.

00:00:04.905 --> 00:00:08.160
Earlier we created the discovery server using Netflix

00:00:08.160 --> 00:00:11.490
unicast subvert dependency for any client.

00:00:11.490 --> 00:00:12.690
For the Utica server,

00:00:12.690 --> 00:00:17.265
we would request spring cloud Netflix, Eureka, claimed dependency.

00:00:17.265 --> 00:00:23.025
Let's go to Start dot spring dot IO and create a new project.

00:00:23.025 --> 00:00:27.015
Let's call it the future ex.

00:00:27.015 --> 00:00:29.230
Courses.

00:00:34.040 --> 00:00:41.680
We learned with risk.

00:00:45.460 --> 00:00:57.180
Spring data, GPU, Utica, discovery, gland.

00:00:58.780 --> 00:01:02.370
Let's now Jim did the project.

00:01:06.460 --> 00:01:13.790
The project Lord,

00:01:13.790 --> 00:01:19.500
that project quintile EJS file new project from existing source.

00:01:26.980 --> 00:01:31.050
And let's select that project directory.

00:01:38.440 --> 00:01:48.770
Then next. And we'll

00:01:48.770 --> 00:01:51.600
select Open JDK, beam.

00:01:55.600 --> 00:02:01.860
And finish will open in a new window.

00:02:05.620 --> 00:02:09.170
Let's add it is it May 1 project.

00:02:09.170 --> 00:02:12.245
Now the project has been loaded.

00:02:12.245 --> 00:02:16.865
To make this a eureka client will need to add an annotation enabled

00:02:16.865 --> 00:02:21.050
Eureka land. Next door.

00:02:21.050 --> 00:02:25.080
We'll copy the files from the older course, our project.

00:02:28.780 --> 00:02:35.000
Let's select course, course control law courts repository from the old courts.

00:02:35.000 --> 00:02:39.840
Our project will copy.

00:02:40.900 --> 00:02:44.330
Then go do future IQ scores app,

00:02:44.330 --> 00:02:47.460
which is the new app with you recalculate.

00:02:48.520 --> 00:02:53.580
These classes under. This package.

00:02:58.420 --> 00:03:03.870
Would automatically adjust all the packages names for all three classes.

00:03:13.240 --> 00:03:16.980
Will check the bomb dot XML.

00:03:20.830 --> 00:03:24.560
So we added does bring data GPA,

00:03:24.560 --> 00:03:27.305
the rest, and web dependencies.

00:03:27.305 --> 00:03:31.140
And we all started Netflix Eureka client.

00:03:31.290 --> 00:03:33.685
If want to make any app,

00:03:33.685 --> 00:03:34.870
you record Discovery client,

00:03:34.870 --> 00:03:38.845
you can simply are this dependency and enable Eureka claim.

00:03:38.845 --> 00:03:41.350
You'd need not create a new project.

00:03:41.350 --> 00:03:44.265
We also need to add the sequel late,

00:03:44.265 --> 00:03:46.825
later dependencies from the older project.

00:03:46.825 --> 00:03:49.310
Let's open the old project.

00:03:51.000 --> 00:03:54.350
Go to Palm dot xml.

00:03:56.670 --> 00:04:01.630
We need two copies, circulate JDBC and circulate dialect.

00:04:01.630 --> 00:04:03.910
To the new project.

00:04:03.910 --> 00:04:06.775
We have copied the dependencies.

00:04:06.775 --> 00:04:08.230
Now back in the future,

00:04:08.230 --> 00:04:12.020
IQ scores have project simply paste.

00:04:14.560 --> 00:04:18.110
So now we have SQL literate dependencies.

00:04:18.110 --> 00:04:21.000
In the future X coarser project

00:04:23.590 --> 00:04:29.190
will also copy the database from the old project, but a new project.

00:04:31.240 --> 00:04:34.790
So this is the old project course app.

00:04:34.790 --> 00:04:42.600
I'm copying the future ex courts or database file to the new project.

00:04:44.410 --> 00:04:50.310
Let's ensure everything looks fine and go to a command prompt.

00:04:54.850 --> 00:04:59.960
And we'll say sequel light three,

00:04:59.960 --> 00:05:03.065
future ex courts DB.

00:05:03.065 --> 00:05:05.790
Now let's check out the table.

00:05:09.010 --> 00:05:10.220
Here.

00:05:10.220 --> 00:05:11.765
The data is still intact.

00:05:11.765 --> 00:05:16.325
To simulate fails can be easily copied from one directory to another.

00:05:16.325 --> 00:05:19.805
You copied this equality declare dependencies,

00:05:19.805 --> 00:05:22.910
and the database to the new project.

00:05:22.910 --> 00:05:26.360
Let's check out the application dot properties.

00:05:26.360 --> 00:05:30.170
We would also need all the properties that we defined earlier.

00:05:30.170 --> 00:05:38.000
Let's add them. We'll add a few additional properties.

00:05:38.000 --> 00:05:42.960
The new core step will give this happened name.

00:05:47.200 --> 00:05:51.960
Let's call it x core SAP.

00:05:52.990 --> 00:05:57.020
Handout will also give us separate board.

00:05:57.020 --> 00:05:59.570
Probably microservices that you're creating.

00:05:59.570 --> 00:06:01.910
You should have a different port.

00:06:01.910 --> 00:06:11.070
Now let's go to the main class and run the application.

00:06:13.300 --> 00:06:16.295
It failed to start.

00:06:16.295 --> 00:06:19.610
It says could not find our Lord man.

00:06:19.610 --> 00:06:22.625
Let's delete the main.xml file.

00:06:22.625 --> 00:06:26.765
Sometimes when you download and upload a project, it creates issues.

00:06:26.765 --> 00:06:28.970
So you need to delete the old I yml

00:06:28.970 --> 00:06:38.700
file and then select bomb dot xml May 1 and reload project.

00:06:39.070 --> 00:06:41.360
And now everything looks good.

00:06:41.360 --> 00:06:48.470
We'll run it again. Got some error.

00:06:48.470 --> 00:06:53.610
So the class that we copied did not automatically import all the packages.

00:06:53.950 --> 00:06:57.620
Click on anything that is highlighted in red and

00:06:57.620 --> 00:07:01.650
hit enter and all the packages will get deported.

00:07:02.610 --> 00:07:05.305
We'll check the other class.

00:07:05.305 --> 00:07:12.560
Everything looks good here. We'll run it again.

00:07:15.810 --> 00:07:21.770
Now we gotta misses that started future edX Course application.

00:07:22.110 --> 00:07:29.320
And it also says registering service and registration status is 204.

00:07:29.320 --> 00:07:32.755
Let's check if dab got registered.

00:07:32.755 --> 00:07:36.205
And we need to ensure Eureka server is running.

00:07:36.205 --> 00:07:41.730
So Eureka server is currently running at port 9300.

00:07:42.330 --> 00:07:46.409
Let's go to Utica server dashboard.

00:07:46.409 --> 00:07:54.005
And we can see that the future ex core SAP has been registered it port 8,001.

00:07:54.005 --> 00:07:58.085
So this is how you can register an app on the discovery side were

00:07:58.085 --> 00:08:03.030
so that other apps can come to the discovery server and find that out.
