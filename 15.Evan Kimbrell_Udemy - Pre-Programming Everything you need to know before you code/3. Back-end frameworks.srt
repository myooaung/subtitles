1
1

00:00:00,000  -->  00:00:01,970
Hey guys, welcome back to the course.
2

2

00:00:01,970  -->  00:00:05,410
Hey, in this lecture we're just going to cover real fast
3

3

00:00:05,410  -->  00:00:10,050
how exactly do back-end frameworks work.
4

4

00:00:10,050  -->  00:00:13,480
All right, so you remember from previously, we kind of explained frameworks are
5

5

00:00:13,480  -->  00:00:17,680
broken down into two different categories: front-end and back-end.
6

6

00:00:17,680  -->  00:00:22,190
Front-end frameworks primarily are going to deal with how the website looks,
7

7

00:00:22,190  -->  00:00:27,960
where to put the images, what is the grid system going to be,
8

8

00:00:27,960  -->  00:00:29,290
assuming they use a grid system.
9

9

00:00:29,290  -->  00:00:32,080
With a back-end framework, it's a little bit different.
10

10

00:00:32,080  -->  00:00:35,830
Now, we remember back-end languages like PHP, like Python,
11

11

00:00:35,830  -->  00:00:40,200
like Ruby, like Java, and those are the languages that run
12

12

00:00:40,200  -->  00:00:43,540
in the background and do the website's bidding.
13

13

00:00:43,540  -->  00:00:49,650
Every time I submit a form, that information gets 
ferried to a database by a back-end language.
14

14

00:00:49,650  -->  00:00:53,760
Every time you make an internal calculation on a website, you will see that.
15

15

00:00:53,760  -->  00:00:56,750
Every time you pull information from another site to your site,
16

16

00:00:56,750  -->  00:00:59,130
that's going to be handled by a back-end language.
17

17

00:00:59,130  -->  00:01:04,020
Let's say you logged in through Twitter to your Product Hunt page,
18

18

00:01:04,020  -->  00:01:06,540
great example of back-end at work.
19

19

00:01:06,540  -->  00:01:11,900
Ok, so what exactly would a framework do for a back-end language?
20

20

00:01:11,900  -->  00:01:16,940
Well, it does a lot of things, and it's pretty similar, I would say, to a front-end.
21

21

00:01:16,940  -->  00:01:21,750
First of all, every single time you make a 
website and you set up the server side files,
22

22

00:01:21,750  -->  00:01:25,250
you're going to set them up in a pretty standard way.
23

23

00:01:25,250  -->  00:01:30,060
There are ways that the general community accepts as being positive and correct,
24

24

00:01:30,060  -->  00:01:32,460
and then there are ways that are just flat out wrong.
25

25

00:01:32,460  -->  00:01:37,670
The first thing you'll see a framework do 
is help you set up this file and folder structure.
26

26

00:01:37,670  -->  00:01:40,240
You'll notice this the more and more websites you look at,
27

27

00:01:40,240  -->  00:01:45,840
you'll always have a folder for your CSS, 
you always have a folder for your images,
28

28

00:01:45,840  -->  00:01:50,180
and then you'll always have a folder for certain special things like APIs,
29

29

00:01:50,180  -->  00:01:54,520
like models, like templates or themes, yatta yatta.
30

30

00:01:54,520  -->  00:01:57,980
The second thing a framework is going to do is it's going to give you
31

31

00:01:57,980  -->  00:02:04,760
a lot of pre-made code for functions that you're probably going to use.
32

32

00:02:04,760  -->  00:02:10,790
In a lot of cases, frameworks will give you tons 
and tons of pre-made functions and code,
33

33

00:02:10,790  -->  00:02:15,070
you're not going to use all of it, but they're going to give you a lot of
34

34

00:02:15,070  -->  00:02:19,210
the common ones that you're going to use in the vast majority of websites.
35

35

00:02:19,210  -->  00:02:23,510
Some examples might be, every single time you pull from a database,
36

36

00:02:23,510  -->  00:02:29,810
you have to write a query to pull that information, 
that itself, if you had to make it from scratch,
37

37

00:02:29,810  -->  00:02:34,890
it would be pretty tedious, a lot of frameworks 
will give you templates for handling that.
38

38

00:02:34,890  -->  00:02:37,100
Let's say you wanted to install a search box on your website,
39

39

00:02:37,100  -->  00:02:40,170
so that you could search all of the pages in your site.
40

40

00:02:40,170  -->  00:02:44,330
One thing you might see a framework do is give you the code for doing that,
41

41

00:02:44,330  -->  00:02:48,900
it will help you index all of the files, and then give you the system
42

42

00:02:48,900  -->  00:02:51,040
whereby you can actually search through all of them.
43

43

00:02:51,040  -->  00:02:54,310
It might also help you with downloading files,
44

44

00:02:54,310  -->  00:02:58,940
it might help you with optimizing images, saving, and recalling them,
45

45

00:02:58,940  -->  00:03:03,040
it might even help you with setting up, which 
we're going to talk about later, called APIs,
46

46

00:03:03,040  -->  00:03:07,430
for pulling information from other websites, let's say Facebook or Twitter.
47

47

00:03:07,430  -->  00:03:11,760
It might, in a lot of cases, even help you 
do things like setting up a payment terminal,
48

48

00:03:11,760  -->  00:03:14,710
because every time you set up a payment terminal, whether it's PayPal,
49

49

00:03:14,710  -->  00:03:19,960
or Stripe, or Braintree, you're going to do it in a very similar way,
50

50

00:03:19,960  -->  00:03:23,670
a lot of that stuff is just redundant, so a 
framework will help you get through that.
51

51

00:03:23,670  -->  00:03:25,000
Now, two things I think you should keep in mind
52

52

00:03:25,000  -->  00:03:26,970
and are worth knowing about back-end frameworks.
53

53

00:03:26,970  -->  00:03:33,260
A lot of times back-end frameworks will give you structure, and what that means
54

54

00:03:33,260  -->  00:03:37,750
in certain cases is that it will force you to program your application
55

55

00:03:37,750  -->  00:03:41,890
in a specific way that fits with the structure they've given you.
56

56

00:03:41,890  -->  00:03:45,460
Later on, we'll talk about things like MVC and OOP,
57

57

00:03:45,460  -->  00:03:49,130
but a lot of times you'll find frameworks that will force you into
58

58

00:03:49,130  -->  00:03:51,600
what's called a certain paradigm of programming.
59

59

00:03:51,600  -->  00:03:55,940
A good example of this is Code Igniter, which is a framework for PHP,
60

60

00:03:55,940  -->  00:04:02,650
when you make a website using that framework, 
you will make it in the Code Igniter way.
61

61

00:04:02,650  -->  00:04:06,150
Now, that's great if you're using Code Igniter, because it can save you a lot of time,
62

62

00:04:06,150  -->  00:04:10,820
it's a problem if someone who's working on 
your team doesn't know how to use that framework,
63

63

00:04:10,820  -->  00:04:16,330
or you need to transition to a different framework, it could require a large overhaul.
64

64

00:04:16,330  -->  00:04:19,400
The second thing that's worth knowing is that you have full frameworks,
65

65

00:04:19,400  -->  00:04:21,390
and then you have smaller frameworks.
66

66

00:04:21,390  -->  00:04:23,960
Often times, the smaller frameworks are called micro-frameworks.
67

67

00:04:23,960  -->  00:04:28,770
The basic gist is this: full frameworks 
will give you tons, and tons, and tons of
68

68

00:04:28,770  -->  00:04:35,940
pre-made functions, support, file structure for a wide variety of use cases,
69

69

00:04:35,940  -->  00:04:40,550
so much so that sometimes when you install a full framework,
70

70

00:04:40,550  -->  00:04:44,180
you have issues with maintaining all of that information,
71

71

00:04:44,180  -->  00:04:48,220
and just keeping track of where everything is,
72

72

00:04:48,220  -->  00:04:50,730
what you need to use, and what you don't need to use.
73

73

00:04:50,730  -->  00:04:53,190
It can be really complicated to learn a framework,
74

74

00:04:53,190  -->  00:04:56,300
and that's why some frameworks out there are actually smaller,
75

75

00:04:56,300  -->  00:05:02,500
they focus on more core functions, functions that are more important
76

76

00:05:02,500  -->  00:05:07,440
and less on the extra things that you might possibly need.
77

77

00:05:07,440  -->  00:05:12,320
The two main benefits, obviously, of that, is 
that it's easier to learn, and manage, and maintain,
78

78

00:05:12,320  -->  00:05:18,780
but then also it actually will help your website 
perform, or your application perform better,
79

79

00:05:18,780  -->  00:05:22,960
because browsers don't have to load as much code.
80

80

00:05:22,960  -->  00:05:24,350
Ok, so that's the basic gist of it.
81

81

00:05:24,350  -->  00:05:26,190
The next couple of lectures, we're actually going to dive in
82

82

00:05:26,190  -->  00:05:28,890
and look at a couple of back-end frameworks.
83

83

00:05:28,890  -->  00:05:34,940
We're going to look as best we can, 
keeping in mind that a lot of the stuff is non-visual,
84

84

00:05:34,940  -->  00:05:40,370
so we're going to try to get a little familiarity, we'll see what happens.
85

85

00:05:40,370  -->  00:05:41,390
All right, see you then!
