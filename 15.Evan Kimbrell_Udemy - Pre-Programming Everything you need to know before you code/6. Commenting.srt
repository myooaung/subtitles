1
1

00:00:00,000  -->  00:00:01,030
Hey guys, welcome back.
2

2

00:00:01,030  -->  00:00:04,810
All right. So, have you ever heard someone say the phrase
3

3

00:00:04,810  -->  00:00:08,080
"How well documented is the code"?
4

4

00:00:08,080  -->  00:00:10,850
This is actually a big concern for developers,
5

5

00:00:10,850  -->  00:00:13,750
especially when they're working on an application
6

6

00:00:13,750  -->  00:00:17,020
that someone else has contributed to or someone else built.
7

7

00:00:17,020  -->  00:00:19,390
Let's say you get hired to a new company,
8

8

00:00:19,390  -->  00:00:22,590
and you're coming in, and you have to start writing code
9

9

00:00:22,590  -->  00:00:26,180
to modify a site that's already been around for a while,
10

10

00:00:26,180  -->  00:00:29,900
it's been made, it's been up, and it's been edited for years.
11

11

00:00:29,900  -->  00:00:35,880
If I were to just open up their codebase, just pop open 
everything they've built and just look at it,
12

12

00:00:35,880  -->  00:00:39,750
well, there is a very good chance that I would get lost trying to figure out
13

13

00:00:39,750  -->  00:00:44,550
what everything in the page is trying to do, what it's referring to,
14

14

00:00:44,550  -->  00:00:48,650
when it's going to get used, what gets displayed, what doesn't,
15

15

00:00:48,650  -->  00:00:52,320
what part of the application is using this calculation.
16

16

00:00:52,320  -->  00:00:55,360
That is why we have a concept called commenting.
17

17

00:00:55,360  -->  00:00:59,900
So comments are literally just the way that the developer adds in
18

18

00:00:59,900  -->  00:01:05,830
verbal, non-restricted, text that doesn't follow
19

19

00:01:05,830  -->  00:01:10,340
any programming syntax to explain what they're doing.
20

20

00:01:10,340  -->  00:01:14,870
You might think, why didn't I just type in instructions for future generations
21

21

00:01:14,870  -->  00:01:17,020
right there next to everything else?
22

22

00:01:17,020  -->  00:01:24,120
Like, "Hey, I just took the total and put it on the screen."
23

23

00:01:24,120  -->  00:01:25,820
Why don't I just do it like that?
24

24

00:01:25,820  -->  00:01:30,460
Well, because, if you kind of remember 
from before, machines just follow instructions,
25

25

00:01:30,460  -->  00:01:35,720
they're not that smart, they're just very fast at following set instructions.
26

26

00:01:35,720  -->  00:01:41,580
So if I decided to go save this and run it, it would probably explode
27

27

00:01:41,580  -->  00:01:45,280
when it got to this point, because it will think this is code,
28

28

00:01:45,280  -->  00:01:47,540
it will think this is going to be in Python,
29

29

00:01:47,540  -->  00:01:51,500
and it has no idea what this is, it's just going to output a bunch of errors,
30

30

00:01:51,500  -->  00:01:55,210
and then depending on the language you're using, it may just
31

31

00:01:55,210  -->  00:01:58,480
break everything else, stop there and exit, and give you an error message,
32

32

00:01:58,480  -->  00:02:01,670
or it might just create an issue and then move on.
33

33

00:02:01,670  -->  00:02:03,800
Again, your browser doesn't know if it's code.
34

34

00:02:03,800  -->  00:02:08,600
So if it doesn't taste like code, it will flip out 
and the document will have a problem.
35

35

00:02:08,600  -->  00:02:13,580
So to avoid that happening, we have to what's called "comment it out,"
36

36

00:02:13,580  -->  00:02:16,230
that's the phrase, commenting something out.
37

37

00:02:16,230  -->  00:02:19,100
We have to use a specific symbol that when the browser reads it,
38

38

00:02:19,100  -->  00:02:23,010
the browser just knows inherently that if I see this symbol,
39

39

00:02:23,010  -->  00:02:26,180
everything after it, or within some basic parameters,
40

40

00:02:26,180  -->  00:02:31,090
I need to ignore it, because this is not code, 
this is that weird human speech.
41

41

00:02:31,090  -->  00:02:34,730
So in Python, the way you would do this is pretty simple.
42

42

00:02:34,730  -->  00:02:38,030
I would just take that thing I just wrote, and that's it.
43

43

00:02:38,030  -->  00:02:42,520
And notice how in Sublime it recognizes that I'm commenting,
44

44

00:02:42,520  -->  00:02:45,930
and so what does it do? It just kind of greys it out, so visually,
45

45

00:02:45,930  -->  00:02:49,370
if I'm looking at it, and I'm trying to program, this just doesn't get in the way.
46

46

00:02:49,370  -->  00:02:51,770
So then I could do really whatever I wanted.
47

47

00:02:51,770  -->  00:02:58,380
I could say "That's a really expensive burrito,"
48

48

00:02:58,380  -->  00:03:04,500
or subtotal, and then I could give explanations for how this works.
49

49

00:03:04,500  -->  00:03:08,720
"Everybody wants chips with their burrito."
50

50

00:03:08,720  -->  00:03:11,290
And when I run this, the computer is not going to think
51

51

00:03:11,290  -->  00:03:14,020
"Everybody wants chips with their burrito" is code,
52

52

00:03:14,020  -->  00:03:15,440
and it's not going to try to do anything with it.
53

53

00:03:15,440  -->  00:03:18,540
Now, in Ruby, the way you would do that is actually
54

54

00:03:18,540  -->  00:03:20,940
the exact same, that's actually kind of nice.
55

55

00:03:20,940  -->  00:03:23,750
So how exactly would I do this in, let's say, PHP?
56

56

00:03:23,750  -->  00:03:29,310
Now, remember, PHP has been around longer, 
so it has a lot of legacy issues,
57

57

00:03:29,310  -->  00:03:34,810
it has a lot of things that look like lower level programming languages,
58

58

00:03:34,810  -->  00:03:38,160
so that's why a lot of people think that it's unideal to use.
59

59

00:03:38,160  -->  00:03:40,020
At the end of the day, it's not really a big deal.
60

60

00:03:40,020  -->  00:03:42,080
The way you do it in PHP is a little bit more complicated,
61

61

00:03:42,080  -->  00:03:48,780
you would say, do a slash, then a star, I can say whatever I want here,
62

62

00:03:48,780  -->  00:03:53,140
and then I have to tell it again, now I'm ending my commenting.
63

63

00:03:53,140  -->  00:03:55,810
So then I do that, and just reverse it around.
64

64

00:03:55,810  -->  00:03:59,410
That's how it does it, so it knows to look for this, and then
65

65

00:03:59,410  -->  00:04:04,980
it's not going to comment it out until it sees that, 
the opposite version of that code.
66

66

00:04:04,980  -->  00:04:11,250
Now, in a sense, this is actually more efficient, because I can be more specific
67

67

00:04:11,250  -->  00:04:15,500
about what to ignore, such as everything 
essentially in between these goal posts.
68

68

00:04:15,500  -->  00:04:19,400
Now, in the other languages that are more open-ended and more loose,
69

69

00:04:19,400  -->  00:04:22,890
you might actually tell the browser to skip over some real code instructions
70

70

00:04:22,890  -->  00:04:26,710
because you accidentally got it too close to a comment.
71

71

00:04:26,710  -->  00:04:31,470
So I might, for instance, if I accidentally do like that or something,
72

72

00:04:31,470  -->  00:04:35,000
it might actually read it incorrectly, or there is times where
73

73

00:04:35,000  -->  00:04:38,610
it'll just skip over it, because you were not specific enough.
74

74

00:04:38,610  -->  00:04:42,520
Comments are a simple concept, but they're really, really important,
75

75

00:04:42,520  -->  00:04:46,320
especially if you're someone who works with developers or manages them.
76

76

00:04:46,320  -->  00:04:50,750
When you hire developers, what do you 
want them to do to make the ideal codebase?
77

77

00:04:50,750  -->  00:04:54,530
Well, generally speaking, you want them to comment on whatever they make
78

78

00:04:54,530  -->  00:04:58,170
so that the future hires who work with them can understand it,
79

79

00:04:58,170  -->  00:05:01,640
or if you have to get rid of that developer for whatever reason,
80

80

00:05:01,640  -->  00:05:06,900
the next person taking over their seat has 
less of a learning curve to figure it out,
81

81

00:05:06,900  -->  00:05:09,850
they don't have to stare at it for days to try to piece it together in their head,
82

82

00:05:09,850  -->  00:05:12,120
they can take these little cookie crumb clues.
83

83

00:05:12,120  -->  00:05:15,850
Ok, so that is commenting, it's a way to keep track of what you're doing,
84

84

00:05:15,850  -->  00:05:18,350
because when you have actual applications,
85

85

00:05:18,350  -->  00:05:21,450
these are just pages, and pages, and thousands of lines long,
86

86

00:05:21,450  -->  00:05:25,860
it can get confusing, unless you have someone pointing you in the right direction.
87

87

00:05:25,860  -->  00:05:27,190
That is what commenting is for.
88

88

00:05:27,190  -->  00:05:28,520
All right guys, see you in the next lecture!
