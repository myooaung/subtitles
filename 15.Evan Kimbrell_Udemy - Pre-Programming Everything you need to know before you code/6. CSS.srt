1
1

00:00:00,000  -->  00:00:02,370
All right, and we're on to the next one.
2

2

00:00:02,370  -->  00:00:05,400
All right, so we know roughly what HTML is, right?
3

3

00:00:05,400  -->  00:00:08,210
Every site will start with text and images.
4

4

00:00:08,210  -->  00:00:11,680
How do you format those text and images?
5

5

00:00:11,680  -->  00:00:14,490
Well, you format them with HTML.
6

6

00:00:14,490  -->  00:00:19,490
You add tags to each individual thing that 
you want to display on the browser,
7

7

00:00:19,490  -->  00:00:23,600
and that way you can change the way 
it actually displays. That's pretty much it.
8

8

00:00:23,600  -->  00:00:26,520
Now, if you lived in a world where 
all you could do to your website was
9

9

00:00:26,520  -->  00:00:30,770
put photos and text, and then 
tell it what color and size to be,
10

10

00:00:30,770  -->  00:00:34,540
you would find that the experience is a bit lacking.
11

11

00:00:34,540  -->  00:00:39,210
If you agree with that statement, then you agree 
with pretty much everyone in the world back in 1994.
12

12

00:00:39,210  -->  00:00:43,180
Remember how we talked about why there 
are different languages to begin with?
13

13

00:00:43,180  -->  00:00:45,940
Well, one of the reasons was that often times languages
14

14

00:00:45,940  -->  00:00:51,400
are created for what we need to do right now, 
and then later, when we need to do more,
15

15

00:00:51,400  -->  00:00:54,430
well... crap, I guess we need a new language.
16

16

00:00:54,430  -->  00:00:58,360
That oh-uh story is pretty much the genesis of CSS,
17

17

00:00:58,360  -->  00:01:02,830
which is otherwise known as Cascading Style Sheets.
18

18

00:01:02,830  -->  00:01:06,470
HTML was made to modify and format text originally.
19

19

00:01:06,470  -->  00:01:09,250
That was it, and it worked great for text.
20

20

00:01:09,250  -->  00:01:13,580
So naturally, in 1991, when the World Wide Web first came available,
21

21

00:01:13,580  -->  00:01:18,580
and people could put webpages up onto 
the internet for other people to see,
22

22

00:01:18,580  -->  00:01:24,820
naturally people went with the language that 
was actually available to them at the time to use.
23

23

00:01:24,820  -->  00:01:29,290
And no surprise, pages back in 1991 were just text.
24

24

00:01:29,290  -->  00:01:33,330
Basically it was like your school paper, but displayed online.
25

25

00:01:33,330  -->  00:01:37,040
Now, it wasn't actually until 1994 that HTML was upgraded to allow
26

26

00:01:37,040  -->  00:01:44,110
inclusion of things like images and, oh boy, 
let me tell you, stuff just got crazy after that.
27

27

00:01:44,110  -->  00:01:46,710
At the time, that is legitimately how people felt.
28

28

00:01:46,710  -->  00:01:50,270
I'm obviously joking though, because nothing compares
29

29

00:01:50,270  -->  00:01:52,220
to what's been happening in the last four years.
30

30

00:01:52,220  -->  00:01:56,720
Now, maybe you at home can put together 
why what I just said is a problem.
31

31

00:01:56,720  -->  00:01:59,320
Anyone? Ok.
32

32

00:01:59,320  -->  00:02:05,290
If HTML is made to edit text documents and 
then all of a sudden we can make web pages
33

33

00:02:05,290  -->  00:02:10,070
where text can be anywhere on the screen and look like anything,
34

34

00:02:10,070  -->  00:02:13,570
how exactly would HTML handle that?
35

35

00:02:13,570  -->  00:02:20,610
Going from, remember, just documents, to now 
having this free range screen that it has to handle.
36

36

00:02:20,610  -->  00:02:23,920
Let's say you're designing a site like the one we're in right now.
37

37

00:02:23,920  -->  00:02:25,640
On the right hand side, when you click on the,
38

38

00:02:25,640  -->  00:02:28,930
I think it's the Q&A button, you'll see a bunch of text.
39

39

00:02:28,930  -->  00:02:33,320
Now, look at the text at the top. You see it? Ok?
40

40

00:02:33,320  -->  00:02:35,530
How in HTML would you put that there?
41

41

00:02:35,530  -->  00:02:41,890
Remember, you only have 142 tags, 
and none of those HTML tags say
42

42

00:02:41,890  -->  00:02:44,290
"Put text here next to this."
43

43

00:02:44,290  -->  00:02:47,500
Remember? It just said, like, the size, 
and the color, and that was it,
44

44

00:02:47,500  -->  00:02:53,110
it didn't help with positioning, and that was one of 
the many problems that CSS was set out to solve.
45

45

00:02:53,110  -->  00:02:56,720
What CSS allowed you to do was 
have more control over the page.
46

46

00:02:56,720  -->  00:03:01,420
After all, HTML was never meant for page 
description, it was meant for text description.
47

47

00:03:01,420  -->  00:03:05,780
So with CSS, you create a variety of new attributes and then
48

48

00:03:05,780  -->  00:03:08,790
you can apply them to HTML elements on the page.
49

49

00:03:08,790  -->  00:03:12,200
The way you did that was by using what's called a "class,"
50

50

00:03:12,200  -->  00:03:17,040
which, let's be honest, is really the same 
thing as a tag, just with a different name.
51

51

00:03:17,040  -->  00:03:21,100
Remember how in HTML if you wanted 
to apply, let's say, underline to text,
52

52

00:03:21,100  -->  00:03:25,780
you would wrap it in code with little alligator brackets and "u,"
53

53

00:03:25,780  -->  00:03:30,070
and then end it with alligator brackets with a "u" and a slash in front of it?
54

54

00:03:30,070  -->  00:03:32,750
Well, CSS actually operates in a very similar way.
55

55

00:03:32,750  -->  00:03:34,950
Let's say you wanted to make that underlined text display
56

56

00:03:34,950  -->  00:03:38,290
on the top right corner at exactly that one specific spot.
57

57

00:03:38,290  -->  00:03:41,960
Well, what you would do, let's say, is create a class, name it,
58

58

00:03:41,960  -->  00:03:44,660
and then give it some detail, give it some attributes.
59

59

00:03:44,660  -->  00:03:49,630
This class, let's say, we'll call Class1, and has the properties of being
60

60

00:03:49,630  -->  00:03:56,740
50 pixels to the right and 600 pixels to the left 
from the center of the screen, just as an example.
61

61

00:03:56,740  -->  00:04:02,050
Then, much like a tag, you would wrap that 
text in its new class, and there you go,
62

62

00:04:02,050  -->  00:04:05,480
now that text gets the attributes of location,
63

63

00:04:05,480  -->  00:04:07,690
and it's displayed on your screen where you want to see it.
64

64

00:04:07,690  -->  00:04:13,310
Any attribute you give to that class will be then 
given to whatever you wrap in that class tag.
65

65

00:04:13,310  -->  00:04:16,090
To keep things simple, you would create these class rules either
66

66

00:04:16,090  -->  00:04:21,070
one, in the document, the same document 
as your text, but separated at the top.
67

67

00:04:21,070  -->  00:04:27,540
or two, what virtually everyone now does and 
you should do, when and if you learn how to program,
68

68

00:04:27,540  -->  00:04:33,680
is that you create a separate page, and you 
change the end of the name of the document to .css,
69

69

00:04:33,680  -->  00:04:38,240
and then you have the original document 
with your text just refer to it,
70

70

00:04:38,240  -->  00:04:41,520
that nifty skill that, remember, we talked about with HTML.
71

71

00:04:41,520  -->  00:04:44,350
The advantages to this second way of doing it are pretty obvious.
72

72

00:04:44,350  -->  00:04:47,900
One, you get to keep your text documents clean and easy to read,
73

73

00:04:47,900  -->  00:04:52,330
and two, multiple documents can share the same CSS document
74

74

00:04:52,330  -->  00:04:56,700
and then use its rules and different class attributes.
75

75

00:04:56,700  -->  00:05:01,570
If you wanted to, say, change the font 
on all the text in the entire website
76

76

00:05:01,570  -->  00:05:04,650
and not just the one page you're talking about, then you'd only
77

77

00:05:04,650  -->  00:05:09,210
have to go to one CSS sheet document and change it once.
78

78

00:05:09,210  -->  00:05:12,650
Out of curiosity, why is it called Cascading Style Sheets?
79

79

00:05:12,650  -->  00:05:18,090
Well, first off, it's a sheet that describes 
the style of the elements on a page.
80

80

00:05:18,090  -->  00:05:21,630
So that part was pretty obvious. 
Now, what does cascading mean?
81

81

00:05:21,630  -->  00:05:24,930
Cascading refers to the fact that classes can be combined
82

82

00:05:24,930  -->  00:05:28,870
and then displayed in essentially what's a "cascading" style.
83

83

00:05:28,870  -->  00:05:33,510
You know how, when someone comments on 
a blog post, it displays their comments normally,
84

84

00:05:33,510  -->  00:05:38,490
but if someone then comments on that 
specific comment, it indents their comment
85

85

00:05:38,490  -->  00:05:44,630
so that visually you can organize it, and 
actually understand who they're talking to.
86

86

00:05:44,630  -->  00:05:48,070
That concept we just talked about 
is called nesting, and the more you do it,
87

87

00:05:48,070  -->  00:05:50,860
the more it creates that indented staircase look,
88

88

00:05:50,860  -->  00:05:54,490
and that's where we get the word cascading and CSS.
89

89

00:05:54,490  -->  00:05:58,600
CSS, when you, say, make a class inside of a class, as in, like,
90

90

00:05:58,600  -->  00:06:02,710
a comment on top of a comment, or directed at a comment,
91

91

00:06:02,710  -->  00:06:05,800
what ends up happening is you have two separate classes,
92

92

00:06:05,800  -->  00:06:09,580
one is a subclass, and one is the master, mother class.
93

93

00:06:09,580  -->  00:06:14,280
The subclass only applies to what you apply it to, but it also inherits
94

94

00:06:14,280  -->  00:06:18,450
the attributes that are associated with the class that it's attached to.
95

95

00:06:18,450  -->  00:06:22,380
You don't need to obviously understand 
that in depth until you actually get into it,
96

96

00:06:22,380  -->  00:06:26,830
but just understand, by doing this over and over, 
it starts to look kind of like a staircase.
97

97

00:06:26,830  -->  00:06:28,880
Sure, that helps you understand why it's called that,
98

98

00:06:28,880  -->  00:06:33,240
but it's also why some people find CSS extremely frustrating.
99

99

00:06:33,240  -->  00:06:36,600
I would imagine front-end developers think purgatory is a life of
100

100

00:06:36,600  -->  00:06:40,360
endlessly editing CSS style sheets, and trying to figure out
101

101

00:06:40,360  -->  00:06:45,280
what class applies to what, and what 
class is canceling out the other class,
102

102

00:06:45,280  -->  00:06:49,220
and what class is inheriting the class that got cancelled.
103

103

00:06:49,220  -->  00:06:52,380
All right, that pretty much wraps up what 
you need to know on the topic of CSS.
104

104

00:06:52,380  -->  00:06:55,580
Currently, we are on CSS3, and, as you can imagine,
105

105

00:06:55,580  -->  00:06:57,660
the language is getting more and more important.
106

106

00:06:57,660  -->  00:07:00,560
Designers and front-end developers 
spend a large portion of their time
107

107

00:07:00,560  -->  00:07:04,530
learning how to master this language, 
so they can display their sites correctly
108

108

00:07:04,530  -->  00:07:06,640
as they originally intended.
109

109

00:07:06,640  -->  00:07:09,920
CSS is one of those languages that every web developer has to have
110

110

00:07:09,920  -->  00:07:14,640
a basic understanding of, at a bare minimum 
they have to know how to edit it.
111

111

00:07:14,640  -->  00:07:16,210
All right, next lecture we're moving on.
112

112

00:07:16,210  -->  00:07:21,720
We got text and formatting with HTML, 
we got page positioning and style with CSS,
113

113

00:07:21,720  -->  00:07:25,090
next up we're hitting JavaScript, 
which makes your site interactive.
114

114

00:07:25,090  -->  00:07:26,020
Stay tuned!
