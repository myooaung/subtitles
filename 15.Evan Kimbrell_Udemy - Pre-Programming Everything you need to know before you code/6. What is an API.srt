1
1

00:00:00,000  -->  00:00:02,200
Hey guys, welcome back to the course.
2

2

00:00:02,200  -->  00:00:08,050
All right, let's get ready to tackle yet another technology concept, the API.
3

3

00:00:08,050  -->  00:00:10,720
Have you ever heard someone say "The Facebook API crashed,"
4

4

00:00:10,720  -->  00:00:17,620
or "Twilio has such a great API," or "Slack's API won't let you do anything"?
5

5

00:00:17,620  -->  00:00:20,990
If not, well, you probably don't hang out with a lot of programmers.
6

6

00:00:20,990  -->  00:00:25,730
Well, never fear, APIs are actually not that complicated of a concept,
7

7

00:00:25,730  -->  00:00:28,370
and I think we can tackle them relatively easily.
8

8

00:00:28,370  -->  00:00:32,600
The term API stands for Application Programming Interface,
9

9

00:00:32,600  -->  00:00:37,430
which is kind of gibberish, but we can take that, I think, and break it down.
10

10

00:00:37,430  -->  00:00:40,770
Let's say you're building this sweet app where you can write down
11

11

00:00:40,770  -->  00:00:46,280
all the tasks you need to do in a really pretty and snazzy to do list app.
12

12

00:00:46,280  -->  00:00:53,350
First of all, there are seriously hundreds 
of these out there yet they still keep coming.
13

13

00:00:53,350  -->  00:00:57,420
Let's say you think it'd be really cool that when the user types in a name,
14

14

00:00:57,420  -->  00:01:03,400
the app could fill out the to do item with 
information about that person from their Facebook.
15

15

00:01:03,400  -->  00:01:07,630
Now, no doubt you've seen this happen, because it happens everywhere.
16

16

00:01:07,630  -->  00:01:10,540
One app borrows information from another,
17

17

00:01:10,540  -->  00:01:14,440
or similarly, one app tells another to do something.
18

18

00:01:14,440  -->  00:01:18,110
I can post a message on Facebook, and with the click of a button,
19

19

00:01:18,110  -->  00:01:21,680
that same message can auto post on Twitter.
20

20

00:01:21,680  -->  00:01:22,780
Thank you, Buffer.
21

21

00:01:22,780  -->  00:01:24,850
How do they do that exactly?
22

22

00:01:24,850  -->  00:01:27,890
Well, it's through this concept called APIs.
23

23

00:01:27,890  -->  00:01:31,090
Now, let's imagine we're in that to do list scenario,
24

24

00:01:31,090  -->  00:01:34,030
you're the founder, you just created this app.
25

25

00:01:34,030  -->  00:01:36,900
Chances are this is the situation you're looking at.
26

26

00:01:36,900  -->  00:01:42,230
You probably think that you have a whole lot of valuable code files
27

27

00:01:42,230  -->  00:01:48,340
and a whole lot of user data information 
within your app, and within your app's community.
28

28

00:01:48,340  -->  00:01:52,780
At the same exact time, Facebook has the same thing,
29

29

00:01:52,780  -->  00:01:54,850
and they think all the features they've built,
30

30

00:01:54,850  -->  00:01:58,650
and all the users they've collected are also pretty valuable.
31

31

00:01:58,650  -->  00:01:59,820
This is all common sense.
32

32

00:01:59,820  -->  00:02:02,760
Now, if I wanted to ask Facebook for that information,
33

33

00:02:02,760  -->  00:02:05,900
they couldn't just manually give it to me,
34

34

00:02:05,900  -->  00:02:09,000
because, number one, that would take way too long,
35

35

00:02:09,000  -->  00:02:14,000
and number two, they can't open up the code base to me,
36

36

00:02:14,000  -->  00:02:16,800
because that would put them in a really vulnerable situation,
37

37

00:02:16,800  -->  00:02:20,100
because I could steal something, or, more likely,
38

38

00:02:20,100  -->  00:02:22,270
I could just break something in their application.
39

39

00:02:22,270  -->  00:02:25,850
So the solution to this conundrum was what we're talking about, which is an API,
40

40

00:02:25,850  -->  00:02:31,750
also referred to as an API layer, because APIs exist almost
41

41

00:02:31,750  -->  00:02:35,520
outside of the main code base of your application.
42

42

00:02:35,520  -->  00:02:42,030
An API is basically like a mini application that 
runs on top of the larger application you're building,
43

43

00:02:42,030  -->  00:02:47,770
and it's used to facilitate the transfer of 
information to external apps that ask for them.
44

44

00:02:47,770  -->  00:02:49,740
The API can do a number of things.
45

45

00:02:49,740  -->  00:02:52,400
Since it's a program, it can automatically handle
46

46

00:02:52,400  -->  00:02:55,240
the transfer and fulfilling of information requests.
47

47

00:02:55,240  -->  00:02:57,570
That saves everyone involved time.
48

48

00:02:57,570  -->  00:03:01,250
It can also, say, limit what the other apps can ask for,
49

49

00:03:01,250  -->  00:03:03,820
it simply won't respond if they ask for the wrong thing,
50

50

00:03:03,820  -->  00:03:08,920
or if they ask for too much of something, they can give them denial responses.
51

51

00:03:08,920  -->  00:03:11,550
The last thing it can do is give out detailed information on
52

52

00:03:11,550  -->  00:03:15,500
the best way to access the information you have such that
53

53

00:03:15,500  -->  00:03:19,300
it doesn't make a mess or slow down the system of the host.
54

54

00:03:19,300  -->  00:03:22,130
In one of my courses, I think it was the Product Management course,
55

55

00:03:22,130  -->  00:03:25,800
we made an analogy of an API to a waiter,
56

56

00:03:25,800  -->  00:03:28,540
and I think it's actually a pretty good way of thinking about it.
57

57

00:03:28,540  -->  00:03:34,350
If I was at a restaurant, I would sit down, then I would look at a menu,
58

58

00:03:34,350  -->  00:03:40,460
and when I figured out what it is that I wanted, 
I would ask the waiter to go get that for me.
59

59

00:03:40,460  -->  00:03:43,600
The waiter would then go to the kitchen, get what I want,
60

60

00:03:43,600  -->  00:03:46,130
and bring it back to me. I might pay him.
61

61

00:03:46,130  -->  00:03:50,160
Now in the programming world, if I had that to do list app,
62

62

00:03:50,160  -->  00:03:53,470
and let's say I wanted information on Jessica Smith,
63

63

00:03:53,470  -->  00:03:58,070
I would ask the API for information on her, it would then leave,
64

64

00:03:58,070  -->  00:04:01,210
go dig up that information, and then bring it back to me.
65

65

00:04:01,210  -->  00:04:04,610
Piping hot. The food, not the person.
66

66

00:04:04,610  -->  00:04:07,950
If I was making a website, little known fact, I could actually list out
67

67

00:04:07,950  -->  00:04:12,250
all of my Udemy courses through requesting the Udemy API.
68

68

00:04:12,250  -->  00:04:16,230
That way, I can save time displaying it manually on my site,
69

69

00:04:16,230  -->  00:04:19,730
and I can access information they have that I might not.
70

70

00:04:19,730  -->  00:04:22,030
So that's the basics of an API.
71

71

00:04:22,030  -->  00:04:25,800
Some alternative systems that you might see that are actually based off of APIs
72

72

00:04:25,800  -->  00:04:29,510
are things like the Facebook, LinkedIn, and Twitter login buttons.
73

73

00:04:29,510  -->  00:04:33,240
You know those buttons that let you login to the account of the website
74

74

00:04:33,240  -->  00:04:36,180
by providing them with your Facebook information?
75

75

00:04:36,180  -->  00:04:39,940
But essentially what's happening there is you click Facebook login,
76

76

00:04:39,940  -->  00:04:45,970
the system then goes to the Facebook API and asks "Hey, is this person real?"
77

77

00:04:45,970  -->  00:04:51,230
and Facebook login says "Yes, they are real. 
Here is some information you can use about them",
78

78

00:04:51,230  -->  00:04:54,500
then the app comes back and it lets you login,
79

79

00:04:54,500  -->  00:04:57,900
now that you are verified as a real bona fide human being.
80

80

00:04:57,900  -->  00:05:01,100
That's probably more than you ever wanted to know about APIs,
81

81

00:05:01,100  -->  00:05:04,840
but they are incredibly helpful to know and understand.
82

82

00:05:04,840  -->  00:05:08,010
Now, there are two big changes you need to observe
83

83

00:05:08,010  -->  00:05:10,550
with your newfound understanding of technology.
84

84

00:05:10,550  -->  00:05:14,150
Number one, when people build apps they're doing
85

85

00:05:14,150  -->  00:05:17,550
less and less of the actual building themselves,
86

86

00:05:17,550  -->  00:05:22,550
and more and more of asking other apps' APIs to do the work
87

87

00:05:22,550  -->  00:05:24,890
and to give them the information they need.
88

88

00:05:24,890  -->  00:05:26,890
In fact, there are companies that exist out there
89

89

00:05:26,890  -->  00:05:31,330
where their sole customer storefront is just an API.
90

90

00:05:31,330  -->  00:05:36,270
If I wanted to add in, let's say, text messaging features into that to do list app,
91

91

00:05:36,270  -->  00:05:39,570
where it needs to remind you, so it sends you a text message,
92

92

00:05:39,570  -->  00:05:43,070
I wouldn't actually create my own system for sending text messages,
93

93

00:05:43,070  -->  00:05:47,080
I'd simply connect to the API of a service called Twilio
94

94

00:05:47,080  -->  00:05:50,060
and then let them do it in exchange for a small fee.
95

95

00:05:50,060  -->  00:05:54,420
Twilio brings me to the second point 
and the second trend you need to be aware of.
96

96

00:05:54,420  -->  00:05:59,960
We're now seeing businesses being created where the API is not an afterthought,
97

97

00:05:59,960  -->  00:06:02,230
it's the actual business model.
98

98

00:06:02,230  -->  00:06:07,740
You can effectively create a commonly used and useful chunk of an application,
99

99

00:06:07,740  -->  00:06:12,070
let people connect to it, and then charge them for using it.
100

100

00:06:12,070  -->  00:06:18,250
Crunchbase is an example of an API that was built 
to give people information about startups.
101

101

00:06:18,250  -->  00:06:23,800
If you wanted to use them, well, they have a 
freemium model, where it's a limited free version,
102

102

00:06:23,800  -->  00:06:28,090
or you can pay a ton of money to get full access to their sweet database of information
103

103

00:06:28,090  -->  00:06:31,000
that's maintained and improved all the time.
104

104

00:06:31,000  -->  00:06:35,930
So it's a whole lot less of "let's build all of this," and a whole lot more of
105

105

00:06:35,930  -->  00:06:40,180
"let's build a little bit and borrow the rest from other APIs."
106

106

00:06:40,180  -->  00:06:41,050
Ya dig?
107

107

00:06:41,050  -->  00:06:42,430
Ok, moving on.
