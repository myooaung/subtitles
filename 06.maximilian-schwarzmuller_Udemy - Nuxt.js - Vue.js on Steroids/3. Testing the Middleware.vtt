WEBVTT

00:02.050 --> 00:04.250
So we added our own server side middleware.

00:04.300 --> 00:05.500
Let's now test it.

00:05.590 --> 00:12.280
Let's test it from our next application and let's say we want to send the request to track data whenever

00:12.370 --> 00:13.570
the user logs in.

00:13.570 --> 00:15.080
Just an example.

00:15.100 --> 00:24.670
So here in our offending Kaid user action I want to send an additional post request to our custom API

00:24.870 --> 00:27.920
whenever in an off indication process succeeded.

00:28.240 --> 00:35.200
So here in the Ben Block where we set the token and so on here I'll then actually send a number request

00:36.050 --> 00:42.380
and so after setting everything here I'll return a new call to this X years.

00:42.590 --> 00:43.630
Like that.

00:43.860 --> 00:50.420
But this time the request goes to localhost 3000 or your production to host 1.

00:50.490 --> 00:51.430
Once it's running.

00:51.540 --> 00:57.200
You could of course also exchange this with some environment variable which is set up in your inbox

00:57.200 --> 00:58.100
config.

00:58.440 --> 01:05.050
So to localhost 40000 slash API slash track data.

01:05.490 --> 01:08.420
And now here I just want to send some data.

01:08.580 --> 01:15.060
If you have a look at our backend we're trying to access a data field let's simply send a javascript

01:15.090 --> 01:17.010
object which has a data field.

01:17.040 --> 01:24.890
That is what we're trying to extract which might be just a message authenticated something like that.

01:24.890 --> 01:30.040
Now if you save this and you go back to your application let's log in

01:33.120 --> 01:34.280
we're redirected.

01:34.680 --> 01:40.440
And here you see that stored data of Finnic handed was printed on the server side.

01:40.440 --> 01:42.420
This is coming from your own code.

01:42.600 --> 01:48.240
And again you could have done anything here you could have reached out to your own database is how you

01:48.240 --> 01:54.840
can run your own server side code and how you can achieve a closer integration of next and your server

01:54.840 --> 02:01.140
side code while still having that separation of necks being responsible for the preparation of your

02:01.140 --> 02:07.980
pages and the rendering of your pages and your Abra areas and the Express framework being responsible

02:08.040 --> 02:09.760
for your own server side logic.
