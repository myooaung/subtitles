WEBVTT

00:02.100 --> 00:08.880
So in the last lecture we added the capability to load posts and use posts in the admin area.

00:08.880 --> 00:15.840
Now I want to make sure that if we click save and the admin post form in the Edmond area a dead we actually

00:15.900 --> 00:17.240
save that too.

00:17.250 --> 00:18.430
While our Bacchante.

00:18.780 --> 00:25.740
For that I'll add the submittal listener remember an admin Post forum we admit are a custom seperate

00:25.770 --> 00:34.990
event here now to do that back in our index of you fall in the admin post at the page.

00:35.070 --> 00:38.780
I just need listen to that custom event and then execute on submitted.

00:38.780 --> 00:40.360
Or whatever you want.

00:40.560 --> 00:43.260
Now I'll add this to my methods here.

00:43.320 --> 00:51.710
In my view component code so methods is a javascript object where I have my on submitted method.

00:52.080 --> 00:59.610
This will receive my edited post that is passed on automatically from the Edmon post form.

00:59.610 --> 01:06.870
Remember this object here and this will contain the post as it was entered by the user.

01:06.870 --> 01:09.350
Now we can simply do one thing now.

01:09.450 --> 01:18.260
We can send a number access request where we do a porter request to put it in the place of the old post.

01:18.270 --> 01:24.650
The one we loaded because we want to completely replace it with that edited post for that.

01:24.840 --> 01:29.640
I'll use the exact same u r l as I did for getting to post.

01:29.700 --> 01:38.130
However the post ID is now not something I get from the context but from this route parents were in

01:38.130 --> 01:39.550
the normal view world.

01:39.560 --> 01:41.830
Here again we're not running on the server.

01:41.850 --> 01:43.750
The component has been created.

01:43.770 --> 01:47.700
Out has been unchecked that we can access it like this.

01:47.700 --> 01:53.200
So now we sent this port request to store our new data.

01:53.460 --> 01:55.670
We have to send this as a second argument.

01:55.890 --> 02:00.560
The edited host does should replace the existing data on the server.

02:00.600 --> 02:09.720
For that given ID now I can change my then call here to simply print the result that gets returned up

02:09.720 --> 02:11.190
on this request.

02:11.250 --> 02:16.440
We can also catch any error and log logon to the console if you want to handle it.

02:16.470 --> 02:19.240
For example you show a message or something like that.

02:19.260 --> 02:21.040
You can of course also do that here.

02:21.060 --> 02:25.020
You can't load the error page though because we're not running this on the server.

02:25.020 --> 02:31.780
It runs under load at us so we can handle the error more elegantly instead of just showing a page.

02:31.830 --> 02:39.600
So with that we're doing all of this let's see if it works let's go back to the app and let's simply

02:39.960 --> 02:41.790
reload this page here.

02:41.790 --> 02:46.680
This should work and populate this all with the post status since we're doing this dynamically and let's

02:46.680 --> 02:48.110
update the preview text.

02:48.120 --> 02:51.710
Let's save a get a 200 success code.

02:53.100 --> 03:01.820
And now if I upload my list of posts page we see doesn't work here and we all see this on firebase of

03:01.820 --> 03:02.370
course.

03:02.450 --> 03:04.390
It was successfully updated.

03:04.490 --> 03:10.700
Now with that one thing we can do is we can go back to our code and when we submit this we probably

03:10.700 --> 03:12.730
also want to redirect once we're done.

03:12.830 --> 03:19.460
So instead of just logging the response here when putting does post I can also use this router push

03:19.670 --> 03:25.940
and go back to slash admin just as I want to do it when I create a new post here.

03:25.990 --> 03:33.990
When we are done creating it I also want to go back if we do this and we go back to our application.

03:34.350 --> 03:37.780
Let's see what happens if I go there and edit the posts.

03:37.770 --> 03:45.870
I go back to one questionmark and save that works but you see that the data here is not up to date unless

03:45.870 --> 03:48.120
I reload the page.

03:48.120 --> 03:49.730
The reason for this is simple.

03:49.830 --> 03:53.400
We're getting the data on this page from our store.

03:53.430 --> 03:58.240
Remember we're initializing it with next server and it and that's it.

03:58.260 --> 04:01.900
We never get updated data does us.

04:01.920 --> 04:07.980
The downside of using Nax server is that your getting the data from the store and it only runs on the

04:07.980 --> 04:09.230
initial load.

04:09.270 --> 04:14.520
If you manipulate the data thereafter you should also directly manipulate it in the store.

04:14.700 --> 04:20.390
So in our case when we create a new post we want to store that in the store too.

04:20.640 --> 04:27.300
If we edit a post we want to edit it in the store to our wives our store does not reflect the latest

04:27.300 --> 04:30.460
data but take a look at this in the next lecture.
