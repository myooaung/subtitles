WEBVTT

00:02.210 --> 00:08.250
Back in our project I'm in our route indexed view file sody index W-4.

00:08.260 --> 00:11.120
You can find directly in the pages folder.

00:11.390 --> 00:14.000
There we have our post list now.

00:14.020 --> 00:17.930
We do actually use that post list and a couple of other places too.

00:18.200 --> 00:21.860
And we will edit it step by step in all these places.

00:21.860 --> 00:26.410
But right now let's focus on this one in our root index the view file.

00:26.420 --> 00:32.630
Now thus far if we have a look at the post list component we of course see that in the end we just get

00:32.630 --> 00:39.920
some hard coded posts previous snippets in here and this is not really the purpose of this post list

00:39.920 --> 00:40.550
is it.

00:40.640 --> 00:44.080
We don't want to have hardcoded values in there instead.

00:44.120 --> 00:51.650
A better use case would be if the post list would accept a list of guess what posts and then we would

00:51.650 --> 00:58.590
simply loop through dead last year and that list of posts on the average hand is provided by which ever

00:58.600 --> 01:02.570
a component or a page includes this post list component.

01:02.840 --> 01:03.690
Let's get there.

01:03.800 --> 01:10.850
Let's start by removing the post review components in the post list component so that we only got one.

01:10.970 --> 01:16.880
This will be the one that will loob Frew and for that I need to get some data from the outside.

01:17.150 --> 01:20.630
So besides D is admin property we're expecting.

01:20.630 --> 01:24.540
Let's all accept a post's property now here.

01:24.560 --> 01:30.350
The type would be array lets say because you want to loop through the posts and we absolutely require

01:30.350 --> 01:30.680
that.

01:30.710 --> 01:36.350
So it is a required property because we can't render any previous without getting posts.

01:36.410 --> 01:39.170
Then this component would be pretty useless.

01:39.770 --> 01:44.020
So we get a list of posts in this post property.

01:44.120 --> 01:51.050
Hence we can go to our post preview and use the for the before directive to loop Fruita posts.

01:51.320 --> 02:00.350
We can store the post of each iteration in a variable named post of posts or in posts both syntax work

02:00.530 --> 02:04.340
and what that loop through all the posts we get in this property.

02:04.370 --> 02:10.880
Now if we have a we for loop we always need to bind the key that is required by the nucleus.

02:11.030 --> 02:17.840
So this key special property which allows you to efficiently manage our list behind the scenes and we

02:17.840 --> 02:20.830
binded to let's say post ID.

02:20.900 --> 02:25.750
Now with that we already see how we can access our posts for each iteration.

02:25.790 --> 02:28.430
And of course I don't just want to bind that key.

02:28.430 --> 02:32.370
I also want to bind that Id parameter which is important for routing.

02:32.480 --> 02:35.410
Here I also want to bind to post ID.

02:35.570 --> 02:48.590
Now regarding the thumbnail here I want to bind dared to post thumbnail So host thumbnail lets say and

02:48.590 --> 02:51.580
the title obviously should also be bound to.

02:51.630 --> 02:59.970
In this case then post title like this and finally the same for the preview text of course does all

02:59.970 --> 03:06.840
that should be coming from an object forgetting post preview text maybe with that we got a reusable

03:06.840 --> 03:12.640
post list component that simply creates as many post preview components as needed.

03:12.660 --> 03:15.150
Per this post we're getting.

03:15.330 --> 03:16.620
So we just tonsured dead.

03:16.620 --> 03:17.700
We are getting one.

03:17.760 --> 03:21.170
So let's go back to the index the view fault in the pages folder.

03:21.180 --> 03:27.990
Here we have the post list and now we need to provide dead posts property which we just added inside

03:27.990 --> 03:29.580
of that component.

03:29.580 --> 03:35.640
Now of course what we can do is we can add the normal data method and return our object where we have

03:35.670 --> 03:42.510
all loaded posts let's say which could be an array of javascript objects that have all these fields

03:42.610 --> 03:45.380
were extracting inside the post list component.

03:45.480 --> 03:50.240
So an ID field thumbnail field a title field in a review text field.

03:50.370 --> 03:58.840
Let's add a couple of these so let's add one with ID one where we also then have our title which could

03:58.840 --> 04:10.240
be first post let's then add our preview text here which could be this is our first post and that's

04:10.240 --> 04:12.340
all to add a thumbnail.

04:12.340 --> 04:13.930
And here we can grab the link.

04:13.930 --> 04:17.680
We're already using it our parts of the application.

04:18.910 --> 04:21.930
Like in our admin post ID area here.

04:22.060 --> 04:25.180
I still have to addling So let's grab it from there.

04:25.240 --> 04:29.770
And actually we're pretty close to creating such an object admen content.

04:29.770 --> 04:34.880
These are fields we might need to add later but let's create this basic object for now.

04:35.170 --> 04:38.490
And what that does is one loaded post and desirÃ©.

04:38.530 --> 04:45.340
No let's simply add a second one with ID to where we maybe say second post and creative as we are we

04:45.340 --> 04:49.300
say this is our second post so that we can tell the difference.

04:49.720 --> 04:53.610
With that let's go up a bit and it template.

04:53.620 --> 04:58.700
We now need to pass these posts which we just stored in loaded posts to the post list.

04:58.870 --> 05:05.620
So let's set up a dynamic binding by adding a colon and passing loaded posts to post list should now

05:05.620 --> 05:06.580
do the trick.

05:06.580 --> 05:09.940
Make sure to save that file and reload the page.

05:09.940 --> 05:12.420
And now we're getting close.

05:12.440 --> 05:20.410
It's working but we get the property validation error from the post preview because we expect the ID

05:20.410 --> 05:23.600
to be a string but it is a number.

05:23.740 --> 05:25.910
So let's quickly kind of to a number.

05:25.950 --> 05:30.250
Simply a string use me by wrapping the numbers with quotation marks.

05:30.250 --> 05:31.980
And with that if we reload the page.

05:32.110 --> 05:35.050
This is now working and we can load posts again.

05:35.050 --> 05:37.670
And with that we are working with data of course.

05:37.730 --> 05:43.660
Still hard coded data but now it's not that big of a step to awls imagine that this would be loaded

05:43.660 --> 05:45.000
dynamically.

05:45.010 --> 05:49.840
Now let's dive into how we could load this dynamically in the next lecture.
