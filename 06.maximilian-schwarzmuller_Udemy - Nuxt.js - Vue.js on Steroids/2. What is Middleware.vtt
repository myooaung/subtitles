WEBVTT

00:02.000 --> 00:09.590
Let's start diving into middleware before we have a look at authentication middleware basically describes

00:09.650 --> 00:18.290
a function that's executed before a route is loaded before a page is loaded and you can attach middleware

00:18.290 --> 00:22.600
to all your routes so you can basically say load debt middleware.

00:22.610 --> 00:30.190
I'm giving you for any route in the app or you can also give it on a per layout or per page basis.

00:30.380 --> 00:36.470
But before we dive into that let's simply create a middleware and Ford and all create my lock middleware

00:36.470 --> 00:38.700
so locked on to Julius.

00:38.750 --> 00:44.820
I created this in the middle where folder as you can see and a middleware is just a function.

00:44.840 --> 00:50.120
It's really just a javascript function which receives the Context object.

00:50.180 --> 00:56.240
You already know that object from the async data and the server and its actions.

00:56.240 --> 01:04.200
Now in this function here we can run which ever code we want to run and it will be executed.

01:04.240 --> 01:06.800
But for a given page is loaded.

01:06.950 --> 01:10.640
Now important if you're running a synchronous code in your.

01:10.670 --> 01:17.700
So for example if you're sending HTP request which you can do then you will have to return a promise

01:17.700 --> 01:18.110
here.

01:18.170 --> 01:21.220
So return ex-CEO SCAD for example.

01:21.320 --> 01:25.230
So return the promise which wraps your asynchronous code.

01:25.730 --> 01:29.980
If you're running synchronous code you don't need to return anything in here.

01:29.990 --> 01:38.210
So if we're not let's do something very simple and let's simply log middleware the lock middleware is

01:38.210 --> 01:41.060
running for example.

01:41.140 --> 01:42.970
Now this function here.

01:43.000 --> 01:44.630
And that's why I didn't give it a name.

01:44.680 --> 01:49.700
Should then be exported so export it as the default office file.

01:49.840 --> 01:52.300
This is how developed middleware looks like.

01:52.300 --> 01:57.300
Again any code can be executed or if it's asynchronous return it.

01:57.490 --> 02:04.290
Now since you see that we get this context object as an argument you might already guess that this malware

02:04.300 --> 02:10.600
runs both on the server and the client depending on whether we're on the initial load or if we're clicking

02:10.600 --> 02:13.230
around in the already loaded application.

02:13.360 --> 02:15.850
And that is exactly the case middleware.

02:15.850 --> 02:23.020
This function is executed either on the server for the first load or on the client but to ensure that

02:23.020 --> 02:27.040
it's executed at all we need to attach it to a page.

02:27.250 --> 02:32.140
So the lowest level we can attach it to is one specific page.

02:32.170 --> 02:40.300
For example the Post's Page year we add it by going to our view component object here and there we can

02:40.300 --> 02:47.040
add a special keep the middleware key just as async data does only works on page components.

02:47.050 --> 02:53.800
If you added to another component this will have no effect middleware then takes a string of the file

02:53.800 --> 02:56.770
name of your middleware without the file extension.

02:56.770 --> 03:03.650
So in my case just log log will then refer to this locked O.J.'s file in the middleware folder.

03:03.700 --> 03:06.560
So you should place all your M.O.s in that folder.

03:06.820 --> 03:11.880
And with that tiny change whenever we load this index of you fall in the post folder.

03:11.920 --> 03:13.980
We should execute this middleware.

03:14.290 --> 03:15.190
Let's see this in action.

03:15.190 --> 03:17.530
Let's go back to our running application.

03:17.530 --> 03:24.700
I'm on the starting page here and ignored at Arutz just to image it doesn't find and never know navigate

03:24.730 --> 03:25.920
to block.

03:26.080 --> 03:27.590
We see middleware.

03:27.640 --> 03:31.330
The log middleware is running in the log here.

03:31.330 --> 03:37.650
Now if I reload the page we don't see it here but we see it in our server side log.

03:37.810 --> 03:42.610
And this is what I mentioned middleware runs on either the server if we're loading the page for the

03:42.610 --> 03:48.760
first time if we're loading it because we refreshed the page or entered a you are ill or it runs on

03:48.760 --> 03:49.550
the client.

03:49.600 --> 03:55.800
If we got there by clicking around now we added mail word to a single page.

03:55.890 --> 03:57.500
We're not limited to this.

03:57.690 --> 04:05.400
As we said you can also add middleware to a out to loaded on any page that uses deadly mode or you use

04:05.400 --> 04:06.950
it on all routes.

04:07.050 --> 04:09.300
Let me show you how you attach it to a layout.

04:09.540 --> 04:15.680
Let's say we want to attach it to the default layout then we can simply go to the view component there

04:16.020 --> 04:22.610
and add to middleware key here again added in the same way as you added it to a single page.

04:22.710 --> 04:28.650
And if you now save this you already see the output here in the server because it reloaded the page

04:29.040 --> 04:30.690
reload the page again.

04:30.720 --> 04:32.620
We see it again here.

04:32.620 --> 04:41.460
And interesting thing is if we now go to about I'll see it in the console because now I navigate there

04:41.460 --> 04:43.820
by clicking if I reload the page.

04:43.940 --> 04:48.900
I don't see the console but it's added to my service side belong there.

04:48.930 --> 04:57.770
We now log it five times as you can see if I go back to the blog page you see now it's actually printed

04:59.230 --> 05:05.820
twice a year because I edited to both the layout and to the individual page.

05:05.950 --> 05:12.110
So this indicates that middleware is executed multiple times if we edit on different levels.

05:12.280 --> 05:14.920
And that is actually the wanted behavior.

05:14.920 --> 05:19.170
So you can't add middleware to a page tool layout or to both.

05:19.450 --> 05:26.220
The last option you have is that you added to all routes you do this in the next conflict Julia's fault.

05:26.380 --> 05:32.640
And there you can do that by adding their router configuration item I mentioned in the last module there.

05:32.650 --> 05:36.550
You can also add a middleware key and point to the log middleware.

05:36.880 --> 05:39.920
And if you do this it recompiles.

05:40.040 --> 05:46.160
And now let's see what happens if I reload this page I'm on the all locked post page and now we get

05:46.250 --> 05:48.460
the middleware launched five times.

05:48.710 --> 05:55.100
And if you're wondering why it's executed five times if we only edited two free places this is simply

05:55.100 --> 05:59.290
happening on the server because there are some redirections going on.

05:59.630 --> 06:06.470
You can see that it only runs free times in reality so to say if you navigate away and back to the block

06:06.470 --> 06:09.900
posts now you see only three new words were added here.

06:09.920 --> 06:13.630
This becomes even clearer if you navigate away reload.

06:13.760 --> 06:17.720
So the console is cleared and go back to block three times.

06:17.750 --> 06:23.360
This is how the middleware runs and how it is executed it's executed for each place where you edit.

06:23.390 --> 06:29.090
But then you've got different places where you can added the general router middleware attached to all

06:29.090 --> 06:34.490
routes on a given layout or on an individual page.

06:34.490 --> 06:38.350
Now I will remove some of the logging millibar for now by commenting it out.

06:38.450 --> 06:40.500
But this is something you should keep in mind.

06:40.640 --> 06:44.270
This is how you can run code before you enter and you route.
