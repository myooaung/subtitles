WEBVTT

00:02.100 --> 00:05.880
So we had a look at page components and layouts.

00:05.880 --> 00:12.810
Now everything is looking actually in our very very simple demo application and we'll create a far more

00:12.810 --> 00:17.510
beautiful one in the next course module when we dive into the course project.

00:17.850 --> 00:23.630
But let's already understand where we can add styling and where we typically do it.

00:23.700 --> 00:30.060
You can get styling directly to a page and you should add it by adding a style property.

00:30.180 --> 00:34.860
And typically you would scope it by adding the scoped property.

00:34.890 --> 00:40.040
This ensures that whatever you define here only applies to elements in this page.

00:40.050 --> 00:42.860
So only M L elements and so on.

00:42.900 --> 00:50.730
Add it to this page and then you can use the normal C-s as styles and dynamic views style features like

00:51.450 --> 00:55.050
the bind style or viewpoint class.

00:55.170 --> 00:58.640
All the things you already know from future yes.

00:58.800 --> 01:06.000
So that is how you can style pages and they are used or did that is used to style the general page content

01:06.750 --> 01:12.930
if you include components and you should do that for bigger building blocks then you would add the styling

01:12.930 --> 01:16.330
directly into component as we're doing it for the header.

01:16.500 --> 01:23.460
So in the header we could actually go up its fervor and style our links by removing the underlines with

01:23.460 --> 01:28.390
text decoration nonne and giving them a color of white.

01:28.400 --> 01:31.840
Now if we go back we would have these links here.

01:32.120 --> 01:39.710
Maybe you use black here but if we Habra over one we turn it to white by adding Gnab items a habere

01:39.950 --> 01:46.460
nav items a active and then giving it a color of white.

01:46.460 --> 01:52.030
Now we have a certain styling that's applied to our head or component.

01:53.760 --> 01:57.870
And that's not all however sometimes you have stars that should be applied.

01:57.870 --> 01:59.580
Application wide.

01:59.820 --> 02:06.920
If you have application wide styles you can either use a default of you fall into Layout folder.

02:07.320 --> 02:12.990
However you will face an issue then if you are using multiple layouts because layouts.

02:12.990 --> 02:16.130
Not using the default would not get Stahl's.

02:16.170 --> 02:18.160
So let me show you how this works.

02:18.180 --> 02:26.190
We could add aged female body and remove the margin here and if I do that then we would remove that

02:26.190 --> 02:33.490
empty space between the header and the border of our page for The Root page for localhost 3000.

02:33.760 --> 02:38.460
But on the user's page once you reload it because otherwise it didn't pick this up.

02:38.670 --> 02:40.500
The margin is back there.

02:40.860 --> 02:44.430
So this actually does not work as expected.

02:44.430 --> 02:50.730
If we reload the page because then the layout is not taken into account because it has its own layout.

02:50.730 --> 02:57.140
Sure we could add the styling to that too but wouldn't it be great to have one central place for Dadge

02:57.140 --> 03:02.930
you can use the assets folder and maybe add a stylus subfolder and then there.

03:02.970 --> 03:05.000
Let's add a main dot CSSA file.

03:05.070 --> 03:06.630
The names here don't matter.

03:06.630 --> 03:08.470
You could name the folder differently.

03:08.490 --> 03:10.920
You could name the CSA as file differently.

03:10.920 --> 03:14.090
Only the position DSS folder matters.

03:14.460 --> 03:20.790
Now we could grab our aged female body is styling from the default of your file and put it into the

03:20.790 --> 03:22.770
main not successful.

03:22.770 --> 03:24.860
Now we just need to inform the future.

03:24.870 --> 03:34.380
Yes that does see us as false should be loaded into our document for every document and to do that we

03:34.380 --> 03:36.650
go to the next conflict file.

03:36.720 --> 03:39.020
I'll dive deeper into that file later.

03:39.240 --> 03:45.060
For now we can already do is we can go to that C-s as property which you should see by default.

03:45.120 --> 03:47.000
If you don't just add it.

03:47.100 --> 03:52.000
This is an array of Puff's pointing to C is as follows.

03:52.050 --> 03:55.110
That should be loaded into every page.

03:55.410 --> 04:01.710
So you pass a string here and you use the tiller here to reference the root folder.

04:01.820 --> 04:04.150
That doesn't work here.

04:04.230 --> 04:07.070
And then you point to assets.

04:07.100 --> 04:13.750
Styles may not see SS So you point to dead C S S file.

04:13.950 --> 04:21.660
By doing this and saving that file now every page will have the code you have and that C S as file included.

04:21.870 --> 04:24.970
So if we go back and we reload this page for all users.

04:25.080 --> 04:32.580
Now the margin is gone and the same is true on every page no matter how often we reload it and if we

04:32.580 --> 04:39.450
enter anything here in Lotus we get the error page which all the is styling as you can see and that

04:39.450 --> 04:41.400
is basically how you should think about it.

04:41.490 --> 04:46.830
Use such a global file for global styles especially if you have multiple layouts.

04:46.860 --> 04:54.190
If you don't feel free to use the default layout file instead the style section there don't add scoped.

04:54.210 --> 05:02.090
Don't edit here because you want to have global styles or provide layouts specific styles of course.

05:02.190 --> 05:07.210
Or finally go into your components and style.

05:07.230 --> 05:14.570
These typically with scoped styles do not spoil the styles to other components or do it on the pages

05:14.730 --> 05:16.340
or typically both.

05:16.410 --> 05:21.420
Typically you use all these features because some styles are application wide.

05:21.420 --> 05:25.760
Some are page specific and some are really component's specific.

05:25.770 --> 05:31.950
Focusing on the component level is the best way though because you want to have reusable and standalone

05:31.950 --> 05:33.280
pieces in your app.
