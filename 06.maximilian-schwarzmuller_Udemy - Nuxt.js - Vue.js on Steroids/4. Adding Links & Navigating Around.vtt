WEBVTT

00:02.100 --> 00:08.400
So what we already did over the last lectures is we created folders and files to add routeing to our

00:08.580 --> 00:11.690
reviewer from next approach here.

00:11.910 --> 00:15.890
Now thus far we always entered your L manually.

00:15.900 --> 00:19.700
Now time to change this and time to add some links.

00:19.830 --> 00:25.950
So let's go to the index thought you fall on the pages folder and let's remove all the content in there

00:26.160 --> 00:29.990
and let's instead add a link that leads us to the user's page.

00:30.020 --> 00:36.420
And of course one thing we can do is we can use a normal anchor text and navigate to slash users here

00:36.600 --> 00:39.380
and say users like this.

00:39.510 --> 00:50.210
If I do this and does recompiles and I go back to just localhost free thousand then I see slash users.

00:50.250 --> 00:51.390
I clicked this.

00:51.550 --> 00:58.450
I'm taking the user's view but one important thing happens if I click this actually a brand new page

00:58.540 --> 00:59.480
will be loaded.

00:59.590 --> 01:06.250
So this is now loaded by sending a new request to the server and rendering back a new page.

01:06.250 --> 01:13.240
Sometimes you want this but sometimes you want to stick to this new single page application that still

01:13.240 --> 01:16.600
runs because remember what I said in the first module.

01:16.690 --> 01:23.860
Even with Naxa where we pre-rendered pages on the server once the first page is pre-rendered we still

01:23.860 --> 01:30.290
have a single page application because we want to stay in that world of fast and instant responses.

01:30.520 --> 01:37.690
The main difference to a normal single page application simply is that all starting pages for different

01:37.710 --> 01:43.100
you or else can be pre-rendered entirely on the server instead of in the client.

01:43.540 --> 01:46.680
So right now we're always getting a new page.

01:46.730 --> 01:53.030
Let's say we don't want that we want to stay in that single page application world in a normal of us.

01:53.230 --> 01:56.280
We would now use router link.

01:56.330 --> 02:02.650
This is a component we can use to create a linked that behind the scenes use D-NC or tech but where

02:02.710 --> 02:09.500
the view router catches all clicks on the link and prevents the default of sending a request.

02:09.610 --> 02:12.820
In fact the equivalent is next link.

02:12.880 --> 02:13.970
Just like that.

02:14.380 --> 02:21.270
Next link also creates the anger text and catches any place to ensure that no request is sent.

02:21.580 --> 02:24.630
So here we can now add users and now to next link.

02:24.640 --> 02:31.950
We need to add a property the to property and point to slash users for example.

02:31.950 --> 02:37.630
Now by doing this if we saved that file and we go back to the localhost 3000 page and reloaded once

02:38.230 --> 02:44.410
we got that link and by clicking on it we get the same behavior as before but technically something

02:44.410 --> 02:45.390
else is happening.

02:45.460 --> 02:51.760
No new request is said and you can actually kind of see that if you watch closely at the top of the

02:51.760 --> 02:58.060
screen as your screen may be where you see it a bit better you get the tiny loading indicator there

02:58.140 --> 02:59.930
that dream flash.

03:00.010 --> 03:04.690
This is coming from Maxton I will show you how to modify it later in the course when we dive into the

03:04.690 --> 03:12.070
Nax configuration but it proves that actually the transition here is all happening in the browser without

03:12.070 --> 03:13.470
a request being sent.

03:13.840 --> 03:17.090
And this is how we can navigate around by clicking links.

03:17.140 --> 03:23.160
Sometimes you also want to navigate around programmatically like let's say here in the user's page we

03:23.170 --> 03:27.020
want to go to a user's page here.

03:27.040 --> 03:30.640
Now let's say to get there we'll add a div and there.

03:30.640 --> 03:34.100
First of all we had an input in that input here.

03:34.270 --> 03:40.060
I want to be able to enter a user ID and then I want to add a button that takes me to that was ready.

03:40.060 --> 03:42.170
So I say load user here.

03:42.430 --> 03:47.470
Now since we're in a normal do component we can use normal component features.

03:47.500 --> 03:54.190
We add a script section where we export a default object and then here let's first of all add a data

03:54.370 --> 04:00.160
property which in components should be a function where you return an object and this is all normal

04:00.190 --> 04:02.900
view code not related to next.

04:03.100 --> 04:09.290
And then here let's add a variable or a property where we can store the user input.

04:09.400 --> 04:16.300
Maybe name User ID and it's an empty string initially and then we can bind dead input here with the

04:16.360 --> 04:24.750
model again just like in a normal view app we bind it to user ID to store whatever the user enters here

04:25.030 --> 04:32.230
in this user id property and then I'll add a method which I want to trigger when we click this button

04:32.690 --> 04:40.950
I'll name that onload user and then here I now want to go to that user page for the ID.

04:41.020 --> 04:47.700
The user enters here in that input So there to the button I'll add a click listener with at click.

04:47.980 --> 04:52.400
And then I want to execute on load user here without parentheses.

04:52.510 --> 05:00.460
I'll just pass a pointer to that method down there and in that Meffert I now want to navigate programmatically.

05:00.460 --> 05:04.980
This can be done by accessing this router.

05:05.440 --> 05:06.580
Push.

05:06.580 --> 05:13.720
Now again we're using the default view router here which simply is injected into all our view components.

05:13.720 --> 05:16.790
So this is normal view code not coming from next.

05:16.810 --> 05:23.650
The only thing coming from next year is that the router exists because next spins it up behind the scenes

05:23.980 --> 05:28.870
and passes are Page driven translate that configuration to it.

05:28.870 --> 05:37.630
So in Porsche we can now again simply pass a string to go to slash users slash and then the IDs so this

05:37.810 --> 05:45.760
user id and this should now load this route here 40 UAD we entered that see the connection by saving

05:45.760 --> 05:50.350
this and going back here's the input field and the button.

05:50.340 --> 05:55.100
Now let's enter one here and click the button and we see it id one.

05:55.210 --> 06:02.610
And if I go back and I enter something here and click the button we see with ID something and you are

06:02.950 --> 06:05.340
of course reflects this.

06:05.380 --> 06:13.510
So this is now how you can navigate both in code with a link or programmatically and how you interact

06:13.510 --> 06:19.570
with all these default view features and route conflict given to you by Nax Yes.
