WEBVTT

00:02.260 --> 00:05.460
The first question always is what is next.

00:05.500 --> 00:06.120
Yes.

00:06.220 --> 00:08.960
And just in case they all do what they answer what is it viewed.

00:09.000 --> 00:11.220
Yes though you should really notice.

00:11.230 --> 00:17.020
And if you don't make sure you take some course that also teaches you that because this course builds

00:17.020 --> 00:23.320
up on this knowledge but to make sure we're all on the same page view chess is a front and Javascript

00:23.320 --> 00:29.950
framework that allows us to build powerful and engaging you eyes in the browser so to say it runs in

00:29.950 --> 00:36.370
the browser since javascript runs there and it the UK s we can build user interfaces of any complexity

00:36.700 --> 00:38.770
and it does a lot of the heavy lifting.

00:38.770 --> 00:42.060
We normally have to do when working with javascript.

00:42.070 --> 00:46.280
It's a mixture of angular underreact you could say especially angular one.

00:46.300 --> 00:52.540
You see a lot of syntaxes and features in viewed as you know from these frameworks and libraries and

00:52.570 --> 00:59.540
you can build Bel's UI widgets as well as more complex single page applications with that view.

00:59.590 --> 01:01.480
It's also a real complete framework.

01:01.480 --> 01:05.970
It also offers solutions for routing so handling different view or else.

01:05.980 --> 01:12.450
And for state management and it's also very lightweight making it extremely popular.

01:12.490 --> 01:15.230
You've got a rich ecosystem and everyone laughs.

01:15.270 --> 01:19.810
View J.S. Now next genius builds up on do you chess.

01:19.810 --> 01:25.380
It's not a new framework and it's also not adding a lot to the codebase of view chess.

01:25.590 --> 01:31.150
Instead it's all about making the development of view chess applications easier.

01:31.150 --> 01:37.290
And with that I don't just mean the steps but also the application that comes out that it's highly optimized.

01:37.300 --> 01:43.430
Things like that one of its core features is that it makes server side rendering a breeze.

01:43.600 --> 01:47.690
We talk about Universe Lap's And when we talk about suicide rendering.

01:47.830 --> 01:54.880
And this essentially means that we can build a view application where we pre render that view the page

01:54.880 --> 01:59.470
the user is going to see on the server right before serving it to the user.

01:59.470 --> 02:05.490
This has great effects on search engine optimization and can speed up your page more on that in a second

02:06.280 --> 02:13.750
and never core feature next just introduces its configuration by file and folder structure approach.

02:14.020 --> 02:17.040
You really work in configuration files.

02:17.050 --> 02:21.830
For example when setting up routes you dont write javascript code to do so.

02:21.850 --> 02:28.810
Instead you create a folder structure that represents your page and the routes you need are automatically

02:28.810 --> 02:29.960
inferred from that.

02:30.070 --> 02:33.220
And that pattern is use a lot in next applications.

02:33.220 --> 02:36.420
And of course you will learn all about this in this course.

02:36.550 --> 02:41.050
Now finally we can say it really simplifies the development of us.

02:41.080 --> 02:42.230
It makes it easier.

02:42.280 --> 02:48.040
It has many smart approaches that make it more fun and all of that without adding much overhead to the

02:48.040 --> 02:49.090
bundle you're shipping.

02:49.150 --> 02:55.050
So your apps are going to stay extremely fast and might even be faster due to all the optimizations

02:55.050 --> 02:56.300
it puts into place.
