1
00:00:01,140 --> 00:00:04,790
All right, to create our test‑server.ldif file,

2
00:00:04,790 --> 00:00:08,320
I'm going to be real honest with you, you'll probably just want to download it

3
00:00:08,320 --> 00:00:15,580
out of the Exercise files or fork the source code that I have at GitHub and grab

4
00:00:15,580 --> 00:00:20,950
it from there and add to your project. Hand typing this all in here is going to

5
00:00:20,950 --> 00:00:23,940
be very monotonous and very error prone.

6
00:00:23,940 --> 00:00:25,640
So to do this,

7
00:00:25,640 --> 00:00:29,350
I am going to go to our src, main, resources directory again,

8
00:00:29,350 --> 00:00:36,040
right‑click, and add a new file, and the file name is going to be

9
00:00:36,040 --> 00:00:45,660
test‑server.ldif. And I am going to do exactly what I just said

10
00:00:45,660 --> 00:00:51,040
and paste all of this in here, but I'm going to walk through this with you.

11
00:00:51,040 --> 00:00:56,170
First off, we have our context.pluralsight.com.

12
00:00:56,170 --> 00:00:59,950
You can see that we have next defined our users

13
00:00:59,950 --> 00:01:03,840
groups, and it's tied to that structure.

14
00:01:03,840 --> 00:01:08,500
And then we have subgroups down below. And then we define

15
00:01:08,500 --> 00:01:12,580
people inside of here. And, finally, halfway down here,

16
00:01:12,580 --> 00:01:16,050
you can see that we have created a user.

17
00:01:16,050 --> 00:01:19,540
So I'm going to point out a couple of specific things here.

18
00:01:19,540 --> 00:01:24,160
If you want to add your own user or change it to your name and

19
00:01:24,160 --> 00:01:28,760
password, you're going to want to go through and search where I have my

20
00:01:28,760 --> 00:01:31,740
name inside of here and replace it with yours.

21
00:01:31,740 --> 00:01:34,640
So the UID of bryan up here,

22
00:01:34,640 --> 00:01:37,510
you would want to change to whatever your name is, bob

23
00:01:37,510 --> 00:01:39,320
or whatever else you're doing there.

24
00:01:39,320 --> 00:01:43,670
So I'm going to change that back to bryan. And you can see that

25
00:01:43,670 --> 00:01:46,100
it's all over throughout this application.

26
00:01:46,100 --> 00:01:51,430
In fact, if I do a search inside of my file here for Bryan,

27
00:01:51,430 --> 00:01:56,340
you can see that I have six matches inside of here where it is

28
00:01:56,340 --> 00:01:59,190
throughout this because I'm part of the managers group and

29
00:01:59,190 --> 00:02:03,290
sub‑managers group and all of that different context.

30
00:02:03,290 --> 00:02:07,060
Now this is a little bit of an overkill for this simple example.

31
00:02:07,060 --> 00:02:11,260
I could have not had them join these groups and other things, except

32
00:02:11,260 --> 00:02:14,090
for if we do more complex stuff with this user,

33
00:02:14,090 --> 00:02:17,090
they will need to be in those various groups.

34
00:02:17,090 --> 00:02:20,870
So as we do some of the role‑based stuff later in this course,

35
00:02:20,870 --> 00:02:22,620
I will need this stuff.

36
00:02:22,620 --> 00:02:26,840
So I've gone ahead and set up the server from the get‑go the right way.

37
00:02:26,840 --> 00:02:29,680
If you want to add your password in there,

38
00:02:29,680 --> 00:02:34,390
remember that we got that encrypted password by running that unit test that we

39
00:02:34,390 --> 00:02:43,500
created earlier that had the system.out.println of our encoder.encode with your

40
00:02:43,500 --> 00:02:47,530
password in clear text typed in there so that you can see what the encoded value

41
00:02:47,530 --> 00:02:50,140
looks like so we can do a compare on it.

42
00:02:50,140 --> 00:02:52,230
And that's exactly what's happening is in our

43
00:02:52,230 --> 00:02:59,260
ConferenceSecurityConfig, we do a passwordCompare on that password

44
00:02:59,260 --> 00:03:02,130
from that attribute. So you can see things tie together.

45
00:03:02,130 --> 00:03:06,340
Here we have our passwordAttribute of userPassword that's under

46
00:03:06,340 --> 00:03:13,070
test‑server.ldif where our userPassword's defined. You can also

47
00:03:13,070 --> 00:03:17,680
see inside of here that we are going to use that compare with

48
00:03:17,680 --> 00:03:20,540
the exact PasswordEncoder,

49
00:03:20,540 --> 00:03:28,000
which is how we can encode our clear text password and store in that file and compare those two up.

