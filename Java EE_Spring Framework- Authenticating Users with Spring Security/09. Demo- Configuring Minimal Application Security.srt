1
00:00:00,940 --> 00:00:01,350
All right.

2
00:00:01,350 --> 00:00:06,030
To begin adding security to our application,

3
00:00:06,030 --> 00:00:08,840
I've gone ahead and closed down everything we did to running a

4
00:00:08,840 --> 00:00:12,280
sample app and any of the previous demos and just got it down to

5
00:00:12,280 --> 00:00:15,870
the default workspace as close as possible.

6
00:00:15,870 --> 00:00:17,740
I shut down the servers and everything else.

7
00:00:17,740 --> 00:00:22,040
We're going to start by opening up our pom.xml file.

8
00:00:22,040 --> 00:00:25,140
We're going to add three dependencies inside of here. So

9
00:00:25,140 --> 00:00:29,080
I'm going to go below my org.hibernate.validator, and if

10
00:00:29,080 --> 00:00:31,030
you're starting from my example,

11
00:00:31,030 --> 00:00:33,810
you should have the same exact code inside of here. I'm

12
00:00:33,810 --> 00:00:36,780
going to paste in these three dependencies.

13
00:00:36,780 --> 00:00:37,250
Now,

14
00:00:37,250 --> 00:00:41,030
I realize you won't have the same dependencies that I do to paste in

15
00:00:41,030 --> 00:00:43,570
here because you don't have anywhere to copy them from.

16
00:00:43,570 --> 00:00:46,400
You can actually go grab them from the Exercise files, or you can type them in.

17
00:00:46,400 --> 00:00:50,720
It's actually not that hard to do so because the context sensitive help

18
00:00:50,720 --> 00:00:53,760
will help you do that with any ID that you choose.

19
00:00:53,760 --> 00:00:55,770
I will point out three things here,

20
00:00:55,770 --> 00:00:59,260
one, that we have the spring‑boot‑starter‑security dependency.

21
00:00:59,260 --> 00:01:01,030
And there's not a version tied to that because we

22
00:01:01,030 --> 00:01:02,860
are using dependency management.

23
00:01:02,860 --> 00:01:05,620
If you don't know what that means, it's a Maven term that it chooses

24
00:01:05,620 --> 00:01:08,640
the correct version based off of our parent POM.

25
00:01:08,640 --> 00:01:10,930
I have spring‑security‑test inside of here,

26
00:01:10,930 --> 00:01:14,860
and it has a scope of test that you can see defined there on

27
00:01:14,860 --> 00:01:18,300
line 48, and no version because that's also being pulled

28
00:01:18,300 --> 00:01:19,930
through that dependency management.

29
00:01:19,930 --> 00:01:23,760
The spring‑security‑test gives us some sample libraries to

30
00:01:23,760 --> 00:01:26,750
create an in‑memory database or LDAP server, that type of

31
00:01:26,750 --> 00:01:28,340
thing, so we'll use it for that.

32
00:01:28,340 --> 00:01:33,310
And then I've added one for some JEE stuff, the java.serlet, jstl

33
00:01:33,310 --> 00:01:39,880
library, javax.servlet, jstl library that allows us to do some simple

34
00:01:39,880 --> 00:01:44,610
navigation things inside of JSTL like including and excluding fields

35
00:01:44,610 --> 00:01:46,470
and some binary logic that way.

36
00:01:46,470 --> 00:01:49,220
So these are the three dependencies we need. Now let's go

37
00:01:49,220 --> 00:01:57,540
ahead and start by opening up our registration page and

38
00:01:57,540 --> 00:01:59,080
selecting all the code inside of here.

39
00:01:59,080 --> 00:02:03,790
So I'm just going to do a Cmd+A, Cmd+C, or if you're on a Windows machine,

40
00:02:03,790 --> 00:02:11,470
Cntrl+A, Ctrl+C, right‑click on jsp, and create a new JSP/JSPX file.

41
00:02:11,470 --> 00:02:17,550
I'll call it login.jsp, hit Enter. And I'm just going to

42
00:02:17,550 --> 00:02:21,500
replace all the code we have inside of here with that

43
00:02:21,500 --> 00:02:24,240
registration page that we just copied.

44
00:02:24,240 --> 00:02:26,300
I want to add a new tag library at the top,

45
00:02:26,300 --> 00:02:34,020
so I'll give myself a little space there and do an <%@.

46
00:02:34,020 --> 00:02:39,640
I'm going to choose taglib, and the prefix of that, we're going to choose "c".

47
00:02:39,640 --> 00:02:50,870
The uri="http://java.sun.com/jsp/jstl/core." I'll choose that one.

48
00:02:50,870 --> 00:02:52,640
I'll give you a second to look at that.

49
00:02:52,640 --> 00:02:55,070
And if you don't want to type all this stuff in there, again,

50
00:02:55,070 --> 00:02:58,170
you can grab this out of the Exercise files and just copy and paste it

51
00:02:58,170 --> 00:03:01,260
as you go and walk through so you're not hung up on the syntax but,

52
00:03:01,260 --> 00:03:02,920
rather, looking at the semantics of it.

53
00:03:02,920 --> 00:03:07,040
Or you can go ahead and pause and type it all in there as well.

54
00:03:07,040 --> 00:03:13,140
I'm going to scroll down and change line 11 from Registration to Login.

55
00:03:13,140 --> 00:03:16,210
And then we're going to go down a little bit further, and on line

56
00:03:16,210 --> 00:03:21,540
41, I'm going to change this to Login as well.

57
00:03:21,540 --> 00:03:27,360
And then I am going to replace this form completely.

58
00:03:27,360 --> 00:03:32,590
You may want to go ahead and change the fields that are in there.

59
00:03:32,590 --> 00:03:37,980
But I would not like you to make a typo or miss a step that's doing that.

60
00:03:37,980 --> 00:03:40,880
So you may want to completely delete it because there are a bunch of

61
00:03:40,880 --> 00:03:42,430
things we're going to change in here, and I'm going to walk through

62
00:03:42,430 --> 00:03:49,070
that right now. Replacing mine, I'm going to highlight that and paste

63
00:03:49,070 --> 00:03:53,110
in a new div on lines 44 and 45.

64
00:03:53,110 --> 00:03:57,420
And this is utilizing that tag library that we just put in there of

65
00:03:57,420 --> 00:04:03,190
the core or c taglib that it looks for an error in our response and

66
00:04:03,190 --> 00:04:04,950
displays that error if there is one.

67
00:04:04,950 --> 00:04:07,170
The example will work just fine without that.

68
00:04:07,170 --> 00:04:09,200
But if you get any errors, you won't be able to see them.

69
00:04:09,200 --> 00:04:17,180
And then I replaced our form with lines 47 through 52 where we now have an

70
00:04:17,180 --> 00:04:23,200
action="perform_login" and a method="post", and this will all tie into what

71
00:04:23,200 --> 00:04:24,830
we're doing on the back end here in a minute.

72
00:04:24,830 --> 00:04:28,970
And I'll pull both files up side by side so you can see what's tying to what.

73
00:04:28,970 --> 00:04:34,510
If there is an error on line 48, we're going to display it with a form:errors

74
00:04:34,510 --> 00:04:38,060
path= all of the errors that are out there.

75
00:04:38,060 --> 00:04:44,560
Use this cssClass="errorblock" and then do the element="div" for that div

76
00:04:44,560 --> 00:04:47,920
element. Then we have two input boxes‑‑a User Name and a Password.

77
00:04:47,920 --> 00:04:48,660
Very simple,

78
00:04:48,660 --> 00:04:54,270
just standard input fields, and then a submit button. That's a just role button,

79
00:04:54,270 --> 00:04:57,440
and it will go ahead and post that back to the server.

80
00:04:57,440 --> 00:04:58,230
So very simple.

81
00:04:58,230 --> 00:05:04,490
A two‑filled input form with a submit button tied to login

82
00:05:04,490 --> 00:05:12,000
and display an error if it's there. Now we can save this and exit out of full screen.

