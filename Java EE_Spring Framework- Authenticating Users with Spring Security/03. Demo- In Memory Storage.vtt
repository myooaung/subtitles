WEBVTT
1
00:00:01.140 --> 00:00:04.690
If you follow along in the previous demo and set up your application

2
00:00:04.690 --> 00:00:08.030
to have the basic security configuration installed,

3
00:00:08.030 --> 00:00:11.280
you've actually already done the work required to have

4
00:00:11.280 --> 00:00:13.940
the in‑memory authentication set up.

5
00:00:13.940 --> 00:00:18.070
If you open up your ConferenceSecurityConfig file and scroll to the bottom,

6
00:00:18.070 --> 00:00:21.500
you'll see this configure section that takes a final

7
00:00:21.500 --> 00:00:26.490
AuthenticationManagerBuilder auth argument, and inside of here,

8
00:00:26.490 --> 00:00:29.090
we have auth.inMemoryAuthentication.

9
00:00:29.090 --> 00:00:30.980
So that just tells us that we're going to start off

10
00:00:30.980 --> 00:00:33.240
with using inMemoryAuthentication.

11
00:00:33.240 --> 00:00:38.840
And then we define it to use withUser, Bryan, and a password that

12
00:00:38.840 --> 00:00:45.150
uses the passwordEncoder, and encodes the password of pass, and then

13
00:00:45.150 --> 00:00:47.600
assigns a role of user to our application.

14
00:00:47.600 --> 00:00:49.050
So this was already done.

15
00:00:49.050 --> 00:00:52.980
If you haven't done that, then you'll maybe want to add that in here now,

16
00:00:52.980 --> 00:00:58.040
but realize that this is using the equivalent of an in‑memory database,

17
00:00:58.040 --> 00:01:02.030
and we now have basic authentication set up inside of

18
00:01:02.030 --> 00:01:05.240
our app utilizing these features.

19
00:01:05.240 --> 00:01:07.140
So this is how it all ties into it.

20
00:01:07.140 --> 00:01:15.000
Now I want to go through and talk about how you change this auth.InMemoryAuthentication into JDBC authentication.

