1
00:00:01,440 --> 00:00:04,940
This was a very complex module.

2
00:00:04,940 --> 00:00:09,320
We had a lot of things going on here to go through the entire

3
00:00:09,320 --> 00:00:12,870
confirmation process and registration process.

4
00:00:12,870 --> 00:00:17,280
We started off by creating your account and gathering all of that

5
00:00:17,280 --> 00:00:20,180
information and storing it in the database correctly.

6
00:00:20,180 --> 00:00:25,120
We then configured an email server to handle the asynchronous

7
00:00:25,120 --> 00:00:27,340
sending of emails from our application.

8
00:00:27,340 --> 00:00:30,780
Remember that that's why we fired off an event and used the

9
00:00:30,780 --> 00:00:33,410
event listener so that it was nonâ€‘blocking in your

10
00:00:33,410 --> 00:00:36,590
application. Your user could register,

11
00:00:36,590 --> 00:00:40,320
and if the email server was down it wasn't going to block anything in your app.

12
00:00:40,320 --> 00:00:42,810
It would fire it off when it was ready to do so.

13
00:00:42,810 --> 00:00:48,230
We created verification tokens that made it to where we could safely and

14
00:00:48,230 --> 00:00:54,190
securely go out and send people new account information without having it

15
00:00:54,190 --> 00:00:56,810
require you to do anything else inside of your app.

16
00:00:56,810 --> 00:00:57,820
And, by the way,

17
00:00:57,820 --> 00:01:00,130
one thing we didn't mention then is this is the same thing that

18
00:01:00,130 --> 00:01:03,240
we will do if you have a forgotten password.

19
00:01:03,240 --> 00:01:06,720
We then went through the entire confirmation process of

20
00:01:06,720 --> 00:01:08,830
once that's all saved and stored,

21
00:01:08,830 --> 00:01:12,440
sending them an email, having them click on that email, open it up, and

22
00:01:12,440 --> 00:01:18,010
verify that they are who they say they are, and moving data from your

23
00:01:18,010 --> 00:01:23,770
account tables over to the user details tables. And the same process would

24
00:01:23,770 --> 00:01:26,850
work if we were using LDAP. It's a little bit more complicated just because

25
00:01:26,850 --> 00:01:29,890
interacting with LDAP can be a little bit more complicated, but it would

26
00:01:29,890 --> 00:01:31,280
work just the same.

27
00:01:31,280 --> 00:01:34,440
And then when we were all done, we went through and cleaned up everything.

28
00:01:34,440 --> 00:01:39,760
So we deleted out of the verification tokens and the accounts tables,

29
00:01:39,760 --> 00:01:42,750
those leftover pieces of data that's out there.

30
00:01:42,750 --> 00:01:46,120
And I would say one of the most complex things in dealing with this

31
00:01:46,120 --> 00:01:49,260
process is as you go through to test it you have to go through and

32
00:01:49,260 --> 00:01:52,950
delete from those tables if you have messed something up. So as you

33
00:01:52,950 --> 00:01:55,230
go through that process, you're going to have to clean that up.

34
00:01:55,230 --> 00:01:57,830
So it's good that our app cleans up after itself as well.

35
00:01:57,830 --> 00:02:00,790
You could schedule a cron job with your database that would go

36
00:02:00,790 --> 00:02:08,000
through and remove those expired tokens as well, but it's kind of outside the scope of what we're reviewing now.

