WEBVTT
1
00:00:00.340 --> 00:00:04.540
I'm going to restart my server just for good measure,

2
00:00:04.540 --> 00:00:06.910
get a fresh connection, should have those changes that we

3
00:00:06.910 --> 00:00:09.510
just committed to our database and all that in there, and

4
00:00:09.510 --> 00:00:11.570
when it pulls up our browser,

5
00:00:11.570 --> 00:00:15.350
we should be connected to our database now. Now in our

6
00:00:15.350 --> 00:00:17.930
browser, if we click Add Registration,

7
00:00:17.930 --> 00:00:24.890
it'll take us to the Login page. If we type in bryan, and pass, click Login, it

8
00:00:24.890 --> 00:00:28.330
actually is going out to our database and round‑tripping back through our

9
00:00:28.330 --> 00:00:32.140
application using that instead of the in‑memory model.

10
00:00:32.140 --> 00:00:36.940
Let's look at what we had to do to our IDE to get that all set up again.

11
00:00:36.940 --> 00:00:38.070
Inside of our pom,

12
00:00:38.070 --> 00:00:43.220
we had to add the spring‑boot‑starter‑data‑jpa dependency and the

13
00:00:43.220 --> 00:00:48.560
mysql‑connector‑java dependency. In our application.properties,

14
00:00:48.560 --> 00:00:54.060
we had to add these four lines, spring.datasource.url, username, password, and

15
00:00:54.060 --> 00:00:58.640
our driver‑class‑name. That connects us up to our database.

16
00:00:58.640 --> 00:01:04.030
Under our ConferenceSecurityConfig, we injected that Autowired

17
00:01:04.030 --> 00:01:08.480
DataSource dataSource at the top, and changed our configuration

18
00:01:08.480 --> 00:01:13.950
to be auth.jdbcAuthentication using a .dataSource where we

19
00:01:13.950 --> 00:01:15.460
passed in that dataSource.

20
00:01:15.460 --> 00:01:19.420
And the other code thing that we had to do was I showed you how to

21
00:01:19.420 --> 00:01:23.260
use the PasswordEncoder by auto‑wiring it in and then just doing a

22
00:01:23.260 --> 00:01:27.310
System.out.println, where we used that encoder to encode the password

23
00:01:27.310 --> 00:01:29.150
that we're using. From there,

24
00:01:29.150 --> 00:01:34.130
we used our MySQL Workbench to update our record with the

25
00:01:34.130 --> 00:01:37.080
correct password, and had that set in there.

26
00:01:37.080 --> 00:01:46.000
Once we did that, we saved everything, restarted our server, and, as you can see, it pulled it back correctly from the database.

