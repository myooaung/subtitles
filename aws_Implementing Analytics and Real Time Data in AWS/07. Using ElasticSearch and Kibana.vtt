WEBVTT
1
00:00:00.840 --> 00:00:01.280
[Autogenerated] All right,

2
00:00:01.280 --> 00:00:06.510
let's dive into elastic search now the Amazon Elasticsearch services,

3
00:00:06.510 --> 00:00:11.030
a hosted application that runs Elastic Search and

4
00:00:11.030 --> 00:00:14.140
manages the backend servers for that.

5
00:00:14.140 --> 00:00:16.610
So I'm going to create a new domain here,

6
00:00:16.610 --> 00:00:20.230
and you create a domain Perl elasticsearch deployment.

7
00:00:20.230 --> 00:00:23.750
So it's important to remember that now Elastic search,

8
00:00:23.750 --> 00:00:27.030
before we get any deeper, has a primary use case.

9
00:00:27.030 --> 00:00:31.830
And it's very popular for real time or near real time logging,

10
00:00:31.830 --> 00:00:36.240
searching, data reporting and data visualization.

11
00:00:36.240 --> 00:00:38.100
And we'll see what I mean here in a minute.

12
00:00:38.100 --> 00:00:40.640
So I'm gonna choose our deployment type.

13
00:00:40.640 --> 00:00:43.660
You can see that there's one ese you can do multi.

14
00:00:43.660 --> 00:00:46.890
There's custom or ultra warm preview, so I'm gonna choose.

15
00:00:46.890 --> 00:00:51.940
Production will choose the latest version, but there are several to choose from.

16
00:00:51.940 --> 00:00:54.730
I give my domain a name, so you probably guessed it.

17
00:00:54.730 --> 00:00:59.980
Let's go with Pluralsight and then we choose our data nodes availability zones.

18
00:00:59.980 --> 00:01:04.970
So the data nodes are what are actually performing any data analytics

19
00:01:04.970 --> 00:01:09.030
and compute heavy tasks that are cluster needs.

20
00:01:09.030 --> 00:01:12.580
So these are what require the most amount of resource is,

21
00:01:12.580 --> 00:01:16.640
so I'll go and leave this as the default well due to a zis for this,

22
00:01:16.640 --> 00:01:18.660
I'll go to two instances,

23
00:01:18.660 --> 00:01:23.140
but you can see when we have to Aziz yet to choose in multiples of two.

24
00:01:23.140 --> 00:01:26.920
And if I go back, you're going to see that we need to do at least three.

25
00:01:26.920 --> 00:01:28.420
Or at least it's recommended.

26
00:01:28.420 --> 00:01:30.140
So I'll do to a CSS.

27
00:01:30.140 --> 00:01:32.050
We choose our data nodes storage.

28
00:01:32.050 --> 00:01:34.640
So what type of storage do you want?

29
00:01:34.640 --> 00:01:38.740
The volume type and then the size per node.

30
00:01:38.740 --> 00:01:43.250
Now there are several calculations you can use to estimate their

31
00:01:43.250 --> 00:01:46.060
required storage size that you need per note.

32
00:01:46.060 --> 00:01:48.950
And that's in the AWS documentation.

33
00:01:48.950 --> 00:01:51.510
So feel free to check that out if you need to.

34
00:01:51.510 --> 00:01:54.940
You can see our total cluster sizes, 20 gigabytes,

35
00:01:54.940 --> 00:01:57.530
and then we move on to our dedicated and master note.

36
00:01:57.530 --> 00:01:59.040
So the master node,

37
00:01:59.040 --> 00:02:02.900
similar to this diagram here is allowing us to

38
00:02:02.900 --> 00:02:05.630
essentially manage all of the data nodes.

39
00:02:05.630 --> 00:02:11.040
It kind of directs traffic, and the different resource is depending on the load.

40
00:02:11.040 --> 00:02:15.540
So what it does is it keeps track of what's going on on our data notes.

41
00:02:15.540 --> 00:02:18.610
You can see the recommended and default is three,

42
00:02:18.610 --> 00:02:23.640
so we'll leave that and I'll use the same instance type as before

43
00:02:23.640 --> 00:02:25.740
and they're gonna be dedicated master notes.

44
00:02:25.740 --> 00:02:30.900
And what this means is that they're only going to perform master node duties,

45
00:02:30.900 --> 00:02:32.640
so I'll leave that enabled.

46
00:02:32.640 --> 00:02:35.670
We'll go ahead and leave the automated snapshot at zero.

47
00:02:35.670 --> 00:02:40.610
And then we have some optional setting so we can allow APIs for API calls.

48
00:02:40.610 --> 00:02:44.210
We can set some cache allocation and some claws counts.

49
00:02:44.210 --> 00:02:47.360
I'm gonna leave those blank and this brings us to our networking.

50
00:02:47.360 --> 00:02:50.040
Now our network config we can have it publicly

51
00:02:50.040 --> 00:02:56.200
accessible or we can have a vpc access, so we lock it down to a VPC.

52
00:02:56.200 --> 00:02:58.310
Now, a majority of the time,

53
00:02:58.310 --> 00:03:03.140
you're gonna probably want to spin this up within a vpc.

54
00:03:03.140 --> 00:03:03.910
And when you do that,

55
00:03:03.910 --> 00:03:08.640
you configure the typical resource is your VPC your sub nets

56
00:03:08.640 --> 00:03:11.460
your security group and then I am role,

57
00:03:11.460 --> 00:03:13.550
which is not really related to networking,

58
00:03:13.550 --> 00:03:15.040
but they include it.

59
00:03:15.040 --> 00:03:19.530
So for this demo, which I do not recommend that you do for any of your work,

60
00:03:19.530 --> 00:03:21.140
I'm going to do public.

61
00:03:21.140 --> 00:03:23.560
But it's important to know that if you need to,

62
00:03:23.560 --> 00:03:27.770
you can restrict this to VPC and then you restrict access via

63
00:03:27.770 --> 00:03:31.740
VPC policies that go into place on the domain.

64
00:03:31.740 --> 00:03:36.360
We move to fine grained access control so we can enable it or disable it.

65
00:03:36.360 --> 00:03:41.370
And then, if it's enabled, you set and aren't as the master username.

66
00:03:41.370 --> 00:03:44.180
What this allows us to do is it allows us to use an I

67
00:03:44.180 --> 00:03:46.760
am account as the master username.

68
00:03:46.760 --> 00:03:50.690
I'm going to click on no we can enable cognito authentication.

69
00:03:50.690 --> 00:03:53.710
So if we have some type of mobile application that needs

70
00:03:53.710 --> 00:03:55.550
to connect to our cabana instance,

71
00:03:55.550 --> 00:03:59.470
which will look at we can do that here and you select your

72
00:03:59.470 --> 00:04:03.750
region your pools and then your role names I'll leave That

73
00:04:03.750 --> 00:04:05.930
undone will move to access policy.

74
00:04:05.930 --> 00:04:11.590
So this is where you control who can access your elasticsearch service domain.

75
00:04:11.590 --> 00:04:16.640
So we can define a custom one or they provide templates that you can use.

76
00:04:16.640 --> 00:04:19.140
So if I do allow open access,

77
00:04:19.140 --> 00:04:22.030
you'll see that we get a warning that I need to enable fine grained

78
00:04:22.030 --> 00:04:25.740
access control or apply restrictive access policy.

79
00:04:25.740 --> 00:04:28.480
So if I select custom and we leave this,

80
00:04:28.480 --> 00:04:31.660
the default were allowing all I am users and rolls

81
00:04:31.660 --> 00:04:34.770
access and this brings us to encryption.

82
00:04:34.770 --> 00:04:42.040
So if we want to we can encrypt our data and it's both at rest and in transit,

83
00:04:42.040 --> 00:04:48.440
both from client to the domain and between nodes within the domain itself.

84
00:04:48.440 --> 00:04:51.890
Now it's very important to realize that when you do this,

85
00:04:51.890 --> 00:04:55.480
there's no option of swapping it back and forth.

86
00:04:55.480 --> 00:04:58.290
You have to rebuild your entire domain in cluster

87
00:04:58.290 --> 00:04:59.690
in order to change the setting.

88
00:04:59.690 --> 00:05:02.520
So be sure you get this right the first time we

89
00:05:02.520 --> 00:05:04.260
choose a key that we want to use.

90
00:05:04.260 --> 00:05:07.260
If we're gonna enable encryption, I'm not going to do that.

91
00:05:07.260 --> 00:05:10.730
I'll click on next, and it's just warning us still about this error.

92
00:05:10.730 --> 00:05:12.200
So let me go ahead and do this,

93
00:05:12.200 --> 00:05:16.870
and I'm actually going to create a master user and I'll just give it a W s user.

94
00:05:16.870 --> 00:05:22.940
I'll give it a simple password, and then I'm going to go down to next.

95
00:05:22.940 --> 00:05:25.440
So we get a review of what we want.

96
00:05:25.440 --> 00:05:30.400
So we have our three instances error three nodes for our master instances.

97
00:05:30.400 --> 00:05:31.600
We have our data notes,

98
00:05:31.600 --> 00:05:34.710
and there's two of those and one last thing really quickly.

99
00:05:34.710 --> 00:05:36.840
Before we deploy this,

100
00:05:36.840 --> 00:05:40.090
it's good to know that you can either scale vertically by

101
00:05:40.090 --> 00:05:44.220
changing the instance type or you can scale horizontally by

102
00:05:44.220 --> 00:05:45.980
changing the number of notes.

103
00:05:45.980 --> 00:05:49.650
That's an important configuration option that you should be aware of.

104
00:05:49.650 --> 00:05:53.840
So I'm gonna scroll down to confirm and create.

105
00:05:53.840 --> 00:05:56.970
I'll click on Confirmed and there we go.

106
00:05:56.970 --> 00:06:00.130
So now it's loading our domain and this can take about 10

107
00:06:00.130 --> 00:06:02.540
minutes and you can see they warn you up here.

108
00:06:02.540 --> 00:06:07.440
Now, this is gonna take a while to load up to 10 minutes, which you can see.

109
00:06:07.440 --> 00:06:08.460
And while it's loading,

110
00:06:08.460 --> 00:06:13.140
let me just go ahead and go over some use cases for elastic search

111
00:06:13.140 --> 00:06:17.300
now is far as exam goes if you get something asking about

112
00:06:17.300 --> 00:06:20.660
analyzying and visualizing real time data,

113
00:06:20.660 --> 00:06:23.740
Elasticsearch is probably part of that answer.

114
00:06:23.740 --> 00:06:27.390
It's really well known for its data visualization in real

115
00:06:27.390 --> 00:06:30.620
time search capabilities that it provides.

116
00:06:30.620 --> 00:06:35.640
And one of the use cases that you might run into is if I go to CloudWatch,

117
00:06:35.640 --> 00:06:39.840
I'll go to one of my log groups.

118
00:06:39.840 --> 00:06:44.440
So let's just say my CloudWatch event lambda that I have created.

119
00:06:44.440 --> 00:06:46.030
If I select that,

120
00:06:46.030 --> 00:06:49.940
I can actually put a subscription filter into place

121
00:06:49.940 --> 00:06:52.730
so you can see we have lambda, which we're not talking about.

122
00:06:52.730 --> 00:06:57.280
But then you can also see that we can S3 Mara logging to Amazon.

123
00:06:57.280 --> 00:07:01.640
Elastic search so we would choose our cluster.

124
00:07:01.640 --> 00:07:05.530
Either in this account or another account we would click on next,

125
00:07:05.530 --> 00:07:08.440
which we can't do because it's not active yet.

126
00:07:08.440 --> 00:07:12.420
But what this allows us to do is stream CloudWatch law group

127
00:07:12.420 --> 00:07:18.680
data in logs in near real time to our elastic search cluster and

128
00:07:18.680 --> 00:07:20.920
domain that we're standing up now.

129
00:07:20.920 --> 00:07:25.060
That's a very popular exam scenario from a W s.

130
00:07:25.060 --> 00:07:28.220
So if you get a question talking about how you can ingest

131
00:07:28.220 --> 00:07:32.530
CloudWatch law groups into some type of analytics application that

132
00:07:32.530 --> 00:07:35.740
allows for a visual ization and searching,

133
00:07:35.740 --> 00:07:39.750
always remember that ELASTICSEARCH fits that use case perfectly.

134
00:07:39.750 --> 00:07:41.780
So what I'll do is I'll go ahead and pause.

135
00:07:41.780 --> 00:07:44.820
The clip will pick up when this is available,

136
00:07:44.820 --> 00:07:48.640
and then I'll just show you the cabana console really quickly.

137
00:07:48.640 --> 00:07:52.080
Okay, so our domain is now active, and that took about,

138
00:07:52.080 --> 00:07:53.570
I would say, 10 to 12 minutes.

139
00:07:53.570 --> 00:07:58.190
So it does take about exactly how long they say it will take to create.

140
00:07:58.190 --> 00:08:00.840
You'll see that it gives us an endpoint.

141
00:08:00.840 --> 00:08:04.190
Now, this is the endpoint for elastic search,

142
00:08:04.190 --> 00:08:07.740
the elasticsearch cluster and domain that we just created.

143
00:08:07.740 --> 00:08:11.920
So this is where you would populate data via and API call

144
00:08:11.920 --> 00:08:15.660
and some type of put so you can visualize it in Cabana in

145
00:08:15.660 --> 00:08:18.820
Cabana uses the same endpoint, but you see,

146
00:08:18.820 --> 00:08:20.950
it has a plug in at the end.

147
00:08:20.950 --> 00:08:24.840
So if I load this, it brings us to our Kanban a dashboard and Kanban.

148
00:08:24.840 --> 00:08:29.940
A is the data visualization piece of the stack that elasticsearch offers,

149
00:08:29.940 --> 00:08:35.130
so I'll go and log in with that user that I made,

150
00:08:35.130 --> 00:08:37.680
and that brings us to our let's get started screen.

151
00:08:37.680 --> 00:08:40.880
So I'm gonna go ahead and try some sample data just so we can.

152
00:08:40.880 --> 00:08:42.640
See what this looks like?

153
00:08:42.640 --> 00:08:48.130
Let's just do some web logs because that's more in line with the exam itself.

154
00:08:48.130 --> 00:08:49.640
So all AD DS SATA.

155
00:08:49.640 --> 00:08:50.730
And while this is adding,

156
00:08:50.730 --> 00:08:55.390
you could see at the top that it does logging metrics and seem,

157
00:08:55.390 --> 00:08:58.630
which is security information and events management.

158
00:08:58.630 --> 00:09:00.070
So if your security related,

159
00:09:00.070 --> 00:09:04.140
you might want to use seem data and in elastic search cluster.

160
00:09:04.140 --> 00:09:05.120
So we have our data.

161
00:09:05.120 --> 00:09:08.720
I'm going to view it and you can see it brings us to a dashboard.

162
00:09:08.720 --> 00:09:14.100
So this is what makes the stack itself awesome to use we're able to create

163
00:09:14.100 --> 00:09:19.390
these awesome visualizations with real time searching and analytics with data

164
00:09:19.390 --> 00:09:22.530
that's being populated into our elasticsearch cluster.

165
00:09:22.530 --> 00:09:28.640
So what you could do is if you configure CloudWatch to push to Elasticsearch,

166
00:09:28.640 --> 00:09:33.410
you can configure this dashboard based upon different indices on how you

167
00:09:33.410 --> 00:09:37.190
want to show that data so you can see they count visitors.

168
00:09:37.190 --> 00:09:38.910
There's OS count,

169
00:09:38.910 --> 00:09:42.950
and this is just some of the data that they allow us to visualize.

170
00:09:42.950 --> 00:09:45.350
This is a very powerful platform,

171
00:09:45.350 --> 00:09:47.960
and it's really growing in popularity around the

172
00:09:47.960 --> 00:09:50.510
world in enterprise applications.

173
00:09:50.510 --> 00:09:54.740
Now that's going to do it for this section on elastic search services.

174
00:09:54.740 --> 00:09:57.270
Some of the key points to keep in mind.

175
00:09:57.270 --> 00:10:02.020
Our that elastic search allows us to ingest near real time

176
00:10:02.020 --> 00:10:05.330
data from sources like logs and applications.

177
00:10:05.330 --> 00:10:10.040
So we can build visualizations around that data in real time.

178
00:10:10.040 --> 00:10:11.260
Let's go ahead and wrap up,

179
00:10:11.260 --> 00:10:18.000
and then we're going to move on to the final subject in this module, which deals with Quicksight

