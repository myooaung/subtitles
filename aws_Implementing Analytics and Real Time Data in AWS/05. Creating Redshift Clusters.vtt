WEBVTT
1
00:00:00.740 --> 00:00:04.640
[Autogenerated] Okay, Welcome to the red shift demo within this module.

2
00:00:04.640 --> 00:00:09.560
Now I'm at the red shift dashboard screen and you can see that it's a simple,

3
00:00:09.560 --> 00:00:14.940
cost effective data warehouse solution, and it's managed by a W S.

4
00:00:14.940 --> 00:00:19.860
So they take care of a lot of the tedious and monotonous patching in all the

5
00:00:19.860 --> 00:00:23.970
other fund operations that occur on normal hosted servers.

6
00:00:23.970 --> 00:00:27.980
So if I create a cluster, let's just walk through this process.

7
00:00:27.980 --> 00:00:29.990
We give our cluster and identify error.

8
00:00:29.990 --> 00:00:31.650
I'll leave this how it is.

9
00:00:31.650 --> 00:00:36.060
And this has to be a unique key we specify are no types,

10
00:00:36.060 --> 00:00:37.990
so there's scalable,

11
00:00:37.990 --> 00:00:42.710
and then there's fixed and you can see it's recommended that we use our A three.

12
00:00:42.710 --> 00:00:45.640
But for me, I'm gonna go ahead and use D.

13
00:00:45.640 --> 00:00:49.340
C to just because it's a cheaper option for this demo.

14
00:00:49.340 --> 00:00:53.760
We can specify the number of nodes we want, and you can see we can go to 32.

15
00:00:53.760 --> 00:00:56.640
If we wanted to, I'll just go to to,

16
00:00:56.640 --> 00:01:01.060
and they give us a summary here that shows the estimated cost per month

17
00:01:01.060 --> 00:01:04.170
for the compute as well as the total storage space.

18
00:01:04.170 --> 00:01:07.670
So if I scroll down to database configurations,

19
00:01:07.670 --> 00:01:12.440
this is where we create our database that lives on our red shift cluster.

20
00:01:12.440 --> 00:01:14.540
So I'll leave it at Dev.

21
00:01:14.540 --> 00:01:17.150
We'll leave the default Port four red shift,

22
00:01:17.150 --> 00:01:21.730
which is 5439 and then we create a user and password.

23
00:01:21.730 --> 00:01:24.840
So I'm gonna go and give this a user name and password.

24
00:01:24.840 --> 00:01:27.980
I'll scroll down to cluster permissions and expand that.

25
00:01:27.980 --> 00:01:31.470
And this is where we can give our cluster permissions to

26
00:01:31.470 --> 00:01:35.740
access other AWS services if we wanted it to.

27
00:01:35.740 --> 00:01:37.710
So depending on our use cases,

28
00:01:37.710 --> 00:01:42.730
we might want this red shift cluster to output to another service or maybe pull

29
00:01:42.730 --> 00:01:47.640
information from another service that lives within a W S.

30
00:01:47.640 --> 00:01:49.840
I'll lead this at blank.

31
00:01:49.840 --> 00:01:53.540
You can see we're using the defaults for additional config SSHD.

32
00:01:53.540 --> 00:01:56.330
But let's go ahead and take a look at what we can configure.

33
00:01:56.330 --> 00:02:00.040
So network and security we specify our VPC,

34
00:02:00.040 --> 00:02:03.800
and it's important to note that you cannot change the VPC

35
00:02:03.800 --> 00:02:07.440
with the cluster after it's been created.

36
00:02:07.440 --> 00:02:13.530
We specify a security group, a subject group and a Z,

37
00:02:13.530 --> 00:02:16.510
and then we can talk about enhanced vpc routing.

38
00:02:16.510 --> 00:02:21.270
And if we want it to be publicly accessible so I'll use the defaults because

39
00:02:21.270 --> 00:02:24.440
that's usually a best practice that they put into place.

40
00:02:24.440 --> 00:02:26.540
And I'm gonna create my cluster.

41
00:02:26.540 --> 00:02:29.520
Oh, I have a bad password, and that's probably because it was super simple.

42
00:02:29.520 --> 00:02:35.830
One sec, I create it and you can see that it's in a creating status.

43
00:02:35.830 --> 00:02:38.620
Right now we have a red shift cluster are instantiate

44
00:02:38.620 --> 00:02:40.790
types are nodes and our storage.

45
00:02:40.790 --> 00:02:46.640
So if I go in here, this is where all of our cluster performance data would show.

46
00:02:46.640 --> 00:02:53.240
So if we start populating our red shift tables with data warehouse data,

47
00:02:53.240 --> 00:02:55.620
we could start seeing the different monitoring and

48
00:02:55.620 --> 00:02:58.140
performance that goes along with it.

49
00:02:58.140 --> 00:02:59.190
Now, once we do that,

50
00:02:59.190 --> 00:03:04.110
what's also nice is you can run queries from within the console so you

51
00:03:04.110 --> 00:03:06.700
can see we have queries and loads and then saved.

52
00:03:06.700 --> 00:03:11.260
And you can save your SQL queries so you can quickly

53
00:03:11.260 --> 00:03:15.070
reference them or we can go over here to editor.

54
00:03:15.070 --> 00:03:20.170
And what this allows us to do is we connect to our database So we'll do, Dev.

55
00:03:20.170 --> 00:03:25.540
I'll give it a W s user And then the password that I typed in

56
00:03:25.540 --> 00:03:28.600
I'll connect to database and it failed.

57
00:03:28.600 --> 00:03:32.140
So let me go and wait while the cluster spins up and then we'll try again.

58
00:03:32.140 --> 00:03:34.890
So I'll pause really quickly and then I'll resume.

59
00:03:34.890 --> 00:03:39.040
Okay, It's been a few minutes, and I just checked in my cluster says available.

60
00:03:39.040 --> 00:03:44.240
So let's click on Connect, and you can see it's connecting to our database.

61
00:03:44.240 --> 00:03:46.010
So once this actually connects,

62
00:03:46.010 --> 00:03:49.480
you're going to see that we can perform queries on our red

63
00:03:49.480 --> 00:03:52.540
shift tables from the console itself.

64
00:03:52.540 --> 00:03:53.540
And there you go.

65
00:03:53.540 --> 00:03:56.580
This is the query editor screen that we can use,

66
00:03:56.580 --> 00:04:00.310
so this allows for a very efficient querying of our

67
00:04:00.310 --> 00:04:03.140
tables that live within red shift.

68
00:04:03.140 --> 00:04:05.220
Now, you're not going to be tested over this,

69
00:04:05.220 --> 00:04:08.160
but it's just a really handy thing to know about.

70
00:04:08.160 --> 00:04:12.630
So if you want to quickly run some queries from the console, you could do that.

71
00:04:12.630 --> 00:04:12.870
Now.

72
00:04:12.870 --> 00:04:16.520
We don't have any data, so I'm not going to run any queries here.

73
00:04:16.520 --> 00:04:18.440
But if we wanted to,

74
00:04:18.440 --> 00:04:22.150
we could actually connect our E M R Cluster that we

75
00:04:22.150 --> 00:04:27.200
spun up in the previous demo, and we could even pull data from R E.

76
00:04:27.200 --> 00:04:32.570
M R tables into Red Shift and then perform SQL queries on that.

77
00:04:32.570 --> 00:04:33.570
Now, once again,

78
00:04:33.570 --> 00:04:37.630
that's in that handling and analyzing data with AWS elastic

79
00:04:37.630 --> 00:04:40.940
map produced course that's on Pluralsight.

80
00:04:40.940 --> 00:04:43.440
So if you're interested in seeing how that works,

81
00:04:43.440 --> 00:04:48.040
feel free to watch that course and then dive in a little bit deeper.

82
00:04:48.040 --> 00:04:48.580
For now,

83
00:04:48.580 --> 00:04:53.100
I just wanted to show you at how you can create a red shift cluster for

84
00:04:53.100 --> 00:04:57.940
data warehouse needs within a W s and then one last thing.

85
00:04:57.940 --> 00:05:00.040
Actually, before we wrap up,

86
00:05:00.040 --> 00:05:03.880
you can see that you can configure cross region snapshots.

87
00:05:03.880 --> 00:05:08.260
So if you want to take backups and store them in a separate region for

88
00:05:08.260 --> 00:05:12.440
high availability and disaster recovery purposes,

89
00:05:12.440 --> 00:05:14.440
you can configure these snapshots.

90
00:05:14.440 --> 00:05:17.940
So I'm not gonna do that now because I don't want to incur any cost,

91
00:05:17.940 --> 00:05:20.040
but that's an option if you want it.

92
00:05:20.040 --> 00:05:20.870
So I'm gonna go ahead.

93
00:05:20.870 --> 00:05:22.220
I'm gonna clean this up.

94
00:05:22.220 --> 00:05:26.840
We'll end here and then we'll go ahead and move on to

95
00:05:26.840 --> 00:05:32.000
looking at elastic search service within A. W s

