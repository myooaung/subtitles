WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:02.450 --> 00:00:06.465
Now we've added some HTML to our page and in particular,

00:00:06.465 --> 00:00:08.295
this header section up at the top.

00:00:08.295 --> 00:00:11.100
We're now going to move on to adding some CSS to

00:00:11.100 --> 00:00:14.460
add some styling and layout to this header section.

00:00:14.460 --> 00:00:17.985
If we take a look at the final version just here,

00:00:17.985 --> 00:00:20.900
this will be the section up at the top which we're going to work on.

00:00:20.900 --> 00:00:22.410
By the end of this lesson,

00:00:22.410 --> 00:00:25.275
our header section should look just like this.

00:00:25.275 --> 00:00:29.010
To do this, we're going to change the layout of our free div sections to go across

00:00:29.010 --> 00:00:33.360
the page rather than being stacked on top of each other like we currently have.

00:00:33.360 --> 00:00:38.675
To get started, we're going to go over to our styles.css which we've already created,

00:00:38.675 --> 00:00:41.375
and we've already linked this to our index page.

00:00:41.375 --> 00:00:43.120
We don't want to link just here,

00:00:43.120 --> 00:00:49.190
so what we need to do is to target any of these selectors in the body section.

00:00:49.190 --> 00:00:51.170
If we want to target the header section,

00:00:51.170 --> 00:00:52.520
we can, the div,

00:00:52.520 --> 00:00:55.265
the lists, the individual list items,

00:00:55.265 --> 00:00:57.595
we can target anything on this page.

00:00:57.595 --> 00:01:00.590
But first we're going to start at the very outer element,

00:01:00.590 --> 00:01:03.395
which is this HTML element just here.

00:01:03.395 --> 00:01:09.385
A way to target any of these elements is to write it exactly the same as we do in HTML.

00:01:09.385 --> 00:01:13.020
Then we opened up the curly braces just like this.

00:01:13.020 --> 00:01:16.250
Then all of the style rules which we apply in-between here,

00:01:16.250 --> 00:01:18.880
will apply to our HTML.

00:01:18.880 --> 00:01:23.170
The first thing we're going to do is to set a background color.

00:01:23.170 --> 00:01:26.815
This background color is going to apply to the full document.

00:01:26.815 --> 00:01:30.350
I'm going to keep this simple and set this to be a white color.

00:01:30.350 --> 00:01:34.195
If we give this file a say, we shouldn't really see any changes to the browser,

00:01:34.195 --> 00:01:36.850
since this is already a white color.

00:01:36.850 --> 00:01:40.630
But this is the background color which we can see over on the left,

00:01:40.630 --> 00:01:42.575
on the right-hand side.

00:01:42.575 --> 00:01:44.340
This is all white too,

00:01:44.340 --> 00:01:46.335
but the difference is in the center.

00:01:46.335 --> 00:01:51.580
We're now going to grab all of the HTML content contained in the body section.

00:01:51.580 --> 00:01:54.565
Then change the color for the section.

00:01:54.565 --> 00:01:57.220
Remember this body section was nested inside,

00:01:57.220 --> 00:02:00.710
so this will sit on top of a white background.

00:02:00.710 --> 00:02:04.560
This below this, on the body section.

00:02:04.560 --> 00:02:09.485
Then inside here, if we then set the background color to be any different color,

00:02:09.485 --> 00:02:13.740
say this, all to the browser and refresh.

00:02:13.740 --> 00:02:16.865
But now see the body has a different background color,

00:02:16.865 --> 00:02:21.065
mostly gone to set off the live server by clicking "Go Live",

00:02:21.065 --> 00:02:23.740
close this first version down.

00:02:23.740 --> 00:02:27.780
This will just save us refreshing the browser after each change.

00:02:27.780 --> 00:02:31.145
As well as these colors which you have saturated here,

00:02:31.145 --> 00:02:34.140
we can also use a different color codes.

00:02:34.140 --> 00:02:39.070
To do this, if we go over to Google and do a search for HTML Color Picker,

00:02:39.070 --> 00:02:42.925
we have various different options we can use to set a color.

00:02:42.925 --> 00:02:46.020
We can either use this color picker which pops up just here,

00:02:46.020 --> 00:02:50.250
or there is also a good one at the W3Schools websites.

00:02:50.250 --> 00:02:52.020
The values is over on the right,

00:02:52.020 --> 00:02:53.655
which begin with this hash.

00:02:53.655 --> 00:02:57.560
These are six digit codes which makes up what is called a Hex value.

00:02:57.560 --> 00:03:00.275
We can select any color, just like this blue.

00:03:00.275 --> 00:03:02.390
We can then see the Hex value at the top.

00:03:02.390 --> 00:03:05.090
We can also see a RGB color,

00:03:05.090 --> 00:03:06.830
which is the red, the green,

00:03:06.830 --> 00:03:08.935
and the blue values all mixed together.

00:03:08.935 --> 00:03:10.820
Also a HSL value,

00:03:10.820 --> 00:03:14.300
which is the hue, saturation, and the lightness.

00:03:14.300 --> 00:03:16.865
These are all valid CSS values.

00:03:16.865 --> 00:03:20.050
But for this color I'm going to stick to the Hex value.

00:03:20.050 --> 00:03:26.050
The hash and the volume I'm going to use is going to be ede6e6.

00:03:28.100 --> 00:03:31.445
This gives us the different background color.

00:03:31.445 --> 00:03:33.620
If you are using Visual Studio Code,

00:03:33.620 --> 00:03:36.240
you can also hover over this background color,

00:03:36.240 --> 00:03:39.385
and we can select a different value from this color picker.

00:03:39.385 --> 00:03:41.580
At the top, we can see this is

00:03:41.580 --> 00:03:45.860
a Hex value or we can also click on this to be taken to the HSL value,

00:03:45.860 --> 00:03:49.355
an RGB value, if you prefer a different format.

00:03:49.355 --> 00:03:51.335
Continuing on with the body,

00:03:51.335 --> 00:03:55.460
the next thing we want to do is to set the font family for this project.

00:03:55.460 --> 00:03:59.105
The font family is the style of texts which we're going to use.

00:03:59.105 --> 00:04:01.420
I'm going to go for Arial.

00:04:01.420 --> 00:04:05.820
This is a pretty simple font which I'm going to be selecting for this project.

00:04:05.820 --> 00:04:08.500
We can select different ones if you prefer.

00:04:08.500 --> 00:04:11.450
This is the first choice value and then

00:04:11.450 --> 00:04:14.780
separated by comma you can add different values which you want to add.

00:04:14.780 --> 00:04:18.080
If the previous font families are not found,

00:04:18.080 --> 00:04:22.285
the next one are Helvetica, and then sans-serif.

00:04:22.285 --> 00:04:24.890
What is happening here, is we are looking for

00:04:24.890 --> 00:04:28.025
the Arial font if this is available on the user system.

00:04:28.025 --> 00:04:30.965
If not, it will drop back to the Helvetica,

00:04:30.965 --> 00:04:35.985
and if this one could not be found even it will fall back to a generic sans-serif fonts.

00:04:35.985 --> 00:04:38.465
As well as this, we can also set

00:04:38.465 --> 00:04:41.810
the default font size which you want to use for this project.

00:04:41.810 --> 00:04:44.150
Once you go for 18 pixels,

00:04:44.150 --> 00:04:47.270
we can change this to be any value or we can also

00:04:47.270 --> 00:04:50.990
override this value for any of the our sections too.

00:04:50.990 --> 00:04:53.495
This is just basically a starting point.

00:04:53.495 --> 00:04:56.675
Next, the rest of the content we want to restrict the width

00:04:56.675 --> 00:05:00.245
of all this section to be a certain value.

00:05:00.245 --> 00:05:05.315
I'm going to go for 960 pixels for this example,

00:05:05.315 --> 00:05:08.725
which is a fixed value which won't change.

00:05:08.725 --> 00:05:10.520
If we shrink down the browser,

00:05:10.520 --> 00:05:12.380
we see this is pushed off the edge.

00:05:12.380 --> 00:05:15.605
But we'll take a look at responsive design very soon.

00:05:15.605 --> 00:05:19.280
We also want the section to be in the middle of the page.

00:05:19.280 --> 00:05:22.820
The way we can do this is by applying some margin.

00:05:22.820 --> 00:05:27.515
Margin is the space in which appears outside of an element,

00:05:27.515 --> 00:05:29.750
so anything which you add inside the body section will

00:05:29.750 --> 00:05:33.365
appear outside of this colored section.

00:05:33.365 --> 00:05:36.869
Let's give this a go. If we add 10 pixels,

00:05:36.869 --> 00:05:40.210
this will take effect to all four sides.

00:05:40.210 --> 00:05:42.100
Of course, at the moment we don't want that

00:05:42.100 --> 00:05:43.960
because these will be fighting against each other.

00:05:43.960 --> 00:05:45.685
We have equal amounts on the top,

00:05:45.685 --> 00:05:48.515
the bottom, and also the left and the right.

00:05:48.515 --> 00:05:51.715
What we can do is add four separate values.

00:05:51.715 --> 00:05:53.635
This will go clockwise from top,

00:05:53.635 --> 00:05:56.440
right, bottom, and left.

00:05:56.440 --> 00:05:59.740
From the top we'll changes this to be 50 pixels,

00:05:59.740 --> 00:06:02.710
a right, a bottom, and the left.

00:06:02.710 --> 00:06:07.685
So if only 50 pixels will now apply to the top of the body section,

00:06:07.685 --> 00:06:09.430
but what we want to do just like

00:06:09.430 --> 00:06:12.520
the final version is to have no margin on the top and bottom,

00:06:12.520 --> 00:06:16.290
but divide up all the space equally on the left and right.

00:06:16.290 --> 00:06:20.225
The way we can do this is by applying zero margin on the top,

00:06:20.225 --> 00:06:22.070
zero margin on the bottom,

00:06:22.070 --> 00:06:25.250
and then we can set the other value for the left and the right,

00:06:25.250 --> 00:06:27.985
which will divide the space up equally.

00:06:27.985 --> 00:06:30.720
The top, we want zero,

00:06:30.720 --> 00:06:33.075
the right of auto,

00:06:33.075 --> 00:06:37.575
zero on the bottom, and then auto on the left,

00:06:37.575 --> 00:06:41.360
and these auto values will now push this into the center.

00:06:41.360 --> 00:06:44.810
If we want to, we can also take advantage of a shorter version,

00:06:44.810 --> 00:06:47.090
which is to apply two values.

00:06:47.090 --> 00:06:49.610
The first one will be the top and bottom,

00:06:49.610 --> 00:06:52.535
and then the second value will be the left and the right.

00:06:52.535 --> 00:06:55.880
Saving this will result in the exact same effect.

00:06:55.880 --> 00:07:01.240
Next we're going to target the header section and the free divs which are nested inside.

00:07:01.240 --> 00:07:04.435
So this header is wrapping all three of our sections,

00:07:04.435 --> 00:07:07.130
then we have a div which follows each one.

00:07:07.130 --> 00:07:12.200
The first thing to do is to grab this header section which is the wrapper,

00:07:12.200 --> 00:07:15.070
then we're going to set the display type.

00:07:15.070 --> 00:07:19.895
The display type allows us to change the default display for each element.

00:07:19.895 --> 00:07:24.060
We mentioned previously that certain elements can fall into a category.

00:07:24.060 --> 00:07:28.130
I will mention the block type and also the inline type.

00:07:28.130 --> 00:07:33.935
If you remember, block will take up the full width of the page and start on a new line,

00:07:33.935 --> 00:07:37.075
just like these three sections which we already have.

00:07:37.075 --> 00:07:38.970
In line, as it sounds,

00:07:38.970 --> 00:07:44.135
we'll place the elements across the page side-by-side if there is space to do so.

00:07:44.135 --> 00:07:49.385
But we're going to be taking advantage of a display type called flex.

00:07:49.385 --> 00:07:55.715
This makes use of the CSS flexbox to make laying out our lemons much easier.

00:07:55.715 --> 00:07:59.090
If we save this, we'll immediately see that all three of

00:07:59.090 --> 00:08:02.420
these div sections are placed across the page.

00:08:02.420 --> 00:08:04.880
It does this because by using the flexbox,

00:08:04.880 --> 00:08:10.865
we can set the contents that are even laid out in a horizontal or a vertical direction.

00:08:10.865 --> 00:08:16.580
By default, the flexbox will make use of the flex direction on the value of row.

00:08:16.580 --> 00:08:21.110
This means all of the elements will be placed across the page in a row.

00:08:21.110 --> 00:08:23.210
When using a left to right language,

00:08:23.210 --> 00:08:24.485
just like English is,

00:08:24.485 --> 00:08:27.440
this will be from the left over to the right.

00:08:27.440 --> 00:08:30.905
We can also change the flex direction to be column.

00:08:30.905 --> 00:08:33.755
This will stack all of the elements vertically.

00:08:33.755 --> 00:08:35.390
Since row is default,

00:08:35.390 --> 00:08:38.335
we can leave this off and assume this is already set.

00:08:38.335 --> 00:08:43.265
Next, we're going to constrain the height of this header to be a certain value.

00:08:43.265 --> 00:08:45.665
We can do this with the high property.

00:08:45.665 --> 00:08:50.365
Then I'm going to use the value of 150 pixels.

00:08:50.365 --> 00:08:55.460
Then we need to make sure that all three of the sections are spaced out equally.

00:08:55.460 --> 00:08:59.005
We want them to all have the same width value.

00:08:59.005 --> 00:09:02.990
We can do this by going back into our style sheet.

00:09:02.990 --> 00:09:05.345
Again, we're going to target the header.

00:09:05.345 --> 00:09:10.375
But this time we use the greater than symbol and then select the div.

00:09:10.375 --> 00:09:14.090
This means all of the styles which we apply inside here,

00:09:14.090 --> 00:09:19.555
will only apply to any div elements which immediately follow our header.

00:09:19.555 --> 00:09:22.730
We can see if we go to the index page, we have our header.

00:09:22.730 --> 00:09:26.260
Then wonderful nested inside we have this div section.

00:09:26.260 --> 00:09:28.255
We also have this one alongside,

00:09:28.255 --> 00:09:30.265
and then our third section.

00:09:30.265 --> 00:09:34.795
The styling will apply to all three of these sections with this code.

00:09:34.795 --> 00:09:37.290
Since we already have the header section which is

00:09:37.290 --> 00:09:40.430
the parent set to make use of the flexbox,

00:09:40.430 --> 00:09:45.260
these child elements which are nested inside can also make use of flex values.

00:09:45.260 --> 00:09:47.330
One of these is simply flex.

00:09:47.330 --> 00:09:49.445
If we set the value to be one,

00:09:49.445 --> 00:09:53.240
now this flex value of one will apply to all three of our divs.

00:09:53.240 --> 00:09:58.160
Now, this means that all three of these sections will have the equal amount of space.

00:09:58.160 --> 00:10:01.425
If we were to change it to be any of our values which is two,

00:10:01.425 --> 00:10:05.000
we'll have the exact same effect since they are all the same.

00:10:05.000 --> 00:10:08.105
However, though the difference will occur if we were to apply

00:10:08.105 --> 00:10:11.545
a different flex value to a different section.

00:10:11.545 --> 00:10:14.750
For example, if we targeted this logo section

00:10:14.750 --> 00:10:17.810
in the middle and then place a flex value of two,

00:10:17.810 --> 00:10:22.715
this would take over twice the available space as this section just here.

00:10:22.715 --> 00:10:24.380
But we want these to be equal,

00:10:24.380 --> 00:10:26.570
so this is fine for now.

00:10:26.570 --> 00:10:31.145
After this, we'll also set the text-align to be in the center.

00:10:31.145 --> 00:10:33.380
This means that all the texts contained inside of

00:10:33.380 --> 00:10:36.530
this div will be centered within this section.

00:10:36.530 --> 00:10:38.030
Looking at the final version,

00:10:38.030 --> 00:10:40.780
we also want these two pushed down to the bottom.

00:10:40.780 --> 00:10:43.460
A way we can do this, and since we are still

00:10:43.460 --> 00:10:46.070
making use of the flexbox with the parents here,

00:10:46.070 --> 00:10:49.565
we cannot make use of a property called align-self.

00:10:49.565 --> 00:10:51.745
Just after the text-aligned,

00:10:51.745 --> 00:10:54.180
add in the align-self selector,

00:10:54.180 --> 00:10:56.970
and we have the various values which we can choose.

00:10:56.970 --> 00:11:00.620
Now the value which we are going to add here will apply vertically.

00:11:00.620 --> 00:11:02.510
This is because as we've seen before,

00:11:02.510 --> 00:11:04.715
the default flex direction is row.

00:11:04.715 --> 00:11:07.340
This is across the page horizontally.

00:11:07.340 --> 00:11:09.785
Align-self will apply to the opposite,

00:11:09.785 --> 00:11:11.689
which is the vertical direction,

00:11:11.689 --> 00:11:14.275
also referred to as the cross axis.

00:11:14.275 --> 00:11:16.220
Since we are working vertically,

00:11:16.220 --> 00:11:17.885
the flex style will be the top,

00:11:17.885 --> 00:11:19.745
the center will be in the middle,

00:11:19.745 --> 00:11:22.950
and the flex end will be down at the bottom.

00:11:23.430 --> 00:11:27.220
This now pushes these down to the bottom of our div.

00:11:27.220 --> 00:11:29.650
We also need to change these to be across the page,

00:11:29.650 --> 00:11:31.930
but we'll come back to these in just a moment.

00:11:31.930 --> 00:11:34.765
We also need to make these links go across the page,

00:11:34.765 --> 00:11:37.420
and the way we can do this is by targeting the wrapper,

00:11:37.420 --> 00:11:39.460
which is the list item.

00:11:39.460 --> 00:11:42.100
Just like before when we set the display type of

00:11:42.100 --> 00:11:44.875
the header to make use of flex-box, for this,

00:11:44.875 --> 00:11:47.380
we're going to change the default display time for

00:11:47.380 --> 00:11:50.800
all the list items be the value of inline.

00:11:50.800 --> 00:11:54.100
When we save this, we'll immediately see that these change to

00:11:54.100 --> 00:11:59.245
an inline display type rather than being on top of each other just like they were before.

00:11:59.245 --> 00:12:04.430
Next, let's go to this middle section and we'll make the image a little bit smaller,

00:12:04.620 --> 00:12:07.390
so grab our header section.

00:12:07.390 --> 00:12:11.785
Then we're going to use a different selector which looks just like this.

00:12:11.785 --> 00:12:15.385
Before, we mentioned that if we use this greater than arrow,

00:12:15.385 --> 00:12:20.035
this will select any div which immediately follows our header elements.

00:12:20.035 --> 00:12:22.810
We couldn't do the exact same for this section because

00:12:22.810 --> 00:12:26.035
the image is not a direct channel of our header.

00:12:26.035 --> 00:12:29.260
This header section only contains our divs,

00:12:29.260 --> 00:12:32.710
so what we can do instead is to leave this out and this will

00:12:32.710 --> 00:12:36.370
grab any image element which is inside the header section.

00:12:36.370 --> 00:12:40.090
For this, we'll restrict the size of the header image

00:12:40.090 --> 00:12:44.770
to be a maximum width of 100 pixels.

00:12:44.770 --> 00:12:48.910
We can now see that the image is now just about the right size,

00:12:48.910 --> 00:12:51.250
but some of the spacing and also the size of

00:12:51.250 --> 00:12:55.195
the site title is still pushing this off the top of the page.

00:12:55.195 --> 00:12:57.430
Rather than making this any smaller,

00:12:57.430 --> 00:12:59.515
we'll go down to our level one heading,

00:12:59.515 --> 00:13:05.980
which is our site title placed inside of this middle div, so just here.

00:13:05.980 --> 00:13:08.890
For this section we want to, first of all,

00:13:08.890 --> 00:13:11.935
remove the default spacing which is just below.

00:13:11.935 --> 00:13:15.129
If we right-click and go to the inspector,

00:13:15.129 --> 00:13:16.975
we'll open the developer tools,

00:13:16.975 --> 00:13:18.700
click on the arrow in the corner.

00:13:18.700 --> 00:13:21.415
We can see the orange section on the top and bottom.

00:13:21.415 --> 00:13:24.430
Now, if we click on this and then look over on the right,

00:13:24.430 --> 00:13:26.440
and then inside of the elements section,

00:13:26.440 --> 00:13:27.955
go into the styles.

00:13:27.955 --> 00:13:29.590
Then at the bottom, we can see we have

00:13:29.590 --> 00:13:33.070
some margin which has been applied on the top and bottom.

00:13:33.070 --> 00:13:36.700
The level one heading, along with other elements often have

00:13:36.700 --> 00:13:40.480
some default margin and padding applied by the browser.

00:13:40.480 --> 00:13:45.220
We can also override this by setting our own margin values.

00:13:45.220 --> 00:13:51.145
We can reset this to be zero and we can see this has now been removed.

00:13:51.145 --> 00:13:56.365
However though, we want to apply a little bit of margin on the bottom and also the top,

00:13:56.365 --> 00:13:59.230
so we can change this to be ten pixels.

00:13:59.230 --> 00:14:01.150
Now we've removed the spacing,

00:14:01.150 --> 00:14:03.655
we almost have the image back on the page.

00:14:03.655 --> 00:14:10.795
The next thing we're going to do is to set the font size to be 20 pixels.

00:14:10.795 --> 00:14:16.105
This will then reduce down the font size and leave enough space now for our image.

00:14:16.105 --> 00:14:18.400
Next we're going to move on to this left and

00:14:18.400 --> 00:14:21.700
the right section and style our unordered list.

00:14:21.700 --> 00:14:25.960
If you notice and in particular if we go into the developer tools,

00:14:25.960 --> 00:14:30.744
if we click on the inspector and then hover over any of the sections,

00:14:30.744 --> 00:14:36.025
we can see that these unordered list items are not placed in the center of our div.

00:14:36.025 --> 00:14:40.525
This is because if we select our unordered list,

00:14:40.525 --> 00:14:43.030
we can see by the green section over on the left,

00:14:43.030 --> 00:14:44.530
we have some default padding,

00:14:44.530 --> 00:14:47.425
and just like the level one heading with the orange section,

00:14:47.425 --> 00:14:49.960
we also have some margin applied too.

00:14:49.960 --> 00:14:53.995
Again, if we click on this we can go over to the diagram on the bottom right.

00:14:53.995 --> 00:14:56.740
We can see the size of the elements in the middle,

00:14:56.740 --> 00:14:59.425
a padding which is being applied over on the left,

00:14:59.425 --> 00:15:01.780
which is currently 40 pixels,

00:15:01.780 --> 00:15:05.260
and then the margin which is on the top and bottom.

00:15:05.260 --> 00:15:07.570
What we're going to do is, first of all,

00:15:07.570 --> 00:15:10.210
set the margin to be a value of 10 pixels.

00:15:10.210 --> 00:15:14.365
This will then give the same amount of spacing from the bottom as the heading.

00:15:14.365 --> 00:15:17.395
Then we'll move this default green padding section

00:15:17.395 --> 00:15:20.275
so our links are placed into the center.

00:15:20.275 --> 00:15:24.085
Do this. As we've just seen, this is applied to the unordered list.

00:15:24.085 --> 00:15:27.700
First, we'll set the margin to be 10 pixels on

00:15:27.700 --> 00:15:32.020
the top and bottom and this should then line this up with our heading.

00:15:32.020 --> 00:15:35.575
We'll set zero on the left and right and then

00:15:35.575 --> 00:15:40.700
afterwards remove any default padding with a value of zero.

00:15:40.700 --> 00:15:42.840
This and back on to the browser,

00:15:42.840 --> 00:15:44.790
we can now see if we hover over the padding,

00:15:44.790 --> 00:15:47.325
we don't have any values applied.

00:15:47.325 --> 00:15:51.915
The margin, this has now been reduced to 10 pixels on the top and bottom,

00:15:51.915 --> 00:15:54.395
which will then line up with our heading.

00:15:54.395 --> 00:15:57.040
Next, since all of these items are links,

00:15:57.040 --> 00:16:00.685
these have a default color and they also have these underlined too.

00:16:00.685 --> 00:16:03.465
To remove this, we need to select our link,

00:16:03.465 --> 00:16:07.245
which is this A element which surrounds our title,

00:16:07.245 --> 00:16:09.910
and also our list items.

00:16:10.280 --> 00:16:13.920
Grab this. First, to remove the underline,

00:16:13.920 --> 00:16:17.090
we need to set the text decoration.

00:16:17.090 --> 00:16:20.020
We do have options to change things like the color,

00:16:20.020 --> 00:16:22.840
but I'm just going to remove this with the value of none.

00:16:22.840 --> 00:16:25.585
Next we're going to set the text color.

00:16:25.585 --> 00:16:28.675
I'm also going to set this up in the body section too.

00:16:28.675 --> 00:16:31.085
This also applies to other elements.

00:16:31.085 --> 00:16:35.475
The way we can add color to our text is by simply using the color property.

00:16:35.475 --> 00:16:41.990
From here again, we want to use a hex value of 373535.

00:16:41.990 --> 00:16:45.820
This will apply to the rest of the site when we create our new element.

00:16:45.820 --> 00:16:48.220
As we can see, this won't apply to our links,

00:16:48.220 --> 00:16:53.080
so we need to also apply this to our A elements by doing exactly the same.

00:16:53.080 --> 00:16:58.285
The value was 373535, save this.

00:16:58.285 --> 00:17:01.240
This is now applied to all of our links.

00:17:01.240 --> 00:17:04.780
The very last piece of styling I'm going to use for this header is to

00:17:04.780 --> 00:17:08.350
change the color of this link when the mouse hovers over.

00:17:08.350 --> 00:17:12.610
Just like we see in the final version here when we hover over any of these links,

00:17:12.610 --> 00:17:14.260
we get a change of color.

00:17:14.260 --> 00:17:19.390
To do this, we need to apply a pseudo-class to our A element.

00:17:19.390 --> 00:17:21.685
Just like above, we select our elements,

00:17:21.685 --> 00:17:27.850
use a colon and a pseudo-class will apply different styling for a different state.

00:17:27.850 --> 00:17:31.735
By state, we mean things like if a link has been visited or clicked on,

00:17:31.735 --> 00:17:33.340
if it's been unvisited,

00:17:33.340 --> 00:17:35.605
if the mouse hovers over any of these links,

00:17:35.605 --> 00:17:37.720
and also various hovers too.

00:17:37.720 --> 00:17:40.810
For this, we're going to make use of the hover state,

00:17:40.810 --> 00:17:43.285
so when the mouse hovers over any of these links,

00:17:43.285 --> 00:17:45.790
but I'm going to change the text color.

00:17:45.790 --> 00:17:48.310
Again, we're free to use any different types or

00:17:48.310 --> 00:17:50.500
values which you want to, but for this example,

00:17:50.500 --> 00:17:55.780
I'm going to mix it up and use a RGB value where we place inside three separate values.

00:17:55.780 --> 00:17:58.900
The first one is red, which is 226,

00:17:58.900 --> 00:18:01.930
the green of 74,

00:18:01.930 --> 00:18:04.720
and the blue value of 74.

00:18:04.720 --> 00:18:08.395
We can see by the preview that this gives us this red color.

00:18:08.395 --> 00:18:14.065
Over to the project, and our hover takes effect for each one of these links.

00:18:14.065 --> 00:18:17.560
This is now all of the styling applied to our header section.

00:18:17.560 --> 00:18:19.870
If you want to, you can play around these values and

00:18:19.870 --> 00:18:22.825
colors and change things around if you want to.

00:18:22.825 --> 00:18:28.280
Next, we're going to move down the page and create some more these content sections.
