WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:02.870 --> 00:00:07.935
Now we know this is working, we can close this down and move on to our styling,

00:00:07.935 --> 00:00:10.395
so into our custom style sheet,

00:00:10.395 --> 00:00:12.510
which is the styles.css.

00:00:12.510 --> 00:00:16.040
We already have our font family downloaded from Google Fonts,

00:00:16.040 --> 00:00:19.535
and we can add this inside of the HTML section.

00:00:19.535 --> 00:00:23.730
I'll move this up and then remove the commence.

00:00:23.730 --> 00:00:30.060
What I'm going to do here is to set the font family be a base size of 10 pixels.

00:00:30.060 --> 00:00:35.415
Now this doesn't mean that I want the text inside the project to be all 10 pixels.

00:00:35.415 --> 00:00:38.220
This is just going to provide an easy calculation,

00:00:38.220 --> 00:00:40.315
which we'll see in just a moment.

00:00:40.315 --> 00:00:44.615
Next, the color. This will apply to all of the texts.

00:00:44.615 --> 00:00:48.260
The RGB value is going to be 62 for the red,

00:00:48.260 --> 00:00:50.030
61 for the green,

00:00:50.030 --> 00:00:52.900
and 61 for the blue.

00:00:52.900 --> 00:00:55.770
Check this has applied okay.

00:00:55.770 --> 00:00:59.075
Now we see our difference, font has applied.

00:00:59.075 --> 00:01:01.835
The base font color hasn't applied to all links.

00:01:01.835 --> 00:01:04.555
But we'll fix this in just a second.

00:01:04.555 --> 00:01:07.605
Next, the header section.

00:01:07.605 --> 00:01:11.450
The header section, we'll make use of the display type of flex.

00:01:11.450 --> 00:01:14.330
We're going to switch around the flex direction

00:01:14.330 --> 00:01:18.370
of row and column based on the size of the screen.

00:01:18.370 --> 00:01:23.330
What we're going to do in this video is to shrink down the browser to a small screen,

00:01:23.330 --> 00:01:25.010
and on the mobile version,

00:01:25.010 --> 00:01:26.210
just like we see here.

00:01:26.210 --> 00:01:29.350
We want this content to be displayed as a column.

00:01:29.350 --> 00:01:34.820
Then later on we'll apply a media query to switch the flex direction to be row.

00:01:34.820 --> 00:01:39.020
But for now, we're just going to stick with the small screen view.

00:01:39.020 --> 00:01:42.690
Set the flex direction to be column.

00:01:43.790 --> 00:01:47.135
Then also align items in the center,

00:01:47.135 --> 00:01:50.275
which will center to this from left to right.

00:01:50.275 --> 00:01:53.660
The side title is wrapped in a level one heading.

00:01:53.660 --> 00:01:58.295
So let's like this and change the cursor to be a pointer.

00:01:58.295 --> 00:02:02.310
This will change each time we hover over this section.

00:02:02.540 --> 00:02:11.730
After this, the font size and the value of two rems.

00:02:11.730 --> 00:02:14.785
A rem is a relative size,

00:02:14.785 --> 00:02:17.110
and this means it will grow larger or smaller,

00:02:17.110 --> 00:02:19.345
depending on the base font family,

00:02:19.345 --> 00:02:21.980
which was set up in the HTML.

00:02:21.980 --> 00:02:24.460
Two rems will mean this is twice the size,

00:02:24.460 --> 00:02:26.140
so this will be 20 pixels.

00:02:26.140 --> 00:02:27.940
If we set this to be one rem,

00:02:27.940 --> 00:02:30.405
this would then be 10 pixels.

00:02:30.405 --> 00:02:34.450
Having this base size set to be a nice rounded number,

00:02:34.450 --> 00:02:38.685
makes it really easy to calculate the exact font size which we want.

00:02:38.685 --> 00:02:42.640
For example, if we wanted this size be 16 pixels,

00:02:42.640 --> 00:02:45.400
we could set this to be 1.6 rems.

00:02:45.400 --> 00:02:48.670
The alternative is we have this to be 16 pixels.

00:02:48.670 --> 00:02:52.505
Then if we maybe wanted this to be 18 pixels down here,

00:02:52.505 --> 00:02:55.540
the calculations would be a little more complex.

00:02:55.540 --> 00:02:58.215
Let's just keep this as 10.

00:02:58.215 --> 00:03:00.720
This also needs to be the font size,

00:03:00.720 --> 00:03:01.820
not the font family,

00:03:01.820 --> 00:03:03.275
which you're already set above.

00:03:03.275 --> 00:03:06.505
Now if we save this, this will now all apply correctly.

00:03:06.505 --> 00:03:09.450
Next, we can get to work on these links.

00:03:09.450 --> 00:03:11.695
This is the a element.

00:03:11.695 --> 00:03:13.804
First of all, the text decoration,

00:03:13.804 --> 00:03:17.930
which is none, and this will remove the underline from all of our links.

00:03:17.930 --> 00:03:23.440
Also we want the link color to be the same as this color just here.

00:03:23.440 --> 00:03:26.610
To do this, we also need to set the color.

00:03:26.610 --> 00:03:29.840
We could copy over this color and add this inside of here.

00:03:29.840 --> 00:03:32.165
Or instead we could inherit this,

00:03:32.165 --> 00:03:34.670
and this will inherit the color from the parents,

00:03:34.670 --> 00:03:36.820
which is this one just here.

00:03:36.820 --> 00:03:41.420
Refresh. This also applies to all links and also the level 1 heading,

00:03:41.420 --> 00:03:44.000
which is also wrapped in a link.

00:03:44.000 --> 00:03:47.765
To also change the equilibrium hover over any of these elements,

00:03:47.765 --> 00:03:49.705
we can add a hover state.

00:03:49.705 --> 00:03:51.870
So a and then you colon.

00:03:51.870 --> 00:03:55.010
We can add the hover state, which is going to change the color of

00:03:55.010 --> 00:03:59.315
the text each time the mouse cursor moves over this section.

00:03:59.315 --> 00:04:01.340
You can play around with color if you want to.

00:04:01.340 --> 00:04:03.440
I'm going to go for 104,

00:04:03.440 --> 00:04:08.070
114 and then 166.

00:04:08.450 --> 00:04:10.760
Moving down to the links,

00:04:10.760 --> 00:04:12.435
if we look at the final version,

00:04:12.435 --> 00:04:17.110
what we want to do here is to remove the dots or the bullets from our list items.

00:04:17.110 --> 00:04:22.685
Also places across the page and also make the font size a little bit larger.

00:04:22.685 --> 00:04:25.690
From the wrapper, which is the unordered list,

00:04:25.690 --> 00:04:30.400
the way we can remove these bullets is to set the list-style to none.

00:04:30.400 --> 00:04:33.685
To allow us to properly center all of these items,

00:04:33.685 --> 00:04:36.710
we can also move the browser's default.

00:04:36.710 --> 00:04:38.830
Inside of the developer tools,

00:04:38.830 --> 00:04:43.530
if we click on the inspector and then hover over the unordered list,

00:04:43.530 --> 00:04:47.355
we can see over on the left we have this green section which is padding.

00:04:47.355 --> 00:04:52.030
This has been applied by the browser or Macondo moved this by setting the value of

00:04:52.030 --> 00:04:57.470
the padding to be zero. Oh, another list.

00:04:59.060 --> 00:05:02.120
This is now been removed.

00:05:02.120 --> 00:05:05.860
Next up, we're going to make the font size a little bit larger.

00:05:05.860 --> 00:05:10.910
Then we can select the list items and places horizontally across the page.

00:05:10.910 --> 00:05:15.400
To do this, set the display type to be flex.

00:05:15.400 --> 00:05:19.660
By default, the flex direction is going to be row placing these elements

00:05:19.660 --> 00:05:23.955
across the page until the list items.

00:05:23.955 --> 00:05:26.200
The font size of 16 pixels,

00:05:26.200 --> 00:05:28.600
which we can calculate rom at 1.6

00:05:28.600 --> 00:05:33.640
rems and also to apply some space in between each one of these.

00:05:33.640 --> 00:05:37.185
That's a margin of zero on the top and bottom,

00:05:37.185 --> 00:05:40.820
and then 10 pixels on the left and the right.

00:05:40.820 --> 00:05:45.560
This is all we need to do for the header section until we get to the larger screen.

00:05:45.560 --> 00:05:50.195
Down to this image section and we can target the image with img.

00:05:50.195 --> 00:05:52.880
Then set the width of the image.

00:05:52.880 --> 00:05:54.880
We want 100 percent.

00:05:54.880 --> 00:05:58.940
This will now make sure that our image will not stretch any further than at

00:05:58.940 --> 00:06:02.840
the width of the browser from earlier when we added the HTML.

00:06:02.840 --> 00:06:04.550
Let's go back over to this section.

00:06:04.550 --> 00:06:07.270
We give this a class of apply.

00:06:07.270 --> 00:06:12.020
This class is going to allow us to select this full section and use this as

00:06:12.020 --> 00:06:17.495
a reference point to center this section and just below, and do this.

00:06:17.495 --> 00:06:20.430
This is a class, so we use the dot.

00:06:20.630 --> 00:06:24.195
To make this a reference point for our text,

00:06:24.195 --> 00:06:27.520
we need to set the position type to be relative.

00:06:27.520 --> 00:06:30.050
We'll take a look at what this does in it just a second.

00:06:30.050 --> 00:06:32.080
We shouldn't see any difference at the moment.

00:06:32.080 --> 00:06:36.745
But the difference will become apparent when we select this text overlay.

00:06:36.745 --> 00:06:42.760
This was the class which we give to this section. Grab this.

00:06:44.960 --> 00:06:52.010
Then to make this work, we also set a position value for this section to be absolute.

00:06:53.120 --> 00:06:58.360
If we refresh, so it doesn't look any different at the moment.

00:06:58.360 --> 00:07:01.165
But what we've effectively done here is to pull out

00:07:01.165 --> 00:07:05.765
this text overlay section from the flow of the rest of the content.

00:07:05.765 --> 00:07:10.310
Now we need to tell the browser exactly where we want this to be positioned from.

00:07:10.310 --> 00:07:13.610
We can do this by adding the top, the right,

00:07:13.610 --> 00:07:17.965
the bottom and the left values over in our style sheet.

00:07:17.965 --> 00:07:21.590
What we want to do is to position this 50 percent from the left of

00:07:21.590 --> 00:07:25.740
the image and then 50 percent from the top.

00:07:25.860 --> 00:07:32.450
The left value of 50 percent and the same for the top.

00:07:32.580 --> 00:07:36.190
"Refresh". Now we getting somewhere,

00:07:36.190 --> 00:07:38.245
this is nearly in the center of the image.

00:07:38.245 --> 00:07:41.440
The reason both these 50 percent values have been applied from

00:07:41.440 --> 00:07:45.370
the image is because we've set the position type to be relative.

00:07:45.370 --> 00:07:46.795
When we set a section,

00:07:46.795 --> 00:07:48.805
just like this to be absolute,

00:07:48.805 --> 00:07:51.249
when we set the values for positioning,

00:07:51.249 --> 00:07:56.335
it will reference all of these sizes in the closest relative container.

00:07:56.335 --> 00:08:01.240
In our case, the closest relative container is the image section wrapper.

00:08:01.240 --> 00:08:04.210
If we didn't have this just inside of here,

00:08:04.210 --> 00:08:06.280
let's take a look at what would happen.

00:08:06.280 --> 00:08:11.845
"Refresh". Now since we don't have a relative container set ourselves,

00:08:11.845 --> 00:08:15.205
it will instead use the body section as a reference.

00:08:15.205 --> 00:08:19.840
The left value of 50 percent will push this over half the width of the body,

00:08:19.840 --> 00:08:22.915
and then 50 percent from the very top.

00:08:22.915 --> 00:08:26.500
But its relative container is really important.

00:08:26.500 --> 00:08:30.640
As we can see here, the centering is still not quite in the middle.

00:08:30.640 --> 00:08:33.040
We can see why better if we open up the "Developer

00:08:33.040 --> 00:08:39.040
Tools," click on the "Inspector" and select our text overlay section.

00:08:39.040 --> 00:08:41.890
We can see better with this text overlay section

00:08:41.890 --> 00:08:46.135
highlighted when we set the position in using the top and the left.

00:08:46.135 --> 00:08:49.495
This will position this element from the top left corner.

00:08:49.495 --> 00:08:52.540
Rather than referencing this from the top left,

00:08:52.540 --> 00:08:55.870
we want this div to be referenced from the very center.

00:08:55.870 --> 00:08:59.890
The way we can do this is to use a CSS transform property,

00:08:59.890 --> 00:09:03.310
which is going to mean we can move this element 50 percent of

00:09:03.310 --> 00:09:07.450
the width over to the left and also up by 50 percent too,

00:09:07.450 --> 00:09:10.360
which effectively means we move in the reference point from the

00:09:10.360 --> 00:09:14.360
top-left into the center of this element.

00:09:14.520 --> 00:09:19.300
To do this, we set the CSS transform and then make use of Translate,

00:09:19.300 --> 00:09:23.560
which is going to allow us to move the position of any HTML elements.

00:09:23.560 --> 00:09:25.660
Then we place inside two values,

00:09:25.660 --> 00:09:27.205
which is the x-axis,

00:09:27.205 --> 00:09:28.480
which is left to right,

00:09:28.480 --> 00:09:29.740
and then the y-axis,

00:09:29.740 --> 00:09:31.435
which is top to bottom.

00:09:31.435 --> 00:09:39.760
If we set the x-axis to be negative 50 percent and also the same for the y-axis.

00:09:39.760 --> 00:09:42.850
This "Refresh. "

00:09:42.850 --> 00:09:46.615
Now this full div has been transformed into the center.

00:09:46.615 --> 00:09:49.150
The only thing we need to do to balance this up is to

00:09:49.150 --> 00:09:52.360
to set the text align to be in the center.

00:09:52.360 --> 00:09:55.640
We can do this and the wrapper,

00:09:57.750 --> 00:10:00.670
now that looks a lot better.

00:10:00.670 --> 00:10:05.680
Just to recap, if you could still ensure when we set the left and the top values,

00:10:05.680 --> 00:10:08.620
you subside these from the outside of the image.

00:10:08.620 --> 00:10:12.490
But rather than using the center of the element of the reference point,

00:10:12.490 --> 00:10:14.770
it uses the top-left corner.

00:10:14.770 --> 00:10:19.225
This means that the element still doesn't quite appear in the center of the image.

00:10:19.225 --> 00:10:22.570
We have to manually move this over by 50 percent on

00:10:22.570 --> 00:10:26.935
both the vertical and also the horizontal directions.

00:10:26.935 --> 00:10:29.965
This is all the positioning all setup.

00:10:29.965 --> 00:10:34.420
What we're now going to do is to set the colors and also the font size.

00:10:34.420 --> 00:10:38.200
The font size of 20 pixels, which is two rems.

00:10:38.200 --> 00:10:42.520
The background of RGBA,

00:10:42.520 --> 00:10:45.850
40 for the red, 40 for the green,

00:10:45.850 --> 00:10:50.320
40 for the blue, and then the fourth value is the Alpha channel.

00:10:50.320 --> 00:10:53.485
This is the opacity of the EC through value.

00:10:53.485 --> 00:10:55.930
If we set this to be 0.7,

00:10:55.930 --> 00:10:59.005
this will be 70 percent transparent.

00:10:59.005 --> 00:11:05.290
"Refresh." This Alpha value means that our background will be slightly transparent.

00:11:05.290 --> 00:11:07.870
The image will start to show through.

00:11:07.870 --> 00:11:09.685
If we set this to be one,

00:11:09.685 --> 00:11:11.695
this would be fully opaque,

00:11:11.695 --> 00:11:14.810
meaning we couldn't see anything coming through.

00:11:15.300 --> 00:11:21.865
The border-radius is going to give us a nice rounded corners of three pixels,

00:11:21.865 --> 00:11:24.955
which you can see on all four sides.

00:11:24.955 --> 00:11:31.450
Then some padding to give you some spacing inside of two rems on the top and bottom,

00:11:31.450 --> 00:11:35.300
and then 10 rems on the left and right.

00:11:35.310 --> 00:11:38.480
Finally, the font color

00:11:39.900 --> 00:11:48.160
I'm going to use 195,191,191.

00:11:48.160 --> 00:11:52.960
The final style and property for this video is going to be this "Apply here button.

00:11:52.960 --> 00:11:57.835
The button element, to make this much the final version,

00:11:57.835 --> 00:11:59.950
we can remove the background color,

00:11:59.950 --> 00:12:04.645
add a border, some rounded corners to also match this overlay section.

00:12:04.645 --> 00:12:08.870
Then finally the hover state of the button,

00:12:08.870 --> 00:12:14.840
remove the background by setting this to be none the border,

00:12:14.840 --> 00:12:17.559
the width of two pixels,

00:12:17.559 --> 00:12:25.000
then the border color of RGB, 169, 252,

00:12:25.000 --> 00:12:29.695
169, then three pixels of border-radius,

00:12:29.695 --> 00:12:36.655
which is going to be a match for this text overlay section and refresh the browser.

00:12:36.655 --> 00:12:38.370
We're nearly done with this.

00:12:38.370 --> 00:12:42.590
We have the border, but we just want to make sure that the text color is also matching

00:12:42.590 --> 00:12:48.550
too and the way we can do this is to also set the color to be just as the above section,

00:12:48.550 --> 00:12:50.215
or we can also inherit this,

00:12:50.215 --> 00:12:52.910
just like we did with the links.

00:12:53.460 --> 00:12:57.700
This will now inherit the color from the parent.

00:12:57.700 --> 00:12:59.980
Finally, the hover state for the button,

00:12:59.980 --> 00:13:02.215
so the mouse is going to change this color,

00:13:02.215 --> 00:13:04.000
and also just like the final version,

00:13:04.000 --> 00:13:08.380
it's going to make it slightly bigger each time the user hovers over.

00:13:08.380 --> 00:13:14.725
The way we can do this is by selecting the button and the hover state.

00:13:14.725 --> 00:13:25.345
We can then modify the border color to be an RGB value of 220, 237, 255.

00:13:25.345 --> 00:13:28.915
Then again, we can make use of the transform property.

00:13:28.915 --> 00:13:30.835
Rather than selecting translate,

00:13:30.835 --> 00:13:32.125
which we use just here,

00:13:32.125 --> 00:13:35.965
another method which we can use is to scale the element.

00:13:35.965 --> 00:13:39.625
This means we can make the elements larger or smaller.

00:13:39.625 --> 00:13:44.110
For example, if we want it to be exactly the same, this would be one.

00:13:44.110 --> 00:13:46.645
I'm seeing no difference just here.

00:13:46.645 --> 00:13:48.670
If we wanted it to be half the size,

00:13:48.670 --> 00:13:50.860
it would be 0.5.

00:13:50.860 --> 00:13:53.635
But I'm going to make this a little bit more subtle.

00:13:53.635 --> 00:13:56.395
I'll set this to be 1.05.

00:13:56.395 --> 00:14:01.610
On the actual button we can also set the cursor to be a pointer.

00:14:02.160 --> 00:14:05.500
Let's check this out. We have a cursor,

00:14:05.500 --> 00:14:07.660
the transform is taking place.

00:14:07.660 --> 00:14:10.405
I'm also changing the border color.

00:14:10.405 --> 00:14:14.185
We now have the header section content all in place

00:14:14.185 --> 00:14:18.100
and also the CSS styling for the small screen view.

00:14:18.100 --> 00:14:23.155
We'll come back to this later on and make some small changes for a larger view.

00:14:23.155 --> 00:14:28.760
But next, we're going to continue down with the project and add some more content.
