1
00:00:00,300 --> 00:00:01,210
Hello my friends.

2
00:00:01,230 --> 00:00:06,010
Welcome to this new practical activity on polynomial regression.

3
00:00:06,030 --> 00:00:12,060
This time we're going to learn how to build together a nonlinear regression model which will allow us

4
00:00:12,060 --> 00:00:19,260
to tackle a problem with a nonlinear dataset meaning a dataset with non-linear relationships on which

5
00:00:19,350 --> 00:00:23,980
therefore a multiple in our regression model would not be relevant.

6
00:00:23,980 --> 00:00:28,960
All right so as usual I just want to make sure here that everyone is on the same page.

7
00:00:29,010 --> 00:00:33,330
So right before this tutorial I gave you the link of this for this.

8
00:00:33,330 --> 00:00:38,120
Make sure to connect to that link and you'll be inside this page just like me.

9
00:00:38,160 --> 00:00:41,410
Ready to start this new Polynomial regression model.

10
00:00:41,790 --> 00:00:45,180
And now we're all gonna go into part two regression.

11
00:00:45,180 --> 00:00:49,180
We're still learning on how to predict a continuous numerical value.

12
00:00:49,230 --> 00:00:52,830
And this time we're gonna go to Section Six polynomial regression.

13
00:00:52,830 --> 00:00:54,040
To learn how to build.

14
00:00:54,090 --> 00:00:57,490
Indeed this nonlinear regression model.

15
00:00:57,510 --> 00:00:57,870
All right.

16
00:00:57,870 --> 00:01:03,930
And as usual we're gonna start with Python inside which you will find two files pulling them all regression

17
00:01:03,930 --> 00:01:09,550
that IP y and B which is of course your Python implementation which you can open either in Google cool

18
00:01:09,550 --> 00:01:15,490
app or Jupiter notebook and the dataset called position salaries.

19
00:01:15,540 --> 00:01:19,000
All right so as usual we're gonna start by describing the dataset.

20
00:01:19,080 --> 00:01:23,610
Once again I'd like to remind that this is a simple data set and that's only you know because we are

21
00:01:23,610 --> 00:01:29,040
starting with our journey of machine learning so right now I want to work on simple data set so that

22
00:01:29,040 --> 00:01:34,860
you can focus on how to build the models themselves without being too overwhelmed by a complex dataset

23
00:01:34,900 --> 00:01:35,880
but no worries.

24
00:01:35,880 --> 00:01:41,150
The further we progressed in this course the more we will work with real world and complex data.

25
00:01:41,160 --> 00:01:47,370
You will see at the end we will work with datasets with many more observations and more complexities.

26
00:01:47,370 --> 00:01:49,190
All right so no worries about this.

27
00:01:49,230 --> 00:01:51,230
We will get there a little by little.

28
00:01:51,300 --> 00:01:54,120
So what is this dataset about.

29
00:01:54,120 --> 00:01:57,010
Well let's imagine the following scenario.

30
00:01:57,010 --> 00:02:03,510
Let us imagine that we are actually an H R department and that we want to hire someone and we actually

31
00:02:03,510 --> 00:02:06,900
found someone that seems to be a great fit for the job.

32
00:02:06,930 --> 00:02:10,930
So we would like to offer this person a position in our company.

33
00:02:11,280 --> 00:02:17,670
And so this person says yes but at the end of the interview process comes the inevitable question What

34
00:02:17,670 --> 00:02:24,000
is your salary expectation and let's say that this person is you know very well advanced in its career

35
00:02:24,150 --> 00:02:32,460
and therefore that person is asking for one hundred and sixty thousand dollars per year and then also

36
00:02:32,460 --> 00:02:39,720
as H.R. negotiators we ask this person why are you expecting such a high salary and this person replies

37
00:02:39,960 --> 00:02:43,610
Well that's because that's what I earned in my previous company.

38
00:02:43,650 --> 00:02:49,480
That was my salary in my previous company I earned one hundred and sixty thousand dollars per year so

39
00:02:49,480 --> 00:02:55,830
I am expecting at least one hundred and sixty thousand dollars per year in your company.

40
00:02:55,830 --> 00:02:58,260
Is that the truth or is that a bluff.

41
00:02:58,260 --> 00:03:03,770
Well that's exactly what we're gonna figure out thanks to our polynomial regression model.

42
00:03:03,780 --> 00:03:11,170
We're going to build a polynomial regression model to predict the previous salary of this candidate.

43
00:03:11,280 --> 00:03:13,170
So how are we going to do this.

44
00:03:13,170 --> 00:03:19,020
Well of course in order to make such a prediction we need data and that's exactly the data we collected

45
00:03:19,020 --> 00:03:19,700
here.

46
00:03:19,710 --> 00:03:22,040
So what is this data and how did we collect it.

47
00:03:22,080 --> 00:03:28,350
This data is actually the different salaries of the previous company for the different positions from

48
00:03:28,440 --> 00:03:32,430
business analyst to CEO and now how did we collect such data.

49
00:03:32,460 --> 00:03:37,950
Well you know there are many websites online which actually display different salaries of different

50
00:03:37,950 --> 00:03:40,050
positions in companies.

51
00:03:40,050 --> 00:03:42,390
I can give you an example like Glassdoor.

52
00:03:42,630 --> 00:03:48,300
Well let's say that we did this and that's how we collected all this data containing all the salaries

53
00:03:48,300 --> 00:03:53,250
for the different positions of this previous company for which this person worked.

54
00:03:53,400 --> 00:03:59,610
OK so we have this data and now we need to know obviously which position this person had within this

55
00:03:59,610 --> 00:04:01,040
previous company.

56
00:04:01,050 --> 00:04:02,450
Well that's easy.

57
00:04:02,460 --> 00:04:08,820
Let's say we went to LinkedIn and we checked out the profile of this person and we actually saw that

58
00:04:08,820 --> 00:04:12,490
this person was actually a region manager.

59
00:04:12,510 --> 00:04:13,340
OK.

60
00:04:13,350 --> 00:04:18,930
However on the LinkedIn we also see something else it turns out that this person actually has been a

61
00:04:18,930 --> 00:04:21,110
region manager for quite a while.

62
00:04:21,120 --> 00:04:23,100
Like let's say two years.

63
00:04:23,130 --> 00:04:27,930
And therefore you know the salary of this person should not exactly be one hundred and fifty thousand

64
00:04:27,930 --> 00:04:33,570
dollars as we can see on this dataset but instead it should be somewhere between one hundred and fifty

65
00:04:33,570 --> 00:04:38,970
thousand dollars the salary of Position Number Six and two hundred thousand dollars to salary of position

66
00:04:39,240 --> 00:04:40,360
number seven.

67
00:04:40,380 --> 00:04:46,410
So in order to extrapolate we're going to suppose that this person has a position in between six and

68
00:04:46,410 --> 00:04:49,890
seven and we'll consider this position to be six point five.

69
00:04:49,950 --> 00:04:56,640
So that then we can actually deploy our moral you know after training it of course on the position level

70
00:04:56,790 --> 00:05:02,720
six point five so that we can get the predicted salary of such a position level and we will compare

71
00:05:02,900 --> 00:05:09,700
this predicted salary to the salary expected by this person to see if indeed there is truth or bluff.

72
00:05:09,710 --> 00:05:09,960
All right.

73
00:05:09,950 --> 00:05:11,200
So that's the strategy.

74
00:05:11,420 --> 00:05:13,970
It's basically going to be in four steps first step.

75
00:05:13,970 --> 00:05:15,230
Data processing.

76
00:05:15,230 --> 00:05:15,980
Second Step.

77
00:05:15,980 --> 00:05:18,550
We will build the polynomial regression model.

78
00:05:18,560 --> 00:05:19,280
Third step.

79
00:05:19,280 --> 00:05:24,310
We will train it to understand the correlations between the position levels and the salaries.

80
00:05:24,440 --> 00:05:27,100
And fourth step we will make that prediction.

81
00:05:27,290 --> 00:05:33,330
Now time to brainstorm together on what are going to be the first steps you know within that data repricing

82
00:05:33,350 --> 00:05:34,180
phase.

83
00:05:34,190 --> 00:05:36,710
Well of course we'll start by importing the libraries.

84
00:05:36,710 --> 00:05:42,560
Then we will import this data set but then do you think we actually need to split this data set into

85
00:05:42,560 --> 00:05:45,090
the training set and the test will here.

86
00:05:45,110 --> 00:05:51,110
Exceptionally because we have very few observations we actually won't split the data set into a training

87
00:05:51,110 --> 00:05:57,110
set and a test set because what we want to get directly is actually that prediction of the position

88
00:05:57,110 --> 00:05:58,840
level between 6 and 7.

89
00:05:58,850 --> 00:06:00,440
We will say six point five.

90
00:06:00,860 --> 00:06:03,880
So we actually need to get the maximum data we can.

91
00:06:04,070 --> 00:06:09,320
And that's why we're going to take everything to train our polynomial regression model so exceptionally.

92
00:06:09,320 --> 00:06:15,560
We want to apply that third subset of the data repricing phase and then obviously we won't have to use

93
00:06:15,590 --> 00:06:21,020
any other tools of the data pricing toolkit like taking care of missing data or anchoring categorical

94
00:06:21,020 --> 00:06:26,960
data simply because here we will just train our polynomial regression model on these two columns level

95
00:06:27,020 --> 00:06:31,870
and salary because indeed this column is just redundant with this one right.

96
00:06:31,880 --> 00:06:37,790
It's as if the encoding was done simply on a spreadsheet so we will actually not include this column.

97
00:06:37,820 --> 00:06:43,610
We will train our polynomial regression model with this column as the column of features the matrix

98
00:06:43,610 --> 00:06:49,010
of features even if there is only one feature and this column as a dependent variable vector all right

99
00:06:49,490 --> 00:06:50,380
Are you ready.

100
00:06:50,380 --> 00:06:51,260
Let us do this.

101
00:06:51,370 --> 00:06:53,830
Let us build our polling on your regression model.

102
00:06:53,990 --> 00:06:58,320
So we're going to open our IP way and be Fowler python file.

103
00:06:58,430 --> 00:07:02,870
You have the choice to open it with either Google collaboratively or and notebook.

104
00:07:03,020 --> 00:07:11,030
And for Google collaborators lovers let's open this right now and let us see what we have in our notebook

105
00:07:11,750 --> 00:07:13,060
laying out notebook.

106
00:07:13,100 --> 00:07:13,670
And there we go.

107
00:07:14,000 --> 00:07:19,970
So I remind that this notebook is an read only mode and since we as usual want to re implement this

108
00:07:19,970 --> 00:07:26,180
from scratch we're gonna go to file here to create a copy by saving a copy in drive.

109
00:07:26,180 --> 00:07:32,520
And as you see it is creating a copy in which we will be able to re implement the whole model from scratch.

110
00:07:32,540 --> 00:07:33,920
And there we go.

111
00:07:33,950 --> 00:07:34,430
All right.

112
00:07:34,430 --> 00:07:40,600
So now as usual we're going to delete all the code cells so that we can re implement this from scratch.

113
00:07:40,610 --> 00:07:47,750
Make sure to only delete the code cells and not the text cells so we can see the structure you starting

114
00:07:47,750 --> 00:07:49,640
to know the story now.

115
00:07:49,700 --> 00:07:53,070
And lastly this one.

116
00:07:53,120 --> 00:07:54,360
Perfect.

117
00:07:54,410 --> 00:07:54,730
All right.

118
00:07:54,760 --> 00:07:57,860
So this is the whole structure of this implementation.

119
00:07:57,860 --> 00:07:58,670
Let's have a look.

120
00:07:58,670 --> 00:08:01,330
I already brainstorm with you on what would be the first steps.

121
00:08:01,340 --> 00:08:04,720
But I really want you to clearly see the whole structure.

122
00:08:04,740 --> 00:08:09,860
Okay so we're gonna start by empowering the libraries then empowering the data set.

123
00:08:09,870 --> 00:08:14,270
Then as I told you we're gonna skip the step where we split the data set into the training set in the

124
00:08:14,270 --> 00:08:19,610
test set simply because we want to leverage the maximum data in order to make our future prediction

125
00:08:19,760 --> 00:08:23,810
of the salary for the position level between 6 and 7.

126
00:08:23,870 --> 00:08:30,050
So we skip this step and then we move on directly to first actually the training of the linear regression

127
00:08:30,050 --> 00:08:35,690
model on the whole dataset and that's for the simple reason that we want to compare the two models linear

128
00:08:35,690 --> 00:08:41,150
regression and polynomial regression because I want to show you that indeed a polynomial regression

129
00:08:41,150 --> 00:08:47,360
model will be much more adapted to this dataset and you know the reason that's because the dataset has

130
00:08:47,660 --> 00:08:49,280
nonlinear relationships.

131
00:08:49,280 --> 00:08:55,250
So in the end we will actually as you can see predict the salary of the position level between six and

132
00:08:55,250 --> 00:09:00,200
five with linear regression and polynomial regression and you will see that we will get a much better

133
00:09:00,200 --> 00:09:02,450
result with polynomial regression.

134
00:09:02,450 --> 00:09:02,840
Okay.

135
00:09:03,170 --> 00:09:07,970
So after training the linear regression model on the whole dataset we will train the polynomial regression

136
00:09:07,970 --> 00:09:13,490
model on the whole dataset as well then we will visualize the linear regression results on the whole

137
00:09:13,490 --> 00:09:16,430
dataset again and then pulling them a regression result.

138
00:09:16,430 --> 00:09:21,890
And once again you will see that indeed the polynomial regression model is much more adapted to this

139
00:09:21,950 --> 00:09:25,390
nonlinear dataset than the linear regression model.

140
00:09:25,400 --> 00:09:30,620
And finally we will make our last two predictions predicting a new result with linear regression and

141
00:09:30,620 --> 00:09:36,380
predicting a new result with polynomial regression and at the same time you will learn how to make a

142
00:09:36,380 --> 00:09:37,600
single prediction.

143
00:09:37,600 --> 00:09:43,520
You know because what we've done so far you know when making predictions W to input the whole test set

144
00:09:43,520 --> 00:09:48,740
features you know we input x dest in our predict method and that returns indeed some predictions of

145
00:09:48,740 --> 00:09:55,160
the test set but you actually still don't know exactly how to predict the result of a single observation.

146
00:09:55,220 --> 00:09:58,880
And that's exactly in this practical activity that you will learn it.

147
00:09:58,880 --> 00:09:59,140
Okay.

148
00:09:59,150 --> 00:10:03,900
So that will a good new skill to know and I will of course ask you to try to do it on your own.

149
00:10:03,900 --> 00:10:05,260
Before we do it together.

150
00:10:05,410 --> 00:10:06,150
And so there you go.

151
00:10:06,160 --> 00:10:07,500
That's the whole structure.

152
00:10:07,540 --> 00:10:09,310
And now we're ready to start.

153
00:10:09,310 --> 00:10:16,120
And we're going to tackle this semi data processing phase and flashlight starting by importing the libraries.

154
00:10:16,120 --> 00:10:22,690
And thanks to our data processing templates I'm copying this here pasting that right here in the new

155
00:10:23,040 --> 00:10:24,310
code cell.

156
00:10:24,340 --> 00:10:29,560
Then we're going to import the data set using still our data depressing template because indeed we will

157
00:10:29,560 --> 00:10:34,700
have only one thing to change which is of course the name of our data set.

158
00:10:34,730 --> 00:10:39,900
No actually my mistake we will have two things to change and I will explain why right away.

159
00:10:39,910 --> 00:10:44,110
So first let's change that abuse thing which is the name of the dataset.

160
00:10:44,110 --> 00:10:49,660
So let's see the name of the dataset again position salaries.

161
00:10:49,660 --> 00:10:50,010
All right.

162
00:10:50,020 --> 00:10:51,420
So let's do this.

163
00:10:51,460 --> 00:10:56,980
I'm going to replace data here by position salaries.

164
00:10:57,160 --> 00:10:57,850
Great.

165
00:10:57,910 --> 00:11:02,740
And now the second thing I wanted to change is of course the matrix of features X because remember that

166
00:11:02,740 --> 00:11:06,720
this automatically takes all the cons except the last one.

167
00:11:06,730 --> 00:11:10,530
But actually here you know these two columns are redundant.

168
00:11:10,540 --> 00:11:17,440
It's like we already did the label including you know to encode each of these positions into numerical

169
00:11:17,620 --> 00:11:19,530
integers going from one to 10.

170
00:11:19,540 --> 00:11:24,970
But I wanted to leave that column because it's pretty nice to see the names of the different positions

171
00:11:25,000 --> 00:11:27,250
you know from business analyst to CEO.

172
00:11:27,760 --> 00:11:32,680
So we actually don't want to include this column and therefore we will start to get the column from

173
00:11:32,800 --> 00:11:37,440
the second index which is index 1 right because index isn't both and start from zero.

174
00:11:37,440 --> 00:11:38,410
So there you go.

175
00:11:38,410 --> 00:11:44,800
We're only going to take that column and to do so well we're going to replace that empty lower bound

176
00:11:44,800 --> 00:11:51,700
which means the first index by index 1 so that it will indeed take all the columns from the second one

177
00:11:51,700 --> 00:11:57,520
you know the next one up to the last one except the last one and therefore it will take all the columns

178
00:11:57,730 --> 00:12:00,370
from this one except this one and therefore just this one.

179
00:12:00,420 --> 00:12:02,140
See just a simple trick.

180
00:12:02,140 --> 00:12:02,440
All right.

181
00:12:02,440 --> 00:12:04,150
So now we're all good.

182
00:12:04,150 --> 00:12:08,610
This will still take the last column the dependent viral vector containing all the salaries.

183
00:12:08,710 --> 00:12:14,800
So we are all good and we can move on now to the next step which will be to train the linear regression

184
00:12:14,800 --> 00:12:17,220
model on the whole dataset.

185
00:12:17,260 --> 00:12:17,680
Great.

186
00:12:17,680 --> 00:12:19,780
So would you like to execute this now.

187
00:12:19,780 --> 00:12:22,470
Yes maybe let's do it now so that it's done.

188
00:12:22,470 --> 00:12:29,140
So let's click this folder here to be able to upload the file right now it is connecting to a runtime

189
00:12:29,500 --> 00:12:32,180
to enable file browsing and in a second yes.

190
00:12:32,200 --> 00:12:35,010
There we go we should be able to upload the dataset.

191
00:12:35,020 --> 00:12:37,690
All right so we're gonna go to our missionary.

192
00:12:37,700 --> 00:12:39,990
It is it folder I always put it on my desktop.

193
00:12:40,090 --> 00:12:45,040
Then part two regression then Section Six polynomial regression then python.

194
00:12:45,130 --> 00:12:45,870
And there you go.

195
00:12:46,030 --> 00:12:52,350
Let's get an upload our position salaries data set that's all good.

196
00:12:52,360 --> 00:12:57,640
Now we have it and now we can run these first two sales first important the libraries.

197
00:12:57,740 --> 00:12:58,230
Okay.

198
00:12:58,240 --> 00:13:03,090
Done and now importing the data sets and done as well.

199
00:13:03,300 --> 00:13:05,090
And now we can move on to the next step.

200
00:13:05,130 --> 00:13:10,380
Training the linear regression model on the whole dataset to try to do it on your own because you now

201
00:13:10,380 --> 00:13:13,050
know how to implement the linear regression model.

202
00:13:13,080 --> 00:13:15,020
So I trust you will smash this.

203
00:13:15,030 --> 00:13:18,740
There is no trap and this will be a good way to practice again.

204
00:13:18,810 --> 00:13:24,150
So as soon as you're ready well let's move on together to the next tutorial to build that first linear

205
00:13:24,150 --> 00:13:27,620
regression all together and then the polynomial regression model.

206
00:13:27,640 --> 00:13:29,390
And until then enjoy machine learning.
