WEBVTT
1
1

00:00:00.053  -->  00:00:02.521
(bright music)
(whooshing)
2

2

00:00:02.521  -->  00:00:05.280
(clickety clack clack click)
3

3

00:00:05.280  -->  00:00:08.270
<v ->Alright, so for our third and final challenge</v>
4

4

00:00:08.270  -->  00:00:11.470
for this section, I want you to use radix sort
5

5

00:00:11.470  -->  00:00:15.270
to sort the strings you see on the slide.
6

6

00:00:15.270  -->  00:00:20.270
So, the strings BCDEF, DBAQC, ABCDE, OMADD, and BBBBB.
7

7

00:00:25.260  -->  00:00:29.430
Now, I've deliberately put all the values into lower case
8

8

00:00:29.430  -->  00:00:31.470
so don't worry about upper casing
9

9

00:00:31.470  -->  00:00:33.200
and lower casing the values, of course,
10

10

00:00:33.200  -->  00:00:36.390
normally if you're sorting strings, you'd wanna upper case
11

11

00:00:36.390  -->  00:00:38.730
all the strings or lower case all of them.
12

12

00:00:38.730  -->  00:00:42.040
If you were doing a case insensitive sort
13

13

00:00:42.040  -->  00:00:45.935
but I want us to just focus on the implementation
14

14

00:00:45.935  -->  00:00:49.950
of the radix sort here so I've put all the strings
15

15

00:00:49.950  -->  00:00:52.660
in lower case so you don't have to worry about doing that.
16

16

00:00:52.660  -->  00:00:55.260
You can start with the project in the resources section.
17

17

00:00:55.260  -->  00:00:57.290
This time the only thing that's in there
18

18

00:00:57.290  -->  00:00:59.010
is the array I want you to sort
19

19

00:00:59.010  -->  00:01:00.900
and the code for printing the array.
20

20

00:01:00.900  -->  00:01:03.220
I'll let you figure out what you have to copy over
21

21

00:01:03.220  -->  00:01:04.680
from the radix sort.
22

22

00:01:04.680  -->  00:01:07.650
So, sort those strings using the radix sort.
23

23

00:01:07.650  -->  00:01:10.563
Good luck and I'll see you in the solution video.
