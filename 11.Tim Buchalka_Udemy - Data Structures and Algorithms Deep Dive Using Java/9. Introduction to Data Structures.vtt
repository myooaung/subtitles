WEBVTT
1
1

00:00:00.217  -->  00:00:02.636
(upbeat music)
2

2

00:00:02.636  -->  00:00:05.700
(keyboard clicks)
3

3

00:00:05.700  -->  00:00:08.710
<v Sarah>Alright, so what is a data structure?</v>
4

4

00:00:08.710  -->  00:00:12.060
Well, a data structure organises and stores data.
5

5

00:00:12.060  -->  00:00:14.850
For example, an array is a data structure.
6

6

00:00:14.850  -->  00:00:16.380
The lowly array.
7

7

00:00:16.380  -->  00:00:18.100
And we're gonna take a look at arrays
8

8

00:00:18.100  -->  00:00:20.700
as a data structure very soon.
9

9

00:00:20.700  -->  00:00:22.810
Now there are many different data structures,
10

10

00:00:22.810  -->  00:00:24.670
and they differ from each other in the way
11

11

00:00:24.670  -->  00:00:26.800
that they organise and store the data.
12

12

00:00:26.800  -->  00:00:29.200
Arrays order the data sequentially,
13

13

00:00:29.200  -->  00:00:32.340
and they place each value in its own slot.
14

14

00:00:32.340  -->  00:00:35.020
We can get to a slot using an index.
15

15

00:00:35.020  -->  00:00:36.530
That's different from a tree,
16

16

00:00:36.530  -->  00:00:39.090
which is a hierarchical data structure
17

17

00:00:39.090  -->  00:00:41.520
or some would say, abstract data type,
18

18

00:00:41.520  -->  00:00:44.150
it's a little bit of a grey area when it comes to trees.
19

19

00:00:44.150  -->  00:00:46.970
Trees have the notion of parents and children.
20

20

00:00:46.970  -->  00:00:50.040
Now, each data structure has strengths and weaknesses.
21

21

00:00:50.040  -->  00:00:52.470
They all do some things well and other things
22

22

00:00:52.470  -->  00:00:54.100
not so well because if there was
23

23

00:00:54.100  -->  00:00:56.090
a super data structure out there
24

24

00:00:56.090  -->  00:00:58.770
that did everything fantastically well,
25

25

00:00:58.770  -->  00:01:00.590
then we'd only need the one data structure
26

26

00:01:00.590  -->  00:01:02.290
and everybody would be using it.
27

27

00:01:02.290  -->  00:01:05.240
There's a reason that there are a lot of data structures.
28

28

00:01:05.240  -->  00:01:08.510
For example, arrays are great for random access
29

29

00:01:08.510  -->  00:01:11.470
when you know the index of the item you wanna access.
30

30

00:01:11.470  -->  00:01:13.670
They're not so great when you don't know the index,
31

31

00:01:13.670  -->  00:01:15.260
'cause then you have to search the dataset
32

32

00:01:15.260  -->  00:01:16.740
to find what you're looking for.
33

33

00:01:16.740  -->  00:01:20.320
Now here's a quote from Linus Torvalds, it says;
34

34

00:01:20.320  -->  00:01:23.980
The fact is, there aren't just two sides to any issue,
35

35

00:01:23.980  -->  00:01:26.480
there's almost always a range of responses,
36

36

00:01:26.480  -->  00:01:29.540
and it depends is almost always the right answer
37

37

00:01:29.540  -->  00:01:31.060
in any big question.
38

38

00:01:31.060  -->  00:01:33.170
And if you don't know, Linus Torvalds
39

39

00:01:33.170  -->  00:01:35.680
is the guy who invented Linux,
40

40

00:01:35.680  -->  00:01:37.410
quite a well-known software engineer.
41

41

00:01:37.410  -->  00:01:39.450
So why am I showing you this quote?
42

42

00:01:39.450  -->  00:01:41.280
Well, because the answer to
43

43

00:01:41.280  -->  00:01:43.550
what's the best data structure to use?
44

44

00:01:43.550  -->  00:01:45.940
Is, it depends.
45

45

00:01:45.940  -->  00:01:47.800
The best data structure will depend on
46

46

00:01:47.800  -->  00:01:49.200
the data you wanna store,
47

47

00:01:49.200  -->  00:01:52.050
how your application will need to access the data,
48

48

00:01:52.050  -->  00:01:54.600
the operations your application will perform,
49

49

00:01:54.600  -->  00:01:56.300
the most on the data,
50

50

00:01:56.300  -->  00:01:59.210
and so there isn't one size fits all answer.
51

51

00:01:59.210  -->  00:02:01.220
As a developer you'll have to decide
52

52

00:02:01.220  -->  00:02:03.110
which data structure to use based
53

53

00:02:03.110  -->  00:02:05.420
on your application's specific needs,
54

54

00:02:05.420  -->  00:02:06.930
and that's why you're in this course,
55

55

00:02:06.930  -->  00:02:09.040
I mean that's why it's important to learn about
56

56

00:02:09.040  -->  00:02:12.400
and understand the different types of data structures,
57

57

00:02:12.400  -->  00:02:14.240
what each one does well,
58

58

00:02:14.240  -->  00:02:16.520
and what each one doesn't do so well.
59

59

00:02:16.520  -->  00:02:18.290
Armed with that knowledge, you'll be able
60

60

00:02:18.290  -->  00:02:19.900
to choose the best data structure
61

61

00:02:19.900  -->  00:02:21.680
for your specific scenario,
62

62

00:02:21.680  -->  00:02:23.960
because it's going to depend on what
63

63

00:02:23.960  -->  00:02:26.380
you wanna do with the data and how often,
64

64

00:02:26.380  -->  00:02:28.970
and so once again, congratulations on enrolling
65

65

00:02:28.970  -->  00:02:30.200
in this course.
66

66

00:02:30.200  -->  00:02:32.390
You'll be able to choose the best data structure
67

67

00:02:32.390  -->  00:02:34.910
for your specific job and the code you write
68

68

00:02:34.910  -->  00:02:36.740
will perform better because of that.
69

69

00:02:36.740  -->  00:02:38.680
And so that's what a data structure is,
70

70

00:02:38.680  -->  00:02:40.430
nothing terribly complicated,
71

71

00:02:40.430  -->  00:02:43.280
a data structure organises and stores data.
72

72

00:02:43.280  -->  00:02:45.630
And so let's move on and talk about
73

73

00:02:45.630  -->  00:02:49.210
the other topic we'll be covering in this course,
74

74

00:02:49.210  -->  00:02:50.830
and that's algorithms.
75

75

00:02:50.830  -->  00:02:52.130
See you in the next video.
