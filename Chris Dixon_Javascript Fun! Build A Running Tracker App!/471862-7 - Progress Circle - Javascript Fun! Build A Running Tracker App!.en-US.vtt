WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.980 --> 00:00:05.475
Welcome back and to this final video of this project.

00:00:05.475 --> 00:00:09.030
This video is all about concentrating on our progressCircle,

00:00:09.030 --> 00:00:10.245
which we're going to create,

00:00:10.245 --> 00:00:13.455
just like in the final version, just here.

00:00:13.455 --> 00:00:19.485
Each time the user enters a value into the number field, such as this,

00:00:19.485 --> 00:00:22.470
the weekly target will then be updated and this will be

00:00:22.470 --> 00:00:26.940
converted into a percentage so we can update the progressCircle.

00:00:26.940 --> 00:00:30.495
Now, I am aware there's many different ways we can do this.

00:00:30.495 --> 00:00:32.895
We can use things such as the Canvas,

00:00:32.895 --> 00:00:36.465
and there's lots more complex options which we can use.

00:00:36.465 --> 00:00:41.065
However, I've tried to keep this as simple as possible for this project.

00:00:41.065 --> 00:00:44.330
The way we're going to do this is by making use of

00:00:44.330 --> 00:00:48.220
a CSS function called the conic-gradient.

00:00:48.220 --> 00:00:51.590
The way this works is to create a gradient of

00:00:51.590 --> 00:00:55.280
color which is transitioned around the center point.

00:00:55.280 --> 00:00:57.965
Here we can see we have the first section,

00:00:57.965 --> 00:01:01.760
which is red, and this is from 0-6 degrees,

00:01:01.760 --> 00:01:06.455
the orange section then carries on from 6-18 degrees,

00:01:06.455 --> 00:01:12.185
then we have the yellow section up to 45 degrees and this thing continues round.

00:01:12.185 --> 00:01:14.735
If we scroll down, we can see the difference between

00:01:14.735 --> 00:01:18.320
the conic-gradient and the radial-gradient.

00:01:18.320 --> 00:01:22.280
The conic type is more suited to our needs since we're going to

00:01:22.280 --> 00:01:26.230
make use of this rotation to create our progressElement.

00:01:26.230 --> 00:01:28.340
The radial-gradient, on the other hand,

00:01:28.340 --> 00:01:31.535
provides the transition outward from the center,

00:01:31.535 --> 00:01:35.785
creating these rings which are not really much use for our circle.

00:01:35.785 --> 00:01:39.720
Let's start over in the index.html.

00:01:39.720 --> 00:01:45.550
Early on we added a wrapper for this section and then created a to-do section.

00:01:45.550 --> 00:01:49.290
Inside here I'm going to create two new divs.

00:01:49.290 --> 00:01:52.625
This first one is going to be the actual div for our circle.

00:01:52.625 --> 00:01:56.160
So I'm going to give this an ID of progressCircle.

00:01:57.590 --> 00:02:01.815
Then next inside I going to add a second div.

00:02:01.815 --> 00:02:05.620
This will have the ID of progressCenter.

00:02:07.010 --> 00:02:11.425
The reason for this section will become more clear very soon.

00:02:11.425 --> 00:02:17.795
First of all, we're going to target all this section which is down at the bottom,

00:02:17.795 --> 00:02:19.790
starting with our text.

00:02:19.790 --> 00:02:22.790
This is contained inside of the progress section.

00:02:22.790 --> 00:02:26.480
Let's save this and go to our styles.css.

00:02:26.480 --> 00:02:28.730
Right at the very bottom,

00:02:28.730 --> 00:02:32.165
we can begin by targeting the progress section.

00:02:32.165 --> 00:02:40.640
We can align the text into the center and also add some padding onto the very bottom.

00:02:41.930 --> 00:02:46.750
Next the text is contained in the level 3 heading.

00:02:47.210 --> 00:02:53.250
Let's target the progress h3,

00:02:53.250 --> 00:02:56.505
font size of 1.6 rems,

00:02:56.505 --> 00:02:58.740
and also this font weight,

00:02:58.740 --> 00:03:01.180
we're going to set this to be lighter.

00:03:02.720 --> 00:03:06.640
Next we can begin to work on our progressCircle.

00:03:06.640 --> 00:03:10.115
So we have the outer wrapper, which is progressCircleWrapper.

00:03:10.115 --> 00:03:13.175
We're going to grab this, set the flexbox,

00:03:13.175 --> 00:03:16.790
and then justify the content to be in the center.

00:03:16.790 --> 00:03:19.830
Back to our style sheet.

00:03:20.320 --> 00:03:25.680
Add this in. They can use all of the flexbox,

00:03:25.680 --> 00:03:29.930
so we can then justify our content into the center.

00:03:29.930 --> 00:03:35.935
This is going to place the circle once we create it into the middle of our section.

00:03:35.935 --> 00:03:39.440
Next up we have the progressCircle itself,

00:03:39.440 --> 00:03:42.305
which is going to have the conic-gradient.

00:03:42.305 --> 00:03:45.155
Back to our style sheet.

00:03:45.155 --> 00:03:53.600
This was an ID. To make this equal we can set the width.

00:03:53.600 --> 00:03:58.690
I want to go for 250 pixels and also a matching height.

00:03:58.690 --> 00:04:04.969
The example we'd seen before on the Mozilla website used a square section,

00:04:04.969 --> 00:04:06.845
just like we see here.

00:04:06.845 --> 00:04:12.330
But instead I'm going to turn this into a circle by adding a border-radius.

00:04:13.520 --> 00:04:17.025
A value of 50 percent will make this circular.

00:04:17.025 --> 00:04:22.470
Now we can make use of our conic-gradient by setting this as a background property.

00:04:23.320 --> 00:04:27.530
We did see lots of different values entered on the example before.

00:04:27.530 --> 00:04:30.380
But all we need is two different values.

00:04:30.380 --> 00:04:32.210
We just need the green values,

00:04:32.210 --> 00:04:34.670
which is the total number of miles the user has

00:04:34.670 --> 00:04:38.920
run and then the gray section for the rest of the circle.

00:04:38.920 --> 00:04:41.630
These are just going to be placeholder values for now,

00:04:41.630 --> 00:04:47.500
and we'll update these with JavaScript very soon. The green color is 70db70.

00:04:49.340 --> 00:04:52.200
Add any first value of 50 percent,

00:04:52.200 --> 00:04:56.460
means that this will run from zero right through to 50 percent.

00:04:56.460 --> 00:05:01.820
The second value is going to be a hex value of 2d3740.

00:05:03.420 --> 00:05:07.445
For the second value, if we set this to be 50 percent,

00:05:07.445 --> 00:05:11.109
if we don't add a second value such as 70,

00:05:11.109 --> 00:05:14.640
this will run right through to 100 percent.

00:05:14.640 --> 00:05:17.585
Now let's save this and go over to our project.

00:05:17.585 --> 00:05:24.020
Reload. This now places our conic-gradient into the full size of our circle.

00:05:24.020 --> 00:05:26.270
But if we take a look at the final version,

00:05:26.270 --> 00:05:28.430
we have the center circle just here,

00:05:28.430 --> 00:05:30.665
given as the appearance of a ring.

00:05:30.665 --> 00:05:33.860
This is the section which you've added into the middle of

00:05:33.860 --> 00:05:37.770
progressCenter. Let's grab this.

00:05:37.770 --> 00:05:40.610
All we're going to do is effectively use this as

00:05:40.610 --> 00:05:44.650
a mask covering up the center of the circle.

00:05:44.650 --> 00:05:47.570
This is going to be similar to just above,

00:05:47.570 --> 00:05:53.460
but we're going to make it a little smaller by setting the width to be 220.

00:05:53.840 --> 00:05:58.940
The same for the height. This will also need a border radius,

00:05:58.940 --> 00:06:00.815
so it's a circle.

00:06:00.815 --> 00:06:04.190
To also give this a appearance of a ring we need to make

00:06:04.190 --> 00:06:08.160
the background color the same as the rest of the app.

00:06:08.680 --> 00:06:14.070
The current value was 1c262f.

00:06:14.070 --> 00:06:17.055
Onto our project and let's see how this looks.

00:06:17.055 --> 00:06:19.970
We have the center of the circle now in place,

00:06:19.970 --> 00:06:22.790
but we just need to make sure this is centered.

00:06:22.790 --> 00:06:27.210
We can do this inside of our progressCircleWrapper.

00:06:27.320 --> 00:06:31.145
Let's set this with the display type of flex.

00:06:31.145 --> 00:06:33.590
Remember this is for the wrapper.

00:06:33.590 --> 00:06:36.890
We can then justify the content across the page into

00:06:36.890 --> 00:06:42.750
the center and also set the vertical alignment using align-items.

00:06:43.880 --> 00:06:47.580
Good. This now looks exactly how we want it to.

00:06:47.580 --> 00:06:50.225
Now let's go on to our script.js

00:06:50.225 --> 00:06:54.005
and we can create a function which is going to update this.

00:06:54.005 --> 00:06:57.035
Let's call this calcGoal.

00:06:57.035 --> 00:07:03.125
The first thing we need to do inside this function is to access our total value.

00:07:03.125 --> 00:07:05.315
This is the value just here.

00:07:05.315 --> 00:07:09.370
Once we have this, we can then divide this by our goal.

00:07:09.370 --> 00:07:12.320
The way we can grab this, just like above,

00:07:12.320 --> 00:07:16.465
we will grab the total value. Let's copy this.

00:07:16.465 --> 00:07:20.510
Paste this in, and this makes use of our reducer function to

00:07:20.510 --> 00:07:24.725
grab all of the items inside of our array and add them all together.

00:07:24.725 --> 00:07:31.090
The next step we need to take is to calculate a percentage between zero and 100.

00:07:31.090 --> 00:07:36.940
We're then going to use these values inside of our CSS to update our two colors.

00:07:36.940 --> 00:07:40.490
To convert this into a percentage,

00:07:40.490 --> 00:07:45.665
let's first grab the total value and then to get this as a percentage,

00:07:45.665 --> 00:07:50.890
we need to divide this by our goal divided by 100.

00:07:50.890 --> 00:07:54.530
We can then store this inside of a constant.

00:07:54.530 --> 00:07:57.840
Let's call this completedPercent.

00:07:59.000 --> 00:08:05.370
We can also do a console.log before we go any further and check this is all working fine.

00:08:05.570 --> 00:08:08.385
Lets add this into our log.

00:08:08.385 --> 00:08:15.615
We can also call this function from handle submit. Let's save this.

00:08:15.615 --> 00:08:21.345
Open up the developer tools with right-click and inspect into the console.

00:08:21.345 --> 00:08:23.025
Let's add a value of 10.

00:08:23.025 --> 00:08:27.220
This divided by our goal is going to give us a value of 40 percent.

00:08:27.220 --> 00:08:32.630
If we do 2.5, 10 plus 2.5 is equal to half of our goal,

00:08:32.630 --> 00:08:34.820
resulting in 50 percent.

00:08:34.820 --> 00:08:40.630
Now I have this value, we can now use this to update the styling of our progressCircle.

00:08:40.630 --> 00:08:44.275
Let's grab this by the ID of in the script.

00:08:44.275 --> 00:08:53.265
Back to calcGoal. We can remove the console.log and then call document.querySelector.

00:08:53.265 --> 00:08:55.740
The selector was an ID,

00:08:55.740 --> 00:08:59.650
so we pass the hash value in of progressCircle.

00:08:59.720 --> 00:09:04.090
Obvious inside of a constant call progressCircle.

00:09:06.500 --> 00:09:11.335
Now rather than having the conic-radiant hard-coded into here,

00:09:11.335 --> 00:09:16.235
we can now comment this out and then add this inside of JavaScript.

00:09:16.235 --> 00:09:20.575
The way to do this is to access our progressCircle elements.

00:09:20.575 --> 00:09:25.730
We can set any style property such as our background.

00:09:27.720 --> 00:09:32.415
We can once again set this equal to our conic-gradient.

00:09:32.415 --> 00:09:34.155
Let's copy the section,

00:09:34.155 --> 00:09:36.755
just like it is inside the styling,

00:09:36.755 --> 00:09:40.310
paste this in as a string inside of the quotations.

00:09:40.310 --> 00:09:42.590
These are still just hard-coded values.

00:09:42.590 --> 00:09:45.600
Let's try this out. Any values which we add

00:09:45.600 --> 00:09:49.310
inside of here will still result in a 50-50 split.

00:09:49.310 --> 00:09:54.265
Meaning our next step is to now make these two values more dynamic.

00:09:54.265 --> 00:09:55.955
The way we can do this,

00:09:55.955 --> 00:09:58.225
if we remove the quotations,

00:09:58.225 --> 00:10:01.410
can replace these with the backticks.

00:10:01.410 --> 00:10:05.165
These backticks are going to allow us to create a template string,

00:10:05.165 --> 00:10:09.815
which is a way of inserting variables into our regular text.

00:10:09.815 --> 00:10:12.755
We can remove our 50 percent.

00:10:12.755 --> 00:10:18.515
The way we insert a variable is to use the dollar symbol and then the curly braces.

00:10:18.515 --> 00:10:22.070
The first value is going to be the equivalent of our variable

00:10:22.070 --> 00:10:25.890
completed percent. Let's add this in.

00:10:25.890 --> 00:10:28.250
We also need the percent symbol,

00:10:28.250 --> 00:10:31.525
and then we need to update our second value.

00:10:31.525 --> 00:10:37.560
Again, this is going to be our completedPercent all the way through to 100 percent.

00:10:37.560 --> 00:10:40.010
Since this is our first value,

00:10:40.010 --> 00:10:44.425
this will go from zero right through to our completedPercent.

00:10:44.425 --> 00:10:46.140
Say this is 50 percent,

00:10:46.140 --> 00:10:48.375
it will go from zero to 50.

00:10:48.375 --> 00:10:53.825
The second value will then go from 50 right through to the end of our circle,

00:10:53.825 --> 00:10:56.225
which is 100 percent.

00:10:56.225 --> 00:10:58.880
Just before we update our progressCircle,

00:10:58.880 --> 00:11:01.925
we can add a conditional statement just above.

00:11:01.925 --> 00:11:07.580
We can add an if statement to check if the completed percent is more than 100.

00:11:07.580 --> 00:11:11.240
If it is, then we're just going to reset this back to 100.

00:11:11.240 --> 00:11:15.940
So our progressCircle always goes from 0-100.

00:11:15.940 --> 00:11:22.875
We can check if the completedPercent is greater than 100.

00:11:22.875 --> 00:11:30.880
If it is, we'll then reset this back to 100 percent. Let's try this out.

00:11:31.070 --> 00:11:34.620
12.5, which is exactly half,

00:11:34.620 --> 00:11:37.815
our progressCircle is now 50-50.

00:11:37.815 --> 00:11:40.420
Insert a new value.

00:11:41.270 --> 00:11:44.265
Let's get it round to 100 percent.

00:11:44.265 --> 00:11:48.025
22.5, we just need to add a value of 2.5.

00:11:48.025 --> 00:11:50.870
This now completes our circle.

00:11:52.130 --> 00:11:54.370
If we try to add a new value,

00:11:54.370 --> 00:11:57.730
we see that the progressCircle doesn't go any further.

00:11:57.730 --> 00:12:01.370
Since we received 100 percent of our target for that week,

00:12:01.370 --> 00:12:05.770
this is now all of the functionality now complete for our running tracker.

00:12:05.770 --> 00:12:09.070
Just to finish this off, we're going to add a media query just to

00:12:09.070 --> 00:12:12.745
restrict the maximum width of some of these elements.

00:12:12.745 --> 00:12:15.500
Back to our styles.

00:12:16.110 --> 00:12:21.340
Let's add a media query which is going to target our screens,

00:12:21.340 --> 00:12:28.440
alongside the minimum screen width of 800 pixels.

00:12:28.440 --> 00:12:32.820
So far, 800 pixel devices and above will restrict

00:12:32.820 --> 00:12:37.780
the body width to be equal to 60 percent.

00:12:38.180 --> 00:12:42.555
We can also restrict the width of this number input too.

00:12:42.555 --> 00:12:44.670
Still within the media query,

00:12:44.670 --> 00:12:49.900
the input with the type of number,

00:12:50.900 --> 00:12:56.620
all we need to do again is set width and this time of 40 percent.

00:12:57.890 --> 00:13:03.475
Finally, we can also reduce the size of this svg on the larger screens.

00:13:03.475 --> 00:13:07.540
Let's target the svg, setting the maximum width to be 50 percent.

00:13:07.540 --> 00:13:15.955
[inaudible] will still see there's lots of spacing above the top and bottom of this svg.

00:13:15.955 --> 00:13:19.145
The way to fix this, if we go to our index.html,

00:13:19.145 --> 00:13:22.235
is to go to our svg opening tag.

00:13:22.235 --> 00:13:26.450
Inside of this type, we can see we still have the width and the height set.

00:13:26.450 --> 00:13:32.365
We can remove these, allowing the sizing to be controlled with our style sheet.

00:13:32.365 --> 00:13:36.930
Save this and now svg now takes up less space.

00:13:36.930 --> 00:13:40.415
Congratulations for now reaching the end of this project,

00:13:40.415 --> 00:13:43.200
and I'll see you in the next one.
