WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.020 --> 00:00:04.680
We now have the total values and also the average distance.

00:00:04.680 --> 00:00:09.080
We now want to move on to calculating the highest value of that week,

00:00:09.080 --> 00:00:12.930
and also updating our goal down at the bottom too.

00:00:12.930 --> 00:00:15.270
So to do this, let's go back over to our

00:00:15.270 --> 00:00:20.410
script.js and we can create a function to calculate this.

00:00:21.530 --> 00:00:24.450
The name of this function will be weeklyHigh,

00:00:24.450 --> 00:00:26.430
and all we need to do is to calculate

00:00:26.430 --> 00:00:31.095
the highest value which has been added into our entries array.

00:00:31.095 --> 00:00:34.750
Store this in a constant called high.

00:00:35.170 --> 00:00:38.220
The way we can do this is by use of

00:00:38.220 --> 00:00:42.520
a malfunction JavaScript provides which is called Math.

00:00:44.330 --> 00:00:50.420
Inside here we can pass in different values such as four,12, and six.

00:00:50.420 --> 00:00:53.735
Now if we do a console log for the value of high,

00:00:53.735 --> 00:00:57.550
we should see that the value of 12 is output.

00:00:57.550 --> 00:01:02.280
Let's call this inside side our function handleSubmit,

00:01:02.280 --> 00:01:06.055
and we can check this is working in the console.

00:01:06.055 --> 00:01:08.715
We can add any value inside here.

00:01:08.715 --> 00:01:12.410
Hit Enter, and we see the value of 12.

00:01:12.410 --> 00:01:17.760
But instead we want to grab the highest value from our entries array.

00:01:18.280 --> 00:01:24.120
Let's find Yes, we can pass in our entries array and check this is working.

00:01:24.380 --> 00:01:29.640
So five, six, and one.

00:01:29.640 --> 00:01:33.365
This now gives us a problem inside the console.

00:01:33.365 --> 00:01:39.830
So the reason this is happening is because Math.max will expect a series of numbers.

00:01:39.830 --> 00:01:42.680
However, we are passing an entries array.

00:01:42.680 --> 00:01:46.290
So we effectively do in something like this.

00:01:46.840 --> 00:01:52.550
Instead, what we want is to extract the actual values from inside of our array,

00:01:52.550 --> 00:01:54.910
so it looks more like this.

00:01:54.910 --> 00:01:59.435
The way we can do this is by using the JavaScript spread operator,

00:01:59.435 --> 00:02:01.595
which is the three dots.

00:02:01.595 --> 00:02:04.850
This will then extract all of the values inside of

00:02:04.850 --> 00:02:09.390
our entries array and this should now work inside the console.

00:02:11.120 --> 00:02:13.350
Now will have the high-value,

00:02:13.350 --> 00:02:14.955
we can now update the DOM.

00:02:14.955 --> 00:02:19.580
So document.getElementById, the ID we want,

00:02:19.580 --> 00:02:21.305
if we go to the index page,

00:02:21.305 --> 00:02:23.730
is the value of high.

00:02:25.850 --> 00:02:28.780
Let's set the inner text,

00:02:28.780 --> 00:02:32.520
which is going to be equal to our variable.

00:02:33.770 --> 00:02:36.705
That's out, so the value of one,

00:02:36.705 --> 00:02:40.890
five, we see the weekly high is a value of five.

00:02:40.890 --> 00:02:43.140
Seven, this is being updated.

00:02:43.140 --> 00:02:45.625
If we add the lower values which is three,

00:02:45.625 --> 00:02:49.020
this still has the high value of seven.

00:02:49.020 --> 00:02:53.155
Next up, we can also make our weekly target more dynamic too,

00:02:53.155 --> 00:02:55.835
by controlling this from our scripts.

00:02:55.835 --> 00:02:58.050
We don't need to do this by a function,

00:02:58.050 --> 00:03:00.730
we can just do this as soon as our script loads.

00:03:00.730 --> 00:03:05.800
So let's create a variable at the top or a constant.

00:03:05.800 --> 00:03:08.095
I'm going to call this our goal.

00:03:08.095 --> 00:03:11.860
Set this to any value such as 25.

00:03:11.860 --> 00:03:18.620
We can then use a query selector or getElementById to update our target.

00:03:22.490 --> 00:03:28.950
The target Id and then we need to set the in a text to be equal to our goal.

00:03:28.950 --> 00:03:31.580
We can also remove the placeholder value of

00:03:31.580 --> 00:03:36.460
25 and also check this is working in the browser.

00:03:36.460 --> 00:03:40.895
We don't have anything to obtain this goal from the user interface.

00:03:40.895 --> 00:03:44.240
I've just hard coded this as a value inside the script.

00:03:44.240 --> 00:03:46.340
But of course, if you do want a little challenge,

00:03:46.340 --> 00:03:51.500
you can go ahead and add this to the project so we can be updated by the user.

00:03:51.500 --> 00:03:54.060
Most of the functionality is now in place.

00:03:54.060 --> 00:03:55.880
The final part we're going to do,

00:03:55.880 --> 00:03:57.965
if we take a look at the final version,

00:03:57.965 --> 00:04:01.650
is to create this progress circle down at the bottom.
