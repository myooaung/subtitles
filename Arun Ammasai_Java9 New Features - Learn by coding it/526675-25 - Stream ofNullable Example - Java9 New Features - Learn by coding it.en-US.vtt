WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.160 --> 00:00:04.530
Hello everyone. Welcome back.

00:00:04.530 --> 00:00:06.540
So we discuss their Bordeaux,

00:00:06.540 --> 00:00:09.030
take while and drop while.

00:00:09.030 --> 00:00:11.085
And we discussed the iTunes method also,

00:00:11.085 --> 00:00:13.770
which is a static method, comes under stream.

00:00:13.770 --> 00:00:16.320
Now we're going to talk about the another static method which is

00:00:16.320 --> 00:00:18.675
called a stream got off nullable.

00:00:18.675 --> 00:00:20.475
So what is the stream that often a level?

00:00:20.475 --> 00:00:22.500
So basically it has a few things and end.

00:00:22.500 --> 00:00:24.495
Okay, so three dot-dot-dot nullable.

00:00:24.495 --> 00:00:28.125
It will return a single stream.

00:00:28.125 --> 00:00:31.410
If it's not null.

00:00:31.410 --> 00:00:35.160
In case the data does not contain any null,

00:00:35.160 --> 00:00:36.660
it will run a single stream.

00:00:36.660 --> 00:00:38.160
What will happen if it is,

00:00:38.160 --> 00:00:40.705
if it isn't null, is null.

00:00:40.705 --> 00:00:46.595
It will return empty string, sorry,

00:00:46.595 --> 00:00:53.540
TO return an empty string, right?

00:00:53.540 --> 00:00:57.800
So it is mostly helper.

00:00:57.800 --> 00:00:59.630
When you're using flatmaps,

00:00:59.630 --> 00:01:01.310
we know that two flatMap, right?

00:01:01.310 --> 00:01:03.140
So when you are flattened and when you're trying to

00:01:03.140 --> 00:01:05.150
flattening the data, that is a possibility.

00:01:05.150 --> 00:01:08.345
We'll end up with an elevation with a NullPointerException, right?

00:01:08.345 --> 00:01:10.535
So the stream that nullable it's taken care of it.

00:01:10.535 --> 00:01:12.080
It will not throw an exception,

00:01:12.080 --> 00:01:15.500
it will return us simply empty string.

00:01:15.500 --> 00:01:18.800
So NullPointerException is different and empty stream is different.

00:01:18.800 --> 00:01:23.360
Let's take a simple example and we will see how the nullable is going to work.

00:01:23.360 --> 00:01:26.945
So I'm going to create a new class here.

00:01:26.945 --> 00:01:35.630
So stream level example, main method.

00:01:35.630 --> 00:01:37.985
Okay, so now, um, what I'm gonna do,

00:01:37.985 --> 00:01:40.460
I'm going to have a list of string.

00:01:40.460 --> 00:01:43.950
So okay, like I just call string here,

00:01:45.310 --> 00:01:50.195
which will return the the names.

00:01:50.195 --> 00:01:51.770
And I have an alveolus here.

00:01:51.770 --> 00:01:54.575
So normally what happened when you're trying to look through the data,

00:01:54.575 --> 00:01:57.575
when it comes here, it will throw a NullPointerException, right?

00:01:57.575 --> 00:02:01.070
So let's see, use this particular list

00:02:01.070 --> 00:02:03.530
and we'll print the data and I'll see what happened.

00:02:03.530 --> 00:02:09.110
Okay, so let me open the stream against the collection.

00:02:09.110 --> 00:02:13.080
Let's start screen.

00:02:13.810 --> 00:02:17.555
And let's use a flat map here.

00:02:17.555 --> 00:02:22.280
So let's check the stream of nullable.

00:02:22.280 --> 00:02:30.515
And scream of nullable. Of nullable.

00:02:30.515 --> 00:02:32.270
And I want to pass the S.

00:02:32.270 --> 00:02:39.020
So it will check each and every element whether it is and then we can collect it.

00:02:39.020 --> 00:02:49.550
So what happened a year? So we're

00:02:49.550 --> 00:02:54.990
going to use the collectors collectors dot to list.

00:02:55.000 --> 00:02:59.645
Got it. And then what we're going to do,

00:02:59.645 --> 00:03:02.600
let's print the data also so we can use the forEach to print

00:03:02.600 --> 00:03:10.380
the data stream, to list here.

00:03:12.760 --> 00:03:17.360
And then we can print the data here to help a forage.

00:03:17.360 --> 00:03:19.685
So let's use the system.

00:03:19.685 --> 00:03:21.710
Turned out I made some reference.

00:03:21.710 --> 00:03:24.605
So you might be our print LN.

00:03:24.605 --> 00:03:28.115
So now what is happening? So I have the list which contains another value.

00:03:28.115 --> 00:03:30.665
Let's run it and we'll see what happens. So normally what happen?

00:03:30.665 --> 00:03:32.660
It will print the null value when you are

00:03:32.660 --> 00:03:35.390
opening a stream and if you're printing some data in it,

00:03:35.390 --> 00:03:37.925
if the collection data is null, it will print them out.

00:03:37.925 --> 00:03:40.925
But here, let's see.

00:03:40.925 --> 00:03:42.440
You don't see the null here.

00:03:42.440 --> 00:03:44.180
You can only see the atom and Nancy,

00:03:44.180 --> 00:03:48.140
that null has been handled at the help of stream dot nullable.

00:03:48.140 --> 00:03:48.740
Okay?

00:03:48.740 --> 00:03:53.750
So you might ask what will happen if I used a normal stream and we look,

00:03:53.750 --> 00:03:57.950
throw any exceptions, normally do want to accept it will print the null value.

00:03:57.950 --> 00:04:00.185
If you only check, we can check that too.

00:04:00.185 --> 00:04:08.430
So LI dot for each and just copy paste this thing.

00:04:09.520 --> 00:04:12.630
And let's run it now.

00:04:12.870 --> 00:04:16.480
So now we have Adam and Nancy.

00:04:16.480 --> 00:04:19.105
So when you're using off nullable,

00:04:19.105 --> 00:04:20.830
it will handle the null.

00:04:20.830 --> 00:04:22.855
So even though you've had a smell,

00:04:22.855 --> 00:04:24.160
it will deny MC stream,

00:04:24.160 --> 00:04:30.320
so you will not get an end up with a NullPointerException.

00:04:30.360 --> 00:04:32.035
Okay?

00:04:32.035 --> 00:04:34.120
So then you might ask,

00:04:34.120 --> 00:04:38.860
so can you show me how the stream will be displayed, right?

00:04:38.860 --> 00:04:40.645
So we can see that too.

00:04:40.645 --> 00:04:44.080
Let me create a simple example here,

00:04:44.080 --> 00:04:49.165
like let me create a list here.

00:04:49.165 --> 00:04:54.555
List and a line. L1.

00:04:54.555 --> 00:05:03.275
If we go down one and create a stream dot of nullable and I'm gonna go a 100.

00:05:03.275 --> 00:05:06.630
And we'll collect the data to

00:05:07.600 --> 00:05:15.000
collect using collectors to list.

00:05:17.320 --> 00:05:24.620
So what I'm gonna do, I'm just simply printing the LA here, l i1.

00:05:24.620 --> 00:05:31.110
So for now I'm going to comment these two so we can see some clear output here.

00:05:31.750 --> 00:05:34.955
Let me run this l i1, right?

00:05:34.955 --> 00:05:36.350
Run it.

00:05:36.350 --> 00:05:38.690
Now we are a 100, right?

00:05:38.690 --> 00:05:41.135
So what will happen if it is a null here?

00:05:41.135 --> 00:05:42.980
Well, it Chanel here, no,

00:05:42.980 --> 00:05:45.875
it will not return an empty string.

00:05:45.875 --> 00:05:49.865
See in this we're talking about will not end up with a NullPointerException.

00:05:49.865 --> 00:05:56.225
So these are the four important measure factors as a part of a AP enhancements.

00:05:56.225 --> 00:05:57.930
Thank you.
