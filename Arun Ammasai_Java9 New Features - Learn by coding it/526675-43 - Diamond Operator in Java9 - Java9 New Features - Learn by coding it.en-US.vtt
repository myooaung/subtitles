WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.480
Our own class. And we're gonna write

00:00:03.480 --> 00:00:09.270
the methods whenever I'm ready and saved my work with the help of the diamond operator.

00:00:09.270 --> 00:00:14.380
Right? So I'm gonna create a new class here.

00:00:15.320 --> 00:00:23.830
Diamond operator example.

00:00:30.070 --> 00:00:31.955
Okay?

00:00:31.955 --> 00:00:35.210
As I mentioned, we're going to write our own classes, right?

00:00:35.210 --> 00:00:39.740
So what I'm gonna do, I'm gonna use a generic here,

00:00:39.740 --> 00:00:42.090
so I'm going to go to class.

00:00:43.300 --> 00:00:47.840
But I can, I can call class autos.

00:00:47.840 --> 00:00:50.400
I can call them as our test class.

00:00:52.030 --> 00:00:56.000
And I don't know what I want to pass,

00:00:56.000 --> 00:00:59.510
so don't keep it as a generic.

00:00:59.510 --> 00:01:02.765
So I have one input,

00:01:02.765 --> 00:01:08.554
one attribute here, which is nothing but T. So I need to have a constructor.

00:01:08.554 --> 00:01:14.570
So I'm going to create them to help us create,

00:01:14.570 --> 00:01:16.040
consider using field, okay,

00:01:16.040 --> 00:01:21.780
so I'm going to use this general rate and I need to have a better settlement up.

00:01:21.780 --> 00:01:23.420
So I'm going to use them.

00:01:23.420 --> 00:01:25.415
I'm going to want to create them.

00:01:25.415 --> 00:01:28.925
So I have a constructor and allocator and Sacramento.

00:01:28.925 --> 00:01:34.350
So I'm going to write my own magnetic word. Override me.

00:01:34.540 --> 00:01:36.620
There's my own, my doubtful,

00:01:36.620 --> 00:01:42.350
which is going to return some random string

00:01:42.350 --> 00:01:49.790
like the one I've done using data.

00:01:49.790 --> 00:01:51.665
So when I call them a dog,

00:01:51.665 --> 00:01:54.140
it has to be done processing data.

00:01:54.140 --> 00:01:55.265
Right?

00:01:55.265 --> 00:01:58.220
But it is not going to because I'm going to order them at all.

00:01:58.220 --> 00:01:59.885
So how we're going to do that?

00:01:59.885 --> 00:02:02.270
Just come to our main method.

00:02:02.270 --> 00:02:03.500
Here.

00:02:03.500 --> 00:02:05.750
I'm gonna call the test class.

00:02:05.750 --> 00:02:07.580
Yes, class.

00:02:07.580 --> 00:02:09.950
I don't know what is the type I'm going to pass rate,

00:02:09.950 --> 00:02:12.260
but for now, I'm going to pass that string.

00:02:12.260 --> 00:02:20.090
That is a dynamic. And last one is a new desk glass.

00:02:20.090 --> 00:02:23.855
So I'm going to overlay them. That has class and t.

00:02:23.855 --> 00:02:28.740
So it is going to be a string, right?

00:02:35.220 --> 00:02:38.605
So what? I'm going to pass it here,

00:02:38.605 --> 00:02:42.040
some string here, okay,

00:02:42.040 --> 00:02:44.185
so I'm gonna pass and John here.

00:02:44.185 --> 00:02:48.040
And here, I'm going to open an anonymous class here.

00:02:48.040 --> 00:02:53.470
But I can roll my mentor,

00:02:53.470 --> 00:02:55.360
so I could add it as class.

00:02:55.360 --> 00:02:57.565
And I'm going to pass the generic type here,

00:02:57.565 --> 00:03:00.100
here, the generic string, it can be anything.

00:03:00.100 --> 00:03:02.170
So I'm passing the data,

00:03:02.170 --> 00:03:05.170
I'm calling the path and get rid of my constructor.

00:03:05.170 --> 00:03:06.055
Okay?

00:03:06.055 --> 00:03:12.795
So what I'm gonna do, I'm going to just go to source and trying to implant a matter.

00:03:12.795 --> 00:03:15.455
My God, I'm going to use is nothing but all around me.

00:03:15.455 --> 00:03:17.765
I'm going to use this method to override.

00:03:17.765 --> 00:03:19.910
So how I'm going to do that?

00:03:19.910 --> 00:03:29.660
So I'm going to simply print processing, internal processing data.

00:03:29.660 --> 00:03:32.600
I'm going to print processing.

00:03:32.600 --> 00:03:34.535
What are the name we are passing?

00:03:34.535 --> 00:03:41.670
We can call them get. So no, you're good.

00:03:43.510 --> 00:03:45.050
All right.

00:03:45.050 --> 00:03:51.200
So I click on a test class and the House and Senate and I have ordered method also.

00:03:51.200 --> 00:03:52.580
So eyelid were already here.

00:03:52.580 --> 00:03:53.675
So now what I'm gonna do,

00:03:53.675 --> 00:03:56.450
I have incidents with C1,

00:03:56.450 --> 00:03:58.865
I'm going to call it water and methanol.

00:03:58.865 --> 00:04:01.445
So we know that not to happen.

00:04:01.445 --> 00:04:04.070
Suppose to return processing data.

00:04:04.070 --> 00:04:12.980
But since I lower right down the middle here and I've done it, run it.

00:04:12.980 --> 00:04:18.275
See the link glossing yarn because it has been overwritten.

00:04:18.275 --> 00:04:22.360
So this particular functionality which was not allowed before Java and,

00:04:22.360 --> 00:04:29.135
and it was implemented in Java nine only for anonymous classes,

00:04:29.135 --> 00:04:31.625
which you can do for a diamond operator.

00:04:31.625 --> 00:04:33.780
Thank you.
