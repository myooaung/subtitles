WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.320 --> 00:00:06.555
I'm sorry to use that. I had my issues of my Windows PCs where I'm onto my Mac.

00:00:06.555 --> 00:00:10.455
So I'm going to use it a text file for now, just bear with me.

00:00:10.455 --> 00:00:13.560
So another important thing in Java name that is

00:00:13.560 --> 00:00:18.270
a small enhancement in safe variable arguments.

00:00:18.270 --> 00:00:22.020
But before we are jumping into what is safe variable argument, first,

00:00:22.020 --> 00:00:24.390
we need to know why is it that arguments and

00:00:24.390 --> 00:00:27.015
what is variable arguments and run it escaped?

00:00:27.015 --> 00:00:29.955
And why do we need a safe argument?

00:00:29.955 --> 00:00:32.025
Basically, there are variables that are,

00:00:32.025 --> 00:00:35.325
which is I think, but variable number of arguments.

00:00:35.325 --> 00:00:39.390
So that has been introduced in Java, 125,

00:00:39.390 --> 00:00:44.075
lotion and save that are introduced in 1.7.

00:00:44.075 --> 00:00:46.730
So what we are going to discuss today.

00:00:46.730 --> 00:00:49.325
So the first thing, what is it fair arcs?

00:00:49.325 --> 00:00:54.155
So we're going to see a simple example and why they started using variable arguments.

00:00:54.155 --> 00:00:55.625
So what did the issue with that?

00:00:55.625 --> 00:00:58.580
I mean, what the shell we're coming,

00:00:58.580 --> 00:01:02.660
we have started using variable arguments. And what are the issue?

00:01:02.660 --> 00:01:08.240
The initial ocean and why we need safe works and what does the announcement came in Java.

00:01:08.240 --> 00:01:10.550
So they've been opened, my egg lives.

00:01:10.550 --> 00:01:14.600
I'll show you what they exactly some safe.

00:01:14.600 --> 00:01:16.910
I'm in variable x comes into place.

00:01:16.910 --> 00:01:18.920
So let me do an example here.

00:01:18.920 --> 00:01:22.175
I'm a new class here. So I'm going to be a noun.

00:01:22.175 --> 00:01:26.730
Different package here. Say for

00:01:35.140 --> 00:01:41.735
example, I'm going to have a main method. Okay?

00:01:41.735 --> 00:01:44.465
Just think about this scenario.

00:01:44.465 --> 00:01:49.070
So I have some operation,

00:01:49.070 --> 00:01:51.200
right, for the example,

00:01:51.200 --> 00:01:54.330
I'm going to create a method here or

00:02:05.410 --> 00:02:10.760
some pieces accepting two parameters we're just running,

00:02:10.760 --> 00:02:17.480
but I command J and which will

00:02:17.480 --> 00:02:25.175
return I plus j.

00:02:25.175 --> 00:02:29.190
So this is a normal code, right?

00:02:48.910 --> 00:02:53.030
Okay, my bad highest reward Hindu art.

00:02:53.030 --> 00:02:57.485
So I have a method which will return us some offer numbers.

00:02:57.485 --> 00:02:59.880
So I'm going to call them,

00:03:00.520 --> 00:03:02.570
for example,

00:03:02.570 --> 00:03:11.915
some, some off.

00:03:11.915 --> 00:03:17.315
And I'm going to pass two variables here and 15.

00:03:17.315 --> 00:03:18.800
So it looks good.

00:03:18.800 --> 00:03:21.785
But after some time my record has been changed.

00:03:21.785 --> 00:03:27.290
I need to pass into I and j comma k, three parameters.

00:03:27.290 --> 00:03:30.320
And after some time I have the enhancement,

00:03:30.320 --> 00:03:33.545
so I need to pass IJK and a scoping out.

00:03:33.545 --> 00:03:38.465
But every time they had the number of arguments keep on adding.

00:03:38.465 --> 00:03:42.110
But I want the solution and I don't want to keep adding

00:03:42.110 --> 00:03:47.240
new methods in this scenario to handle this particular issue,

00:03:47.240 --> 00:03:49.640
we need to go to another tumor.

00:03:49.640 --> 00:03:51.260
That's what you want to hold it, just holding it

00:03:51.260 --> 00:03:55.865
three inputs and another one is holding four inputs.

00:03:55.865 --> 00:03:58.085
So overcoming this particular issue.

00:03:58.085 --> 00:03:59.855
So I don't want to create a multiple mentors.

00:03:59.855 --> 00:04:04.625
I want to have one common method which will do the all the operation.

00:04:04.625 --> 00:04:09.020
So that is the variable arc is comes to into place.

00:04:09.020 --> 00:04:11.925
So how long are you going to create that?

00:04:11.925 --> 00:04:13.960
So what does the syntax?

00:04:13.960 --> 00:04:16.540
So if you want to create a red arcs,

00:04:16.540 --> 00:04:23.590
syntaxes three dots and then the variable name, whatever it is.

00:04:23.590 --> 00:04:26.170
Okay, So basically internally,

00:04:26.170 --> 00:04:32.990
it will convert into an array, right?

00:04:33.420 --> 00:04:40.610
So I'm going to create a dominant door, which will take.

00:04:43.170 --> 00:04:51.265
So I'm gonna replicate assignment under static int sum.

00:04:51.265 --> 00:04:54.624
And someone.

00:04:54.624 --> 00:04:59.350
Here I'm gonna use a variable arguments which is nothing mark in this scenario int.

00:04:59.350 --> 00:05:00.910
And the syntax is three dots.

00:05:00.910 --> 00:05:04.930
And then you need to provide a variable name.

00:05:04.930 --> 00:05:08.110
So I'm going to provide explanation as I mentioned,

00:05:08.110 --> 00:05:10.690
whatever the data you're passing to,

00:05:10.690 --> 00:05:13.510
the variable arguments matter by him, donor lead,

00:05:13.510 --> 00:05:16.750
convert that data into an area for data.

00:05:16.750 --> 00:05:22.015
So do make sure that I do not go for

00:05:22.015 --> 00:05:28.460
mere arguments because it is converting your data into an array and then it's processing.

00:05:29.460 --> 00:05:32.170
Okay, so let me write them.

00:05:32.170 --> 00:05:34.975
I'd make it a variable here, int total.

00:05:34.975 --> 00:05:37.075
And we want to give it as a 0 for now.

00:05:37.075 --> 00:05:38.140
So

00:05:38.140 --> 00:05:48.070
for a simple for loop.

00:05:48.070 --> 00:05:52.100
So what I'm gonna do, I'm gonna do,

00:05:55.170 --> 00:06:04.280
I'm finally, I'm printing this one.

00:06:05.100 --> 00:06:15.165
So the total is Chapter 19.

00:06:15.165 --> 00:06:16.235
I can keep this Mandela,

00:06:16.235 --> 00:06:19.010
why I didn't want to return anything.

00:06:19.350 --> 00:06:23.740
So now we have very low humans.

00:06:23.740 --> 00:06:32.290
So let's see how we are going to call them Some one.

00:06:32.290 --> 00:06:35.935
Because then you're using variable arguments.

00:06:35.935 --> 00:06:38.020
The parameters are going to pass.

00:06:38.020 --> 00:06:41.515
It can be anything, it can be 0, it can be one.

00:06:41.515 --> 00:06:44.095
So let me try with a single parameter.

00:06:44.095 --> 00:06:45.340
I mean no parameter.

00:06:45.340 --> 00:06:48.520
So let's see how it is going to work. Let me run it.

00:06:48.520 --> 00:06:52.720
See now 0, right?

00:06:52.720 --> 00:06:57.205
Let me pass a monogram data here like 10, save it.

00:06:57.205 --> 00:07:02.955
And then again, total is 10 and 15.

00:07:02.955 --> 00:07:04.850
And the total is 15.

00:07:04.850 --> 00:07:08.735
Okay, So let me try to modify the number of inputs.

00:07:08.735 --> 00:07:14.660
15 come out in, 45, 67, 87.

00:07:14.660 --> 00:07:17.105
So still, the same method is enough,

00:07:17.105 --> 00:07:20.044
McMillan and again, see the total is 224.

00:07:20.044 --> 00:07:23.164
So one solution to handle multiple scenarios.

00:07:23.164 --> 00:07:24.860
So one leg forward,

00:07:24.860 --> 00:07:28.565
the number of gametes passing in a different types.

00:07:28.565 --> 00:07:30.050
That means at different times, different number

00:07:30.050 --> 00:07:31.610
of arguments. You don't have to write them.

00:07:31.610 --> 00:07:34.020
Each an owner that for everything.

00:07:34.090 --> 00:07:38.150
So we can go for the variable arguments.

00:07:38.150 --> 00:07:40.790
So in the next video, we're going to talk a little bit more than

00:07:40.790 --> 00:07:44.375
what their company comes into place.

00:07:44.375 --> 00:07:46.070
What is the issue with this?

00:07:46.070 --> 00:07:50.490
What will happen? We'll talk about in the next video.
