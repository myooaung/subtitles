WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.665
Hello everyone.

00:00:01.665 --> 00:00:02.655
Welcome back.

00:00:02.655 --> 00:00:05.445
So now we know how to create a I mean,

00:00:05.445 --> 00:00:08.100
how to read the process handled from the process

00:00:08.100 --> 00:00:11.370
handled how to retrieve the inflammatory.

00:00:11.370 --> 00:00:15.610
So infant matter which will give the detailed information.

00:00:15.800 --> 00:00:22.260
So let's try with a simple example to explore how the plus sign is going to walk.

00:00:22.260 --> 00:00:26.040
So I'm going to create a new class.

00:00:26.040 --> 00:00:33.440
So cross-national example, let's call the method process handled Example,

00:00:33.440 --> 00:00:35.965
and that's our main method.

00:00:35.965 --> 00:00:37.680
Finish.

00:00:40.330 --> 00:00:47.960
Okay, So before I don't want handling this particular packet,

00:00:47.960 --> 00:00:49.385
let's create a new package.

00:00:49.385 --> 00:00:52.350
I'm gonna receptor and more.

00:00:55.150 --> 00:00:57.065
Feature.

00:00:57.065 --> 00:01:05.765
Create a package. Dot is going to be process finish. Okay.

00:01:05.765 --> 00:01:11.090
So now I created the same glass enter them process package.

00:01:11.090 --> 00:01:12.170
Okay?

00:01:12.170 --> 00:01:16.670
So first thing, I'm trying to retrieve the current process.

00:01:16.670 --> 00:01:20.075
So we know that how we are going to do that process,

00:01:20.075 --> 00:01:26.090
handle handler or handle

00:01:26.090 --> 00:01:32.045
is equal to handle dot current.

00:01:32.045 --> 00:01:35.130
So now we've got the process handled.

00:01:35.890 --> 00:01:42.950
So how we are going to retrieve the information from the process handler?

00:01:42.950 --> 00:01:43.955
It is simple.

00:01:43.955 --> 00:01:47.285
So just if you want to know what are the methods available to handle.

00:01:47.285 --> 00:01:48.500
So once you get it to update,

00:01:48.500 --> 00:01:51.180
use the object and try to retrieve them later.

00:01:52.420 --> 00:01:56.990
So here we have the handler.

00:01:56.990 --> 00:02:01.580
So will you be able to get the data from,

00:02:01.580 --> 00:02:04.490
directly from the handler I'm in the process handle,

00:02:04.490 --> 00:02:06.170
which will not possible.

00:02:06.170 --> 00:02:09.170
The process handler which will give you the entire process to you.

00:02:09.170 --> 00:02:12.185
Okay, so from the process handle,

00:02:12.185 --> 00:02:14.075
if you want to retrieve the information,

00:02:14.075 --> 00:02:19.055
you need to pull out the handle that in format data.

00:02:19.055 --> 00:02:22.850
So in the US, the info method to get the details that the first thing,

00:02:22.850 --> 00:02:25.770
okay, so now I have the process handled.

00:02:30.070 --> 00:02:32.630
So now what I'm gonna do, okay,

00:02:32.630 --> 00:02:36.140
so before we are moving into the process, handled that info.

00:02:36.140 --> 00:02:39.530
So what is that in the handle which will give you the process ID?

00:02:39.530 --> 00:02:45.360
Print the data, and see what is handless returning.

00:02:46.420 --> 00:02:51.860
And let's print them and see what the false idea that okay,

00:02:51.860 --> 00:02:53.570
so a 95 two,

00:02:53.570 --> 00:02:55.430
this is the process ID.

00:02:55.430 --> 00:03:00.740
Okay? So this is to use

00:03:00.740 --> 00:03:06.590
the current leaving the process ID.

00:03:06.590 --> 00:03:12.200
Or else we can pass the clauses ID and we can get the profit and loss on.

00:03:12.200 --> 00:03:15.710
So let's go back to the Task Manager.

00:03:15.710 --> 00:03:19.460
Let's find out some process here.

00:03:19.460 --> 00:03:20.840
So what disciplines together?

00:03:20.840 --> 00:03:24.005
Let us try to find out some unique problems here.

00:03:24.005 --> 00:03:28.520
Okay, Let's find out the process ID for Eclipse.

00:03:28.520 --> 00:03:30.380
So phi 076, right?

00:03:30.380 --> 00:03:32.600
So let's use Pfizer.

00:03:32.600 --> 00:03:35.600
Pfizer o sound. I'm going to use.

00:03:35.600 --> 00:03:37.670
So how we are going to get the information?

00:03:37.670 --> 00:03:40.350
We're going to use that process handled.

00:03:42.880 --> 00:03:46.130
By the way I want to use off my dot which will accept

00:03:46.130 --> 00:03:49.380
the input parameter, and that's an integer.

00:03:50.170 --> 00:03:52.925
And it's going to be a handler 1.

00:03:52.925 --> 00:03:56.270
But having seen and that is an exception here, there is an error here.

00:03:56.270 --> 00:03:58.910
The reason is, as I mentioned,

00:03:58.910 --> 00:04:02.660
the prosody, it may be exist or it may not be existed.

00:04:02.660 --> 00:04:03.785
Right?

00:04:03.785 --> 00:04:05.345
To resolve that.

00:04:05.345 --> 00:04:11.825
This method will have done your optional off process handle.

00:04:11.825 --> 00:04:12.530
Okay?

00:04:12.530 --> 00:04:14.930
So I'm going to use entrepreneur here.

00:04:14.930 --> 00:04:17.070
Sorry.

00:04:20.590 --> 00:04:23.370
Motional EMF.

00:04:25.690 --> 00:04:27.125
Okay.

00:04:27.125 --> 00:04:29.990
So we got optional off process handle.

00:04:29.990 --> 00:04:32.420
So from the process and they'll optional process.

00:04:32.420 --> 00:04:34.475
I need to repeat the process handled.

00:04:34.475 --> 00:04:37.325
What we can do simply a handle.

00:04:37.325 --> 00:04:40.290
I can call them as a hedge. 1 is equal.

00:04:40.570 --> 00:04:45.770
And that's all.

00:04:45.770 --> 00:04:48.680
So it will give you the process handler.

00:04:48.680 --> 00:04:53.120
So we are pretty good from here, right?

00:04:53.120 --> 00:04:56.075
So now we know how to retrieve the process handle.

00:04:56.075 --> 00:04:57.830
Now what we're going to do.

00:04:57.830 --> 00:05:03.215
So I know that is the process ID Pfizer as I'm doing this belongs to Eclipse.

00:05:03.215 --> 00:05:05.345
So now I'm going to retrieve the information.

00:05:05.345 --> 00:05:10.520
So when the eclipse has been initiated and how what is a command?

00:05:10.520 --> 00:05:12.110
What a doodle duration.

00:05:12.110 --> 00:05:15.155
We are going to explore the methods inside the process.

00:05:15.155 --> 00:05:16.430
Handle info.

00:05:16.430 --> 00:05:24.950
So first, I'm going to create the process info, dot info, info.

00:05:24.950 --> 00:05:27.725
So how are we going to get the info from the handler?

00:05:27.725 --> 00:05:30.920
So one dot info.

00:05:30.920 --> 00:05:34.355
So now we got the NFO.

00:05:34.355 --> 00:05:35.660
Let's print the info.

00:05:35.660 --> 00:05:41.490
We'll see what happens and run it.

00:05:41.590 --> 00:05:44.090
So now we've got all the information,

00:05:44.090 --> 00:05:48.170
the process of handling for my children all turned off everything.

00:05:48.170 --> 00:05:55.135
So the owner and what are the common to use and what is the start time and total time.

00:05:55.135 --> 00:05:57.220
Everything is written, everything.

00:05:57.220 --> 00:06:00.550
Okay. But I don't want to print all of them.

00:06:00.550 --> 00:06:04.045
I just want to retrieve some specific information.

00:06:04.045 --> 00:06:07.555
Like the user.

00:06:07.555 --> 00:06:09.175
We can do that, right?

00:06:09.175 --> 00:06:13.240
So NFO dot user.

00:06:13.240 --> 00:06:18.070
So let's run it again and we'll see whether it is written in the appropriate user.

00:06:18.070 --> 00:06:19.360
Right?

00:06:19.360 --> 00:06:20.800
So our own PC,

00:06:20.800 --> 00:06:24.924
this is the user who wants the process.

00:06:24.924 --> 00:06:25.975
Good.

00:06:25.975 --> 00:06:28.705
But just take a look at it. It's threatening optional.

00:06:28.705 --> 00:06:30.940
So we know that if it is an optional,

00:06:30.940 --> 00:06:34.015
how we are going to retrieve the data with the help of gate matter, right?

00:06:34.015 --> 00:06:40.385
So let's use that and run it again.

00:06:40.385 --> 00:06:43.625
See now we got the exact username.

00:06:43.625 --> 00:06:44.675
Cool, right?

00:06:44.675 --> 00:06:46.205
Okay, so what next?

00:06:46.205 --> 00:06:51.200
So i1 to retrieve the comment would you use to initiate this application?

00:06:51.200 --> 00:06:53.765
So how we can do that?

00:06:53.765 --> 00:06:59.090
So the matter we have called S command doesn't matter which

00:06:59.090 --> 00:07:04.430
will give you what are the common initiator are used to start the application.

00:07:04.430 --> 00:07:07.190
Admin ended again. So there's

00:07:07.190 --> 00:07:10.220
a command from the idea has

00:07:10.220 --> 00:07:13.370
been executed because my Eclipse is located in this particular location.

00:07:13.370 --> 00:07:17.535
The comment is executor with this apart.

00:07:17.535 --> 00:07:19.450
Okay, It's pretty good, right.

00:07:19.450 --> 00:07:20.875
Is the waters we can check it out.

00:07:20.875 --> 00:07:26.065
So I want to know when the particular process has been starter.

00:07:26.065 --> 00:07:29.485
So we can use the start in shunt matter, right?

00:07:29.485 --> 00:07:31.180
Start incident.

00:07:31.180 --> 00:07:34.060
Again, it's optional, so I'm going to use

00:07:34.060 --> 00:07:37.000
the get method to retrieve the data. Now run it again.

00:07:37.000 --> 00:07:40.930
So now we had a user and this is a command,

00:07:40.930 --> 00:07:45.505
and this is the time, the obligation initiator.

00:07:45.505 --> 00:07:51.415
And then we're going to talk about how long the duration.

00:07:51.415 --> 00:07:53.200
So the total CPU duration.

00:07:53.200 --> 00:07:59.640
So we're gonna get that total CP duration.

00:07:59.640 --> 00:08:02.820
Let's run it again.

00:08:04.300 --> 00:08:08.030
See now we got the user and the command,

00:08:08.030 --> 00:08:12.800
and the start time and the duration.

00:08:12.800 --> 00:08:14.599
So we got everything.

00:08:14.599 --> 00:08:18.770
So, but just take a look at everything is simpler here.

00:08:18.770 --> 00:08:21.500
The same thing if you want to do it before Java and then

00:08:21.500 --> 00:08:24.860
you have the right at tons of code.

00:08:24.860 --> 00:08:29.855
And also unit, It depends on lot of third party JAR files, right?

00:08:29.855 --> 00:08:32.285
So now we know how to create.

00:08:32.285 --> 00:08:35.060
I'm not creating how to retrieve

00:08:35.060 --> 00:08:39.050
the process with the help of current or passing any process ID.

00:08:39.050 --> 00:08:42.710
But we haven't tried passing a process to get the plus sign.

00:08:42.710 --> 00:08:45.050
All right, We can try it in the next example,

00:08:45.050 --> 00:08:46.340
because in the next example,

00:08:46.340 --> 00:08:50.135
we are creating, we are going to create our warn process builder.

00:08:50.135 --> 00:08:52.115
So with the help of process builder,

00:08:52.115 --> 00:08:54.500
we are going to create our own process.

00:08:54.500 --> 00:08:55.760
So here is a scenario.

00:08:55.760 --> 00:08:58.940
What we're going to do, I'm going to handle two scenarios.

00:08:58.940 --> 00:09:03.589
The first scenario is going to be I want to open a file with any application.

00:09:03.589 --> 00:09:08.525
And second, I want to write a Java program and I don't want to run it directly.

00:09:08.525 --> 00:09:11.150
I want to create the honor the Java file through the Java FX.

00:09:11.150 --> 00:09:13.580
And I want to compile this code and run it.

00:09:13.580 --> 00:09:15.680
So that is our own process, right?

00:09:15.680 --> 00:09:19.535
We don't depend on the normal way of cortex regions.

00:09:19.535 --> 00:09:21.390
Let's try that.
