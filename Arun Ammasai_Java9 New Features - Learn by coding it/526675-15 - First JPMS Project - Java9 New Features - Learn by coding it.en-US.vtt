WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.110 --> 00:00:02.625
Hello everyone, Welcome back.

00:00:02.625 --> 00:00:08.460
In this video, we're going to talk about a simple module project.

00:00:08.460 --> 00:00:10.965
Let's create our first module project.

00:00:10.965 --> 00:00:13.170
So I'm going to use the Eclipse here.

00:00:13.170 --> 00:00:14.460
So create a project.

00:00:14.460 --> 00:00:16.485
Can we Java project here?

00:00:16.485 --> 00:00:20.280
So just call him I satisfy application for now.

00:00:20.280 --> 00:00:24.225
And click Next and Finish.

00:00:24.225 --> 00:00:28.905
And it will pop up for create modelling for digestion because my,

00:00:28.905 --> 00:00:33.615
my, my Eclipse compile compile time is pointing to GRE nine.

00:00:33.615 --> 00:00:36.385
So it will ask you,

00:00:36.385 --> 00:00:39.470
do you want mercury, the module dot, sorry my life.

00:00:39.470 --> 00:00:41.780
And in for a Java file, if you want,

00:00:41.780 --> 00:00:44.105
just go ahead and provide a name for it.

00:00:44.105 --> 00:00:48.680
For example, here I'm going to give it a modular is me modelling and create.

00:00:48.680 --> 00:00:51.710
Sometimes it won't pop up because of some other reason.

00:00:51.710 --> 00:00:55.880
So what I need to do, you can create manually or you

00:00:55.880 --> 00:01:00.260
can delete this and you can use right-click and go to configure.

00:01:00.260 --> 00:01:03.770
And there you find create module hyphen info,

00:01:03.770 --> 00:01:06.650
okay, and give a name here and create it.

00:01:06.650 --> 00:01:08.105
It is pretty much the same thing.

00:01:08.105 --> 00:01:09.905
We are not going to probably anything in the module.

00:01:09.905 --> 00:01:12.920
We're just going to create a simple model and create a class fill,

00:01:12.920 --> 00:01:15.650
and we'll run it just like a hello world.

00:01:15.650 --> 00:01:19.250
Okay, so I'm going to create a new class here,

00:01:19.250 --> 00:01:23.045
like I can keep it as an com dot test.

00:01:23.045 --> 00:01:29.150
So my class name is test and keep a main method in it and finish it.

00:01:29.150 --> 00:01:30.560
Okay?

00:01:30.560 --> 00:01:36.065
So in this matter I'm going to print the sum shipment like

00:01:36.065 --> 00:01:42.980
welcome to CAPM S and save it.

00:01:42.980 --> 00:01:44.570
So now what we're gonna do,

00:01:44.570 --> 00:01:46.730
so I have everything in place.

00:01:46.730 --> 00:01:48.380
I have a model and I have a class.

00:01:48.380 --> 00:01:49.520
So we're going to run it.

00:01:49.520 --> 00:01:51.440
Okay? So we do,

00:01:51.440 --> 00:01:55.820
we are going to use the command prompt to compile the classes and execute them.

00:01:55.820 --> 00:02:01.110
Okay, let's see what is the location, the project creator.

00:02:02.740 --> 00:02:06.335
Okay, So the project created in this location,

00:02:06.335 --> 00:02:11.090
I don't want them in here because it's created by Eclipse.

00:02:11.090 --> 00:02:17.615
So go to the location and open the command prompt.

00:02:17.615 --> 00:02:21.110
It can go manually or you can use the shortcuts.

00:02:21.110 --> 00:02:29.690
So okay, so what would happen here if I create a common window here?

00:02:29.690 --> 00:02:32.075
Okay, so now the first thing,

00:02:32.075 --> 00:02:33.890
just look at this structure.

00:02:33.890 --> 00:02:35.450
So to see this structure,

00:02:35.450 --> 00:02:40.970
a tree slash F is the package structure.

00:02:40.970 --> 00:02:45.185
I haven't source package and I have a modelling for dot Java in it.

00:02:45.185 --> 00:02:47.570
And I have another package com dot js,

00:02:47.570 --> 00:02:49.415
which contents test dot Java.

00:02:49.415 --> 00:02:52.715
I'm going to compile them and put it in a separate folder.

00:02:52.715 --> 00:02:54.140
I'm in the class cells.

00:02:54.140 --> 00:03:00.140
So now I see hyphen D and I'm going to keep it classmates and Out folder.

00:03:00.140 --> 00:03:04.535
So under the source folder we have the module right?

00:03:04.535 --> 00:03:11.855
Compare them first and then compile the another like which is there,

00:03:11.855 --> 00:03:16.505
com slash test, test dot Java.

00:03:16.505 --> 00:03:20.585
So now we have compiled these two files, right?

00:03:20.585 --> 00:03:22.865
Let's look at the structure now.

00:03:22.865 --> 00:03:26.450
Because we have a class Phil's creator write in a different location.

00:03:26.450 --> 00:03:31.355
So now I have a source file is the same thing and that is a Newton crater here.

00:03:31.355 --> 00:03:33.590
There is a folder created out.

00:03:33.590 --> 00:03:36.650
Instead it out I have a more info dot class which is compelled here.

00:03:36.650 --> 00:03:38.465
And again, test stat Java.

00:03:38.465 --> 00:03:40.700
So now what we're gonna do,

00:03:40.700 --> 00:03:44.600
let's run using module.

00:03:44.600 --> 00:03:48.230
So the way how are we going to run Java space?

00:03:48.230 --> 00:03:49.940
You need to provide the path,

00:03:49.940 --> 00:03:51.215
which is nothing but module path,

00:03:51.215 --> 00:03:54.440
WIIFM, module I offend.

00:03:54.440 --> 00:04:01.519
But, and you need to specify which location you are going to find out the destination,

00:04:01.519 --> 00:04:04.625
the files, so the classmates available Out folder.

00:04:04.625 --> 00:04:07.565
And then you need to provide what is the package?

00:04:07.565 --> 00:04:13.340
Just go back to your Eclipse and then you can find this is my package name, okay, sorry,

00:04:13.340 --> 00:04:16.205
modulo m. So then provide the module him here,

00:04:16.205 --> 00:04:19.220
like outer and inner specify.

00:04:19.220 --> 00:04:20.540
I'm going to find out the module.

00:04:20.540 --> 00:04:24.845
So I'm telling the compiler execute the module path,

00:04:24.845 --> 00:04:26.330
and that is a folder called out.

00:04:26.330 --> 00:04:27.980
And from there I have a moral call,

00:04:27.980 --> 00:04:30.935
this just go and pick the model and then the class.

00:04:30.935 --> 00:04:36.380
So I am mentioning it is going to be modelled and my modulo m is going to be Module 8.

00:04:36.380 --> 00:04:40.760
The demodulator, we have something called com dot

00:04:40.760 --> 00:04:47.120
test.com dot test is

00:04:47.120 --> 00:04:52.085
my package structure and my class name is John test.

00:04:52.085 --> 00:04:53.510
Let's run it.

00:04:53.510 --> 00:04:55.415
See you welcome to JP MS.

00:04:55.415 --> 00:04:59.360
So this is how you need to create a simple modular project.

00:04:59.360 --> 00:05:04.310
In the next video, we'll talk about what are the keywords inside the modular info

00:05:04.310 --> 00:05:09.335
hamming how we can export and require from some other modules.

00:05:09.335 --> 00:05:11.790
Okay, thank you.
