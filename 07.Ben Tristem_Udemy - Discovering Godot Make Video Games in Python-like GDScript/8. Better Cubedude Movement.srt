1
00:00:04,960 --> 00:00:07,750
Hello again, you lovely guy to people in this video.

2
00:00:07,860 --> 00:00:09,670
He's cute, dude, better movement.

3
00:00:09,700 --> 00:00:10,360
What I mean by that?

4
00:00:10,390 --> 00:00:12,820
Well, we want to make sure we animate cute dude.

5
00:00:12,880 --> 00:00:17,560
I won't keep dude to run when moving and only when moving.

6
00:00:17,980 --> 00:00:21,640
And we want to face forward if we take a look what happens right now in a press play.

7
00:00:22,260 --> 00:00:23,720
Yes, I tweak my camera value slightly.

8
00:00:25,820 --> 00:00:29,230
Cube dude neither animates nor changes direction.

9
00:00:29,350 --> 00:00:31,600
What changes direction doesn't change which way they're facing.

10
00:00:31,960 --> 00:00:34,000
Which means feels a lot more like a foosball table.

11
00:00:34,090 --> 00:00:34,870
I want to change that.

12
00:00:34,900 --> 00:00:36,580
So those are the two things we'll do in this video.

13
00:00:37,120 --> 00:00:38,650
So let's get right into it.

14
00:00:38,710 --> 00:00:43,510
As you might expect, we're going to be in the player scenes as open player of that one open template

15
00:00:43,510 --> 00:00:43,810
player.

16
00:00:44,200 --> 00:00:45,070
Make sure Erving's in here.

17
00:00:45,130 --> 00:00:45,670
Fantastic.

18
00:00:45,730 --> 00:00:47,440
And here is my animation player.

19
00:00:47,980 --> 00:00:52,990
Now, Mikey has provided two animations that actually the same animation because he made this for the

20
00:00:52,990 --> 00:00:55,250
original character, created cause for his play.

21
00:00:55,900 --> 00:00:58,400
You can see this is a pretty good run.

22
00:00:58,420 --> 00:01:00,100
You also notice it stops.

23
00:01:00,520 --> 00:01:03,610
So to fix that, to go over here and loop it and press play.

24
00:01:05,870 --> 00:01:08,170
Now, we could just put that in, right?

25
00:01:08,450 --> 00:01:10,340
We could make Keba, you'd run constantly.

26
00:01:10,640 --> 00:01:14,030
But we want to make sure that it only runs when moving.

27
00:01:14,180 --> 00:01:15,530
So to do that, let's get into the script.

28
00:01:16,490 --> 00:01:17,360
So we'll do it.

29
00:01:17,400 --> 00:01:19,940
But this is the physics process, and I'm going to make a brand new function called.

30
00:01:20,250 --> 00:01:23,030
And it just felt like that.

31
00:01:23,430 --> 00:01:24,420
Alex, scroll.

32
00:01:24,450 --> 00:01:24,690
All right.

33
00:01:24,690 --> 00:01:25,310
Off the bottom.

34
00:01:25,580 --> 00:01:26,300
La, la, la, la, la.

35
00:01:26,390 --> 00:01:26,830
Yes, I know.

36
00:01:26,840 --> 00:01:29,310
There's nothing animals can get rid of the animation window.

37
00:01:29,570 --> 00:01:31,930
Don't need that function estimate.

38
00:01:36,820 --> 00:01:37,100
All right.

39
00:01:37,610 --> 00:01:41,570
So the first problem to solve, I need to know if you do this moving.

40
00:01:41,810 --> 00:01:48,050
Well, to do this, I'm using this motion variable motion is a vector, three vectors vector.

41
00:01:48,050 --> 00:01:50,110
And mathematics is not just a coordinate.

42
00:01:50,120 --> 00:01:54,140
Remember, a vector is defined as direction and magnitude.

43
00:01:54,750 --> 00:01:57,020
And the only reason I know that is a Despicable Me movie.

44
00:01:57,080 --> 00:02:02,360
I'm not great at math, but if we take a look at that and we scroll down, we've see that vector has

45
00:02:02,360 --> 00:02:03,230
something called a length.

46
00:02:03,260 --> 00:02:03,920
I can click on that.

47
00:02:04,190 --> 00:02:05,210
It's the vectors length.

48
00:02:05,300 --> 00:02:07,910
In other words, how far is the magnitude?

49
00:02:07,940 --> 00:02:09,380
How much did you move?

50
00:02:09,920 --> 00:02:10,970
And that's exactly what we need.

51
00:02:11,200 --> 00:02:11,780
So let's try.

52
00:02:11,900 --> 00:02:20,360
If motion dots length is greater than zero now, we might have to tweak that a little bit.

53
00:02:21,410 --> 00:02:25,610
It's not impossible that it's going to flick between zero and a very, very small number and give us

54
00:02:25,610 --> 00:02:26,600
some weirdo options.

55
00:02:26,660 --> 00:02:27,740
But for now, we're live at zero.

56
00:02:28,100 --> 00:02:32,330
If it does go wrong, I could change it to a tiny, tiny number like zero point zero zero zero zero

57
00:02:32,330 --> 00:02:32,660
one.

58
00:02:33,140 --> 00:02:36,840
But for now, though, look, if you're moving, what do we do?

59
00:02:36,890 --> 00:02:43,420
Well, we want to get the animation play out and play arms crosswalk.

60
00:02:43,870 --> 00:02:44,070
OK.

61
00:02:44,240 --> 00:02:45,770
First thing is gonna happen when I press play.

62
00:02:46,190 --> 00:02:51,050
If I start moving, I predict the cube dude will start the move animation and never stop it.

63
00:02:51,350 --> 00:02:51,950
Let's see if I'm right.

64
00:02:57,290 --> 00:02:58,250
Why is that happening?

65
00:02:58,610 --> 00:03:00,620
Because we've told it this is a looping animation.

66
00:03:00,900 --> 00:03:02,150
Now, this is a looping animation.

67
00:03:02,390 --> 00:03:05,360
We need to make sure that this is going to stop.

68
00:03:05,400 --> 00:03:05,920
We're not moving.

69
00:03:05,990 --> 00:03:06,770
Let's put it else in here.

70
00:03:06,950 --> 00:03:07,460
Else.

71
00:03:09,550 --> 00:03:10,900
Animation player Dot.

72
00:03:11,060 --> 00:03:11,700
Stop.

73
00:03:19,050 --> 00:03:19,350
OK.

74
00:03:19,470 --> 00:03:21,930
And that looks pretty good, doesn't it?

75
00:03:22,200 --> 00:03:22,530
You know what?

76
00:03:22,620 --> 00:03:24,810
I want to shrink the bullet limit, but not quite yet.

77
00:03:25,170 --> 00:03:29,040
OK, let's change which way Kube do this facings to do that.

78
00:03:29,280 --> 00:03:31,140
I need a function called face forward.

79
00:03:32,620 --> 00:03:38,170
And I'm gonna put it right here on animates this good face of forward branding function.

80
00:03:38,260 --> 00:03:39,250
I know you don't like it.

81
00:03:39,680 --> 00:03:44,740
And and let's get rid of my output window and just makes more space.

82
00:03:44,770 --> 00:03:45,380
OK, so I.

83
00:03:49,810 --> 00:03:50,050
OK.

84
00:03:50,180 --> 00:03:51,890
Function face forwards.

85
00:03:52,700 --> 00:03:54,410
So here's our new problem.

86
00:03:55,010 --> 00:03:58,760
I need to look in the direction we are moving.

87
00:03:59,360 --> 00:04:01,610
So Cube do need some concept of that.

88
00:04:02,120 --> 00:04:06,440
Now, again, let's take a look at motion and figure out exactly what this is.

89
00:04:06,770 --> 00:04:14,300
This vector three right here is how far we have moved since the last frame.

90
00:04:15,470 --> 00:04:22,050
Well, if we take the negative of that, that should give us how far which direction we are moving to.

91
00:04:22,220 --> 00:04:22,490
Right.

92
00:04:22,940 --> 00:04:27,320
So what I can do is say look at.

93
00:04:29,910 --> 00:04:30,840
Vector three.

94
00:04:32,610 --> 00:04:35,410
Negative motion dot x.

95
00:04:36,600 --> 00:04:37,230
Zero.

96
00:04:37,290 --> 00:04:38,370
Because we're not going to look up.

97
00:04:39,990 --> 00:04:41,790
Negative motion.

98
00:04:42,960 --> 00:04:44,000
Dot zet.

99
00:04:47,010 --> 00:04:54,920
OK, but that's not quite enough because look at in 3D needs us to specify an upper direction, it needs

100
00:04:54,920 --> 00:04:59,630
to know which way to tilt the camera because you might be doing a game with full 3D rotation.

101
00:04:59,900 --> 00:05:03,080
Now, we do already have OP defined, so let's just use that.

102
00:05:05,250 --> 00:05:08,820
OK, so the first thing you notice when we jump in here is that we're facing the wrong direction.

103
00:05:09,000 --> 00:05:10,380
Why are we facing the wrong direction?

104
00:05:10,650 --> 00:05:13,440
Because we are doing this even if we're not moving.

105
00:05:13,560 --> 00:05:13,830
Right.

106
00:05:14,040 --> 00:05:18,750
So we're looking at zero zero zero, not what we want.

107
00:05:18,810 --> 00:05:19,380
So let's go.

108
00:05:21,150 --> 00:05:27,120
If not motion dot, x equals zero.

109
00:05:27,150 --> 00:05:34,920
So if there is an X value or not motion dot Z equals equals zero.

110
00:05:35,310 --> 00:05:37,980
If there is a Z value.

111
00:05:38,220 --> 00:05:40,410
So if either is a value, update this.

112
00:05:40,440 --> 00:05:41,510
Let's see how that looks.

113
00:05:43,210 --> 00:05:47,220
We are looking in the right direction, but something's going weird.

114
00:05:47,250 --> 00:05:49,700
And I think what's happening is a mesh is actually facing the runway.

115
00:05:50,300 --> 00:05:50,440
OK.

116
00:05:50,610 --> 00:05:51,270
So how do you fix that?

117
00:05:51,300 --> 00:05:53,850
Well, one thing we can do is we can multiply this value by speed.

118
00:05:59,990 --> 00:06:00,440
There we go.

119
00:06:00,500 --> 00:06:01,460
So we are now.

120
00:06:04,190 --> 00:06:07,070
So now we're using the actual motion.

121
00:06:07,130 --> 00:06:12,350
The actual amount we've moved, right, not just the motion value, but the distance we've moved.

122
00:06:12,620 --> 00:06:14,990
This makes a big difference because if I move this speed.

123
00:06:16,820 --> 00:06:20,900
The motion that you have got is between zero and one, which means we're getting these weird rotations,

124
00:06:20,900 --> 00:06:21,200
right.

125
00:06:21,390 --> 00:06:24,950
Cuba is trying to turn very, very slowly, multiply my speed.

126
00:06:25,160 --> 00:06:28,590
Actually, give us the real value that we see on screen so that we get.

127
00:06:30,540 --> 00:06:32,220
And you know what I'm going to do with the controller?

128
00:06:33,190 --> 00:06:34,710
And we have this lovely fluid motion.

129
00:06:35,540 --> 00:06:37,530
And that feels really good.

130
00:06:37,800 --> 00:06:40,440
Now I'm getting little bits of an accuracy.

131
00:06:40,440 --> 00:06:41,930
We can tweak that against a polish.

132
00:06:42,790 --> 00:06:45,090
And the ball went through the net, which shouldn't have happened.

133
00:06:46,050 --> 00:06:49,530
But from a basic gameplay point of view that start to feel nice.

134
00:06:49,830 --> 00:06:52,740
I am slipping on the things which isn't great.

135
00:06:53,220 --> 00:06:54,990
But overall, I'm pretty happy with that.

136
00:06:55,020 --> 00:06:56,430
So excellent progress.

137
00:06:56,490 --> 00:06:57,530
And I'll see you in the next video.
