1
00:00:05,070 --> 00:00:10,800
Welcome back you lovely people in this video are going to take a pause from adding content to fix a

2
00:00:10,800 --> 00:00:11,660
bug.

3
00:00:11,670 --> 00:00:13,730
I've received this bug report.

4
00:00:13,770 --> 00:00:17,550
Players can waggle on the edge of a coin to pick it up multiple times.

5
00:00:17,730 --> 00:00:22,890
And this can happen by mistake letting players quickly rack up infinite coins.

6
00:00:22,890 --> 00:00:24,960
Well I hadn't noticed this but enough people have.

7
00:00:25,080 --> 00:00:27,410
Let's find out if we can reproduce it.

8
00:00:28,810 --> 00:00:29,080
Right.

9
00:00:29,080 --> 00:00:30,370
This is taken me a few attempts.

10
00:00:30,370 --> 00:00:34,040
This is what I get on this practice can be done.

11
00:00:34,120 --> 00:00:38,290
Observe by 10 coins a 13 coins.

12
00:00:38,320 --> 00:00:39,040
Why.

13
00:00:39,070 --> 00:00:42,980
Because I was able to enter the coin while it was vanishing.

14
00:00:43,000 --> 00:00:48,610
If I leave and enter the coin every time I do that that counts as on body entered.

15
00:00:49,200 --> 00:00:51,600
Okay so what can we do about that.

16
00:00:52,060 --> 00:00:56,350
Well the first thing to do is get the problem from our keyway from our play testers.

17
00:00:56,470 --> 00:01:00,610
So here the problem is that the coins can be picked up while they're vanishings starting the whole process

18
00:01:00,610 --> 00:01:01,100
again.

19
00:01:01,300 --> 00:01:08,270
In other words whenever you enter the coin as long as it exists it's going to start the whole animation.

20
00:01:08,410 --> 00:01:10,780
And when you enter it it'll go back to the beginning and keep doing.

21
00:01:10,780 --> 00:01:12,980
You can loop this indefinitely.

22
00:01:13,150 --> 00:01:14,320
So what's the solution.

23
00:01:14,320 --> 00:01:17,540
Wooden is a variable to check if the coin was taken.

24
00:01:17,680 --> 00:01:20,380
If it's not been taken the player can take it.

25
00:01:20,410 --> 00:01:24,600
Otherwise nothing will happen resolution.

26
00:01:24,660 --> 00:01:29,410
We got to write our code this problem solution resolution is something that I use a lot in board game

27
00:01:29,410 --> 00:01:33,430
design and it's really helpful just to keep track of what exactly needs to be solved.

28
00:01:33,460 --> 00:01:34,510
How can we solve it.

29
00:01:34,540 --> 00:01:35,520
Have we solved it.

30
00:01:35,680 --> 00:01:37,740
So let's get to the resolution.

31
00:01:37,740 --> 00:01:39,540
Can I open the coin seeing.

32
00:01:40,860 --> 00:01:43,350
Everything looks good here let's go into the coin script.

33
00:01:43,560 --> 00:01:53,630
Let's pick a variable called Taken and start as false and on everybody tuti and tillus go if not taken.

34
00:01:53,670 --> 00:01:59,160
Nice and easy to read and then highlight all these three oppressed tab and just shuffle them up one

35
00:01:59,160 --> 00:02:00,110
indentation.

36
00:02:01,190 --> 00:02:02,960
Okay so if it's not taken.

37
00:02:03,000 --> 00:02:03,680
Do these.

38
00:02:03,720 --> 00:02:05,490
There's one more thing I need to do.

39
00:02:05,850 --> 00:02:07,170
I will do this right at the beginning.

40
00:02:07,170 --> 00:02:10,260
The logic taken equals true.

41
00:02:10,820 --> 00:02:12,620
And let's make them actual equals.

42
00:02:12,640 --> 00:02:16,780
Now when I press play Okay let's test the money.

43
00:02:17,770 --> 00:02:18,810
Get a coin.

44
00:02:18,870 --> 00:02:20,980
Having coins we have we have eight coins.

45
00:02:20,980 --> 00:02:22,110
We have nine coins.

46
00:02:22,120 --> 00:02:22,550
Great.

47
00:02:22,600 --> 00:02:25,060
Looks like it's been fixed.

48
00:02:25,060 --> 00:02:29,290
So in this video we've covered two things the first and we've kind of alluded this is the importance

49
00:02:29,290 --> 00:02:30,720
of quality assurance.

50
00:02:30,730 --> 00:02:36,580
Q In other words you need people play testing and not just play testing reporting bugs and you need

51
00:02:36,580 --> 00:02:43,180
them to be as precise as possible and where they can give you as many details on how to reproduce the

52
00:02:43,180 --> 00:02:44,230
bug as they can.

53
00:02:44,230 --> 00:02:49,480
If you have the details and you know the code you can usually figure out where the code is going wrong.

54
00:02:49,610 --> 00:02:53,340
Second thing we've looked at is how to make sure an item can only be triggered once.

55
00:02:53,350 --> 00:02:55,670
If you need a coin to just be picked up once.

56
00:02:55,810 --> 00:02:57,170
Here's how you get that logic.

57
00:02:57,190 --> 00:02:57,500
Great.

58
00:02:57,520 --> 00:03:01,360
We are now officially entomologist vets because we can fix bugs.

59
00:03:01,360 --> 00:03:02,390
The bug is fixed.

60
00:03:02,410 --> 00:03:04,170
Great work and I'll see you on the next video.
