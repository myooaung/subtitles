WEBVTT
1
00:00:04.870 --> 00:00:07.260
Hello again lovely God people in this video.

2
00:00:07.270 --> 00:00:09.010
We're going to make the guards move.

3
00:00:09.010 --> 00:00:11.650
We did a lot of work getting our pathfinding set up.

4
00:00:11.650 --> 00:00:16.460
Now let's actually create a path and we do that with get simple path.

5
00:00:16.840 --> 00:00:20.890
I've been using the path a lot already in this video so let's just talk about that means when we use

6
00:00:21.010 --> 00:00:27.130
navigation to deepen navigation polygon instance we are going to hell godso to make a simple path the

7
00:00:27.130 --> 00:00:32.680
path just like you might expect is a series of points that the Guard is going to have to walk through

8
00:00:32.680 --> 00:00:33.670
a series of waypoints.

9
00:00:33.670 --> 00:00:39.730
It's just you know the path the Guard is going to walk path is really just an array and that array is

10
00:00:39.730 --> 00:00:41.340
a series of vector twos.

11
00:00:41.470 --> 00:00:44.100
So the first vector two is a starting position.

12
00:00:44.130 --> 00:00:48.520
Then the next position then the next position and then we'll tell the guard just to walk between them.

13
00:00:48.520 --> 00:00:50.620
So let's start that off.

14
00:00:50.770 --> 00:00:58.570
We're going to go into our guards scene and open up the guard script which we've already set up as extending

15
00:00:58.570 --> 00:01:00.350
play the action so we're good to go.

16
00:01:00.380 --> 00:01:03.980
And before any further there's a few variables that I know we're going to need.

17
00:01:04.000 --> 00:01:10.300
The Guard is going to move so we're going to need motion and wants motion is a vector too.

18
00:01:10.510 --> 00:01:16.610
We also are going to need some possible destinations.

19
00:01:19.480 --> 00:01:23.590
Possible destinations is going to be the waypoints we place those position 2D.

20
00:01:23.740 --> 00:01:27.820
And we have initialise that every time we run this script which means.

21
00:01:28.430 --> 00:01:34.640
And why that's awesome is it means when we go into Level 1 and we move our position to d around where

22
00:01:34.640 --> 00:01:35.320
are they.

23
00:01:35.450 --> 00:01:36.160
Do you do.

24
00:01:36.170 --> 00:01:37.240
Here's one.

25
00:01:37.310 --> 00:01:42.020
If I was to move that I don't need to change any code God will just say where are they.

26
00:01:42.020 --> 00:01:43.030
Get that position.

27
00:01:43.030 --> 00:01:47.510
So let's set that up as an empty array.

28
00:01:47.540 --> 00:01:51.780
I'm setting it up as an empty Ray because very early in the script we're going to tell it to do aray

29
00:01:51.840 --> 00:01:56.960
specific things and if it doesn't notice an array won't know how to do that so let's just say you're

30
00:01:56.960 --> 00:01:57.440
an array.

31
00:01:57.440 --> 00:01:58.510
Don't worry that there's nothing in you.

32
00:01:58.520 --> 00:02:00.740
You're just an array.

33
00:02:00.740 --> 00:02:07.100
We're also going to have a path which is also an array and more on the subject we need a destination.

34
00:02:07.520 --> 00:02:12.160
So the path is going to that destination and that this nation is going to be a vector too.

35
00:02:12.440 --> 00:02:16.400
While we're doing this I have a couple of export variables I want to do.

36
00:02:16.400 --> 00:02:20.120
One of them is a walk slow down

37
00:02:23.090 --> 00:02:27.710
walk slow down much of my namor put zero point five and I put it as an export variable so when I save

38
00:02:27.710 --> 00:02:30.670
that we click on a guard we can see it here.

39
00:02:30.680 --> 00:02:34.880
That's because if we look at our scripts.

40
00:02:36.120 --> 00:02:37.270
We're going to character.

41
00:02:37.290 --> 00:02:41.460
Speed is already set and our characters more will get speed.

42
00:02:41.520 --> 00:02:47.640
I want this guard to go at half the speed of the player so the player can out on the guard but maybe

43
00:02:47.640 --> 00:02:54.060
later in the game I want to do things like attack dogs or drones or I don't know toddlers.

44
00:02:54.090 --> 00:02:58.500
Something that goes much faster than the player so that's going to give you the option of changing each

45
00:02:58.530 --> 00:03:04.800
NPC speed and then when I want to speed up or slow down the game I can just come in here and change

46
00:03:04.860 --> 00:03:07.030
everyone's baseline speed.

47
00:03:07.410 --> 00:03:11.940
Finally going to need to ponder a couple of notes I want to click on level 1 on doing this so I can

48
00:03:11.980 --> 00:03:12.970
auto complete.

49
00:03:13.050 --> 00:03:14.880
But this is going to be an on ready

50
00:03:17.820 --> 00:03:18.550
variable.

51
00:03:18.720 --> 00:03:20.000
Why is an unready variable.

52
00:03:20.000 --> 00:03:26.340
Because I'm going to refer to a couple of different nodes inside the ready function so they already

53
00:03:26.340 --> 00:03:27.210
have to be there.

54
00:03:27.210 --> 00:03:28.940
I can't wait for ready to call.

55
00:03:30.240 --> 00:03:33.060
One of them is going to be navigation.

56
00:03:35.100 --> 00:03:42.130
Navigation is this navigation tutino and I could just do gets node and all the rest.

57
00:03:42.150 --> 00:03:42.830
But you know what.

58
00:03:42.870 --> 00:03:47.010
We're now getting to the point where we should make a global script so let's do that really quickly.

59
00:03:47.010 --> 00:03:54.390
Let's go find new and just like we did the hobby days ago make a global scribble a capital G and make

60
00:03:54.390 --> 00:03:56.050
sure it's in the script holder.

61
00:04:00.280 --> 00:04:02.230
And I'm going get a project settings.

62
00:04:02.230 --> 00:04:05.120
I'm going to go to auto load find global.

63
00:04:07.430 --> 00:04:09.410
And add it as a singleton.

64
00:04:09.550 --> 00:04:09.850
Great.

65
00:04:09.860 --> 00:04:10.650
There it is.

66
00:04:10.910 --> 00:04:11.210
Okay.

67
00:04:11.210 --> 00:04:17.150
So we have a couple of variables we have a player and a player in there and we have navigation which

68
00:04:17.160 --> 00:04:20.340
can be small g.

69
00:04:20.650 --> 00:04:21.770
And let's put in.

70
00:04:23.450 --> 00:04:25.490
Destinations.

71
00:04:26.510 --> 00:04:31.010
So before we go any further let's go to play a give player a radio function.

72
00:04:31.010 --> 00:04:31.400
Hang on.

73
00:04:31.460 --> 00:04:32.920
I'm kind of rattling through this.

74
00:04:32.930 --> 00:04:35.820
But are you ready.

75
00:04:37.600 --> 00:04:40.180
Global dot player.

76
00:04:40.680 --> 00:04:43.350
He calls himself great.

77
00:04:43.360 --> 00:04:47.680
We should probably put in a script for navigation to day and four destinations so they can do the same

78
00:04:47.680 --> 00:04:47.950
thing.

79
00:04:47.950 --> 00:04:48.720
So let's do that.

80
00:04:48.730 --> 00:04:54.340
Let's go on to navigation to Judy brandnew script and then just like we did before we go into the scripts

81
00:04:54.340 --> 00:05:00.710
folder and it's navigation to be an animation of this empty ask I say function.

82
00:05:00.910 --> 00:05:01.810
Ready.

83
00:05:03.530 --> 00:05:08.890
Global dot navigation Eagles self.

84
00:05:09.830 --> 00:05:11.320
And one more time for the destinations.

85
00:05:11.330 --> 00:05:12.590
Exactly the same process.

86
00:05:12.590 --> 00:05:14.820
So let's get into our scripts.

87
00:05:15.020 --> 00:05:16.530
Call it destination.

88
00:05:19.210 --> 00:05:23.170
On the ready function.

89
00:05:23.170 --> 00:05:28.600
We're going to go global dot destinations he calls self.

90
00:05:28.970 --> 00:05:30.930
Ok that's going to make things a lot easier.

91
00:05:30.930 --> 00:05:35.340
So a little bit of running around but it's going to make things much much simpler going forward.

92
00:05:35.340 --> 00:05:41.070
I can close that these controlled W on Windows and I don't need some of these.

93
00:05:41.080 --> 00:05:41.730
Great.

94
00:05:43.080 --> 00:05:51.270
And the only place where it gets so navigation is going to be global dot navigation.

95
00:05:52.010 --> 00:05:56.320
I also need the destinations so already variable destinations.

96
00:05:56.440 --> 00:06:00.780
He calls global dot destinations.

97
00:06:01.430 --> 00:06:06.730
While I'm here destinations and destination that's not a great variable thing.

98
00:06:06.740 --> 00:06:09.420
They're both very similar So let's say.

99
00:06:09.770 --> 00:06:11.660
Available destinations.

100
00:06:11.660 --> 00:06:12.190
There we go.

101
00:06:12.380 --> 00:06:12.830
Okay.

102
00:06:12.830 --> 00:06:16.900
We're now good to start putting some functionality and let's do that let's get a function ready.

103
00:06:17.120 --> 00:06:23.570
And the first thing we need to do is fill in this array of possible destinations possible destinations.

104
00:06:23.960 --> 00:06:25.130
What is the possible destinations.

105
00:06:25.130 --> 00:06:33.650
Well if we look over here under navigation Tuesday we have destination destination has all of these

106
00:06:33.650 --> 00:06:35.640
child knows and it could be any one of these.

107
00:06:35.660 --> 00:06:43.670
So what of the dos and the go available destinations dont get children.

108
00:06:44.210 --> 00:06:49.970
And what it's going to do is when it runs the ready function it's going to add all of these children

109
00:06:50.210 --> 00:06:51.610
to that array.

110
00:06:51.860 --> 00:06:59.000
And that is amazing because now I don't have to worry about where they are or how many there are or

111
00:06:59.000 --> 00:07:00.750
if they're in the right order.

112
00:07:00.890 --> 00:07:02.840
God knows you can handle it for me.

113
00:07:03.080 --> 00:07:06.130
The next thing we have to do is make a path and that's going in you function.

114
00:07:06.140 --> 00:07:11.140
So let's make a make path function.

115
00:07:13.160 --> 00:07:19.460
Let's talk very quickly about what is going to happen in my path when the guard wants to make a path.

116
00:07:19.460 --> 00:07:23.100
The Guard is going to look at all the possible Dallas Nations and pick one at random.

117
00:07:23.120 --> 00:07:26.090
The first thing to do is go randomise.

118
00:07:26.420 --> 00:07:27.740
Why am I doing randomise.

119
00:07:27.740 --> 00:07:32.960
Because the way the computers deal with random numbers is they look at the time when the script is first

120
00:07:32.960 --> 00:07:36.910
run and then they create a list based on an algorithm.

121
00:07:36.920 --> 00:07:41.690
If I randomize it it's going to tell it to do that again if I don't every time it runs this script it's

122
00:07:41.690 --> 00:07:45.280
going to come up with the exact same list some needs randomize.

123
00:07:45.360 --> 00:07:45.880
OK.

124
00:07:46.430 --> 00:07:51.380
So we've randomizing and I'm going to make a variable called next destination of place you're going

125
00:07:51.380 --> 00:07:52.250
to annexe.

126
00:07:52.280 --> 00:07:54.090
What is the next destination.

127
00:07:54.260 --> 00:07:58.580
Well it's from the array of possible destinations.

128
00:07:58.970 --> 00:08:05.570
And I'm going to pick a random integer that is modulated by the.

129
00:08:06.600 --> 00:08:09.910
Possible destinations.

130
00:08:10.680 --> 00:08:14.780
Size count the number of children that destination has.

131
00:08:14.820 --> 00:08:19.130
Use that as your maximum level and pick a random number.

132
00:08:19.140 --> 00:08:22.220
We now have a random destination set.

133
00:08:22.260 --> 00:08:30.870
So all we have to do is update path so path equals navigation and we use a function of navigation to

134
00:08:30.870 --> 00:08:33.750
day which is get simple half

135
00:08:36.480 --> 00:08:40.390
What's get simple path get simple path is a built in function of navigation 2D.

136
00:08:40.590 --> 00:08:45.780
Let's take a look at the documentation for its on his classes and type navigation Trudy.

137
00:08:46.590 --> 00:08:52.750
And here get civil path takes a start and end and an optional boolean.

138
00:08:53.140 --> 00:08:55.280
Okay so here is my challenge for you.

139
00:08:55.290 --> 00:09:00.190
I would like you to use the documentation to put the right arguments and get simple path.

140
00:09:00.210 --> 00:09:03.920
In other words we need a start position and an end position.

141
00:09:03.930 --> 00:09:07.260
So pause the video and see if you can figure out what needs to go here.

142
00:09:07.740 --> 00:09:09.750
When you come back I'll show you my solution.

143
00:09:09.750 --> 00:09:11.530
Don't worry if it's a little confusing.

144
00:09:11.640 --> 00:09:13.150
Give it a shot and see wiegand.

145
00:09:17.790 --> 00:09:20.890
Okay what does it need to be or is close this.

146
00:09:20.910 --> 00:09:25.790
And if you say this script Well the start position is where I am right now.

147
00:09:25.830 --> 00:09:31.150
Okay so let's just give me my position the next place is going to be next.

148
00:09:31.220 --> 00:09:32.440
Destination.

149
00:09:32.740 --> 00:09:35.030
Got global position.

150
00:09:35.130 --> 00:09:40.050
And just to be sure let's use my global position because I know I might accidentally move a container

151
00:09:40.050 --> 00:09:41.300
node and that would be embarrassing.

152
00:09:41.310 --> 00:09:45.510
The third one is optional so let's leave it alone for now and that is make path done this.

153
00:09:45.550 --> 00:09:49.820
Everything we need to set up half only that moment.

154
00:09:49.920 --> 00:09:56.250
So let's actually move let's go above make path and when I make a new function and this one is going

155
00:09:56.250 --> 00:10:01.530
to be a process function is going to happen every text and what's going to happen every tick is we're

156
00:10:01.530 --> 00:10:06.740
going to navigate navigate is going to be a function there's going to check.

157
00:10:06.750 --> 00:10:07.830
Do you need to move.

158
00:10:07.830 --> 00:10:08.700
Do I need to wait.

159
00:10:08.700 --> 00:10:10.160
Do I need to make a new path.

160
00:10:10.230 --> 00:10:12.900
Well make path has already set up so that's great.

161
00:10:12.900 --> 00:10:19.000
Let's make the navigate function function and navigate.

162
00:10:21.420 --> 00:10:24.710
And we have two lines between each function.

163
00:10:24.780 --> 00:10:28.010
OK so the navigate function is going to be the thing that checks.

164
00:10:28.010 --> 00:10:29.270
Do we need to move.

165
00:10:29.270 --> 00:10:31.030
Do we need to come up with a new path.

166
00:10:31.040 --> 00:10:32.240
Or do we need to wait.

167
00:10:32.450 --> 00:10:35.550
So in navigate Here's one to do mimic a numeric report.

168
00:10:35.570 --> 00:10:40.580
Distance as in me my distance to the destination in fact we call it distance to destination just make

169
00:10:40.580 --> 00:10:43.450
it really clear what is distance to destination.

170
00:10:43.460 --> 00:10:52.130
Well it's my position not distance to just like angle to really call function distance to what well

171
00:10:52.370 --> 00:10:54.940
is the distance to the next thing in the path.

172
00:10:54.940 --> 00:11:00.760
So let's do path zero and lift-off path correctly.

173
00:11:00.860 --> 00:11:05.290
Now remember path is an array so zero is what it's the offsets.

174
00:11:05.300 --> 00:11:09.960
How many spaces do you have to move along that rate just like we didn't Lomi lips.

175
00:11:09.980 --> 00:11:16.250
Now you might be thinking if we do have zero isn't it always just going to find the first place on the

176
00:11:16.250 --> 00:11:16.670
path.

177
00:11:16.670 --> 00:11:18.940
How do we move onto the next part of the path.

178
00:11:18.980 --> 00:11:19.840
You're right.

179
00:11:19.850 --> 00:11:25.970
However if we look back at this example navigation path we could say okay you've got to start position

180
00:11:25.970 --> 00:11:28.750
zero now going to position 1 position 2.

181
00:11:28.970 --> 00:11:35.540
Or we could use remove position 0 and that means position what becomes the news hero and then we don't

182
00:11:35.540 --> 00:11:37.340
have to update that function at all.

183
00:11:37.490 --> 00:11:42.290
So when we get to actually updating the path which you're going to do in a moment or are we going to

184
00:11:42.290 --> 00:11:48.770
do is remove position 0 and if there's only one thing in the sign in the array we know let's make a

185
00:11:48.770 --> 00:11:49.710
brand new array.

186
00:11:49.800 --> 00:11:56.050
So we also want to make sure that our destination is Path zura.

187
00:11:57.650 --> 00:11:59.180
So that's the basics.

188
00:11:59.180 --> 00:12:00.570
Now it's a loop condition.

189
00:12:00.830 --> 00:12:03.110
If you're not at the destination yet.

190
00:12:03.140 --> 00:12:11.930
If distance is greater than in let's put in another variable as an export variable I wish we call this

191
00:12:11.930 --> 00:12:14.910
navigation stop threshold.

192
00:12:14.930 --> 00:12:16.100
Awful name isn't it.

193
00:12:16.260 --> 00:12:17.850
I spell threshold.

194
00:12:18.180 --> 00:12:22.090
I don't think it is knows which navigation stop threshold was this.

195
00:12:22.130 --> 00:12:27.880
Well I want to make sure that there's some leeway if you're close to the destination.

196
00:12:28.190 --> 00:12:30.580
You can now set the next point.

197
00:12:30.590 --> 00:12:33.200
The reason I'm doing this is in case the guy bumps into something.

198
00:12:33.200 --> 00:12:36.580
Or in case they get there between frames and the like.

199
00:12:36.600 --> 00:12:38.180
Let's give it a margin of error.

200
00:12:38.180 --> 00:12:40.930
Say 5 pixels so if you're within 5 pixels.

201
00:12:41.120 --> 00:12:48.470
So if you're with it if you're if the distance is greater than the navigation stop threshold What are

202
00:12:48.470 --> 00:12:48.890
you going to do.

203
00:12:48.890 --> 00:12:49.970
You're going to move.

204
00:12:50.390 --> 00:12:51.570
And it is not.

205
00:12:51.710 --> 00:12:56.690
So if you are closer than that you're going to update the path.

206
00:12:57.700 --> 00:13:01.970
Now I'm making a lot of these function names up as I go so I'm going to have to go in and fill these

207
00:13:01.970 --> 00:13:02.540
in.

208
00:13:02.540 --> 00:13:05.840
Let's start with what should we start with think moveless.

209
00:13:05.980 --> 00:13:07.480
I mean I like to move it.

210
00:13:07.550 --> 00:13:09.330
I'm so sorry.

211
00:13:09.350 --> 00:13:11.270
Function mode.

212
00:13:11.330 --> 00:13:12.740
What's the move going to be.

213
00:13:13.040 --> 00:13:16.100
Well it's going to change motion because that's what we deal with.

214
00:13:16.190 --> 00:13:19.200
Motion is going to be destination.

215
00:13:19.610 --> 00:13:25.880
So where you're going minus where you are and let's normalize that just make the move with a really

216
00:13:25.880 --> 00:13:32.330
nice smooth and we're going to move by a speed that's going to be the global low.

217
00:13:32.330 --> 00:13:35.390
It's got to be max speed.

218
00:13:35.390 --> 00:13:41.750
There it is multiplied by slowdown what we call that we call it.

219
00:13:41.750 --> 00:13:45.610
Walk slow down there it is.

220
00:13:46.510 --> 00:13:47.540
So what now set motion.

221
00:13:47.540 --> 00:13:49.500
So if you're moving this is your only motion.

222
00:13:49.730 --> 00:13:56.880
So when we need to do now is move and slide motion.

223
00:13:57.010 --> 00:13:58.350
Well that felt good didn't it.

224
00:13:58.520 --> 00:14:02.720
So we have moved done now when you'd update path as part of the path.

225
00:14:02.720 --> 00:14:05.400
Probably under make a path that seems like a sensible place to put it.

226
00:14:09.770 --> 00:14:12.010
To function.

227
00:14:12.080 --> 00:14:20.210
This is going to be update half how k.

228
00:14:20.300 --> 00:14:22.930
Come on then it doesn't crash out and give us some space.

229
00:14:22.930 --> 00:14:24.010
I can see what I'm doing.

230
00:14:24.360 --> 00:14:27.340
OK so what's up take PATH going to be its only path.

231
00:14:27.470 --> 00:14:30.970
Dont remove 0.

232
00:14:31.010 --> 00:14:36.890
Now we don't want to do that every time because we we only have one thing in the path we need to make

233
00:14:36.890 --> 00:14:37.510
a new path.

234
00:14:37.520 --> 00:14:42.240
If we try and remove path 0 and then move along the path we're going to crash.

235
00:14:42.860 --> 00:14:53.640
So we an if statement less do if the path signs it will to one we need to make path.

236
00:14:54.680 --> 00:14:56.140
Else.

237
00:14:58.430 --> 00:14:59.920
Remove the path.

238
00:15:00.110 --> 00:15:04.190
So if there is exactly one entering the path we know we've reached our destination let's make a new

239
00:15:04.190 --> 00:15:05.010
path.

240
00:15:05.120 --> 00:15:09.350
Now what's going to happen here is the Guard is going to go running around the place like a well like

241
00:15:09.350 --> 00:15:11.420
a Pachinko ball ride like a pinball.

242
00:15:11.420 --> 00:15:13.100
So let's put a timer in here.

243
00:15:13.250 --> 00:15:20.010
I'm going to go into my to you view into the guard section and let's make a time and note.

244
00:15:20.600 --> 00:15:24.130
And let's give it a 3 second time and really a signal.

245
00:15:24.150 --> 00:15:27.230
So on time out is going to connect to guard.

246
00:15:28.220 --> 00:15:29.260
Great.

247
00:15:29.520 --> 00:15:33.560
We should have an on timeout function right there.

248
00:15:33.870 --> 00:15:35.290
OK.

249
00:15:35.970 --> 00:15:41.640
If time out which is a child knows a lot more too much but that is stopped.

250
00:15:41.660 --> 00:15:43.190
And that's a built in function of timer.

251
00:15:43.200 --> 00:15:44.410
So I'm fine with it.

252
00:15:44.430 --> 00:15:49.850
So if the time it isn't running run the time is a start isn't it.

253
00:15:51.670 --> 00:15:52.650
Else.

254
00:15:54.240 --> 00:15:55.880
No one elf else.

255
00:15:56.050 --> 00:15:57.010
Make the path.

256
00:15:57.010 --> 00:15:58.680
Well I was to say else.

257
00:15:58.690 --> 00:16:02.080
Make the path not ethnic rip-off else make the path.

258
00:16:02.260 --> 00:16:04.970
Let's just run through on a day because I went through kind of fast there.

259
00:16:05.620 --> 00:16:11.580
When you update the path if you have exactly one entry left which we know it's going to be entry zero

260
00:16:11.860 --> 00:16:15.180
which means you're at your destination is the timer stopped.

261
00:16:15.250 --> 00:16:18.420
If it is stopped start it else.

262
00:16:18.460 --> 00:16:23.820
Make the path it will not get to this elfs or this else.

263
00:16:23.980 --> 00:16:26.850
If the timer is running which is great.

264
00:16:26.950 --> 00:16:32.950
We can now just rely on the time all of the time I have to do make half.

265
00:16:33.040 --> 00:16:35.510
In fact you know what we don't need this one at all do it.

266
00:16:35.710 --> 00:16:41.080
If passes size is one and the timer stopped start the time.

267
00:16:41.410 --> 00:16:44.500
If the timer isn't stopped is not going to do anything it's going to just wait.

268
00:16:44.530 --> 00:16:45.820
That's exactly what we need.

269
00:16:45.940 --> 00:16:46.160
OK.

270
00:16:46.180 --> 00:16:50.910
How we looking we've got o see a changed distance a destination.

271
00:16:50.920 --> 00:16:56.950
And I didn't change his a distance to destination so we have distance to destinations that should be

272
00:16:56.950 --> 00:16:57.150
good.

273
00:16:57.190 --> 00:16:57.720
Okay.

274
00:16:57.970 --> 00:17:00.680
I suspect we're going to have an interesting bug.

275
00:17:00.700 --> 00:17:02.710
Let's press play and find out if this works.

276
00:17:05.630 --> 00:17:06.880
It doesn't.

277
00:17:06.890 --> 00:17:09.130
Now here's why.

278
00:17:09.290 --> 00:17:19.580
Gado is loading things in order and navigation to D is setting its positioning global after the guards

279
00:17:19.580 --> 00:17:21.140
are running their script.

280
00:17:21.140 --> 00:17:27.210
Let's fix that by just moving navigation 2D up to the very top of the level.

281
00:17:27.240 --> 00:17:28.830
So now if I run it again.

282
00:17:32.660 --> 00:17:33.870
We should.

283
00:17:35.020 --> 00:17:36.220
Have some movement.

284
00:17:36.240 --> 00:17:38.820
There's a guard moving he starts.

285
00:17:39.970 --> 00:17:40.960
There he goes again.

286
00:17:41.030 --> 00:17:42.390
A couple of things.

287
00:17:42.430 --> 00:17:44.260
Some of these guys are getting stuck.

288
00:17:44.260 --> 00:17:46.150
This guard is stuck there all stuck right.

289
00:17:46.570 --> 00:17:48.140
And they're not turning.

290
00:17:48.160 --> 00:17:49.610
Well let's change both of those.

291
00:17:52.160 --> 00:17:55.280
Let's go to them move functions and click over here to tomorrow.

292
00:17:55.460 --> 00:18:00.840
And let's do look at destination.

293
00:18:01.190 --> 00:18:01.600
Okay.

294
00:18:01.790 --> 00:18:04.030
So that should solve that problem right now.

295
00:18:04.610 --> 00:18:08.450
We should have guards who do not moonwalk.

296
00:18:08.600 --> 00:18:09.230
He says No way.

297
00:18:09.230 --> 00:18:11.850
He stuck in a corner he's facing the right way.

298
00:18:12.260 --> 00:18:13.070
One more thing.

299
00:18:13.100 --> 00:18:15.110
If you're on a wall you should find something.

300
00:18:15.110 --> 00:18:15.860
No sir.

301
00:18:16.040 --> 00:18:17.100
Let's go back to move.

302
00:18:17.150 --> 00:18:26.780
And right here the form of an slight listed if it is on a wall is on the wall is just like is on floor

303
00:18:26.780 --> 00:18:29.470
and is on ceiling and it's built into kinematic body today.

304
00:18:29.480 --> 00:18:32.440
If you're on the wall make a path.

305
00:18:35.040 --> 00:18:35.870
There goes a guard.

306
00:18:35.910 --> 00:18:40.260
And he's stark and he's made a new path and it's just tweaking around the edge there.

307
00:18:40.290 --> 00:18:44.610
Now I need to make sure that they don't get stuck like that.

308
00:18:44.700 --> 00:18:46.130
They're cutting a lot of corners.

309
00:18:46.140 --> 00:18:50.610
Even with all the tweaks you made so inside this gets simple path let's put in.

310
00:18:50.610 --> 00:18:51.260
False.

311
00:18:51.260 --> 00:18:52.680
That's that third optional thing.

312
00:18:52.680 --> 00:18:56.130
If it's true it's can make nice optimized curves and try and hard corners.

313
00:18:56.130 --> 00:18:58.080
But we don't want that this too many right angles.

314
00:18:58.080 --> 00:18:59.670
Let's see how that works.

315
00:19:01.190 --> 00:19:06.570
And we should now see the guards able to enter and exit rooms nice safely.

316
00:19:10.100 --> 00:19:11.300
Fantastic.

317
00:19:11.330 --> 00:19:15.640
Let me just make sure that the guards are on the right collision map so kaloogian layers right there

318
00:19:16.180 --> 00:19:17.820
that's going to the guard scene.

319
00:19:18.080 --> 00:19:20.030
And what's your collision.

320
00:19:20.660 --> 00:19:21.410
You're not that at all.

321
00:19:21.440 --> 00:19:21.820
OK.

322
00:19:21.920 --> 00:19:28.810
You think you're a player in a lot of play such as going to project settings in a general down to the

323
00:19:28.820 --> 00:19:33.860
do to do you know down to 2D physics layer.

324
00:19:33.870 --> 00:19:34.510
There it is.

325
00:19:34.520 --> 00:19:36.370
And we need guards.

326
00:19:36.410 --> 00:19:39.570
You are now a brand new layer.

327
00:19:39.590 --> 00:19:44.570
So you are a Guards layer which are spelt wrong and they're wrong that were wrong.

328
00:19:44.660 --> 00:19:48.300
Gee you a not a G you a.

329
00:19:48.830 --> 00:19:49.980
You now guard.

330
00:19:50.120 --> 00:19:51.220
You can see the player.

331
00:19:51.260 --> 00:19:52.590
You can see walls.

332
00:19:52.610 --> 00:19:54.320
You cannot see security cameras.

333
00:19:54.350 --> 00:19:55.420
You cannot see guards.

334
00:19:55.420 --> 00:20:01.980
So now the guards shouldn't be able to use magic x-ray vision to see me through walls this find out.

335
00:20:05.780 --> 00:20:06.650
Can you see me.

336
00:20:06.650 --> 00:20:07.980
No.

337
00:20:08.670 --> 00:20:09.480
But now you can.

338
00:20:09.540 --> 00:20:10.580
No you can't.

339
00:20:11.960 --> 00:20:13.590
Outstanding.

340
00:20:13.640 --> 00:20:15.070
And that brings us to the end of the video.

341
00:20:15.080 --> 00:20:19.970
In this video we've looked at how to get simple path how to move the next point of a path how to make

342
00:20:19.970 --> 00:20:20.970
pathfinding work.

343
00:20:21.110 --> 00:20:26.480
We've also made sure that the guards move to a new position when they get stuck on a wall and that they're

344
00:20:26.480 --> 00:20:27.630
facing the right direction.

345
00:20:27.830 --> 00:20:29.080
We covered a lot so.

346
00:20:29.120 --> 00:20:29.900
Excellent work.

347
00:20:29.930 --> 00:20:31.340
And I'll see you in the next video.
