WEBVTT
1
00:00:01.040 --> 00:00:03.910
Let's look at some Git essentials so we're prepared for

2
00:00:03.910 --> 00:00:06.310
the demo on using Git in just a moment.

3
00:00:06.310 --> 00:00:10.160
If you're an expert Git user, then this might be a little bit redundant for you,

4
00:00:10.160 --> 00:00:13.040
so feel free to skim or skip ahead.

5
00:00:13.040 --> 00:00:17.770
Now a quick disclaimer if you're a Git beginner. This is not a Git course.

6
00:00:17.770 --> 00:00:20.600
Git has literally hundreds of commands that you could run.

7
00:00:20.600 --> 00:00:21.030
However,

8
00:00:21.030 --> 00:00:24.670
many developers use the same handful of commands day to day, and

9
00:00:24.670 --> 00:00:28.120
we'll be focused on a very small subset of Git commands that we'll

10
00:00:28.120 --> 00:00:31.840
need in order to work with DevOps tooling.

11
00:00:31.840 --> 00:00:34.360
Let's look at a basic Git workflow that we might use

12
00:00:34.360 --> 00:00:36.620
when working by ourselves on some code.

13
00:00:36.620 --> 00:00:40.050
It starts with a remote repository that we then can use the

14
00:00:40.050 --> 00:00:43.510
git clone command to move to our local machines inside of

15
00:00:43.510 --> 00:00:45.340
our development environment.

16
00:00:45.340 --> 00:00:48.750
From there, if we want to add new files to the repository,

17
00:00:48.750 --> 00:00:50.820
we can move them into the same working directory

18
00:00:50.820 --> 00:00:53.250
that contains our local repository.

19
00:00:53.250 --> 00:00:56.200
Then, when we've edited them to our satisfaction,

20
00:00:56.200 --> 00:00:59.380
we can use the git add command to move them from the working

21
00:00:59.380 --> 00:01:02.740
directory into something called the staging area.

22
00:01:02.740 --> 00:01:03.440
From there,

23
00:01:03.440 --> 00:01:08.210
we can use the git commit command to add the files to the local repository,

24
00:01:08.210 --> 00:01:11.640
potentially with a message explaining what we've just done.

25
00:01:11.640 --> 00:01:13.320
And finally, when we're ready,

26
00:01:13.320 --> 00:01:16.020
we can use the git push command to send all of our

27
00:01:16.020 --> 00:01:18.940
changes up into the remote repository.

28
00:01:18.940 --> 00:01:23.340
So let's recap some of the basic concepts that are inside of this workflow.

29
00:01:23.340 --> 00:01:25.280
Now, we'll look at these concepts later,

30
00:01:25.280 --> 00:01:28.550
but let's make sure we have them all before we jump into the demo.

31
00:01:28.550 --> 00:01:31.160
First, there's the concept of remotes.

32
00:01:31.160 --> 00:01:34.090
This is where all of our code lives when it's not on our

33
00:01:34.090 --> 00:01:37.160
machine, inside of remote repositories.

34
00:01:37.160 --> 00:01:39.900
Then when we want to bring code down to our machine,

35
00:01:39.900 --> 00:01:43.840
we create a local repository that we can work with.

36
00:01:43.840 --> 00:01:45.870
When we're ready to add code to the repository,

37
00:01:45.870 --> 00:01:50.010
we create a new file and add it to the staging area, where it lives,

38
00:01:50.010 --> 00:01:52.540
ready to be committed to our repository.

39
00:01:52.540 --> 00:01:53.610
Now just to be clear,

40
00:01:53.610 --> 00:01:57.770
all these changes in the staging area and the local repository happen

41
00:01:57.770 --> 00:02:01.240
inside of our working directories on our machine.

42
00:02:01.240 --> 00:02:07.000
So now that we've squared away all of these concepts, we should be ready to practice it ourselves.

