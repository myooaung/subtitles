1
00:00:00,940 --> 00:00:04,550
In this demo, we'll be deploying CloudFormation stacks.

2
00:00:04,550 --> 00:00:08,900
We'll start by creating a CloudFormation stack in the CloudFormation Designer.

3
00:00:08,900 --> 00:00:12,390
Then we'll review the CloudFormation console during the

4
00:00:12,390 --> 00:00:15,570
resource creation process so we can see all the steps that

5
00:00:15,570 --> 00:00:17,940
CloudFormation takes to create our resource.

6
00:00:17,940 --> 00:00:21,010
After that, we'll update the stack and add some tags to

7
00:00:21,010 --> 00:00:23,240
the resource using CloudFormation,

8
00:00:23,240 --> 00:00:25,890
and then we'll redeploy it and see those changes.

9
00:00:25,890 --> 00:00:26,390
From there,

10
00:00:26,390 --> 00:00:29,970
we'll deploy a separate stack using the AWS CLI

11
00:00:29,970 --> 00:00:32,110
instead of the CloudFormation console.

12
00:00:32,110 --> 00:00:37,320
So let's go over to the CloudFormation console now and get started. Over here in

13
00:00:37,320 --> 00:00:41,540
the AWS Management Console, we can go to the Services drop‑down and look up

14
00:00:41,540 --> 00:00:46,340
CloudFormation, and we should be able to click on that and then create a new

15
00:00:46,340 --> 00:00:48,830
stack inside of the CloudFormation console.

16
00:00:48,830 --> 00:00:51,780
Yours probably won't look like this, as I have a bunch of other

17
00:00:51,780 --> 00:00:54,220
stacks created here from previous projects.

18
00:00:54,220 --> 00:00:55,140
However,

19
00:00:55,140 --> 00:00:58,410
you can click the Create Stack button regardless of the screen you're on,

20
00:00:58,410 --> 00:01:01,850
and you'll probably get an option to click with new

21
00:01:01,850 --> 00:01:03,740
resources or with existing resources.

22
00:01:03,740 --> 00:01:06,890
We'll use the with new resources, which is the standard. The other

23
00:01:06,890 --> 00:01:09,700
option is available if you want to incorporate additional resources

24
00:01:09,700 --> 00:01:12,240
that already exist inside of your template.

25
00:01:12,240 --> 00:01:13,700
Now there's a few options here.

26
00:01:13,700 --> 00:01:17,230
If we already have a template file uploaded in Amazon S3

27
00:01:17,230 --> 00:01:20,260
or locally that we want to upload, we could use the first option.

28
00:01:20,260 --> 00:01:22,070
Otherwise, we could use a sample template,

29
00:01:22,070 --> 00:01:25,650
which would allow us to create a CloudFormation template with previously

30
00:01:25,650 --> 00:01:29,530
existing templates that AWS provides for us like a Ruby on Rails

31
00:01:29,530 --> 00:01:32,050
application or a WordPress blog, but for right now,

32
00:01:32,050 --> 00:01:34,520
we're going to use the Create template in designer option,

33
00:01:34,520 --> 00:01:37,740
and we'll click Create template in designer right below that.

34
00:01:37,740 --> 00:01:38,940
Then, in this section,

35
00:01:38,940 --> 00:01:42,000
the first thing we'll need to do is click the Template tab here

36
00:01:42,000 --> 00:01:45,170
rather than the Components tab, and we'll need to go over to our

37
00:01:45,170 --> 00:01:48,890
code for this section of the course. Inside of the demos for the

38
00:01:48,890 --> 00:01:50,320
first demo in this module,

39
00:01:50,320 --> 00:01:54,870
we should have a file that's called sns‑stack‑json. We're going to copy the

40
00:01:54,870 --> 00:01:59,760
entire thing, and then we'll paste it into that section of the template here.

41
00:01:59,760 --> 00:02:03,390
We'll paste over everything that's already there so that the only thing left

42
00:02:03,390 --> 00:02:05,710
is what we just pasted in from our file.

43
00:02:05,710 --> 00:02:08,490
Then we can click the Refresh button in the top right and see

44
00:02:08,490 --> 00:02:10,640
the resource that's included inside of it.

45
00:02:10,640 --> 00:02:12,840
So let's review what this code does.

46
00:02:12,840 --> 00:02:14,750
We have a Resources section in here,

47
00:02:14,750 --> 00:02:18,010
which describes the different resources that we're working with. In this

48
00:02:18,010 --> 00:02:21,870
case, only one exists inside of this file called My Topic,

49
00:02:21,870 --> 00:02:25,240
and its type is an AWS SNS topic.

50
00:02:25,240 --> 00:02:27,010
It also has two different properties,

51
00:02:27,010 --> 00:02:29,970
one for its display name and one for its topic name.

52
00:02:29,970 --> 00:02:34,340
From here, it should allow us to create the resource using CloudFormation.

53
00:02:34,340 --> 00:02:37,630
So let's validate this template by pressing the checkmark here,

54
00:02:37,630 --> 00:02:40,320
and then we'll go over and upload it after it's been

55
00:02:40,320 --> 00:02:43,210
validated and confirmed as legitimate JSON that we could

56
00:02:43,210 --> 00:02:45,240
use as a CloudFormation template.

57
00:02:45,240 --> 00:02:46,000
From here,

58
00:02:46,000 --> 00:02:49,950
we can scroll down and click Next, and skip the Parameter

59
00:02:49,950 --> 00:02:52,010
section, because we don't have any parameters, but we will

60
00:02:52,010 --> 00:02:52,980
need to give this a name.

61
00:02:52,980 --> 00:02:59,690
So let's call this devops‑sns, and then we can click Next. From here, we could

62
00:02:59,690 --> 00:03:04,840
add additional key value pairs and tags for our stack that we're deploying, or

63
00:03:04,840 --> 00:03:08,770
set the permissions for how we want to deploy these resources. By default, it

64
00:03:08,770 --> 00:03:12,850
will use the IAM user and the permissions associated with that IAM user that

65
00:03:12,850 --> 00:03:16,310
we're signed in as, but we could also choose to use permissions related to a

66
00:03:16,310 --> 00:03:18,140
particular deployment role.

67
00:03:18,140 --> 00:03:21,030
So let's skip over the advanced options and click Next at the

68
00:03:21,030 --> 00:03:24,000
bottom. In the Review section, we'll also scroll down to the bottom

69
00:03:24,000 --> 00:03:27,290
and click Create Stack, and this should start the process of

70
00:03:27,290 --> 00:03:29,400
creating our resources. Now, right now,

71
00:03:29,400 --> 00:03:32,580
there are no resources whatsoever in the stack, but if I refresh it,

72
00:03:32,580 --> 00:03:35,240
you'll see there's the myTopic resource that's currently

73
00:03:35,240 --> 00:03:37,480
in the status of CREATE_IN_PROGRESS.

74
00:03:37,480 --> 00:03:39,180
If we go back to the Events section,

75
00:03:39,180 --> 00:03:41,940
you'll notice that it starts at the bottom by starting the

76
00:03:41,940 --> 00:03:45,010
creation process for the stack and then the resources

77
00:03:45,010 --> 00:03:48,740
within that stack, in this case, the myTopic SNS topic.

78
00:03:48,740 --> 00:03:49,170
Finally,

79
00:03:49,170 --> 00:03:54,220
it finishes creating the myTopic resource, and then it finishes the stack,

80
00:03:54,220 --> 00:03:56,550
which means that if we go back to the Resource section,

81
00:03:56,550 --> 00:04:00,180
this AWS SNS topic resource should be complete. And if we

82
00:04:00,180 --> 00:04:02,840
wanted to verify that it was actually created,

83
00:04:02,840 --> 00:04:07,340
we can go to the Services section and look up SNS, go over to the Simple

84
00:04:07,340 --> 00:04:10,480
Notification Service, and then look at the topics we have in here.

85
00:04:10,480 --> 00:04:10,930
Currently,

86
00:04:10,930 --> 00:04:13,300
I have one left over from a previous project, but we

87
00:04:13,300 --> 00:04:18,400
also have this myAwesomSNSTopic, which, if we look at the Tag section,

88
00:04:18,400 --> 00:04:20,440
doesn't have any tags right now.

89
00:04:20,440 --> 00:04:23,280
So let's say we wanted to add tags to this topic.

90
00:04:23,280 --> 00:04:26,130
If we go back to the code for this section,

91
00:04:26,130 --> 00:04:30,470
you'll see that I also have an sns‑stack‑v2.json file.

92
00:04:30,470 --> 00:04:31,760
Let's copy this here,

93
00:04:31,760 --> 00:04:34,220
and we're going to take this in a moment and put it back in

94
00:04:34,220 --> 00:04:36,740
the AWS console and update this stack.

95
00:04:36,740 --> 00:04:39,380
Now I want to point out before we do this that I've added some

96
00:04:39,380 --> 00:04:42,970
code here on line 8 about tags for this resource.

97
00:04:42,970 --> 00:04:46,820
We now have a key value pair of department and Engineering, so

98
00:04:46,820 --> 00:04:49,140
that we can associate this topic with our engineering

99
00:04:49,140 --> 00:04:52,040
department for any costs that it accrues.

100
00:04:52,040 --> 00:04:54,240
So let's go back to the AWS console,

101
00:04:54,240 --> 00:04:57,200
go back over to CloudFormation, and then let's go over to the

102
00:04:57,200 --> 00:05:00,170
Stack Info section, and let's update this.

103
00:05:00,170 --> 00:05:01,860
Let's click the Update button here,

104
00:05:01,860 --> 00:05:05,200
and we'll do the Edit template in designer one more time, and Click View

105
00:05:05,200 --> 00:05:08,730
in Designer to go to that section to update it. Now I'm going to paste

106
00:05:08,730 --> 00:05:10,670
over the previous template that we have,

107
00:05:10,670 --> 00:05:12,570
and then I'll refresh it, and you'll notice that nothing

108
00:05:12,570 --> 00:05:15,130
really changed, because we haven't added any resources; we

109
00:05:15,130 --> 00:05:17,190
just added tags to this resource.

110
00:05:17,190 --> 00:05:20,610
I can validate the template again if I'd like, and then upload it

111
00:05:20,610 --> 00:05:24,340
into AWS so that we can use it for CloudFormation.

112
00:05:24,340 --> 00:05:26,510
So now that we've done this, we'll be able to go through the exact

113
00:05:26,510 --> 00:05:29,940
same process as before. We'll click Next, Next again,

114
00:05:29,940 --> 00:05:33,940
scroll to the bottom and press Next one more time, and update the stack.

115
00:05:33,940 --> 00:05:35,370
Now, if I go to the Resources section,

116
00:05:35,370 --> 00:05:37,640
you'll see we still have the same resource, but we should

117
00:05:37,640 --> 00:05:41,220
start to see a few different events here about updating this

118
00:05:41,220 --> 00:05:43,340
stack and the resources inside of it.

119
00:05:43,340 --> 00:05:48,120
So currently the update is in progress for our SNS topic called myTopic,

120
00:05:48,120 --> 00:05:50,070
and if I refresh this a few times,

121
00:05:50,070 --> 00:05:53,200
it should eventually show that we've finished updating myTopic, and

122
00:05:53,200 --> 00:05:56,510
we've finished updating the entire stack. To confirm that this worked,

123
00:05:56,510 --> 00:05:59,850
we can go over to the Simple Notification Service, scroll down in the

124
00:05:59,850 --> 00:06:03,130
Tags section, and while we don't see any right now, if we refresh the

125
00:06:03,130 --> 00:06:04,650
page and then try this again,

126
00:06:04,650 --> 00:06:10,440
we should now see this department Engineering tag associated with our SNS topic.

127
00:06:10,440 --> 00:06:12,870
So these are some of the basics about how you could start to use

128
00:06:12,870 --> 00:06:18,020
CloudFormation to describe the resources that you want inside of stacks, and

129
00:06:18,020 --> 00:06:22,010
then deploy them into AWS, and then make changes as we want to change what

130
00:06:22,010 --> 00:06:25,650
our services and our applications look like, using the descriptions of their

131
00:06:25,650 --> 00:06:34,000
infrastructure. Now in the next section, we'll look at how we could do this not using the AWS console, but instead using the AWS CLI.

