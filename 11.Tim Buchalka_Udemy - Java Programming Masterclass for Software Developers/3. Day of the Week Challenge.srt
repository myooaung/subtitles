1
1

00:00:04,680  -->  00:00:07,380
Alright, it's time now for a challenge this
2

2

00:00:07,380  -->  00:00:08,969
one's called the day of the week
3

3

00:00:08,969  -->  00:00:11,850
challeng. Alright so your challenge is
4

4

00:00:11,850  -->  00:00:14,250
to write a method with the name print
5

5

00:00:14,250  -->  00:00:16,320
day of the week, it's got one parameter
6

6

00:00:16,320  -->  00:00:19,890
of type int, so name that a parameter day
7

7

00:00:19,890  -->  00:00:22,140
now the method shouldn't return any
8

8

00:00:22,140  -->  00:00:24,300
value and a hint there is the word void
9

9

00:00:24,300  -->  00:00:27,000
using a switch statement print Sunday
10

10

00:00:27,000  -->  00:00:28,560
Monday then through Tuesday Wednesday
11

11

00:00:28,560  -->  00:00:29,910
Thursday Friday Saturday
12

12

00:00:29,910  -->  00:00:33,570
if the in parameter day is as the value
13

13

00:00:33,570  -->  00:00:36,750
of 0 1 2 3 4 5 or 6 respectively so
14

14

00:00:36,750  -->  00:00:38,340
depending on the value that has passed
15

15

00:00:38,340  -->  00:00:40,380
we'll print a different day and if none
16

16

00:00:40,380  -->  00:00:41,700
of those are true, in other words you've
17

17

00:00:41,700  -->  00:00:43,620
got a value outside of that range you'd
18

18

00:00:43,620  -->  00:00:46,559
print invalid day instead, so using that
19

19

00:00:46,559  -->  00:00:48,840
you do that using a switch statement but
20

20

00:00:48,840  -->  00:00:50,880
it's a bonus right a second other
21

21

00:00:50,880  -->  00:00:53,010
solution that instead of using a switch
22

22

00:00:53,010  -->  00:00:56,250
uses if then else and call your project
23

23

00:00:56,250  -->  00:00:58,320
when you created in intellij day of the
24

24

00:00:58,320  -->  00:01:00,270
week challenge and just to note also
25

25

00:01:00,270  -->  00:01:02,309
that the challenge text is available in
26

26

00:01:02,309  -->  00:01:04,710
the resources section if you're the type
27

27

00:01:04,710  -->  00:01:06,090
of person who likes having the challenge
28

28

00:01:06,090  -->  00:01:07,469
text to refer to while you're going
29

29

00:01:07,469  -->  00:01:09,000
through the challenge download that from
30

30

00:01:09,000  -->  00:01:11,430
the resources section alright so now
31

31

00:01:11,430  -->  00:01:13,770
it's time to pause the video and attempt
32

32

00:01:13,770  -->  00:01:15,360
the challenge when you finish to come
33

33

00:01:15,360  -->  00:01:16,409
back and then you can check your
34

34

00:01:16,409  -->  00:01:18,600
solution with mine so pause the video
35

35

00:01:18,600  -->  00:01:21,869
now alright so how did you get on
36

36

00:01:21,869  -->  00:01:23,130
hopefully you managed to figure out a
37

37

00:01:23,130  -->  00:01:25,200
solution to that challenge let's hop
38

38

00:01:25,200  -->  00:01:26,640
back in to IntelliJ and go through it
39

39

00:01:26,640  -->  00:01:29,010
now step-by-step, so you can see here
40

40

00:01:29,010  -->  00:01:30,000
that I've already created a project
41

41

00:01:30,000  -->  00:01:32,430
called day of the week challenge and
42

42

00:01:32,430  -->  00:01:34,080
have already created the main method as
43

43

00:01:34,080  -->  00:01:36,060
well so the first thing we're going to
44

44

00:01:36,060  -->  00:01:37,740
do is break this problem up into smaller
45

45

00:01:37,740  -->  00:01:40,530
parts now if you recall the first
46

46

00:01:40,530  -->  00:01:43,259
requirement was to write a method that
47

47

00:01:43,259  -->  00:01:45,390
has one inter parameter with the name
48

48

00:01:45,390  -->  00:01:48,390
day and it doesn't return anything it's
49

49

00:01:48,390  -->  00:01:49,380
actually the first sentence in the
50

50

00:01:49,380  -->  00:01:51,150
challenge so to do that we're going to
51

51

00:01:51,150  -->  00:01:53,820
go into our code our public class
52

52

00:01:53,820  -->  00:01:56,130
outside of the main method and before
53

53

00:01:56,130  -->  00:01:59,159
the closing write curly brace and we're
54

54

00:01:59,159  -->  00:02:05,270
going to top private static void and
55

55

00:02:05,270  -->  00:02:09,720
we're going to type print day of the
56

56

00:02:09,720  -->  00:02:11,640
week of capitalizing each letter other
57

57

00:02:11,640  -->  00:02:14,010
than the first word print parentheses in
58

58

00:02:14,010  -->  00:02:17,370
an int day so into the type in the
59

59

00:02:17,370  -->  00:02:18,599
name of the parameter
60

60

00:02:18,599  -->  00:02:21,780
and open I left a mic or add a left
61

61

00:02:21,780  -->  00:02:23,040
curly brace and the white ones added
62

62

00:02:23,040  -->  00:02:24,299
automatically by IntelliJ
63

63

00:02:24,299  -->  00:02:26,249
so that's the method definition and
64

64

00:02:26,249  -->  00:02:28,200
again I'm using the word private they're
65

65

00:02:28,200  -->  00:02:29,670
that public and private will be
66

66

00:02:29,670  -->  00:02:32,159
explained later in the course for now if
67

67

00:02:32,159  -->  00:02:34,230
you've used a private or public or in
68

68

00:02:34,230  -->  00:02:35,760
fact haven't used either that's
69

69

00:02:35,760  -->  00:02:37,859
acceptable and was the challenge will
70

70

00:02:37,859  -->  00:02:39,269
still work at this point in time
71

71

00:02:39,269  -->  00:02:42,030
so let's our method definition so far on
72

72

00:02:42,030  -->  00:02:45,060
line nine now the next step is to write
73

73

00:02:45,060  -->  00:02:47,069
a switch statement using that parameter
74

74

00:02:47,069  -->  00:02:49,019
day so let's write an empty switch
75

75

00:02:49,019  -->  00:02:50,879
statement so to do that I'm just going
76

76

00:02:50,879  -->  00:02:54,469
to type switch and in parentheses and
77

77

00:02:54,469  -->  00:02:58,290
the word day which is our parameter in
78

78

00:02:58,290  -->  00:02:59,519
parentheses and then we're going to add
79

79

00:02:59,519  -->  00:03:01,109
a left curly brace and the right ones
80

80

00:03:01,109  -->  00:03:03,150
added automatically by IntelliJ,
81

81

00:03:03,150  -->  00:03:04,169
so that's what we call an empty switch
82

82

00:03:04,169  -->  00:03:06,030
statement empty because it hasn't got
83

83

00:03:06,030  -->  00:03:07,709
any code within the left or right curly
84

84

00:03:07,709  -->  00:03:09,840
braces within the code block so now that
85

85

00:03:09,840  -->  00:03:11,459
we've done that the next step is to
86

86

00:03:11,459  -->  00:03:13,109
write our case statements I'm going to
87

87

00:03:13,109  -->  00:03:15,299
check each day we're going to check the
88

88

00:03:15,299  -->  00:03:16,799
value and depending on the value print
89

89

00:03:16,799  -->  00:03:19,260
out an appropriate day if you recall the
90

90

00:03:19,260  -->  00:03:21,000
requirement was to print Sunday Monday
91

91

00:03:21,000  -->  00:03:23,459
through Saturday depending on the value
92

92

00:03:23,459  -->  00:03:25,709
of the day parameter, so zero was Sunday
93

93

00:03:25,709  -->  00:03:27,720
one means Monday and so on and the last
94

94

00:03:27,720  -->  00:03:30,120
one was six and that's for Saturday.
95

95

00:03:30,120  -->  00:03:32,159
So let's add our first case statement so
96

96

00:03:32,159  -->  00:03:34,019
within the switch statement in the code
97

97

00:03:34,019  -->  00:03:35,849
block we're going to type firstly case
98

98

00:03:35,849  -->  00:03:38,909
space is 0 colon so that's our first
99

99

00:03:38,909  -->  00:03:41,189
case for what 0 then we're going to top
100

100

00:03:41,189  -->  00:03:43,709
s out and press tab so that system app
101

101

00:03:43,709  -->  00:03:46,049
type print lynyrd and in case you're
102

102

00:03:46,049  -->  00:03:48,720
over sunday and then after that we're
103

103

00:03:48,720  -->  00:03:52,709
going to talk break semicolon so if Neil
104

104

00:03:52,709  -->  00:03:55,169
handle case 0 which is Sunday so if the
105

105

00:03:55,169  -->  00:03:57,239
value 0 we're going to print out Sunday
106

106

00:03:57,239  -->  00:03:58,979
so then we want to get us go through and
107

107

00:03:58,979  -->  00:04:01,349
add the other case statements for the
108

108

00:04:01,349  -->  00:04:02,519
other days of the week so let's go ahead
109

109

00:04:02,519  -->  00:04:04,319
and do that it doesn't matter where you
110

110

00:04:04,319  -->  00:04:06,060
are on the line if you type a case when
111

111

00:04:06,060  -->  00:04:07,949
he did intellij we take type it there
112

112

00:04:07,949  -->  00:04:10,079
and press the colon and that's how
113

113

00:04:10,079  -->  00:04:12,750
intelligent over to the left well then
114

114

00:04:12,750  -->  00:04:15,680
I'm going to print Monday because case 1
115

115

00:04:15,680  -->  00:04:18,769
importantly making sure we add the break
116

116

00:04:18,769  -->  00:04:25,930
case 2 : gonna be Tuesday
117

117

00:04:25,930  -->  00:04:32,720
break again case three for Wednesday and
118

118

00:04:32,720  -->  00:04:35,140
again printout for Wednesday he gets out
119

119

00:04:35,140  -->  00:04:41,090
another break case four s out and
120

120

00:04:41,090  -->  00:04:42,500
it's going to be Thursday so you're
121

121

00:04:42,500  -->  00:04:46,100
getting there a break two more here case
122

122

00:04:46,100  -->  00:04:53,000
five print it out Friday and outbreak in
123

123

00:04:53,000  -->  00:05:01,460
case six Saturday break. Alright so
124

124

00:05:01,460  -->  00:05:04,030
that's our seven days of the week now
125

125

00:05:04,030  -->  00:05:06,620
identified cases zero through six and
126

126

00:05:06,620  -->  00:05:08,540
we've got a different day printing out
127

127

00:05:08,540  -->  00:05:10,970
and here for each one. Alright so at this
128

128

00:05:10,970  -->  00:05:12,740
point now we've done that the next step
129

129

00:05:12,740  -->  00:05:14,870
is to decide how we're going to handle
130

130

00:05:14,870  -->  00:05:16,970
the fact or having a handle or value
131

131

00:05:16,970  -->  00:05:19,520
outside of the values of what zero three
132

132

00:05:19,520  -->  00:05:21,320
six in any other scenario we're meant to
133

133

00:05:21,320  -->  00:05:24,290
print out the text invalid day so how do
134

134

00:05:24,290  -->  00:05:26,210
we do that well the easiest way the
135

135

00:05:26,210  -->  00:05:27,380
switch statement is just to use the
136

136

00:05:27,380  -->  00:05:30,820
default, so you just type default and
137

137

00:05:30,820  -->  00:05:33,380
that means basically any other values
138

138

00:05:33,380  -->  00:05:37,490
we're going to print out in valid day,
139

139

00:05:37,490  -->  00:05:38,630
so really that's just saying that's going
140

140

00:05:38,630  -->  00:05:44,170
to move that over I need an s out there
141

141

00:05:44,170  -->  00:05:47,860
I'm just going to move that over
142

142

00:05:47,860  -->  00:05:49,760
selecting and then holding down shift
143

143

00:05:49,760  -->  00:05:51,440
and pressing tab to go back sorts in
144

144

00:05:51,440  -->  00:05:53,570
line, we don't really need a break there
145

145

00:05:53,570  -->  00:05:55,280
because it's the last line anyway but it
146

146

00:05:55,280  -->  00:05:57,740
won't hurt if we do add one so to be
147

147

00:05:57,740  -->  00:05:59,170
consistent we can actually add one there.
148

148

00:05:59,170  -->  00:06:01,850
So that's it for the method now, so that
149

149

00:06:01,850  -->  00:06:03,740
should work but obviously we can't just
150

150

00:06:03,740  -->  00:06:05,960
assume it is, we have to test it out so
151

151

00:06:05,960  -->  00:06:07,430
what I'm going to do is call the method
152

152

00:06:07,430  -->  00:06:08,870
and we're going to try it with some
153

153

00:06:08,870  -->  00:06:10,130
different parameters to make sure it
154

154

00:06:10,130  -->  00:06:11,870
does work and we're going to call those
155

155

00:06:11,870  -->  00:06:14,930
parameters from within the main method
156

156

00:06:14,930  -->  00:06:17,470
so I'm going to start by typing print
157

157

00:06:17,470  -->  00:06:20,090
day of the week we'll start with
158

158

00:06:20,090  -->  00:06:22,070
negative one first the negative one is
159

159

00:06:22,070  -->  00:06:24,530
outside of the range zero three six so
160

160

00:06:24,530  -->  00:06:26,270
that should return invalid a so let's
161

161

00:06:26,270  -->  00:06:30,530
right-click and run that and we've got
162

162

00:06:30,530  -->  00:06:31,790
invalid day showing and I'll just move
163

163

00:06:31,790  -->  00:06:34,880
this down to the bottom it's a little
164

164

00:06:34,880  -->  00:06:36,710
bit easy to read invalid day showing so
165

165

00:06:36,710  -->  00:06:38,540
that's working good so far.
166

166

00:06:38,540  -->  00:06:41,750
So let's try each day the best way to
167

167

00:06:41,750  -->  00:06:44,150
try each day would be to copy and paste
168

168

00:06:44,150  -->  00:06:45,980
one and I've changed the value to zero
169

169

00:06:45,980  -->  00:06:48,200
zero is going to be Sunday I'm going to
170

170

00:06:48,200  -->  00:06:52,070
copy and paste I'm going to change the
171

171

00:06:52,070  -->  00:06:55,280
argument for each one two three four
172

172

00:06:55,280  -->  00:06:59,390
five six so I've now tested hopefully
173

173

00:06:59,390  -->  00:07:01,910
Sunday through Saturday and of course
174

174

00:07:01,910  -->  00:07:03,440
the first line was the one that tested
175

175

00:07:03,440  -->  00:07:05,150
and a number that's outside that range.
176

176

00:07:05,150  -->  00:07:09,410
So let's actually run that and we can
177

177

00:07:09,410  -->  00:07:10,250
see at the output there we've been
178

178

00:07:10,250  -->  00:07:11,450
invalidated and Sunday Monday Tuesday
179

179

00:07:11,450  -->  00:07:13,790
Wednesday Thursday Friday Saturday that
180

180

00:07:13,790  -->  00:07:15,230
appears to be working nicely and that's
181

181

00:07:15,230  -->  00:07:17,210
great then what other test would be to
182

182

00:07:17,210  -->  00:07:19,310
have a number those larger than six
183

183

00:07:19,310  -->  00:07:20,810
because we've tested a number that's
184

184

00:07:20,810  -->  00:07:23,990
less than zero let's just place it one
185

185

00:07:23,990  -->  00:07:25,580
more I'm going to put in the valley
186

186

00:07:25,580  -->  00:07:27,710
seven so seven should also give us
187

187

00:07:27,710  -->  00:07:31,610
invalid day we'll run that we're going
188

188

00:07:31,610  -->  00:07:32,960
to validate down the bottom and validate
189

189

00:07:32,960  -->  00:07:34,850
the top so that's looking good
190

190

00:07:34,850  -->  00:07:37,390
looks like we've solved the challenge.
191

191

00:07:37,390  -->  00:07:39,440
Alright so what we're going to do now is
192

192

00:07:39,440  -->  00:07:41,120
we're going to attempt the bonus part of
193

193

00:07:41,120  -->  00:07:43,700
the challenge if you call the bonus was
194

194

00:07:43,700  -->  00:07:46,190
to create a solution that instead of
195

195

00:07:46,190  -->  00:07:48,530
using the switch statement used if then
196

196

00:07:48,530  -->  00:07:50,990
else is dead so what I'm going to do is
197

197

00:07:50,990  -->  00:07:54,140
comment out this switch component of our
198

198

00:07:54,140  -->  00:07:55,730
day of the week method that's going to
199

199

00:07:55,730  -->  00:07:57,530
comment that out right down into
200

200

00:07:57,530  -->  00:07:59,960
including the right curly brace that's
201

201

00:07:59,960  -->  00:08:01,850
lining up with a switch there we don't
202

202

00:08:01,850  -->  00:08:03,170
want to comment at this last one down
203

203

00:08:03,170  -->  00:08:04,520
here because that's part of the method
204

204

00:08:04,520  -->  00:08:07,550
so I'm going to comment it out or
205

205

00:08:07,550  -->  00:08:09,680
comment it out now and I'm not gonna do
206

206

00:08:09,680  -->  00:08:10,970
start writing at the top instead I'll
207

207

00:08:10,970  -->  00:08:12,470
leave that code committed out so you can
208

208

00:08:12,470  -->  00:08:14,300
refer to that if you happen to download
209

209

00:08:14,300  -->  00:08:17,060
the source code so if then else it is
210

210

00:08:17,060  -->  00:08:18,350
very similar making sure that we're
211

211

00:08:18,350  -->  00:08:20,990
within our first left curly brace after
212

212

00:08:20,990  -->  00:08:22,280
the method name we've got to start
213

213

00:08:22,280  -->  00:08:26,060
typing if parentheses day is equal to
214

214

00:08:26,060  -->  00:08:27,290
zero so we're testing that in
215

215

00:08:27,290  -->  00:08:28,790
parentheses if that's the case we'll
216

216

00:08:28,790  -->  00:08:31,310
open a code block and then we'll just
217

217

00:08:31,310  -->  00:08:36,380
print out Sunday so that's a test there
218

218

00:08:36,380  -->  00:08:38,599
obviously for Sunday and for the rest of
219

219

00:08:38,599  -->  00:08:40,220
the days we can just print using else
220

220

00:08:40,220  -->  00:08:45,560
statements so I can put it else if then
221

221

00:08:45,560  -->  00:08:48,680
parentheses day is equal to one remember
222

222

00:08:48,680  -->  00:08:51,290
to use two equal signs there they're
223

223

00:08:51,290  -->  00:08:52,279
going to print out
224

224

00:08:52,279  -->  00:08:56,569
for Monday and what we can literally do
225

225

00:08:56,569  -->  00:08:58,310
there then is put these two line these
226

226

00:08:58,310  -->  00:09:01,790
three lines here then we'll put this and
227

227

00:09:01,790  -->  00:09:11,870
paste it in okay so then what we'll do
228

228

00:09:11,870  -->  00:09:13,069
is we'll change the values so we've got
229

229

00:09:13,069  -->  00:09:21,139
0 1 2 3 4 5 6 they want to change the
230

230

00:09:21,139  -->  00:09:25,509
value so - he's going to be Tuesday
231

231

00:09:25,509  -->  00:09:35,410
threes Wednesday 4 is the first day 5 is Friday
232

232

00:09:35,410  -->  00:09:40,819
lastly 6 is Saturday then how do we
233

233

00:09:40,819  -->  00:09:42,800
handle any other values that's quite
234

234

00:09:42,800  -->  00:09:44,779
simple we can just use an else so else
235

235

00:09:44,779  -->  00:09:46,370
is basically a catch-all for everything
236

236

00:09:46,370  -->  00:09:48,559
else everything else that hasn't been
237

237

00:09:48,559  -->  00:09:52,160
tested already we printed out he gets
238

238

00:09:52,160  -->  00:09:58,309
out again in a valid day. Okay so now
239

239

00:09:58,309  -->  00:10:00,529
that we've entered that, we've know we
240

240

00:10:00,529  -->  00:10:02,930
know already from calling the print day
241

241

00:10:02,930  -->  00:10:04,730
of the week method when we had a switch
242

242

00:10:04,730  -->  00:10:05,990
in there that we had all the values
243

243

00:10:05,990  -->  00:10:08,300
needed to test everything, so you can run
244

244

00:10:08,300  -->  00:10:11,750
that again and have a look at our output
245

245

00:10:11,750  -->  00:10:13,220
we've went validate and some time on
246

246

00:10:13,220  -->  00:10:14,420
that use there was a twister fraud I
247

247

00:10:14,420  -->  00:10:16,699
said of that an invalid day, so that's an
248

248

00:10:16,699  -->  00:10:19,730
alternate or bonus version of our
249

249

00:10:19,730  -->  00:10:22,069
challenge which uses if-then-else
250

250

00:10:22,069  -->  00:10:23,750
instead of using the switch statement.
251

251

00:10:23,750  -->  00:10:25,579
So basically the code is doing the
252

252

00:10:25,579  -->  00:10:27,319
same we're getting the same exact same
253

253

00:10:27,319  -->  00:10:30,680
output as we did using the if else that
254

254

00:10:30,680  -->  00:10:33,129
we did when using the switch statement
255

255

00:10:33,129  -->  00:10:35,750
unless you can see that's proof if you
256

256

00:10:35,750  -->  00:10:37,220
will there for every challenge there
257

257

00:10:37,220  -->  00:10:39,170
aren't many ways to solve them and
258

258

00:10:39,170  -->  00:10:40,339
you've seen a couple of ways of solving
259

259

00:10:40,339  -->  00:10:42,290
the exact same solution here now so
260

260

00:10:42,290  -->  00:10:43,579
that's it, I hope you enjoyed that and
261

261

00:10:43,579  -->  00:10:45,350
got a layer of this challenge let's move
262

262

00:10:45,350  -->  00:10:48,519
on now to the next video.
