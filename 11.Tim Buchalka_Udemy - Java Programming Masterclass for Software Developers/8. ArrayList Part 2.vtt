WEBVTT
1
1

00:00:05.210  -->  00:00:09.480
in the previous video we got introduced
to the list interface and we also
2

2

00:00:09.480  -->  00:00:14.870
started talking about the ArrayList
class so we are going to resume our grocery list
3

3

00:00:14.870  -->  00:00:19.120
Java class we are going to finish that off and we are
going to see how this all works in
4

4

00:00:19.120  -->  00:00:22.720
operation so got the code to add a
grocery items you can see on the screen
5

5

00:00:22.720  -->  00:00:26.450
there we have the code to print the
list of the items in the grocery grocery
6

6

00:00:26.450  -->  00:00:30.220
list and also we can modify but one
thing we haven't really done and we can also
7

7

00:00:30.220  -->  00:00:34.540
remove as well but one thing we haven't
added yet is the ability to query the
8

8

00:00:34.540  -->  00:00:37.370
ArrayList to find an item in our
9

9

00:00:37.370  -->  00:00:40.820
grocery list in other words so let's have a
look at doing that we're going to create
10

10

00:00:40.820  -->  00:00:45.280
a new method do that and the method is going to be find item so down here and
11

11

00:00:45.280  -->  00:00:57.420
type.....so we are going to receive a string we are gonna search for that
12

12

00:00:57.420  -->  00:01:01.830
in our ArrayList now what we could do one
option would be to look at the code
13

13

00:01:01.830  -->  00:01:03.940
similar to what's on line 15
14

14

00:01:03.940  -->  00:01:09.280
we can actually use a for loop and go through each index entry and compare it
15

15

00:01:09.280  -->  00:01:13.020
to search item and see whether it's
a match and that would certainly work
16

16

00:01:13.020  -->  00:01:16.750
but where possible especially when
you're using built-in Java classes like
17

17

00:01:16.750  -->  00:01:20.390
using the ArrayList you want to see
whether there's an ability to shortcut
18

18

00:01:20.390  -->  00:01:25.570
some functionality and to do things for
you so there is one example of this
19

19

00:01:25.570  -->  00:01:29.610
would be using the contains functions
and I'm going to type the code and we'll talk
20

20

00:01:29.610  -->  00:01:40.710
about it so...and if we have just a
21

21

00:01:40.710  -->  00:01:44.280
look at the code I can hold down the
command key and press or click on
22

22

00:01:44.280  -->  00:01:49.320
contains you can see it returns if this list
contains the specified element more
23

23

00:01:49.320  -->  00:01:54.290
formally returns true if and only if the
list contains at least one element I won't go
24

24

00:01:54.290  -->  00:01:57.630
into the other details about equals and so forth
because you'll be learning about that later
25

25

00:01:57.630  -->  00:02:02.950
in the course the bottom line is that the
code from ArrayList the code that comes
26

26

00:02:02.950  -->  00:02:07.400
with ArrayList classes is part of Java has
got the ability to do a fast search for
27

27

00:02:07.400  -->  00:02:11.200
us so we could still write the code to do
it manually going through and comparing
28

28

00:02:11.200  -->  00:02:12.070
each element
29

29

00:02:12.070  -->  00:02:15.930
why would you want to do that given that
the code is being in built into the
30

30

00:02:15.930  -->  00:02:18.540
ArrayList class to do that for you
31

31

00:02:18.540  -->  00:02:22.030
so not only has it been added but has been
optimized has been written by the people
32

32

00:02:22.030  -->  00:02:26.290
who created Java and so you really want
it where possible use that functionality
33

33

00:02:26.290  -->  00:02:31.340
so this case all we have to do literally
is type....select the name of our list
34

34

00:02:31.340  -->  00:02:36.560
Grocery list.....and
it'll return true or false true if it
35

35

00:02:36.560  -->  00:02:42.030
can find the search item in the array list
and false if not so with one line
36

36

00:02:42.030  -->  00:02:46.670
of code where we are able to do that
search so what we're going to do next is we are gonna leave
37

37

00:02:46.670  -->  00:02:49.920
that line of code for the moment we are
gonna type something a little bit different
38

38

00:02:49.920  -->  00:02:54.670
because what we wanted do is return the item
that's actually in the grocery list so
39

39

00:02:54.670  -->  00:02:59.160
we don't want to just figure out that its
in their we want to actually return the item back
40

40

00:02:59.160  -->  00:03:03.480
because you can see that the method we've
created is returning a string actually
41

41

00:03:03.480  -->  00:03:07.900
what I'll do is comment out the
exists because we won't need that now I wanted to show you how
42

42

00:03:07.900  -->  00:03:11.600
that actually works because we are gonna use
something similar though using the index
43

43

00:03:11.600  -->  00:03:15.650
function or index of function so to do that you type....
44

44

00:03:15.650  -->  00:03:24.700
....and what that does it does is a
45

45

00:03:24.700  -->  00:03:29.820
similar thing in that it actually searches
the array lists for you and it finds the
46

46

00:03:29.820  -->  00:03:31.310
item that you've
47

47

00:03:31.310  -->  00:03:35.510
passed in this case search item and
returns the index position of our
48

48

00:03:35.510  -->  00:03:39.260
array lists of that item if we have a
look at the code again holding
49

49

00:03:39.260  -->  00:03:41.250
command
50

50

00:03:41.250  -->  00:03:45.200
press index it returns a negative one if this
list does not contain the element
51

51

00:03:45.200  -->  00:03:49.340
otherwise it returns the element so we
can do check here to see if its equal
52

52

00:03:49.340  -->  00:03:54.010
to negative one then we know that it
didn't exist so what we can do there
53

53

00:03:54.010  -->  00:04:01.350
after this line is we can put....
54

54

00:04:01.350  -->  00:04:12.900
...and will put the code in here to
55

55

00:04:12.900  -->  00:04:19.200
return null...
56

56

00:04:19.200  -->  00:04:23.560
...so that's gonna
57

57

00:04:23.560  -->  00:04:28.700
return a number corresponding to the
index position in our ArrayList for the
58

58

00:04:28.700  -->  00:04:33.400
search item now if that number returned
is less than 0 we could actually put
59

59

00:04:33.400  -->  00:04:39.160
less than its probably better to do that so... easier  to read so if it is less than 0 sorry
60

60

00:04:39.160  -->  00:04:40.820
if it's greater than
61

61

00:04:40.820  -->  00:04:45.040
equal to 0 we need to return it
otherwise if it's not greater than equal to 0 it
62

62

00:04:45.040  -->  00:04:48.700
means it has to be less than zero it is going to return null its the code down here its going to
63

63

00:04:48.700  -->  00:04:53.720
be executed so essentially we are saying
here if it has found the element we want
64

64

00:04:53.720  -->  00:04:58.950
to return the contents that's in that
particular ArrayList entry back as the
65

65

00:04:58.950  -->  00:05:03.580
return data otherwise we are going to return null
now which means that we weren't able to
66

66

00:05:03.580  -->  00:05:07.630
find at this point we now have a fully
featured grocery list we got the ability
67

67

00:05:07.630  -->  00:05:12.580
to add a grocery item we can print out the
list we can modify an item in other words
68

68

00:05:12.580  -->  00:05:16.240
update the contents we can remove an
item from the list and we can now also
69

69

00:05:16.240  -->  00:05:20.970
query the grocery list and figure out
whether there's a particular item that
70

70

00:05:20.970  -->  00:05:26.160
exists in their let's go back to our main class and write some code
71

71

00:05:26.160  -->  00:05:32.610
now to start work on manipulating this list so
go back to the main java and add
72

72

00:05:32.610  -->  00:05:40.800
a couple of things we're gonna add a.....
73

73

00:05:40.800  -->  00:05:48.220
...so that we can get some
input from the keyboard and
74

74

00:05:48.220  -->  00:05:58.450
we also want a grocery list so...
75

75

00:05:58.450  -->  00:06:00.460
.....
76

76

00:06:00.460  -->  00:06:07.090
...now that's not coming up and
go back and have a look at the
77

77

00:06:07.090  -->  00:06:11.310
grocery list class what I have actually done
is actually when I created the class in
78

78

00:06:11.310  -->  00:06:15.410
the previous video i put in the wrong
place you can see what's happened so you
79

79

00:06:15.410  -->  00:06:20.820
can see we've got the main class using com.timbuchalka
but if we look at the grocery list there is
80

80

00:06:20.820  -->  00:06:24.500
no package and that means that I put it in the wrong place what we can do
81

81

00:06:24.500  -->  00:06:30.460
is click it once to selecte it
and drag it into com.timbuchalka and release the
82

82

00:06:30.460  -->  00:06:34.880
mouse and that actually says do you want to
move so the good thing about doing this is
83

83

00:06:34.880  -->  00:06:38.690
that any references to that code
should be updated automatically so we
84

84

00:06:38.690  -->  00:06:44.630
had an error in our main.Java but now if I click on
refactor that error should go away
85

85

00:06:44.630  -->  00:06:48.780
and the red underline disappeared and you can see
that that fixed itself
86

86

00:06:48.780  -->  00:06:52.880
and that's because we put it into the
right class so again using the IntelliJ
87

87

00:06:52.880  -->  00:06:56.740
tools where possible is a great way to
save checking a lot of your code and
88

88

00:06:56.740  -->  00:06:58.820
making sure you code is more accurate
89

89

00:06:58.820  -->  00:07:06.030
so now to the main method we are going to start typing some code.....
90

90

00:07:06.030  -->  00:07:14.990
...its gonna be instructions on how to use
91

91

00:07:14.990  -->  00:07:20.300
the grocery list....so we are going to continue
92

92

00:07:20.300  -->  00:07:32.230
processing until the user decides to exit
we are going to type a prompt....
93

93

00:07:32.230  -->  00:07:36.280
.....
94

94

00:07:36.280  -->  00:07:49.100
....
95

95

00:07:49.100  -->  00:07:58.470
.....
96

96

00:07:58.470  -->  00:08:09.840
...and if I select number 1 that's
97

97

00:08:09.840  -->  00:08:12.300
going to be the print outs so....
98

98

00:08:12.300  -->  00:08:26.830
....
99

99

00:08:26.830  -->  00:08:47.540
....all this little method we are going to write in this
100

100

00:08:47.540  -->  00:08:54.640
class hopefully in this video and case...
101

101

00:08:54.640  -->  00:09:03.060
....case six is a way to get out
102

102

00:09:03.060  -->  00:09:10.950
.....and that's all we
need to do so that our that's our main
103

103

00:09:10.950  -->  00:09:15.060
method what we now need to do
is write some of these other methods and
104

104

00:09:15.060  -->  00:09:18.030
essentially just to be clear base on what the user has typed in we're going to perform
105

105

00:09:18.030  -->  00:09:22.550
one of the following methods and you can
see pretty well yourself it is self explanatory which
106

106

00:09:22.550  -->  00:09:25.990
methods are which depending which option is
selected and what I'm going to do is I'm
107

107

00:09:25.990  -->  00:09:30.120
going to paste in some code here  to save a bit of
time for the print instructions so
108

108

00:09:30.120  -->  00:09:36.990
come down here and paste that and you can see
the list of options on the screen so option 0
109

109

00:09:36.990  -->  00:09:40.690
print choice options which is the menu option
option 1 is putting the list of items
110

110

00:09:40.690  -->  00:09:44.980
2 is to add an item to the list 3
111

111

00:09:44.980  -->  00:09:50.620
4 and 5 are modify, remove and search and
number 6 is to quit the application so
112

112

00:09:50.620  -->  00:09:55.510
that's
pretty straight forward next to write is the addItem so let's
113

113

00:09:55.510  -->  00:10:05.940
write that one so..... and what we
114

114

00:10:05.940  -->  00:10:10.990
gonna do is we gonna do a......
115

115

00:10:10.990  -->  00:10:24.190
.....
116

116

00:10:24.190  -->  00:10:27.730
...
117

117

00:10:27.730  -->  00:10:32.990
...so what ever they have type we are going to add
that as an item so that's the addItem you
118

118

00:10:32.990  -->  00:10:37.180
see it's pretty straightforward you can see
that with one line scanner.nextLine its allowing us to
119

119

00:10:37.180  -->  00:10:40.830
type in anything until return is pressed
and it's going to take that whatever
120

120

00:10:40.830  -->  00:10:45.510
their typed and add it to the grocery class
using the addItem and of course that's going
121

121

00:10:45.510  -->  00:10:50.240
to come back here and groceryList.add  and
add that to our array lists and notice as
122

122

00:10:50.240  -->  00:10:54.570
I'm filling in some of these
methods they are becoming highlighted and highlighted
123

123

00:10:54.570  -->  00:10:59.630
as I mentioned in a previous
is IntelliJ's way of saying it in use modify you can see
124

124

00:10:59.630  -->  00:11:03.970
at the moment isn't being accessed so its
dark gray so this can be a really handy
125

125

00:11:03.970  -->  00:11:07.010
way just for you to see whether you've
got some code that's not being used and
126

126

00:11:07.010  -->  00:11:12.500
you can perhaps refactor your code and fix that code up to remove any
127

127

00:11:12.500  -->  00:11:17.700
redundant code but we go back to main so lets now do modify and that's gonna do a similar thing
128

128

00:11:17.700  -->  00:11:22.370
we're going to actually get the
item into the item number and enter the new item
129

129

00:11:22.370  -->  00:11:25.810
and allow you to update it so we're
going to create that method so its going
130

130

00:11:25.810  -->  00:11:30.750
to be.....
131

131

00:11:30.750  -->  00:11:52.480
....
132

132

00:11:52.480  -->  00:12:01.020
...actually what will do
133

133

00:12:01.020  -->  00:12:07.050
to make it more sense will put....
134

134

00:12:07.050  -->  00:12:25.510
.....
135

135

00:12:25.510  -->  00:12:35.360
.....that will update it and if you go back to the grocery list
136

136

00:12:35.360  -->  00:12:41.240
notice it that then highlighted because it's now in use we have now
created that you might be wondering here
137

137

00:12:41.240  -->  00:12:45.660
why are we deducting one from item number because you know arrays start counting from 0
138

138

00:12:45.660  -->  00:12:50.180
but in the case of humans when printing out list and so forth we are starting the count from one
139

139

00:12:50.180  -->  00:12:53.680
and that's why we need to deduct one of
the number of the item number that has
140

140

00:12:53.680  -->  00:12:58.340
been entered by the user to actually be
accessing the correct element if you go
141

141

00:12:58.340  -->  00:13:01.790
back to the grocery lists see here
on line 18 we're actually printing an
142

142

00:13:01.790  -->  00:13:06.040
item i+1 because its starting basically
starting the list with one and that's what we need to
143

143

00:13:06.040  -->  00:13:09.540
do deducted from what the user has
selected because they would type the one
144

144

00:13:09.540  -->  00:13:16.930
as the first item to go back and point
to the right item ok next is the removeItem so....
145

145

00:13:16.930  -->  00:13:35.470
.....
146

146

00:13:35.470  -->  00:13:44.920
...so that is our removed item and next we only got one more to do
147

147

00:13:44.920  -->  00:13:51.930
now search for item so let's
implement that....
148

148

00:13:51.930  -->  00:14:02.990
.....
149

149

00:14:02.990  -->  00:14:13.760
......
150

150

00:14:13.760  -->  00:14:29.930
....
151

151

00:14:29.930  -->  00:14:43.600
.......
152

152

00:14:43.600  -->  00:14:51.920
...and by the way in case your wondering I didn't add the -1
153

153

00:14:51.920  -->  00:14:57.760
here to line 73 I'm gonna show you
what happens with that not in there so
154

154

00:14:57.760  -->  00:15:01.880
that's it now before we go through this
one more time let's run and actually show
155

155

00:15:01.880  -->  00:15:08.640
the output so run it you can see our menu
options
156

156

00:15:08.640  -->  00:15:14.110
so enter our choices so we can actually type 0 that should give a menu so it's actually
157

157

00:15:14.110  -->  00:15:18.160
working nothing untowards there
now if you go printout the list of grocery items
158

158

00:15:18.160  -->  00:15:22.550
You have 0 items in your grocery list
that's correct we haven't had any yet so
159

159

00:15:22.550  -->  00:15:25.390
let's go ahead and add some items so I'm
gonna do
160

160

00:15:25.390  -->  00:15:29.940
option 2 to add an
item to the list and what we'll do
161

161

00:15:29.940  -->  00:15:35.260
is typed cheese for the first one and
enter your choice again and we can 1 to
162

162

00:15:35.260  -->  00:15:41.930
print the list to of items lets add
another item so option 2 milk
163

163

00:15:41.930  -->  00:15:47.190
print the list again we got two options that's working
nicely and let's try adding one more so
164

164

00:15:47.190  -->  00:15:55.420
2 bread ok and print the list out yes it is
working so that's good so lets now
165

165

00:15:55.420  -->  00:16:05.660
try and do a search so lets search for an item so option 5
item to search for lets type coke, coke is not in the shopping list
166

166

00:16:05.660  -->  00:16:07.740
as we have expect option 5 again
167

167

00:16:07.740  -->  00:16:15.570
bread found bread in our list so that is working nicely let's try to modify item
168

168

00:16:15.570  -->  00:16:20.060
number so the first item number is cheese
so change cheese let's type
169

169

00:16:20.060  -->  00:16:28.770
cream cheese grocery item 1 has been
modified so lets do a printout cream
170

170

00:16:28.770  -->  00:16:33.770
cheese is now updated as you can see also
got milk and bread still their so lets
171

171

00:16:33.770  -->  00:16:37.860
now print out the list again to remind us what
the menu options are let's try and
172

172

00:16:37.860  -->  00:16:40.990
remove and see what happens now we
should actually get something weird happening
173

173

00:16:40.990  -->  00:16:46.190
so you can see the list on the screen
option 1 cream cheese option 2 milk
174

174

00:16:46.190  -->  00:16:52.790
options 3 bread so lets removed item three at the moment and look at
175

175

00:16:52.790  -->  00:16:55.720
that we've got an error straight away
and why we are getting the error well
176

176

00:16:55.720  -->  00:17:01.990
the problem is we're basically deleting an entry that doesn't
177

177

00:17:01.990  -->  00:17:07.690
exist if you look at the error index out
of bounds problem is we've actually got
178

178

00:17:07.690  -->  00:17:13.360
three elements starting from 0 1 2 in the
array list and we're trying to access
179

179

00:17:13.360  -->  00:17:18.180
position 3 item 3 because we actually
chose item three here because we
180

180

00:17:18.180  -->  00:17:22.360
didn't deduct one from it we're trying
effectively to access element 4 of the
181

181

00:17:22.360  -->  00:17:25.510
array list and we've actually got an
error so we can't do that so what we need
182

182

00:17:25.510  -->  00:17:29.000
to do is change the code and remove
item to make sure that we pass a
183

183

00:17:29.000  -->  00:17:34.650
negative 1 to and by the way what you could do there you can
184

184

00:17:34.650  -->  00:17:37.940
come back to grocery list for the
modified you can assume you could deduct
185

185

00:17:37.940  -->  00:17:42.800
one of the position there instead bearing in mind
the output is already showing a +1 and
186

186

00:17:42.800  -->  00:17:45.480
likewise for the get here when you're
removing we could have done that as well
187

187

00:17:45.480  -->  00:17:50.750
we could have actually assumed
and deducted the position of their but
188

188

00:17:50.750  -->  00:17:55.320
generally we wouldn't want to do that because
it's probably better
189

189

00:17:55.320  -->  00:17:59.090
in this case to be updating the main
class and because that's because we've
190

190

00:17:59.090  -->  00:18:03.180
set up the mechanism on this
page to print things in a certain order
191

191

00:18:03.180  -->  00:18:08.740
and it does make sense to just sort of
change this grocery lists class if
192

192

00:18:08.740  -->  00:18:12.480
that's going to be the functionality but you see
ordinarily you wouldn't be printing out the
193

193

00:18:12.480  -->  00:18:15.980
list here you'd normally print out
the print grocery list would be
194

194

00:18:15.980  -->  00:18:20.640
something that probably you print out in
the main class and consequently you wouldn't be
195

195

00:18:20.640  -->  00:18:25.200
worrying about +1 so in other words you
assuming anytime the addGroceryItem
196

196

00:18:25.200  -->  00:18:32.360
modify or remove methods were called that the correct ArrayList entry
197

197

00:18:32.360  -->  00:18:37.080
the correct number was already selected
and you didn't need to add to take one off it
198

198

00:18:37.080  -->  00:18:40.480
so just to make that clear you'd
normally be doing that sort of coding
199

199

00:18:40.480  -->  00:18:44.250
here so consequently I think it makes
more sense at this stage with our program
200

200

00:18:44.250  -->  00:18:48.360
to have the negative ones in here so ok
I've got that now working so let's
201

201

00:18:48.360  -->  00:18:52.940
go back and run a program again very
quickly and will add
202

202

00:18:52.940  -->  00:18:55.430
some entries in here
203

203

00:18:55.430  -->  00:19:10.700
option 2 bread option 2 cream cheese again
option 2 milk option 1 we got 3 items you will now be able to remove 4 item three
204

204

00:19:10.700  -->  00:19:16.030
and now if we do a print-out we should find we only got bread and cream cheese left because
205

205

00:19:16.030  -->  00:19:20.340
we've deleted milk bread and cream cheese so
that's good that's actually working like
206

206

00:19:20.340  -->  00:19:24.830
we should like we wanted to another thing  just
before I finished the video if you go back to the grocery
207

207

00:19:24.830  -->  00:19:29.070
list is we didn't have to use
208

208

00:19:29.070  -->  00:19:33.730
positions what you might want to do in
an ideal scenario here is not force the
209

209

00:19:33.730  -->  00:19:37.910
user to have to specify position but to
actually use something along the lines
210

210

00:19:37.910  -->  00:19:42.320
of what we done with findItem where they can just do a search
if you wanna remove an item you type in the item
211

211

00:19:42.320  -->  00:19:46.000
number and you'd use a mechanism
similar to what we did in findItem to
212

212

00:19:46.000  -->  00:19:49.280
find the position and delete it that
way that's certainly something you could
213

213

00:19:49.280  -->  00:19:52.510
do in actual fact in the next video
we're gonna do just that we're going to
214

214

00:19:52.510  -->  00:19:56.720
leave the existing capability of these
methods to use positive position numbers
215

215

00:19:56.720  -->  00:20:01.400
and the string but we are gonna add some new
methods so you can just enter the item
216

216

00:20:01.400  -->  00:20:05.120
and actually finds the item and updates it
for you so it's just making things a lot
217

217

00:20:05.120  -->  00:20:07.240
easier so you have seen the long winded way of doing
it
218

218

00:20:07.240  -->  00:20:10.400
it in the next video you will see the shortcut
so I'll see you in the next video
