WEBVTT
1
1

00:00:05.520  -->  00:00:08.250
So it's now time for
an Inner Class Challenge.
2

2

00:00:08.250  -->  00:00:11.460
And just before I actually start
typing out what the challenge is.
3

3

00:00:11.460  -->  00:00:13.730
I've actually grabbed
the Link List Challenge,
4

4

00:00:13.730  -->  00:00:18.090
the final source code from my
solution to that link list challenge.
5

5

00:00:18.090  -->  00:00:19.410
And that's what we're
going to be working on.
6

6

00:00:19.410  -->  00:00:22.630
So if you actually created
the solution yourself, and
7

7

00:00:22.630  -->  00:00:26.600
you've got the code that worked for the
linklist challenge, take a copy of that
8

8

00:00:26.600  -->  00:00:30.470
and save it to another folder, because
you're going to be actually changing that.
9

9

00:00:30.470  -->  00:00:33.560
So what I've done is I've actually
grabbed my copy of the solution to
10

10

00:00:33.560  -->  00:00:36.430
the last video of the last
completed solution.
11

11

00:00:36.430  -->  00:00:37.800
I'm gonna be working on that.
12

12

00:00:37.800  -->  00:00:41.980
So, what I'm going to do now is actually
type in the challenge down the bottom and
13

13

00:00:41.980  -->  00:00:44.280
we'll actually go about implementing it.
14

14

00:00:44.280  -->  00:00:49.300
What I'm going to leave all the code that
is actually working in the main class,
15

15

00:00:49.300  -->  00:00:52.470
in the main method, so that we can
actually confirm that things are working.
16

16

00:00:52.470  -->  00:00:56.040
So once I've type this in, I'm gonna run
this and then we're gonna make the changes
17

17

00:00:56.040  -->  00:00:59.120
and run it again to make sure that
the changes we made actually work.
18

18

00:00:59.120  -->  00:01:01.080
So here's what I want you
to do in the challenge.
19

19

00:01:15.370  -->  00:01:16.880
So here is the challenge.
20

20

00:01:16.880  -->  00:01:21.520
As I mentioned, we're using the Link
List Challenge, final solution code.
21

21

00:01:21.520  -->  00:01:24.800
And from there what we wanna do, is we
want you to modify the playlist challenge
22

22

00:01:24.800  -->  00:01:28.500
code, so
that the album class uses an inner class.
23

23

00:01:28.500  -->  00:01:31.480
So instead of using an array
list to hold its tracks,
24

24

00:01:31.480  -->  00:01:35.250
the album class is gonna be using an inner
class, called SongList to do that.
25

25

00:01:35.250  -->  00:01:38.630
So the inner SongList class
will use the ArrayList, and
26

26

00:01:38.630  -->  00:01:40.690
will provide a method to add a song.
27

27

00:01:40.690  -->  00:01:44.610
It'll also provide findSong methods
which will be used by the containing
28

28

00:01:44.610  -->  00:01:47.270
Album class to add songs to the playlist.
29

29

00:01:47.270  -->  00:01:50.860
But neither the Song class or
the main class should be changed.
30

30

00:01:50.860  -->  00:01:54.200
okay so this is future Tim
31

31

00:01:54.200  -->  00:01:57.230
making an edit to a video where I found
32

32

00:01:57.230  -->  00:01:59.660
a problem after creating the original
33

33

00:01:59.660  -->  00:02:02.570
video now the if statement isn't correct
34

34

00:02:02.570  -->  00:02:04.880
so it actually should be indexed greater
35

35

00:02:04.880  -->  00:02:07.490
than equal to 0 and index less than
36

36

00:02:07.490  -->  00:02:09.830
songs dot size so it's basically that
37

37

00:02:09.830  -->  00:02:12.590
first part the index greater than zero
38

38

00:02:12.590  -->  00:02:14.570
that actually should be index greater
39

39

00:02:14.570  -->  00:02:16.730
than equal to zero now remember that
40

40

00:02:16.730  -->  00:02:19.730
index always starts at zero and it ends
41

41

00:02:19.730  -->  00:02:22.820
with size take 1 so the problem here is
42

42

00:02:22.820  -->  00:02:25.450
if we add track number 1 the index will
43

43

00:02:25.450  -->  00:02:28.670
be 0 and therefore the if statement will
44

44

00:02:28.670  -->  00:02:30.350
be false because of the way we've got it
45

45

00:02:30.350  -->  00:02:32.930
testing and that will cause the song
46

46

00:02:32.930  -->  00:02:34.940
object to be returned as null so in
47

47

00:02:34.940  -->  00:02:36.530
other words we can't access the first song
48

48

00:02:36.530  -->  00:02:39.500
basically from track 1 so this is the
49

49

00:02:39.500  -->  00:02:40.850
reason why we need to greater than an
50

50

00:02:40.850  -->  00:02:43.130
equal to sign so that we can cover for
51

51

00:02:43.130  -->  00:02:44.600
the situation where the index is equal
52

52

00:02:44.600  -->  00:02:47.510
to 0 and in case you want more information
53

53

00:02:47.510  -->  00:02:49.220
there was a similar problem in the
54

54

00:02:49.220  -->  00:02:50.950
linked list challenge in this section of
55

55

00:02:50.950  -->  00:02:53.840
the course and in fact I showed in a
56

56

00:02:53.840  -->  00:02:55.700
video after that one immediately after
57

57

00:02:55.700  -->  00:02:57.950
that one and the video for that is
58

58

00:02:57.950  -->  00:03:01.160
titled bug fix for track 1 error so you
59

59

00:03:01.160  -->  00:03:02.660
can refer to that for more information
60

60

00:03:02.660  -->  00:03:03.980
but essentially that's what you need to
61

61

00:03:03.980  -->  00:03:06.530
do to get this to work replace the
62

62

00:03:06.530  -->  00:03:09.530
greater than 0 with a greater than equal
63

63

00:03:09.530  -->  00:03:12.050
to 0 and that will fix that issue
64

64

00:03:12.050  -->  00:03:15.590
alright so let's move back to the code
65

65

00:03:15.590  -->  00:03:17.500
So in other words,
you should still be able to run it and
66

66

00:03:17.500  -->  00:03:21.160
do exactly the same thing you could do
before in the challenge in the main
67

67

00:03:21.160  -->  00:03:25.220
class and also the main method, and
it should still work after your changes.
68

68

00:03:25.220  -->  00:03:28.750
So I'm going to actually just quickly
run this once just to make sure it still
69

69

00:03:28.750  -->  00:03:29.750
works.
70

70

00:03:29.750  -->  00:03:33.390
There is no reason why it shouldn't,
but just to be sure, and
71

71

00:03:33.390  -->  00:03:37.890
I'm just gonna go through, do a couple
of things quickly, previous song.
72

72

00:03:37.890  -->  00:03:39.810
This song is on a playlist, etc.
73

73

00:03:39.810  -->  00:03:40.590
That's probably enough now.
74

74

00:03:40.590  -->  00:03:42.160
So I'm gonna actually stop that,
75

75

00:03:42.160  -->  00:03:45.950
because of course the main thing was
that the added font is actually working.
76

76

00:03:45.950  -->  00:03:49.480
So I'm going to actually complete that to
exit out of that there, which I've done.
77

77

00:03:49.480  -->  00:03:52.070
So at this stage,
pause the video and go ahead and
78

78

00:03:52.070  -->  00:03:54.540
see if you can come back
up with the challenge.
79

79

00:03:54.540  -->  00:03:57.990
And I'll just bring that on the screen
again, so you can see what the challenge
80

80

00:03:57.990  -->  00:04:01.700
is all about, and here, and when you're
ready to come back and see what I've done,
81

81

00:04:01.700  -->  00:04:04.930
start the video again and I'll be here and
I'll go through my solution.
82

82

00:04:09.990  -->  00:04:11.020
Okay, so how did you get out?
83

83

00:04:11.020  -->  00:04:13.110
Did you figure it out and get it working?
84

84

00:04:13.110  -->  00:04:14.050
So, let's make a start.
85

85

00:04:14.050  -->  00:04:17.190
What we're gonna do is, we're gonna
need to modify the playlist challenge,
86

86

00:04:17.190  -->  00:04:21.170
as I mentioned, so that the album class
uses an inner class called SongList.
87

87

00:04:21.170  -->  00:04:24.270
And the SongList class has to have
the ability to add a song and
88

88

00:04:24.270  -->  00:04:27.320
also it's going to have
the find song methods as well.
89

89

00:04:27.320  -->  00:04:29.920
So let's go back into our source code.
90

90

00:04:29.920  -->  00:04:33.570
And of course, Album is what we're going
to be ultimately writing this code.
91

91

00:04:33.570  -->  00:04:37.510
So what we'll do is,
we'll start at the end, within the class,
92

92

00:04:37.510  -->  00:04:39.430
adding our inner class.
93

93

00:04:39.430  -->  00:04:46.610
So it's gonna be private
class SongList And
94

94

00:04:46.610  -->  00:04:50.340
we need to have its own array,
ArrayList to store the songs.
95

95

00:04:50.340  -->  00:04:53.850
private ArrayList of Song objects.
96

96

00:04:53.850  -->  00:04:55.920
Remember we weren't changing
the Song class at all.
97

97

00:04:55.920  -->  00:05:02.660
The constructor for the SongList is
going to just be empty, so select none.
98

98

00:05:02.660  -->  00:05:07.310
And we're gonna just initialize
that ArrayList in the constructor,
99

99

00:05:07.310  -->  00:05:10.480
this.songs = new ArrayList
of song objects.
100

100

00:05:10.480  -->  00:05:13.600
To initialize it, so when it comes time
to adding, we can actually do that.
101

101

00:05:13.600  -->  00:05:14.710
We can actually add those.
102

102

00:05:14.710  -->  00:05:20.920
We need to add a method now, for
adding a song, public boolean add,
103

103

00:05:20.920  -->  00:05:23.360
and add a song object.
104

104

00:05:23.360  -->  00:05:30.080
if, songs.contains song.
105

105

00:05:30.080  -->  00:05:35.470
Return false, otherwise we're going to
106

106

00:05:35.470  -->  00:05:43.050
do this.songs.add(song),
return true, like so.
107

107

00:05:43.050  -->  00:05:47.510
And we also need our find song methods,
and we've been looking at some of
108

108

00:05:47.510  -->  00:05:50.080
the code up here,
you can actually add some of this code.
109

109

00:05:50.080  -->  00:05:51.670
So let's actually look at our findSong.
110

110

00:05:51.670  -->  00:05:53.570
I'm gonna copy that one there.
111

111

00:05:53.570  -->  00:05:57.270
And I'm going to take it
out of the Album class, and
112

112

00:05:57.270  -->  00:05:59.750
I'm gonna paste it in to our inner class.
113

113

00:05:59.750  -->  00:06:02.310
So we've now got private song,
on song, string title.
114

114

00:06:02.310  -->  00:06:05.640
And it goes through the list of songs,
looking for a match.
115

115

00:06:05.640  -->  00:06:08.850
If it finds a match based on the title,
it returns the song.
116

116

00:06:08.850  -->  00:06:11.120
That it actually failed,
otherwise it's gonna return no.
117

117

00:06:11.120  -->  00:06:14.800
So, the changes would move
that functionality find from
118

118

00:06:14.800  -->  00:06:18.310
the Album class into the songList class.
119

119

00:06:18.310  -->  00:06:22.620
Likewise, we can also
add another function.
120

120

00:06:22.620  -->  00:06:25.950
The other way that we had it for
finding songs, we had find song,
121

121

00:06:25.950  -->  00:06:29.340
which we took it out of the final
solution, but int trackNumber,
122

122

00:06:29.340  -->  00:06:32.480
where we can put that back
in just to be complete.
123

123

00:06:32.480  -->  00:06:36.470
Int index = trackNumber take one.
124

124

00:06:36.470  -->  00:06:40.330
You can put if index squared then zero.
125

125

00:06:42.230  -->  00:06:48.310
Zero and index < songs.size.
126

126

00:06:52.890  -->  00:06:56.130
Return songs.get, index.
127

127

00:06:56.130  -->  00:06:59.400
Then otherwise, we return null.
128

128

00:06:59.400  -->  00:07:03.760
If we weren't able to find a match,
because the index was out of range, or
129

129

00:07:03.760  -->  00:07:06.050
we didn't have that
particular entry in there.
130

130

00:07:06.050  -->  00:07:09.010
So that's our private SongList class.
131

131

00:07:09.010  -->  00:07:10.560
Nothing particularly complex about it,
132

132

00:07:10.560  -->  00:07:12.800
other than the fact we've
made it in inner class.
133

133

00:07:12.800  -->  00:07:16.080
So what we now need to do, now that we've
done that, we need to make some changes to
134

134

00:07:16.080  -->  00:07:20.410
the Album class to start using
this inner class, this song list.
135

135

00:07:20.410  -->  00:07:22.980
So one of the first things we'll do, is
we're gonna get rid of the array list to
136

136

00:07:22.980  -->  00:07:28.370
song objects, because that's now handled
by our song list class, or inner class.
137

137

00:07:28.370  -->  00:07:32.730
I'm gonna create a private SongList
class and call that songs.
138

138

00:07:33.760  -->  00:07:36.240
And obviously that means
the constructor is now wrong.
139

139

00:07:36.240  -->  00:07:38.750
Because we dont wanna
initialize the array list,
140

140

00:07:38.750  -->  00:07:40.090
because it's no longer an array list.
141

141

00:07:40.090  -->  00:07:41.750
This is now a SongList object, so
142

142

00:07:41.750  -->  00:07:47.170
I'm gonna create new SongList
object via the constructor like so.
143

143

00:07:47.170  -->  00:07:48.050
And addSong,
144

144

00:07:48.050  -->  00:07:51.790
we are actually going to leave that method
in there, cuz that's the public method
145

145

00:07:51.790  -->  00:07:56.000
that's ultimately gonna be called by
the main class and its main method.
146

146

00:07:56.000  -->  00:07:58.360
So we need to leave that in there,
but we need to change the call,
147

147

00:07:58.360  -->  00:08:02.400
because it's no longer using
an internal find song function.
148

148

00:08:02.400  -->  00:08:03.610
Instead, what we're going to be doing,
149

149

00:08:03.610  -->  00:08:08.200
is we're just gonna be calling these
SongList inner classes add method.
150

150

00:08:08.200  -->  00:08:14.610
So we're gonna return this.songs.add,
and then we'll parse a new
151

151

00:08:14.610  -->  00:08:19.480
song object to a new Song, which consists
of course, of a title and a duration.
152

152

00:08:21.440  -->  00:08:24.200
Like so and
all this other code can now be removed.
153

153

00:08:24.200  -->  00:08:27.570
Though in terms of the functionality,
now of course addSong
154

154

00:08:27.570  -->  00:08:32.030
is now calling the .add and
the .add within our inner class is
155

155

00:08:32.030  -->  00:08:34.730
actually checking to see whether there's
actually a problem there when we add it.
156

156

00:08:34.730  -->  00:08:37.670
If it contains the song, it returns false.
157

157

00:08:37.670  -->  00:08:39.580
Otherwise we can try to add it and
then we return true.
158

158

00:08:39.580  -->  00:08:42.250
So in other words, we're still
fulfilling this public interface,
159

159

00:08:42.250  -->  00:08:44.410
this public method for addSong.
160

160

00:08:44.410  -->  00:08:47.170
But we're getting the songList to
actually return true or false.
161

161

00:08:47.170  -->  00:08:50.270
So that's made the code a bit
more compact as a result of that.
162

162

00:08:50.270  -->  00:08:53.170
Then we actually removed the findList,
cuz we didn't need that anymore.
163

163

00:08:53.170  -->  00:08:57.210
And the next thing we need to do is we
need to actually modify the addToPlaylist,
164

164

00:08:57.210  -->  00:09:01.350
because that, as you can see here that's
actually adding or that's actually looking
165

165

00:09:01.350  -->  00:09:03.750
for the a arraylist to determine
if it can add it or not.
166

166

00:09:03.750  -->  00:09:08.540
So what need to do there is, I'm gonna
actually delete some of this code and
167

167

00:09:08.540  -->  00:09:12.070
we'll do is we'll start and
we'll actually do song.
168

168

00:09:13.160  -->  00:09:19.940
CheckedSong = this.songs.findSong
by trackNumber.
169

169

00:09:21.310  -->  00:09:25.300
So it's now using the inner classes
findSong function that we wrote and
170

170

00:09:25.300  -->  00:09:27.850
then we put if checkSong
is not equal to null.
171

171

00:09:30.560  -->  00:09:36.740
PlayList.add, checkSong,
then we return true.
172

172

00:09:36.740  -->  00:09:39.750
Otherwise this album doesn't have a track
number and we're gonna return false.
173

173

00:09:39.750  -->  00:09:44.120
So really the main thing that we did there
is we actually called the inner class to
174

174

00:09:44.120  -->  00:09:47.460
findSong method,
to determine whether it was valid or not.
175

175

00:09:47.460  -->  00:09:50.600
And then we're just doing pretty well
anything else the same as it was before.
176

176

00:09:50.600  -->  00:09:51.740
So that's the first function.
177

177

00:09:51.740  -->  00:09:53.780
That's why we're actually
returning a track number.
178

178

00:09:53.780  -->  00:09:57.420
That's why the parameters was a track
number and then the playlist to add.
179

179

00:09:57.420  -->  00:09:59.740
But we can also addToPlaylist by title.
180

180

00:09:59.740  -->  00:10:00.910
So we need to do the same thing there.
181

181

00:10:00.910  -->  00:10:03.420
We need to change that reference,
so just delete that.
182

182

00:10:03.420  -->  00:10:04.840
You don't actually change it,
it's just a shortcut.
183

183

00:10:04.840  -->  00:10:11.140
I can actually put songs.findSong.
184

184

00:10:11.140  -->  00:10:13.060
This time it's gonna be by title.
185

185

00:10:13.060  -->  00:10:17.880
If checkedSong is not equal to null, we
add playlist.AddCheckedSong, return true.
186

186

00:10:17.880  -->  00:10:21.890
Otherwise, the song plus title is not in
this album, which is as that was before.
187

187

00:10:21.890  -->  00:10:23.800
So, that is literally it.
188

188

00:10:23.800  -->  00:10:26.790
So it's not particularly difficult in
terms of the changes we need to make, but
189

189

00:10:26.790  -->  00:10:27.300
it's more so
190

190

00:10:27.300  -->  00:10:30.720
in the thought process that can see
that where the functionality should be.
191

191

00:10:30.720  -->  00:10:34.510
So you can see that we stripped out the
arraylist but that was in the Album class,
192

192

00:10:34.510  -->  00:10:37.810
and also stripped out some of
the functionality such as findSong,
193

193

00:10:37.810  -->  00:10:42.330
Adding songs and so forth, and put that
all in the SongList inner class itself.
194

194

00:10:42.330  -->  00:10:45.610
And then we're actually just doing
the calls to those particular methods
195

195

00:10:45.610  -->  00:10:46.530
as appropriate.
196

196

00:10:46.530  -->  00:10:49.540
So the last thing now to check
is to see that this still works.
197

197

00:10:49.540  -->  00:10:53.740
If we go back to our main method It should
still be able to now run this without
198

198

00:10:53.740  -->  00:10:58.770
making any changes to the code,
and it should still work.
199

199

00:10:58.770  -->  00:11:00.500
And of course the reason
it should still work,
200

200

00:11:00.500  -->  00:11:03.320
is that all the code
was changed internally.
201

201

00:11:03.320  -->  00:11:06.970
The album class, and as far as what
we've exposed as the functionality for
202

202

00:11:06.970  -->  00:11:10.020
the album class, the exact same
methods are still applicable.
203

203

00:11:10.020  -->  00:11:12.310
And it's still actually there and
we're still calling those.
204

204

00:11:12.310  -->  00:11:15.080
It's just all the functionality
had changed internally and
205

205

00:11:15.080  -->  00:11:18.620
the main method has got no understanding
or concept of the fact that we're now
206

206

00:11:18.620  -->  00:11:21.900
using an inner class instead of
the arraylist being in the album class.
207

207

00:11:21.900  -->  00:11:25.180
And that's one of the beauty is about
creating things properly the first time.
208

208

00:11:25.180  -->  00:11:27.970
We can make these changes
internally without affecting
209

209

00:11:27.970  -->  00:11:29.770
any other part of the application.
210

210

00:11:29.770  -->  00:11:32.630
So, just to confirm, I can just
go through a couple of functions.
211

211

00:11:33.920  -->  00:11:36.730
Obviously, the sums are there, print out.
212

212

00:11:36.730  -->  00:11:39.080
So it's obviously finding the song,
so it's all working.
213

213

00:11:39.080  -->  00:11:39.770
So that's actually it.
214

214

00:11:39.770  -->  00:11:43.060
That's how to go about actually
changing out an implementation,
215

215

00:11:43.060  -->  00:11:46.590
in this case which was a ArrayList.
216

216

00:11:46.590  -->  00:11:50.730
Which was in the Album class and adding an
inner class, which was the SongList class.
217

217

00:11:50.730  -->  00:11:51.350
So that's it.
218

218

00:11:51.350  -->  00:11:53.020
So I'll see you in the next section.
219

219

00:11:53.020  -->  00:11:55.770
We're gonna start talking
about Abstract Classes.
