0
1
00:00:05,710 --> 00:00:12,780
So in the last video, we created our common module and also created three packages and we moved the files
1

2
00:00:12,780 --> 00:00:17,940
from the program the main project root source folder into the relevant packages and we've gone to the
2

3
00:00:17,940 --> 00:00:24,230
start of the process of going through and getting things fixed so that we can actually run this application.
3

4
00:00:24,240 --> 00:00:28,630
Now we've got a problem here an exception in application stop method.
4

5
00:00:28,660 --> 00:00:36,390
If you scroll down here and see something in, click on that that tells us that the line is the parent
5

6
00:00:36,950 --> 00:00:38,230
equals loader dot load.
6

7
00:00:38,250 --> 00:00:43,420
And obviously on the previous line you can say there's a resource which is pointing to our main
7

8
00:00:43,600 --> 00:00:44,860
xml file.
8

9
00:00:45,150 --> 00:00:51,660
So the issue here is what previously it was using a relative path to our main dot xml
9

10
00:00:51,660 --> 00:00:55,810
a sample path and the system was able to find that.
10

11
00:00:55,950 --> 00:00:58,500
But now we're actually using a module.
11

12
00:00:58,500 --> 00:01:05,940
So what we need to do is specify the path the leading slash so that the path is found at the start or
12

13
00:01:05,940 --> 00:01:06,840
at the root level.
13

14
00:01:06,840 --> 00:01:12,710
So basically we're telling the system to look at the root level and go down into a module that we've
14

15
00:01:12,750 --> 00:01:17,420
created and actually stop trying to access the main xml file.
15

16
00:01:17,520 --> 00:01:21,170
So that's why we're getting an exception basically it couldn't find that file.
16

17
00:01:21,210 --> 00:01:22,790
I'm going to try running that again now.
17

18
00:01:26,010 --> 00:01:27,750
And you can see now we're making good progress.
18

19
00:01:27,750 --> 00:01:33,140
We've actually got to the stage now where we can actually run our application and if just click on something
19

20
00:01:33,150 --> 00:01:36,880
to test that show albums clearly it's working ok.
20

21
00:01:37,520 --> 00:01:39,600
So that's good, we're making progress.
21

22
00:01:39,600 --> 00:01:41,510
Now you may or may not get this error.
22

23
00:01:41,520 --> 00:01:45,800
So what I'm going to do is just open this file and close down this window for now.
23

24
00:01:45,960 --> 00:01:50,040
put main.xml, now on line 10 here,
24

25
00:01:50,550 --> 00:01:52,400
you have this fx controller.
25

26
00:01:52,630 --> 00:01:56,850
you can see that it has been updated in our case to academy dot learn programming
26

27
00:01:56,850 --> 00:01:59,030
dot UI dot controller,
27

28
00:01:59,180 --> 00:02:01,040
you may find that's not updated.
28

29
00:02:01,150 --> 00:02:04,730
It might still be me pointed to sample dot controller.
29

30
00:02:04,890 --> 00:02:10,740
So if you get an error and it says something along the lines of sample controller make sure you do update it.
30

31
00:02:10,770 --> 00:02:13,430
So it says academy don't learn programming dot UI.
31

32
00:02:13,440 --> 00:02:18,600
dot controller, you can see in my case that it did automatically update and I was able to get the app working.
32

33
00:02:18,960 --> 00:02:23,040
Essentially you know that you are on the right track if you're able to get the app working and see the
33

34
00:02:23,040 --> 00:02:24,060
GUI interface.
34

35
00:02:24,090 --> 00:02:27,120
And of course we just saw that working. At this point,
35

36
00:02:27,120 --> 00:02:33,930
we need to now think about a module descriptor and in intelliJ we can easily add a module descriptor
36

37
00:02:34,290 --> 00:02:40,090
just by pointing or right clicking on the source folder, come up here and do that up here in our module,
37

38
00:02:40,130 --> 00:02:46,590
right click, click on new, come down and select module info dot java which of course is a module to script
38

39
00:02:46,590 --> 00:02:47,230
to follow.
39

40
00:02:47,400 --> 00:02:53,480
So when I select that you can see it's automatically created that line of code for us again.
40

41
00:02:53,580 --> 00:02:59,490
So now that we've added that, if we do nothing else, this is going to result in a lot of compilation errors,
41

42
00:02:59,910 --> 00:03:05,530
since we've now got one Java module (academy.learn.programming) defined in the module descriptor.
42

43
00:03:05,740 --> 00:03:06,800
It's the one I mean now.
43

44
00:03:06,910 --> 00:03:10,790
Just a simple line to come up here and run it.
44

45
00:03:11,080 --> 00:03:13,090
You can see now we've got a lot of grief here.
45

46
00:03:14,490 --> 00:03:19,970
IntelliJ's now coming up with lots of different areas purely by adding that module descriptor file
46

47
00:03:21,180 --> 00:03:26,580
essentially and obviously in this case all these errors are related to modules, because clearly before
47

48
00:03:26,580 --> 00:03:30,360
I added that module descriptor we were able to run the app.
48

49
00:03:30,420 --> 00:03:36,630
So basically the problem is now we're using classes from JDK modules and we have to require those modules
49

50
00:03:36,630 --> 00:03:39,730
go through an add that keyword to get things to work.
50

51
00:03:39,990 --> 00:03:43,550
So stop looking at some of these error and say this first one here.
51

52
00:03:43,950 --> 00:03:48,800
package javafx dot beans property is not visible.
52

53
00:03:49,200 --> 00:03:55,170
So that means that we're using the package from the Java fx dot base module but we don't actually reading
53

54
00:03:55,170 --> 00:03:55,920
that module.
54

55
00:03:56,130 --> 00:04:03,010
And again to read a module to use a module in our modules we have to declare it with a requires statement.
55

56
00:04:03,040 --> 00:04:10,190
Now we could add the requires statements manually or we can get the intelligence to help us with these errors.
56

57
00:04:10,320 --> 00:04:17,910
So I just opened the album class, in the album class looking at the imports got this first one java
57

58
00:04:18,000 --> 00:04:22,290
fx dot beans simple integer property line 3.
58

59
00:04:22,370 --> 00:04:27,970
And again since this class is an inside module we can't use it until we require the module.
59

60
00:04:28,170 --> 00:04:32,280
But we can do is moving the cursor to the line the error which obviously is his first one we can get
60

61
00:04:32,280 --> 00:04:33,340
the bulb to appear.
61

62
00:04:35,140 --> 00:04:38,560
So we're actually looking for the red red bulb to come up automatically.
62

63
00:04:38,760 --> 00:04:42,570
But in this case he can say he's not coming up so what I can do is just select and come over here and
63

64
00:04:42,570 --> 00:04:43,480
click on that.
64

65
00:04:44,070 --> 00:04:49,020
And you say by doing that the red bulb does come up so you might have to click it a couple times but
65

66
00:04:49,020 --> 00:04:54,600
eventually click on that and see the option that's come up in now and you can say that intimidate is
66

67
00:04:54,600 --> 00:04:56,860
going to add the code first requires java
67

68
00:04:56,920 --> 00:05:03,010
fx dot base directive to module-info.java and its simple as clicking on ADD
68

69
00:05:03,930 --> 00:05:05,560
you can see the errors disappear.
69

70
00:05:05,880 --> 00:05:08,990
And the compact compilation errors are resolved in this file.
70

71
00:05:09,000 --> 00:05:15,520
So what actually happened to the module info file? We click that, let's have a look at that.
71

72
00:05:15,900 --> 00:05:20,840
You can see now that requires statement has been added for java fx dot base
72

73
00:05:21,000 --> 00:05:24,530
that means your module now uses or requires the module.
73

74
00:05:24,750 --> 00:05:26,380
java fx dot base.
74

75
00:05:26,750 --> 00:05:33,150
So the classes album and artists consequently, you see that was fixed, they no longer have
75

76
00:05:33,180 --> 00:05:38,780
any compilation errors because that's been fixed because of the use of adding or in this case intelliJ
76

77
00:05:38,820 --> 00:05:41,480
adding that required statement for us.
77

78
00:05:41,550 --> 00:05:43,230
So let's now move onto the next one.
78

79
00:05:43,290 --> 00:05:46,930
Next class was a double source and you can see that has got an error there.
79

80
00:05:47,340 --> 00:05:50,640
So basically a classes from the Java dot sequel package.
80

81
00:05:50,640 --> 00:05:54,370
So I need another requires statement in the module info file.
81

82
00:05:54,740 --> 00:05:56,460
So this time just to show you the difference.
82

83
00:05:56,460 --> 00:05:58,540
Let's go through and do that manually.
83

84
00:05:58,660 --> 00:06:02,620
If you wanted to you'd come up here and click the red arrow.
84

85
00:06:02,620 --> 00:06:08,140
It doesn't seem to appear just come up here and click on that will generally make the red line appear
85

86
00:06:08,250 --> 00:06:12,140
the red bulb appear, so I could just click it and have it that way.
86

87
00:06:12,160 --> 00:06:16,190
I'll just got back this time to module info on Java and what I'm going to do.
87

88
00:06:16,350 --> 00:06:19,070
Just type this in, so requires
88

89
00:06:21,760 --> 00:06:29,050
java.sql; you can see immediately when I type semi-colon that
89

90
00:06:29,050 --> 00:06:30,740
the rest of errors disappeared.
90

91
00:06:30,760 --> 00:06:33,640
And you can see that that's now fixed as well.
91

92
00:06:34,180 --> 00:06:36,870
So moving on let's continue fixing these.
92

93
00:06:37,000 --> 00:06:39,670
We've now got the next one which is the controller dot java.
93

94
00:06:39,670 --> 00:06:41,170
Let's have a look at that.
94

95
00:06:41,240 --> 00:06:45,290
And you say that we've got four things that need resolving here.
95

96
00:06:45,520 --> 00:06:46,800
Let's go through them one by one.
96

97
00:06:47,050 --> 00:06:49,440
I got to go back into that lawn to see where that works.
97

98
00:06:51,120 --> 00:06:58,320
This time you can say that I've managed to get the bulb to appear so I'm going to click on that on the add,
98

99
00:06:58,580 --> 00:07:03,910
and in terms of clicking you can if you want to get this to work for them to click there for arguments
99

100
00:07:03,910 --> 00:07:12,590
like the red bulb won't come up so basically the last part of the package by clicking on that the red
100

101
00:07:12,870 --> 00:07:13,840
bulbs appear.
101

102
00:07:13,850 --> 00:07:17,010
So I'm going to click on that, click.
102

103
00:07:17,060 --> 00:07:21,920
You can control and can I move up one level with this you might have a little bit of clicking or you
103

104
00:07:21,920 --> 00:07:26,620
can come of here and click but we'll get through the process of getting that as well.
104

105
00:07:26,620 --> 00:07:29,130
And you can say the areas have now disappeared from controllers.
105

106
00:07:29,140 --> 00:07:34,690
Well and again looking back at module-info.java you can see these additional three lines that were
106

107
00:07:34,690 --> 00:07:37,970
had there relating to Java fx.
107

108
00:07:38,330 --> 00:07:42,310
Alright so it looks like we've resolved compilation errors and so let's
108

109
00:07:42,310 --> 00:07:48,550
try running this again and see if we're getting anywhere, right click main, select run main.main
109

110
00:07:51,800 --> 00:07:57,270
So I've still got an exception and initially I might look at that error and think that it doesn't make
110

111
00:07:57,270 --> 00:08:01,500
a lot of sense but if you scroll down and have been looking at look here and read the text for this one
111

112
00:08:01,500 --> 00:08:05,170
cannot access class academy dot learn programming dot UI
112

113
00:08:05,280 --> 00:08:13,900
dot main module and reading because module academy dot learn programming does not export academy
113

114
00:08:14,040 --> 00:08:14,800
dot learn programming
114

115
00:08:14,820 --> 00:08:18,120
dot UI to module Java fx dot graphics.
115

116
00:08:18,120 --> 00:08:24,600
So what that actually means is the java fx launcher can't launch our application because we didn't export
116

117
00:08:24,600 --> 00:08:28,100
a package to the java fx dot graphics module.
117

118
00:08:28,140 --> 00:08:34,530
Now if we don't export any package classes in the module that can't be accessed. So to export a package
118

119
00:08:34,980 --> 00:08:41,050
we need to use the export statement and we talked about exports in a previous video,
119

120
00:08:41,220 --> 00:08:46,280
so it's used to specify in the packages that are exported by the current module and you can see here
120

121
00:08:46,290 --> 00:08:50,530
the other one that are in the module that they want to export.
121

122
00:08:50,550 --> 00:08:53,840
As for module java fx dot graphics.
122

123
00:08:54,240 --> 00:08:57,840
So what we can do is go back to our module info which I still get on screen.
123

124
00:08:57,950 --> 00:09:11,500
and type exports academy dot learn programming dot UI to java fx.graphics,
124

125
00:09:11,510 --> 00:09:15,600
semi colon. So by exporting a package to the java
125

126
00:09:15,600 --> 00:09:21,060
fx. graphics module java fx launchers should be able to access a package and therefore run
126

127
00:09:21,060 --> 00:09:23,520
the application. So let's try this.
127

128
00:09:23,520 --> 00:09:24,810
We'll try running it again now.
128

129
00:09:28,640 --> 00:09:34,640
Okay, you can see that we've got progress this time it's talking about academy dot learn programming
129

130
00:09:34,650 --> 00:09:41,000
dor UI dot controller this time and scroll over to the right, java fx.xml.
130

131
00:09:41,020 --> 00:09:45,320
So in other words you have to export the UI package to the module Java fx
131

132
00:09:45,370 --> 00:09:48,130
xml, I get very similar to the previous error.
132

133
00:09:48,370 --> 00:09:49,800
Let's go back and do that.
133

134
00:09:49,810 --> 00:09:58,800
So we're going to do is just add a comma here which we can do java fx.xml
134

135
00:09:59,890 --> 00:10:04,480
And the reason I'm putting a comma in the second module here is that
135

136
00:10:04,720 --> 00:10:09,130
using another export statement for the same package in this case academy dot learn programming
136

137
00:10:09,210 --> 00:10:11,770
for xml does lead to compilation error.
137

138
00:10:11,860 --> 00:10:17,920
So if you do need to do that to export to multiple modules you do a comma and then the module name to do that.
138

139
00:10:17,920 --> 00:10:23,900
So let's run that again. Okay, so I've still got an error.
139

140
00:10:23,950 --> 00:10:31,370
So let's have a look. I'm just reading this.
140

141
00:10:31,370 --> 00:10:35,400
And again you can see that the good thing about these errors are fairly descriptive.
141

142
00:10:35,640 --> 00:10:38,320
To give you some pretty good hints as to what needs to be done here.
142

143
00:10:38,680 --> 00:10:44,060
So you can see here the problem is the controller, artists table accessible module academy dot learn
143

144
00:10:44,060 --> 00:10:49,830
the common opens academy learning programming UI to module java fx.xml
144

145
00:10:50,040 --> 00:10:54,970
So in other words it's really being pretty blunt here saying we have to open the package to Java
145

146
00:10:55,000 --> 00:10:58,290
fx.xml to that module.
146

147
00:10:58,290 --> 00:11:03,860
Now the reason for that is because the fxml loader needs to set fields annotated with the
147

148
00:11:03,870 --> 00:11:09,840
at fxml annotation, now that opening package the fxml loader can't load
148

149
00:11:09,840 --> 00:11:13,600
the xml and inject or set those controller fields.
149

150
00:11:13,620 --> 00:11:18,270
So what we need to do is to allow that is to type, but it's actually giving us the hint to type it.
150

151
00:11:18,280 --> 00:11:30,710
so opens academy dot learn programming dot UI to java fx.fxml
151

152
00:11:31,570 --> 00:11:32,900
Okay, let's run this again.
152

153
00:11:37,080 --> 00:11:42,320
And you could see that the application ran, we got the GUI interface showing but again we've got another error now.
153

154
00:11:42,340 --> 00:11:47,040
So leading got to the process and we got this problem here, this time its in the artist.
154

155
00:11:47,150 --> 00:11:51,240
So again the process, let's have a look, doesn't open
155

156
00:11:51,320 --> 00:11:56,980
academy.learnprogramming.common.java fx.base so pretty straightforward to have the result
156

157
00:11:56,980 --> 00:12:02,820
that we need another open statement there, so opens the academy.
157

158
00:12:02,950 --> 00:12:14,920
dot learnprogramming dot coma to java fx.base this time. Okay, let's run the application again I'll stop this
158

159
00:12:14,920 --> 00:12:15,820
and run it again.
159

160
00:12:21,490 --> 00:12:28,680
Its looking better, okay I finally got some progress here, let's select something, show albums.
160

161
00:12:28,840 --> 00:12:30,160
clearly it's working now.
161

162
00:12:30,570 --> 00:12:36,050
Alright so you could see that the process of converting to module is fairly intuitive.
162

163
00:12:36,090 --> 00:12:40,330
If you take the time to read the exceptions, it's a logical process to follow.
163

164
00:12:40,500 --> 00:12:45,300
And there are a few things that need to be done but ultimately you can say it the main work was actually
164

165
00:12:45,300 --> 00:12:50,500
making sure the module info, the module descriptor file had the right options set in there.
165

166
00:12:50,670 --> 00:12:55,890
Once we went through the process of looking at those errors and adding what we needed to to this file
166

167
00:12:55,950 --> 00:13:00,340
this module descriptor file that got to the stage now where it's working.
167

168
00:13:00,450 --> 00:13:04,990
Currently now we've got our code base inside a single module.
168

169
00:13:05,130 --> 00:13:08,350
The current module info file has some redundant lines though,.
169

170
00:13:08,640 --> 00:13:15,270
And this is because some modules that we require depend on other modules but we'll talk more about those lines later.
170

171
00:13:15,300 --> 00:13:19,800
For now I'm going to leave you and see you in the next video because in that warm up we're going to
171

172
00:13:19,800 --> 00:13:23,500
do is start separating the single module into multiple modules.
172

173
00:13:23,760 --> 00:13:25,000
So I will see you in the next video.
