WEBVTT
1
1

00:00:04.670  -->  00:00:08.000
so we're moving on now
2

2

00:00:08.000  -->  00:00:11.540
so now that we've created that view in
3

3

00:00:11.540  -->  00:00:13.670
the previous video we could actually
4

4

00:00:13.670  -->  00:00:15.740
change the query artists for songs
5

5

00:00:15.740  -->  00:00:19.340
method you could actually do that and
6

6

00:00:19.340  -->  00:00:21.050
make that change then use that view if
7

7

00:00:21.050  -->  00:00:23.420
you wanted to but we won't do that now
8

8

00:00:23.420  -->  00:00:25.910
what we'll do instead is will create a
9

9

00:00:25.910  -->  00:00:28.520
new method for this the user the
10

10

00:00:28.520  -->  00:00:30.280
datasource class could fall back to
11

11

00:00:30.280  -->  00:00:32.210
using the query artists for song method
12

12

00:00:32.210  -->  00:00:34.460
if the creation of the view failes or
13

13

00:00:34.460  -->  00:00:36.260
calling the new method results in a
14

14

00:00:36.260  -->  00:00:40.210
error now we can query a view just as
15

15

00:00:40.210  -->  00:00:42.970
we query a table so lets start
16

16

00:00:42.970  -->  00:00:45.620
down here in terms of our querying a view
17

17

00:00:45.620  -->  00:00:49.510
we can do something like....
18

18

00:00:49.510  -->  00:01:03.790
...
19

19

00:01:03.790  -->  00:01:06.920
we go back and do that i'll paste that
20

20

00:01:06.920  -->  00:01:13.880
into db browser just to confirm the
21

21

00:01:13.880  -->  00:01:17.710
title equals and as
22

22

00:01:17.710  -->  00:01:19.210
with previous videos let's go with ones
23

23

00:01:19.210  -->  00:01:26.710
we've used before so go your own way you
24

24

00:01:26.710  -->  00:01:28.100
can see we get the same result Fleetwood
25

25

00:01:28.100  -->  00:01:32.890
Mac and four rows returned this time
26

26

00:01:32.890  -->  00:01:34.700
they're ordered by album title because
27

27

00:01:34.700  -->  00:01:36.250
we ordered the records that way when we
28

28

00:01:36.250  -->  00:01:37.520
created the view
29

29

00:01:37.520  -->  00:01:39.820
alright so now that we know that the
30

30

00:01:39.820  -->  00:01:42.590
query works let's start making use of it
31

31

00:01:42.590  -->  00:01:45.820
what we'll do is we actually start
32

32

00:01:45.820  -->  00:01:49.000
coding this particular query let's go
33

33

00:01:49.000  -->  00:01:53.170
back to our data source and we'll add
34

34

00:01:53.170  -->  00:01:56.810
another line here is on line 84 and
35

35

00:01:56.810  -->  00:01:58.100
we're going to start by putting....
36

36

00:01:58.100  -->  00:02:54.890
...
37

37

00:02:54.890  -->  00:02:58.400
....alright so now
38

38

00:02:58.400  -->  00:02:59.390
that we've done that
39

39

00:02:59.390  -->  00:03:03.260
let's go and create the method that is
40

40

00:03:03.260  -->  00:03:05.020
going to query the view
41

41

00:03:05.020  -->  00:03:08.650
ok and delete that now so....
42

42

00:03:08.650  -->  00:06:26.030
...
43

43

00:06:26.030  -->  00:06:27.290
getting a little bit hard to read with
44

44

00:06:27.290  -->  00:06:29.150
all these squiggles and I guess that's a
45

45

00:06:29.150  -->  00:06:31.550
good thing in the sense that it is
46

46

00:06:31.550  -->  00:06:33.970
notifying you got some duplicate code it
47

47

00:06:33.970  -->  00:06:36.320
is good to fix it and remove these
48

48

00:06:36.320  -->  00:06:38.120
warnings what I'm going to do
49

49

00:06:38.120  -->  00:06:40.700
temporarily is turn off the duplicate code
50

50

00:06:40.700  -->  00:06:42.620
checking because it's really starting to
51

51

00:06:42.620  -->  00:06:44.470
interrupt with the way that thise code
52

52

00:06:44.470  -->  00:06:46.430
looks but I wouldn't suggest you
53

53

00:06:46.430  -->  00:06:48.050
normally turn off the duplicate code
54

54

00:06:48.050  -->  00:06:50.000
checking because you want intelliJ
55

55

00:06:50.000  -->  00:06:52.370
to be telling you if you are duplicating code
56

56

00:06:52.370  -->  00:06:54.710
but to turn it off I'm going to do now
57

57

00:06:54.710  -->  00:06:57.830
click on preferences and click on editor
58

58

00:06:57.830  -->  00:07:01.100
click on inspections then want to scroll
59

59

00:07:01.100  -->  00:07:04.070
down here to general expand that and
60

60

00:07:04.070  -->  00:07:06.830
here under duplicated code want to take
61

61

00:07:06.830  -->  00:07:10.220
the check box off that click on OK and
62

62

00:07:10.220  -->  00:07:11.630
that removes that temporarily for now
63

63

00:07:11.630  -->  00:07:13.780
bearing in mind that we will need to do
64

64

00:07:13.780  -->  00:07:15.440
suggest you actually enable in a future
65

65

00:07:15.440  -->  00:07:17.330
point because its good to be checking those
66

66

00:07:17.330  -->  00:07:20.000
types of things normally alright so in
67

67

00:07:20.000  -->  00:07:22.310
relation to this method that we create
68

68

00:07:22.310  -->  00:07:25.130
query song info view the only real
69

69

00:07:25.130  -->  00:07:27.380
difference between this one and the
70

70

00:07:27.380  -->  00:07:30.140
query artist for song method is the query
71

71

00:07:30.140  -->  00:07:33.440
string we're using now again I just
72

72

00:07:33.440  -->  00:07:35.450
disabled the duplicate code temporarily
73

73

00:07:35.450  -->  00:07:37.790
but you shouldn't refactor the code
74

74

00:07:37.790  -->  00:07:39.200
that loops through the result
75

75

00:07:39.200  -->  00:07:41.330
into another method that's something
76

76

00:07:41.330  -->  00:07:44.030
that i will leave you as an exercise to do
77

77

00:07:44.030  -->  00:07:45.920
alright so let's go back now and
78

78

00:07:45.920  -->  00:07:49.040
call the query song info view method
79

79

00:07:49.040  -->  00:07:53.150
from our main class main method
80

80

00:07:53.150  -->  00:07:56.750
so we going to go ahead and write
81

81

00:07:56.750  -->  00:07:59.240
some code so it's going to be...
82

82

00:07:59.240  -->  00:08:02.330
....
83

83

00:08:02.330  -->  00:09:15.360
...
84

84

00:09:15.360  -->  00:09:23.070
alright let's just try running that you
85

85

00:09:23.070  -->  00:09:24.450
can see here we've got our 4 lines
86

86

00:09:24.450  -->  00:09:26.730
of the output got it working on
87

87

00:09:26.730  -->  00:09:29.490
so note what i did add here
88

88

00:09:29.490  -->  00:09:34.680
on line 55 is this is empty method to
89

89

00:09:34.680  -->  00:09:36.020
check whether any information was
90

90

00:09:36.020  -->  00:09:38.100
returned from the song and just as a
91

91

00:09:38.100  -->  00:09:39.300
note here we should really have been
92

92

00:09:39.300  -->  00:09:41.220
doing that in main dot java for all
93

93

00:09:41.220  -->  00:09:43.140
our queries rather than checking for
94

94

00:09:43.140  -->  00:09:45.950
null since we always at least create the
95

95

00:09:45.950  -->  00:09:48.080
list in the data source methods
96

96

00:09:48.080  -->  00:09:50.910
I mean no real harm done down but I just meant that
97

97

00:09:50.910  -->  00:09:53.040
with no records were returned we wouldn't
98

98

00:09:53.040  -->  00:09:54.540
see the message printed to the console
99

99

00:09:54.540  -->  00:09:56.430
using . is empty is a much better
100

100

00:09:56.430  -->  00:09:59.880
way of checking for that just
101

101

00:09:59.880  -->  00:10:01.580
confirms just try the other songs that
102

102

00:10:01.580  -->  00:10:03.080
we've been working on in this section of
103

103

00:10:03.080  -->  00:10:10.980
the course..
104

104

00:10:10.980  -->  00:10:12.260
...
105

105

00:10:12.260  -->  00:10:14.640
...and one more
106

106

00:10:14.640  -->  00:10:18.630
...and again
107

107

00:10:18.630  -->  00:10:20.570
capitalization is important here
108

108

00:10:20.570  -->  00:10:24.890
she's on fire
109

109

00:10:24.890  -->  00:10:26.550
that's a good confirmation that
110

110

00:10:26.550  -->  00:10:28.050
couldn't find the artist of the songs that is
111

111

00:10:28.050  -->  00:10:30.420
returning can't find a match
112

112

00:10:30.420  -->  00:10:35.640
capital o we get the right
113

113

00:10:35.640  -->  00:10:37.350
response she's on fire
114

114

00:10:37.350  -->  00:10:40.190
okay that's good so getting the same
115

115

00:10:40.190  -->  00:10:42.890
results from our view that we were when
116

116

00:10:42.890  -->  00:10:44.790
we called the query artist for song method
117

117

00:10:44.790  -->  00:10:46.920
that's really all there is to working
118

118

00:10:46.920  -->  00:10:49.800
with views now our code is decent at the
119

119

00:10:49.800  -->  00:10:51.570
moment but there's one more important
120

120

00:10:51.570  -->  00:10:54.420
improvement we can make in fact the way
121

121

00:10:54.420  -->  00:10:56.370
we query the database now isn't best
122

122

00:10:56.370  -->  00:10:58.920
practice sql statement have to be
123

123

00:10:58.920  -->  00:11:01.640
compiled into a form that the database
124

124

00:11:01.640  -->  00:11:04.580
understands now when we use a statement
125

125

00:11:04.580  -->  00:11:07.500
object to perform queries statements
126

126

00:11:07.500  -->  00:11:09.720
actually compiled every time we perform
127

127

00:11:09.720  -->  00:11:11.820
a new query now in this little
128

128

00:11:11.820  -->  00:11:14.130
application doesn't matter but if you
129

129

00:11:14.130  -->  00:11:15.830
are using a statement objects in an
130

130

00:11:15.830  -->  00:11:17.730
enterprise application servicing
131

131

00:11:17.730  -->  00:11:19.560
thousands of connections that would
132

132

00:11:19.560  -->  00:11:22.580
definitely impact performance and also
133

133

00:11:22.580  -->  00:11:24.480
the way that we're building a query
134

134

00:11:24.480  -->  00:11:27.320
strings makes a database vulnerable to
135

135

00:11:27.320  -->  00:11:28.490
hacking attempts
136

136

00:11:28.490  -->  00:11:31.130
I'm going to finish the video here but
137

137

00:11:31.130  -->  00:11:32.180
in the next video I'll actually
138

138

00:11:32.180  -->  00:11:34.910
demonstrate why that's the case then
139

139

00:11:34.910  -->  00:11:36.290
we'll start looking at prepared
140

140

00:11:36.290  -->  00:11:38.180
statements which is a way to help
141

141

00:11:38.180  -->  00:11:40.390
improve performance to sort of
142

142

00:11:40.390  -->  00:11:41.950
counteract the problems that i mentioned
143

143

00:11:41.950  -->  00:11:43.940
just now with the queries being
144

144

00:11:43.940  -->  00:11:45.950
compiled each time we perform a new
145

145

00:11:45.950  -->  00:11:52.930
query so see you in the next video
