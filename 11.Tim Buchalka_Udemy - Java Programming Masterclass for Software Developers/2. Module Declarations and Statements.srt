1
1

00:00:05,520  -->  00:00:08,100
So module declaration and statements.
2

2

00:00:08,100  -->  00:00:13,370
So let's discuss now module declaration and statements to be used.
3

3

00:00:13,580  -->  00:00:15,790
So as we've discussed in the previous video,
4

4

00:00:16,110  -->  00:00:21,860
each module is defined using a module declaration using the newly introduced a module keyword.
5

5

00:00:22,050  -->  00:00:24,270
So the syntax is the following.
6

6

00:00:24,270  -->  00:00:29,610
You can say we've got module, module name, we've got curly braces and then some module statements
7

7

00:00:29,670  -->  00:00:37,620
in closing curly braces and optionally we've got this open modify. Now the open modify declares an open
8

8

00:00:37,620  -->  00:00:42,960
module or in other words a module that exports all its packages to be used by reflective excess.
9

9

00:00:42,960  -->  00:00:50,250
But more on this later when we start creating modules, so the module name is the name of the defined module
10

10

00:00:51,120  -->  00:00:53,060
and the module name is mandatory.
11

11

00:00:53,140  -->  00:00:58,890
We can have two modules inside the same code base with the same name and it's good practice to name
12

12

00:00:58,990  -->  00:01:01,750
modules with the same name as packages.
13

13

00:01:01,750  -->  00:01:08,260
And inside the curly braces we have zero or more module statements and those statements can be the export statement,
14

14

00:01:08,280  -->  00:01:16,950
the open statement, requires statement, uses statement, or the provides statement. So the requires statement
15

15

00:01:17,280  -->  00:01:21,900
is used to specify the module that's required by the current module.
16

16

00:01:21,900  -->  00:01:26,360
In other words if our module depends on some other modules we have to specify it
17

17

00:01:26,390  -->  00:01:28,600
using the require statement.
18

18

00:01:28,620  -->  00:01:34,050
Now we can use more requires statements depending on how many modules are needed for our module.
19

19

00:01:34,200  -->  00:01:39,430
Now the export statement is used to specify the packages that are exported by the count module.
20

20

00:01:39,720  -->  00:01:45,510
Now the provide statement is used to specify the service implementations that the current modules provide.
21

21

00:01:45,820  -->  00:01:52,810
Now the uses statement is used to specify the service that the current module consumes and
22

22

00:01:52,910  -->  00:01:58,230
a point here is keep in mind that the open statement can't be used in open modules because all packages
23

23

00:01:58,230  -->  00:02:01,020
are open in an open module.
24

24

00:02:01,170  -->  00:02:06,540
So let's move on to the next video that we're going to discuss module types and the module path.
25

25

00:02:06,540  -->  00:02:07,960
So see you in the next video.
