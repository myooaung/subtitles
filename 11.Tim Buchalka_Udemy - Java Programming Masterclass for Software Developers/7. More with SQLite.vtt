WEBVTT
1
1

00:00:05.010  -->  00:00:09.540
alright so i ended the last video by
saying that we can put any kind of data
2

2

00:00:09.540  -->  00:00:12.870
into any column in sql lite which is a
bit strange
3

3

00:00:12.870  -->  00:00:19.940
so let's actually try doing that and what I might do is just clear and do a .quit
4

4

00:00:19.940  -->  00:00:25.610
and going to a clear and then just go
back in so we can sort of see this at
5

5

00:00:25.610  -->  00:00:29.310
the top a little bit easy to read and
i'm just going to do a select here
6

6

00:00:29.310  -->  00:00:37.530
.....so let's now try and put in
7

7

00:00:37.530  -->  00:00:43.820
any kind of data into these columns so
going to type....
8

8

00:00:43.820  -->  00:01:05.360
....
9

9

00:01:05.360  -->  00:01:10.590
that would have work but forgot semicolon...now it work I have
10

10

00:01:10.590  -->  00:01:14.280
just put string data into an integer
column which is actually believe it or
11

11

00:01:14.280  -->  00:01:18.420
not is fine in sql lite just to
confirm that will select....
12

12

00:01:18.420  -->  00:01:24.870
....and there's our record you can
see the string number we put in the
13

13

00:01:24.870  -->  00:01:31.020
second entry here which was numbers in
other cases has worked quite happily so
14

14

00:01:31.020  -->  00:01:35.880
we enter the string wherein where number
would ordinarily have been placed now
15

15

00:01:35.880  -->  00:01:40.490
as a programmer you might be horrified by what you've just seen
and in fact doing things like that can
16

16

00:01:40.490  -->  00:01:45.710
cause problems when you try to get the
data back from a java program now if your
17

17

00:01:45.710  -->  00:01:49.480
code tries to put that phone number into
an integer variable then it is going to
18

18

00:01:49.480  -->  00:01:54.320
crash if you switch databases and try to
use the same code in say Microsoft sql
19

19

00:01:54.320  -->  00:01:58.670
server then it won't work either
because the main client server sql
20

20

00:01:58.670  -->  00:02:03.290
databases do actually check the type of
data that goes into columns so make
21

21

00:02:03.290  -->  00:02:07.130
sure you use an appropriate type for the columns when you create your tables
22

22

00:02:07.130  -->  00:02:12.820
now one thing that does sql lite lacks is an altar table command for
23

23

00:02:12.820  -->  00:02:15.130
changing things like the type of the
columns
24

24

00:02:15.130  -->  00:02:18.940
there's actually ways around that
creating a new table and moving the data
25

25

00:02:18.940  -->  00:02:22.600
from the old table into it for example
but it's really best to get it right
26

26

00:02:22.600  -->  00:02:23.800
first time
27

27

00:02:23.800  -->  00:02:27.820
alright so now we know how to create a
table and insert some data or some
28

28

00:02:27.820  -->  00:02:33.040
rows into it but we can also update the
data that's in their now firstly
29

29

00:02:33.040  -->  00:02:36.970
going to use the . backup command to
make a backup of the table you'll see
30

30

00:02:36.970  -->  00:02:37.990
why in a minute
31

31

00:02:37.990  -->  00:02:44.740
the command is . back up and then you
tell it which database to backup then
32

32

00:02:44.740  -->  00:02:47.230
the filename you want to back up to
33

33

00:02:47.230  -->  00:02:51.220
if we don't tell which database you want
to backup and it does the current one
34

34

00:02:51.220  -->  00:02:54.850
which is fine and makes the command very
easy to use for this case I'm just going
35

35

00:02:54.850  -->  00:02:58.510
to do test back up like so
36

36

00:02:58.510  -->  00:03:03.400
notice that this is a sql lite
command not a sql statement so
37

37

00:03:03.400  -->  00:03:07.900
there's no need to put a semicolon at
the end if it starts with a . it's a
38

38

00:03:07.900  -->  00:03:13.600
sql lite command . first or semicolon
last but not both gonna press enter
39

39

00:03:13.600  -->  00:03:19.690
their alright so I backed it up so moving on
let's say we now have steves email
40

40

00:03:19.690  -->  00:03:24.760
address we want to update his record in
the table we actually do that using the
41

41

00:03:24.760  -->  00:03:38.560
update statement so we type in update....
42

42

00:03:38.560  -->  00:03:46.390
.....so here i'm updating the email
address in the contacts table but you
43

43

00:03:46.390  -->  00:03:49.840
actually have to be careful with this
command i haven't at the moment told
44

44

00:03:49.840  -->  00:03:51.280
it which row to update
45

45

00:03:51.280  -->  00:03:54.940
so it's going to update every row in the
table i'm going to add the semicolon
46

46

00:03:54.940  -->  00:04:05.530
now and press enter and now if I type....you can see
47

47

00:04:05.530  -->  00:04:06.370
what happened there
48

48

00:04:06.370  -->  00:04:10.090
everyone has the same email address
which is almost certainly not what we
49

49

00:04:10.090  -->  00:04:15.430
want to happen so the update command is
a very powerful command and a single
50

50

00:04:15.430  -->  00:04:20.430
sql statement can update hundreds of
thousands of rows in the database so you
51

51

00:04:20.430  -->  00:04:23.210
want to be very careful when using the
update command
52

52

00:04:23.210  -->  00:04:27.200
especially in an interactive session
like this you can render the data in
53

53

00:04:27.200  -->  00:04:31.880
your database useless and believe me I've done
it updated tens of thousands of records
54

54

00:04:31.880  -->  00:04:36.230
when I only intended to update one in a
production database before and just
55

55

00:04:36.230  -->  00:04:40.940
without going into too much detail cause
a lot of grief for all concerned but
56

56

00:04:40.940  -->  00:04:45.410
luckily this time I backed up the
database first so we can get it back and
57

57

00:04:45.410  -->  00:04:53.150
do the update properly so i can type in
. restore test back up and then i can
58

58

00:04:53.150  -->  00:04:59.630
actually check the data is back doing....you can see
59

59

00:04:59.630  -->  00:05:03.560
we've got our data back with the
original entries alright so how do we
60

60

00:05:03.560  -->  00:05:08.000
update just steve record to do that what
we need to do is we still need to use
61

61

00:05:08.000  -->  00:05:12.830
the update command but we need to add a
where clause i'm going to type....
62

62

00:05:12.830  -->  00:05:26.480
......
63

63

00:05:26.480  -->  00:05:34.070
.....and press
enter now that's more like what was
64

64

00:05:34.070  -->  00:05:38.360
required only steves record has now been
updated so that's how to use a where
65

65

00:05:38.360  -->  00:05:43.280
clause is just the word where followed
by condition that identifies a row or
66

66

00:05:43.280  -->  00:05:47.240
set of rows to be updated and you
probably see now that's why back ups
67

67

00:05:47.240  -->  00:05:52.100
are also very important now where clause
can be used with many sql statements
68

68

00:05:52.100  -->  00:05:55.970
so you could display just a subset of
the data by using a where clause with
69

69

00:05:55.970  -->  00:06:01.550
the select statement just do a select just to make sure all
70

70

00:06:01.550  -->  00:06:05.990
entries are there and we've got his
email address has been updated you can
71

71

00:06:05.990  -->  00:06:09.200
see they've all got individual email
addresses and steves email addresses now
72

72

00:06:09.200  -->  00:06:15.110
been updated so we can also use that
where clause in a select statement so we
73

73

00:06:15.110  -->  00:06:27.080
can do something like.....you can
74

74

00:06:27.080  -->  00:06:31.100
see that's come back and showed only one
entry perhaps more useful though if we
75

75

00:06:31.100  -->  00:06:34.100
already know the name theirs no point
retrieving data that we don't need so we
76

76

00:06:34.100  -->  00:06:35.930
could do something like....
77

77

00:06:35.930  -->  00:06:45.890
....you see that just returns
78

78

00:06:45.890  -->  00:06:51.110
the email the phone number and the email
address so that is select insert update
79

79

00:06:51.110  -->  00:06:53.420
and we can also delete records
80

80

00:06:53.420  -->  00:07:00.440
no prizes for guessing what the command
is you gotta it delete so.....
81

81

00:07:00.440  -->  00:07:05.840
and once again we have to be very
carefully here without a where clause to
82

82

00:07:05.840  -->  00:07:10.700
specify which row should be deleted the
commandant will apple to the entire set of
83

83

00:07:10.700  -->  00:07:15.980
rows in the database and yes i have done
that as well so putting the where clause
84

84

00:07:15.980  -->  00:07:20.390
in here....
85

85

00:07:21.890  -->  00:07:26.570
we know that 1234 was the phone number
that we entered for brian so i'm going to
86

86

00:07:26.570  -->  00:07:33.230
press ENTER there and I'm going to do a
select command....
87

87

00:07:33.230  -->  00:07:39.170
and you can see that Brian is now
missing from that list and that's
88

88

00:07:39.170  -->  00:07:43.370
because we've deleted his record by
doing using the delete sql statement
89

89

00:07:43.370  -->  00:07:48.290
and using the where clause which
specified his phone number so we've now
90

90

00:07:48.290  -->  00:07:55.130
seen a few sql statements create
insert select update and delete these
91

91

00:07:55.130  -->  00:07:58.970
are the most common commands that you
need and you can do a lot with sql
92

92

00:07:58.970  -->  00:08:03.320
databases with just those commands there
are a few ways to modify the command
93

93

00:08:03.320  -->  00:08:07.850
especially the Select statement and
we'll be having a look at using join in
94

94

00:08:07.850  -->  00:08:12.590
the next video to relate tables together
but that's the basics and hopefully you
95

95

00:08:12.590  -->  00:08:16.460
feel a bit happy about having to learn a
new language and you've seen its
96

96

00:08:16.460  -->  00:08:18.830
really not going to be perhaps as
difficult as you thought it might be
97

97

00:08:18.830  -->  00:08:22.430
working with sql lite from the
command line like this is very useful
98

98

00:08:22.430  -->  00:08:26.690
because you can concentrate on the
details of your tables and columns and
99

99

00:08:26.690  -->  00:08:31.280
get everything right before trying to
include the command in code it gets better
100

100

00:08:31.280  -->  00:08:34.700
too because there's a couple of sql lite commands that you can use once
101

101

00:08:34.700  -->  00:08:38.360
everything set up so let's have a look
at a few of those the first one we can
102

102

00:08:38.360  -->  00:08:44.960
type is . tables and . tables lists all
the tables in the database which can be
103

103

00:08:44.960  -->  00:08:48.470
handy when you have a lot of them and
forget what about when you know what you
104

104

00:08:48.470  -->  00:08:49.520
actually called one
105

105

00:08:49.520  -->  00:08:58.220
the next one . schema that print out the
structure of your tables now we only
106

106

00:08:58.220  -->  00:09:02.300
have one table in this database you can
see how it shows the sql commands
107

107

00:09:02.300  -->  00:09:05.750
that was used to create it so you can
copy that command and paste it into
108

108

00:09:05.750  -->  00:09:10.400
code when you want to create tables in
code will create that table in code and
109

109

00:09:10.400  -->  00:09:14.690
you've got several tables then . schema
followed by a table name will put the
110

110

00:09:14.690  -->  00:09:23.030
structure for just that one table and
there's also . dump and that
111

111

00:09:23.030  -->  00:09:26.660
gives you the sequel statement for
creating the table but all the inserts
112

112

00:09:26.660  -->  00:09:30.860
necessary to populate it with the data
that's in it so it wraps the whole thing
113

113

00:09:30.860  -->  00:09:35.450
and what's called a transaction you can
see we've got the begin transaction
114

114

00:09:35.450  -->  00:09:39.860
and commits there and we'll be talking about
that little bit later but again you can
115

115

00:09:39.860  -->  00:09:45.350
copy and paste the output from dumped
into your code and finally . exit or .
116

116

00:09:45.350  -->  00:09:50.090
quit will actually exit the sql lite
shell and take you back to your command
117

117

00:09:50.090  -->  00:09:54.650
prompt or terminal session so that's the
basic introduction to sql lite and
118

118

00:09:54.650  -->  00:09:59.090
these sql language now the sql lite shell is useful when you need to
119

119

00:09:59.090  -->  00:10:03.020
design your database and it's generally
easy to use some sort of front end to the
120

120

00:10:03.020  -->  00:10:07.580
database when setting things up so that
you can make sure you've got all the
121

121

00:10:07.580  -->  00:10:11.000
tables created correctly with the right
columns and so on
122

122

00:10:11.000  -->  00:10:15.620
you can also test the queries that
you be using your code before you get
123

123

00:10:15.620  -->  00:10:18.950
around to writing the code so you know
that the sql side of things has been
124

124

00:10:18.950  -->  00:10:24.260
set up correctly and is working ok so we now
seen how to create tables and insert
125

125

00:10:24.260  -->  00:10:28.610
update and delete the record in them and
we've also had a brief look at querying
126

126

00:10:28.610  -->  00:10:32.450
the data in a table so in the next video
we're going to work with a database that
127

127

00:10:32.450  -->  00:10:36.950
already has some data in it so we can
practice querying data a bit more and
128

128

00:10:36.950  -->  00:10:41.030
also look at to how to join tables
together so see you in the next video
