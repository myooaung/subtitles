1
1

00:00:05,450  -->  00:00:09,260
In the previous two videos,
we actually created our challenge,
2

2

00:00:09,260  -->  00:00:11,510
our banking application.
3

3

00:00:11,510  -->  00:00:14,710
And in this video we're gonna go
ahead now and actually test it.
4

4

00:00:14,710  -->  00:00:17,570
We're going to put some code
in our main class, in the main
5

5

00:00:17,570  -->  00:00:21,610
method within that class, and just test
that it's all doing as it should be doing.
6

6

00:00:21,610  -->  00:00:25,670
So, we're going to start here in our main
class as I said, in the main method.
7

7

00:00:25,670  -->  00:00:27,490
So, let's start implementing some of this.
8

8

00:00:27,490  -->  00:00:34,940
So firstly, we're going to start
with Bank, so Bank bank = new Bank.
9

9

00:00:34,940  -->  00:00:37,660
And I'll choose a bank that's in
Australia, National Australia Bank.
10

10

00:00:41,370  -->  00:00:42,160
Nothing new there.
11

11

00:00:42,160  -->  00:00:45,770
So we're creating a new class,
a new object for the bank class.
12

12

00:00:45,770  -->  00:00:49,890
Next we wanna add a branch, so
let's add a branch, bank.addBranch.
13

13

00:00:49,890  -->  00:00:52,930
The branch is going to be called Adelaide.
14

14

00:00:56,510  -->  00:00:58,310
Next, let's add some customers.
15

15

00:00:58,310  -->  00:01:02,610
And if you recall the customers,
bank.addCustomer.
16

16

00:01:02,610  -->  00:01:07,350
And then it will be Adelaide,
the customer name, and
17

17

00:01:07,350  -->  00:01:10,960
in this case it would be me, it's Tim.
18

18

00:01:10,960  -->  00:01:12,710
And let's put $50.05.
19

19

00:01:12,710  -->  00:01:15,070
Let's add a couple more.
20

20

00:01:15,070  -->  00:01:16,320
addCustomer.
21

21

00:01:16,320  -->  00:01:19,760
We'll do the same branch again.
22

22

00:01:22,280  -->  00:01:24,690
Mike, 175.34.
23

23

00:01:24,690  -->  00:01:34,470
bank.addCustomer("Adelaide", "Percy",
24

24

00:01:34,470  -->  00:01:38,040
220.12).
25

25

00:01:38,040  -->  00:01:41,720
So, that's three customers that
we've added to the Adelaide branch,
26

26

00:01:41,720  -->  00:01:44,490
which is part of
the National Australian Bank.
27

27

00:01:44,490  -->  00:01:47,260
So, let's create another
branch on the other side.
28

28

00:01:47,260  -->  00:01:49,250
bank.addBranch, and
of course, we're in Sydney.
29

29

00:01:51,850  -->  00:01:53,860
And, let's just add one customer to it.
30

30

00:01:53,860  -->  00:01:54,790
addCustomer.
31

31

00:01:56,490  -->  00:01:58,010
And will be Sydney of course.
32

32

00:01:58,010  -->  00:01:59,890
And Bob.
33

33

00:02:02,050  -->  00:02:03,350
Bob, and I missed his quote there.
34

34

00:02:03,350  -->  00:02:08,260
And besides $150.54.
35

35

00:02:08,260  -->  00:02:11,410
Okay, next we'll add
some more transactions.
36

36

00:02:11,410  -->  00:02:14,840
So these are obviously the customers,
we've added them once, so there'll only be
37

37

00:02:14,840  -->  00:02:18,440
one transaction for each of those because
they're being added literally just once.
38

38

00:02:18,440  -->  00:02:23,350
But we'll add some transactions,
bank.addCustomerTransaction.
39

39

00:02:23,350  -->  00:02:25,150
And let's do them for Adelaide.
40

40

00:02:25,150  -->  00:02:28,660
Adelaide, we'll do a couple for
me and then one for, say Mike.
41

41

00:02:30,490  -->  00:02:32,540
44.22.
42

42

00:02:32,540  -->  00:02:34,470
We'll add a couple more here,
and I'll just copy and
43

43

00:02:34,470  -->  00:02:35,640
paste them to save a bit of time.
44

44

00:02:37,790  -->  00:02:38,950
Space there.
45

45

00:02:38,950  -->  00:02:42,200
So the next one,
let's add another one for me.
46

46

00:02:42,200  -->  00:02:42,970
I must be rich.
47

47

00:02:42,970  -->  00:02:46,150
$12.44.
48

48

00:02:46,150  -->  00:02:52,810
And the last one, say $1.65 for Mike.
49

49

00:02:52,810  -->  00:02:53,770
Okay.
50

50

00:02:53,770  -->  00:02:55,940
Now we've done that, let's actually
try and see whether this works.
51

51

00:02:55,940  -->  00:03:01,620
So we'll do first
bank.listCustomers("Adelaide").
52

52

00:03:03,280  -->  00:03:06,470
We can do it false first, so
we're not gonna show the transactions.
53

53

00:03:06,470  -->  00:03:09,070
So I think we've got enough code
in there now to actually run this.
54

54

00:03:09,070  -->  00:03:12,260
So let's run this and actually see what
happens and see whether it actually works.
55

55

00:03:14,270  -->  00:03:14,770
Run.
56

56

00:03:17,990  -->  00:03:22,730
Okay, so we can see over here to
the right hand side, Customer details for
57

57

00:03:22,730  -->  00:03:23,970
branch Adelaide.
58

58

00:03:23,970  -->  00:03:24,850
We've got customer.
59

59

00:03:24,850  -->  00:03:28,880
Customer number 1 is Tim,
customer number 2 is Mike, 3 is Percy.
60

60

00:03:28,880  -->  00:03:29,960
And that's in order there.
61

61

00:03:29,960  -->  00:03:31,130
Tim, Mike, and Percy.
62

62

00:03:31,130  -->  00:03:32,260
So that's good.
63

63

00:03:32,260  -->  00:03:34,590
And it didn't show us our transactions, or
64

64

00:03:34,590  -->  00:03:36,970
didn't show the transactions
because we selected false there.
65

65

00:03:36,970  -->  00:03:40,560
So if we select true there,
let's try that, and run that again, and
66

66

00:03:40,560  -->  00:03:42,600
see what happens, and see if that works.
67

67

00:03:44,740  -->  00:03:45,780
Okay so let's have a look at this.
68

68

00:03:45,780  -->  00:03:48,400
So we've got customer Tim number 1.
69

69

00:03:48,400  -->  00:03:52,730
Transactions for Tim should be $50.05,
which it should be in order,
70

70

00:03:52,730  -->  00:03:56,180
which is $50.05 when Tim was
added as a new customer.
71

71

00:03:56,180  -->  00:03:59,210
44.22 which is this one here.
72

72

00:03:59,210  -->  00:04:01,500
And $12.44, so that is correct.
73

73

00:04:01,500  -->  00:04:02,900
Customer 2 is Mike.
74

74

00:04:02,900  -->  00:04:05,290
So he had initial one was 175.34.
75

75

00:04:05,290  -->  00:04:10,440
He then got another one for $1.65,
so that's his two entries there.
76

76

00:04:10,440  -->  00:04:12,480
Customer number 3, Percy, $220.12.
77

77

00:04:12,480  -->  00:04:15,360
And he didn't get another
transaction there, so
78

78

00:04:15,360  -->  00:04:18,520
therefore that seems to
all be working well.
79

79

00:04:18,520  -->  00:04:21,240
And Customer details for
branch Adelaide is also working.
80

80

00:04:21,240  -->  00:04:24,310
So just to make sure that it is working,
let's add another one here.
81

81

00:04:24,310  -->  00:04:27,250
bank.listCustomers("Sydney").
82

82

00:04:27,250  -->  00:04:31,800
And we'll show the list of
transactions for that as well.
83

83

00:04:31,800  -->  00:04:33,920
And we should only get
the one transaction for Bob,
84

84

00:04:33,920  -->  00:04:35,610
cuz that's the only one
we've actually added.
85

85

00:04:37,550  -->  00:04:40,980
Customer details for branch Sydney,
customer Bob number 1,
86

86

00:04:40,980  -->  00:04:43,870
transactions number 1, amount $150.54.
87

87

00:04:43,870  -->  00:04:47,130
So that seems to be working well,
which is good.
88

88

00:04:47,130  -->  00:04:48,750
So let's try some other things here.
89

89

00:04:48,750  -->  00:04:53,610
We'll actually try sending some
data through that's invalid.
90

90

00:04:53,610  -->  00:04:55,810
So getting back to our branch Adelaide.
91

91

00:04:55,810  -->  00:04:56,990
Let's try and do something like this.
92

92

00:04:56,990  -->  00:05:05,490
We'll put if(!bank.addCustomer()).
93

93

00:05:05,490  -->  00:05:09,460
And we'll call this one Melbourne,
94

94

00:05:09,460  -->  00:05:15,860
which we haven't created that yet,
Brian, $5.53.
95

95

00:05:15,860  -->  00:05:22,340
We're gonna print out the error to say
Error Melbourne branch does not exist.
96

96

00:05:23,630  -->  00:05:26,370
Exist, like so, and we run this again.
97

97

00:05:29,440  -->  00:05:30,970
Error Melbourne branch does not exist.
98

98

00:05:30,970  -->  00:05:35,380
So we're correctly getting an error
because Melbourne didn't exist.
99

99

00:05:35,380  -->  00:05:36,820
And just to confirm that is the case,
100

100

00:05:36,820  -->  00:05:40,870
we can then do something like,
bank.addBranch("Melbourne").
101

101

00:05:42,670  -->  00:05:47,190
And by doing that we should find that
error will disappear now because of course
102

102

00:05:47,190  -->  00:05:48,430
that branch does exist.
103

103

00:05:50,210  -->  00:05:51,920
And the error's actually gone away,
so that's good.
104

104

00:05:51,920  -->  00:05:53,990
So our basic testing is working.
105

105

00:05:53,990  -->  00:05:56,660
The other thing that we can test here,
we can do a few more.
106

106

00:05:56,660  -->  00:05:59,240
I won't do them all, but I'll leave you
to actually do some more of these in
107

107

00:05:59,240  -->  00:06:02,230
the future to see whether
you can get this to work and
108

108

00:06:02,230  -->  00:06:06,170
find all the areas to see if that we've
actually correctly validated them all.
109

109

00:06:06,170  -->  00:06:10,300
But another one we can try to do is
add a branch we know already exists.
110

110

00:06:10,300  -->  00:06:19,000
So what we can do there is we could
put if(!bank.addBranch("Adelaide")).
111

111

00:06:23,610  -->  00:06:29,500
Adelaide branch already exists.
112

112

00:06:29,500  -->  00:06:30,770
So in other words, we're getting an error
113

113

00:06:32,540  -->  00:06:35,280
trying to return a branch
that already exists.
114

114

00:06:35,280  -->  00:06:36,910
We should actually see
that error on the screen.
115

115

00:06:36,910  -->  00:06:37,440
So if I run that.
116

116

00:06:40,050  -->  00:06:44,190
Adelaide branch already exists, so we
correctly identify that there's an error.
117

117

00:06:44,190  -->  00:06:46,360
And just to confirm that,
we can put something here.
118

118

00:06:46,360  -->  00:06:50,890
We can put if branch
Adelaide at the top here,
119

119

00:06:50,890  -->  00:06:56,630
if we wanted our message to
say Adelaide Branch created.
120

120

00:07:00,690  -->  00:07:02,830
Like so.
So I run that again.
121

121

00:07:05,400  -->  00:07:06,360
Adelaide Branch created.
122

122

00:07:06,360  -->  00:07:07,900
So our true and falses are working, so
123

123

00:07:07,900  -->  00:07:10,060
in other words our data
validation is working.
124

124

00:07:10,060  -->  00:07:11,370
And what's another one we can try?
125

125

00:07:11,370  -->  00:07:15,050
Let's try and add another entry for,
in this case,
126

126

00:07:15,050  -->  00:07:17,650
a non existent customer and
see what happens.
127

127

00:07:18,830  -->  00:07:21,910
So we can put something like
128

128

00:07:21,910  -->  00:07:30,250
if(!bank.addCustomerTransaction("Adela-
ide", "Fergus".
129

129

00:07:35,730  -->  00:07:42,740
And we'll put,
Customer does not exist at branch.
130

130

00:07:45,250  -->  00:07:47,440
So we should get an error there
because Fergus doesn't exist.
131

131

00:07:49,670  -->  00:07:51,720
Customer does not exist at branch.
132

132

00:07:51,720  -->  00:07:54,250
So, that's good that we're getting
some good validation there.
133

133

00:07:54,250  -->  00:07:56,820
We're getting the correct validation
that's working which is, of course,
134

134

00:07:56,820  -->  00:07:57,780
what we wanna see.
135

135

00:07:57,780  -->  00:08:00,350
All right and, lastly,
let's try and add a customer.
136

136

00:08:00,350  -->  00:08:01,680
I don't think we've done that.
137

137

00:08:01,680  -->  00:08:03,440
Actually, we've done that already,
haven't we?
138

138

00:08:03,440  -->  00:08:07,030
We've tried to add a customer here, but
we're actually testing to see whether
139

139

00:08:07,030  -->  00:08:12,150
the actual bank failed, but what we can
actually do there is use a valid bank but
140

140

00:08:12,150  -->  00:08:15,220
an invalid customer to see what
actually happens for that.
141

141

00:08:15,220  -->  00:08:19,080
So what we want to do here is we want to
try and call the method to add a customer,
142

142

00:08:19,080  -->  00:08:22,140
where the customer all ready
exists at a particular branch.
143

143

00:08:22,140  -->  00:08:29,010
So to do that,
we can put if(!bank.addCustomer.
144

144

00:08:29,010  -->  00:08:31,980
And we're going to use, I need to make a
bit of space here to see what we're doing.
145

145

00:08:31,980  -->  00:08:39,090
We're gonna use ("Adelaide",
"Tim", 12.21).
146

146

00:08:42,440  -->  00:08:45,740
We'll just put Customer.
147

147

00:08:45,740  -->  00:08:47,940
Customer Tim already exists.
148

148

00:08:50,940  -->  00:08:54,470
So we're testing to see whether Tim
already exists at the Adelaide branch and
149

149

00:08:54,470  -->  00:08:55,300
we'll run that.
150

150

00:08:57,010  -->  00:08:58,770
Customer Tim already exists,
so that's good.
151

151

00:08:58,770  -->  00:08:59,520
That's validating it.
152

152

00:08:59,520  -->  00:09:04,600
And the last thing we can try and
do now is try and add a transaction.
153

153

00:09:04,600  -->  00:09:06,320
Actually we've done that already.
154

154

00:09:06,320  -->  00:09:08,350
Customer does not exist at branch,
so that's good.
155

155

00:09:08,350  -->  00:09:11,330
I think that's about all
the transactions we can actually test.
156

156

00:09:11,330  -->  00:09:14,560
So it seems to all be working, but
go through your code anyway and
157

157

00:09:14,560  -->  00:09:17,740
make sure that you have got
that validation working.
158

158

00:09:17,740  -->  00:09:20,880
But anyway,
that was my version of the challenge.
159

159

00:09:20,880  -->  00:09:22,070
I hope you've got a lot out of that.
160

160

00:09:22,070  -->  00:09:24,130
And again,
this is just one implementation.
161

161

00:09:24,130  -->  00:09:26,240
There's obviously more
ways to approach it.
162

162

00:09:26,240  -->  00:09:27,420
This is the one that I've come up with it.
163

163

00:09:27,420  -->  00:09:28,740
And I hope you've got a lot out of it.
164

164

00:09:28,740  -->  00:09:30,700
So I'll see you in the next set of videos.
