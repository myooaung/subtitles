WEBVTT
1
1

00:00:05.450  -->  00:00:09.930
Alright, let's discuss the challenge I'm about to give you and I suspect you can guess what it is.
2

2

00:00:10.250  -->  00:00:16.670
And after the challenge as always I'm going to show you my solution. So your challenge again is to fix
3

3

00:00:16.670  -->  00:00:22.010
the project that the we've currently got because if you recall from the last video it's got some errors and
4

4

00:00:22.010  -->  00:00:23.790
you want to make it run properly.
5

5

00:00:23.810  -->  00:00:30.260
Now the steps mainly; create UI module, move the UI package currently in the commons module to
6

6

00:00:30.260  -->  00:00:31.650
the new UI module.
7

7

00:00:31.820  -->  00:00:36.470
Then you want to go ahead and fix all module info files and all three may need to be changed here.
8

8

00:00:36.680  -->  00:00:41.360
And as a note, obviously, the project needs to run the same as it did before,
9

9

00:00:41.360  -->  00:00:47.680
in other words without any exceptions or errors. Let's have a look at the image with a module structure here.
10

10

00:00:48.030  -->  00:00:53.380
So this image represents the final module structure, so you can notice that some dependencies,
11

11

00:00:53.530  -->  00:00:58.270
In other words the modules that we need in our modules. Now you can add more modules, you don't have to
12

12

00:00:58.270  -->  00:00:59.980
match this image 100 percent.
13

13

00:01:00.220  -->  00:01:05.710
And I will also add more modules that we need later in the next video, I'm then gonna discuss how to
14

14

00:01:05.710  -->  00:01:08.670
use only modules that you actually need
15

15

00:01:08.910  -->  00:01:13.360
and how to include other modules automatically without specifying the requires statement.
16

16

00:01:13.750  -->  00:01:17.590
But in the challenge, for every module that the UI needs to use,
17

17

00:01:17.620  -->  00:01:24.160
just use a requires statement. And just a small tip, the UI module will need the common module
18

18

00:01:24.160  -->  00:01:29.770
not just db as per the image, so don't take this image as the 100 percent solution but you can use it
19

19

00:01:29.770  -->  00:01:35.640
as guidance and we're going to clean up the code later in the next video also to match everything
20

20

00:01:35.810  -->  00:01:40.990
so that it looks very much like you can see on this image. Alright, and let's just have a quick look
21

21

00:01:41.360  -->  00:01:44.310
at an image with a final project structure in IntelliJ
22

22

00:01:44.710  -->  00:01:50.910
so you can see there that shows you all the modules, packages and where each class needs to be.
23

23

00:01:51.000  -->  00:01:55.240
And I've talked about this a number of times I should be fairly familiar with the various modules and
24

24

00:01:55.240  -->  00:01:57.200
packages and so forth.
25

25

00:01:57.340  -->  00:02:01.310
So I'm just going to bring back the challenge one more time now before I pause the video on screen.
26

26

00:02:01.480  -->  00:02:02.970
So there's the challenge text there,
27

27

00:02:03.390  -->  00:02:08.260
So pause the video and see how you go with the challenge and when you're ready come back and we'll go through
28

28

00:02:08.260  -->  00:02:10.440
this step-by-step, so pause the video now.
29

29

00:02:12.800  -->  00:02:13.800
Okay, so welcome back.
30

30

00:02:13.810  -->  00:02:16.780
Hopefully you managed to get this working.
31

31

00:02:16.990  -->  00:02:21.170
So let's actually go through the steps to get this challenge solved.
32

32

00:02:21.630  -->  00:02:25.180
Now, we can use the same steps we've used previously for creating any modules.
33

33

00:02:25.180  -->  00:02:30.230
Let's start with that. We come up to file, click on New > Module
34

34

00:02:32.370  -->  00:02:41.670
click on next and the name is module of course is academy.learnprogramming.ui
35

35

00:02:41.780  -->  00:02:48.210
And of course that's the same package name, or it's the same name as the package name, now we got ui classes
36

36

00:02:49.090  -->  00:02:53.960
So there's our  third module now. So, we're going to open that up and see the source folder
37

37

00:02:53.980  -->  00:02:58.950
Let's create the module descriptor file, the module-info.java file, then the UI module.
38

38

00:02:59.470  -->  00:03:07.100
I'm going to click on source, right click New, select module-info.java and there's our module info file
39

39

00:03:07.420  -->  00:03:10.990
Next thing we need to do is start moving the UI package.
40

40

00:03:11.190  -->  00:03:15.510
I'm going to start by creating a new package in the UI module.
41

41

00:03:15.520  -->  00:03:24.100
It's kind of a new package, academy.learnprogramming. Let's enter there
42

42

00:03:24.460  -->  00:03:31.380
Next, I'm going to drag the UI package from the common module into, and surprisingly, our ui module
43

43

00:03:31.580  -->  00:03:39.850
I'm going to select ui, drag it, place on the academy.learnprogramming package in the UI module
44

44

00:03:39.910  -->  00:03:50.010
click ok to move it, click on Refactor and you can see now we've got a UI package in the UI module with
45

45

00:03:50.010  -->  00:03:53.620
controller, main and main.fxml in there.
46

46

00:03:54.170  -->  00:03:59.220
Alright, so let's have a look because we've got some potential problems here we got Main with an error.
47

47

00:03:59.270  -->  00:04:05.030
Let's look at controller first. We've got controller here and you can see, we've got quite a few errors here showing
48

48

00:04:05.030  -->  00:04:05.970
at the moment.
49

49

00:04:06.110  -->  00:04:11.870
Now, since ui module uses the classes Album, Artist ,data source and also some classes from
50

50

00:04:11.870  -->  00:04:13.370
the Java fx module,
51

51

00:04:13.460  -->  00:04:18.170
we obviously have to add the requires statements into our module-info.java file
52

52

00:04:18.500  -->  00:04:23.870
And as always, we can fix the compilation errors by using the read bulb where you can just type in the module info file,
53

53

00:04:24.050  -->  00:04:25.740
So I'll go ahead and type it in this time.
54

54

00:04:26.670  -->  00:04:31.660
Making sure I've selected the academy.learnprogramming.ui module descriptor file
55

55

00:04:31.660  -->  00:04:35.160
Alright, so we can say that we've got an empty file here at the moment.
56

56

00:04:35.220  -->  00:04:37.640
It's just got the module declaration on line one.
57

57

00:04:37.740  -->  00:04:42.050
Now we can copy some of the statements from the module info from the common module.
58

58

00:04:42.360  -->  00:04:45.780
That's because some of them are not used anymore and won't be used anymore in common.
59

59

00:04:45.960  -->  00:04:47.420
So let's actually go ahead and do that.
60

60

00:04:47.430  -->  00:04:54.400
We're going to open our common module descriptor file, you can see that's now got some errors as well.
61

61

00:04:54.400  -->  00:05:00.540
And surprisingly because we've moved the ui package. So since we are actually here that's actually clean
62

62

00:05:00.540  -->  00:05:02.930
up some of this. So we can go ahead
63

63

00:05:02.940  -->  00:05:09.940
now, we can leave java fx.base but we can't delete the graphics fxml controls
64

64

00:05:09.950  -->  00:05:14.610
And also the java.sql because I don't want other packages go ahead delete that
65

65

00:05:15.210  -->  00:05:21.360
And in terms of the exports, we're exporting the first line academy.learnprogramming.common.
66

66

00:05:21.610  -->  00:05:24.100
However, we don't need the second exports anymore,
67

67

00:05:24.320  -->  00:05:26.700
and obviously that's because we've moved the ui completely.
68

68

00:05:26.700  -->  00:05:28.690
So let's move that.
69

69

00:05:29.130  -->  00:05:32.400
And obviously the first one, the opens academy.learnprogramming.ui
70

70

00:05:32.410  -->  00:05:38.100
now that we've moved to the user interface code, we can remove that as well.
71

71

00:05:38.130  -->  00:05:43.170
So that's cleaned that up a lot, as you can see, now literally any three lines, there, so good.
72

72

00:05:43.170  -->  00:05:47.840
Back to ui module descriptor file and we probably could have copied and pasted some of these
73

73

00:05:47.850  -->  00:05:54.380
so I'm going to type it in again, requires javafx.base
74

74

00:05:54.530  -->  00:06:00.210
And these are basically the ones from the commons module descriptor file
75

75

00:06:00.390  -->  00:06:16.620
fx.graphics, we also want fxml, so javafx.fxml requires javafx.controls.
76

76

00:06:17.100  -->  00:06:25.270
We also want to acquire both the other modules, the common and db, so requires academy.learnprogramming.common.
77

77

00:06:25.290  -->  00:06:36.010
And also requires academy.learnprogramming.db, also exports and by the way you'll notice that the
78

78

00:06:36.470  -->  00:06:41.150
common and db statements are in red and that's because we need to add two modules dependencies will
79

79

00:06:41.150  -->  00:06:42.600
do that shortly.
80

80

00:06:42.610  -->  00:06:55.320
exports academy.learnprogramming.ui to javafx.graphics. Then we want-- opens when
81

81

00:06:55.320  -->  00:06:57.240
opens a UI to Java.
82

82

00:06:57.270  -->  00:07:03.930
fx.fxml and we discussed in previous videos the reasoning behind this. So we're
83

83

00:07:03.930  -->  00:07:11.730
just basically moving those from one module descriptor file to another, javafx.fxml over there
84

84

00:07:12.100  -->  00:07:13.240
and that should be it.
85

85

00:07:13.380  -->  00:07:14.300
So that should be everything.
86

86

00:07:14.340  -->  00:07:16.890
But again you've got these two errors here.
87

87

00:07:17.250  -->  00:07:22.540
And again that's because we have to add two modules, these two modules as dependencies to the UI module.
88

88

00:07:23.040  -->  00:07:29.030
So while --  file project structure is probably the quickest way of doing that.
89

89

00:07:29.040  -->  00:07:31.010
Select the UI module.
90

90

00:07:31.590  -->  00:07:36.690
Then we can click on, there's a green button if you're on Windows to the right way down here. For Mac, plus, I want
91

91

00:07:36.690  -->  00:07:43.830
to select module dependencies this time, module dependency and notice I've got two options to select, so control
92

92

00:07:43.830  -->  00:07:46.110
click or shift click depending on your operating system.
93

93

00:07:46.110  -->  00:07:48.130
Select both of them. Click OK.
94

94

00:07:48.130  -->  00:07:56.740
Now edit both of those as dependencies to our module, click ok again, and  you can see that those errors
95

95

00:07:56.830  -->  00:08:01.200
have disappeared from our module descriptor file ui for our module.
96

96

00:08:01.330  -->  00:08:06.240
So let's get back to our controller class and you can see that we've got a lot of these things fixed.
97

97

00:08:06.690  -->  00:08:12.900
Now, but we still got this issue with datasource that's still showing in red and if we hover over,
98

98

00:08:12.900  -->  00:08:17.360
you can see the problem there is that our db module doesn't export to module ui,
99

99

00:08:17.360  -->  00:08:23.220
so in other words the db module was not exporting the package db so that other modules can use them
100

100

00:08:23.220  -->  00:08:25.010
from the db package.
101

101

00:08:25.010  -->  00:08:27.920
So at the moment I can't use them because we haven't export them.
102

102

00:08:28.440  -->  00:08:34.890
So we just need to get our export statement, we'll add an export statement to our module info file for the db
103

103

00:08:34.950  -->  00:08:39.280
module descriptor file, so let's go and dive in that, this went down here
104

104

00:08:41.240  -->  00:08:46.760
So what we're going to do there is basically what three lines there, come down here and type exports
105

105

00:08:47.600  -->  00:08:51.580
academy.learnprogramming.db
106

106

00:08:52.430  -->  00:09:00.040
If you then go back to our controller, you could see that that fixes the error. Alright so I think we're good
107

107

00:09:00.040  -->  00:09:01.950
to go, we actually fix everything now.
108

108

00:09:02.220  -->  00:09:10.480
Let's get back to our main which now is in ui, right click and run that and just check that it's all working
109

109

00:09:13.490  -->  00:09:17.190
it's looking good and up and going.
110

110

00:09:17.210  -->  00:09:24.180
I'm going to click on an artists and show the albums. That's working nicely. All right so we managed
111

111

00:09:24.190  -->  00:09:31.550
to now have our app working  and we've migrated it from a single project structure to a three module structure.
112

112

00:09:31.810  -->  00:09:34.940
So that's the challenge resolved and finished.
113

113

00:09:35.010  -->  00:09:38.730
Now we've got some extra statements that we don't really need.
114

114

00:09:38.770  -->  00:09:41.680
in module info, module descriptor files
115

115

00:09:41.850  -->  00:09:47.160
But we're going to fix those in the next video and we're going to do that by understanding a way around
116

116

00:09:47.160  -->  00:09:50.160
that using transitive dependencies.
117

117

00:09:50.400  -->  00:09:51.930
So I'll see you in the next video.
