1
1

00:00:05,440  -->  00:00:06,940
So in the last video we went ahead and
2

2

00:00:06,940  -->  00:00:09,980
implemented our test program and
got that up and going.
3

3

00:00:09,980  -->  00:00:14,010
Now, what I wanted to do was
just show you another way of
4

4

00:00:14,010  -->  00:00:17,750
these two particular methods,
the modify item and the remove item.
5

5

00:00:17,750  -->  00:00:18,360
Cuz at the moment,
6

6

00:00:18,360  -->  00:00:22,440
you can see they're actually passing
the position number that we want to edit,
7

7

00:00:22,440  -->  00:00:26,900
and good programming practice would
dictate that we not require the client
8

8

00:00:26,900  -->  00:00:31,740
in other words, the program that's using
the grocery list class to have to do that.
9

9

00:00:31,740  -->  00:00:35,170
To actually know what the array
element is or anything of that nature.
10

10

00:00:35,170  -->  00:00:39,330
We should really be creating a class in
this case the grocery list class that's
11

11

00:00:39,330  -->  00:00:40,500
self-contained.
12

12

00:00:40,500  -->  00:00:45,330
And leave it to handle I should say the
actual element numbers and from the point
13

13

00:00:45,330  -->  00:00:48,780
of view of the calling person, it should
work much the case in the add item,
14

14

00:00:48,780  -->  00:00:50,460
you just pass the item you want to add and
15

15

00:00:50,460  -->  00:00:53,820
leave the rest to the grocery list
class and likewise for the search item.
16

16

00:00:53,820  -->  00:00:57,330
We just basically centered the name
of the item we want to search for and
17

17

00:00:57,330  -->  00:00:58,880
it did the hard work for us.
18

18

00:00:58,880  -->  00:01:02,940
So what we're gonna do now is change
the modify item and the remove item.
19

19

00:01:02,940  -->  00:01:07,680
So then, we just pass the item that
we want to either edit or remove.
20

20

00:01:07,680  -->  00:01:10,230
And the grocery list
class will do the rest.
21

21

00:01:10,230  -->  00:01:13,610
So what that's gonna require is we
go back to the grocery list class.
22

22

00:01:13,610  -->  00:01:15,250
We need to create a method.
23

23

00:01:15,250  -->  00:01:20,570
Because you can see that ultimately to
update the grocery list array list,
24

24

00:01:20,570  -->  00:01:21,790
we need to pass a position.
25

25

00:01:21,790  -->  00:01:26,190
So we need some way to find out what
a position for a particular string is, and
26

26

00:01:26,190  -->  00:01:29,590
where it is in the array list, so we've
got that number that we can actually use.
27

27

00:01:29,590  -->  00:01:31,320
And to do that is pretty simple.
28

28

00:01:31,320  -->  00:01:36,330
So I'm gonna create a method, and
we're gonna call it modify list as well,
29

29

00:01:36,330  -->  00:01:41,590
modifyGroceryItem, this
time it's going to have
30

30

00:01:41,590  -->  00:01:45,160
just one parameter cuz of course, we're
already using the one below us, as you can
31

31

00:01:45,160  -->  00:01:48,100
see on the screen there that's got the two
parameters, the position and the item.
32

32

00:01:48,100  -->  00:01:51,050
So what we're going to do is we're
going to find the number and
33

33

00:01:51,050  -->  00:01:55,240
then pass the the number and the string
to the modify grocery item method,
34

34

00:01:55,240  -->  00:01:56,760
which is gonna do the set there.
35

35

00:01:56,760  -->  00:02:00,040
So we're not gonna duplicate code
by having the GroceryList.set
36

36

00:02:00,040  -->  00:02:01,180
in both methods.
37

37

00:02:01,180  -->  00:02:02,460
So consequently,
38

38

00:02:02,460  -->  00:02:08,790
what we need to do is create a method that
returns as that integer at that position.
39

39

00:02:08,790  -->  00:02:12,910
Now, we have got a method that already
exists to help us out, the find item.
40

40

00:02:12,910  -->  00:02:14,660
But currently that's a returning a stream.
41

41

00:02:14,660  -->  00:02:16,620
And that's not really what we want, so
42

42

00:02:16,620  -->  00:02:19,390
what we're going to do is I'm
going to actually change this.
43

43

00:02:19,390  -->  00:02:21,170
And I'm gonna get that
to return an integer.
44

44

00:02:22,470  -->  00:02:25,920
Like so and we're gonna change the code
and we're gonna get rid of the exists and
45

45

00:02:25,920  -->  00:02:27,450
we're gonna make this a lot simpler.
46

46

00:02:27,450  -->  00:02:31,240
All we need to do here is have one line
of code and the code's going to be return
47

47

00:02:31,240  -->  00:02:36,290
groceryList.index, search item,
get rid of all that other code.
48

48

00:02:36,290  -->  00:02:39,140
And that's gonna return an integer,
and if it does exist,
49

49

00:02:39,140  -->  00:02:42,250
it's gonna return a number that's zero or
greater, in other words, zero or higher.
50

50

00:02:42,250  -->  00:02:45,660
If it doesn't exist, it's gonna return
a number that's less than zero.
51

51

00:02:45,660  -->  00:02:49,930
So what we can do now,
modify grocery item,
52

52

00:02:49,930  -->  00:02:55,300
we can put int position = find item,
new item.
53

53

00:02:55,300  -->  00:02:56,710
So is that item, does that exist?
54

54

00:02:56,710  -->  00:03:00,940
And then we can put if position is
greater than or equal to zero, then
55

55

00:03:02,340  -->  00:03:08,390
we're gonna call modify grocery item, pass
position, and pass the new item as well.
56

56

00:03:08,390  -->  00:03:10,690
And that's the trivia, that's all we
need to do for the modified item.
57

57

00:03:10,690  -->  00:03:13,290
So we've created an overloaded method.
58

58

00:03:13,290  -->  00:03:15,460
It's looking for,
it's trying to find the item.
59

59

00:03:15,460  -->  00:03:19,230
It's returning the number based on here,
returning an index of that string,
60

60

00:03:19,230  -->  00:03:21,530
in this case,
the grace router whether it exists or not.
61

61

00:03:21,530  -->  00:03:25,510
If it's greater than or equal to zero,
position that's returned on a fine item.
62

62

00:03:25,510  -->  00:03:29,470
It means that it does exist in the array
list, we didn't pass that position number
63

63

00:03:29,470  -->  00:03:34,020
and the item to the modified grocery item
method with the overload perimeters, and
64

64

00:03:34,020  -->  00:03:36,680
it'll do the set and then it will
actually say that it's been modified.
65

65

00:03:36,680  -->  00:03:38,670
Let's modify grocery, which is good.
66

66

00:03:38,670  -->  00:03:41,430
We want to do a similar thing
to remove grocery item.
67

67

00:03:41,430  -->  00:03:44,850
Now, remove grocery item is
a little bit different in that,
68

68

00:03:44,850  -->  00:03:48,350
it's only got the one parameter, but
it's pretty well the same concept.
69

69

00:03:48,350  -->  00:03:52,940
So we can do public void
remove grocery item.
70

70

00:03:52,940  -->  00:03:56,770
And we'll put string item.
71

71

00:03:56,770  -->  00:04:00,520
And we're just gonna copy that code,
same code.
72

72

00:04:00,520  -->  00:04:04,740
And of course it's gonna
be item in this case.
73

73

00:04:04,740  -->  00:04:05,610
If it's greater than zero,
74

74

00:04:05,610  -->  00:04:08,720
what we're gonna do is we're
gonna call remove grocery item.
75

75

00:04:08,720  -->  00:04:10,390
And just past the position, like so.
76

76

00:04:11,760  -->  00:04:15,370
So again, the main item accepts
the print of this item number.
77

77

00:04:15,370  -->  00:04:18,570
So again, we're not having to
deal with these internal numbers.
78

78

00:04:18,570  -->  00:04:22,150
And determines whether it's on file and
if it is only for this,
79

79

00:04:22,150  -->  00:04:25,290
in other words if its the position
returned is greater than or
80

80

00:04:25,290  -->  00:04:28,110
equal to zero which means it's in
the array list, then we actually return.
81

81

00:04:28,110  -->  00:04:31,750
So the other thing to do here at this
point is, with the modified grocery item
82

82

00:04:31,750  -->  00:04:34,940
we don't want it really to have it
available as a public method anymore.
83

83

00:04:34,940  -->  00:04:38,560
That is now an internal method that we
don't want accessible to anything but
84

84

00:04:38,560  -->  00:04:40,460
the internal workings of
the grocery list class.
85

85

00:04:40,460  -->  00:04:44,460
So that would be a candidate to make
as a private method by doing that,
86

86

00:04:44,460  -->  00:04:47,610
it means that we're forcing
the people who are using our class
87

87

00:04:47,610  -->  00:04:49,830
to use only the methods
that we want them to use.
88

88

00:04:49,830  -->  00:04:53,000
So that would be valid for that and
likewise for this internal
89

89

00:04:53,000  -->  00:04:57,200
a new method cuz it's dealing with
positions, you want to do the same thing.
90

90

00:04:57,200  -->  00:05:00,040
So from now on,
I need to use the modified grocery item
91

91

00:05:00,040  -->  00:05:03,130
passing the parameter of the name of
the item they want to have modified,
92

92

00:05:03,130  -->  00:05:07,460
or have removed and the rest happens
as you can see there on the screen.
93

93

00:05:07,460  -->  00:05:08,260
And we can actually
94

94

00:05:08,260  -->  00:05:10,760
delete that line there with the remove
grocery item cuz we don't need that.
95

95

00:05:10,760  -->  00:05:13,000
Literally we're just gonna pass
that cuz we've already tested and
96

96

00:05:13,000  -->  00:05:16,190
recording this method, were testing
to make sure that there's actually
97

97

00:05:16,190  -->  00:05:17,900
an entry there and
that we're actually removing it.
98

98

00:05:17,900  -->  00:05:20,890
So that's the code there, but what we now
need is to go back to our main method
99

99

00:05:20,890  -->  00:05:23,630
we're gonna find we've got some errors and
we need to fix those up.
100

100

00:05:23,630  -->  00:05:25,110
So instead of asking for
101

101

00:05:25,110  -->  00:05:29,040
an item number, what we actually now need
to do is actually ask for what the old, or
102

102

00:05:29,040  -->  00:05:31,540
what the current grocery item
is that we wanna modify.
103

103

00:05:31,540  -->  00:05:36,260
So instead of an integer, we're gonna
make the item number to be a string.
104

104

00:05:36,260  -->  00:05:42,110
So we're gonna put .nextLine, like so.
105

105

00:05:42,110  -->  00:05:44,210
That will read that next line.
106

106

00:05:44,210  -->  00:05:47,080
And so we've got the old item number and
the new item number.
107

107

00:05:47,080  -->  00:05:50,140
So we need to then change the method,
what we're calling.
108

108

00:05:50,140  -->  00:05:52,830
And actually what I did was,
I made a slight mistake there.
109

109

00:05:52,830  -->  00:05:56,400
What we do need to do is, of course, we
don't pass the position number any more,
110

110

00:05:56,400  -->  00:05:58,020
but we need to pass the old item there.
111

111

00:05:58,020  -->  00:06:00,540
So what we need to do is
put item number there.
112

112

00:06:00,540  -->  00:06:03,710
Because we need to pass the old
item number and the new item.
113

113

00:06:03,710  -->  00:06:05,640
So, we actually need
a method that covers both.
114

114

00:06:05,640  -->  00:06:10,470
The item number in this case is now
the actual text instead of the integer, so
115

115

00:06:10,470  -->  00:06:12,290
I actually neglected to do that last time,
so
116

116

00:06:12,290  -->  00:06:16,480
what we need to do is go back into grocery
list and just to change our item here.
117

117

00:06:16,480  -->  00:06:23,010
Well, it should be actually string,
we'll call it current item, New item.
118

118

00:06:23,010  -->  00:06:25,890
So what we should be doing here,
is putting a test here to say,
119

119

00:06:25,890  -->  00:06:29,720
checking to see whether the current item
exists, and if the current item exists,
120

120

00:06:29,720  -->  00:06:33,130
then we wanna pass the position number,
and what the new item is to save that.
121

121

00:06:33,130  -->  00:06:36,100
So it's checking to see whether
the current items on file, and if it is,
122

122

00:06:36,100  -->  00:06:37,740
then we're passing the new item.
123

123

00:06:37,740  -->  00:06:39,740
So in the case of remove grocery item,
124

124

00:06:39,740  -->  00:06:42,830
we only need to pass the old item
cuz we haven't got a new parameter,
125

125

00:06:42,830  -->  00:06:45,680
we're not actually trying to update it to
anything, we're just trying to remove it.
126

126

00:06:45,680  -->  00:06:49,700
So, that should still work so
long as we're passing the current item.
127

127

00:06:49,700  -->  00:06:50,910
We'll go back to my code,
128

128

00:06:50,910  -->  00:06:55,660
the modified grocery item should now work
cuz the item number is being passed.
129

129

00:06:55,660  -->  00:07:01,420
Which is now on stream the item name,
let's put that current
130

130

00:07:01,420  -->  00:07:07,620
item name into new item and for move into
item name, and this should be next line.
131

131

00:07:10,440  -->  00:07:16,360
Of course, it will be a string.
132

132

00:07:16,360  -->  00:07:17,040
And there's no minus ones or
133

133

00:07:17,040  -->  00:07:19,980
anything like that anymore because
it's all happening automatically.
134

134

00:07:19,980  -->  00:07:23,570
And the other thing was to search
the find item is now no longer working
135

135

00:07:23,570  -->  00:07:25,330
because that was returning a string.
136

136

00:07:25,330  -->  00:07:28,870
So what we need to do to here is
instead of calling the fine method,
137

137

00:07:28,870  -->  00:07:30,320
we need to create another method.
138

138

00:07:30,320  -->  00:07:33,970
Cuz that fine method should now
really be an internal method only.
139

139

00:07:33,970  -->  00:07:37,340
Because we don't want to expose that
necessarily cuz we don't need to,
140

140

00:07:37,340  -->  00:07:40,310
we don't want to expose the integer
to the calling process.
141

141

00:07:40,310  -->  00:07:45,210
So we want to remove that to make
that a private, only using the class.
142

142

00:07:45,210  -->  00:07:48,640
But with that said, we do need to
create another method to enable
143

143

00:07:48,640  -->  00:07:52,860
someone to actually pass in the name of
a grocery item and to return that item, or
144

144

00:07:52,860  -->  00:07:55,510
to check I should say,
whether the item is on file.
145

145

00:07:55,510  -->  00:07:59,700
So to do that,
we're gonna create a public boolean,
146

146

00:07:59,700  -->  00:08:03,690
and we'll put on file string search item.
147

147

00:08:03,690  -->  00:08:12,290
Then we're gonna put int position
= find item, search item.
148

148

00:08:12,290  -->  00:08:18,150
And then we're gonna put a test here
to put if position is greater than or
149

149

00:08:18,150  -->  00:08:21,500
equal to zero, return true.
150

150

00:08:21,500  -->  00:08:24,270
So that's there is, if we do find
a record, return true, otherwise,
151

151

00:08:24,270  -->  00:08:25,170
return false.
152

152

00:08:25,170  -->  00:08:27,180
So that's just changed
a little bit from what it was.
153

153

00:08:27,180  -->  00:08:30,130
We know, again, we're getting the search
item that we wanna search for,
154

154

00:08:30,130  -->  00:08:31,890
checking to see whether it's there.
155

155

00:08:31,890  -->  00:08:34,070
If it is there, if position is
greater than or equal to zero,
156

156

00:08:34,070  -->  00:08:38,620
we can return a true to say yes, it does
exist on fall, or it's in the array list.
157

157

00:08:38,620  -->  00:08:40,360
Otherwise, we're gonna return false.
158

158

00:08:40,360  -->  00:08:44,270
So go back to our main item here now,
and we'll change this to put on file.
159

159

00:08:46,430  -->  00:08:48,400
Instead of putting not null
we can remove that now.
160

160

00:08:48,400  -->  00:08:51,070
And that should now work.
161

161

00:08:51,070  -->  00:08:53,890
So we've now got searching for
the item that's searched for,
162

162

00:08:53,890  -->  00:08:55,480
checking to see whether it's on file, and
163

163

00:08:55,480  -->  00:08:59,830
if grocerylist.onFile, in other words
that's checking to see whether that's true
164

164

00:08:59,830  -->  00:09:02,910
we're gonna say that it's found,
otherwise we're gonna put not on file.
165

165

00:09:02,910  -->  00:09:07,760
So you can see now that by removing
the need to actually add the index and
166

166

00:09:07,760  -->  00:09:11,830
so forth, and having to pass a number,
we're leaving all the complexities of
167

167

00:09:11,830  -->  00:09:16,180
the internal handling in the grocery list
class, so that's where it should be.
168

168

00:09:16,180  -->  00:09:17,770
Because from the point of view,
169

169

00:09:17,770  -->  00:09:21,410
if you're accessing this grocery list
class, you shouldn't need to know,
170

170

00:09:21,410  -->  00:09:24,830
wanna know how it's been implemented, how
internally these items are being saved.
171

171

00:09:24,830  -->  00:09:26,760
All we wanna do is just
pass on the item number.
172

172

00:09:26,760  -->  00:09:30,620
In the case of remove,
cuz wanna remove and it'll get removed.
173

173

00:09:30,620  -->  00:09:31,540
Likewise, in the case of,
174

174

00:09:31,540  -->  00:09:34,760
to modify an item, we need to pass
the item number we're gonna modify.
175

175

00:09:34,760  -->  00:09:37,890
We want the, and the pass the contents
of the new item to what we want to be
176

176

00:09:37,890  -->  00:09:39,360
replaced to, and so on and so forth.
177

177

00:09:39,360  -->  00:09:41,950
So let's just run that now, and
make sure that it does work.
178

178

00:09:44,570  -->  00:09:45,730
So firstly, we'll just add an item.
179

179

00:09:45,730  -->  00:09:47,580
[SOUND] Add a couple of items.
180

180

00:09:52,060  -->  00:09:54,160
Print them out, that's three, that's good.
181

181

00:09:54,160  -->  00:09:55,480
So, we'll try the modifier now.
182

182

00:09:55,480  -->  00:09:58,510
What I'm modifying is existing
item into the current item name.
183

183

00:09:58,510  -->  00:10:01,970
So you auto name that modifier,
we're going to put, let's just try milk.
184

184

00:10:04,010  -->  00:10:06,530
Enter new item, in other words
what you want milk to become, so
185

185

00:10:06,530  -->  00:10:07,810
we'll call that cereal again.
186

186

00:10:09,410  -->  00:10:11,080
Item two has been modified.
187

187

00:10:11,080  -->  00:10:12,110
We didn't change the message.
188

188

00:10:12,110  -->  00:10:13,840
But we probably would have
wanted to have done that.
189

189

00:10:13,840  -->  00:10:15,250
Let's just check that that's been updated.
190

190

00:10:15,250  -->  00:10:16,630
Print the list again.
191

191

00:10:16,630  -->  00:10:19,000
You can see cereal has now replaced milk.
192

192

00:10:19,000  -->  00:10:20,420
So that's good.
That's now working.
193

193

00:10:20,420  -->  00:10:21,840
And let's go and try to remove.
194

194

00:10:21,840  -->  00:10:23,540
We'll try to remove bread again.
195

195

00:10:23,540  -->  00:10:26,440
Then notice there's no number, this time
we'll need to type it in, so if we type in
196

196

00:10:26,440  -->  00:10:30,120
bread, we didn't have a message to
indicate whether it was successful or not.
197

197

00:10:30,120  -->  00:10:33,050
But if we have a look out at
the results by printing them,
198

198

00:10:33,050  -->  00:10:36,390
we can see that's been removed and
just to check now,
199

199

00:10:36,390  -->  00:10:38,980
if we actually put in something
that isn't there, so we put remove.
200

200

00:10:40,890  -->  00:10:42,710
Nothing's happened but
it hasn't crashed as well, so
201

201

00:10:42,710  -->  00:10:46,430
we'll just go back and print the list,
that's good that's still working, and
202

202

00:10:46,430  -->  00:10:49,510
look at the menu options again, so that
modify and remove is still working and
203

203

00:10:49,510  -->  00:10:51,320
we should still be able to search now.
204

204

00:10:51,320  -->  00:10:53,660
I can just search for eggs.
205

205

00:10:53,660  -->  00:10:54,720
Found eggs.
So that's working.
206

206

00:10:54,720  -->  00:10:55,820
And we'll try it again.
207

207

00:10:55,820  -->  00:10:57,700
Something that wasn't there.
208

208

00:10:57,700  -->  00:10:59,820
Bread, because we've now removed bread.
209

209

00:10:59,820  -->  00:11:00,770
Bread not on file.
210

210

00:11:00,770  -->  00:11:03,290
So that's the way that I
recommend to use an array.
211

211

00:11:03,290  -->  00:11:06,490
Let's just make sure that you're
not putting the functionality in
212

212

00:11:06,490  -->  00:11:07,330
the wrong place.
213

213

00:11:07,330  -->  00:11:10,820
Normally, the functionality should be in
214

214

00:11:10,820  -->  00:11:15,410
the class that has got the,
where the array list is being added,
215

215

00:11:15,410  -->  00:11:17,390
where the entries are being added
to the array list, I should say.
216

216

00:11:17,390  -->  00:11:22,550
And by putting it all in this class,
it's all self contained and we're
217

217

00:11:22,550  -->  00:11:26,000
not releasing any extra functionality
out in the wild, so to speak.
218

218

00:11:26,000  -->  00:11:28,500
So we're not letting other programmers or
219

219

00:11:28,500  -->  00:11:32,500
other parts of the program get access to
the internal workings of the grocery list.
220

220

00:11:32,500  -->  00:11:35,750
So, we've talked about encapsulation
obviously in the object oriented
221

221

00:11:35,750  -->  00:11:39,290
programming parts of the course, but this
a practical example of why you wouldn't
222

222

00:11:39,290  -->  00:11:41,750
want to do that and where you want
to keep that all self contained.
223

223

00:11:41,750  -->  00:11:44,270
Cuz you can change out the implementation,
224

224

00:11:44,270  -->  00:11:47,000
in terms of the array list you might
change to [INAUDIBLE] to change this back
225

225

00:11:47,000  -->  00:11:49,810
to just a regular array that
we talked about earlier.
226

226

00:11:49,810  -->  00:11:50,900
And you can actually do that.
227

227

00:11:50,900  -->  00:11:53,710
You could change this whole
thing out to a normal array and
228

228

00:11:53,710  -->  00:11:57,540
it wouldn't change anything from the point
of view of the people who are calling or
229

229

00:11:57,540  -->  00:11:58,510
accessing this class.
230

230

00:11:58,510  -->  00:11:59,960
It would still work.
231

231

00:11:59,960  -->  00:12:02,240
Okay, so couple of other things
I wanna do when I talk to.
232

232

00:12:02,240  -->  00:12:05,720
I just show you a couple of
other ways to access arrays and
233

233

00:12:05,720  -->  00:12:09,040
to do one of those things we need to
add a getter here in our grocery list.
234

234

00:12:09,040  -->  00:12:12,850
I'm gonna add a getter because we'll need
the array and I'll explain why shortly,
235

235

00:12:12,850  -->  00:12:16,130
so we're just gonna add the ability to
retrieve the array list from there.
236

236

00:12:16,130  -->  00:12:20,130
So what I'm going to do is actually
add additional, actually down here.
237

237

00:12:21,150  -->  00:12:23,350
So what I'm going to do is I'm
gonna come back up to here and
238

238

00:12:23,350  -->  00:12:25,870
just at the start of the class.
239

239

00:12:25,870  -->  00:12:29,460
I'm gonna make that option seven,
I'm gonna add another option.
240

240

00:12:29,460  -->  00:12:30,540
If we do go into option six,
241

241

00:12:30,540  -->  00:12:32,560
we're just gonna execute a bit
of code that we're gonna create.
242

242

00:12:32,560  -->  00:12:36,250
And we're gonna call
that process array list.
243

243

00:12:38,140  -->  00:12:40,270
And then you'll need
to create that method.
244

244

00:12:44,680  -->  00:12:46,370
Process Array List.
245

245

00:12:46,370  -->  00:12:48,270
And then what I want to do is
just show you some other ways,
246

246

00:12:48,270  -->  00:12:52,220
that you can copy one array list to
another array list cuz there could be
247

247

00:12:52,220  -->  00:12:55,970
situations, where we've shown in previous
array code, where we'd want to do that.
248

248

00:12:55,970  -->  00:12:57,430
The first thing,
we can create a new array list.
249

249

00:12:57,430  -->  00:12:58,160
Array list
250

250

00:13:05,060  -->  00:13:09,940
One way that we can actually do that,
is we can actually just create
251

251

00:13:09,940  -->  00:13:14,730
a new array like so, and
then we can actually put new array.add,
252

252

00:13:14,730  -->  00:13:20,570
actually add all, and
it'll be groceryList.get the array list.
253

253

00:13:20,570  -->  00:13:23,800
So what that command does, that takes
the contents that are in grocery list,
254

254

00:13:23,800  -->  00:13:27,760
the .getGroceryList, which if you recall
is just returning our array list,
255

255

00:13:27,760  -->  00:13:31,210
our grocery list array list, and that's
why I added the getter there to do so.
256

256

00:13:31,210  -->  00:13:34,690
That's one way of adding the entire
content to the new array.
257

257

00:13:34,690  -->  00:13:38,350
So it's just a quick way to copy, instead
of having to go, create a full loop and
258

258

00:13:38,350  -->  00:13:43,030
go through each record, determine
the entry and then actually save it.
259

259

00:13:43,030  -->  00:13:45,870
That one line of code will
actually save the entire array.
260

260

00:13:45,870  -->  00:13:47,420
So that's a really good
way of copying an array.
261

261

00:13:47,420  -->  00:13:48,580
So that's one method.
262

262

00:13:48,580  -->  00:13:51,570
There's also another
quicker way of doing it and
263

263

00:13:51,570  -->  00:13:56,170
to do that we'll do another array and
that could be, array list, string.
264

264

00:13:59,850  -->  00:14:03,440
We’ll call that one next
array = new array list.
265

265

00:14:03,440  -->  00:14:07,530
And if you know that the array list that
you want to copy at the point that your
266

266

00:14:07,530  -->  00:14:12,820
creating the new array list,
you can actually just
267

267

00:14:12,820  -->  00:14:16,710
put in groceryList.getGroceryList and that
will actually create a brand new array
268

268

00:14:16,710  -->  00:14:19,960
list that's initialized to
the contents of this array list.
269

269

00:14:19,960  -->  00:14:24,040
It's pretty much identical to
what that previous line did, but
270

270

00:14:24,040  -->  00:14:27,010
it's happening at the point of
time that you're declaring and
271

271

00:14:27,010  -->  00:14:31,220
initializing the new object for
our new array list object.
272

272

00:14:31,220  -->  00:14:34,380
So, that's another handy
way of copying things and
273

273

00:14:34,380  -->  00:14:36,550
these are the types of things that
you'll want to do wherever possible.
274

274

00:14:36,550  -->  00:14:39,770
You'll want to try to find the java
shortcuts to your code, so you don't have
275

275

00:14:39,770  -->  00:14:42,540
to do this sort of stuff and creating
all this extra code that's unneeded,
276

276

00:14:42,540  -->  00:14:46,070
and lastly, there's one other way to do it
if there's some reason you wanted to take
277

277

00:14:46,070  -->  00:14:49,960
the contents of the array lists and
convert that back to a regular array.
278

278

00:14:49,960  -->  00:14:52,610
There is a way of doing that as well,
it's actually two statements to do that.
279

279

00:14:52,610  -->  00:14:55,330
The first one will create the array,
so it'll be string.
280

280

00:14:55,330  -->  00:14:56,700
We'll call this on my array.
281

281

00:14:56,700  -->  00:15:01,010
And you put in create
the new string array, but
282

282

00:15:01,010  -->  00:15:06,590
to start off you put
groceryList.getGroceries.size.
283

283

00:15:06,590  -->  00:15:10,300
So we're initializing it
to the correct size first.
284

284

00:15:10,300  -->  00:15:13,600
And then you can actually
type in myArray = and
285

285

00:15:13,600  -->  00:15:17,170
the groceryList.getGroceryList.toArray and
286

286

00:15:17,170  -->  00:15:22,520
notice the to Array it's actually
got the parameters it's expecting.
287

287

00:15:22,520  -->  00:15:25,260
What's going to be turning is
an object in array format.
288

288

00:15:25,260  -->  00:15:27,990
An object will be what the object
that we're working on, and
289

289

00:15:27,990  -->  00:15:31,110
because we're using the toArray
on the getGroceryList,
290

290

00:15:31,110  -->  00:15:33,870
effectively that's gonna return
an array list of strings,
291

291

00:15:33,870  -->  00:15:36,960
which matches our declaration on
the previous line, so we can put.
292

292

00:15:39,720  -->  00:15:42,080
So what that basically does,
we have a look at our code and
293

293

00:15:42,080  -->  00:15:44,520
see that's returning in
a registered strings in this case,
294

294

00:15:44,520  -->  00:15:47,690
because it knows it's the get grocery
list converting it to an array and
295

295

00:15:47,690  -->  00:15:50,900
that's returning an array of whatever
the elements are, and we need to put in
296

296

00:15:50,900  -->  00:15:54,760
the actual name of the variable
that we want this to be updated to.
297

297

00:15:54,760  -->  00:15:59,550
And by passing to the two array method,
that variable, that's gonna be updated so
298

298

00:15:59,550  -->  00:16:02,940
my array will actually contain
the contents of our array.
299

299

00:16:02,940  -->  00:16:05,340
So that's the precious array list method.
300

300

00:16:05,340  -->  00:16:06,900
What I was actually going to do,
301

301

00:16:06,900  -->  00:16:10,650
was to do some printouts just to make
sure these were actually working but
302

302

00:16:10,650  -->  00:16:13,020
we're getting a bit late in this video,
it's getting long again.
303

303

00:16:13,020  -->  00:16:16,650
So I want to move on to the next video,
which is actually the challenge.
304

304

00:16:16,650  -->  00:16:18,070
So, I'm gonna leave that there now, but
305

305

00:16:18,070  -->  00:16:21,140
the main thing that I just wanted
to show you was an alternate way.
306

306

00:16:21,140  -->  00:16:23,200
If you wanted to copy array lists,
307

307

00:16:23,200  -->  00:16:27,550
just to get you starting to think about
how to go about looking at documentation
308

308

00:16:27,550  -->  00:16:31,820
and different ways to access things with
code that's build into Java already.
309

309

00:16:31,820  -->  00:16:35,230
So that's the array lists
functionality done and dusted now.
310

310

00:16:35,230  -->  00:16:37,710
And in the next video,
we'll finally get to the challenge.
311

311

00:16:37,710  -->  00:16:39,570
We're gonna go through and
get you to consolidate this and
312

312

00:16:39,570  -->  00:16:40,550
put this all together.
313

313

00:16:40,550  -->  00:16:44,650
And issue with a nice meaty challenge to
further help you with your understanding
314

314

00:16:44,650  -->  00:16:45,440
of array list.
315

315

00:16:45,440  -->  00:16:46,740
So, I will see you in that next video.
