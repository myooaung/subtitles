1
1

00:00:05,500  -->  00:00:10,250
so just a recap of where we are from the
last video so we are setup now so we
2

2

00:00:10,250  -->  00:00:14,110
can click on an item and we can see the
information appearing in the right hand
3

3

00:00:14,110  -->  00:00:19,940
side window so that's ok the information
is coming up and when we click the selected
4

4

00:00:19,940  -->  00:00:24,810
item but if we want to do something like bold the due label will have to display the
5

5

00:00:24,810  -->  00:00:29,510
deadline outside the text area because
the text area only understands plain
6

6

00:00:29,510  -->  00:00:35,710
text in addition if the details for the
to-do item are lengthy we have to scroll
7

7

00:00:35,710  -->  00:00:40,130
down to see the deadline so instead of adding a text area to the center
8

8

00:00:40,130  -->  00:00:44,920
position of the border pane instead lets add a v box and then we'll add a text area
9

9

00:00:44,920  -->  00:00:50,960
and h box to the v box and you
see why we are adding a hbox in a minute so lets go ahead make
10

10

00:00:50,960  -->  00:00:55,170
those changes so we go to our FXML
11

11

00:00:58,260  -->  00:01:07,590
so down here we are gonna add a v box....
12

12

00:01:07,590  -->  00:01:21,000
...so lets just run that to see
13

13

00:01:21,000  -->  00:01:23,950
what it looks like
14

14

00:01:23,950  -->  00:01:27,710
you could see we have a separate section
here over to the right hand side with the
15

15

00:01:27,710  -->  00:01:32,220
h box and v box so now we've done
that we can see a text area and our h box
16

16

00:01:32,220  -->  00:01:37,840
so we are going to add 2 labels to the
h box one for the due text and one
17

17

00:01:37,840  -->  00:01:40,930
for the deadline we get from our to do item so let's go ahead and do that
18

18

00:01:40,930  -->  00:01:58,520
so go into our h box and add a label so.....
19

19

00:01:58,520  -->  00:02:04,700
....
20

20

00:02:04,700  -->  00:02:22,290
...so that is the first label and the second label we will go and do....
21

21

00:02:22,290  -->  00:02:37,910
....
22

22

00:02:37,910  -->  00:02:46,560
....so the 2
23

23

00:02:46,560  -->  00:02:50,280
labels for h box ones for the due text
and one for the deadline that we get
24

24

00:02:50,280  -->  00:02:55,550
from the to do item and we've set this font of the due label to Times New Roman
25

25

00:02:55,550  -->  00:03:01,330
and the font weight too bold and and also
set the size to 20 and we do
26

26

00:03:01,330  -->  00:03:04,700
a similar thing for the label that is
ultimately going to display our deadline
27

27

00:03:04,700  -->  00:03:10,440
now we don't set the text from the deadline
label within the fxml because we have to get it
28

28

00:03:10,440  -->  00:03:15,940
of course the selected to do item and we'll set
that up within the event handler itself
29

29

00:03:15,940  -->  00:03:24,530
but do do that for the second label we need
enter an ID so...
30

30

00:03:24,530  -->  00:03:28,860
.....and course we need to do
that so we can reference it from Java code
31

31

00:03:28,860  -->  00:03:34,830
so take a copy of this ID and we go
back to our controller
32

32

00:03:34,830  -->  00:03:43,500
and initialize or create a variable
first a field so....
33

33

00:03:43,500  -->  00:03:53,360
....
34

34

00:03:53,360  -->  00:03:59,050
...so within our event
handler itself we no longer need the
35

35

00:03:59,050  -->  00:04:02,860
string builder so what we're going to do is
delete that out we're going back to setting
36

36

00:04:02,860  -->  00:04:08,050
the text area to the details set the text or our deadline label to
37

37

00:04:08,050  -->  00:04:17,190
the deadline so lets go ahead and do that
so comment this other code out and I'll just bring
38

38

00:04:17,190  -->  00:04:26,510
this up....so the to do we need obviously still but
what we are going to do is....
39

39

00:04:26,510  -->  00:04:34,030
....
40

40

00:04:34,030  -->  00:04:39,290
....and in terms of the label for the deadline
41

41

00:04:39,290  -->  00:04:45,860
we're going update here as well so....
42

42

00:04:45,860  -->  00:04:54,910
....
43

43

00:04:54,910  -->  00:05:04,750
...so lets do that and run it and when we click on an item you can see the date is
44

44

00:05:04,750  -->  00:05:08,660
appearing down the bottom right hand
corner so in other words so we can see
45

45

00:05:08,660  -->  00:05:12,810
the details and deadlines are displaying
correctly in different areas of the
46

46

00:05:12,810  -->  00:05:18,110
right hand side and I just want to make a point that I wasn't saying we are going to create a pretty
47

47

00:05:18,110  -->  00:05:22,470
UI but what we're not gonna leave
it in the state right now the deadline
48

48

00:05:22,470  -->  00:05:26,340
area is taking up too much room
because obviously it's only one line of
49

49

00:05:26,340  -->  00:05:31,650
information the due text label and
the date itself so we want to reduce the
50

50

00:05:31,650  -->  00:05:36,040
amount of space it's taking up but also
it be nice if the entire right hand side
51

51

00:05:36,040  -->  00:05:40,490
had a white background as opposed to the
top being and white and the other one
52

52

00:05:40,490  -->  00:05:42,930
being in a grayish background
53

53

00:05:42,930  -->  00:05:47,260
so let's tackle the deadline label's
first so what we want to do is to display
54

54

00:05:47,260  -->  00:05:52,260
them with their preferred heights so to
accomplish this we need to work using
55

55

00:05:52,260  -->  00:05:57,370
vbox.vgrow property in
the text area we need to change that so close
56

56

00:05:57,370  -->  00:06:08,830
this down and come back to our FXML we need to change
his text area on line 17 to use the
57

57

00:06:08,830  -->  00:06:11,620
vbox.vgrow to always
58

58

00:06:11,620  -->  00:06:20,050
so....so we want them basically display with their
59

59

00:06:20,050  -->  00:06:24,910
preferred heights so what that does it tells the v box to always keep us
60

60

00:06:24,910  -->  00:06:29,740
as much room as possible to the text area
the v box will size all its other
61

61

00:06:29,740  -->  00:06:33,860
children to their preferred heights and give
the remaining space to the text area
62

62

00:06:33,860  -->  00:06:37,650
which is what we wanted in this case
so if we run that we should see that
63

63

00:06:37,650  -->  00:06:41,400
we've got a lot more space allocated to
the description now and you can see
64

64

00:06:41,400  -->  00:06:45,770
it's nearly got the entire right hand side
allocated it only just a minimal on the
65

65

00:06:45,770  -->  00:06:50,770
bottom which is allocated for due label and the data itself so that's good
66

66

00:06:50,770  -->  00:06:56,380
so lets close that down so next we are going to deal with the labels
67

67

00:06:56,380  -->  00:07:02,330
background color and will use some CSS
in the FMLX file and set the background to white
68

68

00:07:02,330  -->  00:07:09,870
this is for the label so let's go ahead and do that so
firstly come here to the first label which got the due text in it
69

69

00:07:09,870  -->  00:07:20,490
and we will add a style their so add...
70

70

00:07:20,490  -->  00:07:32,960
....
71

71

00:07:32,960  -->  00:07:44,580
..so run that you can see the deadline label
72

72

00:07:44,580  -->  00:07:48,590
still looks great and that is because we haven't
set any texts and so nothing has been
73

73

00:07:48,590  -->  00:07:52,330
drawn for the label in that area so what
we're seeing is that the v box
74

74

00:07:52,330  -->  00:07:53,120
background color
75

75

00:07:53,120  -->  00:07:58,340
click on that and you could see that
it's still showing so we need to find a
76

76

00:07:58,340  -->  00:08:06,800
way to convert this part here to white
as well so what we really need to do is
77

77

00:08:06,800  -->  00:08:08,420
changed the v box
78

78

00:08:08,420  -->  00:08:14,640
background color to white as well so what is showing here behind will also be white
79

79

00:08:14,640  -->  00:08:21,120
so we come up to v box and set the style for that so....
80

80

00:08:21,120  -->  00:08:26,850
...so now we've done that we should see that in all
81

81

00:08:26,850  -->  00:08:32,740
white and its now white down the bottom
as well and obviously when we select
82

82

00:08:32,740  -->  00:08:37,830
something we still got white in the backgrounds
so the right hand side of our
83

83

00:08:37,830  -->  00:08:42,160
user interface is completely white other than the text over the top which is what
84

84

00:08:42,160  -->  00:08:49,910
we're trying to achieve so just running
this one more time now what we could
85

85

00:08:49,910  -->  00:08:55,340
do is fiddle around and remove the thin border between
the text area and the labels this line
86

86

00:08:55,340  -->  00:09:00,610
down here but its better to keep because when the details texts is long we want the
87

87

00:09:00,610  -->  00:09:03,810
border there to separate the two areas
so it's a good idea to leave that there
88

88

00:09:03,810  -->  00:09:09,320
so its clear distinction between the two
areas it would be nice if the first to do in
89

89

00:09:09,320  -->  00:09:13,860
the list was selected when the
application first runs so that due
90

90

00:09:13,860  -->  00:09:19,080
label wasn't there without any
corresponding selected item so lets add
91

91

00:09:19,080  -->  00:09:23,230
the code to do that now to select the first
item in the to do list whenever the
92

92

00:09:23,230  -->  00:09:27,050
applications run and we do that in our control initialization method
93

93

00:09:31,900  -->  00:09:37,380
so right under the line 48
where we chose the selection mode to be
94

94

00:09:37,380  -->  00:09:45,100
single we can put....
95

95

00:09:45,100  -->  00:09:48,390
....
96

96

00:09:48,390  -->  00:09:55,210
so if you run that interesting enough
when we run you we can see that the first
97

97

00:09:55,210  -->  00:09:58,430
item is selected the top left hand
corner
98

98

00:09:58,430  -->  00:10:03,230
however the details don't appear on the
right side so the question is why isn't
99

99

00:10:03,230  -->  00:10:12,160
this working well if we go back to the
fxml file and closes this down the list view here
100

100

00:10:12,160  -->  00:10:12,890
on line 11
101

101

00:10:12,890  -->  00:10:17,450
you can see that we're listening for mouse
clicks but in this case we didn't select
102

102

00:10:17,450  -->  00:10:22,860
the first item by clicking on it we selected
it pragmatically using code now since we
103

103

00:10:22,860  -->  00:10:27,130
want to select the first time every time
we run we could just set the details
104

104

00:10:27,130  -->  00:10:31,580
text area directly in the controllers
initialize method by calling
105

105

00:10:31,580  -->  00:10:35,930
something along the lines of item
details text.settext and in
106

106

00:10:35,930  -->  00:10:40,480
passing in the details for the first to do item but thinking about it they'll
107

107

00:10:40,480  -->  00:10:44,430
be other times we want to change the
selection pragmatically for example when
108

108

00:10:44,430  -->  00:10:49,740
the user adds a new to do item to the
list we want to select it so the first details
109

109

00:10:49,740  -->  00:10:52,980
are displayed so therefore a better
solution would be to listen for
110

110

00:10:52,980  -->  00:10:57,180
selection changes regardless of how they take
place you know pragmatically or through
111

111

00:10:57,180  -->  00:11:02,520
user input so instead of assigning an event handler to the on mouse click
112

112

00:11:02,520  -->  00:11:06,920
property what we'll do is we'll run our
event handler whenever the selected item
113

113

00:11:06,920  -->  00:11:12,710
property of the selection model changes
so we have to set our event handling code
114

114

00:11:12,710  -->  00:11:16,590
rather than the fxml will do this in
the controllers initialization method
115

115

00:11:16,590  -->  00:11:22,300
and will do that before we select the
first time so let's close this down and
116

116

00:11:22,300  -->  00:11:26,710
will go back to the
controller code and in our initialize method
117

117

00:11:26,710  -->  00:11:35,460
and right after the five items were added on line 45 so just going to add it here
118

118

00:11:36,580  -->  00:11:41,710
so do.....
119

119

00:11:41,710  -->  00:11:48,180
....
120

120

00:11:48,180  -->  00:11:56,880
...
121

121

00:11:58,860  -->  00:12:04,020
and it has written that code for us automatically so its overwritten a method called changed
122

122

00:12:04,020  -->  00:12:09,960
and if you recall back from the lecture on
events and event handling you will recall these
123

123

00:12:09,960  -->  00:12:14,230
event handlers are also known as event listeners because an application will listen
124

124

00:12:14,230  -->  00:12:18,670
for an event and when that event is
raised the Associated event handler will
125

125

00:12:18,670  -->  00:12:24,900
run so our event handler will be an instance of
the change listener class so in our code we are using an
126

126

00:12:24,900  -->  00:12:26,980
anonymous class for the event handler
127

127

00:12:26,980  -->  00:12:31,760
and we are overriding the change method as you can
see on line 51 so when running the code
128

128

00:12:31,760  -->  00:12:36,270
that creates and sets even listeners its very
common these days to use lambda
129

129

00:12:36,270  -->  00:12:40,320
expressions but because we haven't got
to lambda expressions in the course yet
130

130

00:12:40,320  -->  00:12:45,460
we are going to write the code down here for clarity sake so do something along thse
131

131

00:12:45,460  -->  00:13:05,850
lines going to put....
132

132

00:13:05,850  -->  00:13:12,660
....
133

133

00:13:13,420  -->  00:13:24,410
....and then the other
thing we can do now that we made that
134

134

00:13:24,410  -->  00:13:28,600
change is come back over to main window FXML and we can move this
135

135

00:13:28,600  -->  00:13:32,900
on mouse click event handler because we've
now written a generic event handler
136

136

00:13:32,900  -->  00:13:38,540
that handles any time the value changes
so its now going to pick up either way
137

137

00:13:38,540  -->  00:13:41,590
etiher clicking on a mouse or pragmatically
so lets run that
138

138

00:13:41,590  -->  00:13:51,740
so you notice automatically the first item was selected and we automatically got the detail showing
139

139

00:13:51,740  -->  00:13:57,590
on the right hand side and also
when we click equivalent to what was the
140

140

00:13:57,590  -->  00:14:01,720
mouse event handler before that's also
working so both scenarios are
141

141

00:14:01,720  -->  00:14:04,720
now being handled by the event code that we
wrote
142

142

00:14:05,230  -->  00:14:10,300
in our controller.java and this was the list of
that we created on line 51
143

143

00:14:10,300  -->  00:14:14,840
so that's it for this video in the next
video will move on to displaying the to-do items
144

144

00:14:14,840  -->  00:14:16,720
deadline so see you in the next video
