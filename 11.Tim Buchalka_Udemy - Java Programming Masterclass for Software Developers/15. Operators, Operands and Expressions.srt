1
1

00:00:05,180  -->  00:00:07,450
<v Instructor>So it's noW time to talk in more detail</v>
2

2

00:00:07,450  -->  00:00:08,690
about operators.
3

3

00:00:08,690  -->  00:00:11,260
We've discussed very briefly what operators are
4

4

00:00:11,260  -->  00:00:13,570
and have a few of them in use or have used them.
5

5

00:00:13,570  -->  00:00:15,203
Let's go deeper into that now.
6

6

00:00:16,580  -->  00:00:18,540
So what are operators?
7

7

00:00:18,540  -->  00:00:21,760
Well, operators in Java are special symbols that perform
8

8

00:00:21,760  -->  00:00:25,360
specific operations on one, two or three operands
9

9

00:00:25,360  -->  00:00:27,030
and then return a result.
10

10

00:00:27,030  -->  00:00:29,670
And as an example, we've previously used the plus
11

11

00:00:29,670  -->  00:00:33,340
or addition operator to sum the value of two variables.
12

12

00:00:33,340  -->  00:00:36,210
But there are many other operators in Java.
13

13

00:00:36,210  -->  00:00:37,940
So what is an operand?
14

14

00:00:37,940  -->  00:00:40,630
Well, an operand is a term used to describe any object
15

15

00:00:40,630  -->  00:00:43,150
that is manipulated by an operator.
16

16

00:00:43,150  -->  00:00:44,410
So if we consider this statement,
17

17

00:00:44,410  -->  00:00:48,430
int myvar equals 15 plus 12;
18

18

00:00:48,430  -->  00:00:51,810
then plus here is the operator in 15 and 12
19

19

00:00:51,810  -->  00:00:53,290
are the operands.
20

20

00:00:53,290  -->  00:00:56,420
And variables used instead of literals are also operands.
21

21

00:00:56,420  -->  00:00:59,480
So it's another example double mysalary equals
22

22

00:00:59,480  -->  00:01:01,330
hoursWorked multiplied by hourlyRate.
23

23

00:01:02,520  -->  00:01:05,330
So in that above line hoursWorked in hourlyRate
24

24

00:01:05,330  -->  00:01:08,920
are both operands and the star, the multiplication
25

25

00:01:08,920  -->  00:01:09,803
is the operator.
26

26

00:01:10,860  -->  00:01:12,550
What's an expression?
27

27

00:01:12,550  -->  00:01:16,350
An expression is formed by combining variables, literals,
28

28

00:01:16,350  -->  00:01:18,820
method return values, which we haven't covered yet,
29

29

00:01:18,820  -->  00:01:20,340
and operators.
30

30

00:01:20,340  -->  00:01:22,690
So there a way of actually forming and combining
31

31

00:01:22,690  -->  00:01:24,540
those values to produce a result.
32

32

00:01:24,540  -->  00:01:28,570
So in the line below, 15 plus 12 is the expression
33

33

00:01:28,570  -->  00:01:30,743
which returns the value of 27.
34

34

00:01:32,090  -->  00:01:35,140
Now in the statement below hoursWorked multiplied
35

35

00:01:35,140  -->  00:01:37,080
by hourlyRate is the expression.
36

36

00:01:37,080  -->  00:01:40,450
So if hoursWorked was 10, and hourlyRate was 20,
37

37

00:01:40,450  -->  00:01:42,640
then the expression would return 200
38

38

00:01:42,640  -->  00:01:45,370
because 10 times 20 is 200.
39

39

00:01:45,370  -->  00:01:48,510
All right, so let's explore operators using some code
40

40

00:01:48,510  -->  00:01:51,260
and we'll swing back to IntelliJ to do this.
41

41

00:01:51,260  -->  00:01:54,230
And I've created a project here called operators,
42

42

00:01:54,230  -->  00:01:56,100
so do that if you're following along and you haven't already
43

43

00:01:56,100  -->  00:01:57,783
created a new project.
44

44

00:01:57,783  -->  00:01:58,950
All right, I'm gonna start by typing
45

45

00:01:58,950  -->  00:02:00,150
and delete that comment.
46

46

00:02:01,450  -->  00:02:06,450
And we'll start by typing int result is equal to one
47

47

00:02:06,460  -->  00:02:10,510
plus two semicolon, I'm going to add two slashes
48

48

00:02:10,510  -->  00:02:13,223
there on top, one plus two equals three.
49

49

00:02:14,580  -->  00:02:16,040
You've actually seen this in use before.
50

50

00:02:16,040  -->  00:02:18,720
we've done and some arithmetic, some basic arithmetic
51

51

00:02:18,720  -->  00:02:20,627
using the plus or add operator.
52

52

00:02:20,627  -->  00:02:22,870
And in fact we've used a number of operators already.
53

53

00:02:22,870  -->  00:02:25,810
But now I just really wanna clarify and go through the major
54

54

00:02:25,810  -->  00:02:28,230
operators so that you can become familiar with them,
55

55

00:02:28,230  -->  00:02:30,020
and then know how to use them.
56

56

00:02:30,020  -->  00:02:31,850
And you'll find that some operators tend to be used
57

57

00:02:31,850  -->  00:02:34,430
a lot more frequently than others.
58

58

00:02:34,430  -->  00:02:36,330
So here what I've done is I've added a comment at the end
59

59

00:02:36,330  -->  00:02:39,040
of the line with two forward slashes to type out
60

60

00:02:39,040  -->  00:02:40,940
what the expression should evaluate to before
61

61

00:02:40,940  -->  00:02:43,740
we print it out more on comments in a moment.
62

62

00:02:43,740  -->  00:02:45,890
But note here that we've got two operators
63

63

00:02:45,890  -->  00:02:47,300
on this statement.
64

64

00:02:47,300  -->  00:02:50,740
We've got the equal operator and the plus operator.
65

65

00:02:50,740  -->  00:02:54,200
So the equal operator is an assignment operator.
66

66

00:02:54,200  -->  00:02:56,210
So it's used to assign of value.
67

67

00:02:56,210  -->  00:02:59,450
So in this case it's assigning what's on the right-hand side
68

68

00:02:59,450  -->  00:03:01,330
of the equal operator.
69

69

00:03:01,330  -->  00:03:04,980
To the variable we've called result and the value
70

70

00:03:04,980  -->  00:03:06,500
will be three in this case,
71

71

00:03:06,500  -->  00:03:09,040
which is the sum of one plus two.
72

72

00:03:09,040  -->  00:03:12,300
The plus or addition operator sums the operand to the left
73

73

00:03:12,300  -->  00:03:13,720
and operand to the right.
74

74

00:03:13,720  -->  00:03:16,610
So the expression is using two operands here.
75

75

00:03:16,610  -->  00:03:20,090
Now we can also use a single operand by commenting out
76

76

00:03:20,090  -->  00:03:22,770
the one plus two and replacing it with a three.
77

77

00:03:22,770  -->  00:03:24,320
So we could obviously come back here and change
78

78

00:03:24,320  -->  00:03:25,193
that to three.
79

79

00:03:26,290  -->  00:03:27,730
Back the expression is in there just a single
80

80

00:03:27,730  -->  00:03:30,940
literal number which is in this case is a three.
81

81

00:03:30,940  -->  00:03:33,380
So we've got a single operator, the equals to operator
82

82

00:03:33,380  -->  00:03:36,210
and a literal value, and that's it.
83

83

00:03:36,210  -->  00:03:38,410
All right, so comments are ignored by the computer
84

84

00:03:38,410  -->  00:03:41,460
and are added to a programme to help describe something.
85

85

00:03:41,460  -->  00:03:43,690
Now comments are there for humans.
86

86

00:03:43,690  -->  00:03:46,110
We use our two forward slashes in front of any code
87

87

00:03:46,110  -->  00:03:47,730
or on a blank line.
88

88

00:03:47,730  -->  00:03:50,830
Anything after the two slashes, the two forward slashes
89

89

00:03:50,830  -->  00:03:53,800
right through to the end of the line you added to is ignored
90

90

00:03:53,800  -->  00:03:55,510
by the computer.
91

91

00:03:55,510  -->  00:03:58,010
So aside from describing something about a programme,
92

92

00:03:58,010  -->  00:04:00,650
comments can be used to temporarily disable code,
93

93

00:04:00,650  -->  00:04:03,260
and that's another useful thing when you're testing,
94

94

00:04:03,260  -->  00:04:05,170
which we'll look at and we'll do a little bit later
95

95

00:04:05,170  -->  00:04:06,350
on in the course.
96

96

00:04:06,350  -->  00:04:08,700
All right, so let's go back and code some more.
97

97

00:04:08,700  -->  00:04:11,960
So we're gonna undo that change back to the original
98

98

00:04:11,960  -->  00:04:13,730
expression of one plus two.
99

99

00:04:13,730  -->  00:04:17,280
So let's actually print this out to make sure it does work.
100

100

00:04:17,280  -->  00:04:20,830
And we'll type in one plus two equals
101

101

00:04:20,830  -->  00:04:22,540
and then we'll print out the value result,
102

102

00:04:22,540  -->  00:04:24,750
which contains the expression one plus two,
103

103

00:04:24,750  -->  00:04:25,603
we'll run this.
104

104

00:04:28,080  -->  00:04:30,573
No surprise is, one plus two equals three.
105

105

00:04:31,710  -->  00:04:33,690
Well, let's introduce another variable.
106

106

00:04:33,690  -->  00:04:37,260
Int previous result, we're gonna say equal
107

107

00:04:37,260  -->  00:04:38,533
to the value of result.
108

108

00:04:40,250  -->  00:04:41,690
We'll print it out.
109

109

00:04:41,690  -->  00:04:43,450
We'll put a previous result
110

110

00:04:44,520  -->  00:04:47,880
is equal to plus previous result,
111

111

00:04:47,880  -->  00:04:50,180
let's just run that to make sure it's working.
112

112

00:04:51,320  -->  00:04:53,500
Previous result equals three.
113

113

00:04:53,500  -->  00:04:55,790
Let's now go ahead and change the value of results.
114

114

00:04:55,790  -->  00:04:59,620
On the next line I'm going to top result equals result minus
115

115

00:04:59,620  -->  00:05:02,420
one semicolon, and I'm gonna to press tab
116

116

00:05:02,420  -->  00:05:04,470
and I'm gonna put a comment there.
117

117

00:05:04,470  -->  00:05:06,130
And the expression is going to be,
118

118

00:05:06,130  -->  00:05:08,390
and we'll look at the left operand, the values three
119

119

00:05:08,390  -->  00:05:09,223
the moment for result.
120

120

00:05:09,223  -->  00:05:12,460
So it's gonna be three and the operator is minus.
121

121

00:05:12,460  -->  00:05:13,920
The right operand is one.
122

122

00:05:13,920  -->  00:05:15,810
So three minus one,
123

123

00:05:15,810  -->  00:05:17,870
obviously the answer is two.
124

124

00:05:17,870  -->  00:05:19,380
Let's confirm that, we'll print it out.
125

125

00:05:19,380  -->  00:05:24,380
Three minus one equals plus result, we'll run that.
126

126

00:05:27,356  -->  00:05:29,210
Three minus one is two.
127

127

00:05:29,210  -->  00:05:32,440
So notice how previous result and result are independent
128

128

00:05:32,440  -->  00:05:33,450
of each other.
129

129

00:05:33,450  -->  00:05:37,170
So even though we assigned result to previous result,
130

130

00:05:37,170  -->  00:05:39,550
previous result doesn't get updated when result gets
131

131

00:05:39,550  -->  00:05:40,630
a new value.
132

132

00:05:40,630  -->  00:05:44,911
So to confirm that I'm just going to take a copy of line 10,
133

133

00:05:44,911  -->  00:05:47,000
I'm going to paste that on line 13.
134

134

00:05:47,000  -->  00:05:52,000
If we run this again we can see that even though that result
135

135

00:05:53,550  -->  00:05:56,410
was changed to a value of two on line 11,
136

136

00:05:56,410  -->  00:05:58,580
and we confirmed that once we print out
137

137

00:05:58,580  -->  00:06:00,260
that result on line 12.
138

138

00:06:00,260  -->  00:06:03,350
In the case of previous result it's still set to three,
139

139

00:06:03,350  -->  00:06:05,450
and that's because the assignment for previous result
140

140

00:06:05,450  -->  00:06:09,810
was done on the line 9 and we didn't update previous result.
141

141

00:06:09,810  -->  00:06:11,830
Well, so let's try something else for another operator.
142

142

00:06:11,830  -->  00:06:13,680
So we'll come down here, and we'll do another one.
143

143

00:06:13,680  -->  00:06:18,620
We're going to top result equals result multiplied by 10
144

144

00:06:18,620  -->  00:06:22,750
using the asterisks or multiplication operator.
145

145

00:06:22,750  -->  00:06:24,540
And what should be happening there is the,
146

146

00:06:24,540  -->  00:06:26,240
we know the value of result is two
147

147

00:06:26,240  -->  00:06:29,630
So that's going to be two multiplied,
148

148

00:06:29,630  -->  00:06:31,500
and the right operand is 10.
149

149

00:06:31,500  -->  00:06:34,443
So two times 10 equals 20.
150

150

00:06:36,169  -->  00:06:39,170
And if we put this out there should be two times 10
151

151

00:06:40,730  -->  00:06:43,223
equals plus result.
152

152

00:06:45,300  -->  00:06:46,133
Let's run that.
153

153

00:06:49,000  -->  00:06:50,793
Two times 10 equals 20.
154

154

00:06:51,840  -->  00:06:53,930
And we won't bother using previous result moving forward
155

155

00:06:53,930  -->  00:06:55,430
because already determined that.
156

156

00:06:55,430  -->  00:06:57,280
All right, so next, let's try a division.
157

157

00:06:57,280  -->  00:07:01,453
So result equals result, division is a forward slash.
158

158

00:07:03,230  -->  00:07:04,563
So here it's going to be,
159

159

00:07:05,870  -->  00:07:07,900
we know the result currently is set to 20.
160

160

00:07:07,900  -->  00:07:12,153
So 20 divided by five should equal four.
161

161

00:07:13,420  -->  00:07:14,377
And we'll print out the value.
162

162

00:07:14,377  -->  00:07:19,110
That's gonna be 20 divided by five equals,
163

163

00:07:19,110  -->  00:07:20,810
and print out the value of result.
164

164

00:07:25,880  -->  00:07:29,413
20 divided by five, and surprisingly is four.
165

165

00:07:29,413  -->  00:07:32,040
All right, so moving on, let's now look at the remainder
166

166

00:07:32,040  -->  00:07:33,860
or modulus operator.
167

167

00:07:33,860  -->  00:07:36,870
And what that does, it retains the remainder
168

168

00:07:36,870  -->  00:07:38,320
of two operands.
169

169

00:07:38,320  -->  00:07:41,520
So to see that working, we're going to type the code.
170

170

00:07:41,520  -->  00:07:43,530
On line 21 I'm going to type result.
171

171

00:07:43,530  -->  00:07:44,650
Similar to what we've done before.
172

172

00:07:44,650  -->  00:07:48,110
So result equals result, but this time I'm going to use
173

173

00:07:48,110  -->  00:07:50,600
the modulus or remainder operator,
174

174

00:07:50,600  -->  00:07:52,333
which is the percent sign three.
175

175

00:07:54,220  -->  00:07:56,180
In terms of what we're doing here,
176

176

00:07:56,180  -->  00:08:00,890
this should be giving us the remainder of operand
177

177

00:08:00,890  -->  00:08:01,723
in parentheses.
178

178

00:08:01,723  -->  00:08:04,760
So it's clear, and we know result has left operand.
179

179

00:08:04,760  -->  00:08:07,370
Current value of a result is four.
180

180

00:08:07,370  -->  00:08:09,900
So the modulus operator and the right side,
181

181

00:08:09,900  -->  00:08:11,820
the right operand rather is three.
182

182

00:08:11,820  -->  00:08:13,940
So how many times does three go into four.
183

183

00:08:13,940  -->  00:08:15,490
One with one left over.
184

184

00:08:15,490  -->  00:08:17,690
So the answer there should therefore be one.
185

185

00:08:18,530  -->  00:08:20,120
Let's print it out.
186

186

00:08:20,120  -->  00:08:24,260
So it's basically four modulus or remainder
187

187

00:08:24,260  -->  00:08:26,833
operator three should be equal one.
188

188

00:08:27,700  -->  00:08:30,203
Let's run it to confirm that that's the case.
189

189

00:08:32,110  -->  00:08:34,940
All right, we can see four remainder three gives us one,
190

190

00:08:34,940  -->  00:08:36,830
because of course three goes into four one
191

191

00:08:36,830  -->  00:08:38,913
with one times with one remainder.
192

192

00:08:39,780  -->  00:08:41,460
All right, so let's end the video here.
193

193

00:08:41,460  -->  00:08:43,830
In the next video we'll continue on with the operators.
194

194

00:08:43,830  -->  00:08:46,660
And we'll start looking at some shortcuts you can use
195

195

00:08:46,660  -->  00:08:48,030
when using operators.
196

196

00:08:48,030  -->  00:08:49,330
See you in the next video.
