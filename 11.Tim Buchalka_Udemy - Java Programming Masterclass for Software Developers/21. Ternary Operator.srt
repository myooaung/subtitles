1
1

00:00:05,100  -->  00:00:06,650
<v Tim>All right so it's now time to talk about</v>
2

2

00:00:06,650  -->  00:00:09,400
something called the Ternary Operator.
3

3

00:00:09,400  -->  00:00:11,500
So what I'm gonna do is come back here
4

4

00:00:11,500  -->  00:00:14,410
and undo the latest change that I had for isCar,
5

5

00:00:14,410  -->  00:00:17,290
so that we are testing to see whether it's true.
6

6

00:00:17,290  -->  00:00:19,850
But now what I wanna do is below that code,
7

7

00:00:19,850  -->  00:00:23,433
I'm going to type boolean wasCar equals
8

8

00:00:25,730  -->  00:00:30,560
I'm gonna type isCar, space, question mark,
9

9

00:00:30,560  -->  00:00:34,123
space, true, colon, false.
10

10

00:00:35,600  -->  00:00:38,830
So this is a case where we've got three operands.
11

11

00:00:38,830  -->  00:00:40,410
Now incidentally the Ternary Operator
12

12

00:00:40,410  -->  00:00:44,350
refers to the fact that the operator takes three operands.
13

13

00:00:44,350  -->  00:00:47,900
So the first operand is the condition we're testing
14

14

00:00:47,900  -->  00:00:51,960
which should evaluate as all conditions to true or false.
15

15

00:00:51,960  -->  00:00:56,160
So the second operand is the value to assign to wasCar
16

16

00:00:56,160  -->  00:00:58,330
if the first condition was true
17

17

00:00:58,330  -->  00:01:01,870
and the third operand is what to assign to wasCar
18

18

00:01:01,870  -->  00:01:05,510
if the first operand condition was false.
19

19

00:01:05,510  -->  00:01:07,710
Now the first condition could be a lot more complex
20

20

00:01:07,710  -->  00:01:09,520
than what we currently have but
21

21

00:01:09,520  -->  00:01:13,210
if we add some code now and type if parenthesis wasCar
22

22

00:01:14,650  -->  00:01:17,330
and a code block and we'll put some output
23

23

00:01:17,330  -->  00:01:19,683
in the code block wasCar as true.
24

24

00:01:22,700  -->  00:01:23,770
If you run this...
25

25

00:01:28,150  -->  00:01:30,880
...you can see we've got the output This is true,
26

26

00:01:30,880  -->  00:01:33,500
but we haven't got the output for wasCar equals true
27

27

00:01:33,500  -->  00:01:37,460
and what's happened there is with testing here, wasCar,
28

28

00:01:37,460  -->  00:01:40,600
basically what we're saying is isCar equal to true?
29

29

00:01:40,600  -->  00:01:43,810
If it is and when I set our wasCar variable to true
30

30

00:01:43,810  -->  00:01:46,610
otherwise set to false so because on line 72
31

31

00:01:46,610  -->  00:01:50,000
we've defined isCar as false therefore wasCar
32

32

00:01:50,000  -->  00:01:52,830
was assigned as false and we didn't see the output.
33

33

00:01:52,830  -->  00:01:55,020
If you come back and instead below that
34

34

00:01:56,110  -->  00:01:59,230
I'm going to type isCar equals true
35

35

00:02:01,200  -->  00:02:03,000
and now if you run the code again...
36

36

00:02:05,230  -->  00:02:07,140
...this time we've got no difference
37

37

00:02:07,140  -->  00:02:09,110
of the code and that's because I put that in the wrong place
38

38

00:02:09,110  -->  00:02:11,970
obviously that should've been before
39

39

00:02:11,970  -->  00:02:14,350
the boolean because that point in the code,
40

40

00:02:14,350  -->  00:02:17,290
it tests the value and obviously by assigning isCar
41

41

00:02:17,290  -->  00:02:19,640
after the fact we didn't see any result
42

42

00:02:19,640  -->  00:02:22,410
but now if we do this we should see the wasCar output.
43

43

00:02:22,410  -->  00:02:24,803
And there it is - wasCar equals true.
44

44

00:02:26,670  -->  00:02:28,890
All right so the ternary operator -
45

45

00:02:28,890  -->  00:02:30,440
so confirming the ternary operator
46

46

00:02:30,440  -->  00:02:33,380
is a shortcut to assigning one of two values
47

47

00:02:33,380  -->  00:02:36,580
to a variable depending on a given condition.
48

48

00:02:36,580  -->  00:02:37,990
So think about if the shortcut
49

49

00:02:37,990  -->  00:02:39,900
of the if-then-else statement,
50

50

00:02:39,900  -->  00:02:41,720
and of course we haven't discussed else at this point
51

51

00:02:41,720  -->  00:02:44,360
of the course but we will be discussing that later.
52

52

00:02:44,360  -->  00:02:48,520
So consider this example - int ageOfClient equals 20
53

53

00:02:48,520  -->  00:02:52,420
boolean isEighteenOrOver equals ageOfClient
54

54

00:02:53,260  -->  00:02:57,510
equals equals 20 question mark true colon false.
55

55

00:02:57,510  -->  00:03:00,650
So operand one - ageOfClient is equal to 20,
56

56

00:03:00,650  -->  00:03:02,570
we're using the equals to operator,
57

57

00:03:02,570  -->  00:03:04,960
so that's the condition we're checking for
58

58

00:03:04,960  -->  00:03:08,456
and that condition, remember, needs to return true or false.
59

59

00:03:08,456  -->  00:03:11,120
Operand two - true here is the value to assign
60

60

00:03:11,120  -->  00:03:13,010
to the variable isEighteenOrOver
61

61

00:03:13,010  -->  00:03:16,120
if the condition in operand one is true.
62

62

00:03:16,120  -->  00:03:19,340
In operand three, which is assigned to false,
63

63

00:03:19,340  -->  00:03:20,760
that's the value that's going to be assigned
64

64

00:03:20,760  -->  00:03:23,000
to the variable isEighteenOrOver
65

65

00:03:23,000  -->  00:03:27,390
if the condition in operand one was false.
66

66

00:03:27,390  -->  00:03:30,204
Now in this particular case isEighteenOrOver
67

67

00:03:30,204  -->  00:03:31,850
is assigned the value true and
68

68

00:03:31,850  -->  00:03:35,210
that's because the age of the client has the value 20
69

69

00:03:35,210  -->  00:03:38,910
and our condition for operand one ageOfClient is equal
70

70

00:03:38,910  -->  00:03:41,220
to 20 returns true.
71

71

00:03:41,220  -->  00:03:44,230
Now it can be a good idea to use parentheses
72

72

00:03:44,230  -->  00:03:46,550
like this example below to make the code more readable
73

73

00:03:46,550  -->  00:03:48,370
particularly in the ternary operator.
74

74

00:03:48,370  -->  00:03:50,540
So boolean isEighteenOrOver equals,
75

75

00:03:50,540  -->  00:03:53,290
we can just put in the condition for operand one
76

76

00:03:53,290  -->  00:03:56,293
equal to 20 in parentheses to make it clear.
77

77

00:03:58,200  -->  00:03:59,970
All right so let's end the video here.
78

78

00:03:59,970  -->  00:04:01,430
I want to talk a little bit more
79

79

00:04:01,430  -->  00:04:03,440
about operators and a bit of a summary
80

80

00:04:03,440  -->  00:04:05,340
and then we're going to get into a challenge
81

81

00:04:05,340  -->  00:04:07,410
and talk a bit about operator precedence
82

82

00:04:07,410  -->  00:04:09,710
and all of that's coming up in the next video.
