WEBVTT
1
1

00:00:05.320  -->  00:00:11.340
Alright, it's time to create our first module, the common module what we're going to do is move the necessary files
2

2

00:00:11.400  -->  00:00:12.780
that are currently elsewhere.
3

3

00:00:12.810  -->  00:00:18.770
Now Java project into that module and then we're going to work on the first module descriptor.
4

4

00:00:19.340  -->  00:00:20.740
so back in IntelliJ.
5

5

00:00:20.940  -->  00:00:26.340
Now firstly you may notice that I've got a different color IDE here and this is because I've now switched
6

6

00:00:26.340  -->  00:00:30.170
over to using IntelliJ IDE community edition.
7

7

00:00:30.170  -->  00:00:35.010
Now for most of this cause I've been using the Ultimate Edition and some times where there's been
8

8

00:00:35.010  -->  00:00:41.520
a change, I've tried to indicate that the functionality is slightly different with the Ultimate Edition but here
9

9

00:00:41.550  -->  00:00:46.500
I think it's important to use the Community Edition and that's because the simple sort of renaming
10

10

00:00:46.500  -->  00:00:53.340
or refactoring pieces of functionality in the Ultimate Edition where it doesn't happen in the community edition.
11

11

00:00:53.580  -->  00:00:55.650
And I think it's going to make a different and be confusing.
12

12

00:00:55.650  -->  00:00:59.420
Sorry, given that my students are probably using the community edition.
13

13

00:00:59.580  -->  00:01:03.990
I've decided to switch for the rest of this section to the community edition of intelliJ in case
14

14

00:01:03.990  -->  00:01:09.840
you're wondering why the color changes and what I'm trying to do is make it a white background so it's very clear
15

15

00:01:09.840  -->  00:01:12.840
that I'm using the community edition.
16

16

00:01:12.900  -->  00:01:18.420
So first thing we need to do now is change the project structure as we've discussed before we have to
17

17

00:01:18.420  -->  00:01:21.490
create the module in the root folder.
18

18

00:01:21.510  -->  00:01:27.720
Now confusingly in intelliJ, here's also a concept of a module but that's got nothing to do with
19

19

00:01:27.720  -->  00:01:31.860
the JDK 9 module that's an intelligent module when they were there prior.
20

20

00:01:31.900  -->  00:01:33.260
You probably say no.
21

21

00:01:33.540  -->  00:01:39.560
In fact we can just right click the project there an option to open module settings.
22

22

00:01:39.930  -->  00:01:44.630
Well that's the concept of a Intelligence module not the Java 9 module.
23

23

00:01:45.270  -->  00:01:51.510
So what intellJ have done, the people behind intelliJ Jetbrains they decided that one intelligent
24

24

00:01:51.510  -->  00:01:57.870
module will represent one java 9 module then that way we need to add the one module descriptor to
25

25

00:01:57.870  -->  00:01:58.400
that modules.
26

26

00:01:58.400  -->  00:02:01.920
So once you've done this a few times I think it would be pretty straightforward.
27

27

00:02:01.950  -->  00:02:04.830
So let's go ahead and create this module with intelliJ.
28

28

00:02:05.250  -->  00:02:11.010
So what we're going to do is come up to a file, select new and select module.
29

29

00:02:11.270  -->  00:02:16.250
You can say this has brought up a dialog similar to the dialog you see when creating a new project.
30

30

00:02:16.530  -->  00:02:20.040
So we have to select Java on the left hand side if it's not already selected.
31

31

00:02:20.100  -->  00:02:22.590
Now the module I've hit does need to be the JDK 9,
32

32

00:02:22.590  -->  00:02:29.390
in this case you can see it's project SDK 9 and the option select are if by chance is not.
33

33

00:02:29.520  -->  00:02:36.330
And it should be automatically selected from two videos ago when we imported the project and ran it on
34

34

00:02:36.330  -->  00:02:38.680
JDK 8 and then JDK 9.
35

35

00:02:38.850  -->  00:02:43.970
So the last run of I'm JDK 9 so I should be seeing there in that area in that state anyway.
36

36

00:02:44.280  -->  00:02:51.180
But if not, just select it, click on next but not need any additional frameworks and the module name beginning of
37

37

00:02:51.210  -->  00:02:58.820
the academy dot learn programming dot common, that's first module we're working on.
38

38

00:02:59.400  -->  00:03:03.250
You could say that intelliJ has now created this module when we can open this up here.
39

39

00:03:03.650  -->  00:03:05.740
You can say that we've got a source folder now.
40

40

00:03:06.010  -->  00:03:12.390
Alight, so what we need to do here is think about how are we going to approach this because we've got in our
41

41

00:03:12.390  -->  00:03:17.840
regular source folder we've actually got to the model which has got various classes there
42

42

00:03:17.970  -->  00:03:26.120
They also got control in main which had to do with the interface and also the main dot xml
43

43

00:03:26.370  -->  00:03:28.130
So how are we going to move all of these over?
44

44

00:03:28.650  -->  00:03:34.890
Well what I decided to do which was one approach was move all classes into this model initially but
45

45

00:03:34.890  -->  00:03:40.800
in the relevant packages and then later move those packages to the other modules as we create them in
46

46

00:03:40.800  -->  00:03:41.780
future videos.
47

47

00:03:42.100  -->  00:03:43.730
So in other words it's a two step process.
48

48

00:03:43.740  -->  00:03:49.680
We're putting everything into this module temporarily but with the packaging and then later I will actually
49

49

00:03:49.680  -->  00:03:51.580
move them as we create the other modules.
50

50

00:03:51.870  -->  00:03:54.960
And just a confirmation of what we trying to do here on the screen.
51

51

00:03:55.440  -->  00:03:58.800
You can see that so much is going to name here.
52

52

00:03:59.010  -->  00:04:04.410
And that's going to be the same as Package time remembering that it's best practice to have the module
53

53

00:04:04.410  -->  00:04:09.180
name and the package name to be the same on the image you can say that we've got three modules which
54

54

00:04:09.180  -->  00:04:15.810
we've talked about previously put common DB and  UI will have at least some source code.
55

55

00:04:15.840  -->  00:04:20.280
So in our scenario, you can say that again is a confirmation of artist and album.
56

56

00:04:20.400  -->  00:04:26.460
Those classes are going into our common package common module in this case and the DB is going to
57

57

00:04:26.460  -->  00:04:27.910
contain the data source class.
58

58

00:04:27.930  -->  00:04:33.390
And again additionally we're going to be creating a package in this module for the DB code which is
59

59

00:04:33.390  -->  00:04:38.070
the data source class and the UI will be our third package also in this module.
60

60

00:04:38.210  -->  00:04:43.100
And that's going to contain the controller and main classes as well as the xml file involved.
61

61

00:04:43.300  -->  00:04:48.470
Again I've said this a few times but eventually we'll move those other packages into the relevant modules.
62

62

00:04:49.050  -->  00:04:51.420
Firstly you need to create those packages.
63

63

00:04:51.440  -->  00:04:52.360
Let's go ahead and do that.
64

64

00:04:52.380  -->  00:04:58.730
So click on the source the source folder in the new module that we've created.
65

65

00:04:58.770  -->  00:05:08.550
New Package and the package is going to be the first one academy dot learn programming dot common.
66

66

00:05:09.150  -->  00:05:14.200
It's decided by the time I was going to copy that first part, the first package will just go back.
67

67

00:05:14.220  -->  00:05:16.400
Click on the source and do it again twice.
68

68

00:05:17.860  -->  00:05:26.240
So if a DB is this time, then the third one new package is going to be UI.
69

69

00:05:27.530  -->  00:05:29.610
Okay, so there's three packages.
70

70

00:05:29.610  -->  00:05:32.970
So this point if you're following along you should have a similar structure at which you can see on
71

71

00:05:32.970  -->  00:05:34.030
the screen here.
72

72

00:05:34.460  -->  00:05:38.120
Now this can be a little bit confusing sometimes to look at.
73

73

00:05:38.190  -->  00:05:41.870
You might want to select the option to hide empty middle packages.
74

74

00:05:41.870  -->  00:05:42.980
Now that's the option.
75

75

00:05:43.050  -->  00:05:48.220
You can click on this little gear icon on to see that the moment you can see that hide empty middle packages
76

76

00:05:48.230  -->  00:05:52.930
is selected at the moment you can see academy dot learn programming on the same line.
77

77

00:05:52.940  -->  00:05:58.630
If I select that you can it's move things down academy on its own.
78

78

00:05:58.720  -->  00:06:03.970
Then we've got the subfolder learn programming and then we get the three common DB and UI
79

79

00:06:04.060  -->  00:06:09.790
last parts of the package and then come back again if you want to click on compact and show it again
80

80

00:06:09.790  -->  00:06:11.630
that way.
81

81

00:06:11.640  -->  00:06:17.090
Personally I prefer to really hide the package but it's really up to you to which why you want to do
82

82

00:06:17.580  -->  00:06:21.550
put it that way again or come back here and do it that way.
83

83

00:06:21.580  -->  00:06:25.020
We're going to get back into that compact. Okay,
84

84

00:06:25.230  -->  00:06:30.930
so I got these three packages now, common DB and UI,, what we want to do next is move the code from
85

85

00:06:30.950  -->  00:06:35.290
this outsource file folder down here into each relevant package.
86

86

00:06:35.290  -->  00:06:40.260
In other words one from the project root into the new module packages. So following what we saw in the
87

87

00:06:40.260  -->  00:06:42.570
image let's move start moving things.
88

88

00:06:42.570  -->  00:06:47.610
And what we're going to do is start with the classes that need to go into the common package and
89

89

00:06:47.610  -->  00:06:48.950
that's album and artist.
90

90

00:06:49.220  -->  00:06:56.860
So I'm gonna select both of those and just drag them into common, release and you can click on refactor
91

91

00:06:58.540  -->  00:07:03.690
now, depending on your version of intelligence you may or may not see this but you'll probably find
92

92

00:07:03.700  -->  00:07:10.690
you'll see in the ultimate edition isn't automatically fixes for you but in the community edition that
93

93

00:07:10.690  -->  00:07:12.740
I'm running we're going to have to fix this later.
94

94

00:07:12.850  -->  00:07:18.010
For now we're going to click on continue and we'll talk about this a little bit later on in this video.
95

95

00:07:18.040  -->  00:07:20.050
The next one and how to resolve this.
96

96

00:07:20.090  -->  00:07:22.180
Click on continue to move them.
97

97

00:07:22.210  -->  00:07:23.720
All right so that's the first two.
98

98

00:07:23.920  -->  00:07:29.110
So next we want to move the data source into the DB package would select that drag that into the DB
99

99

00:07:29.110  -->  00:07:32.020
package recovery factor.
100

100

00:07:32.210  -->  00:07:36.490
Got a similar error here about basically it's not going to be accessible.
101

101

00:07:36.490  -->  00:07:38.520
Some reasons we're going to fix that shortly.
102

102

00:07:38.520  -->  00:07:41.300
I click on continue and we moved that.
103

103

00:07:41.320  -->  00:07:47.650
And now we want to come down here to the controller main andmain.xml, we will
104

104

00:07:47.650  -->  00:07:52.770
to drag those three into our UI, go ahead and do the UI package.
105

105

00:07:52.770  -->  00:07:55.430
So I do that now, click on okay,
106

106

00:07:57.010  -->  00:08:00.660
I think that there weren't any problems doing that. So now we got here
107

107

00:08:00.730  -->  00:08:07.450
basically an empty, so far we've got a simple module which is an empty project file, we just right
108

108

00:08:07.450  -->  00:08:14.380
click that entire source folder and select delete because I actually moved everything. Okay, that's cleared
109

109

00:08:14.380  -->  00:08:17.280
that up. So we're making progress here.
110

110

00:08:17.450  -->  00:08:23.320
We've basically got all our code sitting in the common module stage so let's run it and see if we get
111

111

00:08:23.320  -->  00:08:24.100
any errors.
112

112

00:08:24.100  -->  00:08:30.680
So when I right click on the main class and right click and click on main up or run main dot main
113

113

00:08:33.840  -->  00:08:38.190
and you can see what's popped up here is that this is the other thing you need to fix in the community
114

114

00:08:38.260  -->  00:08:44.670
edition and you can see here clearly is looking for the old imports simple module dot and then whatever
115

115

00:08:44.670  -->  00:08:45.770
the name of the class is.
116

116

00:08:45.960  -->  00:08:50.350
So we need to go ahead and fix that in order to get this to compile and be able to work.
117

117

00:08:50.580  -->  00:08:52.440
So what I'm going to do is actually delete those
118

118

00:08:55.840  -->  00:09:00.920
and because I've enabled the auto sync of imports you can say it's automatically fixed those
119

119

00:09:00.970  -->  00:09:06.290
for me, it's putting the relevant imports but if yours isn't your copy of intelligence is not configured
120

120

00:09:06.310  -->  00:09:10.210
to do that you need to manually add these imports as you can see on screen now.
121

121

00:09:10.380  -->  00:09:18.350
And if we run this again, run main dot main, we've still got an issue here.
122

122

00:09:18.850  -->  00:09:21.220
And the issue now is in main dot java.
123

123

00:09:21.740  -->  00:09:23.570
So go ahead and do the same thing there.
124

124

00:09:23.960  -->  00:09:31.670
So lets go and do that, delete that, new import added so you can see there, we could've
125

125

00:09:31.700  -->  00:09:37.230
just gone through and manually checked the code and done the relevant imports that would certainly have
126

126

00:09:37.230  -->  00:09:41.070
worked as well but this is just another way of doing it, just running it and then fixing the errors just
127

127

00:09:41.070  -->  00:09:42.490
to see them.
128

128

00:09:42.540  -->  00:09:44.430
Now what we've got is another error.
129

129

00:09:44.880  -->  00:09:49.070
And you can see the error we've got now is we can't connect to the database.
130

130

00:09:49.230  -->  00:09:54.580
There's no suitable driver for jdbc colon sqlite colon mudic DB.
131

131

00:09:54.810  -->  00:09:59.830
In other words it means that the module can't find the sqlite driver to connect to the database.
132

132

00:09:59.850  -->  00:10:04.800
Now the reason why I can't find it is because we didn't add this java file,
133

133

00:10:05.040  -->  00:10:13.180
our driver for the sqlite database, we didn't add it as a module dependency it is added as a project dependency.
134

134

00:10:13.230  -->  00:10:18.430
But now the root project doesn't have any code and for that reason the dependency no longer does anything.
135

135

00:10:18.690  -->  00:10:20.420
And it's not actually finding it here.
136

136

00:10:20.420  -->  00:10:26.220
So what we need to do is go ahead and go into our project structure again and make a change to come
137

137

00:10:26.220  -->  00:10:28.750
up here to file, click on project structure
138

138

00:10:30.730  -->  00:10:35.150
click on module to the left hand side if it's not already selected.
139

139

00:10:35.150  -->  00:10:37.210
we actually have two here,
140

140

00:10:37.870  -->  00:10:41.430
academy dot learn programming dot common,
141

141

00:10:41.560  -->  00:10:46.810
that's our new module and that hasn't got sqlite driver but get back to our regular project.
142

142

00:10:46.840  -->  00:10:50.410
It has got to sqlite driver. When we're using modules,
143

143

00:10:50.590  -->  00:10:53.060
It needs to be specified for that module.
144

144

00:10:53.140  -->  00:10:57.540
So we're going to do is remove it here from main music UI start
145

145

00:10:57.760  -->  00:11:04.000
I can just right click that and select remove rooted out of there and get back to our module which you
146

146

00:11:04.000  -->  00:11:07.480
saw me open down to academy dot learn programming dot common
147

147

00:11:07.710  -->  00:11:09.830
and what we can do is come down here to plus.
148

148

00:11:09.850  -->  00:11:14.650
Now that might be in a different position I think on Windows it's on the right hand side but select
149

149

00:11:14.980  -->  00:11:17.760
the plus and click on java or directories in any event.
150

150

00:11:19.360  -->  00:11:25.120
Then you need to navigate to the new folder that we've put this project in into the libs folder.
151

151

00:11:25.420  -->  00:11:29.140
You need to select the qlite driver, jdbc driver
152

152

00:11:29.340  -->  00:11:34.180
Click on open and you can say that we've now assigned that to the module as dependency.
153

153

00:11:34.570  -->  00:11:38.000
And the project module has a dependency for that.
154

154

00:11:38.030  -->  00:11:43.160
So now if we click on ok. Let's try running it again, see if it made any progress.
155

155

00:11:48.590  -->  00:11:52.270
And you could see that we are making progress but we still haven't got things to work.
156

156

00:11:52.270  -->  00:11:56.110
So what I'm going to do is finish the video here and in the next one we're going to resolve this error
157

157

00:11:56.170  -->  00:12:00.850
and move on and get to the stage of getting this application working and then we're going to start looking
158

158

00:12:00.850  -->  00:12:02.280
at the module descriptor.
159

159

00:12:02.410  -->  00:12:03.700
So see you in the next video.
