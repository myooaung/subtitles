WEBVTT
0
1
00:00:05.440 --> 00:00:10.140
In this video we're going to talk more
about keywords, and also just elaborate
1

2
00:00:10.140 --> 00:00:14.810
a little bit on expressions, which we've
already covered to a degree previously.
2

3
00:00:14.810 --> 00:00:16.840
Firstly with the keywords.
3

4
00:00:16.840 --> 00:00:20.590
Now Java has actually got 50
reserved words that are used for
4

5
00:00:20.590 --> 00:00:22.770
keywords in your applications.
5

6
00:00:22.770 --> 00:00:25.170
And you have seen some of
those in operation already.
6

7
00:00:25.170 --> 00:00:29.520
For example on the screen you can see some
of the keywords that are showing in blue.
7

8
00:00:29.520 --> 00:00:33.060
IntelliJ will actually
highlight keywords in blue to
8

9
00:00:33.060 --> 00:00:35.990
show you that they actually are a keyword.
9

10
00:00:35.990 --> 00:00:40.300
So, what I'm going to do is just go to a
browser, and I'm gonna paste in this link.
10

11
00:00:41.660 --> 00:00:44.690
And the link will be in
the resources section of this video.
11

12
00:00:44.690 --> 00:00:47.130
And here is a list of Java keywords, and
12

13
00:00:47.130 --> 00:00:51.280
you can see in the Java programming
language a keyword is
13

14
00:00:51.280 --> 00:00:53.070
one of 53 reserved words that have a predefined
14

15
00:00:53.070 --> 00:00:56.710
meaning in the language and as we scroll down in the list you will see some of this you already use boolean is one
15

16
00:01:01.010 --> 00:01:03.210
double is another
16

17
00:01:03.210 --> 00:01:06.360
And also float but don't worry you don't need to memorize
17

18
00:01:06.360 --> 00:01:08.660
any of these because we are going to go
18

19
00:01:08.660 --> 00:01:11.190
through each and every one of this in the course
19

20
00:01:11.190 --> 00:01:12.160
but the thing
20

21
00:01:12.160 --> 00:01:17.390
is they are reserved and lets swing back to IntelliJ and I'm going to talk further about that
21

22
00:01:19.120 --> 00:01:19.860
And incidentally,
22

23
00:01:19.860 --> 00:01:24.900
if you pull this video, I've created a new
project called KeywordsAndExpressions.
23

24
00:01:24.900 --> 00:01:28.990
So anything in blue,
that's showing IntelliJ editor is
24

25
00:01:28.990 --> 00:01:31.400
confirming to you that
this is a reserved word.
25

26
00:01:31.400 --> 00:01:39.650
So for example, we can't go in here,
And create a variable called.
26

27
00:01:39.650 --> 00:01:43.330
So if we type int int=5; unexpected token.
27

28
00:01:43.330 --> 00:01:47.600
And that's because as far as IntelliJs
concerned, int is a reserved word.
28

29
00:01:47.600 --> 00:01:49.110
It's actually a data type.
29

30
00:01:49.110 --> 00:01:52.540
We could use int2, that would be
quite valid because that's only using
30

31
00:01:52.540 --> 00:01:55.190
part of the word, but
you can't use an exact word.
31

32
00:01:55.190 --> 00:01:59.460
So anytime you get into weird errors,
just make sure that you're not
32

33
00:01:59.460 --> 00:02:03.000
using a reserved keyword, and
you can refer back to that list.
33

34
00:02:03.000 --> 00:02:07.310
And some of the other keywords that you've
already seen that you can't use are false,
34

35
00:02:07.310 --> 00:02:13.250
you saw false before, we've used that
in a previous video, true, and null.
35

36
00:02:13.250 --> 00:02:16.500
But we'll be talking about those
as we progress through the course.
36

37
00:02:16.500 --> 00:02:19.190
So as I mentioned, by the time
you've finished with this course
37

38
00:02:19.190 --> 00:02:21.860
you will have gone through
all 50 of those keywords.
38

39
00:02:21.860 --> 00:02:23.890
We will have a good understanding
of what they actually are.
39

40
00:02:23.890 --> 00:02:27.720
Okay, now lets talk now about expressions.
40

41
00:02:27.720 --> 00:02:29.740
We have talked a little bit
in the past about those and
41

42
00:02:29.740 --> 00:02:33.490
you have seen some of those in operations,
but lets just expand that a little bit
42

43
00:02:33.490 --> 00:02:36.650
more just so we have a specific
understanding of what expressions are.
43

44
00:02:36.650 --> 00:02:41.150
I am just going to delete this and
make a bit more space.
44

45
00:02:41.150 --> 00:02:44.400
Expressions are essentially building
blocks of all Java programs.
45

46
00:02:44.400 --> 00:02:48.350
You'll be using expressions a lot,
and expressions are built with values,
46

47
00:02:48.350 --> 00:02:51.500
variables, and operators,
which you've seen previously.
47

48
00:02:51.500 --> 00:02:53.020
But also with method calls,
48

49
00:02:53.020 --> 00:02:57.360
which we'll be discussing in a future
set of videos later in the course.
49

50
00:02:57.360 --> 00:03:00.310
For example, if we wanted to
create an expression to convert
50

51
00:03:00.310 --> 00:03:04.080
miles into kilometers, you'd need to
know firstly that a mile was equal to-
51

52
00:03:06.820 --> 00:03:10.280
To 1.609344 kilometers.
52

53
00:03:10.280 --> 00:03:19.030
So if we wanted to figure out what a 100
miles were converted to kilometers,
53

54
00:03:19.030 --> 00:03:25.800
double kilometers equals
100 times 1.609344.
54

55
00:03:25.800 --> 00:03:27.740
So that would be a valid statement.
55

56
00:03:27.740 --> 00:03:33.210
For that line, the actual expression
is this component of the entire line.
56

57
00:03:34.420 --> 00:03:37.070
The data type does not form
part of an expression, but
57

58
00:03:37.070 --> 00:03:41.190
everything else on the line typically
forms or is part of the expression.
58

59
00:03:41.190 --> 00:03:45.850
So the expression component is variables,
values, and operators.
59

60
00:03:45.850 --> 00:03:47.050
All of those used in this case.
60

61
00:03:47.050 --> 00:03:49.390
We've got a variable kilometers.
61

62
00:03:49.390 --> 00:03:53.890
We've got values, like a 101.609344.
62

63
00:03:53.890 --> 00:03:56.390
And of course, operators,
equals, and multiplications.
63

64
00:03:56.390 --> 00:03:59.970
So that's an expression
this component of the line.
64

65
00:03:59.970 --> 00:04:03.630
By adding the datatype,
we're creating a valid java statement.
65

66
00:04:03.630 --> 00:04:07.900
The combination of that And also the semi
colon at the end of the line as well.
66

67
00:04:07.900 --> 00:04:09.250
Some more examples of expressions.
67

68
00:04:09.250 --> 00:04:13.340
We've got something like
if highscore equals 50.
68

69
00:04:13.340 --> 00:04:16.030
As we've done before.
69

70
00:04:16.030 --> 00:04:18.750
We're getting an error because
I haven't defined the variable.
70

71
00:04:18.750 --> 00:04:19.900
So I'll just define that.
71

72
00:04:24.700 --> 00:04:26.810
So, this component is the expression.
72

73
00:04:28.490 --> 00:04:30.420
Within the brackets as you can see there.
73

74
00:04:30.420 --> 00:04:32.980
So, the keyword for
if in the brackets, and
74

75
00:04:32.980 --> 00:04:37.320
the braces as well do not form part of
the expression as this component in here.
75

76
00:04:37.320 --> 00:04:38.990
And incidentally there's
another expression,
76

77
00:04:38.990 --> 00:04:41.570
and the expression is quite valid as well.
77

78
00:04:41.570 --> 00:04:45.080
With a literal value as it's
got there with the number 50.
78

79
00:04:45.080 --> 00:04:47.290
And finally, another valid expression.
79

80
00:04:49.590 --> 00:04:50.690
Is this component here.
80

81
00:04:53.200 --> 00:04:56.750
So the component within
the brackets is also an expression.
81

82
00:04:56.750 --> 00:04:57.950
And that's actually calling a method.
82

83
00:04:57.950 --> 00:05:02.220
And we'll be talking about methods in
a future section of the course as well.
83

84
00:05:02.220 --> 00:05:07.600
The main idea is just to get your head
around what components of the entire line
84

85
00:05:07.600 --> 00:05:10.500
is an expression from what
an expression actually is.
85

86
00:05:10.500 --> 00:05:13.630
Just a confirmation when
you're defining a variable
86

87
00:05:14.910 --> 00:05:17.620
the entire line minus
the semi colon at the end and
87

88
00:05:17.620 --> 00:05:20.730
the datatype is the expression,
so that's that component there.
88

89
00:05:23.070 --> 00:05:26.310
Or with the literal value
89

90
00:05:26.310 --> 00:05:30.960
that's the component there minus the data
type at the start and also the semi colon.
90

91
00:05:30.960 --> 00:05:35.070
If you've got a control statement, control
flow statement, and we'll be talking more
91

92
00:05:35.070 --> 00:05:40.330
about those also in future videos, the
component in brackets is the expression.
92

93
00:05:40.330 --> 00:05:43.460
And if you're using a method, and again,
methods, we're going to be covering later,
93

94
00:05:43.460 --> 00:05:47.910
but anything in the brackets, essentially,
that is also an expression as well.
94

95
00:05:47.910 --> 00:05:51.930
And now that you know that
I'm going to clear this off,
95

96
00:05:51.930 --> 00:05:54.330
the other that's off the screen.
96

97
00:05:54.330 --> 00:05:56.380
And my challenge for you is as follows.
97

98
00:06:04.620 --> 00:06:07.400
Have a look at the code that
you can see on the screen.
98

99
00:06:07.400 --> 00:06:11.790
Write down what components of the lines
I've entered there are expressions.
99

100
00:06:11.790 --> 00:06:14.060
And come back and check your results
after you've had a go at it.
100

101
00:06:15.460 --> 00:06:16.230
So, how did you get on?
101

102
00:06:16.230 --> 00:06:17.500
Did you figure it out?
102

103
00:06:17.500 --> 00:06:19.450
Let's go through and talk this through.
103

104
00:06:19.450 --> 00:06:23.190
So the components that are expressions,
firstly on the first line.
104

105
00:06:23.190 --> 00:06:26.560
The score equals a hundred
component is the expression.
105

106
00:06:26.560 --> 00:06:28.160
Remembering that a data type and
106

107
00:06:28.160 --> 00:06:32.490
also the semicolon to the end the line
are not part of the expression.
107

108
00:06:32.490 --> 00:06:35.610
In the second example,
the if score greater than 99.
108

109
00:06:35.610 --> 00:06:39.760
Well the part in brackets
is also an expression.
109

110
00:06:39.760 --> 00:06:45.710
So the if, the braces, and the brackets
do not form part of an expression.
110

111
00:06:45.710 --> 00:06:48.480
In the next case we’ll be
printing out to the console.
111

112
00:06:48.480 --> 00:06:51.800
The component that’s in between
the brackets in the double quotes
112

113
00:06:51.800 --> 00:06:52.820
is the expression.
113

114
00:06:52.820 --> 00:06:57.990
The final example here, score = 0 that
is also a valid expression as well.
114

115
00:06:57.990 --> 00:07:00.300
So that you figure all this out,
congratulations if you got them all.
115

116
00:07:00.300 --> 00:07:03.550
So that's expressions and
you'll be seeing expressions and
116

117
00:07:03.550 --> 00:07:07.270
keywords in use a lot
more in future videos.
117

118
00:07:07.270 --> 00:07:09.750
But speaking of future videos,
in the next video we're gonna be
118

119
00:07:09.750 --> 00:07:13.120
discussing statements which
we talks on briefly here.
119

120
00:07:13.120 --> 00:07:17.460
Also, what whitespace is and the use of
indenting, So, I'll see you on that video.
