1
1

00:00:04,800  -->  00:00:06,840
alright so we're at the end of the last
2

2

00:00:06,840  -->  00:00:09,140
video we created we ended up finishing
3

3

00:00:09,140  -->  00:00:11,250
off the insert song method so lets now
4

4

00:00:11,250  -->  00:00:13,080
go just go through to what we've
5

5

00:00:13,080  -->  00:00:15,720
actually done here so we start over
6

6

00:00:15,720  -->  00:00:18,300
here by starting a transaction and we do
7

7

00:00:18,300  -->  00:00:19,760
that by turning off the autocommit
8

8

00:00:19,760  -->  00:00:22,400
behavior of the connection now the
9

9

00:00:22,400  -->  00:00:24,150
default behavior you may recall is to
10

10

00:00:24,150  -->  00:00:26,240
commit every change and the way the
11

11

00:00:26,240  -->  00:00:28,470
database does that is by running every
12

12

00:00:28,470  -->  00:00:31,050
update delete insert statement as a
13

13

00:00:31,050  -->  00:00:32,060
transaction
14

14

00:00:32,060  -->  00:00:33,960
now when we want to write a series of
15

15

00:00:33,960  -->  00:00:35,930
sql statements as a transaction we
16

16

00:00:35,930  -->  00:00:38,010
signal that by turning off the default
17

17

00:00:38,010  -->  00:00:40,230
behavior from that point forward we're
18

18

00:00:40,230  -->  00:00:42,870
actually in a new transaction so after
19

19

00:00:42,870  -->  00:00:44,550
calling said auto commit to
20

20

00:00:44,550  -->  00:00:46,620
turn off the default behavior and
21

21

00:00:46,620  -->  00:00:48,800
starting a new transaction we perform
22

22

00:00:48,800  -->  00:00:50,570
all the actions we have to take to
23

23

00:00:50,570  -->  00:00:53,100
insert the song so we start off by
24

24

00:00:53,100  -->  00:00:55,440
inserting the artist and then we insert
25

25

00:00:55,440  -->  00:00:58,170
the album using the artist ID that was
26

26

00:00:58,170  -->  00:00:59,960
returned from the insert artist method
27

27

00:00:59,960  -->  00:01:02,160
once we get to that point we can now
28

28

00:01:02,160  -->  00:01:04,670
insert the song now we do that by
29

29

00:01:04,670  -->  00:01:06,780
setting the values in the insert into
30

30

00:01:06,780  -->  00:01:09,330
songs preparedstatement these three
31

31

00:01:09,330  -->  00:01:11,790
lines here and then we actually call
32

32

00:01:11,790  -->  00:01:13,890
the execute update to check the only
33

33

00:01:13,890  -->  00:01:15,780
one row was affected and that's the row
34

34

00:01:15,780  -->  00:01:17,430
that was added for the song
35

35

00:01:17,430  -->  00:01:19,680
now if that's the case we're actually
36

36

00:01:19,680  -->  00:01:21,690
done we inserted the song and all
37

37

00:01:21,690  -->  00:01:24,000
its associated information so we want to
38

38

00:01:24,000  -->  00:01:25,470
commit the changes and we're doing that
39

39

00:01:25,470  -->  00:01:27,540
on this line and once you've done that
40

40

00:01:27,540  -->  00:01:30,870
also ends the transaction now if something
41

41

00:01:30,870  -->  00:01:32,340
goes wrong and an exception is thrown
42

42

00:01:32,340  -->  00:01:34,890
we are calling this connection . roll
43

43

00:01:34,890  -->  00:01:37,260
back down here and that's going to back
44

44

00:01:37,260  -->  00:01:38,640
out any changes we've made since
45

45

00:01:38,640  -->  00:01:40,830
starting the transaction and it will
46

46

00:01:40,830  -->  00:01:43,530
also end the transaction and down
47

47

00:01:43,530  -->  00:01:46,290
here in the finally block actually
48

48

00:01:46,290  -->  00:01:48,330
setting the set auto commit method
49

49

00:01:48,330  -->  00:01:50,880
or calling it with a value of true to
50

50

00:01:50,880  -->  00:01:52,470
return to the default autocommit
51

51

00:01:52,470  -->  00:01:55,080
Behavior now because using transactions
52

52

00:01:55,080  -->  00:01:57,750
involves getting database locks its best
53

53

00:01:57,750  -->  00:02:00,810
practice to only turn off auto commit for
54

54

00:02:00,810  -->  00:02:02,970
the duration of a transaction and to
55

55

00:02:02,970  -->  00:02:04,200
turn it back on again immediately
56

56

00:02:04,200  -->  00:02:07,140
afterwards once it's turned back on
57

57

00:02:07,140  -->  00:02:09,540
unless we turn it off again any inserts
58

58

00:02:09,540  -->  00:02:11,040
updates or deletes will be auto
59

59

00:02:11,040  -->  00:02:12,840
committed as soon as they've completed
60

60

00:02:12,840  -->  00:02:14,910
now resetting the default behavior in
61

61

00:02:14,910  -->  00:02:16,920
the finally block ensures that it will
62

62

00:02:16,920  -->  00:02:18,460
be done whether the transactions
63

63

00:02:18,460  -->  00:02:21,970
succeeds but also if it fails so hopefully now
64

64

00:02:21,970  -->  00:02:23,290
at this point you can see why we have
65

65

00:02:23,290  -->  00:02:25,900
the insert artist and insert album
66

66

00:02:25,900  -->  00:02:28,180
methods both throw the sql exception
67

67

00:02:28,180  -->  00:02:31,870
rather than handling it if you recall both
68

68

00:02:31,870  -->  00:02:33,940
of these methods were thrown the sql
69

69

00:02:33,940  -->  00:02:36,910
exception and the two
70

70

00:02:36,910  -->  00:02:38,620
cases here where theirs a problem its
71

71

00:02:38,620  -->  00:02:40,870
inserting or there's a problem with the
72

72

00:02:40,870  -->  00:02:43,360
generated keys we are throwing exceptions
73

73

00:02:43,360  -->  00:02:45,640
the sql exception there likewise for
74

74

00:02:45,640  -->  00:02:47,890
the insert album so that's why these
75

75

00:02:47,890  -->  00:02:49,420
methods aren't handling the sql
76

76

00:02:49,420  -->  00:02:51,550
exceptions were just throwing back to
77

77

00:02:51,550  -->  00:02:53,500
the inserts song method where these are
78

78

00:02:53,500  -->  00:02:56,110
ultimately called from so what it means
79

79

00:02:56,110  -->  00:02:57,850
is that all the code that makes up the
80

80

00:02:57,850  -->  00:03:00,310
transaction is actually now in one block
81

81

00:03:00,310  -->  00:03:02,860
quite easy to read so its really yeah
82

82

00:03:02,860  -->  00:03:04,690
this block here that's updating
83

83

00:03:04,690  -->  00:03:07,480
potentially the three tables if we had
84

84

00:03:07,480  -->  00:03:09,280
to add checks for negative IDs being
85

85

00:03:09,280  -->  00:03:11,530
returned the code will look a lot messier
86

86

00:03:11,530  -->  00:03:14,380
but since we don't have to do that we
87

87

00:03:14,380  -->  00:03:16,210
can clearly now see that the transaction
88

88

00:03:16,210  -->  00:03:19,210
involves three insertions alright so
89

89

00:03:19,210  -->  00:03:22,180
read a lot of code here the big test is
90

90

00:03:22,180  -->  00:03:25,450
going to try it out and this actually
91

91

00:03:25,450  -->  00:03:27,100
be void because we're not actually
92

92

00:03:27,100  -->  00:03:29,020
returning the id i think that
93

93

00:03:29,020  -->  00:03:31,150
came about because I copy the
94

94

00:03:31,150  -->  00:03:33,460
previous two methods which returned the
95

95

00:03:33,460  -->  00:03:36,280
ID of course in this case insert song
96

96

00:03:36,280  -->  00:03:38,200
that's calling those other methods but
97

97

00:03:38,200  -->  00:03:40,480
in itself isn't returning anything that
98

98

00:03:40,480  -->  00:03:41,380
fixes that error
99

99

00:03:41,380  -->  00:03:43,930
alright again so let's now try this out
100

100

00:03:43,930  -->  00:03:47,470
and go to the main dot java file and
101

101

00:03:47,470  -->  00:03:49,510
just before the data source . close
102

102

00:03:49,510  -->  00:03:51,490
let's now try it out so i'm going to
103

103

00:03:51,490  -->  00:03:53,980
insert the song touch of grey by the
104

104

00:03:53,980  -->  00:03:56,560
Grateful Dead and that's on track one on
105

105

00:03:56,560  -->  00:03:58,570
the album in the dark so to do that
106

106

00:03:58,570  -->  00:04:02,320
we're going to do...
107

107

00:04:02,320  -->  00:04:03,880
....and the other thing I need to do
108

108

00:04:03,880  -->  00:04:08,500
is make this a public method the other
109

109

00:04:08,500  -->  00:04:10,750
two were private because it only called
110

110

00:04:10,750  -->  00:04:12,940
by the insert song method but the song
111

111

00:04:12,940  -->  00:04:15,010
inserts on within itself should be
112

112

00:04:15,010  -->  00:04:16,600
public so that we can access it
113

113

00:04:16,600  -->  00:04:20,140
outside of the class so that's going to be
114

114

00:04:20,140  -->  00:04:23,890
insert song...
115

115

00:04:23,890  -->  00:04:25,230
....
116

116

00:04:25,230  -->  00:04:38,070
....
117

117

00:04:38,070  -->  00:04:41,310
....let's open up our db browser
118

118

00:04:41,310  -->  00:04:46,350
and we look at the artists table open
119

119

00:04:46,350  -->  00:04:54,840
the database first scroll
120

120

00:04:54,840  -->  00:04:57,210
down to the end okay we got total of
121

121

00:04:57,210  -->  00:04:58,860
201 theirs no grateful dead
122

122

00:04:58,860  -->  00:05:01,050
there at the moment and we have a look
123

123

00:05:01,050  -->  00:05:07,110
also with the album's table scroll down
124

124

00:05:07,110  -->  00:05:09,600
to the end for that you can see we got 439
125

125

00:05:09,600  -->  00:05:12,510
entries there and song table lets have a
126

126

00:05:12,510  -->  00:05:16,830
look at that right down to the end we got
127

127

00:05:16,830  -->  00:05:19,110
5350 songs
128

128

00:05:19,110  -->  00:05:20,550
alright let's try running this and see
129

129

00:05:20,550  -->  00:05:27,250
what happens
130

130

00:05:27,250  -->  00:05:29,080
we need to just finish this last song
131

131

00:05:29,080  -->  00:05:30,710
we just put...
132

132

00:05:30,710  -->  00:05:34,270
and we got that error about could not find
133

133

00:05:34,270  -->  00:05:35,440
the artist for the song but that's this
134

134

00:05:35,440  -->  00:05:38,330
previous query up here and actually
135

135

00:05:38,330  -->  00:05:40,240
that's not going to work of course the
136

136

00:05:40,240  -->  00:05:41,710
reason for that is we got this return
137

137

00:05:41,710  -->  00:05:43,960
statement up here on line 62 so
138

138

00:05:43,960  -->  00:05:45,580
consequently the code below it isn't
139

139

00:05:45,580  -->  00:05:46,750
gonna be executed
140

140

00:05:46,750  -->  00:05:50,180
let's just run it again and rather than
141

141

00:05:50,180  -->  00:05:51,520
commenting out the code I just put in the
142

142

00:05:51,520  -->  00:05:54,310
valid song....
143

143

00:05:54,310  -->  00:05:55,270
....
144

144

00:05:55,270  -->  00:05:57,830
we got a message here
145

145

00:05:57,830  -->  00:05:59,410
resetting default commit behavior
146

146

00:05:59,410  -->  00:06:01,840
that's telling us its got now to the code
147

147

00:06:01,840  -->  00:06:06,310
in data source in the finally clause
148

148

00:06:06,310  -->  00:06:08,300
we are setting default commit behavior
149

149

00:06:08,300  -->  00:06:09,740
so hopefully that means that the records
150

150

00:06:09,740  -->  00:06:12,050
are being added to our database so lets
151

151

00:06:12,050  -->  00:06:13,390
actually check that will go back to DB
152

152

00:06:13,390  -->  00:06:18,160
browser will do a refresh here you can see now
153

153

00:06:18,160  -->  00:06:19,900
we got a new song added 5351
154

154

00:06:19,900  -->  00:06:21,050
that's a good sign
155

155

00:06:21,050  -->  00:06:24,550
we can see touch of grey album id is
156

156

00:06:24,550  -->  00:06:28,030
440 track number one if we
157

157

00:06:28,030  -->  00:06:33,970
have a look at albums 440 that was the
158

158

00:06:33,970  -->  00:06:36,830
new entry 439 last time down the end
159

159

00:06:36,830  -->  00:06:40,060
they're entry 440 is now in the
160

160

00:06:40,060  -->  00:06:43,430
dark you can see 202 is now the artist
161

161

00:06:43,430  -->  00:06:48,860
ID we got artist 202 entries and theirs
162

162

00:06:48,860  -->  00:06:50,930
grateful dead now showings as 202 so that's
163

163

00:06:50,930  -->  00:06:53,440
awesome so that's actually working and
164

164

00:06:53,440  -->  00:06:54,830
again we got the message here resetting
165

165

00:06:54,830  -->  00:06:56,530
default commit behavior which told us
166

166

00:06:56,530  -->  00:06:58,450
that finally Claus code did get executed
167

167

00:06:58,450  -->  00:07:00,580
and we didn't see any other exceptions
168

168

00:07:00,580  -->  00:07:02,650
or any other printouts to indicate
169

169

00:07:02,650  -->  00:07:04,210
there was a problem and the records
170

170

00:07:04,210  -->  00:07:06,580
got add ok alright so let's actually try
171

171

00:07:06,580  -->  00:07:07,660
adding another one just to make sure
172

172

00:07:07,660  -->  00:07:10,240
that we're on track here going to go back
173

173

00:07:10,240  -->  00:07:14,650
and run it again
174

174

00:07:14,650  -->  00:07:17,470
again you could comment out this code if
175

175

00:07:17,470  -->  00:07:18,880
you wanted to so you won't be asked this every
176

176

00:07:18,880  -->  00:07:19,840
time you run it
177

177

00:07:19,840  -->  00:07:21,880
we're trying to add the same record
178

178

00:07:21,880  -->  00:07:23,200
again so actually go back and have a look at
179

179

00:07:23,200  -->  00:07:24,050
that
180

180

00:07:24,050  -->  00:07:30,010
noting this time the artist still 202
181

181

00:07:30,010  -->  00:07:31,930
so its found the
182

182

00:07:31,930  -->  00:07:34,390
artist and not try to add it again which is
183

183

00:07:34,390  -->  00:07:36,970
exactly what we wanted and for albums
184

184

00:07:36,970  -->  00:07:41,800
to make sure we still got 404 we still
185

185

00:07:41,800  -->  00:07:44,530
got in the dark and the right entries
186

186

00:07:44,530  -->  00:07:48,050
there and then also for songs this time
187

187

00:07:48,050  -->  00:07:49,960
we have got another entry there but the
188

188

00:07:49,960  -->  00:07:51,250
reason for that was we didn't actually
189

189

00:07:51,250  -->  00:07:54,050
add a clause to actually query the song
190

190

00:07:54,050  -->  00:07:56,560
so if we go back and have a look at
191

191

00:07:56,560  -->  00:08:00,010
data source method we didn't attempt to do
192

192

00:08:00,010  -->  00:08:01,420
what we did in these other two methods
193

193

00:08:01,420  -->  00:08:04,180
we actually queried it and look for the
194

194

00:08:04,180  -->  00:08:05,740
result first before trying to insert it
195

195

00:08:05,740  -->  00:08:07,570
and insert song method we just went
196

196

00:08:07,570  -->  00:08:08,950
straight into the process of inserting
197

197

00:08:08,950  -->  00:08:11,200
the record that would be something that
198

198

00:08:11,200  -->  00:08:12,760
you would do ordinarily when your inserting a
199

199

00:08:12,760  -->  00:08:14,800
song you check to see whether the
200

200

00:08:14,800  -->  00:08:18,070
song was on file first and then we
201

201

00:08:18,070  -->  00:08:19,720
started work on that go to the top
202

202

00:08:19,720  -->  00:08:21,040
there
203

203

00:08:21,040  -->  00:08:23,680
we got our insert in there we only got
204

204

00:08:23,680  -->  00:08:25,360
the two queries for query artist and
205

205

00:08:25,360  -->  00:08:27,550
query album so you need to add another
206

206

00:08:27,550  -->  00:08:30,850
constant here for query song so you need
207

207

00:08:30,850  -->  00:08:33,040
to execute that additional query if you
208

208

00:08:33,040  -->  00:08:34,180
want to actually check to see whether
209

209

00:08:34,180  -->  00:08:35,970
the song existed or not but I didn't do
210

210

00:08:35,970  -->  00:08:37,600
that and that's why when I ran it the
211

211

00:08:37,600  -->  00:08:40,410
first two entries the ones for the
212

212

00:08:40,410  -->  00:08:42,310
artist and album weren't duplicated in the
213

213

00:08:42,310  -->  00:08:44,710
database but the song was again because
214

214

00:08:44,710  -->  00:08:47,220
we didn't try to query the insert song
215

215

00:08:47,220  -->  00:08:50,440
method first let's try running it with
216

216

00:08:50,440  -->  00:08:51,970
another entry to make sure it still
217

217

00:08:51,970  -->  00:08:57,580
working and just what I'll do is cancel
218

218

00:08:57,580  -->  00:09:02,230
out of that will go back to main again
219

219

00:09:02,230  -->  00:09:07,180
and just changes this going to try try
220

220

00:09:07,180  -->  00:09:10,690
Bob Dylan song so like a rolling stone
221

221

00:09:10,690  -->  00:09:21,130
Bob Dylan and Bob Dylans greatest hits
222

222

00:09:21,130  -->  00:09:26,140
that is actually track 5 let's run this
223

223

00:09:26,140  -->  00:09:28,000
what i will do rather than typing again just
224

224

00:09:28,000  -->  00:09:30,550
comment out this bit of code again just to
225

225

00:09:30,550  -->  00:09:31,990
save us having to type this code each time
226

226

00:09:31,990  -->  00:09:37,630
run it and I comment out the important
227

227

00:09:37,630  -->  00:09:39,580
part the part I want to comment is
228

228

00:09:39,580  -->  00:09:41,560
is that one as well not just the part that
229

229

00:09:41,560  -->  00:09:45,220
actually checks run it again
230

230

00:09:45,220  -->  00:09:48,760
ok this time it's finished go back and
231

231

00:09:48,760  -->  00:09:50,920
check our database again starting at the
232

232

00:09:50,920  -->  00:09:55,660
album's next got an album there now Bob Dylan's
233

233

00:09:55,660  -->  00:09:59,620
greatest hits artist new artist being
234

234

00:09:59,620  -->  00:10:01,990
added you can see there Bob Dylan and
235

235

00:10:01,990  -->  00:10:06,100
songs we got 5353 this time and you can
236

236

00:10:06,100  -->  00:10:07,720
see like a Rolling Stones out of there
237

237

00:10:07,720  -->  00:10:10,510
alright so that's ok when everything is
238

238

00:10:10,510  -->  00:10:12,010
working ok but let's actually try and
239

239

00:10:12,010  -->  00:10:14,350
introduce an error into the insert song
240

240

00:10:14,350  -->  00:10:16,630
method and we can do that by using an
241

241

00:10:16,630  -->  00:10:18,280
invalid index when we set one of the
242

242

00:10:18,280  -->  00:10:20,170
values in the prepared statement
243

243

00:10:20,170  -->  00:10:22,030
let's do that just to see what actually
244

244

00:10:22,030  -->  00:10:25,000
happens to go back to data source so with
245

245

00:10:25,000  -->  00:10:27,010
the three set string ints
246

246

00:10:27,010  -->  00:10:27,700
here
247

247

00:10:27,700  -->  00:10:29,620
so with these three entries here let's
248

248

00:10:29,620  -->  00:10:31,090
just change and we'll put for the
249

249

00:10:31,090  -->  00:10:34,190
album ID instead of 3 should be
250

250

00:10:34,190  -->  00:10:37,100
let's make another the index 8 which
251

251

00:10:37,100  -->  00:10:39,470
we know is wrong and if interesting
252

252

00:10:39,470  -->  00:10:41,480
enough we actually get this error if we
253

253

00:10:41,480  -->  00:10:44,000
do that cannot resolve query
254

254

00:10:44,000  -->  00:10:45,710
parameter 3 so its smart enough to
255

255

00:10:45,710  -->  00:10:47,420
tell us that we haven't got three
256

256

00:10:47,420  -->  00:10:50,780
entries we could change that to 3 and it
257

257

00:10:50,780  -->  00:10:52,880
would work
258

258

00:10:52,880  -->  00:10:54,650
but its got an error with any more than three
259

259

00:10:54,650  -->  00:10:56,030
so that's pretty neat how that inspection
260

260

00:10:56,030  -->  00:10:57,920
works for us put that in there knowing
261

261

00:10:57,920  -->  00:11:00,320
that it's going to fail and we'll just
262

262

00:11:00,320  -->  00:11:02,420
go back and we'll try and add a
263

263

00:11:02,420  -->  00:11:03,200
different entry
264

264

00:11:03,200  -->  00:11:08,840
let's go back and add one for bird dog by the
265

265

00:11:08,840  -->  00:11:15,350
Everly Brothers all-time greatest hits
266

266

00:11:15,350  -->  00:11:19,100
and do track seven let's try running
267

267

00:11:19,100  -->  00:11:24,200
that this time we have got an error
268

268

00:11:24,200  -->  00:11:26,360
which would expect array index out of
269

269

00:11:26,360  -->  00:11:27,620
bounds exception
270

270

00:11:27,620  -->  00:11:29,540
so what's happening is that the values
271

271

00:11:29,540  -->  00:11:32,330
were replacing is stored in an array when
272

272

00:11:32,330  -->  00:11:34,250
we try to set the eighth element in the
273

273

00:11:34,250  -->  00:11:37,070
album ID we're getting that exception so
274

274

00:11:37,070  -->  00:11:38,240
it's interesting to note that is that
275

275

00:11:38,240  -->  00:11:40,640
the invalid indexes 7 which means that
276

276

00:11:40,640  -->  00:11:42,320
under the covers the indices are being
277

277

00:11:42,320  -->  00:11:44,540
mapped to a zero-based index which
278

278

00:11:44,540  -->  00:11:46,880
raises the question of why the jdbc API
279

279

00:11:46,880  -->  00:11:48,710
uses zero-based indices in the first
280

280

00:11:48,710  -->  00:11:51,980
place but anyway let's go over to check
281

281

00:11:51,980  -->  00:11:57,320
our db browser and doing a refresh you
282

282

00:11:57,320  -->  00:12:00,290
can see we've still got 5353 songs
283

283

00:12:00,290  -->  00:12:03,770
that's ok we haven't got the new song that
284

284

00:12:03,770  -->  00:12:06,110
we're trying to add we have a look at
285

285

00:12:06,110  -->  00:12:09,260
the album's note that we haven't gongo into
286

286

00:12:09,260  -->  00:12:11,630
this file and do a refresh it was
287

287

00:12:11,630  -->  00:12:13,100
refresh we have actually got a new
288

288

00:12:13,100  -->  00:12:15,890
entry looking at albums we've got all
289

289

00:12:15,890  -->  00:12:20,270
time greatest hits and also for artists
290

290

00:12:20,270  -->  00:12:22,370
the new artist has been added as well
291

291

00:12:22,370  -->  00:12:25,490
Emily brothers so what's actually going
292

292

00:12:25,490  -->  00:12:28,460
on here so why were the artist and the
293

293

00:12:28,460  -->  00:12:31,460
album records added but the song not
294

294

00:12:31,460  -->  00:12:34,550
didn't we actually have some code to do
295

295

00:12:34,550  -->  00:12:36,260
rollback so you might be wondering
296

296

00:12:36,260  -->  00:12:38,150
why has it done this
297

297

00:12:38,150  -->  00:12:40,190
let's just go back in deconstruct what
298

298

00:12:40,190  -->  00:12:41,240
happened
299

299

00:12:41,240  -->  00:12:43,330
so firstly going back to data source .
300

300

00:12:43,330  -->  00:12:46,250
java we can look at the code and see
301

301

00:12:46,250  -->  00:12:47,570
that the code crashed on
302

302

00:12:47,570  -->  00:12:51,800
on line 403 click on that so you can see why
303

303

00:12:51,800  -->  00:12:53,790
the song didn't get created because it
304

304

00:12:53,790  -->  00:12:55,110
crashed on that line because of the
305

305

00:12:55,110  -->  00:12:57,260
wrong indicies so it didn't get to the stage
306

306

00:12:57,260  -->  00:12:59,810
of actually doing and execute update so
307

307

00:12:59,810  -->  00:13:01,310
that's why the song didn't get updated
308

308

00:13:01,310  -->  00:13:03,480
but what about the fact that the album
309

309

00:13:03,480  -->  00:13:06,140
and the artist got updated why did they got
310

310

00:13:06,140  -->  00:13:09,170
updated specifically when again what's
311

311

00:13:09,170  -->  00:13:11,270
supposed to happen is meant to be doing
312

312

00:13:11,270  -->  00:13:13,350
a rollback if you look really carefully
313

313

00:13:13,350  -->  00:13:15,620
at the exception down here you can
314

314

00:13:15,620  -->  00:13:17,810
probably figure out what's going on
315

315

00:13:17,810  -->  00:13:19,670
so what we've done up here in the try
316

316

00:13:19,670  -->  00:13:21,680
block so we've caught the sql
317

317

00:13:21,680  -->  00:13:24,020
exception but what actually happened
318

318

00:13:24,020  -->  00:13:26,270
here is you've got an array index out of
319

319

00:13:26,270  -->  00:13:28,610
bounds exception so the sql exception
320

320

00:13:28,610  -->  00:13:31,250
wasn't thrown so consequently we
321

321

00:13:31,250  -->  00:13:34,230
didn't get a roll back here but the next
322

322

00:13:34,230  -->  00:13:35,850
thing you might be asking is hang on
323

323

00:13:35,850  -->  00:13:38,120
didn't we set auto commit to false
324

324

00:13:38,120  -->  00:13:41,450
coming up here yes we did do that on line 397
325

325

00:13:41,450  -->  00:13:44,790
but as a consequence of going
326

326

00:13:44,790  -->  00:13:47,450
through this try catch and finally the
327

327

00:13:47,450  -->  00:13:49,920
finally code block was executed we had
328

328

00:13:49,920  -->  00:13:52,190
set auto commit true on and that's
329

329

00:13:52,190  -->  00:13:54,290
got a side effect of doing a commit
330

330

00:13:54,290  -->  00:13:56,850
so what actually happened was the sql
331

331

00:13:56,850  -->  00:13:59,040
exception was bypassed because a sql
332

332

00:13:59,040  -->  00:14:01,580
exception wasn't thrown by the code the
333

333

00:14:01,580  -->  00:14:03,770
code went to the finally block the
334

334

00:14:03,770  -->  00:14:06,230
finally block then set autocommit to
335

335

00:14:06,230  -->  00:14:08,180
true which had the side effect of
336

336

00:14:08,180  -->  00:14:10,110
committing the changes and that's why
337

337

00:14:10,110  -->  00:14:12,360
the artist and the album were both save
338

338

00:14:12,360  -->  00:14:14,910
so that's clearly not what we want to
339

339

00:14:14,910  -->  00:14:17,160
happen in this scenario so how do we
340

340

00:14:17,160  -->  00:14:19,610
actually get around this what we really
341

341

00:14:19,610  -->  00:14:21,140
want to do here instead of just a sql
342

342

00:14:21,140  -->  00:14:23,180
exception we want to catch all
343

343

00:14:23,180  -->  00:14:24,660
exceptions just going to change the
344

344

00:14:24,660  -->  00:14:28,980
sql exception to exception and that
345

345

00:14:28,980  -->  00:14:30,480
will catch the fact that this array
346

346

00:14:30,480  -->  00:14:32,360
index out of bounds exception or a
347

347

00:14:32,360  -->  00:14:34,430
sql exception or any other exception
348

348

00:14:34,430  -->  00:14:35,910
for that matter and we should get a
349

349

00:14:35,910  -->  00:14:38,300
rollback let's go back to our database
350

350

00:14:38,300  -->  00:14:41,810
first and what we're going to do is just
351

351

00:14:41,810  -->  00:14:43,470
delete these two entries we got one for
352

352

00:14:43,470  -->  00:14:47,000
artist click on this id 204 Everly
353

353

00:14:47,000  -->  00:14:50,240
Brothers delete and same for the album
354

354

00:14:50,240  -->  00:14:52,610
and go down and select the last entry
355

355

00:14:52,610  -->  00:14:56,440
all time greatest hits delete
356

356

00:14:56,440  -->  00:14:58,510
I'm going to come up to file close
357

357

00:14:58,510  -->  00:15:02,290
database and we're going to click on yes
358

358

00:15:02,290  -->  00:15:05,470
to save the changes i'm just going to
359

359

00:15:05,470  -->  00:15:09,910
open the database again and now that
360

360

00:15:09,910  -->  00:15:11,470
this code for the exception
361

361

00:15:11,470  -->  00:15:13,570
lets actually run it again and see
362

362

00:15:13,570  -->  00:15:15,010
whether we get the proper behavior that
363

363

00:15:15,010  -->  00:15:16,900
we're looking for a proper rollback
364

364

00:15:16,900  -->  00:15:22,750
going to click on run this time you can
365

365

00:15:22,750  -->  00:15:24,190
see what happens we got insert song
366

366

00:15:24,190  -->  00:15:26,500
exception got performing rollback
367

367

00:15:26,500  -->  00:15:29,110
resetting default commit behavior so
368

368

00:15:29,110  -->  00:15:30,730
this time we're actually are login the
369

369

00:15:30,730  -->  00:15:32,470
fact that we've got an exception will
370

370

00:15:32,470  -->  00:15:34,690
process the rollback we still go through
371

371

00:15:34,690  -->  00:15:37,000
during this set auto commit but because
372

372

00:15:37,000  -->  00:15:38,860
we added the rollback or the roll back
373

373

00:15:38,860  -->  00:15:40,480
method has been called prior to that
374

374

00:15:40,480  -->  00:15:42,520
we should find that the changes weren't
375

375

00:15:42,520  -->  00:15:44,740
added to the database this time lets
376

376

00:15:44,740  -->  00:15:46,810
going to check them out albums will
377

377

00:15:46,810  -->  00:15:50,260
refresh this time we've still got 441
378

378

00:15:50,260  -->  00:15:50,980
records
379

379

00:15:50,980  -->  00:15:53,140
scroll down and see that the last
380

380

00:15:53,140  -->  00:15:54,730
successful entry was Bob Dylan's greatest
381

381

00:15:54,730  -->  00:15:58,240
hits and same for artists refresh to be
382

382

00:15:58,240  -->  00:16:01,840
sure 203 this time and that's
383

383

00:16:01,840  -->  00:16:04,390
correct its Bob Dylan again and by the
384

384

00:16:04,390  -->  00:16:07,450
way this 7 over here the 7 is the invalid
385

385

00:16:07,450  -->  00:16:10,810
index in case your wonder what that was and
386

386

00:16:10,810  -->  00:16:12,880
now that has fix our error just to make sure that
387

387

00:16:12,880  -->  00:16:14,500
things are still working change to 8 back
388

388

00:16:14,500  -->  00:16:17,440
3 their in the insert songs if we
389

389

00:16:17,440  -->  00:16:25,300
run this again we got no exception errors
390

390

00:16:25,300  -->  00:16:26,620
being log there we should be able to
391

391

00:16:26,620  -->  00:16:28,930
go back to our database do a refresh
392

392

00:16:28,930  -->  00:16:32,770
Everly Brothers now on the last entry
393

393

00:16:32,770  -->  00:16:37,660
albums all time greatest hits but most
394

394

00:16:37,660  -->  00:16:40,750
importantly the songs we got now 5354 so
395

395

00:16:40,750  -->  00:16:43,570
we've got a new song there bird dog we
396

396

00:16:43,570  -->  00:16:45,400
know that its from the everly
397

397

00:16:45,400  -->  00:16:47,580
brothers at this point you now know
398

398

00:16:47,580  -->  00:16:49,480
how to work with transactions using jdbc
399

399

00:16:49,480  -->  00:16:52,510
so we use them when we want to perform a
400

400

00:16:52,510  -->  00:16:55,150
series of sql statements as a unit so
401

401

00:16:55,150  -->  00:16:57,010
that the changes are only committed to
402

402

00:16:57,010  -->  00:16:59,110
the database if all the statements ran
403

403

00:16:59,110  -->  00:17:02,050
successfully now if a statement fails or
404

404

00:17:02,050  -->  00:17:04,000
something else happens and perhaps lost
405

405

00:17:04,000  -->  00:17:05,710
connection or the database server goes
406

406

00:17:05,710  -->  00:17:07,080
down in the middle of performing
407

407

00:17:07,080  -->  00:17:09,040
transaction and we won't would end up with a
408

408

00:17:09,040  -->  00:17:10,130
database in an invalid
409

409

00:17:10,130  -->  00:17:12,410
state will be able to roll back any
410

410

00:17:12,410  -->  00:17:14,300
changes that have been made or the
411

411

00:17:14,300  -->  00:17:16,220
connection goes down for some reason the
412

412

00:17:16,220  -->  00:17:18,050
database will automatically rollback any
413

413

00:17:18,050  -->  00:17:21,260
changes and end the transaction one final
414

414

00:17:21,260  -->  00:17:23,240
note here it's also possible to
415

415

00:17:23,240  -->  00:17:25,310
rollback a transaction to a specific
416

416

00:17:25,310  -->  00:17:27,920
point rather than running back all the
417

417

00:17:27,920  -->  00:17:29,720
changes that have been made since the
418

418

00:17:29,720  -->  00:17:32,660
transaction started so to do this we
419

419

00:17:32,660  -->  00:17:34,310
need to do is call the connection .
420

420

00:17:34,310  -->  00:17:37,010
sets save point method which returns a save
421

421

00:17:37,010  -->  00:17:39,500
point object if we need to roll back the
422

422

00:17:39,500  -->  00:17:41,450
changes have been made since we created
423

423

00:17:41,450  -->  00:17:43,460
the save point we passed the save point
424

424

00:17:43,460  -->  00:17:46,130
to the connection . rollback method in
425

425

00:17:46,130  -->  00:17:47,600
other words we do a connected . roll back
426

426

00:17:47,600  -->  00:17:50,720
and we pass that save point object but we
427

427

00:17:50,720  -->  00:17:52,040
only do this where it makes sense to
428

428

00:17:52,040  -->  00:17:54,230
rollback any part of a transaction when
429

429

00:17:54,230  -->  00:17:55,310
something goes wrong
430

430

00:17:55,310  -->  00:17:57,830
alright so that's transactions in the
431

431

00:17:57,830  -->  00:17:59,240
next video we're going to start taking a
432

432

00:17:59,240  -->  00:18:02,060
look at jdbc from within the context of
433

433

00:18:02,060  -->  00:18:04,550
the graphical user interface type
434

434

00:18:04,550  -->  00:18:11,680
application see you in the next video
