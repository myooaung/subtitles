1
1

00:00:05,220  -->  00:00:09,410
ok so we started this project in the
last video so let's go ahead and finish off the
2

2

00:00:09,410  -->  00:00:13,220
code and then we'll talk about it a bit
more so we've actually managed to add
3

3

00:00:13,220  -->  00:00:18,320
the arrays the string arrays for nature
words and divine words to the respective
4

4

00:00:18,320  -->  00:00:23,810
sets again using the arrays.aslist
method which conveniently does it for us
5

5

00:00:23,810  -->  00:00:27,050
because their isn't in the Java language at the
6

6

00:00:27,050  -->  00:00:31,160
moment a set or map literal like you can see
on line 43 we can't do something
7

7

00:00:31,160  -->  00:00:35,340
equivalent to that for an array with a set of literal at this stage that's why we've
8

8

00:00:35,340  -->  00:00:39,740
done it that way to get those items
into our sets
9

9

00:00:39,740  -->  00:00:44,580
so let's figure out the asymmetric
difference nature take divine and also
10

10

00:00:44,580  -->  00:00:50,530
then do divine take nature to see what it ends up and will have a look at it on the screen after we have done that
11

11

00:00:50,530  -->  00:00:58,050
come down here and we start by seeing
what the result is of nature take
12

12

00:00:58,050  -->  00:01:04,850
divine ok nature take
divine so we can do that by typing....
13

13

00:01:04,850  -->  00:01:13,070
set.....
14

14

00:01:13,070  -->  00:01:18,440
.....so we are going to initialize that with the nature set and of course we
15

15

00:01:18,440  -->  00:01:23,700
originally defined on line 41 and then we added to
on line 44 I'm gonna do...
16

16

00:01:23,700  -->  00:02:01,620
.....
17

17

00:02:01,620  -->  00:02:10,020
...so we are obviously by doing the
18

18

00:02:10,020  -->  00:02:17,410
removal alll that's equivalent to divine take nature and
we are going to do....
19

19

00:02:17,410  -->  00:02:22,980
and the method we are going to used to
print out is going to be....
20

20

00:02:22,980  -->  00:02:34,800
.....
21

21

00:02:34,800  -->  00:02:39,890
.......we defining it as a set but it is a hash set because that is how we defined it.....
22

22

00:02:39,890  -->  00:02:51,590
......
23

23

00:02:51,590  -->  00:03:00,120
.....
24

24

00:03:00,120  -->  00:03:04,530
....just gonna show the words left and right across the screen.....
25

25

00:03:04,530  -->  00:03:10,040
...so if we run this
26

26

00:03:10,040  -->  00:03:22,670
...and we are getting an error because of a typo and because I didn't end that I wasn't paying enough
27

27

00:03:22,670  -->  00:03:37,890
attention ok will try again ok and you can see nature take divine gives us all but art thee nature unknown
28

28

00:03:37,890  -->  00:03:41,730
but deducting nature from divine so divine take nature gives us a different set of
29

29

00:03:41,730  -->  00:03:45,830
words and again the reason for that is load the image again
30

30

00:03:45,830  -->  00:03:48,860
circle on the left confirming that
represents the set nature which we can
31

31

00:03:48,860  -->  00:03:52,350
seen the source code before...
32

32

00:03:52,350  -->  00:03:56,900
...the one on the right in
blue is divine and where they overlap is
33

33

00:03:56,900  -->  00:04:02,000
the intersection of the two sets and
the set of everything is in both
34

34

00:04:02,000  -->  00:04:05,550
is the Union now the asymmetric
difference nature take divine will
35

35

00:04:05,550  -->  00:04:09,070
contain all the green words as you saw
you can see that just in the output to
36

36

00:04:09,070  -->  00:04:14,040
the top their top right and divine take
nature will contain the blue ones which
37

37

00:04:14,040  -->  00:04:14,950
of course
38

38

00:04:14,950  -->  00:04:19,700
what following code has printed out for both
cases now Java doesn't have a method
39

39

00:04:19,700  -->  00:04:23,450
for calculating the symmetric difference
possibly because that's used less often
40

40

00:04:23,450  -->  00:04:27,840
when dealing with sets now the symmetric
difference as opposed to the asymmetric
41

41

00:04:27,840  -->  00:04:32,410
difference the symmetric difference is
the elements that appear in one set or
42

42

00:04:32,410  -->  00:04:37,310
the other but not both so it can therefore
be defined as the union minus the
43

43

00:04:37,310  -->  00:04:41,440
intersection and that will essentially
gives the green and blue words in our
44

44

00:04:41,440  -->  00:04:45,900
examples now because we know now how to get the union and intersection we can get
45

45

00:04:45,900  -->  00:04:50,130
the symmetric difference by removing the
intersection from the union that makes
46

46

00:04:50,130  -->  00:05:03,720
sense so let's go ahead and do....so let's create
47

47

00:05:03,720  -->  00:05:14,610
another set for this so....
48

48

00:05:14,610  -->  00:05:19,820
.....
49

49

00:05:19,820  -->  00:05:34,660
...and we use the wrong variable name because union defined earlier in the code so.....
50

50

00:05:34,660  -->  00:05:45,930
.....
51

51

00:05:45,930  -->  00:05:55,530
....
52

52

00:05:55,530  -->  00:05:59,710
.....and now we can
print out some symmetric difference because we've
53

53

00:05:59,710  -->  00:06:03,510
done that and again the symmetric
difference is just removing the intersection
54

54

00:06:03,510  -->  00:06:05,630
from the union so to do that
55

55

00:06:05,630  -->  00:06:12,270
will type a message as to what it is....
56

56

00:06:12,270  -->  00:06:22,340
.....
57

57

00:06:22,340  -->  00:06:29,360
...so if we
58

58

00:06:29,360  -->  00:06:34,440
run this now
59

59

00:06:34,440  -->  00:06:38,200
and again bringing up the image on the
screen now we've run it so you can see
60

60

00:06:38,200  -->  00:06:42,050
that we should have all the green and
all the blue but not the ones in the
61

61

00:06:42,050  -->  00:06:45,500
Union so we shouldn't have the words to
their which we haven't and we shouldn't have
62

62

00:06:45,500  -->  00:06:48,950
the word is which we haven't gotten there
but we should have all the other words
63

63

00:06:48,950  -->  00:06:54,140
so that's asymmetric difference ok so
the last record bit of code for this video is going
64

64

00:06:54,140  -->  00:06:58,280
to do with is the contains all that's
the last bulk operation and remember in
65

65

00:06:58,280  -->  00:07:02,760
the previous video we talked about what
bulk operations are and I gave you a link to the
66

66

00:07:02,760  -->  00:07:08,240
Oracle documentation but contains all is
used to test it if one set is a super set of
67

67

00:07:08,240  -->  00:07:09,340
another
68

68

00:07:09,340  -->  00:07:13,490
this one's actually non-destructive so its only
testing membership and doesn't actually
69

69

00:07:13,490  -->  00:07:17,750
modify the sets just literally returns
a true or false as appropriate depending on
70

70

00:07:17,750  -->  00:07:29,940
your answer so....
71

71

00:07:29,940  -->  00:07:55,760
.....
72

72

00:07:55,760  -->  00:08:05,110
...and lastly we can do a test with divine we can do...
73

73

00:08:05,110  -->  00:08:17,270
.....
74

74

00:08:17,270  -->  00:08:27,880
...so if we run this we can see
that the first test on line 68
75

75

00:08:27,880  -->  00:08:33,310
the divine set is not a subset of nature
but intersection is a subset of both
76

76

00:08:33,310  -->  00:08:37,950
unsurprisingly because the elements in
the intersection of two sets have to
77

77

00:08:37,950  -->  00:08:41,750
appear on both sets by
definition if you're not interested in
78

78

00:08:41,750  -->  00:08:44,780
sets theory sets can still be useful
79

79

00:08:44,780  -->  00:08:49,220
the divine set we created contain all
the words when initialized with but
80

80

00:08:49,220  -->  00:08:53,100
each one appears only once so therefore
using a set can be a really quick way to
81

81

00:08:53,100  -->  00:08:56,160
get all the unique items in the
collection now the other thing to keep in
82

82

00:08:56,160  -->  00:09:01,540
mind is the hash set class itself is also
very fast so they can be really good way
83

83

00:09:01,540  -->  00:09:05,230
to group related items together even if
you don't plan to perform mathematical
84

84

00:09:05,230  -->  00:09:10,560
set operations on it so that's it that's our discussion about sets concluded and
85

85

00:09:10,560  -->  00:09:13,470
finished in the next video we're going to
put this all into practice with a
86

86

00:09:13,470  -->  00:09:13,820
challenge so I'll see you in the next video
