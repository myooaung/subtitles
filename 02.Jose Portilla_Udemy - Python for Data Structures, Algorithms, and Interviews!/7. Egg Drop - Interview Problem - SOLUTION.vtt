WEBVTT
1

00:00:01.200  -->  00:00:05.540
Hello everyone and welcome to the solution to the eggdrop problem.

2

00:00:05.700  -->  00:00:09.770
This is a really good riddle because it actually has an algorithmic background.

3

00:00:09.870  -->  00:00:12.670
It's kind of based on a binary search solution.

4

00:00:12.670  -->  00:00:14.900
So let's go ahead and walk through a solution.

5

00:00:15.180  -->  00:00:20.760
So let's say you were just going to start from the tenth floor and go up the floors and multiples of

6

00:00:20.760  -->  00:00:21.470
10.

7

00:00:21.540  -->  00:00:25.500
Then at the first egg breaks say the floor number 20.

8

00:00:25.710  -->  00:00:30.930
You know you just need to check all the floors between 11 and 19 with the second egg to see which floor

9

00:00:30.930  -->  00:00:31.100
.

10

00:00:31.260  -->  00:00:32.220
It won't break.

11

00:00:33.120  -->  00:00:38.160
In that simple example member we're kind of looking at subproblems right now that worst case number

12

00:00:38.160  -->  00:00:40.360
of drops is 19.

13

00:00:40.380  -->  00:00:46.590
If the threshold was 99th floor then you would have to drop the first egg 10 times and the second egg

14

00:00:46.680  -->  00:00:48.860
nine times in a linear fashion.

15

00:00:49.380  -->  00:00:51.100
So what's the best solution.

16

00:00:51.150  -->  00:00:54.590
We want to minimize this worst case number drops.

17

00:00:54.720  -->  00:00:59.000
And for that we'll generalize the problem and floors again.

18

00:00:59.010  -->  00:01:01.510
Another good tactic in an interview situation.

19

00:01:01.620  -->  00:01:06.360
Generalizing problems ought to be that step value for the first egg.

20

00:01:06.580  -->  00:01:08.610
Is it still going to be every 10 floors.

21

00:01:08.610  -->  00:01:12.830
You know if we have 200 floors is this that value is still going to be 10.

22

00:01:12.960  -->  00:01:17.760
The point to note here is that we're trying to minimize the worst case number of drops which happens

23

00:01:17.910  -->  00:01:22.250
if the threshold is at the highest floor.

24

00:01:22.320  -->  00:01:28.050
So our steps should be of some value which reduces the number of drops at the first egg.

25

00:01:28.050  -->  00:01:33.140
So what we're going to do is assume we take some step value m initially.

26

00:01:33.600  -->  00:01:41.890
So if every subsequent step is minus one now we have m plus and minus one plus and minus two plus so

27

00:01:41.900  -->  00:01:50.610
on and so on until you get all the way to one equals and and this is actually just equal to m multiplied

28

00:01:50.610  -->  00:01:53.070
by M Plus 1 divided by two equals.

29

00:01:53.070  -->  00:01:56.660
And so this is actually just simply a binary search.

30

00:01:56.700  -->  00:02:04.410
And that's really what this question is trying to get at if n is equal to 100 here then the letter M

31

00:02:04.590  -->  00:02:08.310
can be solved for and it's going to be equal to thirteen point six five.

32

00:02:08.520  -->  00:02:14.280
If you have 100 floors since you can't draw from a decimal of a floor you have to run that up to 14

33

00:02:15.120  -->  00:02:20.970
which means the worst case scenario is when the threshold is in the first 14 floors.

34

00:02:21.110  -->  00:02:24.480
It's the number of drops being 14.

35

00:02:24.480  -->  00:02:25.210
All right.

36

00:02:25.470  -->  00:02:31.290
So you can find plenty of other explanations by simply googling the term 2 eggs 100 floors.

37

00:02:31.590  -->  00:02:37.950
In case you want a better breakdown of how you can use the binary search in order to solve this problem

38

00:02:37.950  -->  00:02:38.940
.

39

00:02:39.010  -->  00:02:41.160
OK that's it for this Rudel.

40

00:02:41.160  -->  00:02:42.670
Make sure you know this one.

41

00:02:42.670  -->  00:02:46.920
Again look up other explanations in case you want a more detailed solution.

42

00:02:46.920  -->  00:02:48.810
But that's all there is to it.

43

00:02:48.810  -->  00:02:50.640
Thanks everyone and I'll see you at the next lecture
