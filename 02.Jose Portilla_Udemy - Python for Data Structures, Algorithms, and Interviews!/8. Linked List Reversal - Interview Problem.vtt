WEBVTT
1

00:00:01.590  -->  00:00:04.770
Hello everyone and welcome to your next interview problem.

2

00:00:04.890  -->  00:00:07.800
This one's called linked list reversal.

3

00:00:07.800  -->  00:00:09.740
The problem statement is this.

4

00:00:09.810  -->  00:00:16.320
Write a function to reverse a linked list in place the function will take the head of the list as the

5

00:00:16.320  -->  00:00:19.680
input and return the new head of the list.

6

00:00:19.680  -->  00:00:23.270
So you're going to be given the example linked list node class.

7

00:00:23.270  -->  00:00:29.070
Here we have a class node object and a value attribute as well as an index node attribute.

8

00:00:29.070  -->  00:00:33.450
This is the same one we developed when we are creating a scent singly linked list implementation in

9

00:00:33.450  -->  00:00:34.770
Python.

10

00:00:35.700  -->  00:00:39.500
Then go ahead and fill out the function below with your solution.

11

00:00:40.740  -->  00:00:46.180
As far as testing your solution you should note that this is a classic just run a cell for testing solution

12

00:00:46.190  -->  00:00:46.430
.

13

00:00:46.770  -->  00:00:49.570
So go ahead and read the statements below carefully.

14

00:00:49.650  -->  00:00:53.740
You should be able to easily Tester's your own solution to make sure it works.

15

00:00:54.030  -->  00:01:00.870
Given the short list A B C D with values 1 2 3 4 what you're going to do is check the effect of your

16

00:01:00.870  -->  00:01:04.620
reverse function and make sure the results match the logic here below.

17

00:01:05.010  -->  00:01:12.630
So for example here we've created 4 nodes A B C D with values 1 2 3 4.

18

00:01:12.720  -->  00:01:15.740
Then we set up the order A B C D.

19

00:01:15.780  -->  00:01:20.660
So it's a next note to be the next node C C next to D.

20

00:01:20.790  -->  00:01:28.290
So if we go ahead and check these values will get to 3 4 and if we check the next note value of D will

21

00:01:28.290  -->  00:01:32.000
run into an error because deid does not have a next note.

22

00:01:32.130  -->  00:01:33.460
It was the last note.

23

00:01:33.870  -->  00:01:35.300
So far so good.

24

00:01:35.740  -->  00:01:40.380
No again there is no value preceeding the last node so that makes sense.

25

00:01:40.380  -->  00:01:42.040
Now let's reverse the linked list.

26

00:01:42.120  -->  00:01:48.840
We should see the opposite order of values then if we go ahead and reverse the linked list by passing

27

00:01:48.840  -->  00:01:50.660
in that head node.

28

00:01:50.760  -->  00:01:55.410
If you filled in the link in the function correctly you should get something looks like this.

29

00:01:55.470  -->  00:02:00.480
Print D that next note value get 3 C next that value to 1.

30

00:02:00.720  -->  00:02:03.150
And if you ask for the next node value of a.

31

00:02:03.200  -->  00:02:08.510
This should give the same error as d gave last time because now it points to none.

32

00:02:09.210  -->  00:02:14.100
OK so hopefully you can use that logic to just test your function on your own before checking out the

33

00:02:14.100  -->  00:02:15.710
solution yourself.

34

00:02:16.150  -->  00:02:17.990
OK that's it for the problem.

35

00:02:18.000  -->  00:02:22.590
Again you're just writing a function to reverse a linked list in place.

36

00:02:22.620  -->  00:02:23.250
All right.

37

00:02:23.490  -->  00:02:25.490
Thanks everyone and I'll see you at the next lecture.

38

00:02:25.500  -->  00:02:27.370
Well we'll go over the solution to this problem
