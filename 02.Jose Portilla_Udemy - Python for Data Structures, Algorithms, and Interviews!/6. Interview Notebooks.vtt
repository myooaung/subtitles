WEBVTT
1

00:00:01.260  -->  00:00:06.420
Hello everyone and welcome to the example interview note book lecture in the last lecture we went over

2

00:00:06.420  -->  00:00:11.040
to our notebooks in general and this lecture we're actually going to make our own example interview

3

00:00:11.070  -->  00:00:14.800
notebooks so we can better understand how the interview notebooks work.

4

00:00:14.820  -->  00:00:18.020
So let's go ahead and jump to the notebooks so we can get started.

5

00:00:18.410  -->  00:00:18.820
OK.

6

00:00:18.840  -->  00:00:21.910
So we're here example interview notebook.

7

00:00:22.110  -->  00:00:24.900
So all the interview notebooks are going to look something like this.

8

00:00:24.930  -->  00:00:29.640
Go ahead and make this into a markdown So let's just control.

9

00:00:29.700  -->  00:00:34.950
And then and again and you'll have the name of the problem as the letter.

10

00:00:34.950  -->  00:00:41.820
So I'm just going to say add two numbers then we'll have a problem statement

11

00:00:44.870  -->  00:00:52.560
and it'll just be add to numbers to numbers to gether

12

00:00:55.770  -->  00:01:01.930
shift enter and then all we're going to do is go ahead and create the function.

13

00:01:02.040  -->  00:01:11.370
So I'm going to the same solution as the name of the function takes a number 1 and 2 and then it just

14

00:01:11.370  -->  00:01:19.440
returns 1 plus them to it's a really super basic example of what you would see.

15

00:01:19.440  -->  00:01:21.190
So this is the solution code it out.

16

00:01:21.210  -->  00:01:28.020
If we were just making the actual problem notebook I would just have pass here instead with no return

17

00:01:28.020  -->  00:01:29.190
function.

18

00:01:29.190  -->  00:01:31.320
So you can imagine that you've already filled that out.

19

00:01:31.530  -->  00:01:36.360
The part that I really want to get to here is the testing your solution section so show you how we actually

20

00:01:36.360  -->  00:01:39.150
build out the solution to us.

21

00:01:39.150  -->  00:01:45.110
So in every interview in our book or at least most of them if it's a placable you have a test cell.

22

00:01:45.480  -->  00:01:54.540
And what we do is say from those tools and you may have to download and knows knows basically just a

23

00:01:54.540  -->  00:02:02.040
testing library and we're going to imports asserts equal.

24

00:02:02.380  -->  00:02:06.480
Well let's go ahead and zoom in so we can get a little bit of a better view here.

25

00:02:06.520  -->  00:02:12.020
So I'm saying from those tool tools that import are equal.

26

00:02:13.050  -->  00:02:22.970
And then we're going to create a class and it's going to be called Solution test screen object.

27

00:02:23.790  -->  00:02:30.330
And then the class solution test is going to have a method called test takes in itself since it's a

28

00:02:30.330  -->  00:02:30.990
class.

29

00:02:30.990  -->  00:02:35.380
And it also takes an sol which stands for solution.

30

00:02:35.690  -->  00:02:40.560
And what we do here is we use this assert equal function that we imported from the KNOWS that tools

31

00:02:40.560  -->  00:02:48.720
library and assert equal function basically takes into arguments and then will return an error if they're

32

00:02:48.720  -->  00:02:50.910
not equal to each other.

33

00:02:50.910  -->  00:02:56.820
So first thing to do is taking the solution that we pass and then put in two numbers.

34

00:02:56.820  -->  00:03:06.450
So in this case all put in two and two and we'll go ahead and make sure that this is equal to 2 plus

35

00:03:06.450  -->  00:03:08.600
2 which is four.

36

00:03:08.640  -->  00:03:14.580
So the first argument is the function that we pass and I'll show you how to pass it in just a second

37

00:03:15.090  -->  00:03:16.190
with these two arguments.

38

00:03:16.200  -->  00:03:19.710
Two into the one to assert that's equal to 4.

39

00:03:20.430  -->  00:03:22.450
So I'll give you one more example.

40

00:03:22.740  -->  00:03:24.650
We'll do a search equal.

41

00:03:24.650  -->  00:03:31.390
And let's go ahead and pass in our solution so well and we'll do for them for.

42

00:03:31.670  -->  00:03:35.730
And that should be asserted equal to the integer 8.

43

00:03:35.790  -->  00:03:41.730
After all those assert statements if none of them have an error that pops up and going to go ahead and

44

00:03:41.730  -->  00:03:45.780
print all test cases passed.

45

00:03:45.780  -->  00:03:50.780
Note that I'm using a print statement here not a print function because this is in Python too.

46

00:03:51.540  -->  00:03:56.160
OK so then what am going to do is just run the tests.

47

00:03:56.640  -->  00:04:01.210
So I'm going to go ahead and take a comma here.

48

00:04:01.260  -->  00:04:05.130
Run tests.

49

00:04:05.160  -->  00:04:14.760
I'm going to create a variable c and it's going to be an instance of solution first object and then

50

00:04:14.760  -->  00:04:17.480
I'm going to say See that test.

51

00:04:17.670  -->  00:04:23.760
And we note that t that method takes in a function called as well.

52

00:04:24.150  -->  00:04:26.300
So pasand the solution.

53

00:04:26.620  -->  00:04:28.630
And let's go ahead and make sure it works.

54

00:04:28.830  -->  00:04:31.200
So going to shift answer to run the cell.

55

00:04:31.260  -->  00:04:33.940
Note that all test cases haven't passed.

56

00:04:34.200  -->  00:04:37.620
Let's say XLE got the wrong solution function here.

57

00:04:37.800  -->  00:04:39.630
I said number one minus them too.

58

00:04:39.870  -->  00:04:43.760
Well what happened if I wasn't able to pass all the equal tests.

59

00:04:43.770  -->  00:04:49.440
If I do shift enter here I'll get an assertion error and we scroll all the way down you'll see that

60

00:04:49.440  -->  00:04:56.340
0 does not equal four which makes sense because it said two minus two equals zero and the assert equal

61

00:04:56.340  -->  00:04:56.960
function.

62

00:04:56.970  -->  00:05:01.790
Got an assertion there due to that 0 not be equal to that four.

63

00:05:01.800  -->  00:05:02.400
All right.

64

00:05:02.580  -->  00:05:06.250
So that's the basic structure for all the interview notebooks.

65

00:05:06.360  -->  00:05:09.370
I encourage you to go ahead and create your own interview problems.

66

00:05:09.380  -->  00:05:11.180
You can go in and send them to your friends.

67

00:05:11.250  -->  00:05:16.680
But this note book system is really nice because you have the cell to go ahead and test your solutions

68

00:05:16.690  -->  00:05:16.900
.

69

00:05:17.160  -->  00:05:21.790
But these cells usually won't give away how to actually do that problem.

70

00:05:22.050  -->  00:05:29.130
In certain cases such as implementing a data structure or sorting algorithm the assert equal solutions

71

00:05:29.130  -->  00:05:34.560
don't really make sense or having a test cell in general would just give you the solution to the problem

72

00:05:34.570  -->  00:05:36.270
due to the way it's asked.

73

00:05:36.300  -->  00:05:41.900
So there will be a note in the interview notebooks each individually telling you if that's the case

74

00:05:42.620  -->  00:05:48.900
but there will always be a link to a full solution for every interview problem as well as a video explanation

75

00:05:48.900  -->  00:05:51.330
for that particular solution.

76

00:05:51.330  -->  00:05:56.400
All right but that being said we should have now is a full understanding of how the interview notebooks

77

00:05:56.400  -->  00:05:57.540
themselves work.

78

00:05:57.600  -->  00:06:01.710
He should also be able to make your own interview notebooks in case you ever want to.

79

00:06:01.710  -->  00:06:02.200
All right.

80

00:06:02.580  -->  00:06:04.910
Thanks everyone and I'll see you at the next lecture
