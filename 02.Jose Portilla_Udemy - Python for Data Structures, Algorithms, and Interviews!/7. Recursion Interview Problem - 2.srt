1

00:00:01,500  -->  00:00:07,680
Hello everyone and welcome to the second recursion interview problem and this problem you'll have to

2

00:00:07,860  -->  00:00:10,790
find all the permutations of a string.

3

00:00:10,800  -->  00:00:15,770
So in this video lecture we're going to quickly go over what the problem is asking for where your solutions

4

00:00:15,770  -->  00:00:20,820
should look like what the test cases look like and then I'll let you get on with tackling problem on

5

00:00:20,820  -->  00:00:21,930
your own.

6

00:00:21,930  -->  00:00:24,310
So it's going to look at the problem statement.

7

00:00:25,080  -->  00:00:31,560
So given a string write a function that uses recursion to output a list of all possible permutations

8

00:00:31,560  -->  00:00:32,830
of that string.

9

00:00:32,850  -->  00:00:39,330
So for example if your string sequel's just the letters ABC you should return a list that looks like

10

00:00:39,330  -->  00:00:45,320
this ABC ace ABC BBC etc. all the various permutations.

11

00:00:45,330  -->  00:00:51,700
Now what I want you to know here if a character's repeated treat each occurrence as distinct.

12

00:00:51,720  -->  00:01:00,060
So for example if your input is X X X you should return a list with six versions of x x x.

13

00:01:00,120  -->  00:01:07,890
So don't worry about taking care of duplicate letters here just all the permutations as if each character

14

00:01:07,890  -->  00:01:08,900
was distinct.

15

00:01:08,940  -->  00:01:11,420
That should make your job a lot easier.

16

00:01:12,000  -->  00:01:16,130
All right so you're going to do is fill out your solution below again.

17

00:01:16,140  -->  00:01:20,790
Think about the base case what recursive call you're going to have to make in order for this to all

18

00:01:20,790  -->  00:01:22,310
work out.

19

00:01:22,470  -->  00:01:25,250
After that you can test your solution.

20

00:01:25,270  -->  00:01:27,840
You'll run the cell to test your solution.

21

00:01:27,870  -->  00:01:30,420
There's a couple of basic test cases here.

22

00:01:30,900  -->  00:01:36,360
And if you pass all of them Ill say all test cases passed after you run that cell after you fill out

23

00:01:36,360  -->  00:01:38,190
the permute function.

24

00:01:38,190  -->  00:01:38,920
All right.

25

00:01:39,270  -->  00:01:40,920
So best of luck.

26

00:01:40,950  -->  00:01:42,340
This one's a little tricky.

27

00:01:42,570  -->  00:01:46,280
There's a few different ways that you could solve that using recursion.

28

00:01:46,380  -->  00:01:50,820
So don't expect your code to look exactly like the solution in the next lecture.

29

00:01:50,820  -->  00:01:53,790
We're going to do is go ahead and walk through the solution.

30

00:01:53,880  -->  00:01:59,250
Make sure you've attempted it first before seeing the next lecture video.

31

00:01:59,250  -->  00:02:00,110
All right.

32

00:02:00,180  -->  00:02:02,860
Best of luck everyone and I'll see you at the next lecture
