WEBVTT
1

00:00:00.000  -->  00:00:07.350
Hello and welcome back to the course of

2

00:00:07.350  -->  00:00:09.450
R programming. I hope you had a chance to

3

00:00:09.450  -->  00:00:11.580
practice what we talked about last time

4

00:00:11.580  -->  00:00:14.429
and specifically basic operations in a

5

00:00:14.429  -->  00:00:16.920
data frame and today we're talking

6

00:00:16.920  -->  00:00:19.560
about filtering data frames.

7

00:00:19.560  -->  00:00:21.510
Alright, let's get started I'm going to

8

00:00:21.510  -->  00:00:23.609
copy this and create a new section in

9

00:00:23.609  -->  00:00:25.769
R code and this one we will call

10

00:00:25.769  -->  00:00:30.599
filtering data frames. Alright, in the

11

00:00:30.599  -->  00:00:32.730
previous section, we mostly talked about

12

00:00:32.730  -->  00:00:34.800
working with columns right? Except for at

13

00:00:34.800  -->  00:00:36.719
the very start where we talked about the

14

00:00:36.719  -->  00:00:38.340
square brackets but then we were mostly

15

00:00:38.340  -->  00:00:40.620
working with columns, column multiply column,

16

00:00:40.620  -->  00:00:44.460
create column then recycling of vectors

17

00:00:44.460  -->  00:00:47.190
for columns or into columns and then

18

00:00:47.190  -->  00:00:50.340
also deleting columns. But filtering is

19

00:00:50.340  -->  00:00:53.460
actually more about rows right? So like

20

00:00:53.460  -->  00:00:55.260
if you think about it in excel terms

21

00:00:55.260  -->  00:00:58.680
right? You've got a table and you want to

22

00:00:58.680  -->  00:01:00.840
look at only specific rows then you

23

00:01:00.840  -->  00:01:02.399
switch the filters on the columns are

24

00:01:02.399  -->  00:01:04.110
still in place but some rows are hidden,

25

00:01:04.110  -->  00:01:07.260
some rose become visible or you want to

26

00:01:07.260  -->  00:01:10.590
you know to switch off, like to

27

00:01:10.590  -->  00:01:11.939
delete some rows, so that's also

28

00:01:11.939  -->  00:01:15.210
filtering and so on. So working with rows,

29

00:01:15.210  -->  00:01:18.570
how do we do it in R? Well the first

30

00:01:18.570  -->  00:01:20.820
thing that I'm going to show you is a

31

00:01:20.820  -->  00:01:23.520
pretty cool feature or a cool approach

32

00:01:23.520  -->  00:01:27.509
is let's say I want to look at stats so

33

00:01:27.509  -->  00:01:29.759
let's start with head stats. This is

34

00:01:29.759  -->  00:01:31.979
getting a very used becoming a very used

35

00:01:31.979  -->  00:01:33.810
function head stats because we're using

36

00:01:33.810  -->  00:01:35.549
it every tutorial. I'm sure you'll remember

37

00:01:35.549  -->  00:01:39.270
it after this section, so head stats and

38

00:01:39.270  -->  00:01:40.560
let's say we want to look at internet

39

00:01:40.560  -->  00:01:42.840
users. Let's say we want to look at

40

00:01:42.840  -->  00:01:46.619
internet users and so we would say stats.

41

00:01:46.619  -->  00:01:49.590
Dollar sign internet users right? So that's

42

00:01:49.590  -->  00:01:52.020
that column. Now let's say we want to find

43

00:01:52.020  -->  00:01:55.409
out which internet users or which

44

00:01:55.409  -->  00:01:57.810
countries have less than two internet

45

00:01:57.810  -->  00:02:00.299
users less than 2% of people using

46

00:02:00.299  -->  00:02:02.759
internet. We would say stats internet users

47

00:02:02.759  -->  00:02:04.860
remember this vector and then we're

48

00:02:04.860  -->  00:02:07.649
comparing it with the number 2 and what

49

00:02:07.649  -->  00:02:09.420
that will give us is it will compare

50

00:02:09.420  -->  00:02:11.670
every single value in this vector with

51

00:02:11.670  -->  00:02:13.569
the number two so let's run that

52

00:02:13.569  -->  00:02:16.030
you'll see that we've got this vector

53

00:02:16.030  -->  00:02:18.879
of false, false, false and a true here false,

54

00:02:18.879  -->  00:02:20.560
false, false, false, false and so on and so

55

00:02:20.560  -->  00:02:22.599
on there's another true, there's another

56

00:02:22.599  -->  00:02:24.189
true so every time it comes across the

57

00:02:24.189  -->  00:02:25.689
value that's less than 2, it'll put a

58

00:02:25.689  -->  00:02:27.760
true, otherwise it will be false.

59

00:02:27.760  -->  00:02:31.030
Ok so in return we've got a vector and

60

00:02:31.030  -->  00:02:32.590
what can we do with this vector now?

61

00:02:32.590  -->  00:02:35.019
Well we can put this vector into an

62

00:02:35.019  -->  00:02:37.209
object and let's call that object filter.

63

00:02:37.209  -->  00:02:39.909
If we run this, now we've got an object

64

00:02:39.909  -->  00:02:42.280
filter which looks exactly like that.

65

00:02:42.280  -->  00:02:44.530
What can we do with this filter? Well

66

00:02:44.530  -->  00:02:47.260
what we can do is we can go to stats and

67

00:02:47.260  -->  00:02:48.669
then in square brackets and this is the

68

00:02:48.669  -->  00:02:50.829
cool features I was talking about. In stats, you

69

00:02:50.829  -->  00:02:53.769
can say in the rows, you know how we

70

00:02:53.769  -->  00:02:56.680
use say one to ten right or one to a

71

00:02:56.680  -->  00:02:58.419
hundred and we want to see the first

72

00:02:58.419  -->  00:02:59.290
hundred rows.

73

00:02:59.290  -->  00:03:00.459
Well now what we're going to do is

74

00:03:00.459  -->  00:03:02.109
instead of saying one to hundred, we're going to say

75

00:03:02.109  -->  00:03:05.949
filter and that will pass this important

76

00:03:05.949  -->  00:03:07.870
part that we have to understand that

77

00:03:07.870  -->  00:03:10.840
stats will take a vector which is

78

00:03:10.840  -->  00:03:13.090
exactly the same length as the data

79

00:03:13.090  -->  00:03:15.010
frame but this vector is a true-false

80

00:03:15.010  -->  00:03:16.359
vector. So every time that it will come across

81

00:03:16.359  -->  00:03:18.340
the true, it will display that role

82

00:03:18.340  -->  00:03:19.989
every time it comes across the false, it

83

00:03:19.989  -->  00:03:22.930
won't display the row. So if you run that, you'll see

84

00:03:22.930  -->  00:03:25.479
that we've got only selected rows and

85

00:03:25.479  -->  00:03:27.939
they all do indeed have less than two

86

00:03:27.939  -->  00:03:30.970
internet users so these countries they

87

00:03:30.970  -->  00:03:32.650
don't have internet is not that

88

00:03:32.650  -->  00:03:36.489
widespread and therefore only a couple

89

00:03:36.489  -->  00:03:39.040
like one around one percentage of the

90

00:03:39.040  -->  00:03:41.349
population actually uses the internet

91

00:03:41.349  -->  00:03:43.299
there or has access to the internet and

92

00:03:43.299  -->  00:03:45.280
how did we get that? Once again, we have a

93

00:03:45.280  -->  00:03:48.639
vector with true false values and this

94

00:03:48.639  -->  00:03:51.340
data frame the way we're calling it or

95

00:03:51.340  -->  00:03:53.829
the way we're accessing it every time it

96

00:03:53.829  -->  00:03:55.599
comes across the true value it will

97

00:03:55.599  -->  00:03:56.979
display that row, every time it across

98

00:03:56.979  -->  00:03:59.049
comes across a false value it won't

99

00:03:59.049  -->  00:04:01.030
display that row.

100

00:04:01.030  -->  00:04:04.329
Ok that's filtering, so that's a very

101

00:04:04.329  -->  00:04:08.229
neat feature to remember and use and now

102

00:04:08.229  -->  00:04:09.609
we're going to actually not just use it,

103

00:04:09.609  -->  00:04:11.289
we're going to abuse it.

104

00:04:11.289  -->  00:04:15.009
So let's start doing that, stats and now

105

00:04:15.009  -->  00:04:16.989
what we're going to do is let's say we

106

00:04:16.989  -->  00:04:18.489
want to look at countries with

107

00:04:18.489  -->  00:04:21.190
birth rate over 40, remember we looked

108

00:04:21.190  -->  00:04:23.380
in the STR from from the STR function,

109

00:04:23.380  -->  00:04:25.180
we know that it's never over 50 but

110

00:04:25.180  -->  00:04:26.800
let's look at the country with over 40,

111

00:04:26.800  -->  00:04:29.260
how would we do that? Well we would use

112

00:04:29.260  -->  00:04:30.699
similar approach but this time we're not

113

00:04:30.699  -->  00:04:31.779
even going to create the filter we're

114

00:04:31.779  -->  00:04:34.449
going to just take this right and we're

115

00:04:34.449  -->  00:04:36.370
going to put a comma and we're going to

116

00:04:36.370  -->  00:04:38.800
instead of doing this intermediary step

117

00:04:38.800  -->  00:04:41.979
we'll just put it right in here and now

118

00:04:41.979  -->  00:04:44.199
we'll just change condition greater than

119

00:04:44.199  -->  00:04:47.529
40 and not internet users we want a

120

00:04:47.529  -->  00:04:49.630
different column. What's the column that we want,

121

00:04:49.630  -->  00:04:52.630
birth right birth right there we go.

122

00:04:52.630  -->  00:04:55.330
So if I run this now, I will get all the

123

00:04:55.330  -->  00:04:57.909
countries that have a birth rate over 40

124

00:04:57.909  -->  00:05:00.849
that means per thousand people, 40 people at

125

00:05:00.849  -->  00:05:03.310
least 40 people are born every year.

126

00:05:03.310  -->  00:05:05.589
Well basically that those countries

127

00:05:05.589  -->  00:05:07.870
their population is growing very quickly,

128

00:05:07.870  -->  00:05:09.880
there we go, that was that easy and that

129

00:05:09.880  -->  00:05:12.550
is thanks to the new approach that we

130

00:05:12.550  -->  00:05:14.409
learned that not always you have to just

131

00:05:14.409  -->  00:05:16.599
pass the numbers that you want to

132

00:05:16.599  -->  00:05:18.099
display the row numbers but

133

00:05:18.099  -->  00:05:20.710
you can actually supply a true/false

134

00:05:20.710  -->  00:05:23.229
vector and it will tell you the data

135

00:05:23.229  -->  00:05:25.270
frame will return the rows that are

136

00:05:25.270  -->  00:05:28.270
associated with the true values in your

137

00:05:28.270  -->  00:05:29.380
vector.

138

00:05:29.380  -->  00:05:31.659
Alright, so now what we're going to do is

139

00:05:31.659  -->  00:05:33.699
we're going to make this condition even

140

00:05:33.699  -->  00:05:35.020
more interesting. We're going to say,

141

00:05:35.020  -->  00:05:38.409
where countries with birth rate over 40

142

00:05:38.409  -->  00:05:40.330
but now out of these we want to like to

143

00:05:40.330  -->  00:05:43.210
only the countries with internet users

144

00:05:43.210  -->  00:05:46.419
under two. So we will add the and and

145

00:05:46.419  -->  00:05:48.729
remember it's a single and unlike some

146

00:05:48.729  -->  00:05:51.610
other programming languages, stats dollar

147

00:05:51.610  -->  00:05:55.120
sign and then internet users less than

148

00:05:55.120  -->  00:05:58.120
two right? So now these both of these

149

00:05:58.120  -->  00:06:00.729
conditions have to be true for the road

150

00:06:00.729  -->  00:06:03.219
to show up, if we run that now we've got

151

00:06:03.219  -->  00:06:06.729
just three rows 1,2,3 countries, all of

152

00:06:06.729  -->  00:06:08.740
them have birth rate over 40 and

153

00:06:08.740  -->  00:06:12.070
internet users under two. Awesome,

154

00:06:12.070  -->  00:06:13.599
what else can we do? Well let's filter

155

00:06:13.599  -->  00:06:15.759
by categorical variable, one of these

156

00:06:15.759  -->  00:06:17.710
let's look at income group. Well actually

157

00:06:17.710  -->  00:06:20.139
we only have one proper categorical

158

00:06:20.139  -->  00:06:21.580
variable these are just the country

159

00:06:21.580  -->  00:06:23.830
names and so on. So let's filter by

160

00:06:23.830  -->  00:06:26.560
income group and now we will say stats

161

00:06:26.560  -->  00:06:29.800
dollar sign income group equals so

162

00:06:29.800  -->  00:06:32.380
double equals let's remember that, and

163

00:06:32.380  -->  00:06:34.360
let's say we want to look at all the

164

00:06:34.360  -->  00:06:37.539
high-income countries and don't forget

165

00:06:37.539  -->  00:06:39.039
the comma comma nothing.

166

00:06:39.039  -->  00:06:39.840
Alright, let's run

167

00:06:39.840  -->  00:06:43.020
that. Okay see I made a mistake. I made a

168

00:06:43.020  -->  00:06:45.449
mistake in my code, that's why I got an

169

00:06:45.449  -->  00:06:48.990
empty result so high income, no incomes.

170

00:06:48.990  -->  00:06:52.020
If we run that, there we go so we can see

171

00:06:52.020  -->  00:06:53.729
all the countries with high income you

172

00:06:53.729  -->  00:06:55.350
can see on the right they're all they're

173

00:06:55.350  -->  00:06:56.699
all high income.

174

00:06:56.699  -->  00:07:00.240
Ok that's good and so we know about

175

00:07:00.240  -->  00:07:01.530
factors, we've already talked about

176

00:07:01.530  -->  00:07:02.820
factors if you want to check a different

177

00:07:02.820  -->  00:07:05.790
one then you can always use levels right

178

00:07:05.790  -->  00:07:08.699
and stats income group to find out what

179

00:07:08.699  -->  00:07:11.550
the factors are. If you want to try out a

180

00:07:11.550  -->  00:07:13.560
different one and then you can try lower

181

00:07:13.560  -->  00:07:15.389
middle-income just out of curiosity and

182

00:07:15.389  -->  00:07:19.169
or just to experiment and the other

183

00:07:19.169  -->  00:07:21.210
thing that I wanted to do is I wanted to

184

00:07:21.210  -->  00:07:23.040
give you an exercise, so it's kind of like

185

00:07:23.040  -->  00:07:25.380
a brain teaser and will solve it right

186

00:07:25.380  -->  00:07:28.139
away here as well. So try finding can you

187

00:07:28.139  -->  00:07:30.540
find out all of the information from

188

00:07:30.540  -->  00:07:33.870
this data frame about Malta? So Malta is a

189

00:07:33.870  -->  00:07:37.350
country, try find this information, so use

190

00:07:37.350  -->  00:07:39.030
what you've learned here. It's going to be a

191

00:07:39.030  -->  00:07:40.680
bit different you might you need to make

192

00:07:40.680  -->  00:07:44.190
a little change and can you find please

193

00:07:44.190  -->  00:07:45.510
the information from Malta, so pause this

194

00:07:45.510  -->  00:07:50.130
video and give it a go and in 321

195

00:07:50.130  -->  00:07:51.600
we're going to solve it together. Alright,

196

00:07:51.600  -->  00:07:53.789
so the way to solve it is

197

00:07:53.789  -->  00:07:57.060
stats and then here you want to filter

198

00:07:57.060  -->  00:07:59.789
by country name right? Country name

199

00:07:59.789  -->  00:08:03.060
equals Malta common nothing, if I run that,

200

00:08:03.060  -->  00:08:05.580
I get that one row where country name

201

00:08:05.580  -->  00:08:07.830
equals Malta. So they have a

202

00:08:07.830  -->  00:08:11.190
birthright of 9.5 introduces 68.9 then

203

00:08:11.190  -->  00:08:13.979
there in the high income group. There we

204

00:08:13.979  -->  00:08:16.800
go, that's how you filter data frames, I

205

00:08:16.800  -->  00:08:18.720
hope this information was useful and

206

00:08:18.720  -->  00:08:20.940
hopefully not too complicated.

207

00:08:20.940  -->  00:08:22.500
There is actually nothing complicated

208

00:08:22.500  -->  00:08:24.090
about it. It's just we introduced a new

209

00:08:24.090  -->  00:08:27.090
concept where you can pause a vector of

210

00:08:27.090  -->  00:08:29.880
true/false values into your data

211

00:08:29.880  -->  00:08:32.250
frame to find the correct values. I know

212

00:08:32.250  -->  00:08:34.890
like here it looks a bit complicated, you

213

00:08:34.890  -->  00:08:36.360
you're calling a data frame and then

214

00:08:36.360  -->  00:08:37.740
you're calling it again but when you

215

00:08:37.740  -->  00:08:39.390
think of it in these terms,

216

00:08:39.390  -->  00:08:41.729
that first creating the vector and then

217

00:08:41.729  -->  00:08:43.260
you're passing it into the data frame.

218

00:08:43.260  -->  00:08:45.900
It's all pretty simple but this is a

219

00:08:45.900  -->  00:08:48.480
very powerful approach and you will be

220

00:08:48.480  -->  00:08:50.459
using it a lot in R, so it was good

221

00:08:50.459  -->  00:08:53.010
that we covered it off and now we're

222

00:08:53.010  -->  00:08:53.649
going to move

223

00:08:53.649  -->  00:08:55.629
on to the next tutorial. I look forward

224

00:08:55.629  -->  00:08:57.040
to seeing you there and until next time,

225

00:08:57.040  -->  00:09:08.909
happy coding.
