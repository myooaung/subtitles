WEBVTT
1

00:00:00.000  -->  00:00:07.319
Hello and welcome back to the course on

2

00:00:07.319  -->  00:00:09.030
R programming. Today we're going to

3

00:00:09.030  -->  00:00:11.130
take a short break from learning a new

4

00:00:11.130  -->  00:00:14.549
element of R coding and we'll take some

5

00:00:14.549  -->  00:00:17.789
time to learn how to use the console so

6

00:00:17.789  -->  00:00:19.230
it's going to be a quick tutorial but

7

00:00:19.230  -->  00:00:21.119
hopefully it's going to be quite an

8

00:00:21.119  -->  00:00:24.029
insightful one. So this is our studio and

9

00:00:24.029  -->  00:00:26.880
so far we've been used to utilizing this

10

00:00:26.880  -->  00:00:29.789
area to write out code and then executed

11

00:00:29.789  -->  00:00:31.410
whether it's line-by-line or several

12

00:00:31.410  -->  00:00:33.600
lines at a time and then all of our

13

00:00:33.600  -->  00:00:36.360
variables were here and some elements

14

00:00:36.360  -->  00:00:39.629
would be illustrated over here, so let's

15

00:00:39.629  -->  00:00:41.399
have a look at an example. Let's say I

16

00:00:41.399  -->  00:00:43.410
want to create a variable which is X and

17

00:00:43.410  -->  00:00:45.809
I want to place the value 5 into that

18

00:00:45.809  -->  00:00:48.270
variable. If I execute this line, what you

19

00:00:48.270  -->  00:00:50.820
can see is this code has been copied

20

00:00:50.820  -->  00:00:53.579
into the console. It has been run and a

21

00:00:53.579  -->  00:00:56.370
variable has appeared here with value 5. Now if you

22

00:00:56.370  -->  00:00:59.039
want to print x, I just type in x and

23

00:00:59.039  -->  00:01:02.039
execute this line and there go, this code

24

00:01:02.039  -->  00:01:04.589
once again has been copied here and the

25

00:01:04.589  -->  00:01:07.650
value has been printed out. So naturally

26

00:01:07.650  -->  00:01:09.479
you're probably asking this question, why

27

00:01:09.479  -->  00:01:12.030
are all the lines always copy from here

28

00:01:12.030  -->  00:01:13.110
to here?

29

00:01:13.110  -->  00:01:15.420
Well the reason for that is that our

30

00:01:15.420  -->  00:01:18.240
studio is an environment that has been

31

00:01:18.240  -->  00:01:21.450
created to make your work in R more

32

00:01:21.450  -->  00:01:24.630
pleasurable and also aesthetically more

33

00:01:24.630  -->  00:01:26.729
pleasing and also so that you can save

34

00:01:26.729  -->  00:01:29.070
things that basically more efficient

35

00:01:29.070  -->  00:01:32.250
than just working in R itself. So as

36

00:01:32.250  -->  00:01:33.659
you remember, when we were installing R.

37

00:01:33.659  -->  00:01:35.490
We installed R and then we installed

38

00:01:35.490  -->  00:01:37.229
R studio on top of that. So that means

39

00:01:37.229  -->  00:01:39.630
that you could hypothetically use R by

40

00:01:39.630  -->  00:01:41.670
itself but R studio and actually many

41

00:01:41.670  -->  00:01:43.860
people do that and there are other

42

00:01:43.860  -->  00:01:45.840
environments that allow you to use R.

43

00:01:45.840  -->  00:01:47.939
Our city is just one of them and what

44

00:01:47.939  -->  00:01:49.950
R studio does is it creates this area

45

00:01:49.950  -->  00:01:51.540
over here where you can write your

46

00:01:51.540  -->  00:01:53.280
code, you can save your files and then

47

00:01:53.280  -->  00:01:55.020
everything you're right and executed

48

00:01:55.020  -->  00:01:57.030
actually copies into the console and so

49

00:01:57.030  -->  00:01:59.520
what that means is that you can write

50

00:01:59.520  -->  00:02:02.250
code in the console by itself avoiding

51

00:02:02.250  -->  00:02:04.020
this area over here. So let's have a look

52

00:02:04.020  -->  00:02:05.430
at that, let's say I want to create a new

53

00:02:05.430  -->  00:02:08.310
variable which is Y and I want to put

54

00:02:08.310  -->  00:02:10.319
the value 4 into that variable. So I'll

55

00:02:10.319  -->  00:02:11.910
just type it right here in the console

56

00:02:11.910  -->  00:02:13.620
and I'll execute this

57

00:02:13.620  -->  00:02:15.659
line. As you can see the variable has

58

00:02:15.659  -->  00:02:18.120
appeared, we've got a variable Y with the

59

00:02:18.120  -->  00:02:20.940
value of 4. This line is here just like

60

00:02:20.940  -->  00:02:23.519
with the x variable. The only difference is that

61

00:02:23.519  -->  00:02:25.709
we don't have anything relating to Y

62

00:02:25.709  -->  00:02:28.680
at all in this area over here. That's

63

00:02:28.680  -->  00:02:30.629
quite interesting. Now let's try print

64

00:02:30.629  -->  00:02:33.599
out, to the y variable that let me print

65

00:02:33.599  -->  00:02:36.540
Y execute this line. There you go, it we

66

00:02:36.540  -->  00:02:38.849
can see that Y is equal to four so

67

00:02:38.849  -->  00:02:41.159
basically you could type up all your

68

00:02:41.159  -->  00:02:44.190
code here and avoid this part and you

69

00:02:44.190  -->  00:02:45.329
would get the same result.

70

00:02:45.329  -->  00:02:47.099
The only thing is that, it won't be

71

00:02:47.099  -->  00:02:49.410
reproducible so you wouldn't be able to

72

00:02:49.410  -->  00:02:51.989
save your code like we do here. So if we

73

00:02:51.989  -->  00:02:53.670
want to save a file we just click here

74

00:02:53.670  -->  00:02:55.799
and we can save our file and then we

75

00:02:55.799  -->  00:02:57.180
can load it later and we'll have that

76

00:02:57.180  -->  00:02:59.250
same code saved. If you type it up in the

77

00:02:59.250  -->  00:03:02.190
console then it isn't that convenient

78

00:03:02.190  -->  00:03:04.650
but at the same time what this

79

00:03:04.650  -->  00:03:06.989
illustrates is it illustrates how R

80

00:03:06.989  -->  00:03:08.879
studio works and what exactly is

81

00:03:08.879  -->  00:03:10.650
happening. So it took us quite a few

82

00:03:10.650  -->  00:03:12.599
tutorials to get here I know but and

83

00:03:12.599  -->  00:03:14.370
some courses out there will throw you

84

00:03:14.370  -->  00:03:15.870
right away into the deep end they'll

85

00:03:15.870  -->  00:03:17.340
explain all this about the console but I

86

00:03:17.340  -->  00:03:19.530
think this is a great approach that we

87

00:03:19.530  -->  00:03:21.630
now know how to use R studio in

88

00:03:21.630  -->  00:03:23.970
general and now we know this additional

89

00:03:23.970  -->  00:03:26.400
thing about the console. So basically, you

90

00:03:26.400  -->  00:03:28.590
can think of R studio as a shell on

91

00:03:28.590  -->  00:03:31.260
top of R and all it does is it takes

92

00:03:31.260  -->  00:03:33.599
all of this code that you create here

93

00:03:33.599  -->  00:03:36.329
and it copies it into the console and

94

00:03:36.329  -->  00:03:38.639
then it runs it for you as you specify

95

00:03:38.639  -->  00:03:40.560
the lines that should be run.

96

00:03:40.560  -->  00:03:42.269
So there we go, that's how you use the

97

00:03:42.269  -->  00:03:44.370
console so just be aware of that you can

98

00:03:44.370  -->  00:03:46.709
type any code here and this brings us to

99

00:03:46.709  -->  00:03:48.359
the end of today's tutorial. I look

100

00:03:48.359  -->  00:03:49.440
forward to seeing you next time and

101

00:03:49.440  -->  00:04:01.239
until then, happy coding.
