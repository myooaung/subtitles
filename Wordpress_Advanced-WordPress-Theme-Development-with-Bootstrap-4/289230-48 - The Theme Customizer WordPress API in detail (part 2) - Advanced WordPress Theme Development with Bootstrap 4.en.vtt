WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.520
Hey guys, how's it going?

00:00:02.520 --> 00:00:07.035
I'm ready to start creating your first years in the WordPress theme customizer.

00:00:07.035 --> 00:00:08.175
I hope so.

00:00:08.175 --> 00:00:12.045
Because today we're gonna learn a lot of new and cool things.

00:00:12.045 --> 00:00:12.675
Great.

00:00:12.675 --> 00:00:18.030
In this lesson, you see that the customizer tool is very powerful and versatile.

00:00:18.030 --> 00:00:24.240
Usually my students say that these are the most interesting lessons of the whole course.

00:00:24.240 --> 00:00:27.910
So without much delay, let's get started.

00:00:27.910 --> 00:00:32.825
The first few you're going to be building is this copyright area here.

00:00:32.825 --> 00:00:36.575
You can see that it is a simple text field.

00:00:36.575 --> 00:00:37.955
To tell the truth.

00:00:37.955 --> 00:00:39.350
There is no great niche.

00:00:39.350 --> 00:00:41.420
You make it a customizable field.

00:00:41.420 --> 00:00:45.050
We could simply create it directly in the code or create

00:00:45.050 --> 00:00:49.295
a very simple tax widget so that the user could edited.

00:00:49.295 --> 00:00:52.040
However, I'm going to teach you how to include it.

00:00:52.040 --> 00:00:55.114
Fear that theme customizer for learning purposes.

00:00:55.114 --> 00:00:57.470
As it is just a text field,

00:00:57.470 --> 00:01:00.470
it serves perfectly for you guys to understand how

00:01:00.470 --> 00:01:04.369
the customizer works in the list traumatic way possible.

00:01:04.369 --> 00:01:08.640
So began live as far up our Sublime Text.

00:01:09.190 --> 00:01:12.740
Create a folder called ink.

00:01:12.740 --> 00:01:19.325
And then that lets create a new file called customizer dot PHP.

00:01:19.325 --> 00:01:24.155
You'll be creating all the necessary fields within this fire, right?

00:01:24.155 --> 00:01:30.230
However, since this file is not automatically loaded, along with WordPress,

00:01:30.230 --> 00:01:37.175
we need to require it inside functions that PHP file that intern is automatically loaded.

00:01:37.175 --> 00:01:39.770
To do this has opened up the functions

00:01:39.770 --> 00:01:45.305
file and using a native PHP function called required.

00:01:45.305 --> 00:01:48.590
Let's include our newly created file.

00:01:48.590 --> 00:01:54.845
So we require now to get the path to the theme directory.

00:01:54.845 --> 00:02:03.390
We use Get template directory and concatenated with the file path.

00:02:06.760 --> 00:02:10.400
Remember to add this four slash n, okay?

00:02:10.400 --> 00:02:13.370
Otherwise the file will not be found.

00:02:13.370 --> 00:02:16.340
Okay, ready a safe.

00:02:16.340 --> 00:02:19.040
Now in Customizer that PHP,

00:02:19.040 --> 00:02:20.960
let's start creating something.

00:02:20.960 --> 00:02:21.980
First.

00:02:21.980 --> 00:02:23.990
I soap on the PHP tag,

00:02:23.990 --> 00:02:27.605
but we don't need the closing tag.

00:02:27.605 --> 00:02:30.035
Let's create a function.

00:02:30.035 --> 00:02:33.935
The name of dysfunction may be wherever name you want.

00:02:33.935 --> 00:02:40.625
In my case, I'll call this function learn WP underscore customizer.

00:02:40.625 --> 00:02:43.250
The name is not so important,

00:02:43.250 --> 00:02:47.090
but it's very important that you pass a parameter to it.

00:02:47.090 --> 00:02:50.780
And this parameter is a variable called WP.

00:02:50.780 --> 00:02:51.875
Customize.

00:02:51.875 --> 00:02:58.445
That simple. Well, let's recall some basic details that I mentioned in the last lesson.

00:02:58.445 --> 00:03:01.354
The theme customizer is made up of sections.

00:03:01.354 --> 00:03:03.440
And inside each section,

00:03:03.440 --> 00:03:06.080
we have one or more controls, right?

00:03:06.080 --> 00:03:08.930
There are also something called panel.

00:03:08.930 --> 00:03:10.775
And inside each panel,

00:03:10.775 --> 00:03:12.620
we can have several sections.

00:03:12.620 --> 00:03:15.665
But I will not use any example that uses painters

00:03:15.665 --> 00:03:18.665
because they made the code very complex.

00:03:18.665 --> 00:03:23.705
Let's just stick with the sections which can have different controls.

00:03:23.705 --> 00:03:27.440
So let's create in this order, a first section.

00:03:27.440 --> 00:03:29.450
Let's make a comment here,

00:03:29.450 --> 00:03:33.980
indicating that this section will be for copyright information.

00:03:33.980 --> 00:03:38.915
Pay close attention to the structure that I'm going to explain to you now.

00:03:38.915 --> 00:03:44.120
At first glance, it looks very complicated and it can confuse you a lot.

00:03:44.120 --> 00:03:46.085
But when he created it, once,

00:03:46.085 --> 00:03:47.870
it can be copied and pasted,

00:03:47.870 --> 00:03:52.745
so you can create the other sections and then the other controls, et cetera.

00:03:52.745 --> 00:03:58.280
The first thing you're gonna do is call a variable named WP customize.

00:03:58.280 --> 00:04:00.650
In fact, technically speaking,

00:04:00.650 --> 00:04:04.865
this variable is an object of the WP customized manager class

00:04:04.865 --> 00:04:09.950
that is responsible for handling the execution and control of the customizer itself.

00:04:09.950 --> 00:04:15.035
Let's add a small arrow with the minus and the greater than sign.

00:04:15.035 --> 00:04:19.760
And we're gonna pass here a function called add underscore section.

00:04:19.760 --> 00:04:23.660
Again, technically speaking, to be more precise,

00:04:23.660 --> 00:04:28.595
this glass object here is calling a class method name add section.

00:04:28.595 --> 00:04:30.890
You see still in this lesson,

00:04:30.890 --> 00:04:33.950
at each time, you'll be calling a different methods.

00:04:33.950 --> 00:04:35.900
When we are bearing sections,

00:04:35.900 --> 00:04:38.450
use add underscore section.

00:04:38.450 --> 00:04:43.820
But for controls, we're going to use an underscore control and so on.

00:04:43.820 --> 00:04:46.580
Okay, now inside that ad section,

00:04:46.580 --> 00:04:48.424
you're going to pass to information,

00:04:48.424 --> 00:04:51.815
first name, or an ID for that section,

00:04:51.815 --> 00:04:54.320
and then an array of arguments.

00:04:54.320 --> 00:05:00.380
First section ID, I always use a name that starts with sack, underscore something.

00:05:00.380 --> 00:05:05.630
You see in this lesson that this will help a lot not to get lost within the code.

00:05:05.630 --> 00:05:08.120
So I recommend that you do the same.

00:05:08.120 --> 00:05:09.695
Now to finish out,

00:05:09.695 --> 00:05:12.380
we create an array with a few arguments.

00:05:12.380 --> 00:05:15.150
Let's pass two arguments.

00:05:15.160 --> 00:05:18.960
The first one is going to be tidal.

00:05:19.210 --> 00:05:23.280
Let's type here copyright.

00:05:24.100 --> 00:05:28.680
And the second argument is going to be description.

00:05:32.320 --> 00:05:38.180
The value of the title argument will be inside the clickable object of this section.

00:05:38.180 --> 00:05:39.935
When you click on this object,

00:05:39.935 --> 00:05:43.290
you see the controllers that it has inside it.

00:05:43.290 --> 00:05:46.360
Now comes a detailed that I didn't explain in

00:05:46.360 --> 00:05:49.510
the last lesson because it wouldn't make much sense then.

00:05:49.510 --> 00:05:51.940
But now it makes more sense.

00:05:51.940 --> 00:05:56.890
Between this section and the controls we have the so-called settings.

00:05:56.890 --> 00:06:01.555
They are responsible for storing the data entered by the user in niche control,

00:06:01.555 --> 00:06:05.230
sending the data directly to the database without

00:06:05.230 --> 00:06:09.850
this settings is not possible to persist any data into the database.

00:06:09.850 --> 00:06:15.835
A curiosity WordPress saves all the data inside the WP options table.

00:06:15.835 --> 00:06:20.515
So if you need to check out how this customizer data is stored into the database,

00:06:20.515 --> 00:06:22.285
just take a look at this table.

00:06:22.285 --> 00:06:26.055
Basically the settings structure is very similar to a section.

00:06:26.055 --> 00:06:28.830
We start with the object.

00:06:30.010 --> 00:06:33.485
Now, instead of calling add section,

00:06:33.485 --> 00:06:37.170
we call another method, name add setting.

00:06:38.020 --> 00:06:41.044
Here we also pass two parameters.

00:06:41.044 --> 00:06:43.490
The first one is the name of the setting,

00:06:43.490 --> 00:06:47.540
and the second is an array of arguments for the name of

00:06:47.540 --> 00:06:52.800
the setting and January use something like set, underscore something.

00:06:54.370 --> 00:06:56.720
Now inside the array,

00:06:56.720 --> 00:06:59.420
we pass the following arguments.

00:06:59.420 --> 00:07:01.745
The first is type.

00:07:01.745 --> 00:07:06.035
This argument applies to the type of field that will be stored in the database.

00:07:06.035 --> 00:07:08.075
It can have two types of fields,

00:07:08.075 --> 00:07:14.165
option and theme modifications or simply think underscore mod,

00:07:14.165 --> 00:07:17.495
Japan, understand the difference between one and the other.

00:07:17.495 --> 00:07:21.020
Let's see what the WordPress documentation tells us.

00:07:21.020 --> 00:07:26.930
So here, the documentation states that there are two primary types of signings,

00:07:26.930 --> 00:07:29.630
options and theme modifications.

00:07:29.630 --> 00:07:33.680
Options are stored directly in the WP options table of

00:07:33.680 --> 00:07:38.600
the Wordpress database and apply it to the side regardless of the active theme.

00:07:38.600 --> 00:07:41.300
Themes should rarely, if ever,

00:07:41.300 --> 00:07:43.625
ad settings of the option type.

00:07:43.625 --> 00:07:46.250
Thing modes, on the other hand,

00:07:46.250 --> 00:07:48.575
are specific to a particular theme.

00:07:48.575 --> 00:07:50.315
So for the first argument,

00:07:50.315 --> 00:07:52.580
Let's set the value as thin mode.

00:07:52.580 --> 00:08:01.680
Okay? The second argument is the default value of the field we're saving.

00:08:02.140 --> 00:08:05.225
For example, less typing here,

00:08:05.225 --> 00:08:08.540
copyright x.

00:08:08.540 --> 00:08:12.530
All rights reserved.

00:08:12.530 --> 00:08:17.750
And the last one is sanitize callback.

00:08:17.750 --> 00:08:22.385
Well, this one's gonna take a little while to explain because it's more complex.

00:08:22.385 --> 00:08:23.510
Here's the thing.

00:08:23.510 --> 00:08:27.560
Since we're creating an interface between the user and the database,

00:08:27.560 --> 00:08:32.990
we should never trust the type of data that the user will provide. By mistake.

00:08:32.990 --> 00:08:36.530
They can end up in putting things they shouldn't.

00:08:36.530 --> 00:08:39.035
So has good developers we are,

00:08:39.035 --> 00:08:41.645
we have to always anticipate things

00:08:41.645 --> 00:08:46.070
validating as mighty as possible the data provided by the site owner.

00:08:46.070 --> 00:08:49.775
That's what this last field is for sanitize callback.

00:08:49.775 --> 00:08:53.569
It is nothing more than the name of a function used to clean,

00:08:53.569 --> 00:08:56.780
to sanitize the data entered by the user.

00:08:56.780 --> 00:08:59.345
For example, let's suppose the creative field for

00:08:59.345 --> 00:09:02.780
the user to input the valid ID of a category.

00:09:02.780 --> 00:09:07.700
You know that usually the ID has to be a numeric value, right?

00:09:07.700 --> 00:09:09.830
But the user may not know.

00:09:09.830 --> 00:09:14.255
And then try to input letters instead, I mean strings.

00:09:14.255 --> 00:09:15.845
And then my friend,

00:09:15.845 --> 00:09:20.044
if your farm allows users to input strings instead of numbers,

00:09:20.044 --> 00:09:22.535
depending on where this information is used,

00:09:22.535 --> 00:09:24.290
it can break the page.

00:09:24.290 --> 00:09:26.870
For this. You have to sanitize this information.

00:09:26.870 --> 00:09:32.060
Wordpress itself already has a series of filters that can be used for this.

00:09:32.060 --> 00:09:36.215
Filters that are defined globally and work anywhere in the code.

00:09:36.215 --> 00:09:38.030
And I'll make available to you

00:09:38.030 --> 00:09:42.200
a very interesting tutorial that shows most of these filters.

00:09:42.200 --> 00:09:43.775
This one here.

00:09:43.775 --> 00:09:46.760
By the way, the WordPress Theme Review Team also

00:09:46.760 --> 00:09:49.880
has some pretty cool reference material on GitHub,

00:09:49.880 --> 00:09:51.935
which is on this page here.

00:09:51.935 --> 00:09:55.880
Two hour also live the link for you to check when you need it.

00:09:55.880 --> 00:09:56.495
Okay.

00:09:56.495 --> 00:09:58.985
But let's focus on this first page.

00:09:58.985 --> 00:10:03.920
Here got examples of the filters used for most customizer fields.

00:10:03.920 --> 00:10:10.310
For example, which filter should I use to sanitizer field that it will accept a URL.

00:10:10.310 --> 00:10:15.575
Then it shows here this filter called Ask URL raw.

00:10:15.575 --> 00:10:21.245
And further down here you have a list of other features that can help you to,

00:10:21.245 --> 00:10:22.985
depending on your project.

00:10:22.985 --> 00:10:28.070
Most of them, or maybe all of them are functions belonging to the word processes,

00:10:28.070 --> 00:10:30.950
ONE source code from its library.

00:10:30.950 --> 00:10:35.989
You have to create your own functions to sanitize the data only in a few situations.

00:10:35.989 --> 00:10:39.575
For example, this first case that the author shows here,

00:10:39.575 --> 00:10:42.440
Radio bucks, probably WordPress doesn't have

00:10:42.440 --> 00:10:45.620
a filter capable of cleaning data from a radio bucks.

00:10:45.620 --> 00:10:48.920
So he created his own functions up here

00:10:48.920 --> 00:10:52.775
and then call it back here inside it's sanitized callback.

00:10:52.775 --> 00:10:57.515
We can use this material as a starting point whenever you need it, okay?

00:10:57.515 --> 00:11:01.385
Or as long as the author maintains the page, of course.

00:11:01.385 --> 00:11:04.730
In some cases you can find all the filters that

00:11:04.730 --> 00:11:07.955
are better or more suitable than those shown here.

00:11:07.955 --> 00:11:10.880
So in our case we have a simple text field.

00:11:10.880 --> 00:11:13.940
So let's see what is being suggested here.

00:11:13.940 --> 00:11:18.950
The idea is that we use this feature called WP Fyodor know HTML,

00:11:18.950 --> 00:11:21.545
CSS, complex name, right?

00:11:21.545 --> 00:11:27.365
But what it does is remove all the HTML from the text that the user will enter.

00:11:27.365 --> 00:11:29.645
However, there are other filters,

00:11:29.645 --> 00:11:35.855
such as S attribute or sanitized text field that you can use in this case to.

00:11:35.855 --> 00:11:40.650
So for example, you can pass the ask attribute future like this.

00:11:42.130 --> 00:11:46.490
The important thing is that you don't leave this field blank.

00:11:46.490 --> 00:11:47.225
Alright?

00:11:47.225 --> 00:11:49.145
But let's continue.

00:11:49.145 --> 00:11:53.915
You already have or section created and also our setting.

00:11:53.915 --> 00:11:56.330
But the control itself is missing.

00:11:56.330 --> 00:11:57.710
To speed things up,

00:11:57.710 --> 00:12:00.330
let's copy this structure here.

00:12:01.330 --> 00:12:06.215
I'm going to rename the methods jus ad control.

00:12:06.215 --> 00:12:13.445
And the name of the controller is going to be CTRL underscore copyright.

00:12:13.445 --> 00:12:17.585
I went to remove these arguments because they will be different.

00:12:17.585 --> 00:12:19.790
Let's get straight to the arguments there.

00:12:19.790 --> 00:12:25.740
The first one is label and apply pseudo name that appears before the feud.

00:12:26.980 --> 00:12:30.570
Then description.

00:12:34.240 --> 00:12:38.465
Now the last street deserve a little more attention.

00:12:38.465 --> 00:12:41.570
Section. Here we have to specify

00:12:41.570 --> 00:12:45.065
the name of the section to which this controller is connected to.

00:12:45.065 --> 00:12:49.829
And the name is sec underscore copyright.

00:12:50.350 --> 00:12:54.875
Settings here informed the name of the setting,

00:12:54.875 --> 00:12:57.755
they will save the value passed to this control.

00:12:57.755 --> 00:13:02.540
In our case, it is set underscore copyright.

00:13:02.540 --> 00:13:07.835
Did you notice why I identified the name of the session and settings will prefixes.

00:13:07.835 --> 00:13:12.410
It helps me very much not to get lost in the code.

00:13:12.410 --> 00:13:16.220
And now less argument type.

00:13:16.220 --> 00:13:20.105
This is the kind of control are feud We are building.

00:13:20.105 --> 00:13:23.420
In our case, it's going to be a tech side field.

00:13:23.420 --> 00:13:26.690
It could also be text area,

00:13:26.690 --> 00:13:33.390
checkbox, select, radio, etcetera.

00:13:34.060 --> 00:13:37.325
And now to finish out this file for today,

00:13:37.325 --> 00:13:43.235
we're going to add an action to low dysfunction with just creating an action.

00:13:43.235 --> 00:13:50.510
And this function needs to be triggered on a hook called customize underscore register.

00:13:50.510 --> 00:13:53.420
And here in the second parameter,

00:13:53.420 --> 00:13:55.535
we indicate the name of our function.

00:13:55.535 --> 00:13:59.490
Learn WP customizer.

00:14:02.200 --> 00:14:05.160
Ok, let's save.

00:14:06.310 --> 00:14:10.175
And we can already see if everything is working.

00:14:10.175 --> 00:14:13.380
Let's go to the customizer.

00:14:15.250 --> 00:14:18.860
Here we have the section that we just created.

00:14:18.860 --> 00:14:23.854
And within it, the field we created with its default value.

00:14:23.854 --> 00:14:34.820
Well, let's add another value to this field. Unsafe.

00:14:34.820 --> 00:14:40.670
At this point, the data re-entered has been already stored in the WP options table.

00:14:40.670 --> 00:14:43.265
So with every change I made in the field,

00:14:43.265 --> 00:14:45.890
the data will be updated in the database.

00:14:45.890 --> 00:14:49.640
There is only one way to fastest value from the database and

00:14:49.640 --> 00:14:53.570
show it on the screen as open up our footer.html file.

00:14:53.570 --> 00:14:58.085
Then let's delete this text here.

00:14:58.085 --> 00:15:00.905
And to call the field is very easy.

00:15:00.905 --> 00:15:05.360
Let's use the gap thing mod function and

00:15:05.360 --> 00:15:10.175
pass inside it the name of the setting that stores the value of the field.

00:15:10.175 --> 00:15:15.515
In our case, the settings called set underscore copyright.

00:15:15.515 --> 00:15:19.130
In order for the state value to be displayed on the screen,

00:15:19.130 --> 00:15:21.690
we only need to equity it out.

00:15:21.910 --> 00:15:24.695
Let's save this.

00:15:24.695 --> 00:15:27.950
And let's see if it's working. First.

00:15:27.950 --> 00:15:30.030
Let's check the thing.

00:15:36.700 --> 00:15:40.940
Excellent. Now let's

00:15:40.940 --> 00:15:46.469
reopen the theme customizer and let's make some changes.

00:15:51.370 --> 00:15:54.980
Look how interesting the viewing area is

00:15:54.980 --> 00:15:59.855
refreshing and the field value changes according to either type.

00:15:59.855 --> 00:16:05.270
Very cool. We have our first field working in Customizer.

00:16:05.270 --> 00:16:07.190
What a breakthrough.

00:16:07.190 --> 00:16:09.770
But it's still have a good way to go.

00:16:09.770 --> 00:16:11.150
We still have our logo,

00:16:11.150 --> 00:16:12.695
for example, and the map.

00:16:12.695 --> 00:16:17.030
Yes, the map. You see what we still got for the map.

00:16:17.030 --> 00:16:18.890
So that's all for now.

00:16:18.890 --> 00:16:22.170
And see you then in the next license.
