1
00:00:01,575 --> 00:00:07,777
Let's check out another useful feature available in SpEL, expression templating.

2
00:00:07,777 --> 00:00:13,011
Expression templates let us mix literal text with one or more evaluation blocks.

3
00:00:13,011 --> 00:00:16,693
Each evaluation block is delimited with a prefix and suffix,

4
00:00:16,693 --> 00:00:21,552
which would commonly be hash and open curly brace and a closing curly brace.

5
00:00:21,552 --> 00:00:24,941
This allows you to concatenate literal text with the

6
00:00:24,941 --> 00:00:28,088
results of evaluating expression blocks.

7
00:00:28,088 --> 00:00:30,689
If we take a closer look at how it's done,

8
00:00:30,689 --> 00:00:34,212
literal text can be mixed with one or more evaluation blocks that can

9
00:00:34,212 --> 00:00:38,447
appear in the middle like this surrounded by a prefix of hash open

10
00:00:38,447 --> 00:00:41,608
curly brace and a suffix of close curly brace.

11
00:00:41,608 --> 00:00:46,757
The expressions are written inside of the evaluation blocks like this.

12
00:00:46,757 --> 00:00:51,308
Here is how SpEL expression templating can be done in plain Java code.

13
00:00:51,308 --> 00:00:54,763
Notice that we pass a TemplateParserContext to the

14
00:00:54,763 --> 00:00:58,047
ParserContext parameter of the parseExpression method.

15
00:00:58,047 --> 00:01:01,856
The TemplateParserContext determines how the string expression should be

16
00:01:01,856 --> 00:01:06,252
parsed when it encounters the prefix and suffix characters.

17
00:01:06,252 --> 00:01:09,050
The default TemplateParserContext class The default

18
00:01:09,050 --> 00:01:10,259
TemplateParserContext class looks like this.

19
00:01:10,259 --> 00:01:11,819
Notice the default prefix and suffix.

20
00:01:11,819 --> 00:01:15,196
Note that you can define your own prefix and suffix

21
00:01:15,196 --> 00:01:21,000
characters as well if you want. But here, we'll just go with the default.

