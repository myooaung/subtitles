1
00:00:01,640 --> 00:00:07,540
Welcome to this module of core features of AWS CodeCommit. In this module,

2
00:00:07,540 --> 00:00:10,700
we are going to look at some of the key features off AWS

3
00:00:10,700 --> 00:00:15,540
CodeCommit and what makes it a serious contender for a

4
00:00:15,540 --> 00:00:19,540
cloud‑based source control system, among others.

5
00:00:19,540 --> 00:00:24,940
We will log into AWS Console and create an empty repository to begin with.

6
00:00:24,940 --> 00:00:30,400
Start adding files, make changes to them, create branch, perform

7
00:00:30,400 --> 00:00:36,010
pull request, and merge the changes back to master.

8
00:00:36,010 --> 00:00:40,890
Not every day you will be creating a repository from scratch.

9
00:00:40,890 --> 00:00:45,940
Most of the cases the project team will already be using one.

10
00:00:45,940 --> 00:00:50,540
We will see how to migrate an existing Git repository to AWS

11
00:00:50,540 --> 00:00:58,970
CodeCommit and create users and groups in AWS IAM and set up access

12
00:00:58,970 --> 00:01:03,440
control to the repository that we are creating.

13
00:01:03,440 --> 00:01:05,880
Before we jump into the specifics,

14
00:01:05,880 --> 00:01:09,750
let's get acquainted to two important characters who will

15
00:01:09,750 --> 00:01:13,240
play an active role in this course.

16
00:01:13,240 --> 00:01:19,840
First, let's meet John, he is a project manager for Globomantics,

17
00:01:19,840 --> 00:01:24,410
and he was instrumental in saving the infrastructure cost by

18
00:01:24,410 --> 00:01:29,540
successfully migrating their on‑premise infrastructure to AWS.

19
00:01:29,540 --> 00:01:38,040
Now, he is actively exploring other cost saving measures and cloud integration.

20
00:01:38,040 --> 00:01:42,040
Steve is a team lead who works for John.

21
00:01:42,040 --> 00:01:45,140
After a brainstorming session with Steve,

22
00:01:45,140 --> 00:01:50,980
he finds out that AWS also offers rich development tools that can be

23
00:01:50,980 --> 00:01:54,940
used for the development and delivery process.

24
00:01:54,940 --> 00:01:58,570
He is currently assigned with the task off migrating the current

25
00:01:58,570 --> 00:02:05,090
development tools to AWS. Let's take a look at the current development

26
00:02:05,090 --> 00:02:09,640
tools that are being used by Steve's team.

27
00:02:09,640 --> 00:02:16,520
They're using IntelliJ as their IDE and Git as a source control repository.

28
00:02:16,520 --> 00:02:26,150
Jenkins is used for building and deploying purposes. As part of migration

29
00:02:26,150 --> 00:02:31,950
process, Steve's proposal is to use AWS CloudNine as the IDE, AWS

30
00:02:31,950 --> 00:02:40,049
CodeCommit as a version control repository, and AWS CodeBuild and

31
00:02:40,049 --> 00:02:44,740
CodeDeploy for continuous integration and delivery.

32
00:02:44,740 --> 00:02:46,040
In this course,

33
00:02:46,040 --> 00:02:55,300
our focus will be on AWS CloudNine, AWS CodeCommit, and AWS CodeStar. AWS

34
00:02:55,300 --> 00:03:00,710
CodeStar is another service provided by AWS that offers predefined

35
00:03:00,710 --> 00:03:05,380
project template and a tool chain that enables the entire life cycle of

36
00:03:05,380 --> 00:03:12,790
software development from code creation to deployment. Let's look at some

37
00:03:12,790 --> 00:03:18,820
off the features of AWS CodeCommit. Since this is a cloud‑based service

38
00:03:18,820 --> 00:03:25,070
hosted by AWS, CodeCommit provides a highly available and secure

39
00:03:25,070 --> 00:03:27,240
repository.

40
00:03:27,240 --> 00:03:32,020
As your project gets bigger, CodeCommit can scale to accommodate your

41
00:03:32,020 --> 00:03:37,070
development needs and it can handle large number of files and maintain

42
00:03:37,070 --> 00:03:43,020
multiple revision histories. AWS CodeCommit has no restrictions on the

43
00:03:43,020 --> 00:03:47,040
size of the repositories or the size of the individual files that are

44
00:03:47,040 --> 00:03:49,740
stored in them.

45
00:03:49,740 --> 00:03:54,340
As you start making changes to your code and create pull requests,

46
00:03:54,340 --> 00:03:57,350
it lets you collaborate with other developers, perform code review, and

47
00:03:57,350 --> 00:04:07,110
merge the changes to the master branch. AWS CodeCommit is integrated

48
00:04:07,110 --> 00:04:11,540
very well with other AWS services, like AWS IAM, AWS CloudNine, AWS

49
00:04:11,540 --> 00:04:25,970
CodeStar, AWS SNS, and AWS Lambda, to name a few.

50
00:04:25,970 --> 00:04:31,040
And you will see that as we proceed further in this course how the

51
00:04:31,040 --> 00:04:38,840
integration happens. Since AWS CodeCommit supports all that Git commands that

52
00:04:38,840 --> 00:04:49,000
developers currently use, the learning curve is very small and you can use the tools that you are already familiar with.

