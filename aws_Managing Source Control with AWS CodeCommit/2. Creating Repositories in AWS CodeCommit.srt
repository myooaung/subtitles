1
00:00:02,040 --> 00:00:08,150
Let's see a quick demo as how to create a new repository in AWS

2
00:00:08,150 --> 00:00:13,240
CodeCommit. I just logged into AWS console.

3
00:00:13,240 --> 00:00:19,010
Let's search for AWS CodeCommit in the Find Services search bar and

4
00:00:19,010 --> 00:00:24,990
hit Enter. You will see the CodeCommit dashboard.

5
00:00:24,990 --> 00:00:29,640
You will have a button to create a depository.

6
00:00:29,640 --> 00:00:38,920
Click that. Give a name to the repository, a brief description. AWS allows

7
00:00:38,920 --> 00:00:47,470
customers to assign metadata to their AWS resources in the form of tags to

8
00:00:47,470 --> 00:00:53,070
uniquely identify a specific resource. Since this repository is going to be

9
00:00:53,070 --> 00:00:59,860
used by the front‑end developers, I'm going to mention application as the key

10
00:00:59,860 --> 00:01:08,080
and front end as value. CodeGuru is another service provided by AWS that you

11
00:01:08,080 --> 00:01:09,590
can optionally select,

12
00:01:09,590 --> 00:01:18,740
which lets you perform code review as you commit changes. Click Create.

13
00:01:18,740 --> 00:01:23,640
You'll see an alert message saying you cannot configure the SSH

14
00:01:23,640 --> 00:01:29,230
connections and HTTPS connections for a root account, and it is

15
00:01:29,230 --> 00:01:33,980
suggesting us to create an IAM user.

16
00:01:33,980 --> 00:01:39,543
Under Clone URL, you have the option to copy the HTTPS or

17
00:01:39,543 --> 00:01:47,220
SSH link to the repository. Let's go back and search for

18
00:01:47,220 --> 00:01:50,840
IAM service from the console.

19
00:01:50,840 --> 00:01:59,740
Under Users, click Add user, provide a name to the user.

20
00:01:59,740 --> 00:02:07,980
You can select if the user needs to have programmatic access and console access.

21
00:02:07,980 --> 00:02:10,970
If you want this user to access the management

22
00:02:10,970 --> 00:02:13,640
console, you can give both accesses.

23
00:02:13,640 --> 00:02:17,980
I'm going to choose both the options and select Custom

24
00:02:17,980 --> 00:02:22,770
password and uncheck Require password reset.

25
00:02:22,770 --> 00:02:27,650
In a typical project scenario,

26
00:02:27,650 --> 00:02:31,280
you may need to keep this on so that the user can change the

27
00:02:31,280 --> 00:02:38,720
password once he logs in. Click Permissions, choose Attach

28
00:02:38,720 --> 00:02:46,780
existing policies, and search for AWS CodeCommit. I'm going to

29
00:02:46,780 --> 00:02:51,640
select AWSCodeCommitFullAccess.

30
00:02:51,640 --> 00:02:58,640
You also have an option to assign a tag. I'm going to leave it empty.

31
00:02:58,640 --> 00:03:04,440
It shows you the summary of all the settings for this user.

32
00:03:04,440 --> 00:03:08,840
Go ahead and click Create user.

33
00:03:08,840 --> 00:03:14,540
You can see the sign‑in link to access the console, which is a

34
00:03:14,540 --> 00:03:18,610
different link compared to the usual link that you use to log into

35
00:03:18,610 --> 00:03:25,935
the AWS console. You can view and download the credentials as a CSV

36
00:03:25,935 --> 00:03:32,115
file, or you have the option to send an email with the username and

37
00:03:32,115 --> 00:03:36,540
the URL directly from here.

38
00:03:36,540 --> 00:03:43,320
Password of the downloaded credential file must be emailed separately.

39
00:03:43,320 --> 00:03:50,220
Click Close. I'm going to sign out as root user and log back

40
00:03:50,220 --> 00:03:57,020
in with the IAM user that we just created.

41
00:03:57,020 --> 00:04:05,170
Let's go back to AWS CodeCommit. Click on the name of the depository,

42
00:04:05,170 --> 00:04:09,610
and it shows the required connection steps.

43
00:04:09,610 --> 00:04:14,910
It also shows the URL to clone the depository.

44
00:04:14,910 --> 00:04:21,300
Let's go ahead and create a new file and add some text. Give the

45
00:04:21,300 --> 00:04:29,640
file a name, an author name, and commit message, and click on

46
00:04:29,640 --> 00:04:40,040
Commit changes. Now click on Branches, and we currently have master branch,

47
00:04:40,040 --> 00:04:42,640
which is the default one.

48
00:04:42,640 --> 00:04:48,810
But it's a good practice not to do any development work in master branch.

49
00:04:48,810 --> 00:04:52,240
Let's go and create a new one.

50
00:04:52,240 --> 00:04:55,640
Click on Create branch,

51
00:04:55,640 --> 00:05:00,930
give the branch a name, and select the branch from where

52
00:05:00,930 --> 00:05:05,360
you want to create this new branch. You can see we have two

53
00:05:05,360 --> 00:05:08,010
branches now. One is master.

54
00:05:08,010 --> 00:05:11,470
The other one is develop.

55
00:05:11,470 --> 00:05:19,160
Let's edit the file in develop branch. Let's perform some changes and commit

56
00:05:19,160 --> 00:05:25,140
it. Now in order to merge this change back to develop,

57
00:05:25,140 --> 00:05:28,410
let's create a pull request.

58
00:05:28,410 --> 00:05:33,380
Choose the destination and the source branches.

59
00:05:33,380 --> 00:05:41,240
Give the pull request a title, and click on Create pull request.

60
00:05:41,240 --> 00:05:41,780
Ideally,

61
00:05:41,780 --> 00:05:46,280
you need to set up some approval rules so that the changes can be reviewed

62
00:05:46,280 --> 00:05:51,990
before they can be merged. Since there are no merge conflicts,

63
00:05:51,990 --> 00:05:59,520
the Merge button is enabled. Go ahead and click Merge. You can choose one of

64
00:05:59,520 --> 00:06:07,040
the three merge strategies and click on Merge pull request.

65
00:06:07,040 --> 00:06:14,180
Click on Commits. You can see two commits now. Now let's go back to the

66
00:06:14,180 --> 00:06:20,140
master branch and check if our changes are merged properly.

67
00:06:20,140 --> 00:06:22,540
Click on the file name.

68
00:06:22,540 --> 00:06:25,830
You can see the change that we performed in the develop branch

69
00:06:25,830 --> 00:06:30,620
has been merged to master branch successfully.

70
00:06:30,620 --> 00:06:35,000
Congratulations! You just created a new repository, committed

71
00:06:35,000 --> 00:06:39,990
changes, created multiple branches, performed a pull request,

72
00:06:39,990 --> 00:06:51,000
merged the changes back to the master branch, all from CodeCommit console without writing a single line of Git command.

