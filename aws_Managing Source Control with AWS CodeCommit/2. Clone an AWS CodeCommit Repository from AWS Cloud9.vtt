WEBVTT
1
00:00:02.240 --> 00:00:10.480
Let's jump into a quick demo and see how to create an AWS Cloud9 environment.

2
00:00:10.480 --> 00:00:15.870
I just entered my AWS account admin console.

3
00:00:15.870 --> 00:00:23.340
I'm going to log in with admin IAM user and his password.

4
00:00:23.340 --> 00:00:28.590
Let's search for Cloud9 in the services,

5
00:00:28.590 --> 00:00:34.030
and you can see an error message immediately at the top saying that this user is

6
00:00:34.030 --> 00:00:39.276
not authorized to access the current environment. Just like how we assigned

7
00:00:39.276 --> 00:00:45.240
different policies through the users in creating and maintaining AWS CodeCommit

8
00:00:45.240 --> 00:00:51.230
repositories, we need to assign proper policies to this user so that he can

9
00:00:51.230 --> 00:00:56.240
create an environment in AWS Cloud9.

10
00:00:56.240 --> 00:01:01.890
So we are going to sign out and log back into the admin console as the

11
00:01:01.890 --> 00:01:11.860
root user. Let me enter my email address and password. In the IAM in Find

12
00:01:11.860 --> 00:01:25.120
Services, select Groups, click Admins, choose Permissions, click Attach

13
00:01:25.120 --> 00:01:34.180
Policy, and let's type AWSCloud9, and you can see there are three policies

14
00:01:34.180 --> 00:01:43.340
related to AWS Cloud9, and I'm going to select AWSCloud9Administrator.

15
00:01:43.340 --> 00:01:46.440
Click Attach Policy.

16
00:01:46.440 --> 00:01:52.120
You can see the new policies added to this group, and, hence, all the users

17
00:01:52.120 --> 00:01:57.180
that are part of this group will have this policy set up.

18
00:01:57.180 --> 00:02:02.310
Let me sign up as a root user and log back into my accounts

19
00:02:02.310 --> 00:02:08.740
admin page as admin user. Click on Cloud9.

20
00:02:08.740 --> 00:02:13.040
Now, you don't see the error anymore.

21
00:02:13.040 --> 00:02:18.710
Click on Create environment, give a name to the environment and an

22
00:02:18.710 --> 00:02:25.740
optional description, click Next step. In the environment,

23
00:02:25.740 --> 00:02:30.210
you can create a new EC2 instance that will host this

24
00:02:30.210 --> 00:02:35.340
environment or you can use your own Linux machine.

25
00:02:35.340 --> 00:02:36.060
In that case,

26
00:02:36.060 --> 00:02:39.800
you need to enter the host's name and the credentials to connect to

27
00:02:39.800 --> 00:02:43.790
the host machine that you're going to provide.

28
00:02:43.790 --> 00:02:50.320
I'm going to choose the EC2 option. Under Instance type, I'm going to

29
00:02:50.320 --> 00:02:59.860
select t2.micro for instance type and Amazon Linux as the platform. That is

30
00:02:59.860 --> 00:03:05.175
a cost saving measure to hibernate your EC2 instance once it has been

31
00:03:05.175 --> 00:03:12.440
hidden for a specific time. Click Next step.

32
00:03:12.440 --> 00:03:16.540
You will see a summary of your development environment specification

33
00:03:16.540 --> 00:03:22.580
that you are going to create. Click Create environment.

34
00:03:22.580 --> 00:03:30.040
It will take a few seconds before the environment gets created successfully.

35
00:03:30.040 --> 00:03:32.200
Once the environment is created,

36
00:03:32.200 --> 00:03:37.380
you see a simple command terminal with a README page at

37
00:03:37.380 --> 00:03:41.540
top right. You see a Share button.

38
00:03:41.540 --> 00:03:43.590
Click on that.

39
00:03:43.590 --> 00:03:48.350
Now we can share your environment with other users for pair

40
00:03:48.350 --> 00:03:54.570
programming. You can add there IAM username, specify the

41
00:03:54.570 --> 00:03:57.810
access that you want to give.

42
00:03:57.810 --> 00:04:03.840
I'm going to limit to read‑only access and click Invite.

43
00:04:03.840 --> 00:04:08.035
You can see that admin2 user has been granted

44
00:04:08.035 --> 00:04:12.840
read‑only access. Click Collaborators.

45
00:04:12.840 --> 00:04:15.490
You can see all the users that have access to this

46
00:04:15.490 --> 00:04:19.740
environment and their level of access.

47
00:04:19.740 --> 00:04:24.990
AWS Resources will show all the local and the remote functions that are

48
00:04:24.990 --> 00:04:30.270
part of this environment and the Debugger panel that you may use to

49
00:04:30.270 --> 00:04:35.000
monitor the values while debugging a specific program. Click on

50
00:04:35.000 --> 00:04:39.290
settings to the right of the Share button. You will see different

51
00:04:39.290 --> 00:04:42.740
settings that are configurable.

52
00:04:42.740 --> 00:04:46.850
The settings at the project level lets you change the look and feel of

53
00:04:46.850 --> 00:04:53.490
the editor, a different language support. AWS Settings lets you

54
00:04:53.490 --> 00:04:59.000
specify the region and the AWS credentials.

55
00:04:59.000 --> 00:05:03.150
You also have the option to change your key bindings, and

56
00:05:03.150 --> 00:05:08.420
modify the teams, and specify whether you want your files to

57
00:05:08.420 --> 00:05:13.040
be auto saved in the cloud or not.

58
00:05:13.040 --> 00:05:20.360
Click on AWS Cloud9, click Go To Your Dashboard. Under Your environments,

59
00:05:20.360 --> 00:05:27.420
you can see that Globomantics1 environment that you created just now. Under

60
00:05:27.420 --> 00:05:31.600
Shared with you, it lists all the environments that are currently being

61
00:05:31.600 --> 00:05:37.870
shared with you, and Account environments lists all the environments that

62
00:05:37.870 --> 00:05:41.940
are part of this AWS circle.

63
00:05:41.940 --> 00:05:47.500
From this dashboard page, you can click Open IDE button, and

64
00:05:47.500 --> 00:05:51.980
it can launch your development environment.

65
00:05:51.980 --> 00:05:57.540
I'm trying to clone the CodeCommit repository that we created in the last model,

66
00:05:57.540 --> 00:06:01.040
and you can see an error message that we could not read the

67
00:06:01.040 --> 00:06:05.740
remote repository because of the access rights.

68
00:06:05.740 --> 00:06:09.682
So let's set the public and private keys to connect with the repository.

69
00:06:09.682 --> 00:06:20.410
Switch to .ssh directory and run the ssh‑keygen utility. I'm going to

70
00:06:20.410 --> 00:06:30.240
leave the pass phrase as empty and specify Cloud9_rsa as the key name.

71
00:06:30.240 --> 00:06:35.050
You can see a private key and a public key being created with the name

72
00:06:35.050 --> 00:06:38.440
that we mentioned before.

73
00:06:38.440 --> 00:06:44.300
Let's open the public key and copy the contents.

74
00:06:44.300 --> 00:06:49.140
I'm going to log in back to IAM service.

75
00:06:49.140 --> 00:06:57.740
Select the user that needs the access, select Security credentials,

76
00:06:57.740 --> 00:07:03.710
upload SSH public key, and paste the key contents in this

77
00:07:03.710 --> 00:07:10.040
text box, and click Upload SSH public key.

78
00:07:10.040 --> 00:07:15.508
I'm going to copy this key ID and log back into Cloud9 environment. On

79
00:07:15.508 --> 00:07:25.070
the .ssh directory, I'm going to create a new file named config and paste

80
00:07:25.070 --> 00:07:34.390
the following contents. User is the SSH key ID that we copied from IAM,

81
00:07:34.390 --> 00:07:38.580
and IdentifyFile is the location of the private key that we initially

82
00:07:38.580 --> 00:07:46.410
created. Save this file, and change the permission of the file so that it

83
00:07:46.410 --> 00:07:59.000
has the required access. Now, let's try a simple SSH command to the server, and you can see the connection is successfully established.

