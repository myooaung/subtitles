0
1
00:00:00,330 --> 00:00:01,180
Hey, welcome back.
1

2
00:00:01,350 --> 00:00:06,290
So now we're going to talk about user stories and
acceptance criteria, which are underneath epics.
2

3
00:00:06,650 --> 00:00:11,730
We already know that an epic has an epic spec sheet
associated with it to describe what we're doing
3

4
00:00:11,730 --> 00:00:14,540
here, and what sorts of functionalities we need, and all that,
4

5
00:00:14,790 --> 00:00:19,740
but we're going to talk about now how we actually get
that into the developer's hands and turn it into work.
5

6
00:00:19,740 --> 00:00:20,230
but we're going to talk about now how we actually get
that into the developer's hands and turn it into work.
6

7
00:00:20,310 --> 00:00:24,210
So here we're going to assume we've made a decision
on what we want to build,
7

8
00:00:24,210 --> 00:00:28,850
we've outlined the phases that we're going to build it in,
and we've put all that in the epic spec sheet.
8

9
00:00:28,850 --> 00:00:29,010
we've outlined the phases that we're going to build it in,
and we've put all that in the epic spec sheet.
9

10
00:00:29,010 --> 00:00:35,400
Now, the task is to put this work into our project management software, so that the engineers can start working on it.
10

11
00:00:35,400 --> 00:00:36,550
Now, the task is to put this work into our project management software, so that the engineers can start working on it.
11

12
00:00:36,570 --> 00:00:40,510
This is where user stories and acceptance criteria come in.
12

13
00:00:40,620 --> 00:00:44,440
So, a user story is just a way to describe a thing we're going to build that delivers some type of functionality to the end user.
13

14
00:00:44,460 --> 00:00:49,490
So, a user story is just a way to describe a thing we're going to build that delivers some type of functionality to the end user.
14

15
00:00:49,520 --> 00:00:57,090
An example of a user story is "As a user, I want to
send pictures in a direct message to my friends, so
15

16
00:00:57,090 --> 00:00:59,740
that I can share my favorite photos with them."
16

17
00:00:59,820 --> 00:01:01,190
That's kind of a weird thing, right?
17

18
00:01:01,200 --> 00:01:02,220
It's a weird format.
18

19
00:01:02,280 --> 00:01:06,680
User stories always follow that format:
"As an X, I want to do Y, so that I can Z."
19

20
00:01:06,720 --> 00:01:10,790
User stories always follow that format:
"As an X, I want to do Y, so that I can Z."
20

21
00:01:10,830 --> 00:01:13,310
So why do we do this whole weird formatting thing?
21

22
00:01:13,320 --> 00:01:16,730
Why are we describing work to be done in this weird way?
22

23
00:01:16,740 --> 00:01:22,110
Do you remember how product managers are responsible
for the "what" and the "why," and the engineers and
23

24
00:01:22,110 --> 00:01:24,480
designers are responsible for the "how"?
24

25
00:01:24,540 --> 00:01:29,850
That's the reason that user stories follow this weird
format, because the product manager is usually
25

26
00:01:29,850 --> 00:01:35,190
the person that writes them and puts them into the product management or the project management software.
26

27
00:01:35,280 --> 00:01:36,150
By writing them this way, we can avoid saying how
something should be done on a technical level.
27

28
00:01:36,180 --> 00:01:41,270
By writing them this way, we can avoid saying how
something should be done on a technical level.
28

29
00:01:41,280 --> 00:01:46,620
In other words, by writing in this format, we're
not telling engineers how to do their jobs,
29

30
00:01:46,710 --> 00:01:52,160
we're just telling them functionally, as a user,
what we want the user to be able to do.
30

31
00:01:52,290 --> 00:01:57,000
Okay, so where do we write user stories
and how did they get to your engineer?
31

32
00:01:57,060 --> 00:02:01,320
Well, they belong inside your project management tool,
32

33
00:02:01,440 --> 00:02:07,620
and no matter which software you're using for project management, there's probably some kind of place,
33

34
00:02:07,650 --> 00:02:14,100
or card, or something where you can write the work
to be done, and then you can change that card or that
34

35
00:02:14,100 --> 00:02:21,420
place into different statuses like "to do," "in progress," and then "done." These little cards or whatever you want to call them,
35

36
00:02:21,420 --> 00:02:22,020
place into different statuses like "to do," "in progress," and then "done." These little cards or whatever you want to call them,
36

37
00:02:22,050 --> 00:02:27,990
they're commonly called tickets in the product management world,
and it's where your user stories belong,
37

38
00:02:27,990 --> 00:02:28,150
they're commonly called tickets in the product management world,
and it's where your user stories belong,
38

39
00:02:28,200 --> 00:02:30,920
along with proper designs from the designer.
39

40
00:02:30,990 --> 00:02:37,530
So, engineers take the user stories, they complete them,
and then they move on to the next one. However, before
40

41
00:02:37,530 --> 00:02:40,090
we can say that a user story is complete,
41

42
00:02:40,200 --> 00:02:44,550
we have to make sure that the functionality
does what we intended it to do.
42

43
00:02:44,610 --> 00:02:51,870
This is where acceptance criteria comes in. Acceptance criteria
is just a set of conditions that software
43

44
00:02:51,870 --> 00:02:55,300
must satisfy to be considered complete.
44

45
00:02:55,350 --> 00:03:03,510
Typically, acceptance criteria is written inside of
the ticket with the user story and sounds a little
45

46
00:03:03,510 --> 00:03:11,220
bit something like this: "Given I am a user and I click
the 'add picture' button in the direct message, I am
46

47
00:03:11,220 --> 00:03:14,190
presented with a pop-up window to choose the file
47

48
00:03:14,190 --> 00:03:20,640
I can upload, submit it with the upload button, and see a preview
of the uploaded image." And then, here's another one.
48

49
00:03:20,640 --> 00:03:21,270
I can upload, submit it with the upload button, and see a preview
of the uploaded image." And then, here's another one.
49

50
00:03:21,660 --> 00:03:28,720
"Given I am a user who has successfully uploaded a photo
from my computer, when I click 'send,' the image
50

51
00:03:28,720 --> 00:03:33,720
is sent to my friend through the direct message
and it appears in the chat."
51

52
00:03:33,720 --> 00:03:35,640
This sounds really specific, right?
52

53
00:03:35,760 --> 00:03:42,120
Well, the purpose of acceptance criteria is to be
very specific on how a feature should function.
53

54
00:03:42,150 --> 00:03:50,070
It provides a list of things that you can test to make
sure it works before you release it to the public.
54

55
00:03:50,070 --> 00:03:50,250
It provides a list of things that you can test to make
sure it works before you release it to the public.
55

56
00:03:50,250 --> 00:03:56,220
This is also extremely helpful for engineers, who like
everything to be very specific, so that they can
56

57
00:03:56,220 --> 00:04:00,900
think through the process of engineering the stuff correctly.
As a product manager,
57

58
00:04:00,900 --> 00:04:08,130
you are usually responsible for testing completed
tickets and stories before approving them to go to
58

59
00:04:08,130 --> 00:04:10,670
the public or to go out live in your product.
59

60
00:04:10,770 --> 00:04:11,820
So that's it.
60

61
00:04:11,820 --> 00:04:18,900
Tickets inside of project management software have user
stories that describe what a user should be able to do,
61

62
00:04:18,900 --> 00:04:19,790
Tickets inside of project management software have user
stories that describe what a user should be able to do,
62

63
00:04:19,920 --> 00:04:26,040
followed by some acceptance criteria that really
spell out exactly how it should work. Okay,
63

64
00:04:26,050 --> 00:04:28,430
look, if all of this is a little bit confusing to you,
64

65
00:04:28,470 --> 00:04:33,620
don't worry. I'm going to show you a real life example coming up.
I will see you in there.
