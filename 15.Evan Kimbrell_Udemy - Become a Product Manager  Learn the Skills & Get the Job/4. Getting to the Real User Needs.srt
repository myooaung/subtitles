0
1
00:00:04,500 --> 00:00:05,610
Welcome back, everyone.
1

2
00:00:05,610 --> 00:00:11,370
So in the last lecture we talked about all of the places where you can receive user feedback and ideas.
2

3
00:00:11,370 --> 00:00:11,530
Once we have this list of ideas or feature requests,
do we just go build them?
3

4
00:00:11,580 --> 00:00:17,060
Once we have this list of ideas or feature requests,
do we just go build them?
4

5
00:00:17,130 --> 00:00:22,890
Let's say that a user has given you some feedback and they want you to build a native mobile app for
5

6
00:00:22,890 --> 00:00:27,330
your website, so you get that feedback
and you just go out and build it, right? No.
6

7
00:00:27,390 --> 00:00:32,970
Being a product manager is about a lot more than just learning a few skills and applying those skills.
7

8
00:00:32,970 --> 00:00:33,320
Being a product manager is about a lot more than just learning a few skills and applying those skills.
8

9
00:00:33,330 --> 00:00:39,060
One of the most important things about being a product manager is having a product manager mindset, and
9

10
00:00:39,060 --> 00:00:46,500
a big component of that is being able to understand the core pain points, the real problems behind what people ask you to do.
10

11
00:00:46,500 --> 00:00:48,590
a big component of that is being able to understand the core pain points, the real problems behind what people ask you to do.
11

12
00:00:48,600 --> 00:00:52,440
So, in this lecture, that's what we're going to learn,
how to get that essential skill.
12

13
00:00:52,530 --> 00:00:57,570
Let's start off with an example. Let's say that I have a friend - and I don't really have any friends, so
13

14
00:00:57,570 --> 00:01:03,180
this is an unrealistic example, but let's say that I do -
and they are standing outside in the rain, and
14

15
00:01:03,180 --> 00:01:06,090
they're getting all wet, and they're upset about being wet,
15

16
00:01:06,120 --> 00:01:12,780
and they say, "Cole, can you give me a towel?" And I give them a towel, and they dry off, and they get dry for a
16

17
00:01:12,780 --> 00:01:15,720
few minutes or maybe a few seconds, and it's still raining,
17

18
00:01:15,720 --> 00:01:18,840
so they keep getting wet. Did I really solve the problem?
18

19
00:01:18,930 --> 00:01:20,240
Well, of course not.
19

20
00:01:20,250 --> 00:01:21,650
They asked for a towel, so that's what I gave them.
20

21
00:01:21,660 --> 00:01:22,740
They asked for a towel, so that's what I gave them.
21

22
00:01:22,740 --> 00:01:24,570
That was the request to me.
22

23
00:01:24,570 --> 00:01:27,090
But is that the actual problem?
23

24
00:01:27,090 --> 00:01:30,720
No, the actual problem here is that they're in the rain.
24

25
00:01:30,990 --> 00:01:33,970
So the actual solution would be to get them out of the rain.
25

26
00:01:34,080 --> 00:01:39,750
So I know that example sounds pretty ridiculous,
but this sort of thing happens all the time in the world
26

27
00:01:39,750 --> 00:01:40,810
of product management.
27

28
00:01:40,950 --> 00:01:47,940
People are always asking you to build things or add features, and those things at first glance seem reasonable,
28

29
00:01:48,030 --> 00:01:54,030
but actually they're merely symptoms of a real problem the user is having behind the scenes. Being a product
29

30
00:01:54,030 --> 00:02:01,950
manager is all about finding a solution to a problem instead of trying to fit a problem to a solution
30

31
00:02:02,010 --> 00:02:06,690
that you or someone else has thought of in the first place.
Given any request or feature idea,
31

32
00:02:06,690 --> 00:02:11,970
the first thing I want you to do is think to yourself,
"Is this solving an actual problem?"
32

33
00:02:11,970 --> 00:02:16,980
The second thing I want you to do is ask yourself,
"If we do this exactly as they ask without looking
33

34
00:02:16,980 --> 00:02:20,130
any deeper, is it going to have any unintended side effects?"
34

35
00:02:20,130 --> 00:02:22,860
I'll give you an example of an unintended side effect.
35

36
00:02:22,860 --> 00:02:24,420
Everyone's familiar with Twitter, right?
36

37
00:02:24,420 --> 00:02:29,700
They've got several hundred million users. The way Twitter works is you can type some characters and
37

38
00:02:29,700 --> 00:02:34,470
send it out as a tweet that appears on your profile and it also appears in a news feed for everyone
38

39
00:02:34,470 --> 00:02:40,650
that follows you. On Twitter, you can also re-tweet,
which is clicking a button on their tweet and it
39

40
00:02:40,650 --> 00:02:45,200
puts it on your profile, and all of that also feeds into the news feed.
40

41
00:02:45,210 --> 00:02:52,160
So if you're following a ton of people, then your news feed
can understandably get pretty busy.
41

42
00:02:52,170 --> 00:02:57,840
One of the most common things people ask for on Twitter is the ability to just filter out re-tweets.
42

43
00:02:57,850 --> 00:02:57,890
So the idea is that if the product managers and developers at Twitter just made a button where you
43

44
00:02:57,930 --> 00:03:03,120
So the idea is that if the product managers and developers at Twitter just made a button where you
44

45
00:03:03,120 --> 00:03:07,620
wouldn't see re-tweets on your timeline anymore,
it would make things a lot less messy.
45

46
00:03:07,800 --> 00:03:13,860
Sounds pretty reasonable, right? Now, Twitter as a business model is a company that really just tries to
46

47
00:03:13,860 --> 00:03:17,370
show everyone out there what is really popular right now.
47

48
00:03:17,370 --> 00:03:19,560
So what are people around the world talking about?
48

49
00:03:19,560 --> 00:03:21,100
Think about re-tweets for a moment.
49

50
00:03:21,120 --> 00:03:24,950
When I re-tweet something it's like saying "I really like this."
50

51
00:03:24,960 --> 00:03:26,080
I endorse it. I like it so much that I'm willing
to put it on my own profile.
51

52
00:03:26,100 --> 00:03:29,270
I endorse it. I like it so much that I'm willing
to put it on my own profile.
52

53
00:03:29,400 --> 00:03:36,630
So if we built this feature and it got pretty popular then we could have, say, 20% to 40% of people not seeing re-tweets at all.
53

54
00:03:36,840 --> 00:03:38,890
So if we built this feature and it got pretty popular then we could have, say, 20% to 40% of people not seeing re-tweets at all.
54

55
00:03:39,000 --> 00:03:44,310
What ends up happening here is less and less people re-tweet because there's not as large of an audience,
55

56
00:03:44,310 --> 00:03:44,620
and then Twitter has less of an idea what people really strongly like or really strongly endorse.
56

57
00:03:44,700 --> 00:03:51,250
and then Twitter has less of an idea what people really strongly like or really strongly endorse.
57

58
00:03:51,270 --> 00:03:57,180
This makes it even more difficult for them to
separate out signals on what's globally super popular.
58

59
00:03:57,180 --> 00:03:57,360
This affects normal users as well.
59

60
00:03:57,360 --> 00:03:59,400
This affects normal users as well.
60

61
00:03:59,400 --> 00:04:04,320
So with less people re-tweeting, it's more difficult for them to tell what is super popular or what people really, really like.
61

62
00:04:04,320 --> 00:04:05,670
So with less people re-tweeting, it's more difficult for them to tell what is super popular or what people really, really like.
62

63
00:04:05,670 --> 00:04:12,650
So, remember, the request here was to allow us to filter out re-tweets on the Twitter timeline, and we've
63

64
00:04:12,660 --> 00:04:17,390
just covered that might not be the best idea because it has some unintended consequences.
64

65
00:04:17,400 --> 00:04:22,650
I'll give you an example from my career of a feature request that did not actually address the user problem.
65

66
00:04:22,650 --> 00:04:23,390
I'll give you an example from my career of a feature request that did not actually address the user problem.
66

67
00:04:23,520 --> 00:04:30,660
A while ago I was a product manager at an e-commerce web site and we were working on building a new
67

68
00:04:30,660 --> 00:04:35,640
content management system for the marketing team because they had outgrown the old one.
68

69
00:04:35,640 --> 00:04:41,610
This is basically a system by which they can go and edit the photos and the text and that sort of thing
69

70
00:04:41,610 --> 00:04:44,160
on the web site while the web site is live.
70

71
00:04:44,160 --> 00:04:50,370
So I'm meeting with the marketing team and I'm writing down requirements and they're saying we need it
71

72
00:04:50,370 --> 00:04:51,850
to do these things.
72

73
00:04:51,870 --> 00:04:57,330
One of the things they mentioned was, they said they needed the ability to put up a small message on a
73

74
00:04:57,330 --> 00:05:03,090
specific product web page to tell the users something and they wanted to be able to put that up and
74

75
00:05:03,090 --> 00:05:08,310
take it down pretty quickly. At that point I could have said "Ok, I'll take that into account and I'll
75

76
00:05:08,310 --> 00:05:11,220
make sure that whatever we do will give you that feature."
76

77
00:05:11,430 --> 00:05:16,320
But instead what I did was ask them what's behind this request what did they actually want it to do.
77

78
00:05:16,320 --> 00:05:16,920
But instead what I did was ask them what's behind this request what did they actually want it to do.
78

79
00:05:16,920 --> 00:05:21,340
So I asked why this was actually a requirement
and for what reason do they need this.
79

80
00:05:21,390 --> 00:05:26,700
So it turns out that the merchandising department told the marketing department to tell me that this
80

81
00:05:26,700 --> 00:05:32,880
was a requirement, and the reason was, it turns out, that they would hold sales on particular product pages
81

82
00:05:32,940 --> 00:05:40,170
and on this short page in particular the sizing and pictures were a little bit misleading.
82

83
00:05:40,170 --> 00:05:45,780
So when a lot of traffic went there, it ends up that a lot of people left because they were confused.
83

84
00:05:45,780 --> 00:05:52,200
So what they wanted was a little, basically a message where users would know to call our customer service
84

85
00:05:52,200 --> 00:05:53,970
line to better understand it.
85

86
00:05:53,970 --> 00:06:00,570
So after hearing all of this it was pretty clear to me that the real problem wasn't that they needed
86

87
00:06:00,660 --> 00:06:04,200
an ability to put up a message really quickly for customers.
87

88
00:06:04,200 --> 00:06:09,150
The real problem was that the page was extremely misleading
and causing problems in the first place.
88

89
00:06:09,150 --> 00:06:09,480
So after hearing this I went back to the designers and developers and told them about this and we went
89

90
00:06:09,480 --> 00:06:15,180
So after hearing this I went back to the designers and developers and told them about this and we went
90

91
00:06:15,180 --> 00:06:20,750
to the drawing board and talked about
how we might make this a lot clearer for customers.
91

92
00:06:20,850 --> 00:06:25,920
Once we had solved this on the web page it was not really a problem anymore for the merchandising department
92

93
00:06:26,190 --> 00:06:29,110
and the customers didn't need to call
into customer service anymore.
93

94
00:06:29,220 --> 00:06:31,140
So, problem solved.
94

95
00:06:31,230 --> 00:06:37,960
But the real problem was solved, not the initial idea or requirement given to me by another team.
95

96
00:06:38,010 --> 00:06:43,470
I want to show you a really easy way to get to the core issue of a request and see what the actual problem
96

97
00:06:43,470 --> 00:06:49,110
is, and this is a technique that a lot of salespeople use
and have for a really long time.
97

98
00:06:49,110 --> 00:06:51,720
So it's really easy. You just ask why.
98

99
00:06:51,870 --> 00:06:54,770
But then you ask it two more times at least.
99

100
00:06:54,810 --> 00:06:58,880
So if someone asks you to do something you say "Why?"
100

101
00:06:58,930 --> 00:07:01,340
He'll tell you, you say "Why?" again,
101

102
00:07:01,380 --> 00:07:05,130
and they'll tell you a reason that's a little bit closer to the truth.
102

103
00:07:05,220 --> 00:07:06,660
And then you say "Why?" again,
103

104
00:07:06,660 --> 00:07:12,210
and by the end of it they'll probably
have illustrated to you what the real pain point is.
104

105
00:07:12,210 --> 00:07:15,010
It seems really obvious but in fact it's not.
105

106
00:07:15,030 --> 00:07:18,770
And there's so many people that just skip over this simple step.
106

107
00:07:18,810 --> 00:07:19,920
Ask why.
107

108
00:07:19,920 --> 00:07:23,820
I once took a sales class back after college.
108

109
00:07:23,820 --> 00:07:25,700
It was really, really good.
109

110
00:07:25,890 --> 00:07:30,510
And this guy that taught the course was in his early 50s.
110

111
00:07:30,510 --> 00:07:35,730
He had done some of the best sales jobs in the world and his number one piece of advice was to do this,
111

112
00:07:36,120 --> 00:07:39,570
and this technique works with product management just as well.
112

113
00:07:39,570 --> 00:07:45,720
So in this lecture we learned that the product manager's job
is not only to listen to the requests the
113

114
00:07:45,720 --> 00:07:50,730
person is giving us but to find the real pain behind the request.
114

115
00:07:50,760 --> 00:07:53,130
What is the real reason they're asking for this?
115

116
00:07:53,130 --> 00:07:57,620
We also learned that the easiest way to get to that
is to continually ask why.
