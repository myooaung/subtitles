1
00:00:01,170 --> 00:00:05,520
Excellent work on your last mission agent Let's quickly have a deep brief so we can see how you accomplish

2
00:00:05,520 --> 00:00:06,360
your tasks.

3
00:00:07,440 --> 00:00:11,430
The first thing you have to do is figure out what the fair amount numbers were.

4
00:00:11,640 --> 00:00:16,230
And if you did a google search and go to Wikipedia we kind of realize that there's actually only five

5
00:00:16,230 --> 00:00:21,270
known Fermont terms and the largest one is 6 5 5 3 7 2.

6
00:00:21,300 --> 00:00:32,640
Copy that and set that as our number from Prime and create a byte string from that then we will import

7
00:00:33,420 --> 00:00:42,920
hash lib and using Actually we will create a key out of that prime string hash lib and it instructed

8
00:00:42,920 --> 00:00:53,030
to use SH 3 256 bit in coding on that number and then we have this key object.

9
00:00:53,030 --> 00:01:03,360
And we will import base 64 and we'll get this as the key digest.

10
00:01:04,040 --> 00:01:15,800
Once we have that we can pass it and encode it using the 64 Library giving us our key base 64.

11
00:01:15,800 --> 00:01:17,010
And that's you're all safe.

12
00:01:17,010 --> 00:01:23,820
Encode the key bytes once so that we can from cryptography

13
00:01:26,630 --> 00:01:37,930
for net import Fernet and then say custom cipher and pass in the key we just created

14
00:01:40,680 --> 00:01:44,800
then we can copy and paste the message that we found in that link.

15
00:01:44,850 --> 00:01:46,390
I will do that now.

16
00:01:46,470 --> 00:01:48,540
So that's the entire message.

17
00:01:48,540 --> 00:01:49,980
I'll save that as the variable.

18
00:01:50,100 --> 00:01:57,040
SS And let's call our custom Sipher and decrypt that message.

19
00:01:57,790 --> 00:02:02,140
And it looks like it's leading us to another link so we'll click on that link and see what it has to

20
00:02:02,140 --> 00:02:02,970
say.

21
00:02:04,740 --> 00:02:05,170
All right.

22
00:02:05,160 --> 00:02:07,530
So looks like this link is from the first encrypted message.

23
00:02:07,530 --> 00:02:11,020
The key to the encryption was 6 5 5 3 7.

24
00:02:11,070 --> 00:02:13,260
Dale says here is a link to the truth.

25
00:02:13,260 --> 00:02:19,130
Looks like it's another encrypted message and it says decryption key is a five letter word in all caps.

26
00:02:19,230 --> 00:02:25,980
Pass through again that same sh three underscore 256 bit hash and it says you can find the word using

27
00:02:26,040 --> 00:02:27,270
this data.

28
00:02:27,270 --> 00:02:34,680
So if we click on this next link it looks like it's a text document of latitudes and longitudes as well

29
00:02:34,680 --> 00:02:37,640
as some other text here.

30
00:02:37,650 --> 00:02:41,900
My suspicion is that you're going to have to plot out this latitude and longitude meaning we'll need

31
00:02:41,910 --> 00:02:45,270
to now learn how to do geographical plotting with Python.

32
00:02:45,300 --> 00:02:46,290
We'll see if there agent.

