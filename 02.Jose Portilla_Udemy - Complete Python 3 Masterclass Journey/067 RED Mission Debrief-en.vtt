WEBVTT
1

00:00:01.050 --> 00:00:04.460

Welcome back agent excellent work on your previous mission.



2

00:00:04.680 --> 00:00:10.290

Let's quickly go through a debriefing so that other agents can understand how you were able to successfully



3

00:00:10.290 --> 00:00:11.930

complete your mission.



4

00:00:12.090 --> 00:00:18.450

Taking a look at the gold bugs dot com home page it seems that we're just looking at a couple of images



5

00:00:18.540 --> 00:00:25.620

and then a link here two things about some poem that the name of this band is based off of that if you



6

00:00:25.620 --> 00:00:29.610

kept scrolling down you realized there was a link to their blog post.



7

00:00:29.610 --> 00:00:34.590

Clicking on that blog post we see this blog post with actually some specific instructions.



8

00:00:34.590 --> 00:00:41.220

It says grab every first character after each and then we have a series of five dashes so you realize



9

00:00:41.220 --> 00:00:47.870

this was a hint to grab the first character after each of these five dashes in the blog post.



10

00:00:47.880 --> 00:00:49.920

Let's take a look at how we can do that.



11

00:00:49.950 --> 00:00:55.590

The first thing I want to do is actually create the request using the request library and then create



12

00:00:55.590 --> 00:00:57.670

the beautiful soup for it.



13

00:00:58.020 --> 00:00:59.490

We'll come back to a notebook.



14

00:01:01.210 --> 00:01:11.290

Import beautiful soup and also import requests and then send send in a request for that actual blog



15

00:01:11.290 --> 00:01:12.550

post.



16

00:01:12.550 --> 00:01:17.770

So we will grab this URL link paste it in.



17

00:01:17.800 --> 00:01:28.110

Get that request and then create a soup from that request be for beautiful soup passed in the text and



18

00:01:28.110 --> 00:01:32.870

then use S M L in order to read through that.



19

00:01:33.060 --> 00:01:39.400

And then we have to figure out how to actually just grab the blog content itself instead of grabbing



20

00:01:39.400 --> 00:01:40.980

the day or the titles.



21

00:01:40.980 --> 00:01:42.600

Now there's many different ways to do this.



22

00:01:42.630 --> 00:01:49.980

But one surefire way is to inspect and then try out different ideas work classes that happen to be associated



23

00:01:49.980 --> 00:01:57.360

with that actual blog text and you can even realize that there's a simple tag P R E that's associated



24

00:01:57.690 --> 00:02:00.310

with this blog post.



25

00:02:00.390 --> 00:02:12.360

So if we just try to grab this PR tag by itself we can say super select Pirri and that returns back



26

00:02:12.420 --> 00:02:15.360

the actual material of the blog as a tag.



27

00:02:15.360 --> 00:02:19.680

So that's one way we could have done this the other way would be exploring the different classes that



28

00:02:19.680 --> 00:02:21.160

are available to here.



29

00:02:21.270 --> 00:02:24.750

So you could have explored this as Q S block content as well.



30

00:02:24.990 --> 00:02:26.600

So let's try exploring that.



31

00:02:26.640 --> 00:02:35.990

We're going to copy and paste this and since it's a class when you start the dots and if you run that



32

00:02:35.990 --> 00:02:41.950

you end up seeing very similarly that we have the block content and then the print inside of it.



33

00:02:42.230 --> 00:02:50.390

If you want to just grab content inside of another block remember what you can do is use this symbol



34

00:02:50.510 --> 00:02:56.020

in order to say grab PRI directly inside that ask us block content.



35

00:02:56.180 --> 00:03:00.380

And that would have given you the same thing as just grabbing the pre-attack as well.



36

00:03:00.380 --> 00:03:05.890

So many ways to do this and these aren't the only ways but hopefully this is the most straightforward



37

00:03:07.230 --> 00:03:11.880

will then grab this list that came back to us and set that blog.



38

00:03:11.970 --> 00:03:18.940

So then we have that list of the actual blog posts and we want to just grab the contents of that list.



39

00:03:19.020 --> 00:03:27.630

So what we will say is the following will say blog 0 set equal to text and then if we check out the



40

00:03:27.630 --> 00:03:29.360

text we get back.



41

00:03:29.370 --> 00:03:30.700

This by itself.



42

00:03:30.780 --> 00:03:37.470

And there's different ways to actually grab just the text content instead of grabbing the actual pre



43

00:03:38.280 --> 00:03:39.750

tag along with it.



44

00:03:39.990 --> 00:03:46.300

Because if we take a look at this type it still actually elements tag.



45

00:03:46.300 --> 00:03:53.440

So if we wanted to convert it to a string we could just say string text and then remove the actual tags.



46

00:03:53.440 --> 00:04:00.580

So that's one way we could done this or just like we did with the image you can grab the contents of



47

00:04:00.580 --> 00:04:04.570

the text and it returns back a list of all the contents as a string.



48

00:04:04.570 --> 00:04:09.400

And because it's a list if you actually just want the string itself you can index off of this and then



49

00:04:09.400 --> 00:04:11.410

you have a string.



50

00:04:11.410 --> 00:04:18.180

So we will say that the text itself is equal to a text that contents 0.



51

00:04:18.190 --> 00:04:26.620

So we'll call this block text and now we have the actual block text right here.



52

00:04:26.830 --> 00:04:31.290

Now that we have the block text we'll want to actually do what the instructions said.



53

00:04:31.430 --> 00:04:36.730

If you come back to the blog post wanted to grab every first character after each of these dashes.



54

00:04:36.790 --> 00:04:43.920

So what we can do is split this based off these dashes so we'll grab the dashes here.



55

00:04:44.910 --> 00:04:46.300

And then paste them in.



56

00:04:46.770 --> 00:04:54.120

And now I have a list of all the lines and I want to grab the first character of each of these lines.



57

00:04:54.120 --> 00:04:57.640

Notice however that the very first one is actually blank.



58

00:04:57.810 --> 00:05:01.220

So we need to use a little bit of indexing for this.



59

00:05:01.530 --> 00:05:07.370

So in order to not to grab the first one because it's blank we'll say starting at index 1 of this list



60

00:05:07.410 --> 00:05:08.560

go all the way to the end.



61

00:05:08.790 --> 00:05:12.330

And that essentially removes that first blank string.



62

00:05:12.330 --> 00:05:17.480

So let's make this blog lines.



63

00:05:17.510 --> 00:05:26.030

So now we have a list of each line of the blog and we'll create an empty string called the result and



64

00:05:26.030 --> 00:05:30.660

say for sentence an Bloglines



65

00:05:34.090 --> 00:05:35.470

result is equal to.



66

00:05:35.470 --> 00:05:41.560

And we will concatenate the first letter of that sentence where the first character sentence and then



67

00:05:41.650 --> 00:05:42.760

will index 0.



68

00:05:42.760 --> 00:05:45.450

There let's make sure we spell sentence correctly.



69

00:05:47.400 --> 00:05:53.080

And if we run this and then check the results we get back a Google Drive link.



70

00:05:53.130 --> 00:05:55.620

So let's copy this and see where it leads to.



71

00:05:57.460 --> 00:06:00.510

Following the link we can see here that your hard work has paid off.



72

00:06:00.510 --> 00:06:06.290

Agent it looks like the rogue agents are leading new rogues through a series of online hosted links.



73

00:06:06.370 --> 00:06:10.170

It seems their next phase involves working of a zip file and other text files.



74

00:06:10.390 --> 00:06:15.340

Let's connect back with director and discuss what you will need to know for your next mission including



75

00:06:15.340 --> 00:06:18.280

working with a zip file as well as a directory of files.



76

00:06:18.280 --> 00:06:19.550

Excellent work so far.



