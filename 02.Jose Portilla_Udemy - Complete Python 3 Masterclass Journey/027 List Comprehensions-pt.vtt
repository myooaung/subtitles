WEBVTT
1

00:00:00.270 --> 00:00:00.990

Bem vindo de volta.



2

00:00:00.990 --> 00:00:07.250

Vamos agora discutir as compreenses da lista de compreenses da lista so uma maneira nica de criar rapidamente uma



3

00:00:07.340 --> 00:00:08.810

lista com o Python.



4

00:00:08.810 --> 00:00:14.450

Basicamente, eles permitem que voc crie listas usando uma notao diferente, essencialmente permitindo



5

00:00:14.510 --> 00:00:19.560

que voc crie uma linha para loop dentro de colchetes de lista.



6

00:00:19.580 --> 00:00:24.470

A sintaxe pode ser confusa no incio para novos recrutas, mas dividi-la passo a passo, esperamos tornar



7

00:00:24.470 --> 00:00:26.660

tudo claro, a fim de fazer isso.



8

00:00:26.660 --> 00:00:29.650

Vamos pular para um caderno Jupiter e mostrar a sintaxe.



9

00:00:34.850 --> 00:00:38.080

Vamos comear com um exemplo simples usando um loop for.



10

00:00:38.480 --> 00:00:46.080

Vamos comear com uma lista vazia chamada minha lista e vamos imaginar que temos algum tipo



11

00:00:46.120 --> 00:00:51.070

de string s e vamos atribuir a esta string alguma string.



12

00:00:51.070 --> 00:00:57.790

Agora imagine que, de alguma forma, queremos que cada caractere seja um elemento individual nessa lista.



13

00:00:57.790 --> 00:01:03.380

Bem, poderamos fazer  que podemos usar um loop para dizer quatro letras na string.



14

00:01:03.400 --> 00:01:09.650

S Pegue minha lista e coloque a caneta na lista.



15

00:01:09.940 --> 00:01:13.130

E se eu executar isso e verificar o resultado da minha lista.



16

00:01:13.130 --> 00:01:19.250

Agora eu tenho backlist, onde cada elemento  agora os personagens que estvamos interagindo neste processo



17

00:01:19.430 --> 00:01:20.580

por um loop.



18

00:01:20.810 --> 00:01:24.620

Vamos agora mostrar como podemos fazer a mesma tarefa usando uma compreenso de lista.



19

00:01:24.920 --> 00:01:28.460

Vamos comear realmente excluindo essa primeira linha da minha lista.



20

00:01:28.460 --> 00:01:34.280

J que na verdade no precisamos definir isso ainda e ns vamos fazer aqui, basicamente



21

00:01:34.370 --> 00:01:36.170

ns mudamos esta declarao anexa.



22

00:01:36.170 --> 00:01:42.560

Em vez disso, tudo o que fazemos  pegar esta carta, cort-la e coloc-la na frente daqui.



23

00:01:42.600 --> 00:01:49.890

Ento, estamos dizendo letra por letra em S e depois nos livramos do acrscimo e nos livramos deste clon



24

00:01:51.120 --> 00:01:57.580

e ento colocamos isso dentro de colchetes e esse  o formato de compreenso da lista.



25

00:01:57.660 --> 00:02:06.420

Voc diz elementos de quatro elementos em itervel e dentro de colchetes e, em seguida, podemos ter esta minha nova lista



26

00:02:06.420 --> 00:02:09.140

e que  a compreenso da lista.



27

00:02:09.180 --> 00:02:18.150

Essencialmente semelhante a uma linha para loop e se verificarmos a minha lista com a minha nova lista, obtemos



28

00:02:18.150 --> 00:02:19.590

os mesmos resultados.



29

00:02:19.620 --> 00:02:22.430

Ento, vamos percorrer mais alguns exemplos.



30

00:02:22.440 --> 00:02:26.410

Vamos imaginar que queramos obter uma lista de vrios nmeros quadrados.



31

00:02:26.490 --> 00:02:40.570

O que eu poderia fazer  dizer que quadrados  igual a aqui, eu vou dizer X ao poder de dois para x em alcance.



32

00:02:40.730 --> 00:02:45.750

Podemos dizer de zero a 11 e, em seguida, se eu der uma olhada, d uma olhada no que  quadrados.



33

00:02:45.820 --> 00:02:47.640

So esses nmeros Quadrados.



34

00:02:47.660 --> 00:02:49.960

Ento so os nmeros e o intervalo de 0 a 11.



35

00:02:50.000 --> 00:02:51.520

Ento o poder de dois.



36

00:02:51.530 --> 00:02:59.690

Ento, novamente, a sintaxe geral  elemento para elementos em algum tipo de intervalo itervel ou



37

00:02:59.780 --> 00:03:02.660

uma lista ou outra cadeia etc. Ento vamos mostrar outro exemplo chamado evens.



38

00:03:02.690 --> 00:03:05.620

E aqui vamos criar uma lista de nmeros pares diro x para x no intervalo de 0 a 10.



39

00:03:06.370 --> 00:03:15.380

E se corremos isso e checamos uniformes, ns recuperamos os nmeros reais, a fim de obter apenas os nmeros pares que



40

00:03:15.550 --> 00:03:22.450

precisamos para adicionar algum tipo de instruo if e a declarao if, vamos dizer  se



41

00:03:22.460 --> 00:03:29.640

X por cento assina 2 e isso  mod 2 ou mdulo de operador  igual a zero.



42

00:03:29.650 --> 00:03:35.240

E ento eu s recebo os nmeros pares.



43

00:03:35.890 --> 00:03:37.930

Ento, vamos explicar rapidamente o que o operador inteligente pode fazer.



44

00:03:37.930 --> 00:03:40.940

Caso voc no tenha visto antes, o que a maioria dos operadores faz  retornar o restante aps a diviso.



45

00:03:41.170 --> 00:03:47.400

Ento voc pode imaginar que quatro dividido por trs  um ponto trs



46

00:03:47.620 --> 00:03:55.230

a trs trs, mas o restante  um porque trs vai para quatro uma vez.



47

00:03:55.410 --> 00:03:58.950

Restante 1.



48

00:03:58.960 --> 00:04:00.230

Ento, se voc



49

00:04:00.250 --> 00:04:09.680

disser para o mod 3, voc receber de volta o valor 1 se voc disser que mais cinco trs que voc permaneceu so dois.



50

00:04:09.680 --> 00:04:10.470

E se



51

00:04:10.880 --> 00:04:17.690

voc disser seis e trs, voc ter o zero restante porque trs vo para seis uniformemente duas vezes sem o restante.



52

00:04:17.690 --> 00:04:18.770

E esta funo maade permite que



53

00:04:18.770 --> 00:04:24.560

voc verifique os nmeros, mesmo dizendo maade para verificar se  igual a zero, porque qualquer nmero que seja mesmo quando voc verificar o maade contra dois, no deve ter nenhum resto.



54

00:04:24.560 --> 00:04:32.220

E isso  para voc poder checar por alguma coisa.



55

00:04:32.220 --> 00:04:33.860

At.



56

00:04:33.920 --> 00:04:35.310

Ento, esse  outro exemplo de compreenso de lista.



57

00:04:35.320 --> 00:04:38.230

E finalmente voc tambm pode fazer uma declarao if else em uma compreenso de lista.



58

00:04:38.560 --> 00:04:42.630

Mas tenha em mente que, em certo ponto, voc estar realmente sacrificando a legibilidade.



59

00:04:42.640 --> 00:04:46.960

E isso tambm  uma grande parte do Python.



60

00:04:47.000 --> 00:04:48.810

Ento, se voc est tendo problemas para descobrir como colocar algo em uma compreenso da lista.



61

00:04:49.000 --> 00:04:53.310

Apenas use um loop for.



62

00:04:53.440 --> 00:04:54.800

 quase sempre to eficiente quanto a compreenso da lista.



63

00:04:54.820 --> 00:04:58.140

Voc se ver usando as compreenses de listas  medida que se torna



64

00:04:58.150 --> 00:05:02.710

mais avanado em Python, elas se sentiro foradas a constantemente precisar us-las enquanto voc est aprendendo sobre Python.



65

00:05:02.770 --> 00:05:06.520

Ento, vamos mostrar um ltimo exemplo mais complexo.



66

00:05:06.610 --> 00:05:09.070

Vai dizer minha lista x se x mod 2  igual a zero mais nem mesmo string para x no intervalo de 0 a 10.



67

00:05:10.140 --> 00:05:25.480

E este tipo de sintaxe  um pouco estranho no incio para aprender, porque voc acabou de aprender que, se voc tiver apenas uma instruo if, a instruo



68

00:05:25.720 --> 00:05:31.120

if vem depois desse elemento para element na instruo iterable.



69

00:05:31.120 --> 00:05:37.370

No entanto, se voc estiver usando uma declarao if else que realmente



70

00:05:37.390 --> 00:05:44.530

precisa vir primeiro antes de dizer por itervel em ou quatro elementos em itervel.



71

00:05:44.620 --> 00:05:46.810

Ento  um pouco estranho



72

00:05:46.900 --> 00:05:52.810

comear a aprender a fazer tarefas mais complexas no formato de compreenso de lista.



73

00:05:52.810 --> 00:05:53.510

E s para



74

00:05:53.860 --> 00:05:58.120

deixar bem claro se voc est tendo problemas para descobrir como fazer algo em uma compreenso de lista,



75

00:05:58.120 --> 00:06:03.220

v em frente e use o loop for que usamos no comeo, porque isso sempre funcionar e sempre ser muito mais legvel.



76

00:06:03.250 --> 00:06:06.380

Ento, para verificar a minha lista agora eu tenho infinitas e, em seguida, string no  mesmo onde mod para o no igual a zero.



77

00:06:06.400 --> 00:06:14.310

Tudo bem,  isso para as compreenses da lista.



78

00:06:14.320 --> 00:06:16.580

Voc ver que eles so usados com frequncia em pequenos trabalhos rpidos e no cdigo de outras pessoas.



79

00:06:16.660 --> 00:06:20.560

Por isso,  importante que voc aprenda a l-los,



80

00:06:20.680 --> 00:06:25.360

mas no se preocupe muito em ter que escrev-los sempre.



81

00:06:25.360 --> 00:06:26.630

Excelente trabalho at agora.



82

00:06:26.710 --> 00:06:27.880

Eu vou te ver na prxima aula.



83

00:06:27.910 --> 00:06:29.000

&nbsp;



