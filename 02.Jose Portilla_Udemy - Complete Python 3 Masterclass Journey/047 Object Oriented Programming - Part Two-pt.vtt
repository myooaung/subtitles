WEBVTT
1

00:00:04.660 --> 00:00:10.480

Bem-vindo de volta recrutamento em nossa lio anterior, discutimos como criar uma classe simples e, em seguida,



2

00:00:10.480 --> 00:00:17.230

adicionar atributos que classe agora  hora de discutir mtodos mtodos ou funes definidas dentro do corpo de uma classe



3

00:00:17.230 --> 00:00:21.890

e eles so usados para realizar operaes com os atributos do nosso objetos.



4

00:00:21.910 --> 00:00:26.950

Basicamente, voc pode pensar em mtodos como aquelas funes que atuam em um objeto que tambm levam



5

00:00:26.950 --> 00:00:30.830

o prprio objeto em considerao atravs do uso desse argumento de palavra-chave auto.



6

00:00:31.060 --> 00:00:40.140

Vamos passar por isso com um exemplo de outra classe que chamaremos de crculo de classe e, em seguida, vamos criar um



7

00:00:40.140 --> 00:00:42.040

atributo de objeto de classe.



8

00:00:42.060 --> 00:00:48.510

Lembre-se de discusso anterior o atributo de objeto de classe vai ser algum atributo que ser



9

00:00:48.510 --> 00:00:51.080

verdadeiro para qualquer instncia da classe.



10

00:00:51.090 --> 00:00:52.240

Ento, para o agente.



11

00:00:52.290 --> 00:00:54.970

Todos os agentes vo estar vivendo no planeta Terra.



12

00:00:54.990 --> 00:00:59.910

Ento, se rolarmos para baixo, algo que pode ser verdade para qualquer crculo  o fato de



13

00:00:59.910 --> 00:01:04.890

que no podemos estimar pi como 1 ou 3. 1 por enquanto no importa o tamanho do seu crculo.



14

00:01:04.890 --> 00:01:06.290

Isso sempre ser constante.



15

00:01:06.330 --> 00:01:14.040

Ento, teremos isso como nosso atributo de objeto de classe e, em seguida, criaremos nosso mtodo ou mtodo



16

00:01:14.370 --> 00:01:16.790

de instanciao e falaremos "eu".



17

00:01:16.800 --> 00:01:18.950

Ento, ns sempre passamos nessa palavra-chave.



18

00:01:19.140 --> 00:01:24.900

Basta virar o Python para que este seja um mtodo relacionado a esse objeto.



19

00:01:25.100 --> 00:01:38.920

E ento ns vamos fazer aqui  ter um raio e depois diremos resolver o raio  igual ao raio.



20

00:01:39.000 --> 00:01:40.810

Ento, ns temos esse mtodo de crculo muito simples.



21

00:01:40.830 --> 00:01:46.680

Ento, se eu disser que meu crculo  uma instncia da classe circle.



22

00:01:47.150 --> 00:01:50.050

Agora eu tenho que ter parnteses prximos aqui.



23

00:01:50.990 --> 00:01:53.150

Diz que falta o raio.



24

00:01:53.150 --> 00:01:54.620

Ento, vamos fornecer um.



25

00:01:54.650 --> 00:01:57.160

V em frente e diga raios para.



26

00:01:57.350 --> 00:02:03.470

E ento, se eu verificar o raio do meu crculo, ele retorna.



27

00:02:03.810 --> 00:02:06.650

Agora, digamos que nem sempre quero ter que fornecer alguma coisa.



28

00:02:06.690 --> 00:02:09.690

Talvez eu queira um raio padro no caso de eu no fornecer um.



29

00:02:09.690 --> 00:02:12.270

Ento tudo que tenho a fazer aqui  dizer que  igual a.



30

00:02:12.390 --> 00:02:14.540

E podemos definir o raio padro como 1.



31

00:02:14.610 --> 00:02:21.240

Ento, quando eu leio a multa que a classe circle inclui esse valor padro, eu posso ento executar novamente e o



32

00:02:21.240 --> 00:02:22.640

raio ser padronizado para 1.



33

00:02:22.750 --> 00:02:27.600

Ento esse  um atributo de objeto de classe e esse  o nico atributo que nosso crculo precisa  de um raio.



34

00:02:27.600 --> 00:02:33.960

Agora vamos ter um mtodo e um mtodo muito parecido com uma



35

00:02:33.960 --> 00:02:41.700

funo, exceto que ele est dentro dessa classe no primeiro parmetro que vai ser auto.



36

00:02:41.920 --> 00:02:45.270

E vamos criar um mtodo que calcule a rea de um crculo.



37

00:02:45.340 --> 00:02:54.690

Ento, ele retornar tempos de raio autodidatas vezes auto-ensinadas.



38

00:02:54.700 --> 00:02:59.740

Ento, pire ao quadrado  a rea de um crculo em uma ordem para chamar o atributo de objeto de classe.



39

00:02:59.770 --> 00:03:05.320

Em vez de chamar pi autodidata, podemos ir em frente e chamar circle that pi para indicar que  um



40

00:03:05.380 --> 00:03:06.700

atributo de objeto de classe.



41

00:03:06.940 --> 00:03:12.250

E vou executar essa clula novamente para adicionar essas adies a uma classe de crculo.



42

00:03:12.340 --> 00:03:18.610

Execute isso de novo e ento eu posso chamar radius mas ele tambm pode chamar meu crculo e ento se



43

00:03:18.670 --> 00:03:22.190

eu clicar em tab aqui eu tenho Area PI e tambm radius.



44

00:03:22.300 --> 00:03:28.040

Quero dizer rea e se eu apenas executar uma rea como este mal dizer mtodo vinculado.



45

00:03:28.230 --> 00:03:31.800

Uma rea de crculo no objeto de crculo neste momento na memria.



46

00:03:32.010 --> 00:03:34.350

Se eu quiser execut-lo assim como eu teria uma funo.



47

00:03:34.350 --> 00:03:38.370

Eu preciso adicionar esse parntese de fechamento aberto e, em seguida, ele retorna a rea.



48

00:03:38.430 --> 00:03:42.930

Neste caso, 1 vez 1 vez 3, 1 4 ser apenas 3 pontos 1 4.



49

00:03:42.990 --> 00:03:46.620

Ento vamos criar um crculo para um raio de 3 para que eu possa ver os resultados.



50

00:03:46.620 --> 00:03:52.200

 um raio de 3 significa que a rea  de 28 pontos para 6 ou mais ou menos sobre isso.



51

00:03:52.230 --> 00:03:54.590

Ento, vamos explicar a sintaxe um pouco mais.



52

00:03:54.840 --> 00:03:56.460

Este  um mtodo bem aqui.



53

00:03:56.490 --> 00:04:02.070

Este mtodo de rea sabe que  um mtodo em vez de uma funo normal porque passamos



54

00:04:02.070 --> 00:04:07.350

naquela palavra-chave sulf que essencialmente diz que esta no  apenas uma funo que estamos definindo.



55

00:04:07.350 --> 00:04:15.000

Este  um mtodo que vai se referir a esta classe de crculo real e, em seguida, se quisermos usar



56

00:04:15.090 --> 00:04:20.920

os atributos desta iterao atual do crculo, chamamos raio autodidata em vez de apenas chamar raio.



57

00:04:20.940 --> 00:04:26.590

E a razo pela qual fazemos isso  deixar o Python saber que eu estou falando sobre o raio



58

00:04:26.880 --> 00:04:32.760

que foi definido aqui quando inicializamos nossa verso do crculo e ento multiplicamos novamente pelo raio e ento chamamos o



59

00:04:32.760 --> 00:04:33.680

crculo de pi.



60

00:04:33.750 --> 00:04:36.220

Qual  esse atributo de objeto de classe.



61

00:04:36.240 --> 00:04:44.040

Vamos em frente e mostrar outro exemplo, criando um mtodo de permetro, para que possamos dizer que o



62

00:04:45.060 --> 00:04:50.850

permetro F e o permetro de um crculo so apenas 2 vezes o raio.



63

00:04:50.850 --> 00:04:53.190

Note aqui que eu tenho que usar raio autodidata.



64

00:04:53.190 --> 00:04:56.160

Caso contrrio, no saber de que raio estou falando.



65

00:04:56.160 --> 00:04:58.010

E ento eu posso dizer circulo pi.



66

00:04:58.080 --> 00:05:05.700

Se eu precisar usar o atributo de objeto de classe, o PI aparecer para que quando eu executar isso tudo de novo,



67

00:05:07.110 --> 00:05:13.140

eu possa dizer meu crculo, voc pode chamar permetro e lembre-se se eu apenas chamar permetro como este



68

00:05:13.140 --> 00:05:17.320

ir reportar o mtodo que eu preciso relgio ou mtodo de permetro.



69

00:05:17.400 --> 00:05:19.700

Corra e pegue o permetro do meu crculo.



70

00:05:19.770 --> 00:05:21.090

Ou pelo menos uma estimativa disso.



71

00:05:22.120 --> 00:05:26.950

Agora, esses mtodos so bastante simples, eles s usam o argumento prprio, mas voc tambm



72

00:05:27.370 --> 00:05:30.100

pode ter parmetros adicionais, desde que iniciem com self.



73

00:05:30.130 --> 00:05:40.260

Ento, digamos que eu quisesse relatar um mtodo que seria necessrio e eu poderia



74

00:05:40.260 --> 00:05:48.210

ter outros parmetros, como, digamos, nome e eu posso dizer relatrios



75

00:05:51.060 --> 00:05:52.250

de retorno.



76

00:05:53.520 --> 00:06:03.270

E ento podemos dizer o nome do formato e se eu executar novamente esse permetro de rea de raio, posso dizer minha aba



77

00:06:04.110 --> 00:06:04.750

de crculo.



78

00:06:04.770 --> 00:06:13.440

Repare que eu relatei algo e, ento, isso vai esperar que algo seja relatado, para que eu possa dizer John



79

00:06:13.450 --> 00:06:15.220

e eu direi John.



80

00:06:15.230 --> 00:06:21.470

Ento  assim que voc pode ter mtodos que tambm Ticken parmetros porque lembre-se de outros objetos, como



81

00:06:21.470 --> 00:06:26.900

a lista que criamos anteriormente, se voltarmos at aqui no topo alguns desses mtodos necessrios para



82

00:06:26.900 --> 00:06:31.610

ter em parmetros que voc forneceu, como acrescentar um novo nmero ou contando quantas



83

00:06:31.610 --> 00:06:32.680

vezes isso ocorreu.



84

00:06:32.690 --> 00:06:38.120

Ento voc tem opes l para adicionar parmetros adicionais, onde voc deve sempre comear, no entanto, 



85

00:06:38.390 --> 00:06:44.210

que a palavra-chave self que basicamente diz Python novamente que este  um mtodo no apenas alguma funo



86

00:06:44.570 --> 00:06:47.420

 um mtodo que est ligado a si mesmo.



87

00:06:47.450 --> 00:06:49.920

Aqui na turma do crculo.



88

00:06:49.930 --> 00:06:52.930

Tudo bem para que a notao seja muito importante.



89

00:06:52.930 --> 00:06:54.160

Vamos em frente e mostrar a voc.



90

00:06:54.160 --> 00:06:59.850

Herana de herana  uma maneira de formar novas classes usando classes que j foram definidas.



91

00:07:00.740 --> 00:07:03.820

Muitas vezes voc vai ter aulas semelhantes.



92

00:07:03.860 --> 00:07:08.750

Voc no precisa repetir todo o seu trabalho para poder usar a herana para formar uma nova



93

00:07:08.750 --> 00:07:10.310

classe baseada em trabalhos anteriores.



94

00:07:10.520 --> 00:07:18.400

Para no fazer isso, vamos construir uma classe e essa classe ser chamada. A



95

00:07:19.250 --> 00:07:30.700

pessoa ter um mtodo em si prprio, primeiro nome de sublinhado, ltimo nome de sublinhado e criar os atributos tambm.



96

00:07:30.720 --> 00:07:37.380

Ento eu vou dizer que o primeiro nome sulf  igual ao primeiro nome que voc passa e ento vamos dizer que



97

00:07:37.380 --> 00:07:39.390

o sobrenome autodidata  igual ao sobrenome.



98

00:07:39.420 --> 00:07:40.210

Pasan.



99

00:07:40.680 --> 00:07:45.940

E mais tarde, vamos discutir por que esse mtodo init tem esse conjunto de sublinhados duplos indica que



100

00:07:45.940 --> 00:07:49.210

 um mtodo especial, ento discutiremos mtodos especiais em apenas um pouquinho.



101

00:07:49.260 --> 00:07:50.160

Mas por agora.



102

00:07:50.220 --> 00:08:00.600

Apenas certifique-se de que a sua sintaxe corresponde e, em seguida, tambm informaremos o relatrio E-F.



103

00:08:01.070 --> 00:08:03.040

E isso vai imprimir algo.



104

00:08:03.050 --> 00:08:04.300

Repare que no estou retornando nada.



105

00:08:04.310 --> 00:08:05.670

Eu s vou imprimir algo.



106

00:08:05.900 --> 00:08:14.460

No diga que eu sou e vamos dizer os formatos e vamos dizer o primeiro nome autodidata.



107

00:08:14.720 --> 00:08:17.540

Sobrenome autodidata.



108

00:08:17.750 --> 00:08:25.370

Ento, se eu criar uma instncia dessa pessoa, eu preciso passar um primeiro nome, ento vou dizer que James passa



109

00:08:25.370 --> 00:08:26.120

um sobrenome.



110

00:08:26.140 --> 00:08:33.570

Bond e eu podemos dizer o relatrio e eu executo o mtodo do relatrio e imprimo.



111

00:08:33.630 --> 00:08:34.800

Eu sou James Bond.



112

00:08:35.040 --> 00:08:40.740

Vamos entrar em mais um mtodo para isso que diz o F Hello.



113

00:08:41.780 --> 00:08:42.990

Auto.



114

00:08:43.180 --> 00:08:48.040

E apenas imprime Ol.



115

00:08:48.240 --> 00:08:55.100

Ento eu tenho essa pessoa chamada James Bond que relata quem ele  e ele tambm pode dizer ol.



116

00:08:55.110 --> 00:08:58.460

Agora a segunda aula que vamos fazer  chamada agente.



117

00:08:58.680 --> 00:09:00.950

Agora todo agente pode ser uma pessoa tambm.



118

00:09:00.960 --> 00:09:09.180

Ento pode ser legal se os agentes puderem relatar quem so e se os agentes puderem dizer ol, quem dir o agente de classe



119

00:09:09.660 --> 00:09:14.550

e agora vamos transmitir algo aqui que vamos passar na aula de pessoa porque



120

00:09:14.610 --> 00:09:17.930

eu quero poder usar tudo o que eu trabalhei aqui.



121

00:09:17.940 --> 00:09:23.460

Eu quero ser capaz de usar este mtodo de relatrio ou usar este mtodo de hello e para fazer isso



122

00:09:23.610 --> 00:09:30.650

eu posso herdar a classe e isso s vezes tambm  conhecido como estendendo a classe de pessoa para a classe de agente dependendo de qual



123

00:09:30.650 --> 00:09:31.910

maneira voc pensa sobre isso.



124

00:09:31.910 --> 00:09:36.160

Se o agente est herdando de pessoa ou pessoa, est se estendendo aos agentes.



125

00:09:36.230 --> 00:09:43.010

De qualquer forma, vamos passar a pessoa para a classe agente, vamos ter o nosso mtodo



126

00:09:43.870 --> 00:09:55.430

novamente aqui e vamos dizer self O primeiro nome da vrgula self e, em seguida, o ltimo nome e um agente tambm deve ter um nome de cdigo



127

00:09:55.430 --> 00:09:56.270

ento ns



128

00:09:59.270 --> 00:10:00.300

vamos ter isso.



129

00:10:00.350 --> 00:10:08.020

E ento o que vamos fazer aqui  dentro desta instanciao ou em um mtodo eu vou



130

00:10:08.020 --> 00:10:17.960

dizer pessoa e eu vou chamar esse mtodo init do original a pessoa ento eu vou dizer auto nome prprio sobrenome e



131

00:10:17.960 --> 00:10:23.610

ento eu direi auto cdigo nome  igual ao nome do cdigo.



132

00:10:23.610 --> 00:10:25.970

Agora a sintaxe pode ser confusa no comeo.



133

00:10:26.010 --> 00:10:28.040

Vamos em frente e definir o que est acontecendo.



134

00:10:28.050 --> 00:10:29.160

Cada uma dessas linhas



135

00:10:29.340 --> 00:10:34.020

A primeira coisa que estamos fazendo  do Agente. Estamos herdando a classe pessoa.



136

00:10:34.200 --> 00:10:38.130

Ento, queremos usar esses mtodos report e hello da classe person.



137

00:10:38.220 --> 00:10:39.930

Ento, vamos em frente e herdar isso.



138

00:10:39.960 --> 00:10:40.760

Observe aqui.



139

00:10:40.860 --> 00:10:46.090

Oi eu no estou chamando de abrir e fechar parnteses depois de pessoa eu s estou passando em pessoa Street sozinho.



140

00:10:46.170 --> 00:10:52.200

Ento ns temos nosso prprio mtodo para Agente e ele assume um primeiro nome um sobrenome e um nome de



141

00:10:52.200 --> 00:10:58.020

cdigo ento o que faz  usar aquele primeiro nome e sobrenome contanto que instancie uma pessoa chamando e



142

00:10:58.110 --> 00:11:04.710

pessoa que nisto ego primeiro nome e ltimo nome e, em seguida, os parmetros extras que so especficos de um agente em



143

00:11:04.770 --> 00:11:06.340

vez de apenas uma pessoa.



144

00:11:06.360 --> 00:11:11.160

Ns vamos em frente e adicionamos um autodidata e, em seguida, qualquer que seja o nome do atributo que queremos combinar com



145

00:11:11.160 --> 00:11:12.600

o privado que  passado ento.



146

00:11:12.840 --> 00:11:15.470

Ento essa  a parte principal da herana.



147

00:11:15.720 --> 00:11:24.150

E se eu rodar isso e ele criar um novo agente, ento digamos que os agentes chamaremos de varivel x no so agentes e



148

00:11:24.150 --> 00:11:27.170

eles tm um nome que daremos primeiro nome.



149

00:11:27.180 --> 00:11:39.790

Alan dir que seu ltimo nome est em turn e seu codinome  heri, ento se ns dissermos x ponto e apertarmos TAB podemos pegar os



150

00:11:40.150 --> 00:11:47.110

atributos codificar nome primeiro nome ltimo nome mas ento ns tambm podemos dizer ol



151

00:11:47.110 --> 00:11:51.320

e ns tambm podemos mandar dizer d um relatrio.



152

00:11:52.000 --> 00:12:00.990

Eu sou Alan Turing Ento observe como fomos capazes de herdar o mtodo hello e o mtodo de relatrio



153

00:12:00.990 --> 00:12:02.490

da classe person.



154

00:12:02.520 --> 00:12:08.600

Agora, como esse  um agente, provavelmente no queremos que eles digam o nome verdadeiro apenas fazendo uma denncia.



155

00:12:08.820 --> 00:12:15.660

Ento, se eu quiser sobrescrever um mtodo que herdei, posso simplesmente vir at aqui e ler



156

00:12:15.660 --> 00:12:21.740

a multa que o mtodo que eu posso dizer se os relatos se passarem.



157

00:12:21.810 --> 00:12:25.920

E vou sobrescrever o eu ou o mtodo de relatrio que veio da pessoa.



158

00:12:26.220 --> 00:12:28.660

Ento, em vez de informar meu nome, vou imprimir.



159

00:12:28.810 --> 00:12:34.190

Desculpe eu no posso te dizer meu nome verdadeiro.



160

00:12:36.530 --> 00:12:40.290

Prncipe, mas voc pode me ligar.



161

00:12:40.530 --> 00:12:47.880

E ento vamos formatar em seu nome de cdigo, digamos, o nome de cdigo autodidata do formato, para que possamos criar os agentes



162

00:12:47.880 --> 00:12:49.610

que eles possam dizer ol.



163

00:12:49.770 --> 00:12:54.240

Exceto agora, quando voc pede que eles denunciem, em vez de informar o nome deles,



164

00:12:54.330 --> 00:12:57.070

conseguimos substituir o mtodo de relatrio da pessoa com xito.



165

00:12:57.210 --> 00:12:59.490

E agora temos nosso prprio mtodo de relatrio para asiticos.



166

00:12:59.580 --> 00:13:03.360

Desculpe, no posso te dizer meu nome real, mas voc pode me chamar de heri.



167

00:13:03.360 --> 00:13:10.770

Ento, alm de herdar outros mtodos desta classe e sermos capazes de sobrescrev-los, tambm podemos adicionar novos



168

00:13:10.800 --> 00:13:17.100

mtodos para que possamos adicionar um novo mtodo chamado true name caso queiramos relatar



169

00:13:17.100 --> 00:13:18.270

nosso nome verdadeiro.



170

00:13:18.270 --> 00:13:22.200

E isso pode levar a palavra-chave self e tambm pode ter uma senha.



171

00:13:22.190 --> 00:13:26.550

Ento voc precisa fornecer uma senha para aprender o nome real desse agente.



172

00:13:26.550 --> 00:13:37.860

Ento diga se o cdigo de acesso  igual a um 2 trs impresses cdigo de passagem correto e, em seguida, ento podemos ir em frente



173

00:13:37.860 --> 00:13:39.930

e basta copiar isso aqui.



174

00:13:39.930 --> 00:13:46.190

O relatrio real dos nomes copiar isso aqui.



175

00:13:47.740 --> 00:13:48.720

Cole isso em.



176

00:13:48.820 --> 00:13:52.130

Ento, isso  o passado poderia fornecer  um a trs  correto.



177

00:13:52.210 --> 00:13:57.400

Outra coisa que vamos fazer  simplesmente dizer Desculpe, no posso lhe dizer meu nome real, mas em vez de



178

00:13:57.400 --> 00:14:00.640

copiar e colar tudo o que temos a fazer  dizer autodidata.



179

00:14:00.880 --> 00:14:02.120

Ligue para o mtodo de relatrio.



180

00:14:02.140 --> 00:14:09.130

Ento, isso apenas diz a essa classe que, se essa senha fornecida no for 1 2 3, basta executar seu prprio



181

00:14:09.130 --> 00:14:09.960

mtodo de relatrio.



182

00:14:10.030 --> 00:14:15.340

E isso  o que  to importante sobre o uso da palavra de auto-chave, seja um atributo



183

00:14:15.340 --> 00:14:23.020

ou uma chamada de mtodo, que o Python saiba que voc est se referindo a seus prprios mtodos e no a alguma outra funo no namespace global.



184

00:14:23.020 --> 00:14:29.680

Ento, agora, se eu executar isso, vamos nos certificar de que temos a sintaxe correta, precisamos que isso seja igual a igual.



185

00:14:29.680 --> 00:14:30.310

Agora vamos rodar isso.



186

00:14:30.310 --> 00:14:31.270

Aqui vamos ns.



187

00:14:31.300 --> 00:14:33.780

Ento Alan Turing codinome Hero.



188

00:14:33.940 --> 00:14:36.560

Eles podem dizer ol se pedirmos que eles relatem.



189

00:14:36.880 --> 00:14:44.990

Eles no vo te dizer o nome verdadeiro deles se pedirmos a ele, digamos o nome verdadeiro e passarmos o cdigo errado, eles diro, desculpe, no posso dizer



190

00:14:45.560 --> 00:14:48.250

que meu nome real pode me chamar de heri.



191

00:14:48.260 --> 00:14:55.100

Ento, eles continuam chamando um relatrio se eu fizer um pasan como o cdigo correto, embora eles digam o cdigo de passagem correto.



192

00:14:55.100 --> 00:14:56.780

Eu sou Alan Turing.



193

00:14:56.870 --> 00:15:02.210

E, finalmente, o que precisamos discutir so mtodos especiais e tambm mtodos privados.



194

00:15:02.210 --> 00:15:07.940

Vimos alguns mtodos especiais especificamente nesse mtodo e ele  denotado como especial devido ao



195

00:15:08.000 --> 00:15:09.860

seu conjunto duplo de sublinhados.



196

00:15:09.860 --> 00:15:14.870

Ento, na prxima lio, vamos terminar nossa discusso de programao orientada a objetos,



197

00:15:14.870 --> 00:15:17.750

falando sobre mtodos privados e mtodos especiais.



198

00:15:17.810 --> 00:15:18.410

Ns vamos ver l.



