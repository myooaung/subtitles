1
00:00:02,040 --> 00:00:05,370
[Autogenerated] So for the last step of this life coaching session,

2
00:00:05,370 --> 00:00:10,940
I would like to generate an executable jar off our little project.

3
00:00:10,940 --> 00:00:16,010
For that, we need to go to the pop up menu of the project.

4
00:00:16,010 --> 00:00:20,510
Chose the export option here,

5
00:00:20,510 --> 00:00:26,780
select the Java Noda from this list and the jar file here.

6
00:00:26,780 --> 00:00:30,630
So what we're going to do is export our project in a

7
00:00:30,630 --> 00:00:33,570
jar file and make it executable.

8
00:00:33,570 --> 00:00:38,010
Notice that you also have a rentable jar file as an option.

9
00:00:38,010 --> 00:00:41,610
And this is not the option we are going to choose like

10
00:00:41,610 --> 00:00:44,610
next from this panel we can select.

11
00:00:44,610 --> 00:00:46,940
The resource is we want to export.

12
00:00:46,940 --> 00:00:49,750
So what we want to export is of course,

13
00:00:49,750 --> 00:00:55,540
the classes from the aga dot Omar package off first project.

14
00:00:55,540 --> 00:00:59,880
We do not want to export the dot class path on the DOT project.

15
00:00:59,880 --> 00:01:05,200
We will see those fires later in his calls and from the message service.

16
00:01:05,200 --> 00:01:07,200
Since this is a dependency,

17
00:01:07,200 --> 00:01:12,300
we want this package the or dot Come out that service package.

18
00:01:12,300 --> 00:01:12,850
Of course,

19
00:01:12,850 --> 00:01:19,640
we do not want the SLC dash test package in which we put our test classes.

20
00:01:19,640 --> 00:01:23,640
We are going to export this in this jar file here.

21
00:01:23,640 --> 00:01:30,240
First dash project slash jobs slash first project dot Jaw compressed

22
00:01:30,240 --> 00:01:33,970
the content of the job fighter All this is correct.

23
00:01:33,970 --> 00:01:35,530
Pick next here.

24
00:01:35,530 --> 00:01:37,670
All the default options are correct.

25
00:01:37,670 --> 00:01:40,310
We are not going to launch the construction of the job

26
00:01:40,310 --> 00:01:44,240
fighter if we have compiled errors anyway.

27
00:01:44,240 --> 00:01:48,890
And we want to say the description of the job in our first project

28
00:01:48,890 --> 00:01:55,770
here First project and put it as first dash project.

29
00:01:55,770 --> 00:02:04,740
OK, eclipse as the job desk extension to this fire automatically click next.

30
00:02:04,740 --> 00:02:08,570
Indeed, we want to generate a manifest for this job.

31
00:02:08,570 --> 00:02:13,430
Feiler The manifest is the file inside the jar fire that is

32
00:02:13,430 --> 00:02:15,780
going to describe the content off the job.

33
00:02:15,780 --> 00:02:22,630
Filer, if you want to seal this job, you can also choose this option here.

34
00:02:22,630 --> 00:02:27,840
And we are going to select a main class to make this jaw rentable.

35
00:02:27,840 --> 00:02:28,940
Okay.

36
00:02:28,940 --> 00:02:29,210
Here.

37
00:02:29,210 --> 00:02:34,420
The main class will be declared in the manifest for us letters.

38
00:02:34,420 --> 00:02:35,800
Click Finish.

39
00:02:35,800 --> 00:02:40,110
Eclipse is going to create this location for us automatically.

40
00:02:40,110 --> 00:02:42,740
Let us refresh this project.

41
00:02:42,740 --> 00:02:47,800
Eclipse has created this job folder inside the project with

42
00:02:47,800 --> 00:02:52,140
the first project dot job fire in it.

43
00:02:52,140 --> 00:02:57,630
We can open it using a win ra in it.

44
00:02:57,630 --> 00:03:02,490
We have indeed the order from our l A world class and

45
00:03:02,490 --> 00:03:05,850
service message service that class.

46
00:03:05,850 --> 00:03:09,730
So we have all the classes we need for my to project

47
00:03:09,730 --> 00:03:13,380
first project and message service.

48
00:03:13,380 --> 00:03:20,080
And if we check in meter dash in, if we have the manifest that MF class,

49
00:03:20,080 --> 00:03:26,970
that is you it and inside the main class as being a properly declared,

50
00:03:26,970 --> 00:03:32,640
let us check the properties of the job with the ELT enter short cat.

51
00:03:32,640 --> 00:03:37,890
Here we have a butternut that would show this job in a system explorer.

52
00:03:37,890 --> 00:03:41,920
We can then open a common Tuller.

53
00:03:41,920 --> 00:03:53,000
Let us run, eat Java dash jar first project the job and indeed this file is correctly run.

