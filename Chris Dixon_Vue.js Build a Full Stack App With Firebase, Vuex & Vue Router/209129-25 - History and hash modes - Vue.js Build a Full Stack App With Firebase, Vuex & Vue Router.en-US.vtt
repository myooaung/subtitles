WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.070 --> 00:00:05.805
You may have already noticed that since we began to use the view router,

00:00:05.805 --> 00:00:09.445
there has been a hash added to the end of the URL.

00:00:09.445 --> 00:00:11.805
This is because by default,

00:00:11.805 --> 00:00:15.690
the router is set to hash mode and the reason this hash is

00:00:15.690 --> 00:00:20.305
added is to avoid a page reload when a route changes.

00:00:20.305 --> 00:00:24.060
I mentioned earlier that when using single-page applications,

00:00:24.060 --> 00:00:28.620
we only want to send the request to the server for the main index page only.

00:00:28.620 --> 00:00:31.890
Then the routes takes over from there and switches

00:00:31.890 --> 00:00:35.415
between components without sending server requests.

00:00:35.415 --> 00:00:40.760
This mode is useful for our single page applications, but generally,

00:00:40.760 --> 00:00:43.820
we don't want to have a hash inside the URL,

00:00:43.820 --> 00:00:46.615
as it would look much nicer without one.

00:00:46.615 --> 00:00:49.880
To remove the hash we can change the hash mode to

00:00:49.880 --> 00:00:55.050
history mode and we can do this over in the main.js file.

00:00:56.290 --> 00:01:01.585
Let's head over to there and we can add history mode to our router objects.

00:01:01.585 --> 00:01:06.065
Just underneath our router object where we added our routes,

00:01:06.065 --> 00:01:11.330
we can add the mode setting and change it to be a string called History.

00:01:11.330 --> 00:01:16.505
History mode takes advantage of the HTML5 history API,

00:01:16.505 --> 00:01:22.225
which allows us to change a particular URL without needing to refresh.

00:01:22.225 --> 00:01:25.730
We didn't need to add the hash mode before to

00:01:25.730 --> 00:01:29.360
our view router instance because this is default.

00:01:29.360 --> 00:01:33.710
Now if we save this file and go over to our application,

00:01:33.710 --> 00:01:36.035
click on the Home link.

00:01:36.035 --> 00:01:42.130
We now see the hash has been removed and the same if we click on our over links to.

00:01:42.130 --> 00:01:43.955
This now looks better,

00:01:43.955 --> 00:01:47.810
but also creates a small problem we need to work around.

00:01:47.810 --> 00:01:52.945
We also need to configure our server to handle this new setup.

00:01:52.945 --> 00:01:57.920
Our server needs to return the index or HTML in all cases,

00:01:57.920 --> 00:02:00.730
including any 404 errors.

00:02:00.730 --> 00:02:02.550
Once this has been returned,

00:02:02.550 --> 00:02:08.285
the router takes over and handles the switching between components on the front end.

00:02:08.285 --> 00:02:11.685
If you do this on a real production app,

00:02:11.685 --> 00:02:17.830
you will find some server configuration examples in the vue router documentation.

00:02:17.830 --> 00:02:24.965
If you go to the vue router documentation and inside our HTML5 history mode option.

00:02:24.965 --> 00:02:26.690
Here, if we scroll down, we could find

00:02:26.690 --> 00:02:31.700
some example server configurations where we can see these examples for different types of

00:02:31.700 --> 00:02:35.030
server and this is something which we'll come back

00:02:35.030 --> 00:02:38.540
to later on when dealing with hosting but for now,

00:02:38.540 --> 00:02:43.775
this is where you can find some examples of configurations if using a different server.

00:02:43.775 --> 00:02:48.260
The last thing to take care of now is the index.html page,

00:02:48.260 --> 00:02:51.875
which is always returned from the server so we don't get

00:02:51.875 --> 00:02:57.580
any 404 errors reported by the server when a URL is not found.

00:02:57.580 --> 00:03:02.154
If we go to our project and type in a unrecognized URL,

00:03:02.154 --> 00:03:04.640
we don't get any components showing up on

00:03:04.640 --> 00:03:08.210
the screen because we don't have any routes setup which

00:03:08.210 --> 00:03:10.715
match so we need a way to handle

00:03:10.715 --> 00:03:14.730
this case and we'll take a look at this in the next video.
