WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:02.330 --> 00:00:08.835
We now have a shopping basket table on the menu screen showing some static data.

00:00:08.835 --> 00:00:14.550
To make our data dynamic we can loop through the contents of the baskets array,

00:00:14.550 --> 00:00:17.850
just like we did with the menu on the left-hand side.

00:00:17.850 --> 00:00:22.545
We already know the basket array has all the information we need.

00:00:22.545 --> 00:00:25.755
Let's add this for loop to our table,

00:00:25.755 --> 00:00:28.185
I'll go to the menu components.

00:00:28.185 --> 00:00:31.870
Let's scroll up to our baskets table,

00:00:32.810 --> 00:00:36.420
and locate the opening int table tag.

00:00:36.420 --> 00:00:41.090
Inside here we have our table body where we can add our v for a loop.

00:00:41.090 --> 00:00:44.180
The item we want to loop through is the basket.

00:00:44.180 --> 00:00:48.260
We want to store each individual basket item in the item

00:00:48.260 --> 00:00:53.285
variable and we can also add as a second value our index position,

00:00:53.285 --> 00:00:55.980
which we can use as a key.

00:00:56.830 --> 00:01:02.780
We combined our dynamic key and set this to our index.

00:01:02.780 --> 00:01:06.890
The next thing to do is to go down to our static data.

00:01:06.890 --> 00:01:10.760
The first piece is the item quantity so,

00:01:10.760 --> 00:01:12.695
inside the double curly braces,

00:01:12.695 --> 00:01:18.620
we can access our item and grab the quantity from our object.

00:01:18.620 --> 00:01:24.470
Scrolling down the next piece is the pizza inside here and also the size.

00:01:24.470 --> 00:01:29.610
First of all, let's grab the item.name and

00:01:29.610 --> 00:01:34.715
then as a second value inside of a second set of curly braces,

00:01:34.715 --> 00:01:37.930
you can also add the item.size.

00:01:37.930 --> 00:01:42.150
Below this, we also have the price so let's change the

00:01:42.150 --> 00:01:49.830
695 to be the item.price and its response to be item,

00:01:49.830 --> 00:01:55.095
say this and now obviously browser let's add some items on the right-hand side.

00:01:55.095 --> 00:01:59.405
I'll see the quantity has been increased with each Jupiter item

00:01:59.405 --> 00:02:04.735
a new item is added onto a new line now we're just missing the price of the end.

00:02:04.735 --> 00:02:08.500
Let's take a look we've got the item.price.

00:02:09.100 --> 00:02:13.650
Let's just check our method down at the bottom.

00:02:14.270 --> 00:02:20.220
This is just from the option so let's change this and now back over.

00:02:20.220 --> 00:02:24.600
We can try and add this once more, and we see the price.

00:02:24.600 --> 00:02:28.805
However, if we up the quantity of any one of these items,

00:02:28.805 --> 00:02:33.440
we see the quantity is increased but the total price is not.

00:02:33.440 --> 00:02:37.940
This is something we can easily fix we'll output the price.

00:02:37.940 --> 00:02:44.370
Let's scroll back up, we can multiply the price by the item.quantity.

00:02:45.320 --> 00:02:48.480
This will give us a total price,

00:02:48.480 --> 00:02:50.780
so we see this has been updated.

00:02:50.780 --> 00:02:56.165
We can add one more and the price is updated with each click.

00:02:56.165 --> 00:02:59.584
Good so now if we give the browser a refresh,

00:02:59.584 --> 00:03:05.540
we want to hide the text and also the order button when no pizzas has been added.

00:03:05.540 --> 00:03:09.350
We can hide our baskets using conditional rendering and

00:03:09.350 --> 00:03:14.105
only display if the basket array has a length greater than zero.

00:03:14.105 --> 00:03:16.630
Back over to our basket,

00:03:16.630 --> 00:03:19.660
which is the surrounding div just here,

00:03:19.660 --> 00:03:22.235
I'm going to surround this table with

00:03:22.235 --> 00:03:26.950
a second div where we can show and hide its contents.

00:03:26.950 --> 00:03:33.590
Add a div inside here and then we can add av if directive to check if

00:03:33.590 --> 00:03:40.740
our basket.length is greater than zero.

00:03:40.740 --> 00:03:45.290
This div will only show if any item has been added to our array.

00:03:45.290 --> 00:03:50.345
We can cut out the closing tag and then scroll down to the end of our table.

00:03:50.345 --> 00:03:51.620
At the closing div,

00:03:51.620 --> 00:03:54.430
just after our place order button.

00:03:54.430 --> 00:03:58.860
Just below, we can add a else condition inside of a separate div.

00:03:58.860 --> 00:04:06.235
We can say v else so the contents inside here will be a message inside of the p elements.

00:04:06.235 --> 00:04:12.570
I'm going to make this message dynamic and set this to a variable called basket text.

00:04:12.800 --> 00:04:19.500
Inside the sub just below in the date property set up

00:04:19.500 --> 00:04:26.930
our basket text where we can display a message to the user of your basket is empty.

00:04:29.180 --> 00:04:35.540
Save this, reload and there's our text of your basket is empty,

00:04:35.540 --> 00:04:40.490
using conditional rendering and now if we add an item to our array,

00:04:40.490 --> 00:04:45.415
this is now being removed and we see the items inside of our basket.

00:04:45.415 --> 00:04:51.980
You may be wondering, why do we set up our message is one here as a date property,

00:04:51.980 --> 00:04:57.010
instead of simply adding the text inside of our p elements.

00:04:57.010 --> 00:05:00.830
Well, this is because later on after placing our order

00:05:00.830 --> 00:05:05.060
we will also obtain this message to be a funky message.

00:05:05.060 --> 00:05:07.915
It will become more useful later on,

00:05:07.915 --> 00:05:11.675
next up we will add small methods to our shopping basket.

00:05:11.675 --> 00:05:16.340
We will wire up our increase and decrease buttons inside here,

00:05:16.340 --> 00:05:20.040
along with removing items from the basket too
