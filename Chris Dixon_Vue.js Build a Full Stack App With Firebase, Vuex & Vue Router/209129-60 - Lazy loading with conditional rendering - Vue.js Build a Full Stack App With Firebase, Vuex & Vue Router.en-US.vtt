WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.670 --> 00:00:04.020
Inside of our admin screen,

00:00:04.020 --> 00:00:07.125
we show and hide certain information from the user,

00:00:07.125 --> 00:00:10.350
depending on if they are authorized to see it or not.

00:00:10.350 --> 00:00:13.740
We can also apply lazy loading here too.

00:00:13.740 --> 00:00:15.570
Which will allow us to only download

00:00:15.570 --> 00:00:20.110
the hidden sections after the user successfully logs in.

00:00:20.110 --> 00:00:25.985
I'm going to begin by removing all of the dynamic imports from the routes.js,

00:00:25.985 --> 00:00:29.165
leaving our network tab more clear for this video.

00:00:29.165 --> 00:00:32.710
So I'm going to reinstate the original menu.

00:00:32.710 --> 00:00:35.850
Comment out the dynamic import.

00:00:35.850 --> 00:00:41.145
The same for About and also for our contact.

00:00:41.145 --> 00:00:44.385
Adding in all of the original components.

00:00:44.385 --> 00:00:48.080
So the process of only downloading the content after

00:00:48.080 --> 00:00:52.540
login is not any more difficult than what we have done so far.

00:00:52.540 --> 00:00:57.930
It basically involves moving the hidden content into a separate component and

00:00:57.930 --> 00:01:03.565
then we can use a dynamic import to reintroduce the content back into the admin.

00:01:03.565 --> 00:01:10.155
We can start by making a new component or a new file called the AdminContent.vue.

00:01:10.155 --> 00:01:14.255
So let's do this as ever inside of the components folder.

00:01:14.255 --> 00:01:21.090
So AdminContent. So as ever,

00:01:21.090 --> 00:01:22.980
we also add our template.

00:01:22.980 --> 00:01:26.020
We can also create our script tags.

00:01:26.450 --> 00:01:30.520
Then finally our styles down at the bottom.

00:01:30.520 --> 00:01:35.215
Now if we go back over to our original Admin.vue.

00:01:35.215 --> 00:01:38.500
Inside here we're going to begin by moving over some content,

00:01:38.500 --> 00:01:39.910
to our new components.

00:01:39.910 --> 00:01:43.300
The content we're going to move over is this section.

00:01:43.300 --> 00:01:48.435
If we leave in the original login components and grab the closing section,

00:01:48.435 --> 00:01:52.735
and go all the way up to the top of our template.

00:01:52.735 --> 00:01:57.080
Take this out, leaving our admin_wrapper div and

00:01:57.080 --> 00:02:01.460
also our login components over to the AdminContent.

00:02:01.460 --> 00:02:04.540
We paste this now into our new template.

00:02:04.540 --> 00:02:07.815
Scroll it to the top. We can also remove our If statements.

00:02:07.815 --> 00:02:10.670
Check if the current user is not equal to null,

00:02:10.670 --> 00:02:14.245
we'll handle this functionality in just a moment.

00:02:14.245 --> 00:02:19.655
We also need to go back over to our admin and move over the contents of the script.

00:02:19.655 --> 00:02:21.619
All of our imports,

00:02:21.619 --> 00:02:23.465
we can also copy our data,

00:02:23.465 --> 00:02:29.005
computed, our methods, and all the way down to the closing script tag.

00:02:29.005 --> 00:02:31.080
Let's close all of this out.

00:02:31.080 --> 00:02:34.320
Then paste this inside of our adminContent script,

00:02:34.320 --> 00:02:35.925
which we created before.

00:02:35.925 --> 00:02:41.275
Moving the export defaults and paste this into our empty script tanks.

00:02:41.275 --> 00:02:44.410
Since we're now in a different component,

00:02:44.410 --> 00:02:46.985
we need to change the name of our component.

00:02:46.985 --> 00:02:50.515
This time we're going to call it the adminContent.

00:02:50.515 --> 00:02:53.205
Add content onto the end of this.

00:02:53.205 --> 00:02:58.700
This new vue component is related to the actual content rather than the login.

00:02:58.700 --> 00:03:01.669
I'm going to remove the login imports

00:03:01.669 --> 00:03:05.510
and if we scroll down we can also remove the login components.

00:03:05.510 --> 00:03:10.885
This should now be all of our hidden functionality moved into its own components.

00:03:10.885 --> 00:03:15.530
All we need to do now is to move over some styles from the Admin.vue.

00:03:15.530 --> 00:03:17.990
Let's scroll down to our style section.

00:03:17.990 --> 00:03:23.350
The styles which we need to remove is basically everything after our admin_wrapper.

00:03:23.350 --> 00:03:27.270
The admin_wrapper is related to this admin component.

00:03:27.270 --> 00:03:32.135
We need to grab all of the rest of the styles which are related to the content.

00:03:32.135 --> 00:03:34.175
So put out everything,

00:03:34.175 --> 00:03:37.590
leaving the admin_wrapper over to

00:03:37.590 --> 00:03:42.450
the adminContent and we can paste these inside of our style tags.

00:03:43.100 --> 00:03:46.470
Give this file a save and now we can go back over to the

00:03:46.470 --> 00:03:50.815
Admin.vue and we can work on the script area.

00:03:50.815 --> 00:03:57.005
Before we removed the login components and the registration from the AdminContent.

00:03:57.005 --> 00:03:59.885
These are part of the original Admin.vue,

00:03:59.885 --> 00:04:02.315
so we can add these back inside of here.

00:04:02.315 --> 00:04:07.670
Import login from the file path which is./Login.

00:04:07.670 --> 00:04:10.025
We're also going to be using the computed property

00:04:10.025 --> 00:04:13.100
of current user inside of this component.

00:04:13.100 --> 00:04:16.135
We can conditionally render our content.

00:04:16.135 --> 00:04:22.485
To do this, we also need to import mapGetters which we've used earlier.

00:04:22.485 --> 00:04:26.180
This is from our vuex package.

00:04:26.210 --> 00:04:31.090
We can then add in our export defaults.

00:04:31.420 --> 00:04:35.885
The component name, which was admin.

00:04:35.885 --> 00:04:42.110
We can then at register our components and the only component which we need is our login,

00:04:42.110 --> 00:04:43.670
which we just imported,

00:04:43.670 --> 00:04:45.620
separated by a comma.

00:04:45.620 --> 00:04:47.990
We then need to add our computed section,

00:04:47.990 --> 00:04:49.885
which is for our Getters,

00:04:49.885 --> 00:04:54.150
so we can spread in mapGetters.

00:04:54.150 --> 00:04:55.920
Inside of our array,

00:04:55.920 --> 00:04:59.280
the Getter which we need is the current user.

00:05:00.260 --> 00:05:07.535
So this Admin.vue is going to be a parent component with the content nested inside.

00:05:07.535 --> 00:05:11.185
This allows us to conditionally render our content,

00:05:11.185 --> 00:05:13.660
and we can also dynamically import,

00:05:13.660 --> 00:05:17.515
just like we did with any of our routes earlier in this section.

00:05:17.515 --> 00:05:21.265
We do this exactly the same as our routes.js.

00:05:21.265 --> 00:05:24.520
We're going to create a function for

00:05:24.520 --> 00:05:30.765
our AdminContent and want to set this up as a in-line arrow function,

00:05:30.765 --> 00:05:33.625
where we add our dynamic imports,

00:05:33.625 --> 00:05:37.540
which points to our new components of AdminContent.

00:05:37.540 --> 00:05:41.275
We also need to register this component for it to work too.

00:05:41.275 --> 00:05:43.435
So just after our login,

00:05:43.435 --> 00:05:45.880
let's add our AdminContent.

00:05:45.880 --> 00:05:49.885
Finally, we can add the component to our template just above.

00:05:49.885 --> 00:05:54.025
Also using the conditional rendering which we removed earlier.

00:05:54.025 --> 00:05:57.635
So at the top of our login component,

00:05:57.635 --> 00:06:01.040
let's add in our AdminContent.

00:06:01.040 --> 00:06:03.190
This is going to use the if,

00:06:03.190 --> 00:06:08.245
check if the current user is not equal to null.

00:06:08.245 --> 00:06:12.580
So this is basically doing the opposite of our login component.

00:06:12.580 --> 00:06:17.185
If the user here is equal to null we're going to render a login component.

00:06:17.185 --> 00:06:18.910
If the user is logged in,

00:06:18.910 --> 00:06:21.100
therefore not equal to null.

00:06:21.100 --> 00:06:24.215
Instead of this, we're going to display the content.

00:06:24.215 --> 00:06:27.110
So make sure both of these files are saved and head over to

00:06:27.110 --> 00:06:30.605
the browser into the admin component.

00:06:30.605 --> 00:06:32.690
So we're not logged in at the moment,

00:06:32.690 --> 00:06:38.040
meaning we see the Login component so we can add our email and password.

00:06:40.250 --> 00:06:44.145
Once we log in, we're taken to the content.

00:06:44.145 --> 00:06:47.025
We can also test for lazy loading.

00:06:47.025 --> 00:06:52.570
We can open up the console and head into the Network tab.

00:06:52.570 --> 00:06:56.145
I'm going to sign out and then reload.

00:06:56.145 --> 00:06:59.120
At the moment we only have the borne dynamic import,

00:06:59.120 --> 00:07:00.770
which is for our content.

00:07:00.770 --> 00:07:03.650
Therefore, we only see the app.js file.

00:07:03.650 --> 00:07:06.420
If we now try to log in.

00:07:09.070 --> 00:07:13.625
We then see a second bundle has been downloaded from the server,

00:07:13.625 --> 00:07:16.085
which is for our hidden content.

00:07:16.085 --> 00:07:19.670
So this kind of thing is a good use case for if we don't

00:07:19.670 --> 00:07:22.925
expect many admins to be logging into the system,

00:07:22.925 --> 00:07:28.165
therefore avoiding any unnecessary code to be downloaded for the end user.

00:07:28.165 --> 00:07:33.540
And this is just another angle to consider when using lazy loading.
