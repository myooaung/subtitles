1
00:00:00,830 --> 00:00:04,430
The last statistic we need to pass is the number of awards.

2
00:00:04,430 --> 00:00:08,870
So how are we going to reduce this down to something that can be easily compared between different movies.

3
00:00:08,870 --> 00:00:13,480
Well we're just going to take all the different awards or the total number of awards here.

4
00:00:13,550 --> 00:00:15,800
We're gonna find all the different numbers in here.

5
00:00:15,800 --> 00:00:21,620
Add them all together and we'll say whoever had the most numbers inside this statistic wins.

6
00:00:21,620 --> 00:00:26,960
So technically one movie that has like one win but one hundred nominations will beat out a movie with

7
00:00:27,140 --> 00:00:28,250
ten wins.

8
00:00:28,280 --> 00:00:34,310
In theory the movie with ten wins and like zero nominations would be better but for our purposes or

9
00:00:34,310 --> 00:00:38,720
the purposes of this application we're just going to say whoever had the most numbers in this thing

10
00:00:39,020 --> 00:00:40,220
is the winner.

11
00:00:40,340 --> 00:00:44,540
So let's write out some code that's going to take a look at that string and extract the total number

12
00:00:44,540 --> 00:00:45,580
out of it.

13
00:00:45,830 --> 00:00:49,840
Back over here inside of movie template I'm going to delete that comment up top.

14
00:00:49,980 --> 00:00:58,970
I'm going to delete the console log and then we're going to declare a new variable called awards.

15
00:00:59,020 --> 00:01:04,280
So for this one we'll take a look at movie detail.

16
00:01:04,320 --> 00:01:08,220
We're going to look at the awards property which is that big long string.

17
00:01:08,320 --> 00:01:12,300
We're going to first begin by splitting it on space.

18
00:01:12,330 --> 00:01:17,820
This right here is going to give us an array where every element in the array is one of the different

19
00:01:17,910 --> 00:01:20,130
actual words or numbers in here.

20
00:01:20,130 --> 00:01:27,430
So essentially all the spaces go away and just the element words we get inside of an array so then we're

21
00:01:27,430 --> 00:01:32,710
going to iterate through that array and we're going to say that for every actual number in there we're

22
00:01:32,710 --> 00:01:33,960
going to keep some running total.

23
00:01:33,970 --> 00:01:38,660
And then eventually return it and we're going to write this out in two different ways.

24
00:01:38,660 --> 00:01:43,130
We're going to write it out first with a for each and we're going to refactor it to use a reduced statement

25
00:01:43,130 --> 00:01:44,180
instead.

26
00:01:44,300 --> 00:01:49,430
This is a perfect location to do a reduce but just as some quick practice just to get familiar because

27
00:01:49,430 --> 00:01:51,530
we're already doing some hard enough things here.

28
00:01:51,560 --> 00:01:54,360
Well first do a for each thread above.

29
00:01:54,470 --> 00:01:58,150
I'm going to declare a variable called Count and start off with zero.

30
00:01:58,160 --> 00:02:01,340
This is going to track the number of award values.

31
00:02:01,400 --> 00:02:05,630
So in this case we'd have like about what 118 for this movie right here.

32
00:02:05,630 --> 00:02:09,760
That's one plus seventy nine plus thirty eight.

33
00:02:09,780 --> 00:02:11,680
So on split member that gives us an array.

34
00:02:11,700 --> 00:02:21,660
So call for each and then I'm going to take each word inside of that sentence and I first need to see

35
00:02:21,660 --> 00:02:24,120
if I am working with a number or not.

36
00:02:24,250 --> 00:02:27,960
The first time that function gets called it's going to receive the word nominated.

37
00:02:27,960 --> 00:02:29,600
That's obviously not a number.

38
00:02:29,640 --> 00:02:32,230
So did check to see if we're working with a number or not.

39
00:02:32,370 --> 00:02:40,010
We're going to first try to pass this thing so I'll say value is pass it with word if we try to pass

40
00:02:40,010 --> 00:02:43,520
an int on a string that doesn't contain any number whatsoever.

41
00:02:43,580 --> 00:02:46,580
We're going to get back a value of not a number.

42
00:02:46,670 --> 00:02:48,950
Let's do a quick test of that inside of our console over here.

43
00:02:48,950 --> 00:02:52,080
Very quickly just to get a reminder of that behavior.

44
00:02:52,180 --> 00:02:58,580
So over here I'll do a percent of not a number and I get back and then which again stands for Not a

45
00:02:58,580 --> 00:02:59,390
number.

46
00:02:59,690 --> 00:03:08,050
If I do pass it on say nominated yep we definitely get back not a number that's how we're going to tell

47
00:03:08,050 --> 00:03:15,390
if we're working with an actual number or not value is going to be not a number so to check to see if

48
00:03:15,390 --> 00:03:16,640
we have a number or not.

49
00:03:16,650 --> 00:03:24,870
We will say if is men N A N like so that's how we check to see if a value is not a number or not inside

50
00:03:24,870 --> 00:03:25,780
of JavaScript.

51
00:03:25,950 --> 00:03:27,830
That is a function that is built into the browser.

52
00:03:27,840 --> 00:03:30,020
So we don't need to define it or anything like that.

53
00:03:30,830 --> 00:03:37,850
We're going to say if this value is not a number then we're just going to stop the return saying right

54
00:03:37,850 --> 00:03:40,220
here is just going to return from the inner function.

55
00:03:40,220 --> 00:03:44,300
So in other words we're going to say don't try to add anything to count or anything like that.

56
00:03:44,300 --> 00:03:51,380
Otherwise we'll do count is count plus value like so okay.

57
00:03:51,410 --> 00:03:56,870
So now at the very end I'll do a console dot log of count and we'll test this thing out for that first

58
00:03:56,870 --> 00:04:01,700
movie I'll refresh look up Avengers click it and there we go.

59
00:04:01,700 --> 00:04:07,610
I get the one hundred eighteen so again that is the one plus thirty eight plus seventy nine so we could

60
00:04:07,610 --> 00:04:12,860
stop there and just say oh yeah count is our variable but instead like I said let's try to refactor

61
00:04:12,860 --> 00:04:18,470
this for each into a reduced statement instead because this really is a perfect place to make use of

62
00:04:18,470 --> 00:04:26,220
reduce so with reduced remember we're going to change the for each to reduce then the second argument

63
00:04:26,220 --> 00:04:29,930
to the reduced function the first is the actual function we want to run.

64
00:04:30,120 --> 00:04:33,500
The second is going to be the starting value for our reduction.

65
00:04:33,600 --> 00:04:40,030
So in our case are starting value is zero then the first argument that inner function is going to be

66
00:04:40,030 --> 00:04:41,440
the previous value.

67
00:04:41,620 --> 00:04:45,050
And the second will be the word that we are currently iterating over.

68
00:04:45,050 --> 00:04:50,920
So then inside of this function body we need to make sure that we return the next value for the next

69
00:04:50,920 --> 00:04:57,370
iteration through this loop so right here in the return case rather than just returning nothing we're

70
00:04:57,370 --> 00:04:59,420
going to instead return previous.

71
00:04:59,470 --> 00:05:04,000
So the value that we just are iterating over a year is not actually a number then just return whatever

72
00:05:04,000 --> 00:05:05,800
our current counties.

73
00:05:05,800 --> 00:05:15,270
Otherwise we're going to return the previous value that we got plus this new value okay.

74
00:05:15,300 --> 00:05:21,110
So now we can't delete the let count up here and just to make sure this works correctly again I'm gonna

75
00:05:21,120 --> 00:05:25,410
do a council like now of awards I'll save that.

76
00:05:25,530 --> 00:05:33,860
Another quick test so refresh look up ventures look at and I still get the one 18.

77
00:05:34,020 --> 00:05:34,290
All right.

78
00:05:34,320 --> 00:05:39,760
So that is it we've now extracted some meaningful values out of all these different statistics.

79
00:05:39,790 --> 00:05:45,600
Now the last thing we have to do is take these different values and inject them as data properties on

80
00:05:45,630 --> 00:05:47,290
each of these different articles.

81
00:05:47,490 --> 00:05:51,960
Once again once we do that we can then pull those values out later on when we decide that it is time

82
00:05:51,960 --> 00:05:54,740
to compare these different statistics.

83
00:05:54,800 --> 00:05:57,290
So quick pause right here and we'll take care of that in the next video.
