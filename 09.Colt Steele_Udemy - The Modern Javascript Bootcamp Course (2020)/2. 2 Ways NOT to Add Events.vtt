WEBVTT
1
00:00:00.300 --> 00:00:00.730
All right.

2
00:00:00.780 --> 00:00:05.280
So we've established that there are tons and tons of different events we can work with in our javascript

3
00:00:05.280 --> 00:00:06.040
code.

4
00:00:06.060 --> 00:00:12.930
They range from super common things like clicks and drags and hovers scrolls key presses to some pretty

5
00:00:12.930 --> 00:00:19.840
obscure events like a printing event or a before print or an after print or even a mouse wheel.

6
00:00:19.920 --> 00:00:21.850
They all follow the same pattern.

7
00:00:21.870 --> 00:00:28.350
So even though the triggers of the event are different whether it's a user typing a key enter or return

8
00:00:28.710 --> 00:00:33.330
versus the user hovering or dragging or dropping the triggers are different.

9
00:00:33.420 --> 00:00:38.060
But the way we incorporate these events into our code follows the same pattern.

10
00:00:38.130 --> 00:00:43.920
We essentially have a thing called the thing that we're listening for an event on.

11
00:00:44.070 --> 00:00:49.740
We're listening to see when this event occurs on a given thing or with a given thing like a click on

12
00:00:49.740 --> 00:00:52.590
a button a drag of an image.

13
00:00:52.770 --> 00:00:55.200
Then we have the event itself.

14
00:00:55.200 --> 00:01:02.340
So the event type I'll call that event type and then we tell javascript Here's the code I want you to

15
00:01:02.340 --> 00:01:04.470
run the code to run.

16
00:01:04.470 --> 00:01:10.450
This is all extremely unofficial language but as an example we might have a single button.

17
00:01:10.770 --> 00:01:14.880
We want to listen or wait for a click on that button.

18
00:01:14.880 --> 00:01:21.310
And then when a user clicks that button we could change the color.

19
00:01:21.750 --> 00:01:30.420
We could have a text input and when a user hits return or types return what do we want to do we have

20
00:01:30.420 --> 00:01:32.330
some code that we want to run.

21
00:01:32.430 --> 00:01:39.510
It could be something as simple as clearing the input or it could be get search results where we're

22
00:01:39.510 --> 00:01:42.040
working with an API or a database.

23
00:01:42.180 --> 00:01:47.130
We could have an image as the thing and the event would be a hover.

24
00:01:47.340 --> 00:01:51.390
Which is actually called a mouse over when you mouse over a particular image.

25
00:01:51.450 --> 00:01:58.980
We want to display the image caption or we want to make the color image turn black and white as a nice

26
00:01:58.980 --> 00:02:02.310
little visual effect but they all follow this pattern.

27
00:02:02.310 --> 00:02:09.480
We have to find a thing an element and event type and then code we want to run when that event actually

28
00:02:09.480 --> 00:02:10.620
happens.

29
00:02:10.620 --> 00:02:12.650
So there are multiple ways.

30
00:02:12.690 --> 00:02:14.150
There are three different syntax is.

31
00:02:14.160 --> 00:02:19.800
I'll show you for how we can actually achieve this but I'm telling you right up front two of them you

32
00:02:19.800 --> 00:02:25.470
should probably not use but I'm going to show them to you because they are simple but you'll also see

33
00:02:25.470 --> 00:02:30.990
them in bad tutorials you'll see them sometimes you'll see them on the docks they have to talk about

34
00:02:30.990 --> 00:02:36.240
it but then we'll see the third and the best option for how we can achieve this how we can add events

35
00:02:36.300 --> 00:02:39.560
or event listeners to elements in the next video.

36
00:02:39.600 --> 00:02:44.820
So let's take a look at a very simple type of an event a click and we need to start by adding something

37
00:02:44.880 --> 00:02:46.550
to click on right now.

38
00:02:46.590 --> 00:02:51.030
I mean I guess we could listen for a click on the body but let's not do that.

39
00:02:51.060 --> 00:02:52.820
Let's add in a button or two.

40
00:02:52.890 --> 00:02:55.440
So we'll have a button says Click me.

41
00:02:55.440 --> 00:02:57.660
Let's also put in a.

42
00:02:57.680 --> 00:03:04.680
How about a form with an input of type range.

43
00:03:04.680 --> 00:03:12.960
So a range input and we'll give it a Men of 10 a max of 50.

44
00:03:13.050 --> 00:03:13.280
OK.

45
00:03:13.290 --> 00:03:17.620
So we have at least two things that we can now listen for clicks on.

46
00:03:17.720 --> 00:03:23.430
And the first syntax I'll show you involves actually putting our code right in the element which is

47
00:03:23.430 --> 00:03:25.520
not a good idea for the same reason.

48
00:03:25.530 --> 00:03:32.100
It's not a good idea to add a bunch of inline styles you end up with super cluttered HMO your javascript

49
00:03:32.130 --> 00:03:36.990
is spread out all over the place or in the case of style your CSF is spread out all over the place.

50
00:03:37.050 --> 00:03:41.010
It's not in a centralized CSX file or a style sheet.

51
00:03:41.010 --> 00:03:42.260
Same thing with JavaScript.

52
00:03:42.270 --> 00:03:45.690
We don't want to do this but I'm just going to show it to you to run code.

53
00:03:45.690 --> 00:03:52.170
When we click on this button we can add an attribute called on click and then we need to write some

54
00:03:52.170 --> 00:03:52.850
code in here.

55
00:03:52.860 --> 00:03:56.240
Something as simple as an alert you clicked me

56
00:03:58.980 --> 00:04:04.710
notice we're having to write our JavaScript in a string which is bizarre to begin with especially if

57
00:04:04.710 --> 00:04:08.100
you have to worry about quotes here I had to use single quotes.

58
00:04:08.100 --> 00:04:12.930
This is a very simple one liner but it's pretty gross already.

59
00:04:12.990 --> 00:04:18.870
Normally what you would see if you were to take this seriously and actually use inline events like I'm

60
00:04:18.870 --> 00:04:23.340
doing here you would write a function and call the function from right here.

61
00:04:23.340 --> 00:04:25.770
But still it's not worth doing.

62
00:04:25.890 --> 00:04:26.900
But let's make sure it works.

63
00:04:26.910 --> 00:04:31.300
If I refresh my page I'll zoom in a bit so we can see a bit better.

64
00:04:31.380 --> 00:04:33.520
And I will click.

65
00:04:33.780 --> 00:04:34.260
There we go.

66
00:04:34.290 --> 00:04:36.440
You clicked me.

67
00:04:36.670 --> 00:04:37.330
All right.

68
00:04:37.560 --> 00:04:41.350
So that's our first event interaction that we have going on.

69
00:04:41.400 --> 00:04:46.770
We added an event listener to the button and we said when a click occurs.

70
00:04:46.770 --> 00:04:48.360
Run this code.

71
00:04:48.360 --> 00:04:57.150
And if I have another button without the on click just so we're very clear here nothing happens.

72
00:04:57.150 --> 00:04:59.460
So we're not adding that to every button.

73
00:04:59.550 --> 00:05:07.050
We're simply registering an event listener for this one button that does this one thing when it is clicked

74
00:05:08.770 --> 00:05:16.450
as you can see there if I added a click to my second button you clicked me to

75
00:05:19.130 --> 00:05:20.730
and I refreshed the page.

76
00:05:20.840 --> 00:05:25.310
This one gives me one alert you click me this one gives me a different alert.

77
00:05:25.490 --> 00:05:26.450
You clicked me too.

78
00:05:26.990 --> 00:05:31.910
So they have nothing to do with one another other than the fact that they're both buttons and we can

79
00:05:31.910 --> 00:05:39.340
also add in on click to something else like this can put on click equals will alerts.

80
00:05:39.410 --> 00:05:45.130
Why don't we console that log instead console that log clicked the input

81
00:05:47.900 --> 00:05:48.380
OK.

82
00:05:48.380 --> 00:05:51.590
Once again I have to pay attention to my quotes which is obnoxious.

83
00:05:51.590 --> 00:05:53.110
We'll refresh the page.

84
00:05:53.270 --> 00:05:55.760
What happens when I click on this.

85
00:05:55.760 --> 00:05:56.640
There you go.

86
00:05:56.660 --> 00:05:59.360
I'm getting clicked the input.

87
00:05:59.360 --> 00:06:01.490
Very fancy stuff.

88
00:06:01.490 --> 00:06:05.990
We also have other events as I mentioned back in our JavaScript file.

89
00:06:06.110 --> 00:06:07.810
I deleted my little table here.

90
00:06:08.000 --> 00:06:13.610
Right now we are doing one event type which is quick but we have other event types that we can work

91
00:06:13.610 --> 00:06:14.210
with.

92
00:06:14.360 --> 00:06:16.250
Can see them all here.

93
00:06:16.250 --> 00:06:20.320
So we're doing on click the event name is just click.

94
00:06:20.390 --> 00:06:21.920
We have other events.

95
00:06:21.980 --> 00:06:27.350
And if we want to use them in line like we're doing right now we prefaced them with on.

96
00:06:27.470 --> 00:06:29.600
So what's another one with a mouse.

97
00:06:29.600 --> 00:06:31.460
So here are some other mouse events.

98
00:06:31.460 --> 00:06:35.750
Why don't we try mouse over so mouse over right here.

99
00:06:35.750 --> 00:06:41.350
It fires when we move our mouse over a particular element in order to make that work.

100
00:06:41.510 --> 00:06:48.500
We need to change this either from on click and adapted to be on mouse over.

101
00:06:49.190 --> 00:06:52.010
Or we could add a second attribute.

102
00:06:52.040 --> 00:06:55.120
We could have an on click and add on mouse over.

103
00:06:55.580 --> 00:06:57.950
But let's see what happens when I mouse over this.

104
00:06:57.950 --> 00:06:59.570
There we go.

105
00:06:59.570 --> 00:07:04.690
Mouse over you can see it's working very annoying to have an alert.

106
00:07:04.730 --> 00:07:06.770
So often especially just from a hover.

107
00:07:07.010 --> 00:07:13.220
All of these follow this pattern on and then the event name equals do something.

108
00:07:13.310 --> 00:07:13.670
OK.

109
00:07:13.730 --> 00:07:20.240
So this is the first example of something that I recommend you never do adding these inline event handlers.

110
00:07:20.240 --> 00:07:21.740
It clutters your markup.

111
00:07:21.770 --> 00:07:25.900
It's really hard to keep organized and to understand where everything is coming from.

112
00:07:26.000 --> 00:07:30.050
You just don't want to put all that JavaScript directly into your elements.

113
00:07:30.050 --> 00:07:35.990
So instead there's another way of doing this where we select an element first in JavaScript and then

114
00:07:36.050 --> 00:07:39.050
we can add an on click or an on mouse over.

115
00:07:39.200 --> 00:07:41.870
So I'll keep one of these.

116
00:07:41.870 --> 00:07:42.790
Let's get rid of.

117
00:07:42.790 --> 00:07:47.750
I'll keep both of them I guess I'll add a new button here and this button will have an I.D. so I can

118
00:07:47.750 --> 00:07:48.490
select it.

119
00:07:48.620 --> 00:07:55.740
We'll call this clicker and the text will just be clicker All right.

120
00:07:56.040 --> 00:08:01.940
Now let's go to our JavaScript file which I've included here as a script at the bottom and I'm going

121
00:08:01.950 --> 00:08:04.950
to start by selecting that button document.

122
00:08:05.040 --> 00:08:08.710
I could do get element by I.D. I could do query selector.

123
00:08:09.120 --> 00:08:10.670
I'll do query selector.

124
00:08:10.740 --> 00:08:17.220
The idea was clicker and I'll save that to a variable Beatty and button click or whatever we want to

125
00:08:17.220 --> 00:08:17.580
call it.

126
00:08:17.890 --> 00:08:21.070
And why don't we go take a look in our console here.

127
00:08:21.150 --> 00:08:30.780
If I look at B10 console that DARPA and I want to see all the properties open it up scroll down and

128
00:08:30.780 --> 00:08:38.490
you've probably noticed this before all of these on properties on mouse over on selection change on

129
00:08:38.490 --> 00:08:39.970
click these.

130
00:08:39.990 --> 00:08:41.750
Now probably make a bit more sense.

131
00:08:41.790 --> 00:08:46.860
These are properties we can set in line which we've already done or we can add them in.

132
00:08:46.890 --> 00:08:50.570
We can set a function as a value in our javascript.

133
00:08:50.700 --> 00:08:56.790
So if we select the first button with that horrible mouse over event we'll do document dot query selector

134
00:08:56.820 --> 00:08:57.270
button

135
00:09:00.180 --> 00:09:07.830
and just get the first one save that to a variable cost first APTN and we do our console dot DJI are

136
00:09:07.860 --> 00:09:09.900
first PETN.

137
00:09:10.110 --> 00:09:11.110
Open it up.

138
00:09:11.430 --> 00:09:14.230
If we find our on mouse over there it is.

139
00:09:14.310 --> 00:09:15.790
Notice it's not no.

140
00:09:15.840 --> 00:09:18.690
It has a value and that's coming from our hmo.

141
00:09:19.140 --> 00:09:22.740
So this is one way of adding in one of those event handlers.

142
00:09:22.770 --> 00:09:27.840
This is one way of saying this is what I want to happen on mouse over but we can also do it through

143
00:09:27.840 --> 00:09:29.610
javascript.

144
00:09:29.610 --> 00:09:31.360
We just set that same property.

145
00:09:31.410 --> 00:09:32.440
So PETN.

146
00:09:32.790 --> 00:09:39.150
Let's do on click first and then we need to set it to a function or give it something if instead we

147
00:09:39.150 --> 00:09:45.200
just wrote alert right here alert high.

148
00:09:45.340 --> 00:09:47.610
What do you think will happen.

149
00:09:47.950 --> 00:09:50.200
Let's try refreshing our page.

150
00:09:50.530 --> 00:09:52.520
I get alert high right away.

151
00:09:52.630 --> 00:09:53.940
So why does that happen.

152
00:09:54.100 --> 00:09:59.500
Remember that JavaScript is just going to go through this code and encountered this will say all right

153
00:09:59.860 --> 00:10:06.220
we're going to update the property on click set it equal to the result of executing alert high.

154
00:10:06.880 --> 00:10:08.390
So it runs this line.

155
00:10:08.530 --> 00:10:15.970
And whatever alert returns which I'm pretty sure is just undefined alert high or h What do we get back

156
00:10:17.000 --> 00:10:17.560
undefined.

157
00:10:17.860 --> 00:10:24.010
So then it sets on click to undefined when we do it in our inline HMO.

158
00:10:24.100 --> 00:10:25.510
It seems deceiving.

159
00:10:25.510 --> 00:10:31.120
But what happens is that the DOM is just going to take this string turn it into javascript but rapid

160
00:10:31.120 --> 00:10:36.520
in a function so that it only runs when you actually mouse over or you on click.

161
00:10:36.520 --> 00:10:41.200
So if we want to make this work through javascript we need to write a function.

162
00:10:41.200 --> 00:10:44.500
We could do a regular function expression function.

163
00:10:44.500 --> 00:10:46.380
We don't have to even give it a name.

164
00:10:46.600 --> 00:10:56.920
And in here if we could say alert or console dot log let's do a console that log you clicked me go away.

165
00:10:56.920 --> 00:11:02.350
All of them are basically saying the same thing you click me click the input doesn't matter.

166
00:11:02.470 --> 00:11:05.470
This is still not the way you want to be doing this.

167
00:11:05.470 --> 00:11:07.660
Remember this is educational.

168
00:11:07.690 --> 00:11:10.890
But but this is not the approach that we want to take.

169
00:11:10.900 --> 00:11:16.870
So Beatty and up on quick equals this function we're saying a button that we selected.

170
00:11:16.870 --> 00:11:17.790
That's the thing.

171
00:11:17.920 --> 00:11:24.340
When the click happens or a click happens on that button not just anywhere but on this one button this

172
00:11:24.340 --> 00:11:27.570
is the code to run it will execute this function.

173
00:11:27.610 --> 00:11:31.730
So let's try it out refresh the page click on my button.

174
00:11:31.750 --> 00:11:32.410
There we go.

175
00:11:32.410 --> 00:11:33.210
You clicked me.

176
00:11:33.280 --> 00:11:34.330
Go away.

177
00:11:34.870 --> 00:11:39.910
And I could instead change this to a different type of event or I could add a second event listener

178
00:11:40.120 --> 00:11:42.340
to that same element.

179
00:11:42.340 --> 00:11:44.050
So we have on quick.

180
00:11:44.230 --> 00:11:45.820
What about double.

181
00:11:45.970 --> 00:11:47.910
Is it double or is it DPL.

182
00:11:47.920 --> 00:11:48.180
OK.

183
00:11:48.190 --> 00:11:50.100
It is DPL click.

184
00:11:50.110 --> 00:11:52.920
I rarely have ever used that.

185
00:11:53.650 --> 00:11:55.410
But we can just look it up if we ever need it.

186
00:11:55.870 --> 00:12:00.100
So on DPL click let's go.

187
00:12:00.390 --> 00:12:03.420
Double click as our console dot log.

188
00:12:03.550 --> 00:12:04.650
Refresh the page.

189
00:12:04.650 --> 00:12:09.000
Here's a single click and a double click OK.

190
00:12:09.190 --> 00:12:13.900
So we now have two different events that we're listening for on the same button.

191
00:12:13.900 --> 00:12:16.220
And it follows this exact same pattern.

192
00:12:16.240 --> 00:12:22.980
We select something we select the event and if we're doing it with these on properties it's on.

193
00:12:22.980 --> 00:12:26.270
And then the event name on click on DoubleClick.

194
00:12:26.350 --> 00:12:31.000
But we'll soon see a much better way in the very next video that makes it easier.

195
00:12:31.000 --> 00:12:33.720
We don't have to keep track of all of these different property names.

196
00:12:33.790 --> 00:12:35.290
We use one method.

197
00:12:35.440 --> 00:12:37.830
So that's kind of it for this video.

198
00:12:37.840 --> 00:12:42.760
Two different ways of adding events both of which are kind of frowned upon and I'm not recommending

199
00:12:43.120 --> 00:12:44.630
but it's a good introduction.

200
00:12:44.710 --> 00:12:48.720
So we could do it inline in our HMO using the exact same names.

201
00:12:48.730 --> 00:12:55.060
So on some event all lowercase which is also very confusing I don't know why it's all lowercase but

202
00:12:55.060 --> 00:12:58.100
it is everything else and Javascript is camel cased.

203
00:12:58.270 --> 00:13:05.350
So on mouse over on click on key press which we'll take a look at some key press events later on then

204
00:13:05.530 --> 00:13:12.480
in your javascript you could also instead set the property by first selecting an element adding in the

205
00:13:12.480 --> 00:13:19.030
on click or the on double click or the on mouse over and setting it equal to a function and that function

206
00:13:19.030 --> 00:13:21.100
will execute when the event occurs.
