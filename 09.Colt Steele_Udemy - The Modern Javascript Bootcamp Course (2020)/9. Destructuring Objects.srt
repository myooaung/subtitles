1
00:00:00,090 --> 00:00:05,340
Next up we'll see that we can use these structuring to unpack values from an object into standalone

2
00:00:05,340 --> 00:00:07,690
variables just like we could for an array.

3
00:00:07,980 --> 00:00:13,380
But the main difference is that in an array we would unpack based off of position the index.

4
00:00:13,410 --> 00:00:16,510
So the first variable would be the first element.

5
00:00:16,530 --> 00:00:19,950
Second would be the second and so on in an object.

6
00:00:20,070 --> 00:00:23,970
We make the variables based off of the name of the property.

7
00:00:24,030 --> 00:00:25,450
So here's an example.

8
00:00:25,560 --> 00:00:27,690
I have an object called a runner.

9
00:00:27,780 --> 00:00:33,170
I'm still going at the marathon theme we've got first is Elliot last name is Kip pro-gay.

10
00:00:33,390 --> 00:00:35,470
Country is Kenya and title.

11
00:00:35,550 --> 00:00:36,830
This is pretty crazy.

12
00:00:36,840 --> 00:00:40,500
I was checking out his Wikipedia page and he had this after his name.

13
00:00:40,500 --> 00:00:43,520
Elder of the Order of the Golden Heart of Kenya.

14
00:00:43,560 --> 00:00:47,940
That's a pretty awesome title elder of the Order of the Golden Heart of Kenya.

15
00:00:47,970 --> 00:00:55,170
It's a little long but pretty cool if I wanted to create variables for let's say first and last.

16
00:00:55,170 --> 00:01:01,440
All I need to do is follow the same pattern where instead of an array bracket I use object curly braces

17
00:01:01,770 --> 00:01:06,120
and I'll set it equal to runner and then I single out the properties that I want.

18
00:01:06,570 --> 00:01:08,370
The order doesn't matter at all.

19
00:01:08,370 --> 00:01:11,940
It's just the name that matters first and last.

20
00:01:11,940 --> 00:01:14,670
Let's run the code and we'll see that first.

21
00:01:14,670 --> 00:01:16,030
Is that to to.

22
00:01:16,470 --> 00:01:18,930
And last is set to keep it.

23
00:01:19,170 --> 00:01:25,860
So if it finds this property based off of that name it will take the value and stored in a variable

24
00:01:26,100 --> 00:01:26,880
with the same name.

25
00:01:27,540 --> 00:01:31,600
So first and last were both found and runner is unchanged.

26
00:01:31,590 --> 00:01:33,620
It's still the same object.

27
00:01:33,750 --> 00:01:40,380
We could also try something like about time which is not in this object.

28
00:01:40,410 --> 00:01:45,470
What do you think time will be set to undefined so no error.

29
00:01:45,510 --> 00:01:50,910
We just made a new variable called time it still made the variable it's just set to undefined with what

30
00:01:50,910 --> 00:01:51,980
we've seen so far.

31
00:01:51,990 --> 00:01:58,650
The variable names must be existing key names in the object but we can give them new names if we wanted

32
00:01:58,650 --> 00:01:59,770
to.

33
00:01:59,820 --> 00:02:01,060
I'll do something similar.

34
00:02:01,230 --> 00:02:09,780
Let's try concept and let's grab the country but instead save it to a variable called nation.

35
00:02:09,780 --> 00:02:12,090
To do that it looks like this country.

36
00:02:12,090 --> 00:02:16,470
Colon nation equals runner.

37
00:02:16,470 --> 00:02:23,790
So this will make a variable called nation based off of the value found in country if we take a look

38
00:02:23,850 --> 00:02:24,820
at nation.

39
00:02:24,830 --> 00:02:30,170
Now if I run my code over here it's set to Kenya so I could try one more.

40
00:02:30,540 --> 00:02:34,480
Let's also do title will be another name.

41
00:02:34,530 --> 00:02:36,720
We might want to use instead of title.

42
00:02:36,720 --> 00:02:39,450
I think this is also called an honorific.

43
00:02:39,450 --> 00:02:44,530
So we'll go with that title but we want to make a variable named called Honor.

44
00:02:44,550 --> 00:02:53,060
RICK Okay so fine title in this object if you do find it and then make a variable with that value called

45
00:02:53,090 --> 00:02:54,200
honorific.

46
00:02:54,350 --> 00:02:55,400
Let's run it.

47
00:02:55,520 --> 00:02:57,630
We've got honorific over here.

48
00:02:57,740 --> 00:02:59,120
Yep we do.

49
00:02:59,120 --> 00:03:01,010
So title it's not a variable.

50
00:03:01,010 --> 00:03:02,720
Neither is country.

51
00:03:02,870 --> 00:03:09,190
We just use those keys to access data from runner in a super nice short syntax.

52
00:03:09,360 --> 00:03:14,600
The one other thing that I'll show you here with objects at least is that we can use the rest.

53
00:03:14,600 --> 00:03:21,830
OPERATOR Just like we did with arrays I could single out country or first or last and then collect everything

54
00:03:21,830 --> 00:03:32,380
else in a new variable so I'll just do a const first last and then dot dot dot others again or just

55
00:03:32,410 --> 00:03:38,190
other equals runner all save.

56
00:03:38,620 --> 00:03:39,670
Refresh the page.

57
00:03:39,820 --> 00:03:45,490
So we still have first we have last but now I have a variable called other which contains the other

58
00:03:45,490 --> 00:03:46,260
two properties.

59
00:03:46,270 --> 00:03:52,330
We didn't claim we didn't unpack them into their own variable so we put them in the other variable thanks

60
00:03:52,330 --> 00:03:53,620
to rest.

61
00:03:53,620 --> 00:03:57,220
If I left the dot dot dot off it's a totally different meaning.

62
00:03:57,400 --> 00:04:02,860
It's trying to find a value or a key rather in runner called other.

63
00:04:03,040 --> 00:04:05,060
But that doesn't exist.

64
00:04:05,380 --> 00:04:05,650
All right.

65
00:04:05,680 --> 00:04:12,250
So that's the basics of object D structuring similar to arrays similar concept but rather than using

66
00:04:12,250 --> 00:04:16,720
position we're using the property name to D structure to unpack.
