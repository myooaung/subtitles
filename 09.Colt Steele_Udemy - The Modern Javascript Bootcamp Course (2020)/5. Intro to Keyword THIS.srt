1
00:00:00,300 --> 00:00:04,410
Next up we'll see one of the keys to writing useful methods in our objects.

2
00:00:04,410 --> 00:00:05,540
It's called the keyword.

3
00:00:05,550 --> 00:00:11,370
This now the key word this is also pretty useful it comes up a lot once you get to DOM manipulation

4
00:00:11,400 --> 00:00:16,530
which is right around the corner when we do things like add events click events and keyboard events

5
00:00:16,890 --> 00:00:21,180
will sometimes reference that keyword this and you've probably come across it if you've ever attempted

6
00:00:21,180 --> 00:00:22,440
to learn JavaScript.

7
00:00:22,620 --> 00:00:28,950
It's a concept that has shown but this can be a major point of confusion and misery and hardship and

8
00:00:28,950 --> 00:00:33,690
general suffering in the life of a new javascript developer at least that's the perception a lot of

9
00:00:33,690 --> 00:00:34,760
people have.

10
00:00:34,830 --> 00:00:37,870
There are courage posters like this one.

11
00:00:37,920 --> 00:00:42,100
One of the most courageous decisions he'll ever make is to try and learn the javascript keyword this.

12
00:00:42,210 --> 00:00:45,390
Well actually I just made this slide myself.

13
00:00:45,390 --> 00:00:51,090
But the point is a lot of people have this perception of this being this terrifying confusing thing

14
00:00:51,270 --> 00:00:54,010
when in reality it's not that bad.

15
00:00:54,060 --> 00:01:00,690
What is tricky about the keyword this is that the value of it is sometimes it seems unpredictable.

16
00:01:00,690 --> 00:01:05,820
It seems like you expected to do one thing and it behaves a different way but there is a set of concrete

17
00:01:05,820 --> 00:01:08,940
rules that dictate what the value of this is.

18
00:01:09,120 --> 00:01:12,040
At this point we haven't even talked about what this is.

19
00:01:12,060 --> 00:01:13,440
What's the point.

20
00:01:13,440 --> 00:01:15,000
So this is a keyword.

21
00:01:15,240 --> 00:01:20,340
Think of it as a reference to the current execution scope.

22
00:01:20,340 --> 00:01:22,760
It is going to give you an object back.

23
00:01:22,860 --> 00:01:29,220
So depending on the scope and depending on the rules of how this works which is the confusing part that

24
00:01:29,250 --> 00:01:34,500
object changes it could be a reference to the global scope which is what we're going to see right now

25
00:01:35,130 --> 00:01:43,040
if we type a function let's call it say hi console dot log something in here.

26
00:01:43,070 --> 00:01:44,950
Hi.

27
00:01:45,460 --> 00:01:47,460
And then let's also console that log.

28
00:01:47,470 --> 00:01:48,730
The value of this.

29
00:01:48,760 --> 00:01:49,280
Remember.

30
00:01:49,330 --> 00:01:51,460
Get an object here when we console that log it.

31
00:01:51,490 --> 00:01:57,160
This is an object and it refers to the current execution scope.

32
00:01:57,160 --> 00:02:05,860
So if I run my code here I call say hi we get high and then we see an object called the window.

33
00:02:05,860 --> 00:02:07,110
So what is the window.

34
00:02:07,360 --> 00:02:10,170
The window is the global scope in the browser.

35
00:02:10,480 --> 00:02:17,050
We've been working with it stealthily or it spend stealthily looming over us this whole time when we

36
00:02:17,050 --> 00:02:19,890
define a function like say hi.

37
00:02:20,290 --> 00:02:23,430
It looks like it's floating on its own in the middle of nowhere.

38
00:02:23,440 --> 00:02:24,910
We didn't put it in an object.

39
00:02:24,910 --> 00:02:27,690
It's not a method like we called earlier we had math.

40
00:02:27,680 --> 00:02:32,230
Dot had that was a method or lower case math in our case.

41
00:02:32,230 --> 00:02:32,970
Say hi.

42
00:02:33,010 --> 00:02:35,850
Looks like it's just floating in the middle of nowhere.

43
00:02:36,010 --> 00:02:41,410
But if we look at this window object scroll all the way down here to the s..

44
00:02:41,410 --> 00:02:42,130
Okay.

45
00:02:42,130 --> 00:02:43,820
Lots and lots of methods.

46
00:02:43,840 --> 00:02:44,620
Take a look at that.

47
00:02:44,620 --> 00:02:46,280
Say hi.

48
00:02:46,300 --> 00:02:50,260
So when we define say hi like this it is added as a prop..

49
00:02:50,260 --> 00:02:52,930
It is a method on the window object.

50
00:02:52,930 --> 00:02:55,700
The window is the global scope of our browser.

51
00:02:55,750 --> 00:03:00,530
If I type a window at any point in my console we'll get the same thing.

52
00:03:00,550 --> 00:03:07,690
So this instead of a function just a regular function normally refers to the window at least in the

53
00:03:07,690 --> 00:03:08,910
browser in node.

54
00:03:08,950 --> 00:03:12,020
It refers to something else but there is a global object.

55
00:03:12,040 --> 00:03:15,670
It's not called the window but there's a global object in node.

56
00:03:15,670 --> 00:03:17,700
But remember that this can change.

57
00:03:17,710 --> 00:03:19,030
It's a bit of a shape shifter.

58
00:03:19,030 --> 00:03:21,160
So it does depend on how it is called.

59
00:03:21,160 --> 00:03:26,620
So I don't want you to leave thinking that anytime you write this in a function it refers to the window.

60
00:03:27,130 --> 00:03:31,490
But in this function the way that we executed it it does refer to the window.

61
00:03:31,900 --> 00:03:36,670
And just to talk more about the window for a moment here the window contains all sorts of different

62
00:03:36,670 --> 00:03:44,920
properties we've been using different methods things like alert if we call alert we get our alert in

63
00:03:44,920 --> 00:03:45,670
the browser.

64
00:03:45,670 --> 00:03:50,830
It's a built in function and we call it like this but it's a property on the window.

65
00:03:50,830 --> 00:03:57,520
So I could also call it like this window dot alert something and I still get the same result.

66
00:03:58,920 --> 00:04:05,910
Another very important thing about the window when we declare a variable with var I'll go with var color

67
00:04:06,210 --> 00:04:12,750
equals teal that color or that variable color is added to the window.

68
00:04:12,990 --> 00:04:18,290
If I look at window again and I find color on here there you go.

69
00:04:18,630 --> 00:04:20,250
It's added to the global scope.

70
00:04:20,310 --> 00:04:21,450
It's added to the window.

71
00:04:21,870 --> 00:04:23,430
So another way of referencing it.

72
00:04:23,460 --> 00:04:26,290
Oh my gosh I regret this decision to scroll here.

73
00:04:26,400 --> 00:04:29,850
Another way of referencing it is window down color.

74
00:04:29,940 --> 00:04:32,230
But that does not apply for Latin content.

75
00:04:32,430 --> 00:04:34,150
We'll just do one let's use it.

76
00:04:34,290 --> 00:04:38,410
Let num equals 400.

77
00:04:38,580 --> 00:04:42,890
If I try to access window dot num it's not there.

78
00:04:43,020 --> 00:04:45,890
So Latin const are not added to the global scope.

79
00:04:45,900 --> 00:04:50,240
They're not added to the window object in the browser while VAR is.

80
00:04:50,430 --> 00:04:52,410
So none of that really matters at this point.

81
00:04:52,410 --> 00:04:54,480
We're still just talking about functions.

82
00:04:54,660 --> 00:05:00,870
The value of this instead of a regular old function you haven't put on an object just a function we've

83
00:05:00,870 --> 00:05:02,280
defined like this one.

84
00:05:02,280 --> 00:05:06,320
It could also be a function expression const.

85
00:05:06,750 --> 00:05:11,400
How about Grete equals function.

86
00:05:12,270 --> 00:05:15,720
And then if we don't need any arguments we'll just cancel that log.

87
00:05:15,720 --> 00:05:18,650
This so we're not even greeting.

88
00:05:18,920 --> 00:05:21,760
It's a lie but we'll just cancel out like this.

89
00:05:21,770 --> 00:05:27,440
If I clear my console over here refresh the page.

90
00:05:27,440 --> 00:05:29,260
I call greet.

91
00:05:29,510 --> 00:05:31,640
This is still the window.

92
00:05:32,090 --> 00:05:36,560
So in a function this is going to refer to the window except when it doesn't.

93
00:05:36,560 --> 00:05:38,120
And that's coming up next.

94
00:05:38,120 --> 00:05:43,730
So just remember that this is a reference to an object and that object represents the current execution

95
00:05:43,730 --> 00:05:44,590
scope.

96
00:05:44,630 --> 00:05:47,170
So this seems like it might not be that useful here.

97
00:05:47,240 --> 00:05:52,820
And yeah it probably isn't that useful to reference the window because we could also just explicitly

98
00:05:52,820 --> 00:05:57,130
write window if we wanted to print the window or do something with it.

99
00:05:57,260 --> 00:06:02,480
But what we'll see in the next video is where this is extremely useful when we're working with methods

100
00:06:02,510 --> 00:06:03,630
in an object.

101
00:06:03,680 --> 00:06:08,840
So if you're confused if you're feeling like you need that courage from this slide right here if you're

102
00:06:08,840 --> 00:06:12,730
feeling like this skull down here you need a bit more courage.

103
00:06:12,740 --> 00:06:16,940
Just hang in there it will start to make sense as we see the other pieces okay.
