WEBVTT
1
00:00:00.610 --> 00:00:05.210
The last little bit of refactoring we have to do is to extract some more each HTML generation into some

2
00:00:05.210 --> 00:00:09.110
different files we're going to place inside of a new views directory.

3
00:00:09.110 --> 00:00:13.790
So the idea here is that we're going to have a bunch of different files inside of a new directory each

4
00:00:13.790 --> 00:00:18.320
file is going to be responsible for returning one little snippet of each team out.

5
00:00:18.530 --> 00:00:22.190
So for example I'm looking at my sign up request handler right here.

6
00:00:22.250 --> 00:00:26.350
At present we are returning just a little bit of HCM CML to show these sign up form.

7
00:00:26.530 --> 00:00:32.040
So we're going to extract all this HCM El and put it into its own single file.

8
00:00:32.060 --> 00:00:35.090
I want to tell you a little bit more about the structure of all these different files we're going to

9
00:00:35.090 --> 00:00:36.660
create.

10
00:00:36.850 --> 00:00:37.150
All right.

11
00:00:37.160 --> 00:00:42.230
So in the world of Express there are actually many different ways to generate HCM El.

12
00:00:42.260 --> 00:00:45.760
These are a couple of very popular templating libraries.

13
00:00:45.800 --> 00:00:50.920
So essentially libraries that help you put together HMO or less.

14
00:00:51.140 --> 00:00:55.250
I would love to show you how to use some of these different libraries but to be honest with you each

15
00:00:55.250 --> 00:00:59.720
of them really requires you to learn almost a new programming language because they all have their little

16
00:00:59.930 --> 00:01:06.140
special form of syntax to help you put together some HCM l I found in the past that when you're first

17
00:01:06.140 --> 00:01:11.540
learning about Express in web development in general and JavaScript introducing a h templating library

18
00:01:11.540 --> 00:01:16.460
with its own particular form of syntax starts to get really confusing really quickly.

19
00:01:16.460 --> 00:01:21.110
So rather than introducing any of these different templating libraries we're going to instead take a

20
00:01:21.110 --> 00:01:23.960
very simple and straightforward solution.

21
00:01:23.960 --> 00:01:30.230
We're going to have all of our different template files export a function that returns a string and

22
00:01:30.230 --> 00:01:32.720
inside of that string is gonna be all of our each team.

23
00:01:33.180 --> 00:01:40.100
So really all we are going to do is essentially but all this stuff like we said into a separate file

24
00:01:40.250 --> 00:01:41.460
inside of a function.

25
00:01:41.680 --> 00:01:46.730
And if we ever need to customize this HDL like we are doing right here essentially we're gonna pass

26
00:01:46.730 --> 00:01:50.980
the appropriate arguments into that function that returns that string.

27
00:01:51.050 --> 00:01:54.830
Now as usual when I say that with words it starts to sound a little bit confusing.

28
00:01:54.950 --> 00:01:59.270
So let's just start to refactor some this e-mail into some separate files and I think you'll get an

29
00:01:59.270 --> 00:02:02.500
idea of what we're doing here really quickly okay.

30
00:02:02.530 --> 00:02:08.770
So to get started inside of my root project directory I'm gonna make a new folder called views then

31
00:02:08.780 --> 00:02:11.500
inside there I'm going to make a folder called admin.

32
00:02:11.540 --> 00:02:17.190
So this is going to contain all of our administration related views inside there.

33
00:02:17.190 --> 00:02:22.060
I'm going to make another new folder called off says he guessed this is going ahead handle all the different

34
00:02:22.420 --> 00:02:27.550
H.M. files or you mean essential generation that we have around authentication.

35
00:02:27.550 --> 00:02:35.990
So then finally inside the author directory we will create a sign in that J.S. file in a sign up dot

36
00:02:36.000 --> 00:02:37.380
J.S. file.

37
00:02:37.600 --> 00:02:41.520
So again in both these new files we're going to create a function and export it.

38
00:02:41.710 --> 00:02:46.710
And that function is going to essentially just be returning some snippet of H2 email.

39
00:02:46.930 --> 00:02:52.890
Let's first start off with the sign up file your sign up right here inside of sign up.

40
00:02:52.930 --> 00:02:57.020
Yes I'll do a module that exports very function

41
00:02:59.990 --> 00:03:00.770
then inside of here.

42
00:03:00.780 --> 00:03:02.670
I'm going to return a template string

43
00:03:05.490 --> 00:03:09.720
and the stuff that I want to return inside that template string is going to be the form that we had

44
00:03:09.720 --> 00:03:15.230
just put together back inside of our sign up root handler it's going to take that entire day right they're

45
00:03:15.940 --> 00:03:24.360
going to cut it a go back over to sign up J.S. and paste it in now right away.

46
00:03:24.370 --> 00:03:29.240
You're going to see that our function really requires an argument for it to work correctly.

47
00:03:29.350 --> 00:03:34.900
So we need to make sure that whenever we call this function we need to pass in the wreck object in order

48
00:03:34.900 --> 00:03:36.880
for our template to render appropriately.

49
00:03:36.880 --> 00:03:42.390
Otherwise we're going to get an error something and says Hey variable wreck is not found so to receive

50
00:03:42.450 --> 00:03:46.950
all the different arguments that I eventually expect to have to pass into this template function.

51
00:03:46.950 --> 00:03:51.900
I'm going to assume that I'm going to pass on an object that has all the different properties all the

52
00:03:51.900 --> 00:03:55.520
different objects all the things I need to show this template.

53
00:03:55.710 --> 00:04:00.960
So I'm going to d structure out the wreck object again I'm assuming that's going to pass in an object

54
00:04:01.140 --> 00:04:07.530
that has a wrecked property that contains the wreck object from a root handler you might be curious

55
00:04:07.530 --> 00:04:11.130
why I'm going to assume that we're going to pass in an object as opposed to just saying oh yeah we're

56
00:04:11.130 --> 00:04:12.610
going to pass in the request.

57
00:04:12.840 --> 00:04:17.550
The reason for that is that we're going to eventually have some templates that need many different arguments

58
00:04:17.580 --> 00:04:21.450
in order to render themselves correctly or display themselves correctly.

59
00:04:21.510 --> 00:04:25.290
So just to accommodate for that fact that we don't know how many arguments we're going to eventually

60
00:04:25.290 --> 00:04:29.970
pass into any of these I'm like I said just going to assume that I'm going to pass in an object so I

61
00:04:29.970 --> 00:04:34.590
can over time start to add in as many different arguments to each my different templating functions

62
00:04:34.620 --> 00:04:42.570
as I want not having to constantly add on additional arguments like you know ARG one or two ARG three

63
00:04:42.570 --> 00:04:45.330
and so on that starts to get really confusing it really quickly.

64
00:04:45.390 --> 00:04:52.290
So again I'm just going to assume that I'm always going to combine all into one single object it's now

65
00:04:52.290 --> 00:04:53.510
to actually make use of this.

66
00:04:53.520 --> 00:04:57.850
We can go back to off J.S. at the very top.

67
00:04:57.850 --> 00:05:00.450
We're going to import that templating function.

68
00:05:00.650 --> 00:05:04.650
So I'll say sign up template is required.

69
00:05:04.860 --> 00:05:09.680
And remember we have to provide a relative path to the file that we're trying to require in.

70
00:05:10.020 --> 00:05:16.650
We are currently inside of routes admin off J.S. so we have to go up one directory to routes up another

71
00:05:16.650 --> 00:05:22.820
directory to our root project folder interviews into admin into off and then get sign up J.S..

72
00:05:23.250 --> 00:05:31.680
So we're going to do in total up up interviews into admin into off and then sign up

73
00:05:36.350 --> 00:05:40.730
so then inside a resort send right here rather than calling out with an empty string.

74
00:05:40.830 --> 00:05:42.900
We will instead call sign up template

75
00:05:46.230 --> 00:05:54.000
and as an argument to sign up template I'm going to pass in an object that has the Rec object like so.

76
00:05:54.190 --> 00:05:59.870
And as usual identical keen value so I can condense that down to just wreck.

77
00:05:59.970 --> 00:06:03.950
So again if we ever need to communicate more information into our template function we're just going

78
00:06:03.950 --> 00:06:09.690
to add them in or add in that additional information as additional Kiki value pairs inside this object.

79
00:06:09.690 --> 00:06:13.740
But for right now we only need the Rec object in order for the sign up template to work correctly.

80
00:06:13.740 --> 00:06:16.980
So just this right here is to work out just fine okay.

81
00:06:17.040 --> 00:06:23.790
Let's say this really quickly we'll go back over and do a quick test going to visit locos 3000 slash

82
00:06:23.850 --> 00:06:28.200
sign up and I should still see the same exact thing I saw before.

83
00:06:28.200 --> 00:06:28.480
Okay.

84
00:06:28.530 --> 00:06:30.700
So definite looks good.

85
00:06:30.860 --> 00:06:33.050
Now I would love to take a pause right here but to be honest.

86
00:06:33.050 --> 00:06:38.150
Well we're just going to do the same exact thing in the next video around refactoring the sign in form

87
00:06:38.600 --> 00:06:39.770
which we have down here.

88
00:06:39.770 --> 00:06:41.830
So let's just take care of that right away really quickly.

89
00:06:41.830 --> 00:06:47.270
Since we already know exactly what we're doing I'm going to go to sign in J.S. so this is inside my

90
00:06:47.270 --> 00:06:48.300
views directory.

91
00:06:48.470 --> 00:06:55.310
I'll do a module dot exports this one does not require this template right here does not require the

92
00:06:55.310 --> 00:06:56.940
Rec object to work correctly.

93
00:06:56.990 --> 00:07:00.410
So in this case although we can pass in that Rec object if we want to.

94
00:07:00.410 --> 00:07:03.070
I'm not going to say that we have to because well we don't actually need it.

95
00:07:04.800 --> 00:07:11.080
So inside of my sign in root handler I'm going to take that div I'm going to cut it.

96
00:07:11.290 --> 00:07:18.170
I'll go back over to sign in dot J.S. I'll return a template string inside there I'll paste that div

97
00:07:21.250 --> 00:07:29.320
that should be it for the sign in J.S. view I'll then go back over to my off dot J.S. file at the top

98
00:07:30.460 --> 00:07:37.330
I'm going to require that thing in I'll do sign in template but they're very similar at require statement

99
00:07:41.070 --> 00:07:44.430
that looks good.

100
00:07:44.560 --> 00:07:49.510
And then finally to make use of that template I'll go back down to where we call resource center inside

101
00:07:49.510 --> 00:08:00.590
of our sign in a root handler and I'm going to update the rest send statement to sign in template okay.

102
00:08:00.630 --> 00:08:02.130
So let's save this.

103
00:08:02.370 --> 00:08:09.080
Go back over one more time I'm gonna go to slash sign in and everything still looks good okay.

104
00:08:09.100 --> 00:08:10.900
That's a pretty straightforward refactor again.

105
00:08:10.960 --> 00:08:15.190
We're just extracting all this h t into some separate files.

106
00:08:15.190 --> 00:08:20.230
So at this point we kind of have parity with how our application was before we started to do this little

107
00:08:20.230 --> 00:08:22.880
bit of refactor of kind of restructuring things.

108
00:08:23.560 --> 00:08:28.240
So our project definitely has a little bit better structure but there's still some really big deficiencies

109
00:08:28.240 --> 00:08:32.860
inside of our project that I'd like to correct before we continue adding on any additional features

110
00:08:32.860 --> 00:08:37.770
like say the product stuff or product creation all that kind of good stuff.

111
00:08:37.780 --> 00:08:38.670
Let's take a pause right here.

112
00:08:38.680 --> 00:08:42.220
Come back the next video we're going to discuss a couple more changes that we're going to make inside

113
00:08:42.220 --> 00:08:46.300
of our project just to make it all a bit more well fancy and production ready.
