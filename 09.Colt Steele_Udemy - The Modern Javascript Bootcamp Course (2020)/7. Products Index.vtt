WEBVTT
1
00:00:00.640 --> 00:00:02.950
Let's continue working on our root root handler.

2
00:00:03.030 --> 00:00:06.400
So I'm back inside of my roots products not J.S. file again.

3
00:00:06.430 --> 00:00:10.960
Remember that we have two products not just files at this point in time I'm not really going to be opening

4
00:00:10.960 --> 00:00:16.060
up anything inside the admin directory anymore so any time that I reference products not J.S. I'm always

5
00:00:16.060 --> 00:00:21.200
talking about the immediate one that's inside of our roots directory so inside of here right now we're

6
00:00:21.200 --> 00:00:25.850
just sending the text of products but instead to actually show a correct listing of products to our

7
00:00:25.850 --> 00:00:31.070
user like what we have in the market back over here we need to reach into our repository get out a list

8
00:00:31.070 --> 00:00:37.050
of all the products we have and then send them off to some template to be rendered onto the screen so

9
00:00:37.230 --> 00:00:39.270
to get started at the very top of this file.

10
00:00:39.300 --> 00:00:48.840
I'm going to get access to our products repo so I'll do products repo is require up one directory repositories

11
00:00:53.120 --> 00:00:54.770
then inside of our root root handler.

12
00:00:54.950 --> 00:01:02.840
We can do a counts products is a weight products repo not get all.

13
00:01:03.060 --> 00:01:06.320
We haven't really used the get all method in a while just as a quick reminder.

14
00:01:06.330 --> 00:01:12.920
All it does is reach into that file whichever file is storing all of our records and reads everything

15
00:01:12.920 --> 00:01:17.850
directly out there and returns it to us in an array their products right here is going to be an array

16
00:01:17.850 --> 00:01:18.730
of objects.

17
00:01:18.750 --> 00:01:26.650
Each product will have the I.D. the title the product the price and the actual image as well now rather

18
00:01:26.650 --> 00:01:31.030
than doing a send of some text right here we can instead create a new template.

19
00:01:31.240 --> 00:01:37.520
So inside of my views directory I'm going to create a new folder inside they're called products.

20
00:01:37.900 --> 00:01:41.920
And then inside I'll make a new file called index dot J.S..

21
00:01:41.920 --> 00:01:45.540
So once again notice that we have a admin directory inside of use.

22
00:01:45.640 --> 00:01:48.340
We're not going to be working inside the admin directory much anymore.

23
00:01:48.340 --> 00:01:51.310
Instead we're going to be working inside of views directly.

24
00:01:51.310 --> 00:01:57.400
So we just made that new folder inside of views not admin and created the indexed not just file and

25
00:01:57.460 --> 00:01:58.150
inside of here.

26
00:01:58.210 --> 00:02:02.400
We're going to have some very similar structure to what we were doing for all of our admin templates.

27
00:02:02.500 --> 00:02:08.230
We need to have a layout at some point time that's going to render our layout specifically for the customer

28
00:02:08.230 --> 00:02:10.280
facing side of our product.

29
00:02:10.330 --> 00:02:11.770
We won't worry about that just yet.

30
00:02:11.770 --> 00:02:18.120
So right now let's just create a template that will render out all the different products we have inside

31
00:02:18.120 --> 00:02:18.450
of here.

32
00:02:18.510 --> 00:02:25.980
I'll do a module that exports I'm going to expect that this will be called with an object that's going

33
00:02:25.980 --> 00:02:28.590
to contain all of our different products inside of it

34
00:02:31.960 --> 00:02:32.590
than inside.

35
00:02:32.620 --> 00:02:38.680
We can iterate or do a mapping statement over that big list of products for each one we can print out

36
00:02:38.680 --> 00:02:45.890
some information and eventually throw it into a big list of sorts so inside of here I'll say rendered

37
00:02:45.890 --> 00:02:56.570
products is products stop map then for each product we're going to return a little HDL snippet the Now

38
00:02:56.600 --> 00:03:02.240
let's try to display each product just the title in the price inside of a unordered list.

39
00:03:02.240 --> 00:03:03.740
So a well element.

40
00:03:04.040 --> 00:03:06.670
Each individual product will be displayed inside of an ally.

41
00:03:07.430 --> 00:03:11.830
So for each product we'll display an ally and inside of your.

42
00:03:11.850 --> 00:03:18.850
I'll print out the product title and a dash and then product dot price

43
00:03:21.860 --> 00:03:25.400
I remember when we do a mapping statement as we have right here we're going to end up with an array

44
00:03:25.400 --> 00:03:26.270
of strings.

45
00:03:26.390 --> 00:03:29.630
We don't want to show an array of strings inside of some HMO inside we want.

46
00:03:29.690 --> 00:03:34.830
Instead we want to join all these array of strings together into one single big string.

47
00:03:34.830 --> 00:03:39.010
So at the very end of the map statement we'll do a join on empty string

48
00:03:42.540 --> 00:03:49.560
and finally at the bottom I will return a multiplied string and like I said we're going to right now

49
00:03:49.560 --> 00:04:00.630
just do a u l element and inside there we'll show our big list of rendered products all right.

50
00:04:00.630 --> 00:04:04.900
So we definitely are going to come back through here and apply a layout and also a lot more each team

51
00:04:04.890 --> 00:04:06.970
L to show each individual product.

52
00:04:06.990 --> 00:04:10.240
What this will do for right now it's going to save this.

53
00:04:10.350 --> 00:04:14.660
I'm gonna go back to my product start j ust file so here's our root handler.

54
00:04:14.710 --> 00:04:20.340
We're just working on at the top are going to require in the template that we just created the products

55
00:04:20.490 --> 00:04:28.570
index template and all require that from up one directory views products index

56
00:04:33.460 --> 00:04:40.200
and then in place of the resort sent I'll do a resort send with products index template and remember

57
00:04:40.230 --> 00:04:46.180
whenever we call this template we're gonna pass an object that has all of our products inside of it.

58
00:04:46.180 --> 00:04:50.970
And as usual condense it down to just products okay.

59
00:04:50.970 --> 00:04:52.100
So this is looking pretty good.

60
00:04:52.150 --> 00:04:53.630
And he has time to do a quick test.

61
00:04:53.700 --> 00:04:56.870
So going to save this file I'm going to save the template we just created.

62
00:04:56.960 --> 00:05:02.120
I'm gonna go back over to my application and I'm going to navigate to my root route again which is just

63
00:05:02.130 --> 00:05:05.040
local host colon 3000 low refresh.

64
00:05:05.040 --> 00:05:07.050
And there we go there's our products.

65
00:05:07.050 --> 00:05:10.120
So I can see each title in the price as well.

66
00:05:10.170 --> 00:05:13.830
Now of course there's definitely a lot of styling that needs to be done here to get to this point in

67
00:05:13.830 --> 00:05:18.160
time but at least we can show these all out on the list inside the browser.

68
00:05:18.300 --> 00:05:19.800
So let's not take a quick pause right here.

69
00:05:19.830 --> 00:05:23.730
When we come back the next section this is like some pretty easy stuff we're going through right now.

70
00:05:23.790 --> 00:05:28.620
So we're going to once again get a template file so I'm going to give you some HCM L to just throw directly

71
00:05:28.620 --> 00:05:29.420
inside of here.

72
00:05:29.490 --> 00:05:34.560
And I'm also gonna give you some pre done layout as well that's going to have a lot of the other stuff

73
00:05:34.590 --> 00:05:35.580
that you see on the screen here.

74
00:05:35.580 --> 00:05:38.580
So like a header with some links at the top all that kind of good stuff.

75
00:05:39.090 --> 00:05:42.400
So great pause and let's do some additional setup in just a moment.
