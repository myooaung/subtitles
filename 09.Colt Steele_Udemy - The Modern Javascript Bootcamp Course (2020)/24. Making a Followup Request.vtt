WEBVTT
1
00:00:00.990 --> 00:00:05.400
Like we said at the end of the last video we now need to take the movie that these are just selected

2
00:00:05.640 --> 00:00:07.630
and show some details about it right here.

3
00:00:07.680 --> 00:00:09.830
There's just one or two things to be aware of.

4
00:00:09.870 --> 00:00:15.750
First off I want to remind you that the open DVR API that we're using has those two different endpoints

5
00:00:15.750 --> 00:00:21.150
that we're making use of right now we've got some results come back from the biased search method right

6
00:00:21.150 --> 00:00:25.800
here and that only gives us some very limited pieces of information about every movie.

7
00:00:25.800 --> 00:00:30.840
So when a user selects an actual movie that means that we need to do a follow up request to the API

8
00:00:31.230 --> 00:00:36.870
and we need to then attempt to fetch that movie by I.D. once we do the request by I.D. that's going

9
00:00:36.870 --> 00:00:42.450
to give us a very much expanded set of information about this particular movie that's going to give

10
00:00:42.450 --> 00:00:45.740
us stuff like the critic ratings and the box office take.

11
00:00:45.780 --> 00:00:48.540
And the plot summary and so on.

12
00:00:48.540 --> 00:00:54.240
So in other words once a user clicks on the movie and we detect it right here we need to make a follow

13
00:00:54.240 --> 00:01:00.560
up request get some more information and then use that to update some content on the screen we could

14
00:01:00.560 --> 00:01:03.410
definitely add all that code right here inside of our event listener.

15
00:01:03.430 --> 00:01:13.450
So we can add in a ton of code and say okay do another request get data render data and so on.

16
00:01:13.620 --> 00:01:18.930
But I bet you could very quickly imagine that that's going to be a fair bit of code this file the index

17
00:01:18.930 --> 00:01:24.180
not just file that we're working on already has a lot of code inside of it and it's all kind of a hodgepodge

18
00:01:24.270 --> 00:01:25.800
of different stuff right now.

19
00:01:25.800 --> 00:01:30.720
And so if we start to add in all this additional code directly into this event listener Well this file

20
00:01:30.720 --> 00:01:34.520
is going to get even more challenging to read and understand.

21
00:01:34.590 --> 00:01:39.600
So instead of tucking all that logic in right there I think that we should make some other helper function

22
00:01:39.630 --> 00:01:45.900
inside this file maybe something called like on movie select or something and inside of that helper

23
00:01:45.900 --> 00:01:51.900
function we can make sure that we attempt to do all that extra logic do the x request render that additional

24
00:01:51.900 --> 00:01:53.760
content onto the screen.

25
00:01:53.940 --> 00:01:58.920
So I'm going to imagine that we're going to define a another helper function side this file called on

26
00:01:59.130 --> 00:02:05.760
movie select and I'm going to call that with the movie that the user just clicked on it's now let's

27
00:02:05.760 --> 00:02:12.160
go define this helper function and we can put all that additional logic inside their going to go down

28
00:02:12.160 --> 00:02:20.750
to the bottom of the file and going to define on movie select it's going to be called with some movie

29
00:02:20.780 --> 00:02:22.010
object.

30
00:02:22.010 --> 00:02:24.950
And right now let's just do a console log.

31
00:02:24.950 --> 00:02:29.150
Now I'm sure I don't need to prove to you that we're going to call this function successfully like hey

32
00:02:29.180 --> 00:02:30.190
that's definitely going to work.

33
00:02:30.200 --> 00:02:33.000
I don't have any reason to suspect it won't work.

34
00:02:33.020 --> 00:02:36.920
The reason I just want to do a console log right here is to just remind you some of the properties that

35
00:02:36.920 --> 00:02:41.300
we currently have access to and the properties that we're going to need to make the followup request

36
00:02:41.330 --> 00:02:44.880
to our API and get that additional amount of data.

37
00:02:45.020 --> 00:02:46.220
So let's save this.

38
00:02:46.260 --> 00:02:54.530
I'm going to go back over I will refresh all once again do the Avengers click on it and I see that console

39
00:02:54.530 --> 00:02:55.630
log.

40
00:02:55.760 --> 00:03:00.260
So again I just want to remind you that inside of the current data set that we have right here about

41
00:03:00.260 --> 00:03:07.820
this one very particular movie we've got that property called I Am D.B. I.D. It knows how ideas capital

42
00:03:07.820 --> 00:03:09.270
for both letters.

43
00:03:09.350 --> 00:03:14.150
So that is the idea that we're going to use to make our follow up request to the API.

44
00:03:14.150 --> 00:03:15.940
We're going to do the follow up request.

45
00:03:15.980 --> 00:03:19.390
We're going to pass that I.D. in as a parameter called I.

46
00:03:19.460 --> 00:03:25.180
And that is what is going to give us all that additional data about the movie.

47
00:03:25.210 --> 00:03:31.750
So inside of here I'm going to make this into an async function so we can then go ahead and use the

48
00:03:31.750 --> 00:03:41.850
await syntax and axioms to make our follow up request so I will write out const response is a wait Acciona

49
00:03:41.890 --> 00:03:46.160
dot get I'm going to go back up to the top of the file.

50
00:03:46.940 --> 00:03:52.060
And get the your l from the first request you made up here it's going to get that you are all right

51
00:03:52.060 --> 00:03:57.560
there just to save myself a little bit of typing and you know what I'm gonna go ahead and copy the entire

52
00:03:57.560 --> 00:04:01.380
axioms get function because we need that programs and the API key as well.

53
00:04:01.640 --> 00:04:03.510
So I'm going to copy all that stuff.

54
00:04:03.600 --> 00:04:09.910
I'm gonna go back down to the bottom and put it in like so then inside of here.

55
00:04:09.920 --> 00:04:15.080
We just need to make sure that we update the parameter object rather than passing along a pram of S

56
00:04:15.110 --> 00:04:16.980
which is what is used for doing a search.

57
00:04:16.980 --> 00:04:22.370
We instead want to do an individual lookup so like we just saw we need to provide a parameter of that

58
00:04:22.370 --> 00:04:23.230
letter.

59
00:04:23.440 --> 00:04:30.600
And that is going to be the movie I am DV I.D. so I'll put an I and we want that value to come from

60
00:04:30.790 --> 00:04:40.890
the movie that we just selected that I am DV capital I capital D So then after that we'll do a quick

61
00:04:42.680 --> 00:04:48.020
console log of the data so a response dot data like so yeah.

62
00:04:48.060 --> 00:04:49.090
So let's try this out again.

63
00:04:49.140 --> 00:04:54.560
Just make sure we still have the data we expect it's I'll do a search for the Avengers I'll click on

64
00:04:54.560 --> 00:04:55.840
it and there we go.

65
00:04:55.850 --> 00:05:01.540
We do the follow up request and get all that additional data about this particular movie.

66
00:05:01.560 --> 00:05:06.110
Well now that we've got all the data we can now start to think about taking that information and rendering

67
00:05:06.110 --> 00:05:06.660
it out.

68
00:05:06.680 --> 00:05:10.850
So we're going to essentially just have to write out a lot of each CML to build up this kind of structure

69
00:05:10.850 --> 00:05:11.830
right here.

70
00:05:11.870 --> 00:05:16.010
So as you probably would guess quick pause and we'll start to write that stuff out in the next video.
