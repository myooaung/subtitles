WEBVTT
1
00:00:00.270 --> 00:00:07.050
So we saw that we can use a for loop with an object as long as we also use object keys or object out

2
00:00:07.050 --> 00:00:08.960
values in conjunction with it.

3
00:00:08.970 --> 00:00:13.770
There's also another type of loop called A for in loop which we'll talk about in this video.

4
00:00:13.770 --> 00:00:17.720
The very last loop we have to cover if you have not seen Ahmadiyya yet.

5
00:00:17.790 --> 00:00:21.140
Oh fantastic movie forgot about how great that movie is.

6
00:00:21.150 --> 00:00:22.980
There's a reason it's the only 10 on the list.

7
00:00:23.370 --> 00:00:28.260
OK so for in syntactically is very similar to four of.

8
00:00:28.350 --> 00:00:35.580
We have four per NS variable in an object instead of of an array or an interval.

9
00:00:35.610 --> 00:00:42.450
The main difference is that a four of will iterate over the actual values in an array or an admirable

10
00:00:42.750 --> 00:00:43.610
in a string.

11
00:00:43.620 --> 00:00:51.180
Each character in an array each value a four in will loop over the keys the properties in an object.

12
00:00:51.180 --> 00:00:52.140
So here's an example.

13
00:00:52.140 --> 00:00:52.860
Object.

14
00:00:52.860 --> 00:00:54.180
Jeopardy winnings.

15
00:00:54.180 --> 00:00:56.120
This represents Ken Jennings.

16
00:00:56.160 --> 00:01:01.650
If you are familiar with him think he's the all time winningest Jeopardy contestant.

17
00:01:01.740 --> 00:01:06.930
It's how he made all of his earnings or his money from Jeopardy it came in different pieces.

18
00:01:06.930 --> 00:01:09.800
His long stretch of gameplay was two and a half million.

19
00:01:09.810 --> 00:01:16.080
He participated in this IBM Watson challenge where he played Jeopardy against a supercomputer got three

20
00:01:16.200 --> 00:01:19.170
thousand five hundred thousand for a tournament of champions.

21
00:01:19.170 --> 00:01:23.110
It doesn't really matter if you don't watch jeopardy then you must be bored at this point.

22
00:01:23.190 --> 00:01:24.110
So we'll move on.

23
00:01:24.150 --> 00:01:27.530
Let's try using a four in four.

24
00:01:27.720 --> 00:01:36.040
And then we make a variable for lights and then we could just call it property in jeopardy winnings.

25
00:01:36.270 --> 00:01:38.210
We'll console dot log prop.

26
00:01:38.430 --> 00:01:44.190
Perhaps not a great name but sometimes it's tricky to figure out what to name you that variable because

27
00:01:44.190 --> 00:01:45.980
in this case it's kind of easy.

28
00:01:45.990 --> 00:01:53.840
We have very similar data but if we had a user object or we had user name and then we had age we had

29
00:01:53.850 --> 00:01:59.960
email what would be a good variable name that would make sense to hold any of these property names.

30
00:01:59.970 --> 00:02:01.980
Prop was going to be good enough for now.

31
00:02:02.100 --> 00:02:04.950
You'll see people do key or k.

32
00:02:05.280 --> 00:02:08.870
I'll go with Prop let's console that log prop and you can see it.

33
00:02:08.870 --> 00:02:16.470
We get the four keys so it's very similar to what we did with four of where we had an object keys but

34
00:02:16.470 --> 00:02:17.590
we don't have to do that.

35
00:02:17.610 --> 00:02:24.150
This will loop over the keys automatically as long as we have in instead of I changed it to of we get

36
00:02:24.150 --> 00:02:32.970
an error it's not editable four of once in editable four in once an object and that's what we get.

37
00:02:33.240 --> 00:02:38.000
So if I wanted to print out also the value I would do a console log.

38
00:02:38.610 --> 00:02:44.600
Jeopardy winnings of prop with square brackets and there we go.

39
00:02:45.480 --> 00:02:51.240
If I wanted to sum them all together to figure out his total earnings I'll just duplicate this loop

40
00:02:52.740 --> 00:02:54.780
for prop in jeopardy winnings.

41
00:02:54.870 --> 00:03:02.370
I'll make a variable to store the total let total equals zero and then each time through I'll just add

42
00:03:02.370 --> 00:03:10.120
Jeopardy winnings of Prop 2 total jeopardy winnings of prop is going to be one of these numbers.

43
00:03:10.230 --> 00:03:12.860
So we still loop over the keys.

44
00:03:12.870 --> 00:03:17.820
That's the only option we have with a 4 in it's going to loop over the properties the key names.

45
00:03:17.820 --> 00:03:24.090
And then we use that to access the value to get that value out just like a dictionary as we saw earlier

46
00:03:24.090 --> 00:03:25.230
in the object section.

47
00:03:25.230 --> 00:03:26.260
We have a word.

48
00:03:26.400 --> 00:03:29.450
We look it up in the dictionary to get the corresponding definition.

49
00:03:29.460 --> 00:03:38.460
So if I print out total at the end let's do a template literal Ken Jennings total earnings

50
00:03:41.130 --> 00:03:43.020
and then dollar sign.

51
00:03:43.230 --> 00:03:44.180
Curly braces.

52
00:03:44.180 --> 00:03:46.650
Total three point four million dollars.

53
00:03:46.650 --> 00:03:47.850
There we go.

54
00:03:47.910 --> 00:03:49.890
So that's four in one thing.

55
00:03:49.890 --> 00:03:56.040
I do want to point out is that technically you can use for in with an array but there's not really a

56
00:03:56.040 --> 00:03:57.410
good reason to.

57
00:03:57.540 --> 00:04:03.930
Now this gets into that murky area we briefly talked about at the end of the object section where Arrays

58
00:04:04.230 --> 00:04:05.310
are objects.

59
00:04:05.400 --> 00:04:10.840
They technically are objects which means that we can use a for in with an array.

60
00:04:11.130 --> 00:04:18.910
So let's do just a simple hardcoded array for let k for key in this array.

61
00:04:18.940 --> 00:04:28.090
How about eighty eight ninety nine seventy seven sixty six what do you think K is going to be when I

62
00:04:28.090 --> 00:04:29.830
printed out here.

63
00:04:29.830 --> 00:04:31.140
What will we see.

64
00:04:31.210 --> 00:04:39.400
So for each property in this array console log K from 0 1 2 3.

65
00:04:39.730 --> 00:04:41.800
No matter what values I had in here.

66
00:04:41.950 --> 00:04:46.950
If I have four values the property names are always 0 1 2 3.

67
00:04:47.350 --> 00:04:50.110
So we're not looping over the actual elements.

68
00:04:50.110 --> 00:04:51.700
The values don't matter.

69
00:04:51.700 --> 00:04:54.850
We're looping over the properties when we have an object.

70
00:04:54.850 --> 00:05:03.470
Jeopardy winnings and I want to access a piece I use a key property name like regular play and I get

71
00:05:03.470 --> 00:05:06.100
a value out when we have an array.

72
00:05:06.230 --> 00:05:07.740
We do the exact same thing.

73
00:05:07.820 --> 00:05:10.280
But the keys are numbers.

74
00:05:10.280 --> 00:05:14.060
When I look at jeopardy winnings I expand it.

75
00:05:14.060 --> 00:05:15.760
We have the keys and the values.

76
00:05:15.800 --> 00:05:19.430
And if I look at an array and I expand it we have keys and values.

77
00:05:20.030 --> 00:05:21.940
So arrays are just special cases.

78
00:05:21.940 --> 00:05:26.830
There's their special objects where the keys are an ordered set of indices.

79
00:05:26.870 --> 00:05:28.590
Numbers starting at 0.

80
00:05:28.640 --> 00:05:29.970
So that's what we're looping over.

81
00:05:29.990 --> 00:05:35.480
We're looping over the keys here which is not all that useful especially when we already have a for

82
00:05:35.540 --> 00:05:39.200
of loop which automatically gives us the values.

83
00:05:39.230 --> 00:05:46.160
The other thing to know about 4:00 in is that the order is not necessarily set in stone and that's another

84
00:05:46.160 --> 00:05:52.100
reason it's not great to use with arrays the way that for in loops can vary from browser to browser

85
00:05:52.760 --> 00:05:54.170
on the NBN docs.

86
00:05:54.170 --> 00:05:56.390
It says it's an arbitrary order.

87
00:05:56.390 --> 00:05:58.310
In my experience it's pretty stable.

88
00:05:58.310 --> 00:06:02.400
Most of the time in one browser it can change when you go to another browser.

89
00:06:02.480 --> 00:06:07.380
But also if you are updating or manipulating properties that can change the order as well.

90
00:06:07.640 --> 00:06:12.530
Unlike an array where the order is set in stone the first item is always index 0.

91
00:06:12.530 --> 00:06:14.620
The second item is always index 1.

92
00:06:14.720 --> 00:06:17.980
So don't use a four N with an array even though you can.

93
00:06:18.140 --> 00:06:20.080
It's just kind of an odd thing to do.

94
00:06:20.360 --> 00:06:22.200
And that about wraps it up for loops.

95
00:06:22.220 --> 00:06:23.960
We've seen a ton of different loops.

96
00:06:23.960 --> 00:06:27.090
Well it's not that many but we've seen a ton of examples.

97
00:06:27.110 --> 00:06:32.300
We started with four loops and we talked about while loops and we saw four of remember four of loops

98
00:06:32.300 --> 00:06:35.030
are not supported in Internet Explorer at the moment.
