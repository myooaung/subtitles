WEBVTT
1
00:00:00.270 --> 00:00:02.190
Next up we have a big one.

2
00:00:02.190 --> 00:00:08.040
Not necessarily difficult but just a really commonly used part of JavaScript and strings in particular

3
00:00:08.340 --> 00:00:11.480
something called template laterals string template laterals.

4
00:00:11.580 --> 00:00:18.870
Essentially these are special strings where we can add in information expressions other variables data

5
00:00:18.990 --> 00:00:23.520
inside the string and spit out one string by the end.

6
00:00:23.520 --> 00:00:25.400
So here's a simple example.

7
00:00:25.440 --> 00:00:31.770
Don't worry about the syntax just yet but I have a string I counted and then some weird characters.

8
00:00:31.770 --> 00:00:36.590
Three plus four sheep and it's turned into I counted seven sheep.

9
00:00:37.650 --> 00:00:42.810
So the first thing you need to know about template liberals in general is we use back tick characters

10
00:00:42.900 --> 00:00:44.430
around the string.

11
00:00:44.430 --> 00:00:48.330
It's hard to tell but those are not single quotation marks right here.

12
00:00:48.330 --> 00:00:49.670
This and this.

13
00:00:49.710 --> 00:00:54.850
Those are both back tick characters which are usually located above the tab key.

14
00:00:54.930 --> 00:01:00.460
On a typical keyboard that I've used at least it is where the till the key is a little squiggly line.

15
00:01:00.460 --> 00:01:03.060
The Enya saboteurs called in Spanish.

16
00:01:03.060 --> 00:01:09.140
I might just be completely making it up but it's above the tab key so we can make a string with tactics

17
00:01:09.300 --> 00:01:12.930
just like that and it gives us a resulting string.

18
00:01:12.930 --> 00:01:19.170
So this is another way that you could escape characters or escape quotation marks if you want to do

19
00:01:19.200 --> 00:01:26.370
he said Well I don't have to worry about single or double quotes because I'm not using either one I'm

20
00:01:26.370 --> 00:01:31.680
using tactics around the strings so I could put double and single quotes in there no problem for example

21
00:01:31.680 --> 00:01:39.060
that's a valid string if I use back ticks but the real meat of these expressions of template laterals

22
00:01:39.380 --> 00:01:42.090
is that we can embed information.

23
00:01:42.090 --> 00:01:46.140
And the trick the secret is this set of characters right here.

24
00:01:46.140 --> 00:01:49.770
Dollar sign and then curly braces.

25
00:01:49.860 --> 00:01:52.000
So on its own that will break javascript.

26
00:01:52.000 --> 00:01:57.570
It doesn't like you but if you put that inside of back take characters dollar sign.

27
00:01:57.720 --> 00:01:59.160
Curly braces.

28
00:01:59.160 --> 00:02:02.100
This is going to evaluate to something.

29
00:02:02.100 --> 00:02:07.130
So whatever is in here like one plus five will be run first.

30
00:02:07.350 --> 00:02:09.540
This will be turned into a string.

31
00:02:09.570 --> 00:02:15.870
Once it is finished and then we end up with one string like this string six usually we don't just have

32
00:02:15.870 --> 00:02:16.830
a string like this.

33
00:02:16.860 --> 00:02:20.530
Usually we have other information or characters in there.

34
00:02:20.550 --> 00:02:22.280
You owe me.

35
00:02:22.440 --> 00:02:26.110
And then we could have dollar sign the curly braces.

36
00:02:26.160 --> 00:02:29.430
One hundred plus that many you owe me.

37
00:02:29.430 --> 00:02:32.550
Twenty two hundred nineteen thousand thirty seven.

38
00:02:32.610 --> 00:02:38.080
So this is a secret once again back ticks curly braces with a dollar sign in front.

39
00:02:38.130 --> 00:02:40.560
This will not work in a regular string.

40
00:02:40.560 --> 00:02:48.180
So if I tried it one plus three I end up with the string dollar sign curve the braces one plus three.

41
00:02:48.180 --> 00:02:50.610
Not ideal if we use back ticks.

42
00:02:50.640 --> 00:02:56.910
This is kind of like an escape character it gets out of the context of the string and JavaScript treats

43
00:02:56.910 --> 00:02:58.500
it as such and it evaluates it.

44
00:02:58.500 --> 00:03:03.880
In this case as a math expression as an addition but we can do anything in there.

45
00:03:03.960 --> 00:03:07.890
Well almost anything you don't want to write super super long pieces of code.

46
00:03:08.070 --> 00:03:14.160
But here's a really common example if you have a variable and you want to spit out that variable as

47
00:03:14.160 --> 00:03:16.900
part of a string like Welcome Back.

48
00:03:17.030 --> 00:03:20.550
Ziggy 31 we can do it like this.

49
00:03:20.550 --> 00:03:27.170
So I'll show you another example let's say we have two variables animal and sound so animal will be

50
00:03:27.180 --> 00:03:34.000
pig and sound will be I think I can create a template literal that follows this pattern.

51
00:03:34.020 --> 00:03:39.150
Animal says sound so pig says oink or pig say oink or something like that.

52
00:03:39.360 --> 00:03:45.400
If I wanted to do that I would need to add in the variable animal first instead of those back ticks.

53
00:03:45.570 --> 00:03:46.830
And then a lot of space.

54
00:03:46.830 --> 00:03:48.690
So we have a space after the string.

55
00:03:48.720 --> 00:03:56.940
You can see my result down here already and then I'll add in just the word says pig says and then another

56
00:03:56.970 --> 00:03:58.080
dollar sign.

57
00:03:58.080 --> 00:04:02.880
Curly braces sound pig says oink.

58
00:04:02.880 --> 00:04:08.250
Now string template laterals are new ish in JavaScript a couple of years ago they weren't an option

59
00:04:08.790 --> 00:04:14.460
we had to resort to can cat needing strings together which really sucked it would look like this animal

60
00:04:14.880 --> 00:04:22.410
plus space says space plus sound.

61
00:04:22.410 --> 00:04:27.720
So we always had to break up our quotes and if we wanted to add something afterwards like an exclamation

62
00:04:27.720 --> 00:04:33.060
point I would then do sound plus quote exclamation point.

63
00:04:33.180 --> 00:04:34.440
Pig Says oink.

64
00:04:34.440 --> 00:04:39.480
But if I go back to my string template literal with the up arrow I can just add an exclamation point

65
00:04:39.480 --> 00:04:40.560
right there.

66
00:04:40.590 --> 00:04:43.800
So it's really easy to read it's easy to write.

67
00:04:43.800 --> 00:04:48.930
You don't have to worry about opening and closing your quotes and plus signs you just use those dollars

68
00:04:48.930 --> 00:04:53.460
and curly braces and what you're doing here is something called interpolated.

69
00:04:53.490 --> 00:04:57.090
You are interpreting data inside of a string.

70
00:04:57.090 --> 00:05:03.740
So we have a regular string like something and then we interpolate sound which is a variable.

71
00:05:03.740 --> 00:05:10.310
And as the examples show you can also do more than just put a variable in there as is you can run some

72
00:05:10.310 --> 00:05:15.110
simple code again you don't want to put super long stuff in here but there's nothing stopping you from

73
00:05:15.110 --> 00:05:15.690
it.

74
00:05:15.740 --> 00:05:22.670
We could do a user named out to uppercase or I could do animal let's just recall this line again right

75
00:05:22.670 --> 00:05:31.710
here and you sound dot to uppercase like that and we get pig says oy.

76
00:05:31.910 --> 00:05:33.350
Now here's another example.

77
00:05:33.350 --> 00:05:35.190
This one's a little more complex.

78
00:05:35.210 --> 00:05:36.740
I have three variables.

79
00:05:36.740 --> 00:05:43.620
I have an item which is cucumbers price which is one ninety nine and a quantity which is four.

80
00:05:43.730 --> 00:05:49.670
And I wanted to print out a string that says you bought four cucumbers if that's what quantity is the

81
00:05:49.670 --> 00:05:52.960
total price is seven dollars and ninety six cents.

82
00:05:53.240 --> 00:05:56.670
Using a template literal it's really easy.

83
00:05:56.690 --> 00:06:01.370
The one thing I'll point out is that I have two dollar signs here because the first one or the second

84
00:06:01.370 --> 00:06:07.460
one rather is used to interpolate price times quantity that will go away leaving a number.

85
00:06:07.460 --> 00:06:12.360
And then the original dollar sign up front will be left as an actual dollar sign in the string.

86
00:06:12.380 --> 00:06:18.620
So here's one more example let's say that we were opening up a bar in the U.S. or something where you

87
00:06:18.620 --> 00:06:24.800
have to be 21 years old to enter and I want to print out a string using these variables so we have men

88
00:06:24.830 --> 00:06:26.040
age and your age.

89
00:06:26.090 --> 00:06:33.470
And I wanted to follow the pattern of you must be 21 to enter your currently 19 please come back in

90
00:06:33.530 --> 00:06:36.810
two years or whatever the correct age range is.

91
00:06:36.890 --> 00:06:42.440
So I could do something like this that ticks you must be.

92
00:06:42.440 --> 00:06:44.290
And then dollar sign.

93
00:06:44.390 --> 00:06:53.240
Men age to enter and then we'll just do come back in and then another dollar sign curly braces will

94
00:06:53.240 --> 00:07:00.710
take men age and subtract your age from it and then add the word years afterwards.

95
00:07:01.010 --> 00:07:09.920
So you must be 21 and let's do 21 or older to enter come back in two years and I know this seems like

96
00:07:10.520 --> 00:07:17.120
a lot of work for something stupid not that exciting to do with age and men age or animals and noises

97
00:07:17.120 --> 00:07:18.440
pigs and thinking.

98
00:07:18.590 --> 00:07:23.900
But once we get to more complex things think about it this way if we were making a Reddit application

99
00:07:23.960 --> 00:07:29.660
where we had or let's just say comments on a blog every comment follows the same pattern where we probably

100
00:07:29.660 --> 00:07:40.150
have something like posted x minutes ago by and then user so we would have potentially a template literally

101
00:07:40.160 --> 00:07:48.880
like this posted x minutes ago and then X instead of calling it X we would go with minutes or elapsed

102
00:07:48.890 --> 00:07:56.410
time or something by user and we would do this for every single comment that we were trying to display

103
00:07:56.570 --> 00:07:59.140
so we would have a list of them maybe 100 comments.

104
00:07:59.240 --> 00:08:03.630
And for each one we would put them through this template and we haven't seen how to do that yet.

105
00:08:03.640 --> 00:08:08.960
We haven't talked about looping or collections of data but that is when these become especially useful

106
00:08:09.230 --> 00:08:12.640
is when you're defining it an actual template you're reusing.

107
00:08:12.650 --> 00:08:18.030
So these are kind of silly examples I know but I promise they become really really useful later on.

108
00:08:18.050 --> 00:08:20.890
So a template laterals the main takeaways again back ticks.

109
00:08:20.930 --> 00:08:24.170
Not single quotes and we use dollar sign.

110
00:08:24.170 --> 00:08:25.880
Curly braces inside.

111
00:08:25.880 --> 00:08:31.730
In order to write expressions which are just treated as regular javascript it's treated as if you were

112
00:08:31.730 --> 00:08:38.030
not inside a string at all and then whatever that evaluates to is turned into a string and put inside

113
00:08:38.210 --> 00:08:39.170
the resulting string.
