WEBVTT
1
00:00:00.330 --> 00:00:00.840
All right.

2
00:00:00.840 --> 00:00:06.150
Now that we've seen how to run code from a file we can start writing slightly longer slightly more complex

3
00:00:06.150 --> 00:00:10.730
scripts to add logic into our code to actually make decisions.

4
00:00:10.740 --> 00:00:14.860
The key mechanism we use is something called a conditional statement.

5
00:00:15.050 --> 00:00:21.930
A conditional statement can have three different pieces and if and else if anyone else and we'll go

6
00:00:21.930 --> 00:00:27.870
through them in order and we're going to start with if so if allows us to run certain code.

7
00:00:27.870 --> 00:00:29.880
If a given condition is true.

8
00:00:29.880 --> 00:00:34.920
We spent a healthy amount of time talking about these different operators and they all evaluate to TRUE

9
00:00:34.920 --> 00:00:37.850
or FALSE they all evaluate to a Boolean.

10
00:00:37.860 --> 00:00:43.140
Now we can use them instead of a conditional where we end up with either a true or false.

11
00:00:43.410 --> 00:00:47.700
And if that thing is true if the condition is true our code will run.

12
00:00:47.700 --> 00:00:50.770
So let me show you the simplest example that we could do.

13
00:00:50.940 --> 00:00:55.090
I'm working in an app J.S. file that's connected to my index HMO.

14
00:00:55.380 --> 00:00:57.330
I have my index opened up over here.

15
00:00:57.420 --> 00:00:58.830
I'm looking at the console.

16
00:00:59.040 --> 00:01:01.930
Let's delete what I had in there.

17
00:01:01.950 --> 00:01:04.200
Close down my sidebar.

18
00:01:04.650 --> 00:01:07.490
The simplest possible conditional looks like this.

19
00:01:07.560 --> 00:01:11.270
If something this isn't valid as it is right now.

20
00:01:11.280 --> 00:01:16.440
But if some condition that becomes either true or false if it's true.

21
00:01:16.500 --> 00:01:18.240
Run the code in here.

22
00:01:18.510 --> 00:01:22.410
So let's do something like if 1 equals 1.

23
00:01:22.560 --> 00:01:31.180
Consider log it's true we'll save I'll refresh my page.

24
00:01:31.630 --> 00:01:32.830
And we end up with.

25
00:01:32.980 --> 00:01:33.990
It's true.

26
00:01:34.210 --> 00:01:36.900
This code runs if this becomes true.

27
00:01:37.000 --> 00:01:39.940
If you were to copy that and pasted here we get true.

28
00:01:40.000 --> 00:01:46.150
Now if we did something like this if one is not equal to one we know that that is false and gives us

29
00:01:46.150 --> 00:01:46.530
false.

30
00:01:46.540 --> 00:01:49.460
I'll refresh my page now and we don't see anything.

31
00:01:49.510 --> 00:01:50.750
This code does not run.

32
00:01:51.580 --> 00:01:56.920
So we've written our first simple piece of logic our first decision that actually impacts which code

33
00:01:56.920 --> 00:01:59.670
runs based off of this condition.

34
00:01:59.680 --> 00:02:01.640
Now we'll learn how to write much more complex ones.

35
00:02:01.650 --> 00:02:03.580
But let's take a look at a couple of different examples.

36
00:02:03.820 --> 00:02:06.610
Here's one where I'm modeling a typical performance review.

37
00:02:06.610 --> 00:02:13.240
You might have at a company where your manager or your peers rate you on a certain scale and we're translating

38
00:02:13.240 --> 00:02:19.720
that Numeric Rating to feedback like you're a superstar you need improvement you meet expectations.

39
00:02:19.720 --> 00:02:21.090
We could model that over here.

40
00:02:21.250 --> 00:02:28.420
I'll just write a quick comment example 2 we'll have a rating variable instead of equal to three and

41
00:02:28.420 --> 00:02:32.460
we can simply check if rating is equal to three.

42
00:02:33.010 --> 00:02:36.940
We'll consider that log you are a superstar.

43
00:02:36.940 --> 00:02:40.620
I don't know why it's all caps but it works.

44
00:02:40.910 --> 00:02:43.800
I'll refresh the page and we end up with.

45
00:02:43.870 --> 00:02:45.160
You are a superstar.

46
00:02:45.160 --> 00:02:47.060
We change rating to two.

47
00:02:47.140 --> 00:02:48.130
We need improvement.

48
00:02:48.130 --> 00:02:50.060
We don't get that printed out.

49
00:02:50.080 --> 00:02:55.740
We could also do something like If rating is less than three instead of printing.

50
00:02:55.750 --> 00:02:57.120
You are a superstar.

51
00:02:57.190 --> 00:02:58.920
We could print comes to lug.

52
00:02:59.020 --> 00:03:00.300
How about we just go back to what we had.

53
00:03:00.300 --> 00:03:04.760
You are not a superstar because only three is a superstar.

54
00:03:04.810 --> 00:03:05.530
I'll refresh.

55
00:03:05.530 --> 00:03:06.680
We don't see anything.

56
00:03:06.790 --> 00:03:11.320
But if I change it to two we get the slightly harsh feedback.

57
00:03:11.350 --> 00:03:14.410
You are not a superstar in all caps.

58
00:03:14.410 --> 00:03:18.340
So I'm can undo that and go back to what we had because we're gonna build on this example and just a

59
00:03:18.340 --> 00:03:19.450
bit.

60
00:03:19.450 --> 00:03:24.400
So this is the first part of a conditional I mentioned there are two other things we can add on this

61
00:03:24.400 --> 00:03:29.590
is checking for a single condition and we can have multiple of these if we wanted to.

62
00:03:29.770 --> 00:03:32.050
We actually already have two of them in a single file.

63
00:03:32.110 --> 00:03:34.130
Both of them are being evaluated.

64
00:03:34.150 --> 00:03:35.020
This one is false.

65
00:03:35.050 --> 00:03:36.550
So that doesn't run.

66
00:03:36.550 --> 00:03:37.960
This one is true.

67
00:03:37.990 --> 00:03:41.200
So it does run but if we change rating it may not run.

68
00:03:41.620 --> 00:03:42.990
Here's one more example.

69
00:03:43.060 --> 00:03:44.080
Nice and simple.

70
00:03:44.170 --> 00:03:48.920
Let's say we have a number let numb and it's equal to 37.

71
00:03:49.090 --> 00:03:50.470
Let's print out something.

72
00:03:50.470 --> 00:03:56.050
If the number is even or let's go with something if the number is odd how do we tell if a number is

73
00:03:56.080 --> 00:03:57.160
odd.

74
00:03:57.160 --> 00:04:03.340
We go back to that modulo operator we saw early on the percent sign using the remainder.

75
00:04:03.340 --> 00:04:11.440
So we divide by two and check the remainder Using MODULO and if two goes evenly into a number that means

76
00:04:11.470 --> 00:04:13.210
it's an even number.

77
00:04:13.210 --> 00:04:14.570
So the remainder would be zero.

78
00:04:15.220 --> 00:04:21.370
So for an odd number we'll just check if the remainder is not zero.

79
00:04:21.400 --> 00:04:22.500
So let me show you that.

80
00:04:22.570 --> 00:04:32.490
If num mod 2 is not equal to zero consider log odd number.

81
00:04:34.000 --> 00:04:34.970
Let's see what we get.

82
00:04:35.040 --> 00:04:36.170
And I refresh.

83
00:04:36.340 --> 00:04:40.630
We should see number four I change it to 38.

84
00:04:40.870 --> 00:04:41.250
Nothing.

85
00:04:42.220 --> 00:04:42.520
All right.

86
00:04:42.550 --> 00:04:48.790
So those are three simple examples of conditionals very short ones where we only have one piece one

87
00:04:48.790 --> 00:04:55.660
condition and if this is not the case we just keep moving on whatever code comes after will be run.

88
00:04:55.720 --> 00:04:59.320
Next we're going to see else if which we can chain on with our if.
