1
00:00:00,910 --> 00:00:04,530
All right I've opened up that index not each single file inside my browser.

2
00:00:04,630 --> 00:00:08,890
Once I have that file open and then I'm going to open up my development console I'm going to keep this

3
00:00:08,890 --> 00:00:11,920
open for a lot of the code that we're going to write because we're going to use a couple of different

4
00:00:11,920 --> 00:00:17,460
tools inside of here just to get a better idea of the application that we're trying to build and then

5
00:00:17,460 --> 00:00:23,010
going to go back over to my editor and find the index dot J.S. file inside of here.

6
00:00:23,010 --> 00:00:27,160
I'm just going to do a very quick council log and say hi there.

7
00:00:27,480 --> 00:00:33,300
Then save the file go back over to the browser and refresh and just make sure I see the console log.

8
00:00:33,300 --> 00:00:37,940
I would just like you to do that to make sure that the javascript file got wired up successfully.

9
00:00:37,980 --> 00:00:42,590
So once we verify that everything is ready to go we can start working on our application.

10
00:00:42,630 --> 00:00:46,890
I think that the first thing we should do is try to just show a very simple form to the user like the

11
00:00:46,890 --> 00:00:48,870
one that we see right here.

12
00:00:48,870 --> 00:00:54,540
Once we add in the form we can then add in an event listener to it and watch for a submit event.

13
00:00:54,540 --> 00:01:00,240
So as soon as the user submits this form right here we'll update some each e-mail and show the sherry

14
00:01:00,240 --> 00:01:05,280
link with Fran text and show the text input with the link to copy inside of it as well.

15
00:01:07,020 --> 00:01:10,710
The first let's add in some each symbol for the form element.

16
00:01:10,790 --> 00:01:14,660
I'll go back over to my index dot HDL file instead of here.

17
00:01:14,660 --> 00:01:20,660
We're going to add in a pretty good amount of HDL a lot of the e-mail that we're going to be writing

18
00:01:20,720 --> 00:01:25,800
is going to use some class names and styling that we get from this materialize CSX library.

19
00:01:25,910 --> 00:01:29,870
So it looks like I'm adding in a bunch of extra each team L and class names.

20
00:01:29,870 --> 00:01:32,830
It's just for styling purposes.

21
00:01:32,870 --> 00:01:37,340
So inside of here I'm going to create a div with the class of row

22
00:01:40,320 --> 00:01:51,040
then inside there I'm gonna create a div with the class of L s eight offset dash as to so this class

23
00:01:51,040 --> 00:01:54,810
right here with that kind of funny class name is just going to make sure that we've got some centered

24
00:01:54,820 --> 00:01:57,640
content on the screen inside of there.

25
00:01:57,640 --> 00:02:01,600
I'll create a div with a class of card dash panel.

26
00:02:01,630 --> 00:02:06,370
This is going to give us an element that kind of looks like a card with a nice shadow behind it.

27
00:02:06,400 --> 00:02:08,700
Again just for styling purposes.

28
00:02:09,070 --> 00:02:17,930
Then finally inside there I can create a form inside the form I'll display a label that tells my user

29
00:02:17,930 --> 00:02:20,180
exactly what I would like them to do inside of my app.

30
00:02:20,180 --> 00:02:26,110
So I'm going to tell them enter a secret message.

31
00:02:26,280 --> 00:02:30,480
Then after that I'll display an input that the user can enter some text into.

32
00:02:30,480 --> 00:02:37,850
And then finally a button with a class of B10 and inside the button elements.

33
00:02:37,920 --> 00:02:44,130
I'll say to the user create or create link or whatever else would be appropriate.

34
00:02:44,160 --> 00:02:47,250
I think the word create is pretty good.

35
00:02:47,380 --> 00:02:48,560
So I'm going to say this.

36
00:02:48,840 --> 00:02:52,410
I'll go back over refresh and there we go.

37
00:02:52,680 --> 00:02:58,260
So we can see that the nice outline here we get from that card panel class the element itself is centered

38
00:02:58,260 --> 00:02:58,850
on the screen.

39
00:02:58,860 --> 00:03:05,590
Because of that CIOL And the offset as to an essay eight classes that we added right around it now we

40
00:03:05,590 --> 00:03:10,540
want to make sure that whenever a user enters and some texture and clicks on create we detect that Summit

41
00:03:10,570 --> 00:03:13,080
event and handle it appropriately.

42
00:03:13,160 --> 00:03:19,120
Let's make sure that we wire up a submit event handler on that form element that we just created to

43
00:03:19,120 --> 00:03:25,150
do so I'll go back over to my index dot ust file I'm going to remove the console log then inside of

44
00:03:25,150 --> 00:03:29,370
here I'm going to add a query selector for the form we just created.

45
00:03:29,460 --> 00:03:40,020
It's a document not query selector form or do you add event listener and I'll watch for the submit event

46
00:03:41,340 --> 00:03:45,690
and then as a second argument I'll pass in a callback function to run any time that a user submits that

47
00:03:45,690 --> 00:03:46,450
form.

48
00:03:46,770 --> 00:03:51,990
Remember that the callback function gets called with within event object even object.

49
00:03:51,990 --> 00:03:59,310
We really only care about so we can call event dot prevent default on it just as a quick reminder the

50
00:03:59,310 --> 00:04:03,900
way that the browser works by default is anytime that you submit a form the browser is going to take

51
00:04:03,930 --> 00:04:09,180
all the information inside that form and automatically attempt to submit it to some back end server.

52
00:04:09,450 --> 00:04:13,020
In our case we don't have any back in server to receive that information.

53
00:04:13,170 --> 00:04:18,690
So we're going to call it prevent default to stop the default browser behavior which is to submit the

54
00:04:18,690 --> 00:04:20,360
form.

55
00:04:20,400 --> 00:04:27,300
Now if I save this if I go back over refresh enter some text and hit create I should not see the page

56
00:04:27,360 --> 00:04:28,970
refresh or anything like that.

57
00:04:29,550 --> 00:04:34,500
If the page is refreshing that means that the browser is still attempting to submit the form which is

58
00:04:34,740 --> 00:04:36,250
again not what we want.

59
00:04:38,170 --> 00:04:38,490
OK.

60
00:04:38,550 --> 00:04:42,990
So then inside of here let's just write out a little bit of code to try to get the text inside of that

61
00:04:42,990 --> 00:04:44,640
text input.

62
00:04:44,650 --> 00:04:51,440
I'm gonna first just try to select the input with a selector it's all say const input is document dot

63
00:04:51,450 --> 00:05:00,350
query selector input and I'll just do a console log of the message that I want to eventually somehow

64
00:05:00,350 --> 00:05:08,020
encode and turn into a sort of secret message so I can get that with input that value like so it's let's

65
00:05:08,020 --> 00:05:15,840
save this I'll go back over I'm going to refresh I'm going to test out the middle so I'll put in a secret

66
00:05:15,870 --> 00:05:21,300
message I'll hit creates and I see the console log right there of exactly what I just had inside the

67
00:05:21,300 --> 00:05:22,680
text input.

68
00:05:22,680 --> 00:05:23,700
Very good.

69
00:05:23,700 --> 00:05:23,930
OK.

70
00:05:23,960 --> 00:05:25,190
So let's take a pause right here.

71
00:05:25,260 --> 00:05:29,820
When we come back in just a moment we're going to figure out how we can somehow take that value right

72
00:05:29,820 --> 00:05:35,130
there whatever the user just entered is somehow encoded into some secret string.

73
00:05:35,130 --> 00:05:37,060
So I'll see you in just a minute.
