1
00:00:01,220 --> 00:00:02,870
Or test runner is looking pretty darn good.

2
00:00:02,890 --> 00:00:07,370
But there's one little issue I want to point out in between the last video and this one.

3
00:00:07,370 --> 00:00:11,130
I went over to my terminal and I changed into a new folder.

4
00:00:11,150 --> 00:00:14,030
This is a project that I happen to have on my computer.

5
00:00:14,030 --> 00:00:15,510
It's another javascript project.

6
00:00:15,530 --> 00:00:16,940
There's a ton of code inside of it.

7
00:00:17,630 --> 00:00:21,790
I'm going to run our team a command line tool on this other javascript project and we're just gonna

8
00:00:21,810 --> 00:00:22,970
see what happens really quick.

9
00:00:23,840 --> 00:00:27,800
So run to me and I see a ton of errors up here.

10
00:00:27,860 --> 00:00:30,890
Take a look at the files that are being executed by TMG.

11
00:00:30,920 --> 00:00:35,930
You'll notice that just about all of them are located inside the node modules directory.

12
00:00:35,930 --> 00:00:40,400
Recall that the node modules directory is where all the different dependencies that our project makes

13
00:00:40,400 --> 00:00:42,040
use of get saved.

14
00:00:42,050 --> 00:00:47,420
So in other words our team tool right now is looking into our big list of dependencies for this random

15
00:00:47,420 --> 00:00:53,360
project and it's seeing that inside there there just happens to be some files with the dot test dot

16
00:00:53,360 --> 00:00:56,930
J.S. ext in general whenever we run tests.

17
00:00:56,930 --> 00:01:00,410
We don't really want to run the tests of our dependencies.

18
00:01:00,410 --> 00:01:05,360
Those things should really be getting tested themselves and it's almost not appropriate for all these

19
00:01:05,360 --> 00:01:10,840
test files to be included with the test or the dependency itself but that's another topic.

20
00:01:11,010 --> 00:01:15,120
So I think that we need to make a little change to our Tumi tool and we need to make sure that we can

21
00:01:15,120 --> 00:01:21,180
somehow exclude certain directories from being searched when we try to find a list of files to test.

22
00:01:21,270 --> 00:01:26,880
In particular I think we need to start to exclude the node modules directory from ever being searched.

23
00:01:27,000 --> 00:01:32,200
Like I said it is very very rare that we would ever want to run any test files inside there.

24
00:01:33,840 --> 00:01:39,040
So let's flip back over to our editor and figure out how to exclude certain directories.

25
00:01:39,150 --> 00:01:44,850
I'm going to go back over to my runner and at the very top I'm going to declare a new array and I'll

26
00:01:44,850 --> 00:01:50,850
call for bidden Ders short for forbidden directories or in other words directories that we don't want

27
00:01:50,850 --> 00:01:52,200
to visit.

28
00:01:52,260 --> 00:01:56,670
I'm going to make this an array of strings output node modules inside of here.

29
00:01:56,700 --> 00:02:01,040
Like so if there were ever any other directories you wanted to ignore.

30
00:02:01,050 --> 00:02:03,050
We could add them into this list of strings as well.

31
00:02:04,780 --> 00:02:09,820
Let's make sure that our function that collects all the different test files is going to take into consideration

32
00:02:09,880 --> 00:02:18,200
this list of file folders and files we want to ignore so going to go down to our collect files function.

33
00:02:18,310 --> 00:02:21,320
I'm going to take a look at where we check to see if something is a directory.

34
00:02:21,330 --> 00:02:22,100
It's right here at.

35
00:02:22,110 --> 00:02:29,550
Else if we're going to say if something is a directory and it is not.

36
00:02:29,580 --> 00:02:35,680
So exclamation it is not included in the list of forbidden directory so we'll say forbidden jurors.

37
00:02:36,030 --> 00:02:42,550
That includes and we'll put in the name of the current folder that we iterating over which remember

38
00:02:42,550 --> 00:02:44,870
is the file variable inside this loop.

39
00:02:45,040 --> 00:02:50,400
So I'll say if the current file that we're taking a look at is not included in the list of forbidden

40
00:02:50,410 --> 00:02:56,100
directories then we can go ahead and take a look at all the contents of that particular folder.

41
00:02:56,200 --> 00:03:01,050
Otherwise skip over it and just ignore this folder altogether all right.

42
00:03:01,060 --> 00:03:02,250
So I'll save this.

43
00:03:02,440 --> 00:03:07,420
I'm going to go back over to that same other project directory all run to me again and they'll see I

44
00:03:07,420 --> 00:03:09,360
don't get any errors whatsoever.

45
00:03:09,370 --> 00:03:13,780
In addition the command itself actually runs a lot faster as well because I'm no longer having to explore

46
00:03:14,110 --> 00:03:19,060
all those additional directories and files that are located inside of node modules okay.

47
00:03:19,090 --> 00:03:19,780
So it looks pretty good.

48
00:03:21,440 --> 00:03:24,060
Now we're definitely not done with our testing framework just yet.

49
00:03:24,080 --> 00:03:29,510
Remember we had originally said that we wanted to make sure that we can't test browser based javascript

50
00:03:29,510 --> 00:03:32,700
applications and we definitely don't have that set up just yet.

51
00:03:32,750 --> 00:03:35,210
So we still have a pretty good amount of stuff to get through.

52
00:03:35,220 --> 00:03:38,480
Let's take a pause right here and start to tackle that aspect in the next video.
