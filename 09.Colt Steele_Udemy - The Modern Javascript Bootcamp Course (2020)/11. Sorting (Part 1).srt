1
00:00:00,120 --> 00:00:05,020
Next up we've got our final Array method for this section a readout sought.

2
00:00:05,040 --> 00:00:09,690
Now it sounds simple it sounds like it's going to take the data and sorted that is what it sets out

3
00:00:09,690 --> 00:00:10,210
to do.

4
00:00:10,260 --> 00:00:13,050
But the way it sorts it might surprise you.

5
00:00:13,200 --> 00:00:17,790
So if you look at the docks it tells us the sort method sorts the array of elements or sorts the elements

6
00:00:17,790 --> 00:00:21,050
of an array in place and returns the sorted array.

7
00:00:21,090 --> 00:00:22,350
So let's test it out.

8
00:00:22,350 --> 00:00:27,900
I have an array of songs or let's say women's names based off of songs.

9
00:00:27,960 --> 00:00:30,310
We'll go with this.

10
00:00:30,510 --> 00:00:37,930
I guess people if I try and sort this I would do people that sort.

11
00:00:39,090 --> 00:00:41,160
And it looks like it works alphabetically.

12
00:00:41,160 --> 00:00:43,240
We have Angie Jolie and Maggie Mae.

13
00:00:43,260 --> 00:00:45,330
Mrs. Robinson Roxanne.

14
00:00:45,330 --> 00:00:46,480
That sounds correct.

15
00:00:46,490 --> 00:00:48,110
It's alphabetically correct.

16
00:00:48,150 --> 00:00:51,000
If we look at people it is indeed updated.

17
00:00:51,000 --> 00:00:58,470
It was mutated it was sorted in place and people that saw it also returned the value to the sorted array.

18
00:00:58,590 --> 00:01:01,380
So it updates your array in place and it returns it.

19
00:01:01,410 --> 00:01:06,960
So if you wanted to you could capture it but where it gets tricky is if we have an array let's say of

20
00:01:06,960 --> 00:01:15,960
numbers let's just go with numbers nothing creative here 34 10 whatever that is one hundred thousand

21
00:01:16,170 --> 00:01:19,620
sixty seven and ninety nine.

22
00:01:19,620 --> 00:01:21,750
Let's try doing numbers that.

23
00:01:22,530 --> 00:01:28,830
And you can see what we get here 10 and then 100000 and then thirty four sixty seven ninety nine.

24
00:01:28,980 --> 00:01:34,770
What's happening here is that it's not sorting based off of the numeric value it converts every single

25
00:01:34,770 --> 00:01:35,870
value to a string.

26
00:01:36,450 --> 00:01:40,300
And then it compares their character codes their UTF 16 codes.

27
00:01:40,410 --> 00:01:46,510
Behind the scenes which we briefly talked about when we covered less than and greater than with strings.

28
00:01:46,560 --> 00:01:49,550
So this is the default behavior of a radar sort.

29
00:01:49,560 --> 00:01:50,510
It's odd.

30
00:01:50,640 --> 00:01:55,290
I really can't get a straight answer on hand as far as why this was decided.

31
00:01:55,530 --> 00:02:02,370
It's pretty unique as far as among other programming languages and nobody uses this or almost nobody

32
00:02:02,370 --> 00:02:09,690
uses it as is what they do instead is pass in something called a compare function.

33
00:02:09,720 --> 00:02:15,690
So if you look at the standard way that people use a radar sort it might look like this where there's

34
00:02:15,690 --> 00:02:18,470
a function passed in and we haven't talked about that yet.

35
00:02:18,570 --> 00:02:20,440
So we will revisit it.

36
00:02:20,730 --> 00:02:25,070
Once we do because we'll be able to actually sort things the way we want them to be sorted.

37
00:02:25,140 --> 00:02:29,660
But I figured it was best to address early because I've seen a lot of students assume that array dot

38
00:02:29,670 --> 00:02:32,730
sort is a numeric sort when it's not.

39
00:02:32,730 --> 00:02:34,230
So I just want to cover that now.

40
00:02:34,230 --> 00:02:39,870
It is surprising if you don't pass in a function and tell it how to sort the default sort is based off

41
00:02:39,870 --> 00:02:43,830
of string character codes which leads to some unexpected results.

42
00:02:43,950 --> 00:02:47,070
But we will be back in a bit once we talk about functions.

43
00:02:47,070 --> 00:02:49,860
We'll learn how to actually make story work the way we wanted to.
