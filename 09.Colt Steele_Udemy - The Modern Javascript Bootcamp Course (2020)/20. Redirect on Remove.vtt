WEBVTT
1
00:00:01.130 --> 00:00:05.070
Well we don't know the idea of the item that we want to delete out of our cart.

2
00:00:05.150 --> 00:00:09.410
So inside of our post quest handler we're going to first begin by finding the cart that belongs to a

3
00:00:09.410 --> 00:00:10.580
given user.

4
00:00:10.580 --> 00:00:15.260
We're then going to iterate through its list of items as soon as we find an item with the I.D. equal

5
00:00:15.260 --> 00:00:21.140
to Red Dot body dot item I.D. We're going to want to remove that out of this items array and then eventually

6
00:00:21.200 --> 00:00:23.900
save this cart back to our carts repository.

7
00:00:23.930 --> 00:00:26.360
So let's get to it back over here.

8
00:00:26.360 --> 00:00:33.620
I'm going to first get that item I.D. assigned to a variable so I'll say item I.D. is racked up body

9
00:00:35.610 --> 00:00:45.590
will then retrieve our cart out of our carts repository it's all say cart is a weight Hertz repo not

10
00:00:45.590 --> 00:00:54.610
get one with rec not session dot cart I.D. remember cart ideas the cart that belongs to this user we're

11
00:00:54.620 --> 00:01:00.470
going to reach into our repo and find a cart with that given I.D. we then assign it to the cart variable

12
00:01:01.180 --> 00:01:06.420
so then after that we need to iterate over the list of items that are inside this cart as soon as we

13
00:01:06.420 --> 00:01:11.940
find an item with an idea matching that item I.D. We want to remove that item out of the items array

14
00:01:12.920 --> 00:01:20.350
so to do so we can use a filter statement very effectively they'll say const items is heart items dot

15
00:01:20.360 --> 00:01:26.450
filter now remember how a filter statement works we're gonna pass on a function that is going to be

16
00:01:26.450 --> 00:01:32.680
called with every element inside of the items array then inside of this function we're going to return

17
00:01:32.710 --> 00:01:39.370
either true or false if we return true that means that we want to add that item to a brand new array

18
00:01:40.750 --> 00:01:47.350
if return false that means forget this item altogether and do not add it to this new items array so

19
00:01:47.370 --> 00:01:54.120
in other words we need to return true if the idea of this item is not equal to item I.D. So to express

20
00:01:54.120 --> 00:02:02.880
that will say if item dot I.D. is not equal to item I.D. notice how there's a dot right here not a dot

21
00:02:02.880 --> 00:02:03.300
right here.

22
00:02:03.360 --> 00:02:07.980
So this is the item idea that is coming out of our request body this is the idea that is coming from

23
00:02:07.980 --> 00:02:13.790
the item that we are iterating over so if those things are not equal to each other we're going to return

24
00:02:13.910 --> 00:02:14.730
true.

25
00:02:14.870 --> 00:02:19.850
And so that means that we would want to keep this item inside of this new items array that we are generating

26
00:02:22.370 --> 00:02:22.640
okay.

27
00:02:22.700 --> 00:02:26.420
So now we've got this list of items with the appropriate item filtered out.

28
00:02:26.660 --> 00:02:35.890
Well then update our cart which we can do within a weight carts repo that update remember how our update

29
00:02:35.890 --> 00:02:41.710
function works we can get a quick reminder inside of our repository dot j ust file inside of here we

30
00:02:41.710 --> 00:02:45.880
can find updates somewhere here it is right here.

31
00:02:45.880 --> 00:02:50.350
The first argument is the idea the record we want you update second argument is gonna be an object that

32
00:02:50.350 --> 00:02:56.820
has the attributes so we want to replace on the target record so to update our cart we'll pass in the

33
00:02:56.840 --> 00:03:04.840
cart I.D. So rec not session that card I.D. and the second argument is going to be the update we want

34
00:03:04.840 --> 00:03:05.170
to make.

35
00:03:05.170 --> 00:03:11.020
So we want to replace this carts items array with the items array that we just put together from the

36
00:03:11.020 --> 00:03:12.510
filter statement.

37
00:03:12.520 --> 00:03:19.030
So the update we will make is items is items and as usual we can condense that down to just be items

38
00:03:19.030 --> 00:03:22.210
like so.

39
00:03:22.240 --> 00:03:22.540
All right.

40
00:03:22.570 --> 00:03:25.060
Well this looks pretty good before we can test it.

41
00:03:25.060 --> 00:03:28.640
Remember we eventually have to send some kind of response back to the user.

42
00:03:28.660 --> 00:03:34.270
So in this case after receiving this post request I'm going to redirect the user back to our main cart

43
00:03:34.300 --> 00:03:47.350
listing page at slash cart so I'll do a rez dot redirect of slash cart I'll save this I'm gonna flip

44
00:03:47.350 --> 00:03:51.730
back over I'm going to refresh the page and we'll do a quick test.

45
00:03:51.990 --> 00:03:53.350
It's going to click on that red X.

46
00:03:53.400 --> 00:03:58.950
And sure enough that item disappears instantly I can refresh the page and it is still gone.

47
00:03:59.140 --> 00:04:01.930
So I can delete pants I can delete gloves.

48
00:04:02.310 --> 00:04:05.730
And there we go back to square one okay.

49
00:04:05.750 --> 00:04:07.150
So I'd say this looks pretty good.

50
00:04:07.160 --> 00:04:09.260
And that is pretty much the full application.

51
00:04:09.260 --> 00:04:14.210
There is one last fix we need to make however if we go back to our main products listing and click on

52
00:04:14.330 --> 00:04:15.480
Add to Cart.

53
00:04:15.590 --> 00:04:18.640
Right now we just get that text that says Product added to cart.

54
00:04:18.860 --> 00:04:21.130
That is of course not super ideal.

55
00:04:21.140 --> 00:04:25.550
So in order to fix this up let's go take a look at our post request handler for dealing with adding

56
00:04:25.550 --> 00:04:27.700
an item.

57
00:04:27.780 --> 00:04:33.800
Here it is right here so after we add an item to the user's cart rather than sending back that plain

58
00:04:33.800 --> 00:04:38.190
text right there let's instead redirect them to the cart listing as well.

59
00:04:38.210 --> 00:04:47.840
It's all changed the resort sent to Red Dot redirect to slash cart it will save that and do another

60
00:04:47.840 --> 00:04:56.010
quick test can come back over I'm going to try to add khaki pants and as soon as I do I get redirected

61
00:04:56.010 --> 00:05:02.190
to the shopping cart so I can very easily start to delete items go back to products add a new item see

62
00:05:02.190 --> 00:05:10.280
it listed there's floral dress delete it and so on I can add floral dress twice and I'll see the quantity

63
00:05:10.280 --> 00:05:15.740
go up to 2 and I'll have 50 dollars for that line item and I can remove it as well.

64
00:05:15.740 --> 00:05:16.610
So that's pretty much it.

65
00:05:16.610 --> 00:05:18.610
That is our whole application.

66
00:05:18.800 --> 00:05:23.200
Now I know putting the scene together took just about forever but I didn't get the in the day.

67
00:05:23.210 --> 00:05:24.200
It was definitely worth it.

68
00:05:24.200 --> 00:05:26.370
And we learned a lot along the way.

69
00:05:26.550 --> 00:05:27.490
Let's take a pause right here.

70
00:05:27.490 --> 00:05:31.590
There's still some other stuff for us to discuss so let's continue in the next video.
