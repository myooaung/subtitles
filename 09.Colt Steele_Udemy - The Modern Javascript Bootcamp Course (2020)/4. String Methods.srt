1
00:00:00,210 --> 00:00:05,280
Next up let's talk about string methods so we haven't really talked about methods at all.

2
00:00:05,280 --> 00:00:11,370
Methods are kind of like built in pieces of functionality built in actions that can be performed on

3
00:00:11,370 --> 00:00:16,040
a certain thing a particular value or in our case on any string.

4
00:00:16,440 --> 00:00:20,980
So we can do things like search for a particular string within a string.

5
00:00:21,000 --> 00:00:26,370
Does this string contain a dollar sign we can replace parts of a string we can change case from lowercase

6
00:00:26,370 --> 00:00:28,180
to uppercase to ALL CAPS.

7
00:00:28,350 --> 00:00:32,250
We can remove Additional spacing if we want to get rid of spacing.

8
00:00:32,340 --> 00:00:37,620
There's a bunch of these different features that come built in with every single string and they all

9
00:00:37,620 --> 00:00:39,100
follow this format.

10
00:00:39,300 --> 00:00:46,740
So we have a string dot some method name with opening and closing parentheses and to be clear strings

11
00:00:46,740 --> 00:00:48,830
are not the only things that have methods.

12
00:00:48,900 --> 00:00:50,820
There are no methods that are built in.

13
00:00:50,850 --> 00:00:51,920
They're just not as useful.

14
00:00:51,930 --> 00:00:54,000
So am I going to talk about them just yet.

15
00:00:54,000 --> 00:00:55,960
String methods however are really useful.

16
00:00:56,070 --> 00:00:58,080
So I'm going to cover some of the most important ones.

17
00:00:58,800 --> 00:01:04,770
If we go to EMDIN And we look at string it's under the javascript reference built in objects string

18
00:01:05,310 --> 00:01:09,390
on the left hand side you'll see a very long list of methods.

19
00:01:09,390 --> 00:01:15,540
Each one of these is an action we can perform on every single string so we can take a look at one of

20
00:01:15,540 --> 00:01:20,360
them like two upper case or two lower case like this one before I do that.

21
00:01:20,370 --> 00:01:25,350
I just want to mention these thumbs down mean that you shouldn't really use these anymore.

22
00:01:25,350 --> 00:01:26,720
They're deprecated.

23
00:01:26,730 --> 00:01:30,700
They still work because javascript needs to support older Web sites.

24
00:01:30,750 --> 00:01:35,910
They still need to work in the browser even though you're not really supposed to use these anymore.

25
00:01:35,910 --> 00:01:41,030
But those withstanding there's still quite a few different methods that we have access to.

26
00:01:41,070 --> 00:01:48,450
So here's one two uppercase and the way that we call it is on a certain string dot to uppercase open

27
00:01:48,450 --> 00:01:49,700
closed prints.

28
00:01:49,770 --> 00:01:51,410
So let's make a variable called message.

29
00:01:51,420 --> 00:01:59,250
We'll set it to you are so grounded mister like that and go hit enter.

30
00:01:59,250 --> 00:02:03,980
If we call message dot to uppercase I'm just going to use autocomplete.

31
00:02:04,020 --> 00:02:06,440
So t o you.

32
00:02:06,540 --> 00:02:09,300
Tab and then Prince.

33
00:02:09,630 --> 00:02:13,120
This is what we get we get a new version a new string.

34
00:02:13,320 --> 00:02:16,040
So to be clear the original is unchanged.

35
00:02:16,260 --> 00:02:18,180
Remember that the strings are immutable.

36
00:02:18,270 --> 00:02:22,950
We can't change the first character we can't change any character manually.

37
00:02:22,950 --> 00:02:28,200
Same thing here if we uppercase a string we are creating a new string or we're getting a reference to

38
00:02:28,200 --> 00:02:28,970
a new string.

39
00:02:29,010 --> 00:02:31,780
That is the same content just uppercase.

40
00:02:31,860 --> 00:02:39,060
So if we wanted to save that to the variable we could do message equals message dot to uppercase or

41
00:02:39,060 --> 00:02:44,690
we could just make a new variable called yell or uppercase message or something like that.

42
00:02:44,700 --> 00:02:47,310
Now I have a message and it's been updated.

43
00:02:47,310 --> 00:02:49,160
Let's quickly talk about those perennials.

44
00:02:49,170 --> 00:02:50,550
They're really really important.

45
00:02:50,550 --> 00:02:53,780
If you leave them off it's not going to work.

46
00:02:53,820 --> 00:02:59,190
They won't throw an error it won't break your code but you're not actually executing that action you're

47
00:02:59,190 --> 00:03:03,090
just sort of asking javascript does that action exist.

48
00:03:03,090 --> 00:03:10,680
So we also have a two lowercase and if I call it we get you are so grounded Mr. lowercase remember message

49
00:03:10,680 --> 00:03:16,980
is now uppercase but if we do it without the Prince just message that to lowercase javascript just tells

50
00:03:16,980 --> 00:03:17,160
me.

51
00:03:17,190 --> 00:03:18,360
Yeah that's the thing.

52
00:03:18,360 --> 00:03:22,600
There's some code for two lowercase it's an action a function.

53
00:03:22,620 --> 00:03:23,820
Do you want me to call it.

54
00:03:23,880 --> 00:03:25,740
It's not even asking if we want to call it.

55
00:03:25,890 --> 00:03:27,480
That's kind of how I personify it.

56
00:03:27,900 --> 00:03:30,680
And if you do want to call it you need those prints.

57
00:03:30,780 --> 00:03:34,540
So that's two uppercase and two lowercase i have a slide on that as well.

58
00:03:34,620 --> 00:03:40,380
Remember the original value is unchanged in less you manually set the variable using the return value

59
00:03:40,380 --> 00:03:46,740
from two uppercase or two lowercase and then the second method will look at for now is called trim trim

60
00:03:46,740 --> 00:03:53,190
is very simple it just removes trailing leading and trailing whitespace so spaces at the beginning and

61
00:03:53,190 --> 00:03:58,900
end of a string when you call trim it returns a string where that space has been removed.

62
00:03:59,340 --> 00:04:01,190
So it's not going to remove all spaces.

63
00:04:01,560 --> 00:04:06,390
Let's do let color equals purple with some spaces in there.

64
00:04:06,630 --> 00:04:10,890
I'll even hit tab a couple times just like that.

65
00:04:11,070 --> 00:04:20,520
Now if I call color dot trim with parents it removes those spaces color is still unchanged of course

66
00:04:20,550 --> 00:04:22,120
as we've seen before.

67
00:04:22,350 --> 00:04:25,560
And another thing we can do is we can call trim.

68
00:04:25,860 --> 00:04:31,080
And then on top of that we can chain on another method call like two upper case.

69
00:04:32,080 --> 00:04:38,190
So trim will run first which takes this string and it returns a version with no spaces on either end.

70
00:04:38,190 --> 00:04:42,440
Then we're basically calling purple this dot to uppercase.

71
00:04:42,450 --> 00:04:43,610
So this goes first.

72
00:04:43,710 --> 00:04:47,090
And then to uppercase runs on whatever this returned.

73
00:04:47,250 --> 00:04:51,620
So we end up with purple no space and all caps.

74
00:04:51,630 --> 00:04:59,190
Quick note about trim if you have spaces in the middle of the word like this it is not going to remove

75
00:04:59,220 --> 00:04:59,580
those.

76
00:04:59,580 --> 00:05:04,690
It only removes the leading and trailing spaces while keeping all other spaces intact.

77
00:05:04,710 --> 00:05:07,230
Those are the first two string methods in the next video.

78
00:05:07,230 --> 00:05:09,600
We have a different batch that works slightly differently.

79
00:05:10,050 --> 00:05:15,150
But remember all these methods whether we're working with a string a number or something else like when

80
00:05:15,150 --> 00:05:20,250
we get to arrays objects they all have a set of built in methods built in actions.

81
00:05:20,400 --> 00:05:28,350
We call them by referencing a thing a string and array dot a method name with parents call.
