WEBVTT
1
00:00:00.980 --> 00:00:02.330
Now we can add items to a cart.

2
00:00:02.330 --> 00:00:06.380
We also need to make sure that we can display a list of all the items that have been added.

3
00:00:06.500 --> 00:00:10.440
So in this video we're going to start to implement our cart display page.

4
00:00:10.630 --> 00:00:12.410
That's going to be the next request handler.

5
00:00:12.410 --> 00:00:14.690
They were going to work on right here.

6
00:00:14.690 --> 00:00:18.000
Let's first begin by setting up the root handler itself.

7
00:00:18.150 --> 00:00:22.520
I'll do a router docket and we'll see if a user ever goes to slash cart.

8
00:00:22.670 --> 00:00:27.280
We'll display the list of items all right.

9
00:00:27.310 --> 00:00:28.780
So what are we going to do inside of here.

10
00:00:28.780 --> 00:00:31.360
Well there's a couple of different things we need to think about.

11
00:00:31.360 --> 00:00:35.380
First off we need to make sure that the user has a cart assigned to them.

12
00:00:35.380 --> 00:00:38.680
Remember we don't always have a cart available to us.

13
00:00:39.070 --> 00:00:43.810
We can't always assume that a user is going to first add an item to the cart which is what actually

14
00:00:43.810 --> 00:00:45.520
causes its creation.

15
00:00:45.520 --> 00:00:50.830
A user might attempt to come to this route right here before he can cart has even been created.

16
00:00:50.830 --> 00:00:55.510
So if a user tries to end up inside this root handler or make a GET request to slash cart when they

17
00:00:55.510 --> 00:01:00.040
don't have a cart already corresponding to them we're going to need to make sure that we redirect them

18
00:01:00.040 --> 00:01:02.400
back to our product listing page.

19
00:01:02.400 --> 00:01:04.110
So let's take care of that first.

20
00:01:04.210 --> 00:01:11.850
I'm going to say if not rec not session not cart I.D..

21
00:01:11.850 --> 00:01:18.360
So if we don't have an AI cart I.D. tied to this person let's do a return immediately and we will arrest

22
00:01:19.410 --> 00:01:26.890
not redirect back to our route routes so if we then get past that if statement that means that we do

23
00:01:26.890 --> 00:01:33.920
have a cart idea and we need to retrieve that cart out of our carts repo so I'll say concert cart is

24
00:01:34.500 --> 00:01:40.000
a weight carts repo we're going to use the same find one that we did up here or get one.

25
00:01:40.040 --> 00:01:40.980
Excuse me.

26
00:01:41.120 --> 00:01:42.080
So do a get one

27
00:01:44.900 --> 00:01:47.750
with rec not session not cart I.D.

28
00:01:51.580 --> 00:01:52.440
Now what's your recall.

29
00:01:52.450 --> 00:01:54.430
What a cart really looks like.

30
00:01:54.490 --> 00:01:58.550
So a cart itself is going to be an object like this right here.

31
00:01:58.570 --> 00:02:03.940
So it has the items array if we want to display item or details about every product that's been added

32
00:02:03.940 --> 00:02:04.760
into this cart.

33
00:02:04.840 --> 00:02:08.060
We actually actually have to run some complicated logic here.

34
00:02:08.230 --> 00:02:13.120
So we need to iterate through that items array we need to look at each individual I.D. and then for

35
00:02:13.120 --> 00:02:18.250
each I.D. We need to take a look at our products repository and find the corresponding item.

36
00:02:18.250 --> 00:02:22.750
Only then are we going to get the title in the price which are what we actually need in order to put

37
00:02:22.750 --> 00:02:23.610
this page together

38
00:02:26.450 --> 00:02:31.330
so back over here after we fetch cart we're going to want to iterate over that list of items.

39
00:02:31.840 --> 00:02:37.450
So I'll say for led item of items or Sumi cart dot items.

40
00:02:37.450 --> 00:02:37.870
There we go

41
00:02:41.770 --> 00:02:46.240
then for every item and remember an item is going to look something like this an item is going to have

42
00:02:46.660 --> 00:02:52.280
an object with an I.D. and that's going to be the idea of a particular item and the quantity

43
00:02:56.260 --> 00:03:00.700
so let's make sure that we take each item we're going to take the idea and make a query over to our

44
00:03:00.700 --> 00:03:06.550
products repo so we can get some details about this product to make sure that I require in the products

45
00:03:06.550 --> 00:03:11.620
repo at the very top of the file it's a backup here I'll do a product's repo

46
00:03:15.150 --> 00:03:24.440
from repositories products and now with that we can go back down to our handler and write here let's

47
00:03:24.440 --> 00:03:25.300
do a concert.

48
00:03:25.300 --> 00:03:29.000
Product is a weight products repo.

49
00:03:29.000 --> 00:03:32.120
We'll do a get one on item dot I.D.

50
00:03:35.120 --> 00:03:39.440
then once we get the product we need to somehow associate with this item or this item and this product

51
00:03:39.440 --> 00:03:43.310
together because remember at the end of the day we essentially want to handle all this data off to a

52
00:03:43.310 --> 00:03:47.330
template and show this kind of H2 email structure.

53
00:03:47.330 --> 00:03:51.470
So just to make this really easy we're going to take the product that we just found and assign it to

54
00:03:51.470 --> 00:03:56.620
the item property so the item is this thing right here.

55
00:03:56.620 --> 00:03:58.860
So we're essentially saying yeah what the heck.

56
00:03:58.870 --> 00:04:06.320
Just take the entire product all the information about it and assign it to a product property like so.

57
00:04:06.310 --> 00:04:09.360
And that's a messy copy paste but that's the idea.

58
00:04:09.360 --> 00:04:13.160
Now remember we're not can actually save this changed back to a repository.

59
00:04:13.230 --> 00:04:17.970
We're just going to add in this product property before we hand all this data off to our template.

60
00:04:17.970 --> 00:04:23.440
So the template can very easily access the associated product as it iterate over the list of items.

61
00:04:23.470 --> 00:04:26.010
So I'll say item dot product is product

62
00:04:28.960 --> 00:04:33.790
then finally after that once we get out of the for loop and we found every corresponding item well then

63
00:04:33.790 --> 00:04:34.420
sent back.

64
00:04:34.460 --> 00:04:38.560
We'll do a red dot sent and we're going to want to show some kind of template here.

65
00:04:38.560 --> 00:04:46.110
So maybe we will create a template called something like cart show template and we will pass in our

66
00:04:46.110 --> 00:04:51.250
list of items they'll say items is cart dot items

67
00:04:55.830 --> 00:04:58.190
let's now get started to work on this template.

68
00:04:58.190 --> 00:05:04.930
You know I got to fix up the typo excuse me the typo I have inside there inside of my views directory

69
00:05:05.020 --> 00:05:14.680
I'm going to make a new folder called cart's and inside I'll make a new file called show dot J.S. I'll

70
00:05:14.750 --> 00:05:25.160
then make sure that I require in show j ust to Kurt J.S. so the top I'll do a heart show template we're

71
00:05:25.160 --> 00:05:31.990
gonna go up one directory interviews into carts and get that show file we just created then inside of

72
00:05:31.990 --> 00:05:33.940
show itself let's get our layout

73
00:05:38.520 --> 00:05:46.020
we'll do a module experts we'll take the items that are going to be passed in and then we will iterate

74
00:05:46.050 --> 00:05:55.740
over that list of items so we'll do const rendered items is items dot map and for every item we can

75
00:05:55.740 --> 00:06:04.000
return a little snippet of each out so I will return a multi line string right now we're just going

76
00:06:04.000 --> 00:06:09.640
to try to print out some information about the item as plain text so we'll do How about a div

77
00:06:13.190 --> 00:06:20.680
and inside that div we'll first print out the title of the product so remember item we've added in that

78
00:06:20.680 --> 00:06:24.070
product property so like that thing right there.

79
00:06:24.160 --> 00:06:36.040
So you can say item dot product dot title or price or so on let's do item that product not title and

80
00:06:36.100 --> 00:06:40.690
I'll put in a little dash and then right after I'll do item product price

81
00:06:44.500 --> 00:06:44.770
okay.

82
00:06:44.790 --> 00:06:48.840
So this is going to give us an array of strings as usual we're going to join that together so we get

83
00:06:48.840 --> 00:06:56.520
one big string and then finally at the bottom we'll return our layouts we're gonna pass our layout and

84
00:06:56.540 --> 00:07:03.590
object give it the content property I'll put a multi line string inside of here and then I'll display

85
00:07:03.650 --> 00:07:10.640
each one and say something like cart and then after that we'll just print out our list of rendered items

86
00:07:13.020 --> 00:07:13.310
okay.

87
00:07:13.400 --> 00:07:15.220
So this looks like a pretty good first step.

88
00:07:15.230 --> 00:07:16.790
Let's do a quick test.

89
00:07:16.880 --> 00:07:18.130
I gonna go back over.

90
00:07:18.320 --> 00:07:23.900
I'm gonna go to my root root area right here now I should already have a couple of products inside my

91
00:07:23.900 --> 00:07:26.950
cart so I gotta try navigating to cart right away.

92
00:07:27.110 --> 00:07:32.140
I've already wired up this link right here inside the header to navigate to local those 3000 slash cart.

93
00:07:32.150 --> 00:07:37.100
You could see that at the very bottom left hand inside your browser so let's click on that.

94
00:07:37.260 --> 00:07:40.170
We come over here and it looks like we've got a little error.

95
00:07:40.260 --> 00:07:44.200
Once again I have forgotten async await my mistake.

96
00:07:44.280 --> 00:07:50.510
I apologize that's like the fourth time now on this application so I'll go back to Kurt's J.S. I'm gonna

97
00:07:50.510 --> 00:07:51.430
find the root handler.

98
00:07:51.440 --> 00:07:54.490
We were just working on a market as a sink.

99
00:07:54.560 --> 00:07:58.150
Let's save that and give this thing another shot.

100
00:07:58.160 --> 00:07:58.520
There we go.

101
00:07:58.520 --> 00:07:59.350
Much better.

102
00:07:59.480 --> 00:08:05.240
It's now I see a cart and I've added in winter gloves for nineteen dollars in winter hat with drawstring

103
00:08:05.240 --> 00:08:07.050
for fifteen dollars.

104
00:08:07.060 --> 00:08:07.260
Okay.

105
00:08:07.310 --> 00:08:12.020
So looks like we're definitely persisting these items and we can now render them out onto the screen.

106
00:08:12.020 --> 00:08:12.490
Very good.

107
00:08:13.100 --> 00:08:14.550
So let's take a quick pause right here.

108
00:08:14.570 --> 00:08:19.670
When we come back the next video we're going to once again take a template file or some greed on HDMI.

109
00:08:19.700 --> 00:08:23.960
I put together and kind of make this entire cart screen look a lot better than it currently looks.
