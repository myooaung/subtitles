WEBVTT
1
00:00:00.300 --> 00:00:04.380
Next up we're continuing along with more advanced function concepts.

2
00:00:04.470 --> 00:00:08.640
We have this big word or a big phrase higher order functions.

3
00:00:08.640 --> 00:00:13.210
It simply refers to functions that operate on or with other functions.

4
00:00:13.410 --> 00:00:19.560
So functions that either accept functions as arguments and use them or do something with them or on

5
00:00:19.560 --> 00:00:23.610
the other side of things a function that returns another function.

6
00:00:23.640 --> 00:00:28.620
So I'm going to show both of them we're going to start with the first example or the first type function

7
00:00:28.620 --> 00:00:31.170
that accepts a function as an argument.

8
00:00:31.170 --> 00:00:35.940
This is a really common pattern in JavaScript and we'll see a bunch of examples in a bunch of built

9
00:00:35.940 --> 00:00:41.250
in methods where we pass functions in as arguments but we're gonna start by defining our own.

10
00:00:41.310 --> 00:00:48.120
So this is a very simple function called called twice and it accepts an argument that I'm calling func.

11
00:00:48.150 --> 00:00:50.390
That's just the parameter name I've decided on.

12
00:00:50.520 --> 00:00:55.770
It could be anything as long as it's a valid javascript identifier and then I'm executing that argument

13
00:00:55.950 --> 00:00:57.300
twice.

14
00:00:57.570 --> 00:01:04.740
So if I have a function called laugh and I call twice the function call twice and I pass in life it

15
00:01:04.740 --> 00:01:07.550
will call laugh two times.

16
00:01:07.740 --> 00:01:09.140
So let me demonstrate this.

17
00:01:09.360 --> 00:01:17.440
All define a function called call three times and we'll pass a function to it.

18
00:01:17.640 --> 00:01:24.510
We can call it F just to make it different instead of func and will execute F one time two times three

19
00:01:24.510 --> 00:01:35.520
times and then let's define some other function whether it's laugh scream cry Let's go with cry and

20
00:01:35.520 --> 00:01:44.560
it will console that log boo hoo I'm so sad like that and now I can use it.

21
00:01:44.620 --> 00:01:46.690
I can use call three times.

22
00:01:46.690 --> 00:01:50.690
I mean I can call cry on my own just like this.

23
00:01:50.920 --> 00:01:57.820
Of course that should be review but I can also run call three times I'll expand this a bit and pass

24
00:01:57.820 --> 00:01:58.200
in.

25
00:01:58.240 --> 00:02:06.760
Cry cry is a function I'm passing it into this function and then this function executes it three times

26
00:02:06.760 --> 00:02:08.640
in a row and there we go.

27
00:02:08.640 --> 00:02:09.700
Boo hoo I'm so sad.

28
00:02:09.700 --> 00:02:14.740
One time two times three times if we instead did it with a different function.

29
00:02:14.740 --> 00:02:19.290
How about instead of cry we do rage and we'll console dialogue.

30
00:02:19.390 --> 00:02:20.740
I hate everything

31
00:02:23.950 --> 00:02:28.050
if we call three times and pass in rage.

32
00:02:28.270 --> 00:02:31.210
I hate everything I hate everything I hate everything.

33
00:02:32.470 --> 00:02:39.220
Let's do another example this time we'll write a function let's call it repeat or repeat n times and

34
00:02:39.220 --> 00:02:47.360
we'll pass in a function and a number and then it will call that function and number of times.

35
00:02:47.540 --> 00:02:49.210
So I'm going to define this function.

36
00:02:49.240 --> 00:02:58.840
Repeat and times and we'll pass in a function which I'll call func or we could call it action just to

37
00:02:58.840 --> 00:02:59.910
be different.

38
00:03:00.160 --> 00:03:02.010
So you can see it truly does not matter.

39
00:03:02.080 --> 00:03:07.690
Just any parameter name that's valid it can store a function it can store a string it will store whatever

40
00:03:07.690 --> 00:03:15.010
we pass in JavaScript doesn't care and then we'll pass in a number which we'll call num what we're going

41
00:03:15.010 --> 00:03:25.600
to do is loop Num Times and each time through call for let eye is equal to let's go upwards so zero

42
00:03:26.320 --> 00:03:34.180
is less than num I plus plus it doesn't matter we're just looping a number of times num number of times

43
00:03:34.600 --> 00:03:44.630
and we'll call action each time in that loop then to use this function I'll reinstate cry and rage and

44
00:03:44.630 --> 00:03:54.750
now I can call something like repeat end times rage and I'll repeat it 13 times so I'm passing in the

45
00:03:54.750 --> 00:04:01.320
function rage it's called action in this function and we are looping 13 times each time through we're

46
00:04:01.320 --> 00:04:09.000
executing whatever action was passed in what happens over here 13 I hate everything annoyingly chrome

47
00:04:09.000 --> 00:04:15.230
console condenses them you have to trust me it happened 13 times if we instead of come over here but

48
00:04:15.240 --> 00:04:22.980
if we instead change it to eleven times we get eleven consoles out logs if instead of rage I'm calling

49
00:04:22.980 --> 00:04:27.720
cry we get 19 boo hoo.

50
00:04:27.750 --> 00:04:28.720
I'm so sad.

51
00:04:28.720 --> 00:04:35.730
Printed out in our console and for one more example let's write a function called randomly pick a randomly

52
00:04:35.730 --> 00:04:36.280
caller.

53
00:04:36.330 --> 00:04:36.690
I don't know.

54
00:04:36.750 --> 00:04:42.240
Well we'll figure out a name it will accept two functions and it will randomly call one of them but

55
00:04:42.240 --> 00:04:42.870
not both.

56
00:04:42.870 --> 00:04:44.610
So I will comment this out.

57
00:04:44.910 --> 00:04:45.530
We can leave it.

58
00:04:46.000 --> 00:04:47.300
I'll just come at this lineup.

59
00:04:48.450 --> 00:04:52.210
Well define our function which I still haven't come up with a good name.

60
00:04:52.260 --> 00:04:55.600
Let's go with pick one or call one.

61
00:04:55.800 --> 00:05:03.150
Pick one is fine and will pass and function one and function two and then we need to write logic to

62
00:05:03.420 --> 00:05:05.920
randomly pick one of these values.

63
00:05:05.970 --> 00:05:11.760
So the most common way of doing this is to pick a random number and if that number is let's say the

64
00:05:11.760 --> 00:05:13.320
numbers between 0 and 1.

65
00:05:13.350 --> 00:05:18.290
If it's less than point 5 we'll do one thing if it's greater than point 5 or do another.

66
00:05:18.480 --> 00:05:26.280
So let's pick a random number we'll go with Rand equals math dot random and we'll keep it as a decimal

67
00:05:27.270 --> 00:05:32.960
and then we'll just write some logic if Rand is less than zero point five.

68
00:05:33.300 --> 00:05:39.660
We'll call function 1 and I'll expand this to make it clearer.

69
00:05:39.900 --> 00:05:44.760
Else if it's greater than point 5 we'll call.

70
00:05:44.760 --> 00:05:48.280
Function 2 and that's it.

71
00:05:48.310 --> 00:05:49.760
Function 1 in function 2.

72
00:05:49.840 --> 00:05:52.980
We'll only call one of them depending on what Rand is.

73
00:05:52.990 --> 00:06:01.860
So if we consider log Rand and then we try calling pick one which I'll just do it over here I'll call.

74
00:06:01.860 --> 00:06:03.960
Pick one and pass in.

75
00:06:03.960 --> 00:06:05.940
Cry and rage.

76
00:06:08.830 --> 00:06:13.180
Turns out that our random number was point nine zero point nine blah blah blah.

77
00:06:13.750 --> 00:06:14.740
So it ran.

78
00:06:14.740 --> 00:06:17.110
RAGE I hate everything.

79
00:06:17.110 --> 00:06:19.560
We'll try it again this time.

80
00:06:19.570 --> 00:06:26.910
Our Random number was zero point 3 8 and it ran cry so each time it picks one of them.

81
00:06:26.980 --> 00:06:27.820
So there you have it.

82
00:06:27.850 --> 00:06:34.960
Three examples of calling functions that are passed as arguments so a function call three times accepts

83
00:06:35.230 --> 00:06:41.050
another function as an argument and we execute it three times in the body of call three times.

84
00:06:41.050 --> 00:06:41.700
Here's another one.

85
00:06:41.710 --> 00:06:45.130
Repeat and times it accepts an action and a number.

86
00:06:45.130 --> 00:06:51.700
It loops no times or Num Times let's say 9 times and it calls whatever this function is that number

87
00:06:51.700 --> 00:06:52.690
of times.

88
00:06:53.050 --> 00:06:59.000
And then we also have pick one which accepts two functions and randomly decides which one to call.

89
00:06:59.050 --> 00:07:00.780
None of these may seem that useful.

90
00:07:01.090 --> 00:07:06.790
But as you'll see very shortly javascript comes with a ton of built in methods especially with arrays

91
00:07:07.000 --> 00:07:10.440
where we perform a function for every element in an array.

92
00:07:10.780 --> 00:07:15.680
So that's coming up shortly but we still need to talk about the other type of higher order function.

93
00:07:15.910 --> 00:07:19.210
We talked about functions that accept functions as arguments.

94
00:07:19.240 --> 00:07:23.530
Next we'll see functions that can return a function as the return value.
