1
00:00:00,870 --> 00:00:07,080
Well we can definitely open up our project directory and then inside there do a node index start J.S.

2
00:00:07,530 --> 00:00:09,840
and it looks like hey that's pretty much the whole project.

3
00:00:09,840 --> 00:00:11,480
Yeah that's what we said we wanted to do.

4
00:00:11,480 --> 00:00:15,460
We wanted to print out all the different files and folders inside of a given directory.

5
00:00:15,570 --> 00:00:19,780
I can even go up on directory and then do a node list index.

6
00:00:19,810 --> 00:00:21,880
J.S. hey still works.

7
00:00:22,050 --> 00:00:27,480
I can go up even one further directory and do Rod list index dot J.S..

8
00:00:27,480 --> 00:00:29,430
Of course this might command right here.

9
00:00:29,460 --> 00:00:31,170
Very likely is not going to work for you.

10
00:00:31,170 --> 00:00:33,330
I have a workspace directory called prod.

11
00:00:33,330 --> 00:00:35,240
That's why I'm able to run this command.

12
00:00:35,310 --> 00:00:37,640
But either way I'm going to run it and sure enough.

13
00:00:37,650 --> 00:00:43,180
I once again see all the different files and folders inside this directory so it's clear that our program.

14
00:00:43,180 --> 00:00:44,590
Well kind of works.

15
00:00:44,620 --> 00:00:51,180
There's just one little issue we saw just a month ago as I did that last command that in order to run

16
00:00:51,210 --> 00:00:58,020
our program from a very far removed directory I had to run node and then list out the exact path to

17
00:00:58,020 --> 00:01:05,960
get back to this list project folder so if I wanted to run our program from some very far removed directory

18
00:01:05,990 --> 00:01:11,330
on my machine I would have to end up typing out some really complicated path right here to navigate

19
00:01:11,330 --> 00:01:13,340
back to the list directory.

20
00:01:13,430 --> 00:01:17,930
Compare that to the normal command that we used to list different files and folders on a UNIX based

21
00:01:17,930 --> 00:01:23,960
system we can run just simply s and everything just kind of magically works so it's very clear right

22
00:01:23,960 --> 00:01:27,680
now that the Ellis command is way better than our implementation.

23
00:01:27,680 --> 00:01:28,850
We're going to use the Ellis command.

24
00:01:28,850 --> 00:01:34,250
Way more than we would ever run node and then tried to navigate back over to this project directory

25
00:01:34,430 --> 00:01:40,930
just to run our program in this video and the next one we're gonna figure out how to fix this up we're

26
00:01:40,930 --> 00:01:47,650
gonna figure out some way to be able to run simply an L s short for node L S.

27
00:01:47,680 --> 00:01:51,970
So this is a little command that you and I are going to implement we're going to be able to run that

28
00:01:52,060 --> 00:01:56,350
and have it print out the different files and folders on our machine and you can see that it already

29
00:01:56,350 --> 00:01:59,170
works for me because I've already wired it up on my computer.

30
00:01:59,200 --> 00:02:04,150
I just want to give you a quick demo so that's the goal I want to be able to run simply MLS and have

31
00:02:04,150 --> 00:02:09,400
it you essentially do the same thing as that right there running node and then the really long path

32
00:02:09,400 --> 00:02:11,510
to our project.

33
00:02:11,580 --> 00:02:12,630
So how are we going to do this.

34
00:02:12,630 --> 00:02:14,620
Well it's a multi-step process.

35
00:02:14,730 --> 00:02:20,360
The first thing we're going to do is going to seem a little bit not related inside of my project directory.

36
00:02:20,370 --> 00:02:27,100
I'm going to run the command NPM in it Dash y when I run this command.

37
00:02:27,100 --> 00:02:30,810
It's going to generate a new file inside of my project directory.

38
00:02:30,820 --> 00:02:36,720
This is a very special file that you're going to get extremely used to as a javascript developer.

39
00:02:36,820 --> 00:02:40,870
It's going to go back over to my editor and find the new file that was generated.

40
00:02:40,870 --> 00:02:43,360
It is called package dot Jason right there.

41
00:02:43,450 --> 00:02:45,460
We'll talk about what this file is used for.

42
00:02:46,970 --> 00:02:47,190
OK.

43
00:02:47,220 --> 00:02:52,740
So this file overall describes some of the different qualities of your project as you can see right

44
00:02:52,740 --> 00:02:53,040
away.

45
00:02:53,040 --> 00:03:00,060
It lists out the name of your project a version the primary file inside of your project keywords your

46
00:03:00,090 --> 00:03:05,500
author or your name right there as the author and the license of the project as well decides that there

47
00:03:05,500 --> 00:03:11,040
are two extremely important uses for this package shot Jason file that you need to be aware of.

48
00:03:11,140 --> 00:03:16,980
The first one is the script section right here inside the script section we're going to end up writing

49
00:03:16,980 --> 00:03:20,910
out some different little essentially mini programs more or less.

50
00:03:20,910 --> 00:03:26,020
These are going to be a little tiny scripts that do some automated tasks inside of our project.

51
00:03:26,040 --> 00:03:31,040
So a example might be what you see right here even though it doesn't have an actual implementation.

52
00:03:31,080 --> 00:03:35,750
We might create a script that automatically run some test inside of our project.

53
00:03:35,760 --> 00:03:41,460
You might also have a another script that will try to just start up our project in a very special special

54
00:03:41,460 --> 00:03:47,040
way or we might have another script that tries to package up or build our project and deploy it to some

55
00:03:47,070 --> 00:03:49,040
outside Web site as well.

56
00:03:49,050 --> 00:03:53,820
There are many different purposes or scripts so we add into this section and we're going to get some

57
00:03:53,820 --> 00:03:57,580
really good experience with that script section later on INSIDE THE COURSE.

58
00:03:57,630 --> 00:03:59,010
So we won't worry about it just yet.

59
00:03:59,010 --> 00:04:02,940
Just be aware that we are going to eventually come back here and essentially write in some little mini

60
00:04:02,940 --> 00:04:07,190
PROGRAMS CUSTOMIZED for just our project.

61
00:04:07,360 --> 00:04:12,340
The other extremely important thing that the package that Jason File does is record dependencies that

62
00:04:12,370 --> 00:04:13,720
our project has.

63
00:04:13,720 --> 00:04:20,140
So if we ever decide to install someone else's code or a dependency into our project it will be automatically

64
00:04:20,140 --> 00:04:23,420
recorded inside this package not just on file.

65
00:04:23,440 --> 00:04:27,940
The reason that it gets recorded in here is so that if we ever decide to share our project with someone

66
00:04:27,940 --> 00:04:30,150
else they can run a single command.

67
00:04:30,170 --> 00:04:34,450
They will take a look at all the dependencies that get listed inside this file and automatically install

68
00:04:34,450 --> 00:04:36,220
it for them as well.

69
00:04:36,250 --> 00:04:41,750
That is another thing that we're going to get a lot of experience with very shortly to so that is the

70
00:04:41,780 --> 00:04:47,060
primary goal of package star Jason and record some information about your project and the two most important

71
00:04:47,060 --> 00:04:52,010
things are the script section and the dependency section which again we don't have yet but we will have

72
00:04:52,250 --> 00:04:54,100
very shortly.

73
00:04:54,110 --> 00:04:59,300
The other thing that we can do inside this package that Jason File is setup a little configuration section

74
00:04:59,810 --> 00:05:02,560
that will allow us to do exactly what I just mentioned.

75
00:05:02,570 --> 00:05:07,940
It will allow us to run some commands like whatever arbitrary command we want to call it and have it

76
00:05:07,940 --> 00:05:13,700
run or trigger some code inside of our project to do so.

77
00:05:13,740 --> 00:05:18,450
I'm gonna go back over to my pack and start Jason File at the very bottom here.

78
00:05:18,600 --> 00:05:23,440
I'm going to put a comma at the end of license and then I'll do a set of double quotes.

79
00:05:23,670 --> 00:05:32,460
I'll say in I'll open up an object I'll put another set of double quotes I'll say any less and then

80
00:05:32,520 --> 00:05:40,550
a colon and index start j ust like so this section right here means that we have some binary or essentially

81
00:05:40,550 --> 00:05:46,260
some executable thing that we want to be able to run inside of our project the name of that program

82
00:05:46,320 --> 00:05:48,190
is an L S.

83
00:05:48,330 --> 00:05:54,150
Again this stands for node l s like the normal ls command I made up this little name right here.

84
00:05:54,150 --> 00:05:55,840
You can have this be whatever you want.

85
00:05:56,220 --> 00:06:01,950
So for you if you want to build to run something like node dash L S at your terminal and have that printout

86
00:06:01,980 --> 00:06:08,250
or essentially run our program you would change that key right there to node dash unless you can have

87
00:06:08,250 --> 00:06:09,840
it be whatever you want.

88
00:06:09,840 --> 00:06:16,470
I'm just going to choose to use an LSA because I think it's I don't know kind of reasonable then as

89
00:06:16,470 --> 00:06:22,830
a value we specify index not g yes that means that whenever we run an L S at our terminal we want to

90
00:06:22,830 --> 00:06:24,190
run the index stuff.

91
00:06:24,270 --> 00:06:26,910
J.S. file okay.

92
00:06:26,940 --> 00:06:28,010
So that's going to step one.

93
00:06:28,010 --> 00:06:30,280
Unfortunately this is not the only thing we have to do.

94
00:06:30,320 --> 00:06:31,810
There's one or two other steps.

95
00:06:31,910 --> 00:06:37,130
Let's save this file for right now we'll take a pause come back in just a moment and do the other stuff

96
00:06:37,130 --> 00:06:43,310
we need to do in order to run that L and L S command from our command line so could possible see you

97
00:06:43,310 --> 00:06:44,490
in just a minute.
