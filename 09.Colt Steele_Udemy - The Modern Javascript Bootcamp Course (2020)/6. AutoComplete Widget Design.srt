1
00:00:01,190 --> 00:00:05,630
We've now got a good understanding of how to make requests to that outside API and get some information

2
00:00:05,630 --> 00:00:06,910
about some different movies.

3
00:00:06,950 --> 00:00:10,610
So we're now going to turn our focus a little bit and start to think about how we're going to put together

4
00:00:10,610 --> 00:00:12,380
that autocomplete widget.

5
00:00:12,380 --> 00:00:17,360
Once we understand the autocomplete will then be able to just about go straight from start to finish

6
00:00:17,560 --> 00:00:19,190
and writing out the code for this project.

7
00:00:19,190 --> 00:00:26,270
So just one last little video here I put together a diagram on the behavior of this auto complete widget.

8
00:00:26,270 --> 00:00:29,500
This is a kind of confusing diagram so we're going to go through it step by step.

9
00:00:29,900 --> 00:00:35,040
But my intent here is to really clarify exactly how this autocomplete widget is going to work.

10
00:00:35,090 --> 00:00:40,070
Once again I really recommend that on your own personal projects you go through a kind of process like

11
00:00:40,100 --> 00:00:45,110
what I'm about to show you to make sure that you personally are 100 percent aware about the requirements

12
00:00:45,170 --> 00:00:49,060
of the different things that you need to build inside of your application.

13
00:00:49,070 --> 00:00:53,780
Once you start building diagrams like this or you have to make a diagram just to be clear once you just

14
00:00:53,780 --> 00:00:57,800
start thinking through it I can just about guarantee you that you're going to very quickly start to

15
00:00:57,800 --> 00:01:03,140
realize there are corner cases that are a lot easier to solve upfront as opposed to if you would just

16
00:01:03,140 --> 00:01:07,040
start to write code and then kind of run into some issue along the way.

17
00:01:07,850 --> 00:01:08,090
OK.

18
00:01:08,300 --> 00:01:11,380
So we're gonna start off this diagram on the very top left hand side.

19
00:01:11,420 --> 00:01:16,450
We're going to think about all the different ways that a user can interact with this widget.

20
00:01:16,570 --> 00:01:20,430
This is what the widget is going to look like when a user first loads up the page.

21
00:01:20,430 --> 00:01:23,460
We're going to show them just a simple empty input.

22
00:01:23,580 --> 00:01:25,600
We would refer to this as the default state.

23
00:01:25,620 --> 00:01:28,260
In other words this is what it looks like by default.

24
00:01:28,290 --> 00:01:33,980
When the application first starts up at some point time the user is then going to start typing inside

25
00:01:33,980 --> 00:01:34,960
that input.

26
00:01:35,180 --> 00:01:40,970
As soon as the user enters in some kind of full string and stops typing we're going to take that search

27
00:01:40,970 --> 00:01:44,060
string and make a request off to the API.

28
00:01:44,180 --> 00:01:49,350
We're going to do a search request to get back some list results like we just saw a moment ago.

29
00:01:49,400 --> 00:01:55,340
We're gonna take all those search results open up a little menu underneath that input and render out

30
00:01:55,430 --> 00:02:00,350
all the possible movie movies that the user might have been looking for as a quick reminder at these

31
00:02:00,350 --> 00:02:06,080
boxes with an X in them represent an image that would be the movie poster for the movie The Dark Knight

32
00:02:06,170 --> 00:02:09,860
made in 2012 right away.

33
00:02:09,860 --> 00:02:12,590
There is one other case we need to be aware of here.

34
00:02:12,680 --> 00:02:16,790
It is entirely possible that a user user will enter in a search string.

35
00:02:16,820 --> 00:02:20,540
We'll do a search and not find any results whatsoever.

36
00:02:20,540 --> 00:02:25,730
So if we don't find any results we're just going to say that we're going to close that menu entirely.

37
00:02:25,730 --> 00:02:30,340
It might be a little bit better to show us some kind of error message to the user and tell them Hey

38
00:02:30,410 --> 00:02:33,000
sorry but we couldn't find any movies with that search term.

39
00:02:33,110 --> 00:02:35,550
But right now we're not gonna worry about that right away.

40
00:02:35,590 --> 00:02:41,250
We're going to say if we don't find any results just hide the menu OK.

41
00:02:41,280 --> 00:02:46,050
That's kind of like step one understanding what happens in the instant that the user starts to type

42
00:02:46,050 --> 00:02:46,710
stuff in.

43
00:02:47,430 --> 00:02:52,530
So now I want to kind of go further along the flow and think about the different ways that a user can

44
00:02:52,530 --> 00:02:53,820
then interact with a widget.

45
00:02:53,820 --> 00:02:59,640
After we show them that menu the first thing they could do is press Enter thinking that that will select

46
00:02:59,670 --> 00:03:02,120
some kind of record or something like that.

47
00:03:02,130 --> 00:03:06,960
In this case we're going to require a user to actually click on an element here to select it.

48
00:03:06,960 --> 00:03:12,840
So we want to see a user click on like that movie or that movie or that movie to indicate which one

49
00:03:12,900 --> 00:03:14,600
they want to select.

50
00:03:14,640 --> 00:03:20,200
We're going to require them to click on a movie and pressing the enter key is not going to do anything.

51
00:03:20,250 --> 00:03:24,300
This is another one of those scenarios where you kind of have to sit down and think these things through

52
00:03:24,480 --> 00:03:28,710
because otherwise you might build the widget and then press the Enter key expecting something to happen

53
00:03:29,010 --> 00:03:31,500
and see that it does nothing and be kind of surprised.

54
00:03:31,500 --> 00:03:34,550
So I'm saying from the get go that I don't want anything to happen.

55
00:03:34,560 --> 00:03:41,370
If user presses the enter key the next possible interaction is that a user does what we want.

56
00:03:41,380 --> 00:03:46,930
They might click on an entry so they click on an entry that means that they have made their selection.

57
00:03:47,050 --> 00:03:53,050
In that case we're going to update the text inside of the input to the exact text of the title of the

58
00:03:53,050 --> 00:03:55,050
movie that they just clicked on.

59
00:03:55,150 --> 00:04:01,750
For example if the user had searched for Dark Knight and then they clicked on the Dark Knight with proper

60
00:04:01,750 --> 00:04:06,550
capitalization we're going to take that full movie title right there just the title not the year it

61
00:04:06,550 --> 00:04:07,230
was made.

62
00:04:07,310 --> 00:04:10,530
We're just joined the year for convenience sake for the user.

63
00:04:10,600 --> 00:04:15,430
We're gonna take that full title and stick it back into the input so that it's crystal clear exactly

64
00:04:15,460 --> 00:04:18,770
what movie they are looking at.

65
00:04:18,800 --> 00:04:23,240
Now there's one last possible way of interacting with this thing that we need to be aware of after a

66
00:04:23,240 --> 00:04:24,900
user enters the search term.

67
00:04:25,400 --> 00:04:30,770
If they enter a term and we open up that drop down menu and show them all the options they might decide

68
00:04:30,800 --> 00:04:33,560
that they don't want to pick any movie they might decide.

69
00:04:33,560 --> 00:04:37,130
Yeah I'm kind of done with this I don't want to select a movie I want to work on some other part of

70
00:04:37,130 --> 00:04:38,670
this application or something.

71
00:04:39,020 --> 00:04:43,790
If that's the case and they click outside of the menu after it's been opened then we're going to make

72
00:04:43,790 --> 00:04:46,950
sure that we close the menu and do nothing else.

73
00:04:46,960 --> 00:04:51,560
So this is one more of those scenarios where you really have to think through the lifecycle of the entire

74
00:04:51,560 --> 00:04:51,940
widget.

75
00:04:51,950 --> 00:04:56,150
And it's helpful to do so before we start writing any code OK.

76
00:04:56,180 --> 00:04:56,600
That's it.

77
00:04:56,600 --> 00:04:59,630
That's the entire lifecycle of this little autocomplete.

78
00:04:59,630 --> 00:05:03,590
These are all the different scenarios so we really have to be thinking about now there definitely are

79
00:05:03,590 --> 00:05:08,630
one or two kind of other corner cases inside of this widget that we need to be aware of that I kind

80
00:05:08,630 --> 00:05:14,330
of purposely did not add into this diagram because I want us to kind of run into these little mysterious

81
00:05:14,330 --> 00:05:17,640
scenarios and point them out as kind of a learning experience.

82
00:05:17,720 --> 00:05:23,400
So we might see one or two unexpected things crop up along the way.

83
00:05:23,420 --> 00:05:23,650
All right.

84
00:05:23,660 --> 00:05:27,230
Now that we understand what we're trying to do here and we understand the interaction with this widget

85
00:05:27,500 --> 00:05:30,470
let's take one more pause and then start writing some code in the next video.
