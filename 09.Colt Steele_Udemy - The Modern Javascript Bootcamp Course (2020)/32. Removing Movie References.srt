1
00:00:00,880 --> 00:00:03,390
The last thing we need to extract is fetch data.

2
00:00:03,560 --> 00:00:09,480
So fetch data is being used inside of our autocomplete J.S. file right now directly.

3
00:00:09,680 --> 00:00:15,590
So if we go to auto complete J.S. find out on input callback right here we're calling fetch data when

4
00:00:15,590 --> 00:00:16,690
we call fetch data right here.

5
00:00:16,700 --> 00:00:22,450
That is a reference back to the fetch data that gets defined inside of index not J.S..

6
00:00:22,490 --> 00:00:28,490
So this means that we have a direct link between these two files autocomplete J.S. is directly referencing

7
00:00:28,550 --> 00:00:30,090
this function right here.

8
00:00:30,140 --> 00:00:35,480
So if we ever deleted this function or renamed it or even just commented it out our autocomplete would

9
00:00:35,480 --> 00:00:37,400
no longer work correctly.

10
00:00:37,400 --> 00:00:41,780
So we definitely do not want to have such a tight coupling between these two functions.

11
00:00:41,930 --> 00:00:46,220
We're just going to essentially take this function right here and we're going to throw it as another

12
00:00:46,280 --> 00:00:53,240
argument or another option into our create autocomplete config object rather than going to update our

13
00:00:53,270 --> 00:00:58,670
autocomplete file and make sure that it references the fetch data that has passed on that config object

14
00:00:59,030 --> 00:01:05,210
instead of over this like direct global scope between the two files but to do so I'm going to take just

15
00:01:05,210 --> 00:01:13,040
the function I'm going to cut it I'll delete the function name at the very top I'm going to add in a

16
00:01:13,040 --> 00:01:21,060
new key value pair to my configuration object call it fetch data I'm going to put a set of parentheses

17
00:01:21,540 --> 00:01:23,560
and then paste the function.

18
00:01:23,700 --> 00:01:28,540
Now I definitely have some mistakes on syntax inside of here so I'm gonna make sure that it fixes up.

19
00:01:28,620 --> 00:01:33,720
First off we need to make sure that we mark batch data as being async so I'm going to delete the async

20
00:01:33,720 --> 00:01:37,360
keyword right there and put it right in front of fetch data.

21
00:01:37,410 --> 00:01:43,300
Well then make sure that I take the search term and add it as the argument to fetch data.

22
00:01:43,640 --> 00:01:49,630
And then finally I can remove the fetch data right there and the arrow and it should be good to go.

23
00:01:49,790 --> 00:01:53,720
Make sure you triple check your syntax right there because definitely very easy to make a little typo

24
00:01:54,630 --> 00:01:59,150
I'm also gonna do a quick change or fix to the syntax or indentation.

25
00:01:59,150 --> 00:02:01,450
There we go OK.

26
00:02:01,490 --> 00:02:08,360
So now you're passing the fetch data function as an argument into our create autocomplete configuration

27
00:02:08,360 --> 00:02:10,700
object.

28
00:02:10,760 --> 00:02:14,500
It's now if we go back over to autocomplete us at the very top.

29
00:02:14,500 --> 00:02:18,720
Once again we will D structure out the fetch data function.

30
00:02:18,730 --> 00:02:23,560
Now there is no direct kind of window scope access between these two different files which is definitely

31
00:02:23,560 --> 00:02:24,310
a good improvement.

32
00:02:25,460 --> 00:02:25,700
All right.

33
00:02:25,730 --> 00:02:28,440
So I think there's just one last thing for us to take care of.

34
00:02:28,610 --> 00:02:34,970
We need to go through our autocomplete J.S. file and we need to find any reference to a movie in order

35
00:02:34,970 --> 00:02:38,000
to actually make this code generic in nature and reusable.

36
00:02:38,000 --> 00:02:42,130
We need to not make any big assumptions about the kind of data that we are working with.

37
00:02:42,260 --> 00:02:47,960
We just have to go through and change the words movie or movies to some other kind of appropriate term

38
00:02:49,200 --> 00:02:54,080
so inside of your I first see movie on our label says search for a movie.

39
00:02:54,140 --> 00:03:00,130
I was gonna change this to just a search or then go down a little bit.

40
00:03:00,400 --> 00:03:04,370
So inside of on input after he made a request we called what came back.

41
00:03:04,370 --> 00:03:05,270
Movies.

42
00:03:05,340 --> 00:03:10,900
So again not appropriate to have the term movies inside of autocomplete J.S. anymore it's I'm going

43
00:03:10,900 --> 00:03:12,930
to change the term movies throughout this file.

44
00:03:12,970 --> 00:03:18,130
Two items this kind of reflects that we have a collection of different items so we want to show inside

45
00:03:18,130 --> 00:03:19,210
that dropdown.

46
00:03:19,470 --> 00:03:24,460
So now we can go through and update every reference to movies to items instead.

47
00:03:24,460 --> 00:03:30,310
The first one is inside the if statement I'll change that to items the next one is right here on the

48
00:03:30,370 --> 00:03:31,100
for loop.

49
00:03:31,120 --> 00:03:35,840
I'll change that to items and I think that is about it inside of here.

50
00:03:35,840 --> 00:03:36,830
Let me do one more search.

51
00:03:36,830 --> 00:03:38,690
Yep that's it.

52
00:03:38,780 --> 00:03:45,910
Now inside of the for loop itself will change the term movie to item singular so on the for loop will

53
00:03:45,920 --> 00:03:46,160
do.

54
00:03:46,150 --> 00:03:54,900
Item on render option I'll change it to item input value right here I'll change it to item on option

55
00:03:54,900 --> 00:04:02,870
select I'll go to item and I think that is just about it we'll do a search for movie and nothing to

56
00:04:02,910 --> 00:04:08,370
make sure inside of autocomplete J.S. you do a search for movie and if you see the weird movie inside

57
00:04:08,370 --> 00:04:11,630
of here that is wrong we should not have any references to movies anymore.

58
00:04:13,070 --> 00:04:13,350
All right.

59
00:04:13,390 --> 00:04:14,330
And that's pretty much it.

60
00:04:14,350 --> 00:04:17,210
Let's save this and think we're ready for one last test.

61
00:04:18,210 --> 00:04:25,480
It's going to go back over to my index H team L or refresh I'll search for Avengers again and everything

62
00:04:25,510 --> 00:04:29,380
works correctly the search occurred and I should be able to click on that and still see something appear

63
00:04:30,070 --> 00:04:34,720
if you see any errors inside of your console I can just about guarantee you that you still have a reference

64
00:04:34,720 --> 00:04:42,790
to movie or movies somewhere inside of autocomplete J.S. to make sure that you find that remaining reference

65
00:04:42,820 --> 00:04:46,050
and update it to the appropriate term okay.

66
00:04:46,090 --> 00:04:51,220
So at this point in time we now have a fully reusable function called Create autocomplete we can take

67
00:04:51,220 --> 00:04:56,470
this function right here and we can use it on any other project we can think of and we'll get the exact

68
00:04:56,530 --> 00:04:59,890
same behavior as the one that we currently have inside of application.

69
00:04:59,890 --> 00:05:06,790
All we have to do is call the function and pass in these appropriate different properties.

70
00:05:06,940 --> 00:05:14,100
So we need to specify where to render the autocomplete to how to show an individual item what to do

71
00:05:14,100 --> 00:05:19,980
when someone clicks on one what to kind of backfill inside of the inputs after user clicks on one and

72
00:05:19,980 --> 00:05:21,830
then how to actually fetch the data.

73
00:05:22,080 --> 00:05:27,090
As long as we put all that code inside there then we're going to get a fully functioning autocomplete

74
00:05:27,150 --> 00:05:28,500
ready to go.

75
00:05:28,680 --> 00:05:33,690
So I know this last bit of the refactor is a little bit of a pain but I hope that at this point a little

76
00:05:33,690 --> 00:05:37,500
bit more clear why we went through this pain and I hope you can recognize that the code that we now

77
00:05:37,500 --> 00:05:40,150
have is quite reusable in nature.

78
00:05:40,410 --> 00:05:43,590
So let's take a pause right here and continue their application in the next video.
