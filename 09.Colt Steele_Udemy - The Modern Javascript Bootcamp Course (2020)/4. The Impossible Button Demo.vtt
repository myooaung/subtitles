WEBVTT
1
00:00:00.180 --> 00:00:01.340
Hey welcome back.

2
00:00:01.350 --> 00:00:05.230
In this video we'll make a tiny demo project using our event listener.

3
00:00:05.310 --> 00:00:07.860
I'm calling it the world's most annoying button.

4
00:00:07.860 --> 00:00:12.870
It's a button that when you try and click it it moves out of the way and you have to wrangle it.

5
00:00:12.870 --> 00:00:19.110
You have to corner it into a corner or a small space in order to actually click it and defeat it.

6
00:00:19.230 --> 00:00:21.180
So it'll be very simple.

7
00:00:21.180 --> 00:00:27.570
We have a single button element and we'll add some text like tried to click me.

8
00:00:28.500 --> 00:00:30.910
And that's all we need in our each demo.

9
00:00:30.900 --> 00:00:36.390
Then in our javascript we're going to select that button and use the mouse over event.

10
00:00:36.390 --> 00:00:40.950
So when you get near that as soon as you mouse over that button It's going to move.

11
00:00:40.950 --> 00:00:44.500
So you can't click because it will be gone before you can click.

12
00:00:44.520 --> 00:00:50.420
So let's do a document that query selector to select that button.

13
00:00:50.430 --> 00:00:51.630
We only have one.

14
00:00:51.630 --> 00:00:59.380
We'll save this to a variable called B10 and then we'll add our event listener Beatty and add event

15
00:00:59.380 --> 00:01:09.480
listener mouse over and our function will start by just cancelled out logging clicks may or no mouse

16
00:01:09.520 --> 00:01:13.030
over me and just make sure that's showing up.

17
00:01:13.030 --> 00:01:16.980
I always like to just test that things are connected the way they should be.

18
00:01:16.990 --> 00:01:22.780
So if we refresh open up my console I'm always hemmed in by the way your button will probably look a

19
00:01:22.780 --> 00:01:26.560
lot smaller OK mouse over me that is showing up.

20
00:01:27.550 --> 00:01:33.970
OK so now what we want to do is when you mouse over I'd like for it to randomly move somewhere else

21
00:01:33.970 --> 00:01:37.150
on the screen and there's a lot of ways of moving elements.

22
00:01:37.450 --> 00:01:42.220
I'm going to go with the very simplest one which is not really ideal as far as performance.

23
00:01:42.280 --> 00:01:51.550
I'm going to change the style dot top and style dot left not this dot style but Beatty and Dot style

24
00:01:51.550 --> 00:01:53.950
dot top Beatty end up style dot left.

25
00:01:53.950 --> 00:02:01.300
This being a javascript course I don't have time to go into a bunch of complex CSX animations and optimizations

26
00:02:01.600 --> 00:02:04.600
but you can check out some other courses that are online.

27
00:02:04.900 --> 00:02:10.780
Other people have great courses you can check out my youtube video on animations and CSX to understand

28
00:02:10.810 --> 00:02:17.350
why animating top in life and a lot of different CSX properties is not really ideal but for this demo

29
00:02:17.350 --> 00:02:18.330
it totally works fine.

30
00:02:19.090 --> 00:02:21.160
So I'm going to start by selecting all buttons.

31
00:02:21.160 --> 00:02:24.800
We only have one week to give it a position of absolute.

32
00:02:25.350 --> 00:02:29.650
I'll give it a top of 10 pixels and a left of 10 pixels.

33
00:02:29.650 --> 00:02:33.760
So now I have a top in the left set and position is absolute.

34
00:02:33.940 --> 00:02:37.540
I can now manipulate that instead of my function.

35
00:02:37.540 --> 00:02:40.020
The callback for my ad event listener.

36
00:02:40.150 --> 00:02:42.760
So when mouse over occurs the first time.

37
00:02:42.790 --> 00:02:51.370
Why don't we just set Beatty and Dot style dot left equals and we can just pick some number like 200

38
00:02:51.430 --> 00:02:52.280
pixels.

39
00:02:52.540 --> 00:03:01.080
And then Beatty end up style dot top equals one hundred pixels and let's make sure it moves so refresh

40
00:03:01.080 --> 00:03:02.160
the page I hover.

41
00:03:02.280 --> 00:03:03.800
And it moved.

42
00:03:03.910 --> 00:03:06.870
OK so that's the first bit relatively easy.

43
00:03:06.870 --> 00:03:08.530
I'm still ways zoomed in on.

44
00:03:08.690 --> 00:03:10.050
Two hundred and fifty percent.

45
00:03:11.540 --> 00:03:12.250
So there we go.

46
00:03:12.260 --> 00:03:13.760
It's moving.

47
00:03:14.060 --> 00:03:19.100
Now what I'd like to do is randomly pick a number and haven't moved that many pixels.

48
00:03:19.100 --> 00:03:22.240
And ideally that number would be on screen.

49
00:03:22.250 --> 00:03:28.430
I don't want to just pick some random number between zero and I don't know a thousand because some people

50
00:03:28.430 --> 00:03:34.040
might have a screen that's only 900 pixels or they might have a really big screen with thousands of

51
00:03:34.040 --> 00:03:34.940
pixels.

52
00:03:34.970 --> 00:03:35.780
I don't want to limit it.

53
00:03:36.290 --> 00:03:39.560
So how do we get access to these sides of the screen.

54
00:03:39.560 --> 00:03:42.990
This is a bit of a side topic here but it's worth going into.

55
00:03:43.030 --> 00:03:44.350
There's a lot of different ways.

56
00:03:44.360 --> 00:03:50.420
And unfortunately it does it does vary a bit according to the browser a user is in especially older

57
00:03:50.420 --> 00:03:52.750
versions of browsers but there are a couple different options.

58
00:03:52.750 --> 00:03:53.660
I'll show you.

59
00:03:53.660 --> 00:03:56.330
The first is on the window.

60
00:03:56.330 --> 00:03:58.650
There is a property called screen.

61
00:03:58.940 --> 00:04:06.440
And if you look at screen it has things like available height and available width now this is the maximum

62
00:04:06.440 --> 00:04:09.620
dimensions of my actual screen on my computer.

63
00:04:09.620 --> 00:04:12.500
This is not the dimensions of my browser window.

64
00:04:12.530 --> 00:04:19.890
If I were to shrink this or change the size of the window we still end up with twelve hundred or was

65
00:04:19.900 --> 00:04:21.490
it 1920 by twelve hundred.

66
00:04:22.150 --> 00:04:28.270
So that is not what we want to use here because I would assume a user had their screen or their browser

67
00:04:28.270 --> 00:04:29.500
window full screen.

68
00:04:29.710 --> 00:04:34.410
But if we are doing it in a very small window you want to account for that as well.

69
00:04:34.450 --> 00:04:36.560
So we have another option.

70
00:04:36.760 --> 00:04:43.030
This is just one of the many options we have if we look in window again there is a property called Inner

71
00:04:43.030 --> 00:04:46.410
height and another one called Inner with.

72
00:04:46.450 --> 00:04:49.710
So right now my inner width is eight hundred and eighteen pixels.

73
00:04:49.840 --> 00:04:56.400
If I resize this here's my actual window for this browser it's down to 2 0 3.

74
00:04:56.760 --> 00:05:00.940
If I bring it over here it goes up to 16 80.

75
00:05:01.090 --> 00:05:07.450
So we want to use inner with an inner height to calculate how many pixels are to use to calculate where

76
00:05:07.450 --> 00:05:09.400
we should move this button.

77
00:05:09.400 --> 00:05:15.050
We'll just multiply a random number by the entire width and by the inner height turn it into pixels.

78
00:05:15.220 --> 00:05:16.690
So I'll do that here.

79
00:05:16.690 --> 00:05:20.630
Why don't we start with math dot random.

80
00:05:20.740 --> 00:05:29.080
Well multiply that by window dot inner heights and we can floor it if we want to.

81
00:05:29.110 --> 00:05:35.010
I think we can just use a fractional number of pixels as well and see assess.

82
00:05:35.020 --> 00:05:39.360
I'm actually not positive if I've ever done that but we'll floor it just to be safe.

83
00:05:39.370 --> 00:05:41.590
So this will give us a height.

84
00:05:41.590 --> 00:05:43.660
Let's make a variable for that concert.

85
00:05:43.690 --> 00:05:48.040
H and then we'll get a with.

86
00:05:48.130 --> 00:05:50.080
So I'll just duplicate that.

87
00:05:50.220 --> 00:05:56.090
I'll call it w math that flaw of math at random times window that enter with.

88
00:05:56.110 --> 00:05:59.200
Then we'll use that to set buttons styled that left.

89
00:05:59.290 --> 00:06:06.970
So I'll use the width here and I'll do a template literal so I'll insert uh I don't really like the

90
00:06:06.970 --> 00:06:17.260
name w I'll just do with height so with pixels and then the same thing for button that styled up top

91
00:06:18.980 --> 00:06:21.440
I'll change this to height pixels.

92
00:06:21.440 --> 00:06:23.090
Let's test it out here.

93
00:06:23.420 --> 00:06:25.970
It appears to be staying on screen so far.

94
00:06:26.090 --> 00:06:33.580
If I shrink my window down and I refresh again it still stays within that window size.

95
00:06:33.640 --> 00:06:37.010
OK so we have this part done.

96
00:06:37.010 --> 00:06:43.270
What if we add some behavior in if the user does manage to click somehow and there is a way to do it.

97
00:06:43.340 --> 00:06:47.600
If you zoom way in and you make your window super tiny you can click.

98
00:06:47.600 --> 00:06:55.010
So why don't we add a another event listener on the button add event listener when a user actually clicks

99
00:06:55.370 --> 00:06:57.110
if they can.

100
00:06:57.140 --> 00:06:59.950
What should we do to reward the user.

101
00:06:59.950 --> 00:07:06.050
It won't be much of a reward but let's do a Let's change the inner text of the button button that enter

102
00:07:06.050 --> 00:07:07.290
text equals.

103
00:07:07.490 --> 00:07:09.140
You got me.

104
00:07:09.830 --> 00:07:16.820
And then let's make the body the background color turn green so to select the body we can do document

105
00:07:16.820 --> 00:07:26.490
up body and then style property we'll do background color not color camel cased equals green and is

106
00:07:26.490 --> 00:07:31.190
there anything else I guess that's good enough we could do an alert but I'll leave it at this.

107
00:07:31.760 --> 00:07:37.730
So in order to catch it and show it to you I'll go into my CSF file and make the button a little larger

108
00:07:37.880 --> 00:07:45.350
so I'll do height is maybe 50 pixels with is 100 pixels refresh.

109
00:07:45.470 --> 00:07:52.670
And I'm also going to resize my window so if I resize this as small as I can go in Chrome and refresh

110
00:07:52.790 --> 00:08:00.240
it's still going to be tricky to click but what I'll do is zoom in make the button really large.

111
00:08:00.740 --> 00:08:01.420
OK.

112
00:08:01.540 --> 00:08:02.130
So now.

113
00:08:02.920 --> 00:08:03.170
All right.

114
00:08:03.190 --> 00:08:04.990
I should be able to click close.

115
00:08:04.990 --> 00:08:05.800
There we go.

116
00:08:05.800 --> 00:08:07.220
I got it.

117
00:08:07.330 --> 00:08:08.110
You got me.

118
00:08:08.110 --> 00:08:09.430
And it turns green.

119
00:08:09.610 --> 00:08:14.900
So I cheated I made the window way smaller and I made the the button way bigger by zooming in.

120
00:08:15.130 --> 00:08:16.560
But it works.

121
00:08:16.600 --> 00:08:18.090
So this is a silly demo.

122
00:08:18.100 --> 00:08:23.750
But the point is that we can have multiple events on one element and we have a mouse over we've got

123
00:08:23.750 --> 00:08:24.720
to click.

124
00:08:24.730 --> 00:08:25.600
It's moving.

125
00:08:25.600 --> 00:08:32.680
So inside of this on click what's on on click inside of this event handler for a mouse over we are manipulating

126
00:08:32.740 --> 00:08:33.310
the button.

127
00:08:33.310 --> 00:08:34.030
Same thing here.

128
00:08:34.030 --> 00:08:37.840
We're changing the inner text and the background color of the body.

129
00:08:37.870 --> 00:08:39.820
So this is kind of fun silly stuff.

130
00:08:39.820 --> 00:08:43.830
Next I'm going to show you how we can add event listeners to a bunch of elements.

131
00:08:43.870 --> 00:08:49.600
So how do we add an event listener to every comment on a page or every button on a page that should

132
00:08:49.600 --> 00:08:51.240
behave in a particular way.

133
00:08:51.310 --> 00:08:53.170
We don't have to do it one by one.

134
00:08:53.170 --> 00:08:54.040
So that's coming up next.
