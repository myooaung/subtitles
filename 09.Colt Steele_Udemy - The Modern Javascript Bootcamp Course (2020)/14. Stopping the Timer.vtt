WEBVTT
1
00:00:00.800 --> 00:00:06.220
There is really just one last thing we have to do to implement our timer so back inside of our browser

2
00:00:06.370 --> 00:00:11.290
I am going to change the timer down to just three seconds and it started out so I'll see that it's going

3
00:00:11.290 --> 00:00:14.260
to countdown to zero but then continue into the negatives.

4
00:00:14.260 --> 00:00:19.030
So to finish up the timer aspect of this application all we have to do is add in a check to stop the

5
00:00:19.030 --> 00:00:21.680
timer automatically whenever it hits zero.

6
00:00:21.800 --> 00:00:28.460
So I'm going to implement that inside might take method so inside of here I'm going to say if this dot

7
00:00:28.460 --> 00:00:40.160
time remaining is less than or equal to zero then let's call this not pause to stop our tick method

8
00:00:40.160 --> 00:00:44.700
from continuing to be invoked once every seconds then inside the else case.

9
00:00:44.700 --> 00:00:50.500
So if this time remaining is greater than zero then we're going to run the original let's subtract one

10
00:00:50.500 --> 00:00:51.060
seconds.

11
00:00:51.080 --> 00:00:57.640
It's going to cut that and put it into the else case like so it's going to save this I can go back over.

12
00:00:57.640 --> 00:00:58.790
We'll do a quick test.

13
00:00:58.870 --> 00:01:01.490
Second to just change this two down to three seconds.

14
00:01:01.530 --> 00:01:04.650
It's go three two one zero.

15
00:01:04.660 --> 00:01:06.560
Stop okay.

16
00:01:06.590 --> 00:01:08.480
So definite looks pretty good.

17
00:01:08.540 --> 00:01:08.780
All right.

18
00:01:08.810 --> 00:01:11.800
Well that's pretty much it for the timer aspect of this thing.

19
00:01:11.820 --> 00:01:15.530
So now you need to start to pivot our focus a little bit and figure out how we're going to get that

20
00:01:15.560 --> 00:01:17.930
animated order to display around us.

21
00:01:17.970 --> 00:01:23.000
So remember we want to have some kind of like border that's going to either fill up over time or count

22
00:01:23.000 --> 00:01:24.140
down over time.

23
00:01:24.170 --> 00:01:30.280
We want that thing to update with every tick of a second thing I want you to remember is that we still

24
00:01:30.280 --> 00:01:35.410
have to do a little bit of work on our Timer class because we want to make sure that during these very

25
00:01:35.410 --> 00:01:41.170
critical stages like whenever we are starting up the timer whenever a second counts down or whenever

26
00:01:41.170 --> 00:01:44.440
the timer ends we're going to make sure that we watch or it's me.

27
00:01:44.440 --> 00:01:47.700
You met an event or a call a callback or something like that.

28
00:01:47.800 --> 00:01:53.020
So stuff outside of our Timer class can kind of hook in to or watch for that to occur and then update

29
00:01:53.020 --> 00:01:55.660
the actual border animation.

30
00:01:55.750 --> 00:01:58.510
Now what do you want to focus on right now or just mentioned really quickly.

31
00:01:58.510 --> 00:02:04.430
Is that our current implementation of the Timer class is like really simple and pretty darn straightforward.

32
00:02:04.630 --> 00:02:08.570
So you can take a look at this thing and really very quickly understand what is going on.

33
00:02:09.320 --> 00:02:13.700
If we started to add in all that border updating code into this class right now.

34
00:02:13.790 --> 00:02:17.450
Well our Timer class would start to get really confusing really quickly.

35
00:02:17.450 --> 00:02:21.260
Much harder to understand than it currently is okay.

36
00:02:21.290 --> 00:02:25.040
So quick pause we're gonna come back the next video and start to implement the ability to watch for

37
00:02:25.040 --> 00:02:26.360
these different things occurring.
