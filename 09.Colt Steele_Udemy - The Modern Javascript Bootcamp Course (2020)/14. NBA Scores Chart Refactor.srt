1
00:00:00,210 --> 00:00:00,470
All right.

2
00:00:00,540 --> 00:00:07,350
So let's refactor this relatively ugly code and even if we're not making it easier to look at and understand

3
00:00:07,380 --> 00:00:13,680
let's make it more reusable so I can make two different tables or two different wells for each team

4
00:00:13,710 --> 00:00:19,140
with a different perspective or I could make this work with any data.

5
00:00:19,140 --> 00:00:23,820
It doesn't have to be hardcoded for warriors and I don't want to have to just duplicate this code to

6
00:00:23,820 --> 00:00:25,810
make another table or another.

7
00:00:25,950 --> 00:00:28,860
Well with a bunch of allies that we're calling a table.

8
00:00:28,860 --> 00:00:31,940
So the first thing I would do is just wrap it in a function.

9
00:00:32,340 --> 00:00:33,660
Let's define a function.

10
00:00:33,660 --> 00:00:35,960
I would probably call it like.

11
00:00:36,060 --> 00:00:39,180
Make chart like that.

12
00:00:39,180 --> 00:00:41,490
And then pass in the data.

13
00:00:41,550 --> 00:00:43,680
So I'm going to define my function.

14
00:00:43,680 --> 00:00:52,560
I'll go with const make chart equals a function that accepts game data or games and then that will be

15
00:00:52,560 --> 00:00:54,590
an arrow function doesn't have to be.

16
00:00:54,630 --> 00:01:03,160
But that's fine and I'll start by just putting all of this code inside the function and the way I'll

17
00:01:03,160 --> 00:01:10,200
write my function is I won't have it actually append the chart it will make the chart but then I can

18
00:01:10,200 --> 00:01:12,630
dependent wherever I want by calling it.

19
00:01:12,690 --> 00:01:17,700
It will return the well let's get rid of this extra counseled dot log.

20
00:01:17,700 --> 00:01:18,530
So we're making this.

21
00:01:18,590 --> 00:01:25,500
Well parents at the end will return you as a parent and that will contain all of the allies all of the

22
00:01:25,500 --> 00:01:26,390
data.

23
00:01:26,790 --> 00:01:31,290
And then I can simply append it or prepared at the end.

24
00:01:31,290 --> 00:01:38,220
So I'll make my variable I'll call this chart 1 equals make chart and then document our body dot and

25
00:01:38,220 --> 00:01:40,720
prepare and chart 1.

26
00:01:40,740 --> 00:01:42,960
So I'm just moving it into a function.

27
00:01:42,960 --> 00:01:45,800
Now I could call this twice if I wanted to.

28
00:01:45,870 --> 00:01:48,510
Assuming we don't have any errors it looks like we do.

29
00:01:48,510 --> 00:01:49,970
Data is not defined.

30
00:01:50,820 --> 00:01:52,850
I need to pass in the actual name of this.

31
00:01:52,860 --> 00:01:54,180
It's not called data.

32
00:01:54,180 --> 00:01:55,740
It's called Warriors games

33
00:02:00,130 --> 00:02:03,140
and then I do need to update my loop here.

34
00:02:03,160 --> 00:02:05,060
The parameter is called games.

35
00:02:05,140 --> 00:02:11,380
So for a game of games I don't want to hardcoded to be this particular data structure.

36
00:02:11,530 --> 00:02:16,200
We want it to be whatever is passed in and there we go.

37
00:02:16,210 --> 00:02:21,550
So now I could just make another table easily just duplicate this code.

38
00:02:21,550 --> 00:02:26,290
It will be identical but I now am able to do it twice.

39
00:02:26,290 --> 00:02:27,760
There we go.

40
00:02:27,790 --> 00:02:28,270
All right.

41
00:02:28,270 --> 00:02:34,000
So we've made our function slightly reusable but now I want to break it up a little bit.

42
00:02:34,000 --> 00:02:37,560
This is still kind of it's kind of a lot to do in here.

43
00:02:37,570 --> 00:02:45,280
So what I would probably break it into is a function to determine the interior the inner text.

44
00:02:45,280 --> 00:02:49,700
This stuff right here and I'll call that.

45
00:02:49,720 --> 00:03:01,990
Get him get content or get get text get score line maybe equals function we'll figure out what it accepts

46
00:03:01,990 --> 00:03:02,930
in just a moment.

47
00:03:03,340 --> 00:03:10,030
And I want to call it like this if I have my ally that I'm making right here I want to call game ally

48
00:03:10,510 --> 00:03:20,470
dot inner HCM l equals get score line and then I'll just pass in the entire game so I'll move this content

49
00:03:20,980 --> 00:03:26,620
that is getting the D structuring home team in a way team variables this line that is making the team

50
00:03:26,620 --> 00:03:36,670
names the away team at home team I'll get the score line the point stuff all of this right here.

51
00:03:36,670 --> 00:03:42,200
Cut it out and move it over here and we're passing in the entire game where are you.

52
00:03:42,220 --> 00:03:51,040
Right here and I'm going to d structure from that I'll get the home team and the away team which is

53
00:03:51,040 --> 00:03:57,970
what I did right here but I'll just pass the entire game and d structure it here inside of the parameter

54
00:03:57,970 --> 00:04:00,430
definition okay.

55
00:04:00,570 --> 00:04:08,860
Now we need to make sure we return something and what I want to return is this line right here we'll

56
00:04:08,860 --> 00:04:09,940
walk through it in a moment

57
00:04:12,990 --> 00:04:15,400
okay so we've made this function called Get scoreline.

58
00:04:15,410 --> 00:04:17,360
We pass in the entire game.

59
00:04:17,360 --> 00:04:19,400
It will extract or unpack.

60
00:04:19,400 --> 00:04:20,610
Home team and away team.

61
00:04:20,660 --> 00:04:25,790
And then further unpack each team a team H points eight points.

62
00:04:25,790 --> 00:04:28,160
It creates the team names string.

63
00:04:28,160 --> 00:04:35,510
It creates the score line string and it returns both of them combined into team names score line into

64
00:04:35,510 --> 00:04:41,930
one string and that one string is returned from here and I'm setting game allied at Inter H GMO game.

65
00:04:41,940 --> 00:04:44,390
Ally represents each ally.

66
00:04:44,390 --> 00:04:45,590
Each one of these.

67
00:04:45,830 --> 00:04:49,010
So I just wrote a function to generate this for me.

68
00:04:50,210 --> 00:04:56,780
And almost always whenever we move stuff around and refactor into new functions I'm sure we'll encounter

69
00:04:56,780 --> 00:04:57,660
something.

70
00:04:57,680 --> 00:04:58,670
Yep.

71
00:04:58,670 --> 00:04:59,850
What is it now.

72
00:04:59,870 --> 00:05:05,530
Each team is not defined and the line that is causing me trouble right now is right here.

73
00:05:05,690 --> 00:05:07,130
Warriors equals.

74
00:05:07,130 --> 00:05:09,000
Each team will each team is gone.

75
00:05:09,000 --> 00:05:15,070
I moved it into this function so what I would probably do is to start just come at this logic out let's

76
00:05:15,080 --> 00:05:21,680
make sure our last version worked OK so we are getting the correct text on the inside of each ally.

77
00:05:21,680 --> 00:05:27,920
Now I'll probably make a function called Get winner or winning team or something like that.

78
00:05:28,070 --> 00:05:33,150
The way that I want this to work I should be able to pass in the team that I'm making the table for.

79
00:05:33,230 --> 00:05:41,900
So Golden State but I should also be able to do it for Houston instead but I'll start with Golden State

80
00:05:42,620 --> 00:05:51,290
so I will accept a parameter called Target team and then I want to check if for each game the winning

81
00:05:51,290 --> 00:05:53,840
team was a target team.

82
00:05:53,840 --> 00:05:55,250
So if it was Golden State.

83
00:05:56,210 --> 00:06:01,760
So this stuff that I have here I'm probably going to move into a new function and I'll call that function

84
00:06:02,000 --> 00:06:11,410
and see how would I want to call it maybe is winter and then I could pass in game and Target team.

85
00:06:12,210 --> 00:06:14,330
OK so that doesn't exist.

86
00:06:14,390 --> 00:06:15,610
We'll define it.

87
00:06:15,860 --> 00:06:21,340
Concept is winner equals game target.

88
00:06:21,460 --> 00:06:22,010
Team

89
00:06:25,170 --> 00:06:31,300
Arrow function or just a regular function and we'll check in that game.

90
00:06:31,410 --> 00:06:33,370
We will do the same thing we have here.

91
00:06:33,510 --> 00:06:38,000
So I'll just move this single line for now down here.

92
00:06:38,340 --> 00:06:44,310
We'll replace Golden State with Target team and I think I'll D structure the same way right here on

93
00:06:44,310 --> 00:06:51,090
game so we get home team and away team we're unpacking those values so we're passing one game in and

94
00:06:51,090 --> 00:06:52,330
we're passing in the string.

95
00:06:52,380 --> 00:06:59,400
Golden State for example and all I want to do is find where Golden State is if it's a or home and check

96
00:06:59,430 --> 00:07:02,460
if they are winner if is winner is true.

97
00:07:03,420 --> 00:07:06,780
So I have home team away team and Target team.

98
00:07:06,780 --> 00:07:13,020
I'll just check if Home Team dots team equals Target team.

99
00:07:13,050 --> 00:07:22,610
If that's the case let's make this a variable just called Team targets and I'm going to return target

100
00:07:22,620 --> 00:07:29,510
dot is winner so this line is just to find the correct team home team or away team.

101
00:07:29,580 --> 00:07:35,730
So I could have done away team doubt team equals Target team and then just set that to away team.

102
00:07:35,730 --> 00:07:36,450
Either way it works.

103
00:07:36,450 --> 00:07:44,130
I'm just trying to identify target which object actually has warriors as the team and then I'll return

104
00:07:44,160 --> 00:07:47,160
that object's winner or is winner property.

105
00:07:47,160 --> 00:07:55,050
And then here where I called it is winner I can use that now to decide the class and I could put it

106
00:07:55,050 --> 00:07:55,660
right here.

107
00:07:55,710 --> 00:07:57,650
Just do it in one line.

108
00:07:57,750 --> 00:07:59,640
We'll see how ugly it is or isn't

109
00:08:03,540 --> 00:08:07,820
so we'll call is winner for this one game with the Target team.

110
00:08:07,830 --> 00:08:13,500
Let's say it's Golden State if that returns true will add win if it returns false will add loss is it

111
00:08:13,500 --> 00:08:14,300
going to work.

112
00:08:14,330 --> 00:08:16,120
We probably have some other bug.

113
00:08:16,350 --> 00:08:17,940
Now it seems like it worked.

114
00:08:18,180 --> 00:08:23,280
So let's try switching it around this time instead of looking for Golden State.

115
00:08:23,280 --> 00:08:24,960
Let's look for Houston

116
00:08:27,730 --> 00:08:30,100
Hey it's working so we can see.

117
00:08:30,100 --> 00:08:33,670
Houston lost the first one they won the second one and so on.

118
00:08:34,540 --> 00:08:40,600
So we've now made this actually reusable and we can have a different target team each time.

119
00:08:40,600 --> 00:08:42,460
So that's kind of all I want to do here.

120
00:08:42,460 --> 00:08:44,720
We've got our function make chart.

121
00:08:44,800 --> 00:08:51,100
It has two other functions get scoreline is winner it doesn't have them but it relies on them.

122
00:08:51,100 --> 00:08:53,080
And we can call make chart multiple times.

123
00:08:53,080 --> 00:08:54,790
It does not append anything itself.

124
00:08:54,790 --> 00:09:00,010
It returns the chart element that we then append on our own.

125
00:09:00,010 --> 00:09:02,870
I could probably refactor this here.

126
00:09:03,400 --> 00:09:09,010
I'm okay with it but we we could take advantage of is winner and just reuse that function.

127
00:09:09,010 --> 00:09:14,050
There are more ways we could refactor this but it's already been a significant chunk of time here.

128
00:09:14,200 --> 00:09:16,020
So we're not going to go too crazy on this.

129
00:09:16,030 --> 00:09:20,890
We have lots of projects coming up and you'll talk a lot about refactoring that.

130
00:09:21,190 --> 00:09:23,150
So I think this is good enough.

131
00:09:23,170 --> 00:09:29,200
The one thing I would do as we're displaying this is maybe add a title or two so we can see what's going

132
00:09:29,200 --> 00:09:30,390
on.

133
00:09:30,760 --> 00:09:34,060
Maybe in our index I'll just add two sections.

134
00:09:34,060 --> 00:09:39,160
So the first one we'll have an H2 that says warriors.

135
00:09:39,190 --> 00:09:40,540
How about Golden State Warriors

136
00:09:43,630 --> 00:09:48,070
and this section will have an idea maybe of G.S.

137
00:09:51,220 --> 00:09:56,080
and then we'll have a second section with another H to this one will be Houston Rockets.

138
00:09:56,080 --> 00:10:01,860
And the idea will be I guess I'll just do Houston Rockets G.S. and H.R..

139
00:10:02,110 --> 00:10:07,720
Now I'll append my charts into here and I'll have a heading for them which will make it a little bit

140
00:10:07,720 --> 00:10:10,060
nicer to see what's what.

141
00:10:10,060 --> 00:10:12,920
So over here I now can select those two elements.

142
00:10:12,970 --> 00:10:24,430
So I'll call this contest warriors section maybe G S section equals document dot query selector or document

143
00:10:24,430 --> 00:10:26,030
I get element by D.

144
00:10:26,230 --> 00:10:36,390
Use the hash sign for G S to get the idea of Jesus and then I'll do Houston section equals document

145
00:10:36,390 --> 00:10:37,180
that query selector.

146
00:10:37,180 --> 00:10:43,070
I don't want all I just want query selector of H R so I have those two sections.

147
00:10:43,120 --> 00:10:52,330
Now I can make my two charts so we'll go with Golden State charts and Houston Rocket chart and I'll

148
00:10:52,330 --> 00:10:59,650
change the Target team to be Houston and then instead of document dump body dot pre prepared I'll do

149
00:10:59,770 --> 00:11:08,410
G.S. section dot append child this chart the G S chart that we made with the perspective of Golden State

150
00:11:08,410 --> 00:11:10,930
Warriors and then we'll do the Houston section.

151
00:11:10,990 --> 00:11:17,520
Dot Penn child and we'll add in the chart chart and let's see if that works.

152
00:11:17,770 --> 00:11:22,930
So we make two charts one from each perspective one looking at it from Golden State's point of view.

153
00:11:22,960 --> 00:11:26,080
We append that to the Golden State section that I added.

154
00:11:26,260 --> 00:11:29,050
Then we do the same thing for the Houston Rockets.

155
00:11:29,080 --> 00:11:34,570
That perspective we passed in Houston and we use that and append that chart that we get back to our

156
00:11:34,570 --> 00:11:41,020
Houston section and I added some H 2s so that we have some Tex to look at and we know which chart is

157
00:11:41,020 --> 00:11:41,710
which.

158
00:11:41,710 --> 00:11:43,160
And we're good to go.

159
00:11:43,360 --> 00:11:44,070
So that's it.

160
00:11:44,340 --> 00:11:48,340
So a lot of work but we are dynamically creating these charts here.

161
00:11:48,340 --> 00:11:52,960
There are not tables it's just allies but we've got a couple of elements we're creating we've got bold

162
00:11:52,960 --> 00:11:56,890
tags we've got allies we're adding classes we're changing the inter HMO

163
00:12:00,020 --> 00:12:02,180
we're using a ton of the stuff we've seen so far.
