1
00:00:00,830 --> 00:00:04,460
In this section we're going to start to discuss one of my favorite topics in the world of JavaScript

2
00:00:04,700 --> 00:00:06,250
and that is testing.

3
00:00:06,260 --> 00:00:10,630
I'm really excited for this topic because it is something that's personally I find really interesting.

4
00:00:10,730 --> 00:00:15,200
And as we start to discuss testing we're not only going to learn a lot about the subject but we're also

5
00:00:15,200 --> 00:00:19,850
going to write some really interesting code along the way and also put together a project or two that

6
00:00:19,850 --> 00:00:23,450
I think that you might end up using in the future at some point in time as well.

7
00:00:23,450 --> 00:00:25,530
So with that mind let's get to it.

8
00:00:25,640 --> 00:00:31,450
The first thing we're going to discuss is what the point of testing is and what it is in general.

9
00:00:31,460 --> 00:00:36,560
So throughout this course so many times like a countless number of times throughout this course so far

10
00:00:36,830 --> 00:00:41,930
we've written out some code inside of our Ed we then save the file and went back over the browser refreshed

11
00:00:41,930 --> 00:00:45,280
the page and started to manually click around the screen.

12
00:00:45,350 --> 00:00:49,550
So the idea there was that we were doing some manual testing we were trying to make sure that our code

13
00:00:49,550 --> 00:00:53,950
worked the way we expected when we start to talk about testing and JavaScript.

14
00:00:54,030 --> 00:00:57,110
We're talking about automating that entire process.

15
00:00:57,210 --> 00:01:01,860
So we're going to end up writing code that takes a look at the code that we authored and we're going

16
00:01:01,860 --> 00:01:05,550
to make sure that that code works as expected.

17
00:01:05,550 --> 00:01:11,530
So the end goal here is that we should not have to go into our browser or run our program at the console

18
00:01:11,530 --> 00:01:17,190
for writing a note application and have to like manually click around or manually setup some stuff and

19
00:01:17,190 --> 00:01:20,490
then click around and make sure that it all works as expected.

20
00:01:20,490 --> 00:01:26,670
Instead we're going to just run one command a testing command that's going to start up a little sub

21
00:01:26,670 --> 00:01:31,880
program that we put together and that's going to make sure that all of our code works as expected.

22
00:01:31,940 --> 00:01:37,000
And so at the end of the day this ends up being a huge amount of time savings for us as developers.

23
00:01:37,050 --> 00:01:41,460
Yes of course we're going to invest a pretty good amount of time to write tests in the first place but

24
00:01:41,460 --> 00:01:45,870
then down the line any time that we need to make sure that our app still works as expected we can just

25
00:01:45,960 --> 00:01:46,740
run some tests.

26
00:01:46,730 --> 00:01:50,030
We have already written in the past and we're good to go.

27
00:01:50,040 --> 00:01:54,420
So at the end of the day testing is something that really starts to give you a lot of confidence as

28
00:01:54,420 --> 00:01:57,300
a developer for the project that you're working on.

29
00:01:57,300 --> 00:02:01,380
How many times have you worked on some piece of code and you started to write some stuff out and said

30
00:02:01,380 --> 00:02:05,530
gee you know I don't I don't know about this this feels kind of weird or wrong.

31
00:02:05,730 --> 00:02:09,780
And even if you're working on one part of a little application you might be breaking some code inside

32
00:02:09,780 --> 00:02:11,030
of another part.

33
00:02:11,040 --> 00:02:15,970
This happens all the time for thousands or millions of developers every single day.

34
00:02:16,000 --> 00:02:21,180
So part of testing is to just give you the confidence to make changes to your application and still

35
00:02:21,180 --> 00:02:26,730
say yes this thing this whole app overall still works and I don't have to go and verify every little

36
00:02:26,730 --> 00:02:30,980
feature inside of it to make sure that that is the case.

37
00:02:31,080 --> 00:02:32,900
That's going to take the high level goals of testing.

38
00:02:33,040 --> 00:02:37,840
We want to make sure that we don't have to open up our app do some manual setup and click around just

39
00:02:37,840 --> 00:02:39,820
to make sure that our code works.

40
00:02:39,820 --> 00:02:44,660
Now having said that I want to give you kind of a low down so to speak on testing.

41
00:02:44,950 --> 00:02:48,000
So these are some of my very personal thoughts about testing.

42
00:02:48,130 --> 00:02:50,500
These are not can be shared with everyone in the community.

43
00:02:50,530 --> 00:02:53,360
But hey at some point on this course I got to tell you what I think.

44
00:02:53,440 --> 00:02:55,930
So anyways some quick notes here.

45
00:02:55,930 --> 00:03:01,570
I personally believe that people spend a lot of time just setting up a testing framework like some third

46
00:03:01,570 --> 00:03:07,390
party library to help you write tests more time gets spent on that half the time than people actually

47
00:03:07,390 --> 00:03:09,520
spend writing tests.

48
00:03:09,550 --> 00:03:15,040
So in other words there are a ton of open source solutions out there for writing tests inside of a job

49
00:03:15,040 --> 00:03:16,100
script project.

50
00:03:16,300 --> 00:03:20,010
A lot of these different solutions are kind of challenging and hard to set up.

51
00:03:20,110 --> 00:03:25,390
And so I do see some people on projects spent so much time fighting the testing framework that they're

52
00:03:25,390 --> 00:03:28,560
using trying to get it to do what they want it to do.

53
00:03:28,780 --> 00:03:33,460
But at the end of the day all the different testing frameworks and libraries out there that are available

54
00:03:33,460 --> 00:03:36,500
to us with JavaScript are essentially the same.

55
00:03:36,550 --> 00:03:37,890
And I will prove that to you later.

56
00:03:37,900 --> 00:03:43,120
They're all using some very similar syntax everything eventually at the end the day looks identical.

57
00:03:43,180 --> 00:03:48,980
It's all done with the same style so rather than us spending a whole bunch of time worrying about doing

58
00:03:48,980 --> 00:03:52,800
some setup of some testing library or anything like that.

59
00:03:52,970 --> 00:03:55,120
We're going to take a slightly different approach.

60
00:03:55,160 --> 00:03:56,170
We're going to say you know what.

61
00:03:56,180 --> 00:04:00,380
We don't even have to use a testing library in order to test our code.

62
00:04:00,380 --> 00:04:04,320
Now just so you know in the section we are going to use a very popular testing library.

63
00:04:04,320 --> 00:04:09,520
Eventually I'm going to teach you like technically industry standard way of doing all this stuff but

64
00:04:09,530 --> 00:04:13,910
the same time I want to show you that we don't have to use some testing library to really effectively

65
00:04:13,910 --> 00:04:16,230
test our code OK.

66
00:04:16,250 --> 00:04:18,680
So what does this all mean between the two diagrams.

67
00:04:18,680 --> 00:04:19,870
What am I trying to say.

68
00:04:19,880 --> 00:04:21,380
Well this is what it really comes down to.

69
00:04:21,380 --> 00:04:25,750
I want to give you an outline of what we're going to accomplish inside this section.

70
00:04:25,750 --> 00:04:30,860
So in order to get a better idea of how testing works and not get bogged down in a bunch of setup kind

71
00:04:30,860 --> 00:04:37,370
of stuff or how these different frameworks work we're going to go through this series of steps we're

72
00:04:37,370 --> 00:04:40,550
going to first write a very tiny little node project.

73
00:04:40,550 --> 00:04:44,810
This is going to be essentially like one or two functions that we're going to want to test.

74
00:04:44,870 --> 00:04:51,020
We're then going to figure out how to test that code inside this tiny no node project without any outside

75
00:04:51,020 --> 00:04:55,740
testing library to recognize any outside test or any outside code whatsoever.

76
00:04:55,760 --> 00:05:00,130
We're just going to put our own little custom testing solution together.

77
00:05:00,200 --> 00:05:05,000
We're then going to come back and yes we are going to figure out how to test this stuff with a very

78
00:05:05,000 --> 00:05:08,290
official very common very popular in the community testing framework.

79
00:05:09,260 --> 00:05:13,530
Then after that we're going to take a look at a previous project that we built inside this course.

80
00:05:13,550 --> 00:05:18,140
So a project that we built inside the browser if you did not work on the previous project that we're

81
00:05:18,140 --> 00:05:19,770
going to use that is totally fine.

82
00:05:19,770 --> 00:05:22,260
I'm going to give you a quick overview on how it works.

83
00:05:22,310 --> 00:05:25,640
We're then going to test it once again using a very popular testing library.

84
00:05:25,670 --> 00:05:29,690
So again yes I to teach you you know the industry standard way of doing this.

85
00:05:29,750 --> 00:05:31,020
And then here's the fun part.

86
00:05:31,220 --> 00:05:35,150
We're then going to write our own testing framework from scratch.

87
00:05:35,150 --> 00:05:39,200
And it's going to work in like 80 percent of all projects that you might ever work on.

88
00:05:39,200 --> 00:05:44,750
So it's not going to be like a fully featured testing framework but it's going to be relatively fully

89
00:05:44,750 --> 00:05:48,740
featured enough for like the really important stuff that you really want out of a testing framework

90
00:05:49,810 --> 00:05:53,230
so I don't know if you can tell from my voice but I'm pretty excited about this.

91
00:05:53,230 --> 00:05:54,300
I think it's going to be a lot of fun.

92
00:05:54,520 --> 00:05:55,680
So let's get started.

93
00:05:55,690 --> 00:05:59,920
We're going to come back in the next video immediately start writing a very tiny little note project

94
00:06:00,250 --> 00:06:03,930
and we're going to figure out how to test it without any outside testing library.
