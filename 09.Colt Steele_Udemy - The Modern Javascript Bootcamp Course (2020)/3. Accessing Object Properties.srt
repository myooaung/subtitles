1
00:00:00,210 --> 00:00:05,440
All right so let's revisit this slide where we talked about keys being converted to strings.

2
00:00:05,550 --> 00:00:11,640
You can attempt to use a number as a key or a boolean as a key but it will be turned into a string even

3
00:00:11,640 --> 00:00:12,780
if it doesn't appear that way.

4
00:00:13,500 --> 00:00:20,240
So let's make another object we'll call this one numbers and it's going to convert a number like one

5
00:00:20,390 --> 00:00:22,590
hundred into a word.

6
00:00:22,650 --> 00:00:26,580
So the value will be one hundred and let's do one more here.

7
00:00:26,640 --> 00:00:35,300
Let's do 16 which gives us 16 the string so to access any of those out.

8
00:00:35,550 --> 00:00:40,360
We saw that this does not work numbers dot one hundred doesn't work it says unexpected number.

9
00:00:40,530 --> 00:00:46,500
But we have a second syntax to access values out of an object which looks like this.

10
00:00:46,830 --> 00:00:52,050
We use array brackets and then we put a key inside those brackets.

11
00:00:52,050 --> 00:00:57,950
So if we tried that with numbers numbers of one hundred it does work.

12
00:00:57,990 --> 00:01:02,760
And that might surprise you if you trust me when I say that all keys are converted to strings.

13
00:01:02,880 --> 00:01:09,970
But what happens here is that 100 is also converted to a string and then it's used to see if there's

14
00:01:09,990 --> 00:01:11,890
a matching key.

15
00:01:12,150 --> 00:01:19,080
So inside of the object you can kind of think of it as looking like this where we have one in quotes

16
00:01:19,680 --> 00:01:26,360
and we have 16 in quotes and then when I ask for numbers of one hundred it's going to look for 100 in

17
00:01:26,370 --> 00:01:28,430
quotes because it turns it into a string.

18
00:01:28,560 --> 00:01:34,950
And it finds it and it gives us one hundred and we can verify that this works because if I do numbers

19
00:01:34,950 --> 00:01:39,300
of the string 100 we get the same result.

20
00:01:40,050 --> 00:01:45,550
So it turns this into a string it's already a string and we get one hundred.

21
00:01:45,660 --> 00:01:46,280
OK.

22
00:01:46,440 --> 00:01:52,250
So why would you use square brackets aside from if you tried to store numbers as a key.

23
00:01:52,290 --> 00:01:54,390
Why else would you use square brackets.

24
00:01:54,390 --> 00:02:00,480
Well sometimes you have property names that may not be valid javascript identifiers now an identifier

25
00:02:00,480 --> 00:02:06,130
in Javascript is like the name of a variable here is an invalid name of a variable.

26
00:02:06,150 --> 00:02:12,530
Let my cat equal something that is not one identifier.

27
00:02:12,630 --> 00:02:15,340
JavaScript is going to give me a syntax error.

28
00:02:15,450 --> 00:02:17,100
I also can't do something like this.

29
00:02:17,130 --> 00:02:22,140
Let 76 Trombones equals song

30
00:02:25,020 --> 00:02:26,270
invalid identifier.

31
00:02:26,330 --> 00:02:31,800
Well tells me invalid or unexpected token I cannot have a variable name start with a number.

32
00:02:31,980 --> 00:02:36,570
But that doesn't mean we can't do that as a key in an object.

33
00:02:36,570 --> 00:02:43,230
What we could do if we just give up on making this a cohesive object and we just want to put some random

34
00:02:43,230 --> 00:02:51,550
stuff in there I could do this 76 Trombones as a key and the value could be great song.

35
00:02:53,190 --> 00:02:55,070
Okay I'll refresh.

36
00:02:55,230 --> 00:03:00,140
We'll look at numbers and we do have 76 Trombones in there.

37
00:03:00,240 --> 00:03:05,040
Of course I can't access it with the dot notation ignoring the fact that it starts at the number.

38
00:03:05,040 --> 00:03:09,320
It also has a space so a javascript get very confused.

39
00:03:09,600 --> 00:03:14,700
If I tried to do this it's going to look for numbers dot 76.

40
00:03:14,700 --> 00:03:16,170
Well that's an error already.

41
00:03:16,170 --> 00:03:20,580
And then it's going to just try and find something called trombones a variable called trombones.

42
00:03:20,580 --> 00:03:28,680
It doesn't work but if I instead use the square bracket notation and do 76 space trombones.

43
00:03:29,010 --> 00:03:35,370
That works fine because the key has been stored as a string even if it's an invalid identifier which

44
00:03:35,370 --> 00:03:37,800
means I can't use the dot notation.

45
00:03:38,010 --> 00:03:41,150
I can pass it in to the square brackets and it works just fine.

46
00:03:41,160 --> 00:03:46,980
So that's one reason you would use square brackets if you had something that syntactically was not valid

47
00:03:47,100 --> 00:03:48,900
to use a dot notation with.

48
00:03:49,050 --> 00:03:54,870
But here's another reason sometimes we want to use a dynamic value like a variable to access data from

49
00:03:54,870 --> 00:03:55,920
an object.

50
00:03:55,920 --> 00:03:57,450
So here's an example of that.

51
00:03:57,600 --> 00:04:05,550
I have a colored palette object which is mapping an English word like Red to a color code which in general

52
00:04:05,550 --> 00:04:07,420
are really hard to remember.

53
00:04:07,470 --> 00:04:11,550
So this would allow you to quickly say what is the color code for blue.

54
00:04:11,850 --> 00:04:17,350
And you would get palette of blue gives you this 3 0 3 3 6 B.

55
00:04:17,520 --> 00:04:18,540
How do you not remember that.

56
00:04:19,140 --> 00:04:24,690
So I've copied this over into my app J.S. file and we can do what we've already seen.

57
00:04:24,690 --> 00:04:28,110
I can use the dot notation to get blue or yellow.

58
00:04:28,590 --> 00:04:34,540
I could also use the square brackets so palette of and then I cannot do this.

59
00:04:34,620 --> 00:04:37,520
I can't just type yellow inside those square brackets like this.

60
00:04:37,710 --> 00:04:44,010
If I'd tried this it's going to look for a variable or something called the Yellow.

61
00:04:44,010 --> 00:04:48,090
It's sort of like if I just typed yellow right here there is nothing yellow.

62
00:04:48,130 --> 00:04:55,680
There is a property called yellow in the palette but I can't just type some identifier if it's not defined.

63
00:04:55,680 --> 00:05:03,900
So when we use square brackets we would use quotes so I could do palette quote blue and that works.

64
00:05:03,900 --> 00:05:09,360
But the main reason I'm showing this to you here is that we can also use a variable so if we had some

65
00:05:09,360 --> 00:05:18,600
variable let's go with mystery color and maybe this is coming from some user input this is a Web site

66
00:05:18,840 --> 00:05:25,680
and there's a color and the user is selecting a color and we're going to set mystery color to be one

67
00:05:25,680 --> 00:05:26,280
of those colors.

68
00:05:26,280 --> 00:05:29,930
Let's say they select yellow but it could also be blue it could be red.

69
00:05:30,090 --> 00:05:36,240
If I want to access the corresponding color code I can use the square bracket notation to do palette

70
00:05:36,570 --> 00:05:38,150
of mystery color.

71
00:05:38,550 --> 00:05:43,750
I will need to refresh my page to get this to load since I saved it over here.

72
00:05:43,770 --> 00:05:51,540
If I do palettes of mystery color with square brackets it works because it's going to look for the value

73
00:05:51,540 --> 00:05:57,510
of mystery color which evaluates to yellow and then plugs that into palette instead tried that with

74
00:05:57,510 --> 00:06:03,660
dot notation it would not work at all because now it's looking for a property actually called Mystery

75
00:06:03,660 --> 00:06:05,110
color and there isn't one.

76
00:06:05,130 --> 00:06:06,900
We only have red yellow and blue.

77
00:06:06,900 --> 00:06:08,580
Those are the only keys.

78
00:06:08,580 --> 00:06:10,350
So this is not going to work.

79
00:06:10,440 --> 00:06:11,340
It doesn't throw an error.

80
00:06:11,370 --> 00:06:12,920
It just tells us undefined.

81
00:06:13,110 --> 00:06:18,270
Just like in an array if you trying to access something that does not exist in that array if I tried

82
00:06:18,270 --> 00:06:21,600
to do an index of ninety nine we get undefined.

83
00:06:21,600 --> 00:06:29,040
If I try to access a property that is not in this object undefined whether I use square brackets or

84
00:06:29,040 --> 00:06:32,130
dot notation that does not exist.

85
00:06:32,190 --> 00:06:33,820
So I get undefined.

86
00:06:34,020 --> 00:06:39,450
So this is one of the main advantages of using the square bracket notation is if you have a variable

87
00:06:39,450 --> 00:06:44,060
or some dynamic value that you need to use in order to retrieve information.

88
00:06:44,130 --> 00:06:45,660
So I could even do something like this.

89
00:06:45,660 --> 00:06:49,620
Not that you should but I could do palette of red.

90
00:06:49,740 --> 00:06:57,760
Let's do actually those two B L plus you e and it's going to evaluate this code.

91
00:06:57,840 --> 00:07:04,500
It will take the string blue or blue plus you and turn it into blue and then use that to retrieve the

92
00:07:04,500 --> 00:07:05,280
correct code.

93
00:07:06,450 --> 00:07:11,070
So my general rule of thumb is to try and use the dot notation whenever possible.

94
00:07:11,070 --> 00:07:17,760
It is shorter it's nicer to look at in my opinion but when it's not possible whether it's because you

95
00:07:17,760 --> 00:07:25,370
have a key name that is not valid as a identifier like the key name that we had earlier which I can't

96
00:07:25,370 --> 00:07:28,520
even remember what it was but it was 76 Trombones.

97
00:07:28,550 --> 00:07:30,170
That's not valid.

98
00:07:30,170 --> 00:07:31,160
So we can't do that.

99
00:07:31,190 --> 00:07:36,380
So we have to use square brackets or the other big reason is when you want to use a variable or some

100
00:07:36,380 --> 00:07:39,920
dynamic value as your key you have to use square brackets.
