1
00:00:00,210 --> 00:00:05,460
Next up a very important topic how do we attach event listeners to multiple elements.

2
00:00:05,520 --> 00:00:09,230
We've seen how we can attach multiple event listeners to one element.

3
00:00:09,270 --> 00:00:15,720
We had a button and that Button had a click listener click handler and also a mouse over.

4
00:00:15,720 --> 00:00:19,870
But how do we take every button on a page and add a click event handler.

5
00:00:19,980 --> 00:00:26,370
Or how do we take every upvote arrow on Reddit and make it do something when you click upvote versus

6
00:00:26,370 --> 00:00:27,210
downvote.

7
00:00:27,240 --> 00:00:29,770
We don't attach those manually one at a time.

8
00:00:29,850 --> 00:00:31,510
At least we don't hardcoded.

9
00:00:31,680 --> 00:00:33,300
We use a loop.

10
00:00:33,300 --> 00:00:34,650
So here are some examples.

11
00:00:34,650 --> 00:00:40,770
This game we saw earlier on each one of these cards has some event functionality.

12
00:00:40,770 --> 00:00:45,120
When I click it flips I click it flips when I hover.

13
00:00:45,120 --> 00:00:50,210
That's probably done through C Ss so it's probably not a javascript event but it could be a mouse over.

14
00:00:50,580 --> 00:00:52,140
But each time I click.

15
00:00:52,170 --> 00:00:56,820
There is an event that's firing and it pertains to each one of these cards.

16
00:00:57,180 --> 00:00:58,330
And there's no way.

17
00:00:58,380 --> 00:01:03,240
I mean there's no I can't imagine that they're doing this manually where they have a variable button

18
00:01:03,240 --> 00:01:08,850
one button to button three button four and they're calling at event listener on every single button.

19
00:01:08,850 --> 00:01:10,890
That would be disastrous.

20
00:01:10,890 --> 00:01:14,070
Here's another example a simple calendar widget.

21
00:01:14,070 --> 00:01:15,040
It's not that simple.

22
00:01:15,040 --> 00:01:18,480
Actually it's a good amount of code coming from code pen.

23
00:01:18,900 --> 00:01:24,990
And every single day has some functionality I can click and stuff happens.

24
00:01:25,080 --> 00:01:26,280
That's about it.

25
00:01:26,280 --> 00:01:30,750
But we have some quick functionality on every date on this calendar.

26
00:01:30,870 --> 00:01:32,800
So let's see how we do that.

27
00:01:32,820 --> 00:01:40,350
I have my blank HCM page and rather than putting HD UML here to start with let's generate some with

28
00:01:40,380 --> 00:01:47,100
our javascript so I'll delete what we had before and I'm gonna make just some colored boxes you'll see

29
00:01:47,100 --> 00:01:51,090
why in a bit different colored boxes using an array of colors.

30
00:01:51,090 --> 00:01:56,140
We can just do the standard boring rainbow colors red orange.

31
00:01:56,160 --> 00:02:00,840
Okay I have an array of colors red orange yellow green blue purple indigo violet.

32
00:02:00,930 --> 00:02:08,340
I want to loop over all of these colors and create a div on the page with that background color so I'll

33
00:02:08,340 --> 00:02:12,940
do a for let color of colors.

34
00:02:12,990 --> 00:02:20,100
We want to create a div or document that create element div save that to a variable.

35
00:02:20,100 --> 00:02:26,640
I'll call it box and I'm going to do a couple of things first I'll actually define a class called box

36
00:02:26,640 --> 00:02:30,470
in my C assess and I'll give it a width of.

37
00:02:30,480 --> 00:02:38,370
Let's start with 200 pixels a height of 200 pixels and then let's create a container to insert all of

38
00:02:38,370 --> 00:02:41,080
our boxes in our hmo.

39
00:02:41,370 --> 00:02:48,030
So we'll create maybe a section give it an I.D. of foxes and that's where we'll attach all of these

40
00:02:48,030 --> 00:02:58,140
boxes so we'll select that document that query selector using the I.D. sign boxes we'll call this the

41
00:02:58,140 --> 00:03:01,050
container as the variable name.

42
00:03:01,680 --> 00:03:03,540
We want to make a box.

43
00:03:03,540 --> 00:03:14,370
We also want to assign that box dot style dots background color camel cased to be color from the loop.

44
00:03:14,370 --> 00:03:19,980
So the first one will be an empty div with a background of red and then orange and so on and we'll append

45
00:03:19,980 --> 00:03:21,440
them to the container.

46
00:03:21,480 --> 00:03:30,990
So container dots append child or just regular append if you don't care about i.e. a pen child of box

47
00:03:32,970 --> 00:03:35,060
and I also have that box class.

48
00:03:35,110 --> 00:03:37,620
But let's let's see if it's showing up at all right now.

49
00:03:37,980 --> 00:03:45,570
If we inspect we should see that we do have divs in there but they have no content and they don't have

50
00:03:45,570 --> 00:03:49,340
a height or width because our class is not being used.

51
00:03:49,470 --> 00:03:58,000
So let's add that class box dot class list dot add box refresh.

52
00:03:58,160 --> 00:04:01,620
Hey there's our boxes and weighs them down again.

53
00:04:01,660 --> 00:04:04,490
Okay so we've got these different boxes.

54
00:04:04,720 --> 00:04:13,180
I'm quickly going to style them so in my C assess what I'm going to do is give the boxes I.D. which

55
00:04:13,180 --> 00:04:19,580
is our container a display of flex if you're not familiar with Flex box.

56
00:04:19,610 --> 00:04:22,560
Uh well we don't have time to talk about that in this video.

57
00:04:22,600 --> 00:04:28,200
It's a relatively easy way of positioning elements on the page and divvying up space.

58
00:04:28,300 --> 00:04:34,310
How do you justify content center a line items center.

59
00:04:34,360 --> 00:04:35,780
Let's see if that works for us.

60
00:04:35,830 --> 00:04:37,680
Okay awesome.

61
00:04:37,930 --> 00:04:39,450
So we have this going now.

62
00:04:39,520 --> 00:04:43,920
We have our boxes on the page now for the main event.

63
00:04:43,990 --> 00:04:46,150
How do we add a click listener to each one.

64
00:04:47,230 --> 00:04:52,810
Well the most obvious answer that you probably came up with is to use a loop and that's the right way

65
00:04:52,810 --> 00:04:53,610
of doing it.

66
00:04:53,650 --> 00:04:58,960
So we just loop over all those boxes we add an event to earn an event listener to each one.

67
00:04:59,140 --> 00:05:01,520
But if we want to do something unique for each box.

68
00:05:01,570 --> 00:05:06,790
If I wanted to print out the color that we're clicking on we have to add a little more code in but let's

69
00:05:06,790 --> 00:05:10,370
start by adding in an event listener for each box.

70
00:05:10,690 --> 00:05:17,290
So we could do a separate loop we could select all the boxes and using query selector all loop over

71
00:05:17,290 --> 00:05:25,030
each box into box dot add event listener or we could just do it right here as we append it or after

72
00:05:25,030 --> 00:05:27,170
we appended it doesn't matter.

73
00:05:27,280 --> 00:05:35,710
I could do box dots add event listener remember this box variable is a new div each time through so

74
00:05:35,710 --> 00:05:41,550
it will reference or it refers to the red box you see here and then next time around it's the orange

75
00:05:41,560 --> 00:05:49,720
one then all the way down to the violet one so box that add event listener for click or add in our function

76
00:05:50,080 --> 00:05:51,000
here.

77
00:05:51,460 --> 00:05:56,510
And why don't we just cancel that log clicked a box.

78
00:05:56,640 --> 00:06:03,150
So this is simple enough we should get a console dot log click the box clicked the box I'm clicking

79
00:06:03,390 --> 00:06:04,800
if you can't hear that.

80
00:06:05,040 --> 00:06:09,780
But what if I want to print out these specific color that was clicked or do something with that color

81
00:06:10,020 --> 00:06:13,030
maybe change the background of the entire body.

82
00:06:13,110 --> 00:06:16,760
It's actually not that bad in this loop we have box.

83
00:06:16,980 --> 00:06:27,880
I could just access box I could console dialog box dot and then style dot background color and print

84
00:06:27,880 --> 00:06:30,770
that out and let's refresh the page.

85
00:06:30,790 --> 00:06:35,620
Red orange yellow green blue purple indigo violet Indigo.

86
00:06:35,920 --> 00:06:38,290
I mean violet violet violet Indigo.

87
00:06:38,710 --> 00:06:40,850
Anyway distracted here.

88
00:06:40,960 --> 00:06:42,120
This works.

89
00:06:42,220 --> 00:06:46,570
We have access to the variable box because we're inside the loop still.

90
00:06:46,840 --> 00:06:49,240
But here's where it gets a little trickier.

91
00:06:49,270 --> 00:06:54,790
Let's say that my code is getting really long and I want to break it into separate functions.

92
00:06:54,790 --> 00:06:59,770
I don't want to have all of this all my logic contained in one loop.

93
00:06:59,800 --> 00:07:00,760
I want to break it out.

94
00:07:00,760 --> 00:07:04,510
Maybe this function here is 50 lines.

95
00:07:04,510 --> 00:07:06,030
How could I make that work.

96
00:07:06,100 --> 00:07:10,610
Well if I make a separate function let's call this function.

97
00:07:11,380 --> 00:07:13,600
Let's do function expression.

98
00:07:13,600 --> 00:07:20,260
We'll go with print color equals a function.

99
00:07:20,260 --> 00:07:27,520
And in here what I want to do is print out the background color and I'll update my at event listener

100
00:07:28,930 --> 00:07:32,930
to call print color like this.

101
00:07:33,280 --> 00:07:39,930
So box that at event listener of click when there's a click on that box print color.

102
00:07:39,940 --> 00:07:44,080
Right now I don't have a way to access box at all.

103
00:07:44,080 --> 00:07:48,970
I could pass it in but I can't do that here because the function will execute right away.

104
00:07:49,090 --> 00:07:57,940
If I were to pass box in so I guess I could rewrite this as a function like this and then call print

105
00:07:57,970 --> 00:08:01,510
color and then pass it in box like this.

106
00:08:01,510 --> 00:08:04,140
Let's see if that works instead of print color.

107
00:08:04,390 --> 00:08:16,290
We'll accept a box as a parameter and constant dialog box dot style dot background again so I have this

108
00:08:16,290 --> 00:08:20,860
function that runs and all it does is it calls print color up here.

109
00:08:20,880 --> 00:08:22,230
Imagine we have a lot more code.

110
00:08:23,010 --> 00:08:23,360
Okay.

111
00:08:23,400 --> 00:08:24,650
So this does work.

112
00:08:24,690 --> 00:08:31,590
We can pass that argument around of box but there's another option which doesn't involve having to add

113
00:08:31,620 --> 00:08:33,850
a function in here.

114
00:08:34,380 --> 00:08:43,320
I can simply pass print color and I'll have to change it because right now box will be completely undefined.

115
00:08:43,320 --> 00:08:48,960
But what is the magical keyword I can use to reference the item that has been clicked it.

116
00:08:48,990 --> 00:08:51,290
Is this the keyword this.

117
00:08:52,500 --> 00:08:59,030
So if we console dot log this in print color we don't need to pass in a box.

118
00:08:59,040 --> 00:09:03,200
Let's see what happens now red orange yellow.

119
00:09:03,420 --> 00:09:07,350
This is referring to the individual div that was clicked on.

120
00:09:07,380 --> 00:09:13,350
Remember that this instead of a method which is added on to an object.

121
00:09:13,470 --> 00:09:18,300
This will refer to that object if you skipped over the section on this.

122
00:09:18,360 --> 00:09:20,320
I highly recommend you go back and check it out.

123
00:09:20,340 --> 00:09:23,910
It's not the sexiest thing ever in javascript but it is important.

124
00:09:23,970 --> 00:09:30,600
We also could rewrite this to do something else instead of printing out the background color let's either

125
00:09:30,600 --> 00:09:38,490
change the background color of the body or maybe we'll add an H1 in up top each one say pick a color

126
00:09:39,270 --> 00:09:43,730
and we'll change the color of our H1 depending on what you click on.

127
00:09:43,890 --> 00:09:50,090
And I'm going to give my H1 a text a line of center not text decoration.

128
00:09:50,100 --> 00:09:59,310
So it's aligned in the middle and then in my javascript I'll select that H1 so const H1 equals document

129
00:09:59,310 --> 00:10:09,630
dot query selector H1 and I'll put it in the function up top and instead of calling this print color

130
00:10:09,900 --> 00:10:18,620
we'll go with change color we'll call change color down here and then what we want to do is update each

131
00:10:18,620 --> 00:10:25,950
one dot style dot color to be this dot style dot background color.

132
00:10:26,130 --> 00:10:31,230
So whichever div we clicked on we want to take the background color of that which is what we're doing

133
00:10:31,230 --> 00:10:36,400
right here get that value and set the H1 which isn't on the page right now.

134
00:10:36,420 --> 00:10:44,040
There it is set the H1 to be that color now change color is not defined let's see change color extra

135
00:10:44,040 --> 00:10:46,140
E There we go.

136
00:10:46,360 --> 00:10:47,870
Let's see if it works.

137
00:10:48,040 --> 00:10:52,830
All right we've got red orange yellow green blue purple indigo violet.

138
00:10:53,110 --> 00:10:53,980
Awesome.

139
00:10:53,980 --> 00:10:56,650
So we've got this nice little off color picker.

140
00:10:56,650 --> 00:11:03,250
Very simple but the point that I want to make here is that we can add event listeners to multiple elements

141
00:11:03,490 --> 00:11:05,040
instead of a loop.

142
00:11:05,080 --> 00:11:11,110
I'm not saying that you should use this pattern here where you always need to use the keyword this but

143
00:11:11,110 --> 00:11:14,720
generally inside of an event handler like we have here.

144
00:11:14,800 --> 00:11:20,890
This will refer to the individual element that the event listener has been added to.

145
00:11:20,920 --> 00:11:27,770
So if I instead had instead of box that at event listener if I instead had document dump body out of

146
00:11:27,850 --> 00:11:33,670
ADD event listener or I had a button this will refer to whatever I'm attaching that event listener to

147
00:11:34,270 --> 00:11:41,680
so let's add one to our H one very quickly we have our H one I'll just select it up here now and do

148
00:11:41,680 --> 00:11:51,640
H1 dot add event listener and we'll listen for maybe a mouse over no capital Oh that always gets me

149
00:11:52,420 --> 00:12:01,870
and we'll add in our function why don't we just cancel that log this dot in our text and we'll see what

150
00:12:01,870 --> 00:12:08,370
happens here and now when I mouse over that H1 we're getting pick a color this is referring to the H

151
00:12:08,370 --> 00:12:15,220
one that the add event listener ran on her that we attached it to so I'll get rid of that we don't need

152
00:12:15,220 --> 00:12:21,830
to add that mouse effect and we'll leave it at this no pun intended but already.

153
00:12:21,850 --> 00:12:27,550
So we saw that we can add multiple click listeners to one click listener to multiple elements they are

154
00:12:27,550 --> 00:12:33,820
separate out event listener calls it's not like we have one event that we're listening for We're attaching

155
00:12:33,880 --> 00:12:39,550
eight or nine or however many different colors we have we're attaching that many event listeners it's

156
00:12:39,550 --> 00:12:43,680
not like we just have one overarching event listener we have multiple.

157
00:12:43,920 --> 00:12:44,260
All right.
