1
00:00:00,270 --> 00:00:03,880
All right so let's try building something with what we've learned so far.

2
00:00:04,020 --> 00:00:09,450
We still haven't talked about events and making things interactive responding to input clicks drops

3
00:00:09,450 --> 00:00:10,840
drags all that stuff.

4
00:00:10,950 --> 00:00:15,750
But we do have the ability to create elements to manipulate existing elements.

5
00:00:15,750 --> 00:00:17,400
And we're going to take advantage of that.

6
00:00:17,400 --> 00:00:22,500
So I've included a starter file if you want to follow along so you can have the initial state.

7
00:00:22,500 --> 00:00:29,370
What we're going to build is an NBA score table like what we have here based off of whatever input data

8
00:00:29,370 --> 00:00:29,700
we get.

9
00:00:29,700 --> 00:00:35,490
We could imagine it's coming from an API but I've actually hardcoded some game data where we have different

10
00:00:35,490 --> 00:00:36,510
games.

11
00:00:36,570 --> 00:00:37,620
It's an array.

12
00:00:37,620 --> 00:00:39,810
We have an away team and a home team.

13
00:00:39,810 --> 00:00:41,720
Each team has the team name.

14
00:00:41,730 --> 00:00:46,260
Actually it's the city not the whole team points and is winner.

15
00:00:46,260 --> 00:00:53,460
And what I want to do is create a table like this dynamically so not hardcoded in our each demo but

16
00:00:53,460 --> 00:00:59,040
imagine we had 100 different games or we had 100 different there's not 100 teams but a bunch of different

17
00:00:59,040 --> 00:00:59,750
teams.

18
00:00:59,880 --> 00:01:05,090
We want to iterate over this data and create a table and we don't know how long it will be.

19
00:01:05,100 --> 00:01:08,980
We don't know which cells are rich which rows will be green versus red.

20
00:01:09,000 --> 00:01:10,890
We don't know what the values will be.

21
00:01:10,950 --> 00:01:16,020
So we'll create dynamic elements and append them to the page using the dom.

22
00:01:16,020 --> 00:01:17,590
So I live in the Bay Area.

23
00:01:17,610 --> 00:01:19,500
We'll be doing Warriors games.

24
00:01:19,560 --> 00:01:22,490
And I have named this array Warriors games.

25
00:01:22,620 --> 00:01:28,290
But this should work with whatever data you pass in and eventually we'll see if we could connect something

26
00:01:28,290 --> 00:01:35,490
like this to an API and get data coming from an API somewhere at NBA stats or a Premier League or La

27
00:01:35,490 --> 00:01:41,520
Liga or whatever the sports league is we can get information and do something with it and make it visual

28
00:01:41,820 --> 00:01:42,960
show something on the dom.

29
00:01:43,590 --> 00:01:49,300
So what we're going to do to start is ignore the table tables are really annoying and each.

30
00:01:49,320 --> 00:01:51,570
They're my least favorite things to create.

31
00:01:51,570 --> 00:01:57,900
I mean if you inspect the markup here if you haven't made tables before you can see just how dense this

32
00:01:57,900 --> 00:02:06,630
stuff is to make a single table we've got so many different nested rows and T.D. and T bars and teaches

33
00:02:06,630 --> 00:02:10,400
and tea bodies and tables and table headers.

34
00:02:10,440 --> 00:02:15,690
It's just uh it's a little overwhelming to have to create all of those elements with JavaScript and

35
00:02:15,690 --> 00:02:16,680
append them.

36
00:02:16,740 --> 00:02:19,340
I think it would bog down the important stuff here.

37
00:02:19,680 --> 00:02:22,400
So we're gonna start with just a simple list.

38
00:02:22,440 --> 00:02:23,890
Each game will be a list.

39
00:02:24,000 --> 00:02:25,490
It will have the score.

40
00:02:25,500 --> 00:02:26,900
It will have the home team.

41
00:02:26,970 --> 00:02:32,920
So we'll start by making a simple list something like this where we'll have let's do it in our HDMI

42
00:02:32,970 --> 00:02:39,870
file we'll have a UL an ally for each game and the home team will come second.

43
00:02:39,870 --> 00:02:45,480
So the away team let's say it's a Houston at Golden State.

44
00:02:45,960 --> 00:02:51,450
So we want to display it in the order where we have a wait team at sign home team.

45
00:02:51,450 --> 00:02:53,190
So that will be dynamic.

46
00:02:53,190 --> 00:02:55,030
We also want to have the score.

47
00:02:55,150 --> 00:02:58,050
We have the away team score and then the home team.

48
00:02:58,080 --> 00:03:02,190
So let's say Houston won this game one hundred to ninety four.

49
00:03:02,190 --> 00:03:09,770
I want to bold this element here of the winning score so one hundred beats ninety four.

50
00:03:09,810 --> 00:03:13,880
So dynamically figure out which team won or which number is higher.

51
00:03:13,890 --> 00:03:15,190
Give it a bold tag.

52
00:03:15,390 --> 00:03:18,150
And if we look at this right now it's not very impressive.

53
00:03:18,300 --> 00:03:24,420
But then we also want to give a green or red color to this element depending on which perspective we're

54
00:03:24,420 --> 00:03:25,570
looking at it from.

55
00:03:25,590 --> 00:03:27,510
And like I said I live in the Bay Area.

56
00:03:27,570 --> 00:03:30,660
So we will be looking at this as Warriors fans.

57
00:03:30,660 --> 00:03:32,730
So this element would be red.

58
00:03:32,820 --> 00:03:36,480
It's a loss for Golden State just like we have here.

59
00:03:36,570 --> 00:03:39,460
So we have green on the games where Golden State won.

60
00:03:39,630 --> 00:03:45,660
But if we went to the table the corresponding table for the Houston Rockets it's down here.

61
00:03:45,840 --> 00:03:48,180
We have red for that very same game.

62
00:03:48,270 --> 00:03:50,010
So different perspective.

63
00:03:50,010 --> 00:03:55,910
Same data and we'll start with the perspective of warriors or the Warriors already.

64
00:03:55,950 --> 00:03:57,600
So I'm going to delete this.

65
00:03:57,840 --> 00:04:03,230
I think I'm going to start by adding in a well that I can append my data to.

66
00:04:03,270 --> 00:04:04,790
We could also do this dynamically.

67
00:04:04,980 --> 00:04:06,580
Maybe that's a better way of doing it.

68
00:04:06,600 --> 00:04:09,220
Fine we'll do it from our app J.S..

69
00:04:09,540 --> 00:04:11,310
We have our starter data.

70
00:04:11,310 --> 00:04:17,520
A simple array with a couple of objects each object represents a game away team and home team.

71
00:04:17,520 --> 00:04:22,100
And then each of those team objects has team points and is winner.

72
00:04:22,260 --> 00:04:23,970
So why don't we start with something simple.

73
00:04:24,120 --> 00:04:29,380
Let's get each team to print out or something like that as an ally on the page.

74
00:04:29,400 --> 00:04:31,820
The first thing I will do is make a new element.

75
00:04:31,920 --> 00:04:33,800
So I'll make the container.

76
00:04:33,810 --> 00:04:42,290
We can call this or maybe just parent you all parents equals document that create elements of you all.

77
00:04:42,330 --> 00:04:45,770
So that is where we will append a bunch of allies to.

78
00:04:45,990 --> 00:04:52,880
And then what we want to do is iterate over all of these games so we can do that using a four of or

79
00:04:52,890 --> 00:04:54,570
a for loop or for each.

80
00:04:54,600 --> 00:05:00,050
But I'll do four let game of and I called my data Warriors game.

81
00:05:00,390 --> 00:05:01,700
No Warrior Games.

82
00:05:01,720 --> 00:05:05,610
What do they call it or winners games.

83
00:05:05,890 --> 00:05:06,470
All right.

84
00:05:07,300 --> 00:05:12,510
So for each game we want to extract home game or home team in a team.

85
00:05:12,670 --> 00:05:15,520
They all have a home team and an away team.

86
00:05:15,580 --> 00:05:24,880
So let's grab that from the object using our favorite D structuring concept home team comma away team

87
00:05:25,990 --> 00:05:27,830
equals Game.

88
00:05:27,880 --> 00:05:33,520
Game is each individual object for each element in the array called Warriors games.

89
00:05:34,210 --> 00:05:41,080
And we could start simple we'll console that log home team dot let's actually let's do away team.

90
00:05:41,080 --> 00:05:47,790
So away team DOT team which is the name of the team or the city actually or in the case of Golden State.

91
00:05:47,800 --> 00:05:48,720
It's not even a city.

92
00:05:48,730 --> 00:05:56,190
There is no as far as I know there's no Golden State City away team that team and then home team DOT

93
00:05:56,200 --> 00:05:59,520
team let's run it.

94
00:05:59,690 --> 00:06:02,000
And in our console there we go.

95
00:06:02,090 --> 00:06:08,450
So we have Golden State at Houston Golden State Houston twice and then Houston at Golden State Houston

96
00:06:08,450 --> 00:06:09,590
at Golden State.

97
00:06:09,590 --> 00:06:11,730
And then after the first four games.

98
00:06:11,750 --> 00:06:14,670
So this is the standard playoffs as far as I know in the NBA.

99
00:06:14,810 --> 00:06:15,800
You have two games.

100
00:06:15,830 --> 00:06:16,870
Home or away.

101
00:06:16,880 --> 00:06:18,980
And then you flip for two games and then you alternate.

102
00:06:20,000 --> 00:06:21,360
So that's accurate.

103
00:06:21,410 --> 00:06:24,990
We're printing out the correct away team and home team.

104
00:06:25,070 --> 00:06:26,960
Now let's start by making an ally.

105
00:06:27,590 --> 00:06:29,730
So we want an ally for each game.

106
00:06:29,930 --> 00:06:35,120
If that's what we're gonna do instead of a table at least to begin with so we'll make our new ally.

107
00:06:35,360 --> 00:06:36,510
We'll call this game.

108
00:06:36,560 --> 00:06:40,960
Ally equals documents that create elements.

109
00:06:41,160 --> 00:06:41,710
Ally.

110
00:06:41,750 --> 00:06:42,350
All right.

111
00:06:42,440 --> 00:06:44,670
So we have that done next.

112
00:06:44,750 --> 00:06:48,030
Let's go ahead and show some of this information.

113
00:06:48,050 --> 00:06:51,300
Let's get the first part of the team names showing up.

114
00:06:51,440 --> 00:06:56,770
So I'm gonna have Golden State at Houston.

115
00:06:57,080 --> 00:07:00,640
If Houston is the home team Golden State is the away team.

116
00:07:00,740 --> 00:07:08,420
So I want to take this format away team at home team and add that as the inter text on my ally.

117
00:07:08,510 --> 00:07:09,660
We'll start there.

118
00:07:09,680 --> 00:07:16,490
So game ally Scott enter text equals and I'll do a template literal.

119
00:07:16,880 --> 00:07:24,720
Display the away team DOT team and then at sign and then another dollar sign.

120
00:07:24,800 --> 00:07:28,280
Curly braces for home team DOT team.

121
00:07:29,000 --> 00:07:34,730
So that should make me the ally and give me some inner text on the fly but nothing will show up because

122
00:07:34,730 --> 00:07:36,130
we're not appending it.

123
00:07:36,230 --> 00:07:39,080
And what does it not like my 97 0.

124
00:07:39,170 --> 00:07:41,890
Obviously not valid javascript there.

125
00:07:42,200 --> 00:07:43,520
So we won't see anything.

126
00:07:43,580 --> 00:07:50,000
We need to append each ally to the well we've made are you well we'll append to that you will.

127
00:07:50,000 --> 00:07:52,820
And we have a couple of choices we could do a pen child.

128
00:07:52,820 --> 00:07:55,040
We could also use the newer append method.

129
00:07:55,310 --> 00:08:01,160
But in this loop for each ally game Ally I'm going to call you L. parent.

130
00:08:01,160 --> 00:08:08,270
So this is the empty Well I've created I'm now appending one ally and then next time through will append

131
00:08:08,300 --> 00:08:12,640
a second ally and it will have some data about the away team and the home team.

132
00:08:13,370 --> 00:08:16,610
So you add parent dots append child.

133
00:08:16,610 --> 00:08:20,220
I'll do a pen child just in case some of you are using Internet Explorer.

134
00:08:20,330 --> 00:08:26,710
Even though I prefer append and will append the game ally now is this enough.

135
00:08:26,720 --> 00:08:28,040
Will we see anything.

136
00:08:28,040 --> 00:08:30,090
No we will not because the.

137
00:08:30,200 --> 00:08:34,040
Well we created is still not associated with the page at all.

138
00:08:34,040 --> 00:08:39,170
It exists in JavaScript it's an object it has a bunch of children but we're never actually appending

139
00:08:39,170 --> 00:08:40,850
it to the page.

140
00:08:40,850 --> 00:08:45,830
So if I just wanted to show up in the body we could append it to the body.

141
00:08:45,830 --> 00:08:50,390
That's fun where we could present it to the body to make it a little nicer.

142
00:08:50,450 --> 00:08:52,280
I guess that's nothing wrong with that.

143
00:08:52,310 --> 00:08:53,730
Put it above our script.

144
00:08:53,870 --> 00:08:57,490
So I will select the body which is easy.

145
00:08:57,500 --> 00:08:58,720
Document dump body.

146
00:08:58,850 --> 00:09:04,860
I don't need to use query selector although I could query selector of body document dump body dot prepare

147
00:09:04,870 --> 00:09:13,060
and if you are in i.e. you can just do a pen child but pre pens you l parent.

148
00:09:13,690 --> 00:09:15,140
Let's see what we get here.

149
00:09:16,100 --> 00:09:17,380
Hey there we go.

150
00:09:17,450 --> 00:09:19,400
Golden State at Houston Golden State.

151
00:09:19,400 --> 00:09:19,950
Houston.

152
00:09:20,030 --> 00:09:20,970
Houston at Golden State.

153
00:09:20,970 --> 00:09:22,280
Bob Bob Barr.

154
00:09:22,280 --> 00:09:29,570
We now have what is this 7 Yes 7 allies appended to you Well appended to the body and none of that is

155
00:09:29,570 --> 00:09:32,940
there when the page loads we're constructing it from scratch.

156
00:09:33,200 --> 00:09:39,410
All right so next let's work on the scores what we want to do is first we can just display the home

157
00:09:39,410 --> 00:09:47,210
team and the away team score I'll do the same format so a away team dot points dash home team dot points

158
00:09:47,930 --> 00:09:58,010
and I'll start by making it its own string so I'll just call this concept score line equals and we want

159
00:09:58,310 --> 00:10:04,460
to do this in its string template literal just to make it easier we'll do away team dot and then we

160
00:10:04,460 --> 00:10:05,270
have points

161
00:10:09,280 --> 00:10:17,090
and then I'll just do the dash and then home team dot points as well it's called points yes it is.

162
00:10:17,470 --> 00:10:22,630
All right so we have a string now and we could console dot log that string to see the score line each

163
00:10:22,630 --> 00:10:28,120
time through it won't be showing up on the actual page but here we go.

164
00:10:28,120 --> 00:10:29,050
That looks accurate.

165
00:10:29,860 --> 00:10:33,430
So what we want to do next is get that in the ally as well.

166
00:10:33,760 --> 00:10:36,700
And we have a bunch of different options for how we actually approach this.

167
00:10:37,240 --> 00:10:42,880
I think what will probably be easiest is if we just make two strings and then set the inner text at

168
00:10:42,880 --> 00:10:44,790
once with those two strings.

169
00:10:44,950 --> 00:10:49,940
So I'll make a new variable here and I'll call this one concept.

170
00:10:50,290 --> 00:10:57,290
What do we want to call this team names maybe and then score line and then we can set game ally dot

171
00:10:57,850 --> 00:10:59,340
enter text.

172
00:10:59,480 --> 00:11:01,790
Or you could do text content equals.

173
00:11:01,940 --> 00:11:04,820
And then I'll do another string template literal.

174
00:11:04,820 --> 00:11:09,360
And add in my team names with a space.

175
00:11:09,410 --> 00:11:12,830
And then again with the score line.

176
00:11:12,830 --> 00:11:17,990
So instead of doing these together in one line it's kind of ugly to see all of those string template

177
00:11:17,990 --> 00:11:20,540
literal brackets and dollar signs.

178
00:11:20,540 --> 00:11:25,400
So I'll break it up into two variables with names and then add those in.

179
00:11:25,500 --> 00:11:26,240
Okay.

180
00:11:26,510 --> 00:11:27,590
Is it gonna work.

181
00:11:27,830 --> 00:11:28,700
All right.

182
00:11:28,700 --> 00:11:32,390
Looks like it's working so we can double check the first game.

183
00:11:32,390 --> 00:11:34,280
Golden State had won 19.

184
00:11:34,280 --> 00:11:35,990
Houston had 1 0 6.

185
00:11:35,990 --> 00:11:41,270
Let's double check up top 1 19 for Golden State and Houston 1 0 6.

186
00:11:41,270 --> 00:11:45,860
Golden State was the away team Houston was the home team and we were displaying it correctly.

187
00:11:45,860 --> 00:11:49,920
Golden State away at Houston at home.

188
00:11:50,430 --> 00:11:53,990
Okay next we have a couple of choices.

189
00:11:53,990 --> 00:12:01,310
Why don't we start by selecting the score that has won the winning score and bolding it.

190
00:12:01,310 --> 00:12:02,760
Which do they do that.

191
00:12:02,830 --> 00:12:04,790
And they don't even do it on Wikipedia.

192
00:12:04,820 --> 00:12:10,690
We're adding in functionality so we'll show the winning score with a bold tag around it.

193
00:12:10,880 --> 00:12:13,120
So we're gonna have to calculate who won.

194
00:12:13,760 --> 00:12:15,000
And that part's pretty easy.

195
00:12:15,020 --> 00:12:19,560
We'll just compare the two away teamed up points and home teamed up points.

196
00:12:19,610 --> 00:12:22,330
Why don't we start by cleaning this up a tad.

197
00:12:22,370 --> 00:12:27,320
We'll need access to a way teamed up points and home teamed up points for a couple of different lines

198
00:12:27,740 --> 00:12:33,320
because we need to calculate the winner and then display the points as well and figure out which class

199
00:12:33,320 --> 00:12:33,890
to apply.

200
00:12:34,190 --> 00:12:39,600
So I'm going to d structure team and points out of each object.

201
00:12:39,660 --> 00:12:42,930
Out of a team and out of home team.

202
00:12:42,950 --> 00:12:50,720
Now this is kind of annoying because to use these structuring I would do team and points equals home

203
00:12:50,720 --> 00:12:52,880
team and that works fine.

204
00:12:52,880 --> 00:13:00,080
But now I have the exact same thing for a weight team and that means I'll have team and points and then

205
00:13:00,110 --> 00:13:05,930
I'm creating another variable called Team and points so we can use this syntax we saw earlier with D

206
00:13:05,940 --> 00:13:12,570
structuring if we want to where we grab a particular value out of an object and we give it a new name.

207
00:13:12,800 --> 00:13:19,340
So why don't we call this one home team with an H and H points.

208
00:13:19,850 --> 00:13:27,110
So each team in H points and then away team and away points

209
00:13:30,560 --> 00:13:30,940
okay.

210
00:13:32,370 --> 00:13:43,660
And then we'll use that instead of away team doubt team we'll just do a team each team and then a points

211
00:13:45,580 --> 00:13:47,530
and age points.

212
00:13:47,530 --> 00:13:50,770
And nothing should have changed if everything went well.

213
00:13:50,770 --> 00:13:54,180
We get the exact same output but now we have these variables.

214
00:13:54,190 --> 00:14:00,400
I can reuse instead of having to access away teams out team away team that points over and over.

215
00:14:00,400 --> 00:14:05,890
Not a huge change and also the way my V.S. code is formatting this it makes it look like a lot more

216
00:14:05,890 --> 00:14:08,080
work than it actually is.

217
00:14:08,170 --> 00:14:14,410
It's only one line really so we're going to come down here now and compare the two points so we'll have

218
00:14:15,200 --> 00:14:20,070
a way points greater than home points.

219
00:14:20,410 --> 00:14:21,880
Or we could do the other way around.

220
00:14:21,940 --> 00:14:27,330
But if a waypoint is greater than home points then we know that a way team has won right.

221
00:14:27,760 --> 00:14:30,420
So we'll do an if statement here.

222
00:14:30,850 --> 00:14:37,290
If that's the case and if a waypoints does beat out home points then what we want to do is on our score

223
00:14:37,290 --> 00:14:37,810
line.

224
00:14:37,870 --> 00:14:45,330
We want a bold tag around eight points and we can just add that like this not right here but we can't

225
00:14:45,330 --> 00:14:45,580
do it.

226
00:14:45,580 --> 00:14:51,610
We can wrap away points in a bold tag so the simplest way to do this is if a waypoints is greater than

227
00:14:51,610 --> 00:14:52,380
home points.

228
00:14:52,390 --> 00:14:58,760
We'll take scoreline and just put it here on the same line or we can do it on multiple lines.

229
00:14:58,810 --> 00:15:03,220
Doesn't matter and we'll add the bold tag around the first part.

230
00:15:03,220 --> 00:15:10,200
The away points right here so we'll put our bold tag the closing bold tag and then we could have an.

231
00:15:10,200 --> 00:15:19,420
Else we'll do the opposite concept score line equals and we'll move the bold tag over here around H

232
00:15:19,450 --> 00:15:24,040
points and that should work.

233
00:15:24,130 --> 00:15:29,010
We'll talk about refactoring this in the next video we'll see that we could move this to a function.

234
00:15:29,110 --> 00:15:31,240
We don't have to declare contour score line.

235
00:15:31,270 --> 00:15:36,220
We're not declaring it twice only one of these ever runs but we don't need to do it this way.

236
00:15:36,250 --> 00:15:37,490
There are other options.

237
00:15:37,500 --> 00:15:40,060
There is one problem with the way I've written this.

238
00:15:40,090 --> 00:15:42,750
See if you can figure it out without running it.

239
00:15:42,910 --> 00:15:46,990
It doesn't have to do with the actual data or the logic.

240
00:15:46,990 --> 00:15:54,100
It has to do with scope we're using const and we remember that constant but are both blocks scoped.

241
00:15:54,130 --> 00:16:00,400
So if I define score line in here it's scoped to this block so I can't use it down here.

242
00:16:00,400 --> 00:16:07,750
So to fix that we can't just say const scoreline like this and not define it and then update it.

243
00:16:08,050 --> 00:16:13,960
And the reason for that is made very clear you cannot initialize a concept or you can't declare a concept

244
00:16:13,960 --> 00:16:17,360
variable without a value const high.

245
00:16:17,740 --> 00:16:20,120
That doesn't work but with light I can.

246
00:16:21,100 --> 00:16:26,770
So that's what we'll do for now until we write this as a separate function so we'll say scoreline just

247
00:16:26,770 --> 00:16:27,370
exists.

248
00:16:27,370 --> 00:16:31,830
It doesn't have a value then if a waypoints is greater than home points.

249
00:16:32,140 --> 00:16:33,450
This is what score line should be.

250
00:16:33,460 --> 00:16:37,040
Otherwise it should be this and then we'll appended.

251
00:16:37,210 --> 00:16:41,890
And right now we're doing inter text which is not really going to work the way we want.

252
00:16:41,920 --> 00:16:45,610
We end up with the B tag just being rendered as text.

253
00:16:45,730 --> 00:16:51,140
So we'll do enter our AGM I'll try again haha.

254
00:16:51,160 --> 00:16:52,540
There we go.

255
00:16:52,540 --> 00:16:53,880
So let's verify.

256
00:16:53,920 --> 00:16:55,780
1 19 is greater than 1 0 6.

257
00:16:55,780 --> 00:16:56,380
That's correct.

258
00:16:56,380 --> 00:16:59,480
It should be bolded 127 bolded 126.

259
00:16:59,530 --> 00:16:59,910
Awesome.

260
00:16:59,920 --> 00:17:00,840
So that's working.

261
00:17:01,000 --> 00:17:04,120
The next step is to add a background color.

262
00:17:04,300 --> 00:17:11,650
So from the Warriors perspective the first game should be green because the Warriors won the next game

263
00:17:11,720 --> 00:17:14,020
should be red because the Warriors lost.

264
00:17:14,050 --> 00:17:17,710
Houston won and we'll do that for each one.

265
00:17:17,770 --> 00:17:25,060
So what I'm going to do is create a class and my class I'll have to actually win where I'll set background

266
00:17:25,060 --> 00:17:28,180
color to be.

267
00:17:28,240 --> 00:17:29,720
We could just start with red.

268
00:17:29,740 --> 00:17:34,200
I think I want an RG be a color which will be full red.

269
00:17:34,360 --> 00:17:42,670
No green no blue but I only want maybe like point three on the alpha channel so a transparent red and

270
00:17:42,670 --> 00:17:43,560
it looks dark here.

271
00:17:43,570 --> 00:17:46,960
But it's because the background of my editor is dark.

272
00:17:46,960 --> 00:17:50,020
If we actually saw that color it's a transparent red.

273
00:17:50,110 --> 00:17:57,880
So on a white background it looks sort of pinkish and then I'll duplicate this and make a loss class.

274
00:17:57,940 --> 00:17:59,670
This one will be similar.

275
00:17:59,670 --> 00:18:01,500
Oh why am I doing red for win.

276
00:18:01,510 --> 00:18:03,180
That should be the other way around.

277
00:18:03,190 --> 00:18:04,650
I want zero red.

278
00:18:04,870 --> 00:18:10,620
I want 255 green and zero blue and then loss should be red.

279
00:18:10,720 --> 00:18:12,420
Okay so I have those two classes.

280
00:18:12,430 --> 00:18:18,310
Now we just need to decide which one to show which one to apply to the entire ally.

281
00:18:18,310 --> 00:18:23,410
Now to figure out if the Warriors won a game because I'm doing this from the Warriors perspective.

282
00:18:23,410 --> 00:18:25,840
I want the green win class to be applied.

283
00:18:25,840 --> 00:18:33,040
If whichever object the Warriors are whichever one has Golden State rather than the Warriors Golden

284
00:18:33,040 --> 00:18:34,250
State is what we're looking for.

285
00:18:34,270 --> 00:18:38,170
We'll check if is winner is true then we'll apply this class of win.

286
00:18:38,170 --> 00:18:42,790
Otherwise we apply loss so to figure out which team is Golden State.

287
00:18:42,910 --> 00:18:44,820
We can do it in a sort of clunky way.

288
00:18:44,920 --> 00:18:48,760
It's not that bad but we'll check just one of the teams.

289
00:18:48,760 --> 00:18:49,750
It doesn't matter.

290
00:18:49,750 --> 00:18:54,210
Home team or away team doc team and check if it's golden state.

291
00:18:55,030 --> 00:18:56,710
So let's try it here.

292
00:18:56,740 --> 00:18:59,150
Home team which we already have that variable.

293
00:18:59,380 --> 00:19:06,610
Each team that we extracted or D structured each team equals Golden State and I'll do this as a ternary

294
00:19:07,000 --> 00:19:08,010
question mark.

295
00:19:08,230 --> 00:19:11,860
And if that's the case then the variable we want.

296
00:19:11,950 --> 00:19:15,050
I'll call this warriors.

297
00:19:15,220 --> 00:19:23,460
This will be a reference to the Warriors object here and we'll go with Warriors equals H team Golden

298
00:19:23,460 --> 00:19:23,910
State.

299
00:19:24,090 --> 00:19:28,780
If that's the case then the Warriors object it should be the home team.

300
00:19:28,800 --> 00:19:36,070
Object this entire home team otherwise we'll set it to the away team

301
00:19:39,190 --> 00:19:46,000
and if I console that log warriors right now we should get the Warriors information each time through

302
00:19:46,000 --> 00:19:53,290
whether it's a way or home we should still see Golden State golden state.

303
00:19:53,290 --> 00:19:53,730
Great.

304
00:19:53,740 --> 00:20:02,840
So now we've identified Golden State we have a reference to it then we can simply access is winner so

305
00:20:02,930 --> 00:20:08,150
warriors dot is winner is going to be true or false.

306
00:20:08,150 --> 00:20:15,760
Now if it's true then we'll apply the class of win ups that should be a question mark.

307
00:20:15,800 --> 00:20:22,220
Otherwise we'll apply the class of loss and we could save this to a variable like concept class name

308
00:20:22,790 --> 00:20:26,590
and then use that class name or I could do it in a single line.

309
00:20:26,630 --> 00:20:29,060
I want to apply my class to the game.

310
00:20:29,060 --> 00:20:31,970
Ally so game ally dot.

311
00:20:32,090 --> 00:20:37,280
Class list dot add this entire expression the ternary operator.

312
00:20:37,730 --> 00:20:44,570
So we will either add win or loss as a class depending on warrior start is winner and the moment of

313
00:20:44,570 --> 00:20:45,810
truth will refresh.

314
00:20:46,130 --> 00:20:50,430
Hey check it out OK so it seems to be working.

315
00:20:50,560 --> 00:20:55,330
Golden State at Houston we have Golden State one so it's green here.

316
00:20:55,330 --> 00:20:59,650
Houston 1 so it's red and it's accurate the whole way through.

317
00:20:59,650 --> 00:21:02,810
Notice Golden State has four total wins out of seven.

318
00:21:02,890 --> 00:21:04,420
Yes they moved on.

319
00:21:04,420 --> 00:21:05,080
Great job.

320
00:21:05,580 --> 00:21:09,040
OK so this code we have right now is kind of gross.

321
00:21:09,040 --> 00:21:12,720
Honestly I'm not very happy with it and that's OK.

322
00:21:12,820 --> 00:21:17,860
To get something out on the page get something working but I definitely want to refactor this for two

323
00:21:17,860 --> 00:21:18,400
reasons.

324
00:21:18,400 --> 00:21:23,920
One we should break it up into different functions when applicable to make it just clean and easy to

325
00:21:23,920 --> 00:21:29,760
understand but also this is all tied specifically to Golden State right now.

326
00:21:29,830 --> 00:21:36,010
What if I wanted to make a different table with the same data from the perspective of Houston and I

327
00:21:36,010 --> 00:21:37,910
wanted to append it down below.

328
00:21:38,200 --> 00:21:43,450
I think it would be best to make our code team agnostic and we could write a function called generate

329
00:21:43,720 --> 00:21:50,410
table or generate score chart or whatever this is where you pass an argument in of the team we pass

330
00:21:50,440 --> 00:21:54,810
Golden State and we get this if we pass Houston in we would get the opposite.

331
00:21:54,850 --> 00:22:00,790
As far as the colors so we could try that in the next video we'll do the refactoring we'll make it a

332
00:22:00,790 --> 00:22:01,570
little bit nicer.
