1
00:00:00,240 --> 00:00:00,600
All right.

2
00:00:00,600 --> 00:00:01,570
Welcome back.

3
00:00:01,590 --> 00:00:06,990
So if we break down the topics we've covered into the main sort of core central ideas to JavaScript.

4
00:00:06,990 --> 00:00:12,480
We had variables than we had conditionals than we did data structures arrays and objects.

5
00:00:12,480 --> 00:00:17,250
Now we have another really key piece to any programming language which is looping.

6
00:00:17,250 --> 00:00:18,560
How do we repeat code.

7
00:00:18,690 --> 00:00:21,390
And it's not just about repeating constant log.

8
00:00:21,390 --> 00:00:22,090
Hello.

9
00:00:22,110 --> 00:00:23,030
Ten times.

10
00:00:23,170 --> 00:00:28,170
There's so many different scenarios where we need logic to run multiple times where we need a game loop

11
00:00:28,230 --> 00:00:31,880
to continue to loop and run code over and over and over intel.

12
00:00:31,890 --> 00:00:34,540
Game over is true until the user wins.

13
00:00:34,800 --> 00:00:39,060
We're going to see a bunch of different types of loops different ways of repeating functionality or

14
00:00:39,060 --> 00:00:41,130
repeating logic in our scripts.

15
00:00:41,130 --> 00:00:43,090
So we have a couple main goals here.

16
00:00:43,110 --> 00:00:46,950
There are different types of loops we're going to talk about four main loops.

17
00:00:47,010 --> 00:00:52,260
First of all the for loop we want to be able to write for loops understand the syntax do the same thing

18
00:00:52,260 --> 00:00:57,750
with while loops a different type of a loop along the way we'll talk about infinite loops a very non

19
00:00:57,750 --> 00:01:03,570
desirable outcome from a loop how they arise how to avoid them that sort of thing and then we'll shift

20
00:01:03,570 --> 00:01:06,270
our focus to data structures with loops.

21
00:01:06,270 --> 00:01:09,030
So how do we loop over an array or an object.

22
00:01:09,030 --> 00:01:10,050
How do we do something.

23
00:01:10,080 --> 00:01:15,000
Once per every item in an array or every value in an object.

24
00:01:15,000 --> 00:01:17,300
Those are really really common use cases as well.

25
00:01:17,580 --> 00:01:22,560
So these loops that we're going to write are all about doing things repeatedly taking some block of

26
00:01:22,560 --> 00:01:24,940
code and running it over and over and over.

27
00:01:25,080 --> 00:01:27,870
And it's not always the same outcome every single time.

28
00:01:27,870 --> 00:01:33,510
It could be like if we were printing Hello 10 times we're always concerned about logging hello we would

29
00:01:33,510 --> 00:01:38,940
use a loop just to shorten up our code instead of having to write 10 constant logs we can write one

30
00:01:39,240 --> 00:01:45,990
and have it run ten times but then other times the outcomes or the iterations of the loop are different.

31
00:01:45,990 --> 00:01:52,470
Like if we were going to sum every number in an array we would need to loop or iterate once for each

32
00:01:52,470 --> 00:01:57,750
item in the array and add them into a total or a sum variable.

33
00:01:57,750 --> 00:02:00,870
So each time the number we're adding in is different.

34
00:02:00,870 --> 00:02:06,450
So it's not just constant logging Hello 10 times we're still changing what's happening each time through

35
00:02:06,450 --> 00:02:07,530
the loop.

36
00:02:07,530 --> 00:02:11,200
So there are multiple loop types for and while I mentioned those already.

37
00:02:11,310 --> 00:02:16,830
We'll also see two more the four of loop and the four in loop and I'll wrap up with this intro video

38
00:02:17,190 --> 00:02:22,650
with a quick example or two examples of where loops are used all over the place on the web on the web

39
00:02:22,650 --> 00:02:23,760
on Web sites.

40
00:02:23,760 --> 00:02:26,880
Here is one of my favorite sub it's artisan videos.

41
00:02:26,890 --> 00:02:31,300
It's a very relaxing non stressful beautiful Sub Reddit.

42
00:02:31,430 --> 00:02:38,430
I come to them and in a bad mood it's just videos of people who are really talented at their work woodworkers

43
00:02:38,460 --> 00:02:41,090
Carver's calligrapher.

44
00:02:41,350 --> 00:02:48,060
Anyway if you saw the underlying data structure behind each post here all the data we see on the page

45
00:02:48,500 --> 00:02:53,780
there is an array of posts and each post looks something like this.

46
00:02:53,790 --> 00:02:59,190
This is a very simplified version but we have an array of posts each post is an object and each post

47
00:02:59,190 --> 00:03:02,940
has a title a link a user name of the person who submitted it.

48
00:03:02,940 --> 00:03:07,440
There's also the number of upvotes there's all the comment information.

49
00:03:07,440 --> 00:03:09,060
The date it was posted.

50
00:03:09,060 --> 00:03:10,890
If it's been gilded or not.

51
00:03:10,890 --> 00:03:18,030
So all of that information is contained in one object for each post and then all of those objects are

52
00:03:18,030 --> 00:03:20,350
combined into one large array.

53
00:03:20,400 --> 00:03:25,950
There is a loop behind the scenes that is going to iterate over every single post in that array and

54
00:03:25,950 --> 00:03:27,330
display it on this web page.

55
00:03:27,420 --> 00:03:29,440
Make some HDMI content for it.

56
00:03:29,580 --> 00:03:32,640
Put an image there put the title here put the upvotes here.

57
00:03:32,790 --> 00:03:34,710
That is all done with a loop.

58
00:03:34,710 --> 00:03:39,420
None of it is hard coded so if there were 10 items to display that loop would run 10 times if there

59
00:03:39,420 --> 00:03:41,590
were a thousand posts in that array.

60
00:03:41,640 --> 00:03:47,280
It would run a thousand times so that's one type of loop where you're iterating over something you're

61
00:03:47,280 --> 00:03:49,820
doing something a set number of times.

62
00:03:49,950 --> 00:03:53,060
This is another type of loop where we have a game loop.

63
00:03:53,130 --> 00:03:55,460
If you've never seen this game it's called 2048.

64
00:03:55,500 --> 00:03:56,490
I wasted way too much.

65
00:03:56,490 --> 00:04:00,280
My high school and college classes playing this game in the back.

66
00:04:00,330 --> 00:04:05,430
It's really simple it doesn't really matter how it works but you combine powers of two together and

67
00:04:05,430 --> 00:04:11,880
they form a new number so if I combine two and two I get four foreign for I get aid in eight I get 16

68
00:04:12,450 --> 00:04:17,940
anyways I can keep playing this game there's logic that runs every time I hit one of these arrow keys

69
00:04:17,940 --> 00:04:22,440
you can't see that I'm doing it but you might be able to hear it every time a hidden Cherokee something

70
00:04:22,440 --> 00:04:28,590
happens on the page but there's going to be a point where I can't move anymore and at that point the

71
00:04:28,590 --> 00:04:30,850
main loop of the game is over.

72
00:04:30,900 --> 00:04:36,060
So the logic of this loop is something like if there are still playable moves.

73
00:04:36,060 --> 00:04:42,890
If the board is not completely jammed up and locked then let the user keep playing and see what happens.

74
00:04:42,900 --> 00:04:47,060
Listen for an event for a key press and you can see I just lost.

75
00:04:47,130 --> 00:04:53,090
So at this point that logic is done that loop had been going and in my case I probably had a couple

76
00:04:53,100 --> 00:04:59,010
hundred turns a couple hundred aero presses but it's possible you could have a much much longer game

77
00:04:59,040 --> 00:05:00,660
or even a quick your game.

78
00:05:00,660 --> 00:05:01,300
I don't know though.

79
00:05:01,320 --> 00:05:02,690
I was just hitting it randomly.

80
00:05:02,700 --> 00:05:07,200
It's probably a pretty bad strategy but I'm sure you could lose the game quicker.

81
00:05:07,200 --> 00:05:13,230
So the point here is that we're not looping a set number of times for not repeating some code 20 times

82
00:05:13,470 --> 00:05:15,060
every single time.

83
00:05:15,180 --> 00:05:21,000
Instead it's dynamic and it's a loop that just continues to run some logic Intel a condition is met

84
00:05:21,540 --> 00:05:23,880
so we'll see how to do both of these types of loops.

85
00:05:23,910 --> 00:05:26,280
We're going to start with the for loop which is up next.
