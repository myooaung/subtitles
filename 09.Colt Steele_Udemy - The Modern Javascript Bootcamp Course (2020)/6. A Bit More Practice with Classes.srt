1
00:00:00,240 --> 00:00:05,270
Next up we'll continue to add on to our culture class so we can get more practice adding methods.

2
00:00:05,460 --> 00:00:09,210
So I have a very long complicated function I found online.

3
00:00:09,210 --> 00:00:10,570
I did not write this.

4
00:00:10,620 --> 00:00:18,920
This function converts a RG B color into a H S L color HDL is a very interesting color system.

5
00:00:18,920 --> 00:00:21,800
It stands for hue saturation and lightness.

6
00:00:22,020 --> 00:00:23,640
And it looks like this HSA.

7
00:00:24,300 --> 00:00:27,620
And then we have a hue at the beginning from zero to 360.

8
00:00:27,720 --> 00:00:30,570
Like a degree around the color wheel.

9
00:00:30,570 --> 00:00:33,030
So let's do one thirty.

10
00:00:33,180 --> 00:00:39,600
Then we have saturation which is a percentage let's go with 50 percent and then we have lightness which

11
00:00:39,600 --> 00:00:44,100
is also a percentage from zero to one hundred eighty percent.

12
00:00:44,100 --> 00:00:50,190
So that is a result in color apparently if I change lightness to be 100 percent it's extremely light.

13
00:00:50,340 --> 00:00:54,340
If I go to 20 percent it's a darker green.

14
00:00:54,420 --> 00:00:56,160
Let's go to 40.

15
00:00:56,250 --> 00:01:00,530
If I change saturation to 100 percent it's very saturated.

16
00:01:00,540 --> 00:01:02,040
I go down 10 percent.

17
00:01:02,040 --> 00:01:03,780
It is not at all saturated.

18
00:01:03,840 --> 00:01:11,220
Let's go around 80 and then Hugh is interesting because I can completely change the value of that colored

19
00:01:11,250 --> 00:01:18,900
the hue of the color by just affecting one value so I can do you know zero will give me red apparently

20
00:01:19,380 --> 00:01:31,460
if I do 80 90 100 200 300 I'm making my way around the wheel all the way to 360 where I'm back to red

21
00:01:32,540 --> 00:01:39,220
so I can change the color very easily I could make a more saturated color by impacting the second value

22
00:01:39,230 --> 00:01:45,080
the saturation I could make a different value entirely I could go from red to the polar opposite by

23
00:01:45,110 --> 00:01:53,780
adding 180 so a 30 is the hue I add 180 what is one 80 plus 30 to 10 which gives me this blue and I

24
00:01:53,780 --> 00:01:59,750
can easily lighten something well one percent it will be white but I could do 90 percent to get a very

25
00:01:59,750 --> 00:02:06,190
light blue or I could darken it to a very dark blue so let's make a function I already have the logic

26
00:02:06,200 --> 00:02:14,840
that let's use it to create HSA l values and let's actually store H S and L on our class instances because

27
00:02:14,840 --> 00:02:19,730
we could reuse them for different functions if I want to make a light and function or a darker or a

28
00:02:19,910 --> 00:02:24,680
full saturation or something like that I want to use those s and now values.

29
00:02:24,680 --> 00:02:26,140
All right so here's the function.

30
00:02:26,330 --> 00:02:33,110
It's called calc H SL it expects three arguments and at the end we have three variables they're not

31
00:02:33,110 --> 00:02:38,720
being returned but we could return H S and L as an array maybe we can make a string.

32
00:02:38,750 --> 00:02:41,030
This has nothing to do with the class at the moment.

33
00:02:41,360 --> 00:02:45,410
I'm going to move this into my class.

34
00:02:45,890 --> 00:02:51,210
I'll put it down at the bottom because it's so long and ugly and I don't want to pass it.

35
00:02:51,210 --> 00:02:55,920
RG And B I have access to them on this.

36
00:02:56,450 --> 00:02:57,980
So my constructor runs right.

37
00:02:57,980 --> 00:03:03,730
RG and B are set based off of whatever I passed in if I recall calc H SL.

38
00:03:04,070 --> 00:03:12,680
RG and b will be on this then what I'm going to do is actually assign H S and L to the object to the

39
00:03:12,680 --> 00:03:13,150
instance.

40
00:03:13,160 --> 00:03:21,290
I'll do this that H equals H H is calculated up here s is calculated in the same function.

41
00:03:21,290 --> 00:03:23,160
Again the logic does not matter.

42
00:03:23,180 --> 00:03:24,800
I have not even glanced at it.

43
00:03:24,800 --> 00:03:26,810
I just took it from a website.

44
00:03:27,030 --> 00:03:29,320
What did I find this that come Stack Overflow.

45
00:03:29,810 --> 00:03:33,460
But it does work who knows how elegant it is but it works.

46
00:03:33,530 --> 00:03:40,270
So now h s no exist on the individual instances as long as I call calc H SL.

47
00:03:40,280 --> 00:03:41,360
So let's try it.

48
00:03:41,390 --> 00:03:46,400
I have my why we go with a white one because white is probably easiest for us to tell if it's working

49
00:03:47,350 --> 00:03:54,110
somewhere to refresh this and called white dot calc H.S. L and I just look at white to begin with.

50
00:03:54,260 --> 00:03:55,760
It only has four properties.

51
00:03:55,760 --> 00:04:05,510
RG be a name if I call white dot calc H SL assignment to Constance my bad I think I can't use const

52
00:04:05,510 --> 00:04:11,330
here because the way the function is written it is updating as you can see here divide equals slash

53
00:04:11,360 --> 00:04:17,030
equals so I'll use light and now it should pick it to go all right.

54
00:04:17,040 --> 00:04:24,360
So we don't return anything but if we look at white it now has H S and L and lightness is set to 100

55
00:04:24,600 --> 00:04:29,580
which makes sense as we experimented with a couple minutes ago lightness of one hundred gives us white.

56
00:04:30,590 --> 00:04:37,320
So now let's make a function called H SL that will actually display the H S L correct format string

57
00:04:38,250 --> 00:04:44,100
and to start before I get there I'm going to show you that we can call a function from within the constructor

58
00:04:44,100 --> 00:04:50,910
we can call one of these methods like this dot calc H SL we'll just call it immediately after we assign

59
00:04:50,940 --> 00:04:57,000
RG be a name we'll call that function automatically whenever you make a new color we'll calculate the

60
00:04:57,030 --> 00:05:02,120
H SL based off of the RG B that was passed in that we then added to the object.

61
00:05:02,310 --> 00:05:07,980
This is called it looks up RG and B from the instance of the actual class the instance that was just

62
00:05:07,980 --> 00:05:14,320
created and then it adds on it tags its own new properties onto that instance.

63
00:05:14,520 --> 00:05:24,840
So let's make our function called just h SL and it will extract D structure H S and L from this and

64
00:05:24,840 --> 00:05:32,220
then we can return our template literal which isn't going to be H S L we need parentheses then we have

65
00:05:32,220 --> 00:05:39,480
the hue which is not a percentage goes from 0 to 360 then we have saturation which is a percentage that

66
00:05:39,480 --> 00:05:45,840
we need to add the percent then we have lightness which is also a percentage.

67
00:05:46,020 --> 00:05:51,680
Let's see if that works refresh over here we have our color white.

68
00:05:51,930 --> 00:05:58,590
It was created and now it automatically has H S and L properties and I should be able to call white

69
00:05:58,590 --> 00:06:01,360
dot H S L and get a string.

70
00:06:01,800 --> 00:06:03,320
Let's verify on a different color.

71
00:06:03,330 --> 00:06:05,700
We have Red let's verify that it works.

72
00:06:05,700 --> 00:06:09,690
Document that body that style dot background color again

73
00:06:12,490 --> 00:06:17,070
equals red dot H S L and it works.

74
00:06:17,120 --> 00:06:22,960
OK so now we could have a little bit of fun and define some other methods like one that I'll show you.

75
00:06:23,020 --> 00:06:28,450
We'll call opposite which will take H and generate an opposite color.

76
00:06:28,540 --> 00:06:31,110
Remember to color wheel from zero to 360.

77
00:06:31,420 --> 00:06:39,180
So I'll just add a method called opposed it and we can start by just duplicating this.

78
00:06:39,520 --> 00:06:47,920
We're gonna want to use H but we're also going to want to make a new age new hue equals and what we'll

79
00:06:47,920 --> 00:06:50,250
do is add 180.

80
00:06:50,470 --> 00:06:52,460
So if we had 60.

81
00:06:52,470 --> 00:06:53,710
Before we add 180.

82
00:06:53,770 --> 00:06:59,860
If we had zero before we add 180 it's 180 degrees the other side directly across that circle the color

83
00:06:59,860 --> 00:07:00,580
wheel.

84
00:07:00,820 --> 00:07:07,930
But if we're above 180 then if we add another one eighty four at two hundred and you add 180 we're suddenly

85
00:07:07,930 --> 00:07:09,540
at 380.

86
00:07:09,550 --> 00:07:17,610
So what we can then do is modulo by 360 which will take us back to 20 if you're lost on the logic don't

87
00:07:17,610 --> 00:07:18,330
worry too much.

88
00:07:18,330 --> 00:07:20,370
It's not that important but we can do.

89
00:07:20,640 --> 00:07:28,850
H plus 180 modulo 360 to keep us on that 360 degree wheel.

90
00:07:28,950 --> 00:07:32,040
If we go too far we just start back at zero.

91
00:07:32,040 --> 00:07:32,560
All right.

92
00:07:33,150 --> 00:07:43,150
So then here we would put new hue instead of the existing hue H let's try it out.

93
00:07:43,150 --> 00:07:48,550
So I'm going to refresh I'll run the same code red dot HSA l I lose the line.

94
00:07:48,550 --> 00:07:50,950
Here we go to update the body.

95
00:07:51,010 --> 00:07:56,280
Now let's do red dot opposite which gives us that color.

96
00:07:56,470 --> 00:08:02,170
They are opposite on the color wheel at least as far as the hue the saturation and lightness are still

97
00:08:02,170 --> 00:08:03,810
the same.

98
00:08:03,820 --> 00:08:05,280
Let's do one last one.

99
00:08:05,320 --> 00:08:12,640
Let's make one called full saturation and it's just going to have the existing hue the existing lightness

100
00:08:13,000 --> 00:08:23,390
but set saturation to 100 full saturation or fully saturated all we need are H and L we don't care about

101
00:08:23,780 --> 00:08:31,290
saturation because we're always going to return saturation set to 100 percent.

102
00:08:31,320 --> 00:08:38,800
Let's see if that one works so we'll set the background color to red dot SL and then we'll update it

103
00:08:38,830 --> 00:08:45,230
to a fully saturated and was it already at 100.

104
00:08:45,240 --> 00:08:47,420
Well that's disappointing.

105
00:08:47,540 --> 00:08:49,500
He's already one hundred saturation.

106
00:08:49,500 --> 00:08:50,870
Let's try another example.

107
00:08:50,910 --> 00:08:52,270
Here's a different color.

108
00:08:52,350 --> 00:08:57,420
I'm giving it a name which I have been leaving off for the record which is actually not the best idea

109
00:08:57,900 --> 00:09:03,660
so I should either add a default name which I can do just like any other default parameter or I should

110
00:09:03,660 --> 00:09:05,780
just pass in a name like I did here.

111
00:09:06,030 --> 00:09:08,790
Even though we're not using it anywhere it's just good to have on there.

112
00:09:08,970 --> 00:09:14,460
We don't want to have just undefined all over the place so let's save that to variable const orange

113
00:09:15,180 --> 00:09:20,430
and then we'll do the same thing where we change the background color but we'll change it to orange

114
00:09:21,120 --> 00:09:23,330
dot HDL or RG.

115
00:09:23,340 --> 00:09:25,290
It doesn't matter we should get the same thing.

116
00:09:25,580 --> 00:09:25,910
Okay.

117
00:09:25,920 --> 00:09:27,090
It's not 100.

118
00:09:27,120 --> 00:09:30,790
Now let's do full saturated or fully saturated.

119
00:09:30,810 --> 00:09:33,640
I don't know if you could see that but it did change.

120
00:09:33,880 --> 00:09:40,620
If you go back to our GP or hex or any of these other ones slightly duller now fully saturated.

121
00:09:40,770 --> 00:09:47,760
And how about opposite so be our last one a nice beautiful blue.

122
00:09:47,760 --> 00:09:48,060
Okay.

123
00:09:48,960 --> 00:09:51,000
So this is our color class.

124
00:09:51,000 --> 00:09:57,330
A lot of the logic to calculate the HSA L to convert from Archie V to hex really doesn't matter.

125
00:09:57,360 --> 00:09:58,580
Don't focus on that.

126
00:09:58,620 --> 00:10:00,720
Focus on the interplay of the keyword.

127
00:10:00,720 --> 00:10:08,700
This the idea of the constructor adding in values to this to the individual instance as properties calling

128
00:10:08,700 --> 00:10:15,930
methods on this which allows us to access other methods in the same class and then using the new keyword

129
00:10:16,020 --> 00:10:17,850
to instantiate new colors.
