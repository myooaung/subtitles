WEBVTT
1
00:00:00.450 --> 00:00:00.820
All right.

2
00:00:00.840 --> 00:00:02.000
If you're still with me.

3
00:00:02.070 --> 00:00:02.490
Thank you.

4
00:00:02.520 --> 00:00:03.480
Congratulations.

5
00:00:03.480 --> 00:00:04.940
We've covered a lot of methods.

6
00:00:04.950 --> 00:00:09.990
We have two more methods in this video and that's it for new stuff in this section.

7
00:00:09.990 --> 00:00:16.020
Well then do a quick little projects where we get practice creating elements removing elements inserting

8
00:00:16.170 --> 00:00:21.150
changing classes and styles and all of that stuff and then we'll move on to a new section on events

9
00:00:21.180 --> 00:00:22.000
in the dome.

10
00:00:22.020 --> 00:00:26.740
Now events are really the main course of Dom stuff of these Dom sections.

11
00:00:26.850 --> 00:00:32.700
Events are probably the most exciting but also the missing piece that we need in order to actually make

12
00:00:32.760 --> 00:00:36.300
useful applications and start to interact with our Web sites.

13
00:00:36.330 --> 00:00:39.610
So two more methods and then a project then events.

14
00:00:39.660 --> 00:00:43.500
So the two methods are remove and remove child and they do what they sound like.

15
00:00:43.500 --> 00:00:49.710
They remove and remove an element that you pass in they follow the pattern that we saw with append child

16
00:00:50.670 --> 00:00:53.310
where this was the the original way of doing it.

17
00:00:53.310 --> 00:00:59.310
The older way of appending something as a child and it's supported in all browsers but there's a newer

18
00:00:59.310 --> 00:01:02.700
method append that does not work in Internet Explorer.

19
00:01:02.760 --> 00:01:08.000
It's a little friendlier to use and you can pass in multiple elements remove is similar.

20
00:01:08.040 --> 00:01:11.560
So we have removed child which has been around much longer.

21
00:01:11.730 --> 00:01:15.570
And then we have remove which does not work in i.e..

22
00:01:15.780 --> 00:01:21.240
And if you go to the docs or remove child it's actually mildly confusing on NBN and you scroll down

23
00:01:21.240 --> 00:01:25.680
to look at browser support compatibility unknown for i.e..

24
00:01:26.010 --> 00:01:28.990
So I had a feeling this was a mistake.

25
00:01:28.980 --> 00:01:31.380
Something is just wrong with with the data they have.

26
00:01:31.680 --> 00:01:35.580
So on another Web site that I like called Can I use.

27
00:01:35.580 --> 00:01:42.300
If you look at remove child for i.e. it's been supported in pretty much every version of IP that they

28
00:01:42.630 --> 00:01:43.860
support on this Web site.

29
00:01:44.190 --> 00:01:48.630
So I have no idea why MDA has a question mark there but it is supported in IP.

30
00:01:48.990 --> 00:01:55.530
So to use remove child we need to find the parent of what we're trying to remove and find the item that

31
00:01:55.530 --> 00:01:57.470
we want to remove.

32
00:01:57.510 --> 00:02:05.320
So why don't we remove let's remove PS right here so that element is down at the very bottom.

33
00:02:05.400 --> 00:02:12.360
We need to select that element which is in a well and it has a class of special.

34
00:02:12.390 --> 00:02:21.570
So we need to select the UL parent and the ally let's get the parent first concept you l equals document

35
00:02:21.570 --> 00:02:27.270
dot query selector and we have a couple of wells on this page but I'm going to do is select the one

36
00:02:27.270 --> 00:02:31.760
inside of a section which should give us that one down there.

37
00:02:31.770 --> 00:02:36.120
Let's see you Well yep that one is at the bottom.

38
00:02:36.240 --> 00:02:40.290
It's the only one contained inside of a section.

39
00:02:40.290 --> 00:02:46.410
Now if I want to get this one ally that has the class of special I have a couple options I could just

40
00:02:46.410 --> 00:02:53.310
you document that query selector or I could search within the UL you well that query selector for the

41
00:02:53.310 --> 00:02:59.580
class of special and this is easy or easier because there's only one element with the class of special

42
00:03:00.000 --> 00:03:06.840
in that you well but if I instead did document that query selector we have multiple other special classes

43
00:03:07.020 --> 00:03:09.710
or instances of special on the page.

44
00:03:09.870 --> 00:03:16.230
So it's it's more work we would have to then say instead of a section maybe that could get it but I

45
00:03:16.230 --> 00:03:21.360
like doing this version here where we search within the UL and ignore everything else.

46
00:03:21.360 --> 00:03:21.650
All right.

47
00:03:21.720 --> 00:03:25.980
So I'm going to save that to a variable const remove me.

48
00:03:26.070 --> 00:03:27.030
How about that.

49
00:03:27.030 --> 00:03:30.570
Remove me equals you well that query selector special.

50
00:03:30.630 --> 00:03:34.070
So now we have that element remove me and we have the parent.

51
00:03:34.140 --> 00:03:43.380
Well I can call you well remove child and I want to remove the remove me element all right.

52
00:03:43.590 --> 00:03:48.610
So the pattern is the parent and then remove child and then the child.

53
00:03:48.720 --> 00:03:51.660
And this child needs to be a child of the parent.

54
00:03:51.660 --> 00:03:57.150
So I couldn't select this well and say that you l dot remove child of this ally.

55
00:03:57.180 --> 00:03:58.670
It wouldn't work.

56
00:03:58.740 --> 00:04:02.440
Also when we do remove a child it does return the removed element.

57
00:04:02.520 --> 00:04:03.780
So I can save it.

58
00:04:03.790 --> 00:04:10.870
I'll just call it contact deleted if you wanted to do something with it it's gone now peace is gone.

59
00:04:10.870 --> 00:04:15.160
And if we look at deleted we do have a variable here that is an object.

60
00:04:15.160 --> 00:04:18.400
It's the actual element that we were working with that we just removed.

61
00:04:18.400 --> 00:04:24.810
It's just printing out as HMO thanks to Chrome's lovely dev tools which actually are lovely except I

62
00:04:24.820 --> 00:04:26.020
hate this one feature.

63
00:04:26.020 --> 00:04:29.230
And then we also have the removed method which works differently.

64
00:04:29.230 --> 00:04:31.010
It does not need the parent node.

65
00:04:31.030 --> 00:04:33.050
All we need to do is select the target.

66
00:04:33.070 --> 00:04:39.660
The thing we want to remove and then call remove on that node on the actual item we want to remove.

67
00:04:39.670 --> 00:04:47.440
So if I want to remove the h one for example I can select it content H1 equals document query selector

68
00:04:49.090 --> 00:04:50.010
of H1.

69
00:04:50.080 --> 00:04:53.670
There's only one on the page and I can call each one dot remove.

70
00:04:53.740 --> 00:04:55.140
I don't need the parent.

71
00:04:55.480 --> 00:05:03.970
If I was doing this with remove child I would have to say document up body dot remove child of H1 but

72
00:05:03.970 --> 00:05:06.220
with remove it's easier.

73
00:05:06.220 --> 00:05:07.510
We don't have to have the parent.

74
00:05:07.570 --> 00:05:13.920
It just doesn't work in i.e. unfortunately H1 dot remove parentheses and it's gone.

75
00:05:14.470 --> 00:05:15.280
That's it.

76
00:05:15.280 --> 00:05:17.080
And that's pretty much it for this video.

77
00:05:17.080 --> 00:05:22.480
We can remove using the remove method that we just saw we've got remove child you could do this in a

78
00:05:22.480 --> 00:05:27.080
loop of course if you had a bunch of things you wanted to remove and that's kind of it.

79
00:05:27.100 --> 00:05:32.680
Now we've seen how to create elements how to append them prepared them insert them before things insert

80
00:05:32.680 --> 00:05:34.890
adjacent to things and remove them.
