WEBVTT
1
00:00:00.860 --> 00:00:04.830
The next little fix we're going to add in is to make sure that if a user searches for something and

2
00:00:04.830 --> 00:00:09.900
then decides they don't want to select a video and clicks somewhere else we want to close the menu.

3
00:00:09.960 --> 00:00:14.460
So essentially we need to really detect when a user clicks anywhere on the screen.

4
00:00:14.460 --> 00:00:16.940
That is not inside of that menu.

5
00:00:17.160 --> 00:00:21.420
Now believe or not adding in some code for this is not the easiest thing in the world.

6
00:00:21.640 --> 00:00:23.930
And it's actually kind of deceptively challenging.

7
00:00:23.940 --> 00:00:27.840
There is a little trick to it however and this trick is going to seem a little bit weird but it's probably

8
00:00:27.840 --> 00:00:31.210
the best and easiest way to handle this to understand the trick.

9
00:00:31.220 --> 00:00:37.050
I mean first write out a little demonstration in my console so inside my console with my dev tools open

10
00:00:37.350 --> 00:00:39.300
I'm going to right click on the label right there.

11
00:00:39.300 --> 00:00:44.130
Search for a movie and I'm going to click inspect on it.

12
00:00:44.260 --> 00:00:49.870
That's going to open up my elements panel and select the B element Whenever I click an element in this

13
00:00:49.870 --> 00:00:50.490
elements panel.

14
00:00:50.650 --> 00:00:53.050
You'll see it right after the eight small snippet I get.

15
00:00:53.050 --> 00:00:55.090
Equals equals dollar sign 0.

16
00:00:55.090 --> 00:01:00.880
And if you hover over it you can type in dollar sign 0 in the console to refer to that element.

17
00:01:00.880 --> 00:01:05.950
So if I open up my console at the same time which by the way you can do by hitting escape we can write

18
00:01:05.950 --> 00:01:11.260
in at Dollar Sign 0 and that will print out the reference to that element just you know.

19
00:01:11.260 --> 00:01:17.030
Dollar sign 0 is a valid javascript identifier that is not some like magic operator or something.

20
00:01:17.060 --> 00:01:19.450
It is a normal completely valid.

21
00:01:19.470 --> 00:01:23.930
Totally legal javascript variable name OK.

22
00:01:23.950 --> 00:01:28.450
So now that I've got a selector to that element I want to show you the little trick I'm going to get

23
00:01:28.450 --> 00:01:30.480
reference to the entire document.

24
00:01:30.610 --> 00:01:35.600
I'm going to call document dot contains and then pass in dollar sign 0.

25
00:01:35.680 --> 00:01:40.930
So what this checks is to see if the element that I currently have selected in this case that labeled

26
00:01:40.930 --> 00:01:44.110
right there is contained within the document element.

27
00:01:44.470 --> 00:01:49.660
If it is contained because remember we view the DOM as a sort of tree and we're going to get back true

28
00:01:50.110 --> 00:01:54.150
in this case the element inside the document definitely is contained.

29
00:01:54.370 --> 00:01:59.860
But if we try to check the reverse relationship so dollar sign 0 dot contains document we're going to

30
00:01:59.860 --> 00:02:01.020
get back false.

31
00:02:01.090 --> 00:02:02.850
Whoops typo.

32
00:02:03.020 --> 00:02:04.080
We're going to get back false.

33
00:02:04.100 --> 00:02:05.090
Like so.

34
00:02:05.090 --> 00:02:09.290
So that means that the label does not contain the document.

35
00:02:09.290 --> 00:02:12.350
So I just want you to keep that in your head for just a moment.

36
00:02:12.410 --> 00:02:13.100
Keep in your head.

37
00:02:13.100 --> 00:02:17.930
We're gonna go back over and write a little bit of code to handle closing that input menu or the drop

38
00:02:17.930 --> 00:02:20.120
down menu okay.

39
00:02:20.150 --> 00:02:25.160
So back over here are going to say document dot add event listener.

40
00:02:25.160 --> 00:02:26.560
So this is kind of the crazy part.

41
00:02:26.570 --> 00:02:32.120
We are adding a global event listener to our entire document and we're going to watch for any time that

42
00:02:32.180 --> 00:02:37.920
anyone clicks on any element whatsoever.

43
00:02:37.930 --> 00:02:43.780
Now remember how events work in JavaScript events bubble which means that if some element contained

44
00:02:43.780 --> 00:02:48.190
inside the documents like let's say the container right here or even the text inside of it.

45
00:02:48.190 --> 00:02:52.600
If someone clicks on that that's going to trigger a click event on that element.

46
00:02:52.600 --> 00:02:57.130
If it doesn't get handled right there then the event is going to essentially bubble up until it gets

47
00:02:57.130 --> 00:03:00.440
to the top level of our entire e-mail document.

48
00:03:00.460 --> 00:03:10.170
In this case the document so this event right here we can look at console dot log event dot target and

49
00:03:10.170 --> 00:03:14.880
as we start to click around we're going to see that this is going to print out a variety of different

50
00:03:14.880 --> 00:03:19.070
elements essentially whatever element we click on I'm going to go back over again.

51
00:03:19.080 --> 00:03:23.010
I'm going to refresh it now if I start to click around like on the label.

52
00:03:23.160 --> 00:03:31.650
I'll see the label text I can click on the H1 the icon right there the header anywhere else the input

53
00:03:31.650 --> 00:03:35.510
whatever else and whenever I click on it I see the console log up here.

54
00:03:35.610 --> 00:03:35.840
OK.

55
00:03:35.880 --> 00:03:39.320
So now here's the real final conclusion of all this.

56
00:03:39.390 --> 00:03:42.320
So we know that event target is going to tell us what gets clicked.

57
00:03:42.330 --> 00:03:47.050
We know that we also have that contains element as well or something that contains method.

58
00:03:47.200 --> 00:03:53.100
So the whole big trick here the whole kind of conclusion to all this is that we can take a look at our

59
00:03:53.100 --> 00:03:54.160
roots element.

60
00:03:54.300 --> 00:03:58.470
Remember the root element encapsulates everything having to do with our autocomplete.

61
00:03:58.590 --> 00:04:04.470
So we're going to check to see if the element that was clicked on is contained inside of root.

62
00:04:04.650 --> 00:04:09.990
If it is contained inside that means that the user clicked on the label the input or the dropdown and

63
00:04:09.990 --> 00:04:12.860
in any of those scenarios we want to keep the dropdown open.

64
00:04:13.470 --> 00:04:18.960
But if the click is not contained inside of the roots then the user clicks somewhere else in the document.

65
00:04:18.990 --> 00:04:21.120
And so we should close the dropdown.

66
00:04:21.120 --> 00:04:22.350
That's the whole conclusion.

67
00:04:22.350 --> 00:04:26.060
I apologize in coming to it in a roundabout way but that is the trick.

68
00:04:26.130 --> 00:04:28.080
That's how we're going to do this.

69
00:04:28.140 --> 00:04:35.970
So inside of our event listener down here we're going to say if not route dot contains event dot target.

70
00:04:36.080 --> 00:04:41.220
That's saying if the route element for our little autocomplete doesn't contain the element that was

71
00:04:41.220 --> 00:04:47.760
just clicked on then we need to close the dropdown and remember to open or closed the dropdown we can

72
00:04:47.760 --> 00:04:52.590
get a reference back to the dropdown element right here which is essentially that thing right there

73
00:04:53.860 --> 00:04:57.920
and we can add or remove the class is Dash active.

74
00:04:57.920 --> 00:05:02.990
We just added in some code a little bit ago to add in the class is active which opens it up so to close

75
00:05:02.990 --> 00:05:03.300
it.

76
00:05:03.410 --> 00:05:08.380
We're going to remove that class and that will close the dropdown get so down here.

77
00:05:08.390 --> 00:05:20.780
I'll do dropdown class list dot remove is Dash active like so and I'll save put back over refresh I'll

78
00:05:20.800 --> 00:05:22.970
go for dark knight.

79
00:05:23.170 --> 00:05:30.680
Now I'm going to click anywhere else in the dropdown closes if I do another search for let's say Avengers.

80
00:05:30.840 --> 00:05:35.610
I can click on anything inside here so I can click click click click click on the input click on the

81
00:05:35.610 --> 00:05:41.430
label I click on anything inside of the entire autocomplete widget and this thing stays open as we would

82
00:05:41.430 --> 00:05:42.930
hope all right.

83
00:05:42.960 --> 00:05:45.290
That definitely looks like it's working correctly.

84
00:05:45.290 --> 00:05:49.280
So just one that's little fix I want to take care of in the next video so quick pause and I'll see you

85
00:05:49.280 --> 00:05:49.970
in just a minute.
