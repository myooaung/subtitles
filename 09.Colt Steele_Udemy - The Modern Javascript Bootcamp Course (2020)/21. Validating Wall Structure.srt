1
00:00:00,960 --> 00:00:05,490
Now that we are forming up the verticals and horizontals arrays correctly we know we are because we've

2
00:00:05,490 --> 00:00:07,260
done a pretty good amount of testing.

3
00:00:07,260 --> 00:00:12,180
We can now move on to the next neighboring cell and essentially recurs through all of our different

4
00:00:12,180 --> 00:00:14,600
cells calling step through cell.

5
00:00:14,640 --> 00:00:19,110
Each individual time remember the entire idea here of how we form the maze.

6
00:00:19,110 --> 00:00:21,510
We start off at some individual location.

7
00:00:21,540 --> 00:00:27,360
We then move on over here and then we repeat the same process for the cell going to all of its neighboring

8
00:00:27,360 --> 00:00:29,820
cells as well that we have not yet visited.

9
00:00:29,820 --> 00:00:34,440
So it is this recursion that's going to make sure that we walk through all the different cells of our

10
00:00:35,190 --> 00:00:38,350
little maze okay.

11
00:00:38,440 --> 00:00:42,580
So to do the iteration or some of the recursion we'll go back down to the if statements we are just

12
00:00:42,580 --> 00:00:47,500
working on here they are right here and right after the if statement still inside the for loop I'm going

13
00:00:47,500 --> 00:00:55,760
to call step through cell with next row and next column lights up.

14
00:00:55,770 --> 00:00:57,270
So now let's save this.

15
00:00:57,270 --> 00:01:04,290
We're going to go back over to the browser I'm going to refresh and I'll print out verticals and horizontals

16
00:01:04,820 --> 00:01:06,360
and now in both these arrays.

17
00:01:06,360 --> 00:01:10,630
We should see some number of values of both false and true.

18
00:01:10,670 --> 00:01:14,850
I'm gonna take these false and true values and I'm going to go over to our little diagram right here

19
00:01:14,850 --> 00:01:19,440
and I'm going to manually erase some of the walls and see if it forms an actual maze like the one that

20
00:01:19,440 --> 00:01:21,900
we're trying to generate okay.

21
00:01:21,930 --> 00:01:26,940
So we have verticals of I mean I'm just going to write this down really quickly.

22
00:01:27,030 --> 00:01:30,210
TRUE FALSE FALSE TRUE.

23
00:01:30,480 --> 00:01:37,800
AND THEN horizontals of False True True True False True.

24
00:01:37,840 --> 00:01:42,120
So these are our verticals and these are our horizontals.

25
00:01:42,160 --> 00:01:48,590
So again this kind of value right here corresponds to that one right there.

26
00:01:48,640 --> 00:01:54,540
And for example that true down there responds to that wall right there.

27
00:01:54,550 --> 00:01:59,550
So I'm going to go through any race all the true walls as remember.

28
00:01:59,550 --> 00:02:03,550
True means that there is no wall available or no wall present.

29
00:02:03,550 --> 00:02:05,890
So first we will take our verticals.

30
00:02:05,890 --> 00:02:18,100
So going to delete that one and that one and that one and that one it's now the only verticals remaining

31
00:02:18,280 --> 00:02:25,620
are that and that I can repeat the same process for horizontals as well.

32
00:02:25,620 --> 00:02:29,100
So I've got on horizontals False.

33
00:02:29,100 --> 00:02:29,550
True.

34
00:02:29,550 --> 00:02:42,570
So that's open true that is open true and true and if we look at this pretty closely we can see.

35
00:02:42,570 --> 00:02:42,860
Yeah.

36
00:02:42,870 --> 00:02:45,750
Without a doubt we've got an actual maze here.

37
00:02:45,750 --> 00:02:46,770
So that's pretty much it.

38
00:02:46,800 --> 00:02:52,170
It looks like we have successfully formed up the vertical and horizontal arrays and we can now generate

39
00:02:52,190 --> 00:02:53,210
a maze.

40
00:02:53,290 --> 00:02:57,360
Remember one of the properties of our maze is that every single cell can be visited.

41
00:02:57,360 --> 00:03:02,010
Essentially there are no portions of the maze that are completely blocked off or inaccessible.

42
00:03:02,010 --> 00:03:06,210
And this is what is going to allow us to make sure that we can always have a starting position for the

43
00:03:06,270 --> 00:03:12,570
ball that we're going to eventually show up there on the top left and the completion on the very bottom

44
00:03:12,570 --> 00:03:13,040
right.

45
00:03:13,050 --> 00:03:14,740
Like so.

46
00:03:14,810 --> 00:03:15,080
All right.

47
00:03:15,080 --> 00:03:20,660
So now that we are forming up the verticals in horizontals we can start to take all this data and render

48
00:03:20,660 --> 00:03:23,500
it out onto our matter J.S. campus.

49
00:03:23,540 --> 00:03:25,310
So let's take one last quick pause right here.

50
00:03:25,310 --> 00:03:26,690
We'll come back the next video.

51
00:03:26,690 --> 00:03:33,600
We're going to start to take our read verticals in horizontals.

52
00:03:33,620 --> 00:03:36,980
We're going to iterate through all this stuff and we're going to figure out where we want to draw some

53
00:03:36,980 --> 00:03:41,210
walls using matter J.S. so quick pause and I'll see you in just a minute.
