1
00:00:01,000 --> 00:00:05,620
The last video we tried to print out the files and folders from up one directory of our current one.

2
00:00:05,630 --> 00:00:07,470
We very quickly cite an error message here.

3
00:00:07,490 --> 00:00:08,420
So what's going on.

4
00:00:09,170 --> 00:00:17,510
Well if we go back over to our Ed we are passing in some target directory to read into the reader function.

5
00:00:17,510 --> 00:00:23,690
Then a moment after that we tried to run l stat right there and we passed in the file name but remember

6
00:00:23,720 --> 00:00:25,300
what the file name is.

7
00:00:25,430 --> 00:00:30,410
It is a simple string that is just indicating the name of the file that we want to get some stats for

8
00:00:31,060 --> 00:00:32,780
when we call the L stat function.

9
00:00:32,780 --> 00:00:36,980
We're really suppose to be passing in either a relative path to the file that we want to get the stats

10
00:00:36,980 --> 00:00:39,360
for or the absolute path.

11
00:00:39,410 --> 00:00:43,940
Right now we're just giving the file name and so else stat is going to look inside of our current working

12
00:00:43,940 --> 00:00:47,960
directory and try to find a file inside there called file name.

13
00:00:47,960 --> 00:00:53,780
That file doesn't exist in our case specifically when we run this command because this essentially means

14
00:00:53,810 --> 00:00:57,980
go up one directory find all the files inside there and then we tried to run.

15
00:00:58,000 --> 00:01:02,120
L stat assuming that those files are in the current directory.

16
00:01:02,390 --> 00:01:08,450
So we need to somehow make sure that when we call l stats we pass in a relative path to that target

17
00:01:08,450 --> 00:01:15,240
file so to do so I gonna go back over to my editor at the very top.

18
00:01:15,370 --> 00:01:19,850
I'm going to add in an additional that require statement or something called path.

19
00:01:20,020 --> 00:01:28,060
It's also path is require path like so this is another one of the modules inside the node standard library.

20
00:01:28,080 --> 00:01:32,370
Let's take a look at the documentation for this module really quickly and get a better idea of what

21
00:01:32,370 --> 00:01:39,090
it's for and how it's going to solve our problem so I gonna go back over to the node j ust documentation

22
00:01:39,630 --> 00:01:42,690
on the left hand side scrolling down to half.

23
00:01:42,720 --> 00:01:43,920
Here it is right here.

24
00:01:44,430 --> 00:01:51,570
So this is an entire module all around helping you get file names or paths to files on your computer

25
00:01:51,600 --> 00:01:57,150
put together in particular what's really nice about this path module is that it's going to handle all

26
00:01:57,150 --> 00:01:59,930
the differences in cross platform compatibility.

27
00:01:59,940 --> 00:02:06,960
So in other words handling differences between a Windows based file system and a Mac OS or Linux based

28
00:02:06,960 --> 00:02:08,230
file system as well.

29
00:02:09,170 --> 00:02:12,970
The function inside of here that we're going to look for in particular is called Path Dot.

30
00:02:12,980 --> 00:02:20,710
Join this path dot joint function is going to take in some number of path parts or essentially parts

31
00:02:20,770 --> 00:02:23,310
of a path to a file or a directory.

32
00:02:23,380 --> 00:02:28,480
It's then going to join them altogether making sure that the final product is going to work equally

33
00:02:28,480 --> 00:02:32,870
well whether we are on a Mac system or a Windows system.

34
00:02:32,890 --> 00:02:37,480
We're going to use path dot join to create a path to the file that we are looking for.

35
00:02:38,800 --> 00:02:40,760
It's going to go back over to my editor.

36
00:02:41,120 --> 00:02:46,160
I'm gonna go down to where l stack call right here and instead of just directly passing it in the L

37
00:02:46,160 --> 00:02:53,510
stat or seeing the file name to l stat I'm going to instead pass in half dot join and I'm going to join

38
00:02:53,510 --> 00:02:56,290
together the target directory that we're looking for.

39
00:02:56,390 --> 00:03:03,260
So Target dir and the file name like so.

40
00:03:03,350 --> 00:03:09,570
So this is going to say look at whatever entry or whatever folder we're trying to find and append on

41
00:03:09,630 --> 00:03:15,380
the file name to the very end not join is going to make sure that those two very different strings get

42
00:03:15,680 --> 00:03:21,270
joined together in the correct fashion as well so let's now save this.

43
00:03:21,410 --> 00:03:27,280
I'll go back over I'll run MLS again that's gonna once again give you my current working directory but

44
00:03:27,280 --> 00:03:33,520
if I now try to go up one level I see all the files and folders from inside there correctly I can also

45
00:03:33,520 --> 00:03:41,150
try to get everything from my home directory yep that looks good I can do everything from my root directory

46
00:03:41,510 --> 00:03:44,120
and I think you get the idea okay.

47
00:03:44,160 --> 00:03:48,410
Well I'd say that this command and allez is now working out pretty darn well.

48
00:03:48,570 --> 00:03:50,520
So now that we've got this program all put together.

49
00:03:50,550 --> 00:03:53,330
Let's take a pause right here and do a little wrap up in the next video.
