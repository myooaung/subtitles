WEBVTT
1
00:00:00.150 --> 00:00:04.420
We go way back to one of the first videos where we talked about primitive types.

2
00:00:04.470 --> 00:00:06.580
I just gave you a brief overview of them.

3
00:00:06.690 --> 00:00:09.820
We've now covered no string bullion.

4
00:00:09.900 --> 00:00:13.090
We haven't really talked about no or undefined at all.

5
00:00:13.140 --> 00:00:15.000
We've seen undefined once or twice.

6
00:00:15.150 --> 00:00:16.820
Now we're just gonna quickly run through them.

7
00:00:16.830 --> 00:00:22.890
They are very simple as far as primitive types go but they can be confusing for beginners as far as

8
00:00:22.890 --> 00:00:25.660
what what they each do and how they're different.

9
00:00:25.740 --> 00:00:32.760
Both of them represent the idea of nothingness or something not being there or at the lack of a value.

10
00:00:33.030 --> 00:00:34.890
But there is a distinction between them.

11
00:00:34.980 --> 00:00:41.200
So both are primitives and we can just type them in the browser and the console null undefined.

12
00:00:41.250 --> 00:00:45.100
We could make a variable and set it explicitly to them if we wanted to.

13
00:00:45.150 --> 00:00:47.180
But let's talk about the main difference.

14
00:00:47.250 --> 00:00:47.690
No.

15
00:00:47.700 --> 00:00:54.640
Is a value it's a primitive type that is the intentional absence of any value and you assign it yourself.

16
00:00:54.690 --> 00:00:57.630
So you could make a variable and set it to No.

17
00:00:57.660 --> 00:01:03.270
So here's an example of that we might have a variable called logged in user and at the beginning of

18
00:01:03.270 --> 00:01:05.670
our application there is no logged in user.

19
00:01:05.940 --> 00:01:08.460
So you will explicitly set it to No.

20
00:01:08.520 --> 00:01:09.540
You make it nothing.

21
00:01:09.570 --> 00:01:11.040
You're telling javascript.

22
00:01:11.040 --> 00:01:14.840
There is a value here it's just the value of nothing.

23
00:01:14.910 --> 00:01:22.010
And then if someone logs in you could set it to Alan Rickman and then if Alan Rickman logs out recipes

24
00:01:22.470 --> 00:01:23.450
I think he did.

25
00:01:23.470 --> 00:01:24.350
I think he is.

26
00:01:24.540 --> 00:01:25.380
Yes he is.

27
00:01:25.380 --> 00:01:26.800
Rest in Peace Alan.

28
00:01:26.940 --> 00:01:33.960
We could then reset it to normal afterwards so it is the explicit value of nothingness of emptiness.

29
00:01:33.960 --> 00:01:42.600
It's no undefined is different undefined is a value that represents a variable that does not have a

30
00:01:42.600 --> 00:01:44.310
value assigned to it.

31
00:01:44.700 --> 00:01:50.910
So it's kind of semantically annoying to explain but if you think about when we've seen undefined so

32
00:01:50.910 --> 00:01:51.670
far.

33
00:01:51.930 --> 00:01:56.820
If we tried to access a string like L'OrÃ©al square brackets of four we get undefined.

34
00:01:56.820 --> 00:01:58.860
There is nothing defined there.

35
00:01:58.950 --> 00:02:06.900
We don't usually set something to be undefined ourself and technically we can contact you equals undefined.

36
00:02:06.900 --> 00:02:09.310
If we look at you it's undefined.

37
00:02:09.330 --> 00:02:16.800
Normally though undefined is a value we get back from javascript like if we initialize a variable let's

38
00:02:17.280 --> 00:02:21.110
color but we don't give it a value so we declare it.

39
00:02:21.110 --> 00:02:22.740
Sorry we don't initialize it.

40
00:02:23.340 --> 00:02:26.970
If we look at color it exists but the value is undefined.

41
00:02:26.970 --> 00:02:29.010
We never defined a value for it.

42
00:02:29.010 --> 00:02:32.660
Compare that with something like current user.

43
00:02:32.880 --> 00:02:37.570
We could explicitly set that to nothing and then change it later on if needed.

44
00:02:37.590 --> 00:02:40.730
So both of them represent kind of similar concepts.

45
00:02:40.890 --> 00:02:45.510
So we manually or explicitly assign the value of know to a variable.

46
00:02:45.510 --> 00:02:52.050
Again it's the intentional absence of any value when you want something to be empty undefined is not

47
00:02:52.050 --> 00:02:55.250
necessarily saying something is intentionally empty.

48
00:02:55.290 --> 00:03:00.300
It means that there is no defined value and it's nuanced but that is different.

49
00:03:00.360 --> 00:03:03.280
Now if you're confused about this you don't feel super great about it.

50
00:03:03.360 --> 00:03:05.540
You will see undefined all the time.

51
00:03:05.610 --> 00:03:10.500
We've already seen it before as I mentioned trying to access characters that don't exist or indices

52
00:03:10.500 --> 00:03:12.350
that don't exist in a string.

53
00:03:12.390 --> 00:03:15.150
We'll see it when we get to arrays and objects.

54
00:03:15.150 --> 00:03:16.630
It's very common to see.

55
00:03:16.740 --> 00:03:19.420
No it's something you yourself used.

56
00:03:19.440 --> 00:03:25.500
You set something to know and it's not totally uncommon but you won't deal with it as often as you'll

57
00:03:25.500 --> 00:03:27.240
see undefined.

58
00:03:27.240 --> 00:03:31.660
So don't panic about those but those are the last two primitive types we had on our list.

59
00:03:31.710 --> 00:03:37.320
We've now covered numbers a lot about strings a little about billions and a little about normal and

60
00:03:37.320 --> 00:03:38.260
undefined.

61
00:03:38.280 --> 00:03:40.070
Next we're going to boolean land.

62
00:03:40.080 --> 00:03:43.730
We have a lot to talk about as far as adding logic to our applications.
