1
00:00:00,830 --> 00:00:05,570
In the last video it appeared that we saved a product into our product saw Jason File successfully.

2
00:00:05,570 --> 00:00:09,230
Well like I said there's a very subtle bug inside of our request handler right now.

3
00:00:09,830 --> 00:00:14,450
So I want to remind you right here we're getting access to that era's object or we're not actually doing

4
00:00:14,450 --> 00:00:20,120
anything with it previously inside of our off dot J.S. root handler file going to open that up really

5
00:00:20,120 --> 00:00:21,150
quickly.

6
00:00:21,170 --> 00:00:24,160
We had taken the air's object would check to see if it was empty.

7
00:00:24,260 --> 00:00:29,840
And then if it was we sent back the same form and displayed the appropriate errors inside the template.

8
00:00:29,840 --> 00:00:34,280
We should probably make sure that we do the same thing inside of our product creation root handler as

9
00:00:34,280 --> 00:00:34,870
well.

10
00:00:34,910 --> 00:00:38,470
Otherwise doing all this validation stuff is just going to go to waste.

11
00:00:38,480 --> 00:00:43,130
So as soon as we start to display these validation errors like I said we're going to very quickly see

12
00:00:43,130 --> 00:00:46,140
an interesting little problem.

13
00:00:46,160 --> 00:00:46,390
All right.

14
00:00:46,400 --> 00:00:54,380
So right after we declare errors right there I'll say if not errors dot is empty.

15
00:00:54,380 --> 00:00:58,930
So if we do have an error let's return before we tried to create an image or anything like that.

16
00:00:59,240 --> 00:01:03,060
We're going to render the same template we've rendered just a moment ago.

17
00:01:03,240 --> 00:01:05,540
Don't say red dot send.

18
00:01:05,540 --> 00:01:12,790
We want to send back the products new template and remember when we do that we want to tell that template

19
00:01:12,850 --> 00:01:14,270
about all the errors that just occurred.

20
00:01:14,290 --> 00:01:19,980
So we're gonna pass on an object with the errors inside of it.

21
00:01:20,000 --> 00:01:27,720
Now we have to also open up that new template file so I'll find View's admin products new DOT J.S..

22
00:01:27,950 --> 00:01:30,250
We've already received that Aras object.

23
00:01:30,280 --> 00:01:34,880
It's now we have to use the get error helper function to reach into that and print out the appropriate

24
00:01:34,880 --> 00:01:35,980
errors inside of our form

25
00:01:39,770 --> 00:01:47,080
so I'm going to do a string interpolation here so a dollar sign curly braces get error passing our errors

26
00:01:47,620 --> 00:01:53,280
and then right here I want to print out whoops title I'll copy that and it for the second one I want

27
00:01:53,280 --> 00:01:56,020
to do Bryce okay.

28
00:01:56,050 --> 00:01:57,470
So let's now save this.

29
00:01:57,540 --> 00:02:02,130
We're going to attempt to upload an image again and this is where we're going to see a really interesting

30
00:02:02,190 --> 00:02:04,280
result.

31
00:02:04,440 --> 00:02:09,720
I'm gonna go back to my form I'm going to enter in a valid title.

32
00:02:09,750 --> 00:02:14,850
Remember we said that titles had to be had to be between five and 20 characters.

33
00:02:14,850 --> 00:02:22,340
So I can enter in something like a special code and then our price has to be a number at least one.

34
00:02:22,390 --> 00:02:29,660
It's all put in something like 20 and then I'm going to select one these random images and hit submit.

35
00:02:29,790 --> 00:02:32,770
And as soon as I do so I'm going to see some errors here.

36
00:02:32,790 --> 00:02:35,200
So this is kind of unexpected.

37
00:02:35,280 --> 00:02:42,690
We just saw a moment ago just a moment ago we ran this same form submission and we were able to create

38
00:02:42,690 --> 00:02:48,570
a product and inside of this product such as on file I clearly see a title and a price without a doubt

39
00:02:48,570 --> 00:02:57,000
that information is inside of here however as soon as we added in the validation check this ear's object

40
00:02:57,060 --> 00:03:02,430
seems to think that we have not provided the correct values here.

41
00:03:02,430 --> 00:03:06,150
It seems to think that I didn't give a title that is between 5 and 40 characters.

42
00:03:06,150 --> 00:03:10,230
And it seems to think that I didn't give a number that is greater than one as well.

43
00:03:10,470 --> 00:03:14,070
Like I said something is just not quite right here.

44
00:03:14,080 --> 00:03:18,730
The other thing I want to point out that is just a little bit mysterious is that if you look carefully

45
00:03:18,730 --> 00:03:23,410
at the product Jace on file and you look really carefully at price right here.

46
00:03:23,410 --> 00:03:30,040
You'll notice that price has been stored inside of our Jason File as a string but we specifically said

47
00:03:30,070 --> 00:03:37,060
that we wanted our price to be a float really a number whenever we story number inside of Jason or inside

48
00:03:37,060 --> 00:03:42,010
of a Jason File in this case the numbers should show up simply as a number and not as a string like

49
00:03:42,010 --> 00:03:43,300
that.

50
00:03:43,340 --> 00:03:45,870
It's like I said something is just not quite right here.

51
00:03:45,880 --> 00:03:48,370
So we need to figure out what is going on.

52
00:03:48,410 --> 00:03:49,900
So this is a very subtle bug.

53
00:03:49,940 --> 00:03:55,210
I'm just going to tell you exactly what is going on if I take a look at my post request handler again

54
00:03:55,750 --> 00:03:58,880
we've got require title and require price right here.

55
00:03:58,990 --> 00:04:01,120
So we are running our validation step right there.

56
00:04:01,120 --> 00:04:05,620
And then in the next step we are calling upload single with image.

57
00:04:05,620 --> 00:04:07,990
Now this is where things get a little bit confusing.

58
00:04:08,050 --> 00:04:13,600
Remember we made a really big point a couple of videos ago that inside of our index dot J.S. file we

59
00:04:13,600 --> 00:04:19,300
had wired up that body parser with your URL encoded to pass the contents of a post request specifically

60
00:04:19,300 --> 00:04:26,050
the body and give us access to that information inside of req dot body but we said that now that we

61
00:04:26,050 --> 00:04:30,030
are doing this image upload we have a very different encoding type on our form.

62
00:04:30,070 --> 00:04:34,750
And so this middle right here middleware that thing no longer applies.

63
00:04:34,750 --> 00:04:37,640
It's no longer running for our incoming request.

64
00:04:38,200 --> 00:04:44,950
So that thing is no longer passing the contents of the post request and throwing it into a wrecked body

65
00:04:47,010 --> 00:04:52,560
so then that very quick quickly begs the question how in that case are we still able to reach in to

66
00:04:52,560 --> 00:04:56,250
wrecked our body right here and still get title and price.

67
00:04:56,250 --> 00:05:02,670
The reason is if we look very carefully at the multi-year documentation and remember we are making use

68
00:05:02,670 --> 00:05:06,880
of multi-year to process this incoming post request that has a file inside of it.

69
00:05:06,930 --> 00:05:11,820
If you take a very close look at the documentation you'll notice that it says that whenever we make

70
00:05:11,820 --> 00:05:16,770
use of melter like as we are right here at this middleware it is not only going to take care of any

71
00:05:16,770 --> 00:05:22,020
images or any files that have been uploaded but it's also going to pass all the different text fields

72
00:05:22,320 --> 00:05:25,130
inside of the post requests body as well.

73
00:05:25,920 --> 00:05:32,340
So in other words this line of code right here this middleware that is what is responsible now or handling

74
00:05:33,310 --> 00:05:37,530
record dot body and getting our title in price inside.

75
00:05:37,580 --> 00:05:44,190
So how does that result in the error that we currently have while the problem is the order of our Middleware

76
00:05:44,190 --> 00:05:49,970
is the order in which our middleware functions are executed goes in a left to right order.

77
00:05:50,000 --> 00:05:55,080
So right now when we get an incoming post request to admin products new we're going to first take the

78
00:05:55,080 --> 00:06:01,710
request and throw it into require title usually for all of our other form submissions by the time a

79
00:06:01,710 --> 00:06:03,900
request gets into our request handler.

80
00:06:03,900 --> 00:06:09,380
It has already been subjected to our index not J.S. middleware as the ones we wired up right here.

81
00:06:09,450 --> 00:06:13,740
So for all of the other post request handlers before the request shows up and goes through our different

82
00:06:13,740 --> 00:06:20,070
middleware that request has already flown through expressed out static body parser hooky session and

83
00:06:20,070 --> 00:06:20,420
so on.

84
00:06:21,830 --> 00:06:27,500
So in all of our other middle where's the request shows up having already been passed by body parser.

85
00:06:27,500 --> 00:06:33,940
But that is no longer the case here so when our request shows up for this validator of required title

86
00:06:34,240 --> 00:06:38,970
and then require price nothing has passed the body of the incoming post request.

87
00:06:38,980 --> 00:06:46,030
So there is no title or price property available on rect body for required title and require price to

88
00:06:46,030 --> 00:06:48,010
actually operate upon.

89
00:06:48,010 --> 00:06:53,160
And so as far as these validators are concerned we didn't provide a title we didn't provide a price

90
00:06:53,170 --> 00:06:59,380
they don't exist yet on the request and that is why we end up seeing the validation errors over here.

91
00:06:59,530 --> 00:07:08,190
As far as that validation stuff is concerned Nope title was provided no price was provided at all so

92
00:07:08,240 --> 00:07:12,160
in order to fix this all we have to do is reorder our middleware.

93
00:07:12,500 --> 00:07:19,530
So we're going to take a blow but single with image we're gonna cut it and put it right before our different

94
00:07:19,530 --> 00:07:21,780
validators.

95
00:07:21,790 --> 00:07:27,820
So now in our post request comes in it's going to first get past we're going to get access to our image

96
00:07:28,240 --> 00:07:35,140
and wrecked out body and through that's our title in our price then the request is going to flow through

97
00:07:35,140 --> 00:07:41,800
our validators of required title and require price and so those two validators are now going to have

98
00:07:41,800 --> 00:07:43,370
access to the title and price.

99
00:07:43,410 --> 00:07:48,470
Now they can successfully check to see if there are any errors now in this case.

100
00:07:48,480 --> 00:07:50,990
Hopefully it's going to see OK there's a title in the price.

101
00:07:51,000 --> 00:07:52,560
Hopefully they're going to be valid.

102
00:07:52,650 --> 00:07:56,700
And so hopefully those validators are not going to say that there are any validation error and we will

103
00:07:56,700 --> 00:07:58,030
get past this if statement.

104
00:07:58,030 --> 00:07:59,730
Now yeah.

105
00:07:59,780 --> 00:08:04,500
So let's now save this again in case you were skipping through this video I just want to point out that

106
00:08:04,500 --> 00:08:11,180
we swapped the middleware right there going to go back over I'm going to refresh the forum enter in

107
00:08:11,220 --> 00:08:19,350
a valid title like a special Cote and a valid price of 10 throwing an image hit submit.

108
00:08:19,350 --> 00:08:22,480
And now I am able to submit my form.

109
00:08:22,610 --> 00:08:27,380
So again I know this is a very subtle and small bug but the lesson here is that our middle peers operate

110
00:08:27,410 --> 00:08:32,630
in a very specific order and because we're now submitting a different type of form and a different Middleware

111
00:08:32,630 --> 00:08:37,460
is responsible for passing it we have to be very aware of the order in which our Middleware is executes

112
00:08:38,790 --> 00:08:39,040
okay.

113
00:08:39,080 --> 00:08:42,400
So overall that's pretty much it around our image upload stuff.

114
00:08:42,400 --> 00:08:45,260
We are now able to receive an image.

115
00:08:45,340 --> 00:08:52,450
We're doing some validation on the form we take the image convert it to a base64 string create the product

116
00:08:52,450 --> 00:08:53,820
inside of our products repo.

117
00:08:53,980 --> 00:08:54,780
And that's pretty much it.

118
00:08:54,790 --> 00:08:56,200
We're good to go.

119
00:08:56,380 --> 00:08:58,640
Let's save right here take a quick pause.

120
00:08:58,640 --> 00:09:03,720
When we come back the next video we're going to add in a little bit of styling to the form that we just

121
00:09:03,720 --> 00:09:04,690
put together.

122
00:09:04,800 --> 00:09:10,890
So just like before I'm going to give you a zip file that has a s identical version of new J.S. with

123
00:09:10,890 --> 00:09:12,790
a lot of additional markup inside of it.

124
00:09:12,960 --> 00:09:17,400
And then after that we're going to start to work on our ability to list out all the different products

125
00:09:17,430 --> 00:09:18,920
that have been created inside of our app.
