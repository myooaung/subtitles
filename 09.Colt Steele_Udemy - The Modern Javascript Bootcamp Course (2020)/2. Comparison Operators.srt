1
00:00:00,390 --> 00:00:00,680
All right.

2
00:00:00,750 --> 00:00:01,970
Let's jump right in.

3
00:00:01,980 --> 00:00:07,830
We're gonna start with comparisons being able to compare values is really important when making decisions

4
00:00:08,310 --> 00:00:14,130
as a really simple example something like The New York Times or any Web site where you get a certain

5
00:00:14,130 --> 00:00:19,230
number of free articles a month they track the number of articles you've read each month when you're

6
00:00:19,230 --> 00:00:23,900
not logged in and then they have a maximum whether it's 10 or five they're going to check.

7
00:00:24,030 --> 00:00:25,840
Has this user seen more.

8
00:00:25,920 --> 00:00:29,790
Have they seen fewer than the allotted or the allowed number.

9
00:00:29,790 --> 00:00:35,970
So that's a comparison where checking is one value less than another value other comparisons that are

10
00:00:35,970 --> 00:00:41,640
really common would be things like equality checking to see if something equals something else.

11
00:00:41,640 --> 00:00:46,450
So this is a list of the different comparison operations we have in JavaScript.

12
00:00:46,560 --> 00:00:52,350
There's quite a few but there's a lot of overlap and we're going to skip over the bottom for those all

13
00:00:52,350 --> 00:00:58,260
have to do with equality not equality strict equality strict non equality.

14
00:00:58,260 --> 00:01:03,690
We're just going to focus on the first for greater than less than greater than or equal to and less

15
00:01:03,690 --> 00:01:05,540
than or equal to.

16
00:01:05,610 --> 00:01:06,880
So let's play around with them.

17
00:01:06,980 --> 00:01:10,970
I'll show you a couple of examples over here in my console.

18
00:01:11,010 --> 00:01:16,490
Let's try something like is negative to greater than one.

19
00:01:16,860 --> 00:01:21,310
You can see we get a boolean back a false boolean value.

20
00:01:21,450 --> 00:01:23,690
Remember billions are just two options.

21
00:01:23,700 --> 00:01:30,900
True or false every single one of these operators we see here all of these on this page return true

22
00:01:30,900 --> 00:01:33,660
or false one or the other.

23
00:01:33,810 --> 00:01:41,690
So that is greater than we can also do less than we have things like is 10 less than 9 9 9 9.

24
00:01:41,730 --> 00:01:43,890
Without that period there we go.

25
00:01:43,890 --> 00:01:44,940
That is true.

26
00:01:45,030 --> 00:01:48,000
10 is smaller than 9 9 9 9.

27
00:01:48,060 --> 00:01:52,540
We also have things like less than or equal to and greater than or equal to.

28
00:01:52,680 --> 00:01:56,770
So we could do is to greater than or equal to two.

29
00:01:56,790 --> 00:02:00,360
That's true is to greater than or equal to 5.

30
00:02:00,360 --> 00:02:03,950
That's false to greater than or equal to 1.

31
00:02:04,110 --> 00:02:08,420
That is also true and less than or equal to finally.

32
00:02:08,790 --> 00:02:11,550
Hopefully these are relatively straightforward at this point.

33
00:02:11,760 --> 00:02:17,580
Doesn't seem that useful on its own to just do something like fifty five point one less than or equal

34
00:02:17,580 --> 00:02:19,980
to fifty five point five.

35
00:02:20,010 --> 00:02:23,670
We know that we're typing it but just to let you know where we're going.

36
00:02:23,670 --> 00:02:25,670
We're learning these operators first.

37
00:02:25,740 --> 00:02:28,380
Then we'll see how we use them to make decisions.

38
00:02:28,380 --> 00:02:33,670
Right now we're not deciding anything we're not changing the code that runs based off of these.

39
00:02:33,720 --> 00:02:36,800
We're simply evaluating these to be true or false.

40
00:02:36,810 --> 00:02:42,480
So most of the time when we do comparisons involving less than or greater than or less than or equal

41
00:02:42,480 --> 00:02:48,240
to or greater than or equal to we're working with numbers in some form it might be the length of a string

42
00:02:48,660 --> 00:02:49,620
might be something like this.

43
00:02:49,680 --> 00:02:53,910
Hello Dot length.

44
00:02:53,910 --> 00:02:57,990
Greater than or equal to Hello Dot length

45
00:03:01,020 --> 00:03:06,370
usually those would be variables but you can see this is false because this is actually larger there's

46
00:03:06,390 --> 00:03:09,290
an exclamation point that length is longer than this one.

47
00:03:09,420 --> 00:03:13,490
But the point is we're not usually just directly typing hardcoded values.

48
00:03:13,560 --> 00:03:15,170
We know the answer already.

49
00:03:15,240 --> 00:03:19,890
We're usually working with variables things that are coming from a place that we're not controlling

50
00:03:19,950 --> 00:03:23,250
where we don't exactly know the values.

51
00:03:23,250 --> 00:03:29,190
So anyway numbers are really common when we're dealing with greater than and less than we can compare

52
00:03:29,190 --> 00:03:30,320
strings.

53
00:03:30,540 --> 00:03:36,270
And it's it's not that common and you'll see why in a moment the way that strings are ordered it's not

54
00:03:36,300 --> 00:03:37,650
always the most intuitive.

55
00:03:38,040 --> 00:03:39,850
But I can give you a quick example.

56
00:03:39,930 --> 00:03:43,730
Let's start with lowercase a and compare it to uppercase a.

57
00:03:44,670 --> 00:03:52,420
So from this comparison we can see uppercase A is less than lowercase a as you can see here.

58
00:03:52,440 --> 00:03:54,590
Now what about uppercase B.

59
00:03:54,750 --> 00:03:57,750
How does that compare to lowercase a.

60
00:03:58,380 --> 00:04:06,480
So uppercase B comes before lowercase a which is not really the standard alphabetical order most people

61
00:04:06,750 --> 00:04:07,670
would assume.

62
00:04:08,220 --> 00:04:13,440
So all uppercase letters are less than any lowercase letters.

63
00:04:13,680 --> 00:04:21,150
Then we also have confusing things like dollar signs and symbols and punctuation and accent marks spaces.

64
00:04:21,150 --> 00:04:27,030
If you're curious how it works what the algorithm is or what the comparison is actually behind the scenes.

65
00:04:27,030 --> 00:04:32,940
It has to do with something called Unicode all that you need to know is that every character in JavaScript

66
00:04:33,090 --> 00:04:40,530
when it's in a string has a unicode representation it has a number behind it and you can see them here.

67
00:04:40,650 --> 00:04:46,360
There's a long long article on Wikipedia that details all of the different codes.

68
00:04:46,560 --> 00:04:53,790
Per each letter character symbol so you can see for example the very first code very first character

69
00:04:53,790 --> 00:04:55,120
is zero.

70
00:04:55,230 --> 00:04:59,620
And if we look at two other let's go with hash sign and dollar sign.

71
00:04:59,640 --> 00:05:02,450
We can see the hash sign comes before the dollar sign.

72
00:05:02,520 --> 00:05:07,850
So it should stand to reason that hash sign is less than dollar sign.

73
00:05:08,520 --> 00:05:13,640
And that's true so this is not something you need to know and memorize.

74
00:05:13,640 --> 00:05:18,980
I just wanted to explain how it works because I've seen a lot of students just assume it's all alphabetical

75
00:05:18,980 --> 00:05:22,810
order which would make sense if we were strictly dealing with letters.

76
00:05:22,820 --> 00:05:27,470
But when we deal with a whole bunch of other characters symbols and accents and punctuation it's more

77
00:05:27,470 --> 00:05:28,660
complicated.

78
00:05:28,850 --> 00:05:34,490
So comparisons at least the ones I've shown so far are usually done between numbers but we have this

79
00:05:34,490 --> 00:05:39,070
whole other group that we haven't talked about around equality and non equality.

80
00:05:39,140 --> 00:05:40,240
That's coming up next.

81
00:05:40,280 --> 00:05:40,870
I'll see you then.
