WEBVTT
1
00:00:00.710 --> 00:00:04.850
The last video we wrote out a little bit of code to get a simple rectangle to show up on the screen

2
00:00:05.420 --> 00:00:09.200
in this video I want to go over some of the code that we wrote just a little bit more and clarify a

3
00:00:09.200 --> 00:00:10.030
couple of points.

4
00:00:10.370 --> 00:00:14.060
Once we get this final clarification of the way it will then start to work much more quickly on the

5
00:00:14.060 --> 00:00:18.470
application that we're trying to build back inside of my index not just file.

6
00:00:18.470 --> 00:00:22.250
The first thing I want to point out is where we had created that render object.

7
00:00:22.250 --> 00:00:28.310
As I mentioned we provide the element property and this tells matter J.S. where we want to show are

8
00:00:28.550 --> 00:00:32.050
essentially drawing of the world inside the DOM.

9
00:00:32.270 --> 00:00:38.300
If we open up our element Inspector inside of our development tools we can see that this representation

10
00:00:38.300 --> 00:00:45.140
the world or this drawing is a type of HDMI element called a canvas a canvas element is for lack of

11
00:00:45.140 --> 00:00:51.600
a better term a canvas of sorts that we can use to draw any kind of arbitrary shape that we want.

12
00:00:52.590 --> 00:00:58.440
Usually we might use some kind of third party library like canvas or something like matter J us to work

13
00:00:58.440 --> 00:01:03.410
with canvas elements we can work with canvas elements directly using some browser based API.

14
00:01:03.440 --> 00:01:05.660
But they are just a little bit tedious.

15
00:01:05.850 --> 00:01:11.220
So usually anytime we want to use a canvas we will commonly make use of a third party library like matter

16
00:01:11.220 --> 00:01:18.280
J.S. or something similar when we created the canvas we assigned a height and weight to it.

17
00:01:18.340 --> 00:01:22.900
So if we ever want to change the height or the width of that canvas element we could easily modify it

18
00:01:22.900 --> 00:01:23.840
right here.

19
00:01:23.860 --> 00:01:28.450
So for example I could decrease the width to 400 and if I save and refresh.

20
00:01:28.450 --> 00:01:32.750
Now this thing is going to be half as wide.

21
00:01:32.880 --> 00:01:38.750
The first half this application we're going to just show a canvas element of a hundred by six hundred.

22
00:01:38.970 --> 00:01:45.600
But if we have our final product like our actual maize show up in just that 800 by 600 frame then it's

23
00:01:45.600 --> 00:01:50.880
not going to be that great because if some user tries to play our maze game on a really really big monitor

24
00:01:51.240 --> 00:01:54.520
the maze is going to appear to be really really small to them.

25
00:01:54.640 --> 00:01:59.760
So we're going to eventually add in some code to make sure that our canvas element spans the entire

26
00:01:59.760 --> 00:02:02.640
width of the screen and the entire height as well.

27
00:02:02.640 --> 00:02:07.240
So it's going to play equally as well on a small screen as a large one.

28
00:02:07.260 --> 00:02:11.200
We're going to worry about that later on okay.

29
00:02:11.250 --> 00:02:14.070
So back over here just a couple of more things I want to point out.

30
00:02:14.190 --> 00:02:19.760
Down at the bottom we use that bodies object to create a new Rectangle when we created the rectangle.

31
00:02:19.760 --> 00:02:25.310
We assign it to the variable shape and then had a second line of code to add it to the world object

32
00:02:26.150 --> 00:02:30.530
just creating a shape or creating a rectangle doesn't make it show up on the screen.

33
00:02:30.560 --> 00:02:37.640
So for example if I comment out the world dot add statement and then refresh well nothing appears whatsoever

34
00:02:38.420 --> 00:02:43.820
so we can create as many shapes as we want but they all have to eventually be added to our world object

35
00:02:44.060 --> 00:02:45.650
in order to get them to actually show up.

36
00:02:46.830 --> 00:02:52.110
I want to show you something kind of interesting around that world object as well several times as we

37
00:02:52.110 --> 00:02:53.390
are writing out this application.

38
00:02:53.400 --> 00:02:58.790
I would encourage you on your own to open up your console and print out the world variable.

39
00:02:58.840 --> 00:03:02.850
It's this world variable is the same one that we have created back right here.

40
00:03:02.850 --> 00:03:07.080
While technically up here but the same one we are referring to right here.

41
00:03:07.080 --> 00:03:12.210
So as I've mentioned this world variable contains a representation of all the different shapes inside

42
00:03:12.420 --> 00:03:19.250
of our world if we print out the world variable we can then expand it and see that it has several different

43
00:03:19.250 --> 00:03:20.630
properties.

44
00:03:20.630 --> 00:03:22.200
One property in particular.

45
00:03:22.250 --> 00:03:23.810
Well let me refresh sorry really quick.

46
00:03:23.810 --> 00:03:25.810
I need to make sure the shape is visible.

47
00:03:25.940 --> 00:03:31.970
So once the shape is very visible I'll look at world again and then look at the body's property as soon

48
00:03:31.970 --> 00:03:35.270
as I do so I'll see that there's a single object inside there.

49
00:03:35.270 --> 00:03:39.100
This is the object that represents this rectangle shape.

50
00:03:39.260 --> 00:03:44.270
It has a lot of different properties in it that describe its physical representation in the world.

51
00:03:44.270 --> 00:03:50.450
So for example it has an angular velocity which is how quickly this thing is rotating and which direction

52
00:03:50.480 --> 00:03:51.870
it is rotating as well.

53
00:03:52.630 --> 00:03:55.340
It also has some other properties such as position.

54
00:03:55.450 --> 00:04:00.910
So that is the physical position in the world in x and y coordinates and then it also has a velocity

55
00:04:00.910 --> 00:04:05.800
property that describes how quickly this thing is moving to the left or right or up and down

56
00:04:09.170 --> 00:04:14.220
OK one or two more things here when we created our rectangle.

57
00:04:14.220 --> 00:04:17.620
We passed in an options object of is static true.

58
00:04:17.850 --> 00:04:23.940
That means that we want to show the shape and we don't want it to ever move under any circumstance.

59
00:04:23.940 --> 00:04:29.910
If we remove that property and then save and refresh we'll see that the shape then falls down to the

60
00:04:29.910 --> 00:04:30.440
bottom.

61
00:04:30.600 --> 00:04:34.860
And every time I refresh it starts back at the same spot and falls again.

62
00:04:34.860 --> 00:04:38.350
So by default gravity is enabled in our simulation.

63
00:04:38.400 --> 00:04:43.050
So gravity is going to take that shape and automatically accelerate it downwards.

64
00:04:43.050 --> 00:04:46.370
So it is the static is static true property right here.

65
00:04:46.380 --> 00:04:49.740
That's going to make the shape stay exactly where it is.

66
00:04:49.740 --> 00:04:52.860
So if I say it again now the shape stays right there.

67
00:04:53.910 --> 00:04:58.230
Lastly I want to mention is some the different dimensions or values we are passing in when we are creating

68
00:04:58.230 --> 00:04:59.530
the rectangle.

69
00:04:59.640 --> 00:05:06.240
The first two numbers represent the position in the world do you place this rectangle at these dimensions

70
00:05:06.570 --> 00:05:14.120
are measured from the top left corner to the center of the square just to make sure that's really clear

71
00:05:15.340 --> 00:05:22.980
you top left corner of our canvas element is the 0 0 point of our entire world our X axes or the extraction

72
00:05:23.190 --> 00:05:27.450
runs from left to right in the y axis goes up to down.

73
00:05:27.540 --> 00:05:31.640
So when we say place a shape or a rectangle at two hundred two hundred.

74
00:05:31.650 --> 00:05:34.410
That means start right there on the top left corner.

75
00:05:34.560 --> 00:05:41.940
Go over two hundred units and then down and see me go over 200 units and down two hundred units.

76
00:05:42.030 --> 00:05:48.970
And that is where the center of our rectangle should be we can verify that by trying to do the same

77
00:05:48.970 --> 00:05:52.810
kind of rectangle but instead placing it at 0 0.

78
00:05:52.810 --> 00:05:58.990
If we do so then I would expect to see the rectangle or the center of the rectangle based on like right

79
00:05:59.260 --> 00:06:00.400
there.

80
00:06:00.400 --> 00:06:04.770
So we're just going to see the bottom right corner of the triangle or seeing the rectangle now.

81
00:06:04.930 --> 00:06:06.010
The final refresh.

82
00:06:06.010 --> 00:06:09.040
Yep sure enough I just see the bottom right corner.

83
00:06:09.170 --> 00:06:14.600
So as you would probably guess the other two numbers inside of here the 50 and 50 are how why do we

84
00:06:14.600 --> 00:06:17.890
want the rectangle to be and how tall it should be.

85
00:06:18.050 --> 00:06:24.290
So I can change the width to 100 and now this thing is going to be significantly wider and I can change

86
00:06:24.290 --> 00:06:30.540
the height to 200 and it'll be significantly taller okay.

87
00:06:30.580 --> 00:06:31.820
That's pretty much it.

88
00:06:31.840 --> 00:06:37.960
That is some of the very basics of matter Jesus essentially once again everything that we wrote down

89
00:06:37.960 --> 00:06:42.730
to about line 14 or so is all boilerplate code and we're not going to really change that stuff very

90
00:06:42.730 --> 00:06:46.190
often in order to get some more functionality inside of our app.

91
00:06:46.210 --> 00:06:52.240
We're going to be creating a variety of different shapes or rectangles or circles or whatever else and

92
00:06:52.240 --> 00:06:54.140
then adding them all to our world.

93
00:06:54.250 --> 00:06:58.990
That is the primary means so we get some level of functionality inside of our matter app and that's

94
00:06:58.990 --> 00:07:03.580
pretty much exactly what we're going to be doing for the vast majority of our maze application as we

95
00:07:03.580 --> 00:07:05.700
start to put it together.

96
00:07:05.720 --> 00:07:07.770
Okay so now that we've got a better idea of what's going on.

97
00:07:07.770 --> 00:07:10.620
Another quick pause and we'll start writing some our code in the next video.
