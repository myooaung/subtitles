WEBVTT
1
00:00:00.910 --> 00:00:05.800
As I mentioned many times in this video we're going to take a look at using a outside third party testing

2
00:00:05.830 --> 00:00:08.460
library to run the test inside of our project.

3
00:00:08.490 --> 00:00:11.210
We're going to be taking a look at MOCA J.S. Moka.

4
00:00:11.210 --> 00:00:15.350
James is one of the most popular by far testing frameworks out there.

5
00:00:15.400 --> 00:00:18.780
You're going to see a tremendous number of different projects using it.

6
00:00:19.030 --> 00:00:23.740
If you want to you can take a look at the MOCA Jazz dot org documentation so you can come here.

7
00:00:23.740 --> 00:00:24.610
Go on down.

8
00:00:24.610 --> 00:00:27.500
You can see a lot of different features listed inside of here.

9
00:00:27.490 --> 00:00:31.780
Now as I mentioned back a little bit ago when I said that we're going to write our own testing framework

10
00:00:31.810 --> 00:00:37.630
that works like 80 percent of time MOCA is incredibly full featured and it's got a ton of different

11
00:00:37.630 --> 00:00:39.250
stuff packed into it.

12
00:00:39.340 --> 00:00:44.560
But at the end the day in reality to be honest with you unless you're like a super advanced tester you're

13
00:00:44.560 --> 00:00:47.230
not really going to use the vast majority of this stuff.

14
00:00:47.230 --> 00:00:53.210
Instead you're going to use kind of a very small subset so in this video we're going to install Moka

15
00:00:53.240 --> 00:00:54.390
onto our machine.

16
00:00:54.410 --> 00:00:56.620
We're then going to use it to run our test file.

17
00:00:56.750 --> 00:00:58.300
And here's the big surprise.

18
00:00:58.310 --> 00:00:59.850
Here's the real fun surprise.

19
00:00:59.930 --> 00:01:05.930
We're going to run the same test file that we have been working on so far with MOCA and it's going to

20
00:01:05.930 --> 00:01:11.240
work perfectly with MOCA after we change just two words.

21
00:01:11.240 --> 00:01:15.860
So in other words the entire structure everything I've shown you so far inside of here is just about

22
00:01:16.040 --> 00:01:17.860
perfect to work with MOCA.

23
00:01:18.170 --> 00:01:22.390
But we did it from scratch using like nothing but that function right there.

24
00:01:22.400 --> 00:01:27.800
So again the whole point here is really to just show you you don't need a fancy setup to do any kind

25
00:01:27.800 --> 00:01:28.460
of testing.

26
00:01:28.550 --> 00:01:33.260
You can throw this stuff together yourself and have some really great setup that works just for your

27
00:01:33.290 --> 00:01:36.980
custom project and you will know exactly how it behaves.

28
00:01:37.000 --> 00:01:37.220
OK.

29
00:01:37.250 --> 00:01:38.550
So anyways let's get to it.

30
00:01:38.570 --> 00:01:43.220
The first thing we're going to do is install Moka onto our local machine and we're going to install

31
00:01:43.280 --> 00:01:44.940
MOCA globally.

32
00:01:45.050 --> 00:01:51.530
You can install MOCA globally onto your machine by running npm install dash G MOCA.

33
00:01:51.540 --> 00:01:56.270
Now when you run this command if you are on a Mac OS if you run the command and you see something it

34
00:01:56.270 --> 00:02:03.380
says e access perm or something like that or air permissions or anything around that no problem.

35
00:02:03.410 --> 00:02:08.580
I want you to do a Google sort search for NPM global install permission denied.

36
00:02:08.720 --> 00:02:12.880
And one of the first results you will see is docs NPM J dot com.

37
00:02:12.920 --> 00:02:18.080
So again if you're on NPM or C if you're on Mac OS and you see an error message like EA Access or something

38
00:02:18.080 --> 00:02:24.460
like that you can go through this series of steps and it should fix up the air for you if you go through

39
00:02:24.460 --> 00:02:30.250
the steps and it still doesn't work the other way that you can get access to Moka is by running NPCs

40
00:02:30.370 --> 00:02:31.920
Moka as well.

41
00:02:32.110 --> 00:02:36.390
This is going to run Moka directly without first installing it onto your machine.

42
00:02:36.390 --> 00:02:36.570
OK.

43
00:02:36.580 --> 00:02:45.580
Anyways I can go ahead and install it globally onto my machine so it'll take just a second here.

44
00:02:45.600 --> 00:02:46.020
There we go.

45
00:02:46.740 --> 00:02:53.610
So now I should be able to do a mocha dash B whoops version.

46
00:02:53.620 --> 00:02:58.720
There we go the mocha is a command line tool that we can use to execute all the different tests inside

47
00:02:58.730 --> 00:03:01.470
of our project to run the thing we would normally do.

48
00:03:01.510 --> 00:03:03.700
Mochae And then the name of our test file.

49
00:03:03.770 --> 00:03:06.810
So mocha index dot test dot Jesus.

50
00:03:06.920 --> 00:03:11.300
But before we do we have to massage the code inside of our index to test out has filed just a little

51
00:03:11.300 --> 00:03:12.040
bit.

52
00:03:12.050 --> 00:03:17.210
Remember I told you we really only have to change two words to make our test work perfectly with mocha

53
00:03:18.440 --> 00:03:24.230
gonna flip back over there and to get our test file up and running in 100 percent compliance with mocha.

54
00:03:24.260 --> 00:03:25.800
Here's what we're going to do.

55
00:03:25.880 --> 00:03:27.560
We're gonna first delete the test function.

56
00:03:27.560 --> 00:03:31.880
We can technically leave it here if you want it just like commented out or heck you don't even have

57
00:03:31.880 --> 00:03:34.010
to communist out to be honest if you don't want to.

58
00:03:34.060 --> 00:03:38.050
I'm going to remove it just to prove that you know we don't need it once we're using Boca.

59
00:03:38.210 --> 00:03:40.400
And then here's the two words we're going to change.

60
00:03:40.400 --> 00:03:45.380
Instead of test right here we're going to say it and then a test right here.

61
00:03:45.400 --> 00:03:48.750
We're gonna say it and that's all we have to do.

62
00:03:48.820 --> 00:03:54.180
Our file is now 100 percent compliant to be used with mocha.

63
00:03:54.200 --> 00:03:56.780
Now we can go back over to our command line.

64
00:03:56.780 --> 00:04:04.470
We can run it mocha index test dot J.S. and as soon as we do we're going to get a really big test report

65
00:04:04.950 --> 00:04:06.810
something like this right here.

66
00:04:06.840 --> 00:04:12.180
So this is the reporter coming from mocha a reporter something that's gonna take all the results of

67
00:04:12.180 --> 00:04:17.310
all the different tests and printed up in a nice little report for you to see at your terminal so we'll

68
00:04:17.310 --> 00:04:22.290
see some output very similar to what we've just had a moment ago when we were running our tester so

69
00:04:22.290 --> 00:04:26.580
we can see these descriptions of the different tests we can see that we have one test passing of one

70
00:04:26.580 --> 00:04:31.800
failing we can see that we tried to run the map function set of tests and an error occurred during that.

71
00:04:31.890 --> 00:04:37.200
Just so you know I still have an error inside of my implementation I still have the seven right there.

72
00:04:37.440 --> 00:04:44.500
If you change that back to six like so then save the file and go back over to a terminal we can run

73
00:04:44.500 --> 00:04:51.710
that again and we'll see the test report is a lot happier than we had previously OK.

74
00:04:51.740 --> 00:04:56.480
So again the whole point here and I apologize for repeating this a billion times you don't have to use

75
00:04:56.480 --> 00:04:57.050
Moka.

76
00:04:57.050 --> 00:05:01.250
You don't have to use just if you've heard just you don't have to use Jasmine you don't have to use

77
00:05:01.910 --> 00:05:06.470
karma all these other testing frameworks you don't really have to use you can put together something

78
00:05:06.500 --> 00:05:13.540
on your own that's going to work just as well and work in like 80 percent of all cases that really is

79
00:05:13.570 --> 00:05:19.030
all we're going to discuss around Moka for right now what we're going to take a quick pause we're going

80
00:05:19.030 --> 00:05:24.600
to work on taking a previous project in the next video that we built earlier on INSIDE THIS COURSE AND

81
00:05:24.610 --> 00:05:29.740
WE'RE GOING TO WRITE SOME TESTS around it using Moka and then after that we're going to start to rip

82
00:05:29.740 --> 00:05:34.470
MOCA out and we're going to write our own custom testing framework that's going to work.

83
00:05:34.480 --> 00:05:40.720
Like I said just about everywhere that MOCA is as well so great pause and we'll start testing that thing

84
00:05:40.810 --> 00:05:41.560
in the next video.
