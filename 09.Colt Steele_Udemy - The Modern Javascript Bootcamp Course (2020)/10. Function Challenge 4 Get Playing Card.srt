1
00:00:00,240 --> 00:00:01,960
Next up more practice.

2
00:00:02,130 --> 00:00:07,350
Let's write a function called Get card and get card is going to accept no arguments.

3
00:00:07,350 --> 00:00:13,170
We don't pass anything in and it will return an object representing a playing card an object that has

4
00:00:13,170 --> 00:00:19,480
a value like K for King or two for two and then a suit.

5
00:00:19,680 --> 00:00:22,740
Clubs diamonds hearts or spades.

6
00:00:23,100 --> 00:00:27,120
So all you need to do is pick one of these random values.

7
00:00:27,120 --> 00:00:29,310
One two three four five six seven eight nine ten.

8
00:00:29,310 --> 00:00:33,120
Jack queen king ace and you can just use letters there.

9
00:00:33,120 --> 00:00:35,060
So return a string here.

10
00:00:35,250 --> 00:00:42,120
So we'll be working with strings like the string one string A for value and then pick a random suit

11
00:00:42,630 --> 00:00:44,640
clubs spades hearts diamonds.

12
00:00:44,730 --> 00:00:49,730
Pick one of those and you return an object that has the key of value in the key of suit.

13
00:00:50,610 --> 00:00:56,670
So you do not need to worry about making this a consistent deck where there's 52 cards and once you've

14
00:00:56,670 --> 00:01:01,140
already picked the king of clubs you can't pick the king of clubs again.

15
00:01:01,140 --> 00:01:02,460
It's entirely random.

16
00:01:02,460 --> 00:01:04,320
There is no continuity.

17
00:01:04,330 --> 00:01:07,580
There's no memory of what you called or what you picked last time.

18
00:01:07,590 --> 00:01:09,670
It's just a random card every time.

19
00:01:09,690 --> 00:01:15,070
So no arguments but return an object which we haven't done very much of if at all at this point.

20
00:01:15,120 --> 00:01:17,280
Give it a shot or just watch.

21
00:01:17,280 --> 00:01:18,570
Here's my attempt.

22
00:01:18,570 --> 00:01:23,610
So I'm going to define a function called Get card.

23
00:01:23,850 --> 00:01:28,280
You don't need to add any parameters and we know we need to pick a value.

24
00:01:28,350 --> 00:01:30,760
We need to pick a suits and then return an object.

25
00:01:30,780 --> 00:01:33,810
So let's start with picking a random value.

26
00:01:33,810 --> 00:01:37,880
There are many ways of getting a random value from a list of values.

27
00:01:37,950 --> 00:01:43,260
If this was all numbers instead of jack queen king and ace it would be easy we would just pick a random

28
00:01:43,260 --> 00:01:49,360
number from one to ten using math at random but because we have these we need to make everything a string.

29
00:01:49,530 --> 00:01:55,830
So the easiest option would probably be to turn this into an array where each element is one of these

30
00:01:55,920 --> 00:01:57,930
strings and I'll make them strings.

31
00:01:57,950 --> 00:01:58,250
OK.

32
00:01:58,350 --> 00:02:03,420
So I made all of them strings that just put quotes around them and then I can make it in array.

33
00:02:03,570 --> 00:02:04,500
I'll keep the commas.

34
00:02:04,500 --> 00:02:10,630
Now we have an array here and let's make this just a variable called values.

35
00:02:11,020 --> 00:02:11,400
OK.

36
00:02:11,550 --> 00:02:17,910
So we have our array of values and then we want to pick one of them randomly and to pick something randomly

37
00:02:18,420 --> 00:02:19,200
from an array.

38
00:02:19,200 --> 00:02:23,150
We need to generate a random number that corresponds to an index.

39
00:02:23,250 --> 00:02:28,070
So starting at zero index of 0 up to whatever this index is.

40
00:02:28,080 --> 00:02:32,820
So we've seen math at random that gives us a decimal.

41
00:02:32,820 --> 00:02:35,850
All we need to do is multiply it by the length of the array.

42
00:02:35,850 --> 00:02:40,770
This is a decimal from 0 to 1 but not including 1.

43
00:02:40,890 --> 00:02:49,830
So then I'm going to multiply that by values dot length and that will give me if my array is ten items

44
00:02:49,830 --> 00:02:55,800
long will give me a decimal number from zero to nine point nine nine nine nine nine nine nine not including

45
00:02:55,800 --> 00:02:56,500
ten.

46
00:02:56,760 --> 00:03:01,710
And that's good because the last index we want is nine but we don't have fractional indices we don't

47
00:03:01,710 --> 00:03:02,530
have decimals.

48
00:03:02,670 --> 00:03:09,500
So we need to get rid of that which we've seen a couple of times now with math dot floor.

49
00:03:09,630 --> 00:03:12,060
So this should give us a random index.

50
00:03:12,120 --> 00:03:20,580
Let's make sure let's just make this a variable called I.D. X and then let's return I.D. X and just

51
00:03:20,580 --> 00:03:29,160
make sure it's working let's call get card we get for twelve eleven ten.

52
00:03:29,160 --> 00:03:35,610
How many items are in here one two three four five six seven eight nine ten eleven twelve thirteen fourteen.

53
00:03:35,610 --> 00:03:35,840
Okay.

54
00:03:35,880 --> 00:03:43,440
So the last index should be 13 which is what we got and we should not be able to get index of 14 which

55
00:03:43,440 --> 00:03:44,580
is looking good.

56
00:03:44,640 --> 00:03:51,030
This is not a conclusive test but we know that the way we've written this there's no way to get 14.

57
00:03:51,090 --> 00:03:57,780
If our array has fourteen items this random number goes from zero to 1 but not including one we multiply

58
00:03:57,780 --> 00:03:59,120
it by 14.

59
00:03:59,220 --> 00:04:03,620
So we're going from zero to thirteen point nine 9 9 9 9 9 9 and then flooring it.

60
00:04:03,630 --> 00:04:05,190
So we go from zero to 13.

61
00:04:06,930 --> 00:04:07,300
All right.

62
00:04:07,380 --> 00:04:11,190
So we now need to use this index to pick one of these values.

63
00:04:11,760 --> 00:04:17,420
So we'll just instead return values of index.

64
00:04:17,430 --> 00:04:21,480
Now this works we're not really completing the objective here.

65
00:04:21,480 --> 00:04:27,300
We're not returning an object but this should at least give us one of those values so we get 5 1 A's

66
00:04:28,740 --> 00:04:31,190
6 1 5 King.

67
00:04:31,260 --> 00:04:32,160
Okay.

68
00:04:32,700 --> 00:04:37,570
So we'll keep this in a variable we'll call it value.

69
00:04:37,620 --> 00:04:40,870
Now we need to do the same thing for the suit.

70
00:04:41,250 --> 00:04:42,890
So I'll add my suits here.

71
00:04:42,930 --> 00:04:44,070
I'll just type this.

72
00:04:44,070 --> 00:04:52,730
We have clubs spades hearts and diamonds.

73
00:04:53,880 --> 00:04:58,950
And then we want to pick one of those and we can do the exact same thing.

74
00:04:59,250 --> 00:05:01,290
We can't name it index.

75
00:05:01,450 --> 00:05:05,100
I guess we could call it high or suit index.

76
00:05:05,200 --> 00:05:10,800
Maybe that's what we'll do and we'll call this one Val index and make sure we replace this year with

77
00:05:10,830 --> 00:05:14,460
Val index.

78
00:05:14,590 --> 00:05:20,830
So now we have two different random numbers this one will go from zero to 13 and then this one will

79
00:05:20,830 --> 00:05:27,920
go from zero to three because we have four items index of three is the greatest index in this array.

80
00:05:27,920 --> 00:05:33,440
Then let's return let's counseled out log the suit that we get.

81
00:05:33,490 --> 00:05:42,970
So we'll make another variable called Suit and set that to suits of suit index and then console that

82
00:05:42,970 --> 00:05:45,700
log value and suit.

83
00:05:45,760 --> 00:05:50,600
Let's see if we get one in undefined 0.

84
00:05:51,010 --> 00:05:54,310
Well this is completely my fault and very stupid.

85
00:05:54,310 --> 00:05:57,130
I never changed this suit index variable.

86
00:05:57,130 --> 00:06:03,610
The code we're running is the exact same code we are using to get the values index at random value.

87
00:06:03,880 --> 00:06:09,140
And I'm still using that values array even though I'm trying to access the suit's array with it.

88
00:06:09,190 --> 00:06:13,630
So I need to adjust this to multiply by suit dot length.

89
00:06:13,630 --> 00:06:16,240
So let's try running it again.

90
00:06:16,390 --> 00:06:19,520
Now I get one clubs King of Hearts two of hearts nine of hearts.

91
00:06:19,540 --> 00:06:20,250
King of Hearts.

92
00:06:20,740 --> 00:06:23,620
OK so that's working.

93
00:06:23,620 --> 00:06:25,840
Now we need to return an object.

94
00:06:25,960 --> 00:06:27,880
This part's Nice and easy.

95
00:06:27,880 --> 00:06:41,140
We just return an object and we're going to set suits to be suits and we'll set value to be value value

96
00:06:41,440 --> 00:06:44,260
is the key and the value is this value.

97
00:06:44,260 --> 00:06:46,360
Here it's a confusing sentence.

98
00:06:46,360 --> 00:06:52,360
Suit is the key and resetting it to whatever suit we got randomly selected from the suits array.

99
00:06:52,360 --> 00:06:58,000
Some of you might be aware of a shorter syntax to return an object where the key and the value have

100
00:06:58,000 --> 00:06:59,020
the same name.

101
00:06:59,080 --> 00:07:01,520
We will cover that later so we'll just ignore it for now.

102
00:07:03,040 --> 00:07:04,580
OK so this works.

103
00:07:04,630 --> 00:07:08,520
There's nothing wrong with this but we are repeating some logic.

104
00:07:08,860 --> 00:07:11,310
We're picking a random number from this array.

105
00:07:11,380 --> 00:07:13,120
We're picking a random number from this array.

106
00:07:14,050 --> 00:07:20,830
So I'm going to take another stab at this but I'm actually going to write a second function.

107
00:07:20,920 --> 00:07:25,000
Anytime we're repeating functionality we're doing something multiple times.

108
00:07:25,000 --> 00:07:31,030
It's a good indication that you could make a new function and use that function here so we could make

109
00:07:31,030 --> 00:07:36,520
a function called you get random element or pick which picks a random element from an array.

110
00:07:36,730 --> 00:07:43,750
So we pass in an array and then we get a return value where some random element has been selected so

111
00:07:43,750 --> 00:07:45,160
we could do that.

112
00:07:45,250 --> 00:07:46,720
Let's call it Pick.

113
00:07:47,140 --> 00:07:53,050
Function pick accepts an array and it should return a random element from an array.

114
00:07:54,130 --> 00:07:57,210
So if it accepts this array we'll give it a parameter of a R.

115
00:07:57,220 --> 00:08:04,330
That's the name we need to pick a random number that is within a Rs bounds which we've already seen

116
00:08:04,330 --> 00:08:07,420
how to do any of these here.

117
00:08:07,430 --> 00:08:10,870
So let's just copy this move it up.

118
00:08:10,870 --> 00:08:17,620
Math top floor math out random time and then a r dot length the length of the array.

119
00:08:17,650 --> 00:08:20,060
It could be 100 items it could be 20 items.

120
00:08:20,050 --> 00:08:29,100
That's going to be our index so we'll make this variable called index and then we'll simply return array

121
00:08:29,160 --> 00:08:32,570
at that index.

122
00:08:32,880 --> 00:08:44,040
So if we try calling pick on an array of a comma B we'll get B or A each time randomly and if we tried

123
00:08:44,040 --> 00:08:46,350
it on a different array like 1.

124
00:08:46,680 --> 00:08:47,500
Let's not do strings.

125
00:08:47,490 --> 00:08:51,300
1 2 3 4 5 6 7 blows my array.

126
00:08:51,410 --> 00:08:54,140
We get a random number each time from that array.

127
00:08:54,890 --> 00:09:00,600
So we've now made this reusable function called Pick and let's use it down here.

128
00:09:01,010 --> 00:09:03,750
So we no longer have to duplicate all of this code.

129
00:09:03,890 --> 00:09:07,170
In fact we could get rid of pretty much all of this.

130
00:09:07,190 --> 00:09:10,790
Let's start with the value we'll get rid of this here.

131
00:09:10,910 --> 00:09:18,870
Now we'll set value to be pick our array called values.

132
00:09:18,890 --> 00:09:20,090
So pick one of these

133
00:09:23,710 --> 00:09:27,120
no semicolon then there and then we'll do the same thing for suits.

134
00:09:27,150 --> 00:09:33,060
We have our suits variable and then we don't need to generate an index we'll just say suit is equal

135
00:09:33,060 --> 00:09:37,910
to pick from suits.

136
00:09:37,950 --> 00:09:38,400
Great.

137
00:09:38,730 --> 00:09:39,850
Let's test it out.

138
00:09:39,900 --> 00:09:41,540
Get card.

139
00:09:41,910 --> 00:09:44,520
It's working two of diamonds six of diamonds.

140
00:09:44,520 --> 00:09:46,910
King of Clubs two of diamonds.

141
00:09:46,920 --> 00:09:48,390
And on and on and on.

142
00:09:48,510 --> 00:09:51,150
We could even refactor this a bit more.

143
00:09:51,150 --> 00:09:54,720
We don't really have to make these separate variables if we don't want to.

144
00:09:54,780 --> 00:10:02,190
We could just do right in line pick value and pick suits just like that.

145
00:10:02,190 --> 00:10:04,890
And now we can get rid of these two lines as well.

146
00:10:05,040 --> 00:10:11,640
We simply have our variable declarations and then we're returning an object where value the key is set

147
00:10:11,640 --> 00:10:18,500
to the return result of picking a value from this from our pick function and then suit.

148
00:10:18,510 --> 00:10:22,410
The property is set to the same exact thing but with these suits array.

149
00:10:22,410 --> 00:10:26,310
This needs to be suits plural for passing that into pick.

150
00:10:26,310 --> 00:10:32,670
This gives us some random element from suits that return value is then used to set suit.

151
00:10:32,670 --> 00:10:34,880
Let's test it out again.

152
00:10:35,040 --> 00:10:38,750
Value is not defined values.

153
00:10:38,880 --> 00:10:42,130
Try that again.

154
00:10:42,130 --> 00:10:45,140
It needs to match the name of the array and the name if this array.

155
00:10:45,960 --> 00:10:46,900
And now it's working.

156
00:10:46,980 --> 00:10:48,510
It's relatively short.

157
00:10:48,630 --> 00:10:54,660
The longest part is this hideous array that my editor is deciding to put on separate lines.

158
00:10:54,660 --> 00:10:57,350
I have a preference that says for a super long array.

159
00:10:57,390 --> 00:10:59,960
Make sure you spread it out onto different lines.

160
00:11:00,060 --> 00:11:03,030
But on such short elements it's kind of ugly.

161
00:11:03,180 --> 00:11:03,440
All right.

162
00:11:03,480 --> 00:11:04,580
So I'll stop here.

163
00:11:04,590 --> 00:11:10,090
There are many other ways you could approach this instead of turning all the values into an array.

164
00:11:10,110 --> 00:11:16,640
We could have put them all in a single string and turn that string into an array using code dynamically.

165
00:11:16,710 --> 00:11:18,390
We'll see a similar example.

166
00:11:18,570 --> 00:11:21,820
Something relatively similar in the next exercise we're about to do.

167
00:11:21,900 --> 00:11:25,680
But before I go I just want to call your attention to this part here.

168
00:11:25,710 --> 00:11:29,940
We had some duplicated functionality we were doing the same thing twice.

169
00:11:30,120 --> 00:11:35,250
A different array we were picking from First we're picking from values then we're picking from suits

170
00:11:35,580 --> 00:11:36,980
but the same process.

171
00:11:37,080 --> 00:11:39,640
So we moved it into a new function.

172
00:11:39,690 --> 00:11:43,350
It doesn't really change anything about how your code behaves.

173
00:11:43,350 --> 00:11:46,430
It's the same logic we've just made it generic.

174
00:11:46,440 --> 00:11:53,280
We've generalized it into a function called pick which allows us to shorten our code and also it becomes

175
00:11:53,280 --> 00:11:54,000
more readable.

176
00:11:54,030 --> 00:11:58,560
When you look at it it's not just we're actually not shortening things in the long term we added more

177
00:11:58,560 --> 00:11:59,010
lines.

178
00:11:59,010 --> 00:12:04,620
I think if you were to count the total lines but it's much easier to look at and understand what's going

179
00:12:04,620 --> 00:12:05,180
on.

180
00:12:05,220 --> 00:12:11,860
Pick a value and pick a suit rather than just a bunch of variables and a bunch of master randoms.

181
00:12:12,000 --> 00:12:12,960
We just have it up top.
