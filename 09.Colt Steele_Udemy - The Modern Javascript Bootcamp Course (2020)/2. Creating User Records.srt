1
00:00:00,410 --> 00:00:04,760
In the last video we had a very long discussion about how we generally handle authentication inside

2
00:00:04,760 --> 00:00:06,100
of a web application.

3
00:00:06,170 --> 00:00:12,350
So we're going to use a cookie based authentication flow after a user successfully signs up to our application.

4
00:00:12,350 --> 00:00:22,420
We're going to create a user in our user repo to represent this person we're then going to take the

5
00:00:22,420 --> 00:00:32,170
idea of that person and we're going to store the idea of that user inside the user's cookie so in other

6
00:00:32,170 --> 00:00:36,230
words we need to take the idea of whatever user we just created inside of our repo.

7
00:00:36,400 --> 00:00:41,930
And we need to somehow set that Ireland on the user's cookie so that that cookie gets included on follow

8
00:00:41,930 --> 00:00:43,100
up requests.

9
00:00:43,100 --> 00:00:47,060
Anytime we receive a follow up request we're going to look into the cookie.

10
00:00:47,140 --> 00:00:51,640
We're gonna take the ideas that is inside of it and we're going to use that to identify the person who

11
00:00:51,640 --> 00:00:53,760
is making a request to us.

12
00:00:53,830 --> 00:00:59,420
So that's the general idea let's start to write out some code and implement these two steps right here.

13
00:00:59,430 --> 00:01:03,700
So the first thing we need to do is to create a user inside of our users repo.

14
00:01:03,750 --> 00:01:08,810
Remember we already required in the user's repo at the very top of the index such as file.

15
00:01:08,910 --> 00:01:15,630
Make sure you've got that require statement up there as well so we can now use a user's repo back down

16
00:01:15,630 --> 00:01:25,870
here I will say await users repo not create and then we will pass in the identifying information for

17
00:01:25,870 --> 00:01:27,490
this user that we want to store.

18
00:01:27,540 --> 00:01:33,560
So that is going to be their email and their password that were submitted inside of these sign up attempts.

19
00:01:33,670 --> 00:01:40,270
So I'll call a user repo Doc create with the email and the password that they provided.

20
00:01:40,670 --> 00:01:44,000
Notice that the key and value here on both properties are identical.

21
00:01:44,030 --> 00:01:52,010
So we can condense it down to just email and password so now whenever we create a new user we need to

22
00:01:52,010 --> 00:01:57,290
get back the I.D. of the user that was created because remember we don't know what I.D. is going to

23
00:01:57,290 --> 00:01:58,370
be assigned to them.

24
00:01:58,430 --> 00:02:04,110
We randomly generate an I.D. every single time that we create a new record in order to get that idea.

25
00:02:04,160 --> 00:02:07,450
We need to open up our users repository.

26
00:02:07,510 --> 00:02:09,810
We need to go back to our create method inside of here.

27
00:02:09,850 --> 00:02:12,360
So make sure you scroll down to the create method.

28
00:02:12,450 --> 00:02:16,690
We need to make sure that at some point we return the I.D. from create.

29
00:02:16,690 --> 00:02:23,650
So we know exactly who we just made or to me what the idea is for the user we just created to do so

30
00:02:23,680 --> 00:02:27,740
we can just return the adders object entirely from the create method.

31
00:02:27,790 --> 00:02:31,530
Remember we assign an I.D. to that adders object.

32
00:02:31,810 --> 00:02:36,060
So I will return adders from create.

33
00:02:36,270 --> 00:02:40,590
Now whenever we call create we're gonna get back an object that contains the idea of the user.

34
00:02:40,590 --> 00:02:47,560
We just made it's now back inside of index dot J.S. would we call create.

35
00:02:47,810 --> 00:02:53,470
I'm going to assign what gets returned to a variable that alcohol user.

36
00:02:53,540 --> 00:02:56,210
Now on this user object right here is an I.D..

37
00:02:56,360 --> 00:03:00,080
And that idea is what we want to store inside of our cookie.

38
00:03:00,140 --> 00:03:04,860
Now we just need to figure out how we actually interact with the user's cookie at all.

39
00:03:04,880 --> 00:03:06,480
There's two ways we can do this.

40
00:03:06,500 --> 00:03:12,310
We can either figure out how to manipulate a user's cookie ourselves manually using express and some

41
00:03:12,310 --> 00:03:18,350
of the different API that it offers to us or alternatively we can use a third party package to manage

42
00:03:18,350 --> 00:03:19,970
the cookie for us.

43
00:03:20,030 --> 00:03:21,450
That is what we are going to do.

44
00:03:21,500 --> 00:03:26,330
We're going to use a third party package something that we're going to install as a library to our project

45
00:03:26,720 --> 00:03:31,670
and that is going to automatically manage all the information inside the user's cookie.

46
00:03:31,670 --> 00:03:35,690
The reason that we're going to use a third party package for this rather than doing it ourselves is

47
00:03:35,690 --> 00:03:38,990
that managing cookies is notoriously tricky.

48
00:03:38,990 --> 00:03:40,200
They are very complicated.

49
00:03:40,220 --> 00:03:41,920
They're very easy to get wrong.

50
00:03:41,960 --> 00:03:47,810
We can very easily put in some mistake that exposes a lot of information about our users to malicious

51
00:03:47,810 --> 00:03:48,560
people.

52
00:03:48,620 --> 00:03:53,510
And so rather than take all that liability on ourselves we're going to instead use somebody else's library

53
00:03:53,810 --> 00:03:55,540
and have it do everything for us.

54
00:03:56,790 --> 00:04:01,050
So even though it'd be really interesting to write out this code ourselves highly recommend in every

55
00:04:01,050 --> 00:04:08,330
scenario you always use some outside library to manage cookies so to get access to this library that

56
00:04:08,330 --> 00:04:14,030
we're going to use we're going to go back over to our terminal and install this other library as a NPM

57
00:04:14,030 --> 00:04:18,220
package by using the NPM command line tool a back in my terminal.

58
00:04:18,240 --> 00:04:28,030
I'm going to stop my server by hitting control C. And I'm going to do an npm install cookie dash session.

59
00:04:28,030 --> 00:04:33,930
So that is the name of the library that we are going to use it's all a run that and then very quickly

60
00:04:34,320 --> 00:04:36,070
we'll get it installed.

61
00:04:36,100 --> 00:04:41,870
I'll then restart my server with NPM run Dev okay.

62
00:04:41,870 --> 00:04:43,080
It looks good.

63
00:04:43,350 --> 00:04:44,760
Now let's take a quick pause right here.

64
00:04:44,790 --> 00:04:49,260
When we come back in just a moment we'll start to wire up this library and then store the user's ideas

65
00:04:49,290 --> 00:04:53,270
and style inside of a cookie so quick pause and I'll see you in just a minute.
