WEBVTT
1
00:00:00.840 --> 00:00:01.100
All right.

2
00:00:01.110 --> 00:00:05.120
Let's make sure that we can list out all the different products we've created inside of our application.

3
00:00:05.250 --> 00:00:10.440
So inside of my products such as file I'm going to find router Duckett admin slash products.

4
00:00:10.450 --> 00:00:13.130
So from inside of here there's a couple of things we need to do.

5
00:00:13.320 --> 00:00:16.070
We first need to take a look at our products repository.

6
00:00:16.170 --> 00:00:18.880
We're going to find all the products that exist inside there.

7
00:00:18.930 --> 00:00:23.160
Once we find them we're then going to render them with a template and send the result back down to our

8
00:00:23.160 --> 00:00:26.750
user so to get access to all of our different products.

9
00:00:26.760 --> 00:00:33.050
We're going to use our products repo which we've all we are already required and at the very top and

10
00:00:33.150 --> 00:00:43.550
inside of my root handler I'll say Concerta products is a weight products repo that get all because

11
00:00:43.550 --> 00:00:45.170
I'm using the awake keyword right here.

12
00:00:45.190 --> 00:00:50.790
I'm going to make sure that I also mark this function as being async now that we've got our products

13
00:00:50.880 --> 00:00:56.610
we can create a new view inside of our views directory in order to list out all those different products

14
00:00:57.750 --> 00:01:04.960
inside of my views admin products directory I'm going to make a new file called index dot J.S. the reason

15
00:01:04.960 --> 00:01:10.480
I'm calling this index is normally we associate showing a listing of different things with an index

16
00:01:10.480 --> 00:01:11.710
action.

17
00:01:11.710 --> 00:01:18.010
So whenever we show a list of files images comments blog posts products whatever it is we usually refers

18
00:01:18.010 --> 00:01:23.520
to that as an index so inside of here we will define a template function

19
00:01:27.050 --> 00:01:30.830
and we're going to call this thing with a list of all the different products we have.

20
00:01:30.830 --> 00:01:35.750
So once again I'm going to expect that I will receive an object that has a product's property inside

21
00:01:35.750 --> 00:01:36.290
of it.

22
00:01:36.290 --> 00:01:40.520
So we need to make sure that when we actually call this template we pass an object with products and

23
00:01:40.520 --> 00:01:45.710
products should be an array of all the different products we have inside of here.

24
00:01:45.720 --> 00:01:50.610
We can start to render our template or render our layout so let's make sure that we require that in

25
00:01:50.610 --> 00:01:51.090
at the top

26
00:01:54.900 --> 00:01:56.270
and we'll go up one directory.

27
00:01:56.280 --> 00:02:07.940
So dot dot slash layout and then we will return layout we'll pass in an object that has a content property

28
00:02:08.120 --> 00:02:15.920
that's going to be a template string inside of here for right now I'll just place like an each one.

29
00:02:15.940 --> 00:02:23.440
I'm going to give it a class of title that says simply products then after that we need to iterate through

30
00:02:23.530 --> 00:02:25.390
all the different products we have.

31
00:02:25.390 --> 00:02:29.790
We need to build up some amount of H to UML and we're gonna show all that stuff right there.

32
00:02:30.930 --> 00:02:35.640
So to do so stacking all that logic right here would be just a little bit confusing and hard to read.

33
00:02:35.730 --> 00:02:41.660
So we will instead ahead of time build up our list of all these different products and the HDL for each

34
00:02:41.670 --> 00:02:46.660
them there's many different ways we can iterate through this list of products right here.

35
00:02:46.720 --> 00:02:50.780
I think that the easiest and most appropriate way would be to use a map statement.

36
00:02:51.270 --> 00:02:56.380
So we're going to map over our list of products and for every product we're going to generate and return

37
00:02:56.440 --> 00:02:57.910
a little snippet of HDL.

38
00:02:58.750 --> 00:03:04.930
So the result will be an array of HDL snippets we can then join that rate together into one big string

39
00:03:05.140 --> 00:03:10.960
and show all that right here right above our return statement.

40
00:03:10.960 --> 00:03:12.970
I'll say rendered products.

41
00:03:12.970 --> 00:03:18.010
So this is going to be essentially a big array of H signal strings.

42
00:03:18.010 --> 00:03:20.590
So this will be products stop map.

43
00:03:20.680 --> 00:03:25.240
Remember when we call dot map we're going to pass in a function that's going to be invoked with every

44
00:03:25.300 --> 00:03:30.400
individual element inside of that right now will refer to each individual element as simply product

45
00:03:31.630 --> 00:03:39.090
so then inside of here we're going to return once again a multi line string and so inside of here we're

46
00:03:39.090 --> 00:03:47.550
going to place some H team L to represent this very specific product so to start let's just do How about

47
00:03:47.670 --> 00:03:55.420
the title of each product that we've created it's all due simply a div I'll do my dollar sign curly

48
00:03:55.420 --> 00:03:57.460
braces and I'll say product title

49
00:04:00.630 --> 00:04:00.910
okay.

50
00:04:00.930 --> 00:04:02.250
That looks good.

51
00:04:02.250 --> 00:04:07.980
It's now rendered products at this point time is an array of strings so it's going to be an array with

52
00:04:08.010 --> 00:04:12.650
every single product wrapped inside or every single product title wrapped in that little div.

53
00:04:12.660 --> 00:04:15.720
We don't want to show an array of strings inside of our template.

54
00:04:15.720 --> 00:04:20.700
Instead we want to show like one single string and that's why right after the map statement I'm going

55
00:04:20.700 --> 00:04:22.170
to tack on a dot.

56
00:04:22.170 --> 00:04:25.220
Join with an empty string.

57
00:04:25.220 --> 00:04:30.200
That's gonna take all these separate little H small snippets join them together into one big string

58
00:04:30.320 --> 00:04:33.850
and then assign the result to rendered products.

59
00:04:33.910 --> 00:04:39.100
Now we can't take render products and throw it into our layout or the content right here that we're

60
00:04:39.100 --> 00:04:40.570
passing to the layout.

61
00:04:40.610 --> 00:04:44.860
They'll do a dollar sign curly brace rendered products like so

62
00:04:48.210 --> 00:04:49.560
and that should be it.

63
00:04:49.570 --> 00:04:55.360
So let's now go back over to our products dot J File inside of our admin roots directory.

64
00:04:55.530 --> 00:05:00.270
We're going to get access to that template function and call it with the list of products we've just

65
00:05:00.270 --> 00:05:07.410
pulled out of our repo right after our products new template that we have required in right here.

66
00:05:07.420 --> 00:05:15.840
I'm gonna get products index template I'll require that from up one directory of one directory.

67
00:05:15.840 --> 00:05:18.330
It's basically the same thing as the line right above.

68
00:05:18.330 --> 00:05:27.170
So up up the use admin products index.

69
00:05:27.220 --> 00:05:27.450
All right.

70
00:05:27.450 --> 00:05:32.020
So now when we call it products index template we're going to make sure that we pass inside of an object

71
00:05:32.110 --> 00:05:35.620
all the different products we have so I'm going to do.

72
00:05:35.620 --> 00:05:42.190
Products index template we're gonna pass into object because that's what we said that we were going

73
00:05:42.190 --> 00:05:43.410
to expect to pass in.

74
00:05:43.570 --> 00:05:46.880
That's going to have products is products.

75
00:05:46.980 --> 00:05:52.710
And as usual condense that down to just products because the key and the value are the same now finally

76
00:05:52.770 --> 00:05:55.940
we're going to wrap this entire call right here with a resort scent.

77
00:05:56.010 --> 00:06:00.210
So we'll take all the HCM L that we're generating from net function we're gonna send it back down to

78
00:06:00.210 --> 00:06:08.650
whoever made this request it's going to wrap that with a rez dot sent okay and that should pretty much

79
00:06:08.650 --> 00:06:09.350
be it.

80
00:06:09.410 --> 00:06:16.190
So let's say this I encourage you to take a quick peek at your products dot J's on file and just make

81
00:06:16.190 --> 00:06:22.240
sure that you've got at least one or two items inside of your if you have a item that still has a price

82
00:06:22.240 --> 00:06:26.450
that has a string that is OK for right now but we're going to eventually have to fix that up.

83
00:06:26.650 --> 00:06:31.120
I am going to at some point give you a product dot Chase on file that has a couple of different products

84
00:06:31.120 --> 00:06:35.310
inside of it already pre generated with some nice images to go along with each one.

85
00:06:35.350 --> 00:06:39.730
So for right now all we really need to make sure is that we've got an array of objects in each object

86
00:06:39.730 --> 00:06:43.860
should have a reasonable title assigned to them.

87
00:06:43.900 --> 00:06:49.210
So when I now tried to access this products index route to get a listing of all my different products

88
00:06:49.440 --> 00:06:55.110
I will expect to see a title of 1 product of a SDF and another one of a special code.

89
00:06:55.390 --> 00:07:04.330
It's going to close that file go back over to my browser and I'll go to admin slash products and there

90
00:07:04.330 --> 00:07:04.600
we go.

91
00:07:04.630 --> 00:07:08.720
So here's my products listing I've got a SDF and a special code.

92
00:07:09.130 --> 00:07:10.060
So that looks pretty good.

93
00:07:11.110 --> 00:07:16.570
Now if you've gotten error at this point in time incredibly possible that you might have won if you

94
00:07:16.570 --> 00:07:19.990
have an error I would recommend that you go back over to your editor.

95
00:07:19.990 --> 00:07:23.890
And as long as you don't have a typo or something like that you should be able to read the error message

96
00:07:23.890 --> 00:07:27.940
inside of your terminal to see what is going wrong as long as it doesn't seem to indicate that you have

97
00:07:27.940 --> 00:07:28.480
an error.

98
00:07:28.540 --> 00:07:32.830
The most likely thing that just went wrong is you might have some bad data inside of your products not

99
00:07:32.830 --> 00:07:39.370
just on file so you can always delete that file if you delete it just make sure that you restart your

100
00:07:39.370 --> 00:07:45.380
server so that file gets recreated after you have recreated that file.

101
00:07:45.380 --> 00:07:51.620
Go back to the product's new endpoint so admin products new and just create a new product this with

102
00:07:51.710 --> 00:07:53.810
just a title and just a price.

103
00:07:53.810 --> 00:07:55.340
Don't even worry about the image just yet.

104
00:07:57.300 --> 00:08:02.280
And then tried to go to adamant slash products and just make sure that you can see that stuff appear

105
00:08:02.280 --> 00:08:04.520
on the screen.

106
00:08:04.620 --> 00:08:04.870
All right.

107
00:08:04.900 --> 00:08:06.500
Now with that we can list some stuff out here.

108
00:08:06.500 --> 00:08:10.550
Obviously we need some better styling and if we look back at our makeup we need to make sure that we

109
00:08:10.550 --> 00:08:12.980
also have a link to go to our create product page.

110
00:08:12.980 --> 00:08:16.270
We need to have the ability to edit and delete each product as well.

111
00:08:16.320 --> 00:08:18.380
So let's take care of all that stuff in just a moment.
