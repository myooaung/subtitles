WEBVTT
1
00:00:01.000 --> 00:00:04.360
Now that we've laid out the projects and their priorities,

2
00:00:04.360 --> 00:00:07.048
which can be kind of large and chunky,

3
00:00:07.048 --> 00:00:11.056
we need to determine our team's tasks and priorities.

4
00:00:11.056 --> 00:00:13.056
Smaller units of work.

5
00:00:13.056 --> 00:00:15.806
So what we want to do is list the discrete features

6
00:00:15.806 --> 00:00:17.306
that are required by the customer,

7
00:00:17.306 --> 00:00:19.703
stakeholder or product manager for each project.

8
00:00:19.703 --> 00:00:22.997
This includes priority and estimated hours to implement,

9
00:00:22.997 --> 00:00:28.118
so now we're getting down to the actual hours and level of

10
00:00:28.118 --> 00:00:32.056
effort that it will take to support the project.

11
00:00:32.056 --> 00:00:36.056
We also may need to include in there some issue management or bugs.

12
00:00:36.056 --> 00:00:38.506
Sometimes the work isn't just new work,

13
00:00:38.506 --> 00:00:42.006
but it's also the remediation of work in the past,

14
00:00:42.006 --> 00:00:45.056
such as fixing bugs and issues and things like that.

15
00:00:45.056 --> 00:00:51.056
Also some of our work may include analysis or other non-development activities.

16
00:00:51.056 --> 00:00:52.056
Go research that.

17
00:00:52.056 --> 00:00:53.723
Go do some business analysis.

18
00:00:53.723 --> 00:00:55.056
Maybe some performance tuning.

19
00:00:55.056 --> 00:00:59.723
So it can be a variety of tasks, not just that directly support projects,

20
00:00:59.723 --> 00:01:06.256
but also have to do with general housekeeping of the systems that you support.

21
00:01:06.256 --> 00:01:11.056
Okay, now let's see an example of this.

22
00:01:11.056 --> 00:01:14.238
Here's an example of aligning our daily work tasks and what we're going to

23
00:01:14.238 --> 00:01:17.511
do here is we're going to come up with our task list,

24
00:01:17.511 --> 00:01:20.056
the number of hours, and prioritize those.

25
00:01:20.056 --> 00:01:22.938
Okay, so here are our IT projects.

26
00:01:22.938 --> 00:01:27.056
We have project IR/1 which was focused on priority 1.

27
00:01:27.056 --> 00:01:30.723
We also have project AC/2 which was also a priority 1,

28
00:01:30.723 --> 00:01:34.389
and we have project AC/1 and AC/3 which were priority 2s,

29
00:01:34.389 --> 00:01:38.056
and again we're not covering the backlog because those were backlogged.

30
00:01:38.056 --> 00:01:41.056
They haven't been promoted yet to priority projects.

31
00:01:41.056 --> 00:01:46.056
So the tasks for project IR/1 are as follows.

32
00:01:46.056 --> 00:01:50.056
We want to analyze the PayPal API 24 hours.

33
00:01:50.056 --> 00:01:54.056
The hours are in parentheses after the task's description.

34
00:01:54.056 --> 00:01:59.703
We want to prototype PayPal API for 60 hours; determine multi-tender options,

35
00:01:59.703 --> 00:02:05.627
32 hours, that's some analysis; update checkout page for multi-tender,

36
00:02:05.627 --> 00:02:07.056
120 hours.

37
00:02:07.056 --> 00:02:11.420
So we list the tasks in what we think is priority order and the number of

38
00:02:11.420 --> 00:02:14.647
hours because those number of hours that are estimated helps gives us an

39
00:02:14.647 --> 00:02:18.518
idea of how big something is and what might be the right order to do them in

40
00:02:18.518 --> 00:02:22.671
and you do this as a team and then you come up with this list and this is

41
00:02:22.671 --> 00:02:24.406
what will be worked on each day.

42
00:02:24.406 --> 00:02:26.506
Now for project AC/2, the same.

43
00:02:26.506 --> 00:02:31.889
In this case we're going to prototype the FedEx API, we think that's 20 hours.

44
00:02:31.889 --> 00:02:36.056
We're going to prototype the UPS API for 60 hours.

45
00:02:36.056 --> 00:02:39.748
Next is update/add stored procedures for shipping cost

46
00:02:39.748 --> 00:02:42.056
algorithm; mainly that's 300 hours.

47
00:02:42.056 --> 00:02:46.056
And then that's our task list for project AC/2.

48
00:02:46.056 --> 00:02:52.056
And lastly, here are our tasks for the project AC/1 and AC/3.

49
00:02:52.056 --> 00:02:56.056
Identify a lower priority task to perform when a team member is available.

50
00:02:56.056 --> 00:03:00.056
So right here I'm giving you guidance and not the actual tasks.

51
00:03:00.056 --> 00:03:05.834
So typically you want the team to always work on priority 1 items,

52
00:03:05.834 --> 00:03:08.056
project IR/1 or project AC/2.

53
00:03:08.056 --> 00:03:11.465
In the event they get stuck or something is a road block and they can't

54
00:03:11.465 --> 00:03:13.511
get to those tasks for some good business reason,

55
00:03:13.511 --> 00:03:16.011
you always to have a few tasks in your hip pocket,

56
00:03:16.011 --> 00:03:19.319
so I just the priority 2 task as what they fall back on.

57
00:03:19.319 --> 00:03:24.056
If something frees up under priority 1, then they go right back to priority 1.

58
00:03:24.056 --> 00:03:27.556
So what you want to do in priority 2 is again,

59
00:03:27.556 --> 00:03:31.389
identify lower priority tasks to perform when a team member is available.

60
00:03:31.389 --> 00:03:31.723
Also,

61
00:03:31.723 --> 00:03:35.389
you want to include a rough estimate and do not yet

62
00:03:35.389 --> 00:03:37.056
assign unless someone is free.

63
00:03:37.056 --> 00:03:42.389
So it's kind of like your list of items are still a good priority of items,

64
00:03:42.389 --> 00:03:43.056
but unassigned.

65
00:03:43.056 --> 00:03:46.866
Okay, so to recap, we identify tasks as a team,

66
00:03:46.866 --> 00:03:52.176
we come up with rough estimates, we make assignments to a person on the team.

67
00:03:52.176 --> 00:03:54.696
If more than one person is on a task,

68
00:03:54.696 --> 00:03:58.368
I still like to be sure one and only one person is the

69
00:03:58.368 --> 00:04:00.868
focal point and responsible to get it done,

70
00:04:00.868 --> 00:04:03.056
though he or she may have help.

71
00:04:03.056 --> 00:04:06.945
Then I meet each morning, briefly to discuss the progress,

72
00:04:06.945 --> 00:04:11.056
issues or any priority changes, to ensure everyone is on track.

73
00:04:11.056 --> 00:04:13.056
I call that a standup meeting.

74
00:04:13.056 --> 00:04:18.902
I'm sure you've used that technique as well and we will discuss that in more

75
00:04:18.902 --> 00:04:25.056
detail in the verbal communication module later in this course.

76
00:04:25.056 --> 00:04:26.530
Tracking and managing tasks.

77
00:04:26.530 --> 00:04:30.951
You have just done all this hard work to align your IT

78
00:04:30.951 --> 00:04:32.856
projects with the business goals.

79
00:04:32.856 --> 00:04:38.056
You have prioritized your tasks and you've assigned them out to your team.

80
00:04:38.056 --> 00:04:40.056
Your team starts working on the tasks.

81
00:04:40.056 --> 00:04:44.056
You meet each day to review the tasks and the progress of each task.

82
00:04:44.056 --> 00:04:45.056
Now what?

83
00:04:45.056 --> 00:04:47.556
How is the project doing?

84
00:04:47.556 --> 00:04:49.556
Are you on target?

85
00:04:49.556 --> 00:04:52.056
Are your estimates panning out?

86
00:04:52.056 --> 00:04:56.056
If you track your time then you can measure your team's capacity.

87
00:04:56.056 --> 00:05:01.056
By capacity I mean their ability to produce work, how much work can they do?

88
00:05:01.056 --> 00:05:04.913
Without that feedback of measuring and tracking your time,

89
00:05:04.913 --> 00:05:07.056
you won't have that information.

90
00:05:07.056 --> 00:05:10.556
By using the capacity of your team, that is how much they can produce,

91
00:05:10.556 --> 00:05:13.931
you can better provide estimates that will help you

92
00:05:13.931 --> 00:05:17.056
prioritize tasks in the future.

93
00:05:17.056 --> 00:05:19.056
When you track your time,

94
00:05:19.056 --> 00:05:23.056
you can use the data for the historical capacity planning.

95
00:05:23.056 --> 00:05:25.456
In other words, you can look back in time and see well,

96
00:05:25.456 --> 00:05:27.256
if it take us 48 hours a year ago,

97
00:05:27.256 --> 00:05:33.056
maybe it will take us 48 hours now for the same or similar task.

98
00:05:33.056 --> 00:05:35.156
If you do not track your time,

99
00:05:35.156 --> 00:05:37.856
you have lost two valuable inputs which will affect

100
00:05:37.856 --> 00:05:39.424
the quality of your estimates.

101
00:05:39.424 --> 00:05:42.372
One, the ability to measure your team's capacity,

102
00:05:42.372 --> 00:05:46.485
just how much they can do in a given time frame,

103
00:05:46.485 --> 00:05:52.056
and two, you have lost what you could have learned from the past.

104
00:05:52.056 --> 00:05:56.931
You can measure, for example, that the average screen and code behind take,

105
00:05:56.931 --> 00:05:58.056
say, 43-1/2 hours.

106
00:05:58.056 --> 00:06:04.056
So for future estimates you can quickly use that as a yardstick to help you.

107
00:06:04.056 --> 00:06:06.627
You might want to check out my other course,

108
00:06:06.627 --> 00:06:08.056
Best Practices for Project Estimation.

109
00:06:08.056 --> 00:06:11.232
And maybe one more, Project Management for Software Engineers,

110
00:06:11.232 --> 00:06:14.688
where I go into more detail about tracking your time.

111
00:06:14.688 --> 00:06:16.267
Alright, on the next slide,

112
00:06:16.267 --> 00:06:25.056
let's cover a few more important reasons on why you should track your time.

113
00:06:25.056 --> 00:06:28.056
Here are some more important reasons on why you should track your time.

114
00:06:28.056 --> 00:06:32.056
It also could help you determine if your estimate was any good.

115
00:06:32.056 --> 00:06:35.206
If a certain task was estimated at 16 hours,

116
00:06:35.206 --> 00:06:38.356
actual hours after you completed say, were 21 hours,

117
00:06:38.356 --> 00:06:40.420
so you're five hours over.

118
00:06:40.420 --> 00:06:42.238
What does that mean?

119
00:06:42.238 --> 00:06:43.601
Poor estimation technique?

120
00:06:43.601 --> 00:06:44.056
Maybe.

121
00:06:44.056 --> 00:06:46.199
More training needed?

122
00:06:46.199 --> 00:06:46.913
Maybe.

123
00:06:46.913 --> 00:06:48.342
Other issues?

124
00:06:48.342 --> 00:06:49.056
Certainly.

125
00:06:49.056 --> 00:06:54.056
All these are excellent feedback used to improve your estimation process.

126
00:06:54.056 --> 00:06:58.056
Tracking time can help you track actuals to estimates.

127
00:06:58.056 --> 00:06:59.874
Is your task on track?

128
00:06:59.874 --> 00:07:03.511
If this task was estimated at 16 hours and your

129
00:07:03.511 --> 00:07:06.056
developer says he has 4 hours used,

130
00:07:06.056 --> 00:07:09.256
and is about 30% complete with his functionality,

131
00:07:09.256 --> 00:07:10.456
that is good.

132
00:07:10.456 --> 00:07:12.056
You're ahead of plan.

133
00:07:12.056 --> 00:07:16.192
If he had used, say, 16 hours and was only 30% complete, whoa!

134
00:07:16.192 --> 00:07:19.413
You're behind and you can look at why you're behind.

135
00:07:19.413 --> 00:07:24.056
Maybe it's that I need more training, maybe the requirements weren't very good.

136
00:07:24.056 --> 00:07:28.056
It will help you remediate issues right away.

137
00:07:28.056 --> 00:07:31.056
Also, when you track time, you can find out issues earlier.

138
00:07:31.056 --> 00:07:34.708
If an estimate was for 16 hours for a task and the

139
00:07:34.708 --> 00:07:38.413
developer says he has used 12 hours, or 75% of those hours,

140
00:07:38.413 --> 00:07:41.270
but is only 30% complete with its functionality,

141
00:07:41.270 --> 00:07:43.056
then that is not good.

142
00:07:43.056 --> 00:07:44.770
Your activity is actually behind plan,

143
00:07:44.770 --> 00:07:49.500
but you can find out early and make a corrected action plan to make it better.

144
00:07:49.500 --> 00:07:53.500
By tracking your time you can improve future estimates,

145
00:07:53.500 --> 00:07:58.167
because you can look in the past because you've tracked your time,

146
00:07:58.167 --> 00:07:59.556
you have your historical data,

147
00:07:59.556 --> 00:08:02.589
and you can develop maybe some high and low estimated

148
00:08:02.589 --> 00:08:07.923
brackets for future tasks or future projects to help you

149
00:08:07.923 --> 00:08:10.056
do better high-level estimation.

150
00:08:10.056 --> 00:08:11.445
Also, it enables solid reporting.

151
00:08:11.445 --> 00:08:11.723
Okay,

152
00:08:11.723 --> 00:08:15.056
you're going to have to give some data regarding the actuals and

153
00:08:15.056 --> 00:08:17.156
hours to your management or your customer.

154
00:08:17.156 --> 00:08:18.056
Where are you?

155
00:08:18.056 --> 00:08:20.456
How many hours have you consumed?

156
00:08:20.456 --> 00:08:24.056
Maybe you've consumed 225 hours of a 500-hour project.

157
00:08:24.056 --> 00:08:25.456
Okay, I'm 45% in.

158
00:08:25.456 --> 00:08:25.806
Great!

159
00:08:25.806 --> 00:08:29.656
How else would you be able to say that or articulate

160
00:08:29.656 --> 00:08:31.556
that your customer or manager.

161
00:08:31.556 --> 00:08:33.056
Provides project summary.

162
00:08:33.056 --> 00:08:35.056
Are you on track?

163
00:08:35.056 --> 00:08:37.306
If not, maybe you need to readjust the estimates.

164
00:08:37.306 --> 00:08:39.056
Maybe you need to readjust the schedule.

165
00:08:39.056 --> 00:08:40.635
It gives you good feedback.

166
00:08:40.635 --> 00:08:43.161
And lastly, it will keep you in business,

167
00:08:43.161 --> 00:08:47.556
so whether you are an independent contractor or in corporate America,

168
00:08:47.556 --> 00:08:49.556
all managers, team leaders,

169
00:08:49.556 --> 00:08:53.723
or even independent contractors must regularly report true

170
00:08:53.723 --> 00:09:04.000
and valid costs and schedule information. Your customers will greatly appreciate you and it builds trust.

