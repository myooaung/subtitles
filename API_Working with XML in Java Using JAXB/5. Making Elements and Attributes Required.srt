1
00:00:02,059 --> 00:00:03,278
In XML Schema,

2
00:00:03,278 --> 00:00:08,610
it's possible to specify whether an element or attribute is required or not.

3
00:00:08,610 --> 00:00:14,245
If a required element or attribute is not present in the XML document,

4
00:00:14,245 --> 00:00:18,450
then the document is not valid according the schema.

5
00:00:18,450 --> 00:00:24,826
JAXB supports this using the XmlElement and XmlAttribute annotations on which

6
00:00:24,826 --> 00:00:29,213
you can indicate whether an element or attribute is required.

7
00:00:29,213 --> 00:00:34,028
Let's see how to do this, what effect it has on the generated XSD,

8
00:00:34,028 --> 00:00:38,358
and also what this means for marshalling and unmarshalling.

9
00:00:38,358 --> 00:00:47,012
Please open the next example in your IDE, which is ps-jaxb-15-required.

10
00:00:47,012 --> 00:00:52,895
First, let's take another look at the generated XSD from the previous example.

11
00:00:52,895 --> 00:00:54,142
If you look carefully,

12
00:00:54,142 --> 00:00:58,656
you'll see that most elements have their minOccurs attribute set to 0,

13
00:00:58,656 --> 00:01:02,385
which means that these elements are all optional.

14
00:01:02,385 --> 00:01:07,905
Many of the fields in our domain model, however, should be required.

15
00:01:07,905 --> 00:01:13,313
For example, a purchase order should always have an order date and a customer.

16
00:01:13,313 --> 00:01:17,094
The customer should always have a name, etc.

17
00:01:17,094 --> 00:01:23,097
It's easy to specify this by setting required = true on the relevant XmlElement

18
00:01:23,097 --> 00:01:28,254
and XmlAttribute annotations in the domain model classes.

19
00:01:28,254 --> 00:01:31,761
That's what I've done in this new example.

20
00:01:31,761 --> 00:01:35,823
When I run generateSchemaExample and look at the XSD,

21
00:01:35,823 --> 00:01:42,876
I see that most element declarations now no longer have minOccurs = 0.

22
00:01:42,876 --> 00:01:43,587
In fact,

23
00:01:43,587 --> 00:01:46,786
they don't have a minOccurs attribute at all anymore

24
00:01:46,786 --> 00:01:49,685
because the default for minOccurs is 1,

25
00:01:49,685 --> 00:01:53,924
so it doesn't need to be specified if it's 1.

26
00:01:53,924 --> 00:01:54,700
For attributes,

27
00:01:54,700 --> 00:01:58,190
whether the attribute is required or not is specified

28
00:01:58,190 --> 00:02:00,775
slightly differently in XML Schema.

29
00:02:00,775 --> 00:02:02,326
As you see,

30
00:02:02,326 --> 00:02:08,446
the declaration for the orderDate attribute now has use=required to indicate

31
00:02:08,446 --> 00:02:13,652
that the attribute is required on the purchaseOrder element.

32
00:02:13,652 --> 00:02:16,707
That's pretty straightforward and easy to understand,

33
00:02:16,707 --> 00:02:21,491
but let's take a look at what this means for marshalling and

34
00:02:21,491 --> 00:02:25,131
unmarshalling because there might be a small surprise there.

35
00:02:25,131 --> 00:02:30,611
What would you expect to happen if you would try to marshal an object that has

36
00:02:30,611 --> 00:02:34,608
a field that's mapped to a required element or attribute,

37
00:02:34,608 --> 00:02:37,234
but which is set to null?

38
00:02:37,234 --> 00:02:40,610
It would be reasonable if you would think that JAXB would throw an

39
00:02:40,610 --> 00:02:46,237
exception since it cannot generate valid XML because there's no value

40
00:02:46,237 --> 00:02:49,403
for the required element or attribute.

41
00:02:49,403 --> 00:02:52,569
That is, however, not what happens.

42
00:02:52,569 --> 00:02:57,169
JAXB just generates the invalid XML with the

43
00:02:57,169 --> 00:03:00,044
required element or attribute missing.

44
00:03:00,044 --> 00:03:04,829
The required setting on the annotations is simply ignored.

45
00:03:04,829 --> 00:03:06,317
Likewise, when ummarshalling,

46
00:03:06,317 --> 00:03:12,118
when a required element or attribute is missing in the XML,

47
00:03:12,118 --> 00:03:16,196
JAXB will happily unmarshal it without complaining.

48
00:03:16,196 --> 00:03:21,778
The required attribute on the annotations is only used for schema generation,

49
00:03:21,778 --> 00:03:27,933
and not automatically for validation during marshalling and unmarshalling.

50
00:03:27,933 --> 00:03:31,425
It is possible to perform validation against the schema

51
00:03:31,425 --> 00:03:33,202
during marshalling and unmarshalling,

52
00:03:33,202 --> 00:03:37,831
but you have to tell JAXB explicitly to do this.

53
00:03:37,831 --> 00:03:47,000
It does not validate by default. We'll see how to enable validation later in the course.

