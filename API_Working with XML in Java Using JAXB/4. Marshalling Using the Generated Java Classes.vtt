WEBVTT
1
00:00:02.138 --> 00:00:06.021
Because the generated domain model classes are slightly different than

2
00:00:06.021 --> 00:00:08.960
the handwritten classes that we worked with earlier,

3
00:00:08.960 --> 00:00:14.072
there are a few things slightly different when working with them.

4
00:00:14.072 --> 00:00:21.897
Let's continue with the previous example, ps-jaxb-19-xjc.

5
00:00:21.897 --> 00:00:24.360
Take a look at class MarshalExample.

6
00:00:24.360 --> 00:00:31.065
First, let's look at the main method, at how we create the JAXBContext there.

7
00:00:31.065 --> 00:00:33.500
In all the examples until now,

8
00:00:33.500 --> 00:00:37.117
we have created the JAXBContext with the newInstance

9
00:00:37.117 --> 00:00:41.003
factory method by passing PurchaseOrder.

10
00:00:41.003 --> 00:00:41.780
class.

11
00:00:41.780 --> 00:00:46.218
JAXB analyzes the class that we pass to it and then finds all the

12
00:00:46.218 --> 00:00:50.480
other domain model classes that are referenced directly or

13
00:00:50.480 --> 00:00:52.853
indirectly by the PurchaseOrder class.

14
00:00:52.853 --> 00:00:55.597
Instead of passing the PurchaseOrder class,

15
00:00:55.597 --> 00:01:00.426
we can also pass it the ObjectFactory class or the name of the

16
00:01:00.426 --> 00:01:04.154
package that contains the domain model classes.

17
00:01:04.154 --> 00:01:06.161
When you pass JAXB the package name,

18
00:01:06.161 --> 00:01:10.548
it will look for the ObjectFactory class in the package and

19
00:01:10.548 --> 00:01:13.994
find the domain model classes from there.

20
00:01:13.994 --> 00:01:17.866
Let's now look at the createPurchaseOrder method.

21
00:01:17.866 --> 00:01:23.949
The ObjectFactory class that was generated by xjc does not only contain a

22
00:01:23.949 --> 00:01:27.777
factory method for the comment field of class Item,

23
00:01:27.777 --> 00:01:31.001
it also contains factory methods to create instances of

24
00:01:31.001 --> 00:01:33.478
all the other domain model classes.

25
00:01:33.478 --> 00:01:34.880
In this example,

26
00:01:34.880 --> 00:01:41.136
I've used these factory methods now instead of creating the objects directly.

27
00:01:41.136 --> 00:01:45.758
This is not absolutely necessary because the only thing that these factory

28
00:01:45.758 --> 00:01:50.569
methods do is create an object using new and returning it,

29
00:01:50.569 --> 00:01:53.248
which you could just as well do yourself.

30
00:01:53.248 --> 00:01:57.531
It is useful, though, for the comment field of class Item,

31
00:01:57.531 --> 00:01:59.212
which is a JAXBElement.

32
00:01:59.212 --> 00:02:02.583
The reason why you might want to use the factory methods for

33
00:02:02.583 --> 00:02:05.753
the other objects as well is consistency,

34
00:02:05.753 --> 00:02:09.925
but it's really a matter of personal preference.

35
00:02:09.925 --> 00:02:13.370
Let's take a look at how we create the

36
00:02:13.370 --> 00:02:16.089
XMLGregorianCalendar object for the orderDate field.

37
00:02:16.089 --> 00:02:22.031
As I said before, XMLGregorianCalendar is a bit cumbersome to use.

38
00:02:22.031 --> 00:02:27.876
It's an abstract class, so you can't instantiate it directly.

39
00:02:27.876 --> 00:02:31.390
Instead, you need to use a different factory class,

40
00:02:31.390 --> 00:02:34.439
class DatatypeFactory, to instantiate it.

41
00:02:34.439 --> 00:02:42.637
This factory class has several factory methods named newXMLGregorianCalendar.

42
00:02:42.637 --> 00:02:48.225
If you want to create an XMLGregorianCalendar set to the current date and time,

43
00:02:48.225 --> 00:02:53.925
you have to pass that method a GregorianCalendar from package java.

44
00:02:53.925 --> 00:02:54.443
util.

45
00:02:54.443 --> 00:02:57.675
Finally, as you saw in the previous clip,

46
00:02:57.675 --> 00:03:03.139
xjc generates a wrapper class for the list of items in the purchase order.

47
00:03:03.139 --> 00:03:08.078
That makes it a bit more cumbersome to add items to the purchase order because

48
00:03:08.078 --> 00:03:11.541
we first have to create an instance of the wrapper class,

49
00:03:11.541 --> 00:03:15.629
then we have to add the items to the list inside the wrapper,

50
00:03:15.629 --> 00:03:27.000
and then we have to add the wrapper to the purchaseOrder object. I can now run the example, and I get the expected XML as output.

