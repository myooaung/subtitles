WEBVTT
1
00:00:00.000 --> 00:00:05.244
In this clip we're going to take a look at the concept of having multiple

2
00:00:05.244 --> 00:00:08.642
accounts within a company and managing those accounts.

3
00:00:08.642 --> 00:00:11.642
First of all, a review of the account details at AWS.

4
00:00:11.642 --> 00:00:14.642
We know we have a user account and behind the scenes,

5
00:00:14.642 --> 00:00:18.695
behind that username there is some unique IDs that are assigned

6
00:00:18.695 --> 00:00:21.642
at creation and you can't change these IDs,

7
00:00:21.642 --> 00:00:24.842
they're linked to the account, the account ID,

8
00:00:24.842 --> 00:00:29.642
a 12 digit number, the canonical ID, sometimes called the secret ID,

9
00:00:29.642 --> 00:00:32.792
is a much longer string of numbers and letters.

10
00:00:32.792 --> 00:00:36.642
These IDs can be viewed by administrators in the user account

11
00:00:36.642 --> 00:00:39.642
properties and they're called account identifiers.

12
00:00:39.642 --> 00:00:42.818
So when I'm managing multiple accounts,

13
00:00:42.818 --> 00:00:47.583
they can be handy for the organization of users,

14
00:00:47.583 --> 00:00:50.420
perhaps accounts for development, test, production.

15
00:00:50.420 --> 00:00:52.642
Or maybe separate business departments.

16
00:00:52.642 --> 00:00:56.909
Now accounts separated for specific needs could be

17
00:00:56.909 --> 00:01:00.109
because of security requirements, the location,

18
00:01:00.109 --> 00:01:02.289
maybe a special governance requirement,

19
00:01:02.289 --> 00:01:06.818
trying to manage the risk on what's going on in those

20
00:01:06.818 --> 00:01:11.142
different areas of your company, maybe it's specific development,

21
00:01:11.142 --> 00:01:12.642
maybe it's production.

22
00:01:12.642 --> 00:01:15.975
It's something that you really want control over,

23
00:01:15.975 --> 00:01:17.642
who's accessing those resources?

24
00:01:17.642 --> 00:01:21.079
Now let's say in the test environment somebody's created some resources

25
00:01:21.079 --> 00:01:24.775
and somebody in development says I'd like to be able to access those

26
00:01:24.775 --> 00:01:26.642
resources even though I didn't create them.

27
00:01:26.642 --> 00:01:33.071
Well I can enable cross account access and this will allow an IAM user to

28
00:01:33.071 --> 00:01:37.242
access those resources that were created by the other account.

29
00:01:37.242 --> 00:01:42.042
Now this is not enabled by default, has to be manually enabled,

30
00:01:42.042 --> 00:01:45.760
and the best practice, if I'm going to do this,

31
00:01:45.760 --> 00:01:48.936
then those multiple accounts should have consolidated billing enabled,

32
00:01:48.936 --> 00:01:52.042
this allows you to potentially say use tags for the

33
00:01:52.042 --> 00:01:55.342
different accounts and then you'll be able to get billing on

34
00:01:55.342 --> 00:01:57.309
what's going on with those resources.

35
00:01:57.309 --> 00:02:02.242
So let's look at a couple of potential design scenarios and start off looking

36
00:02:02.242 --> 00:02:06.642
at why would I use a single account or multiple accounts?

37
00:02:06.642 --> 00:02:09.589
Well here's an idea, a single AWS account,

38
00:02:09.589 --> 00:02:13.642
if you're in charge of head office and the branch offices,

39
00:02:13.642 --> 00:02:18.642
if you're doing a lot of the setup, maybe you should have a single account.

40
00:02:18.642 --> 00:02:24.942
Now an example for two accounts could be I've got dev and I've got

41
00:02:24.942 --> 00:02:27.642
test and they're distinctly different areas.

42
00:02:27.642 --> 00:02:30.642
Other account design scenarios to consider,

43
00:02:30.642 --> 00:02:34.642
multiple account locations because I've got San Jose,

44
00:02:34.642 --> 00:02:36.642
New York, Chicago, Toronto,

45
00:02:36.642 --> 00:02:41.642
divisions in my company and the people never really meet.

46
00:02:41.642 --> 00:02:45.142
I want to do the separation, I've got consolidated billing,

47
00:02:45.142 --> 00:02:48.642
I've got tags on the resources, based on San Jose,

48
00:02:48.642 --> 00:02:52.309
New York, et cetera, and I can control what's going on.

49
00:02:52.309 --> 00:02:55.309
So another example other than the locations of the

50
00:02:55.309 --> 00:02:57.975
accounts could be based on the resources.

51
00:02:57.975 --> 00:03:00.698
You're setting up resources for say DNS,

52
00:03:00.698 --> 00:03:03.142
maybe for Active Directory Domain Services,

53
00:03:03.142 --> 00:03:05.142
maybe for IAM itself.

54
00:03:05.142 --> 00:03:11.642
So looking at core resources, but you want control over who does what.

55
00:03:11.642 --> 00:03:14.800
You don't want the people that are doing directory services

56
00:03:14.800 --> 00:03:17.642
to have a hand in DNS and vice versa.

57
00:03:17.642 --> 00:03:23.086
So when we look at a best practice, we want to manage through governance,

58
00:03:23.086 --> 00:03:24.642
so here's an example.

59
00:03:24.642 --> 00:03:29.583
Let's say I've got a governing account that is going to set everything up,

60
00:03:29.583 --> 00:03:30.642
they're in charge.

61
00:03:30.642 --> 00:03:35.642
So I set up a VPC, I set up my networking, I set up the NACLs on that VPC.

62
00:03:35.642 --> 00:03:39.452
I set up the subnets, I set up the accounts,

63
00:03:39.452 --> 00:03:43.642
I set up the IAM, I set up the managed services.

64
00:03:43.642 --> 00:03:48.642
I set up the VPN access, I set up the security groups, I set up the EC2.

65
00:03:48.642 --> 00:03:50.054
It's a functioning environment.

66
00:03:50.054 --> 00:03:53.230
Now somebody's going to use that in my company,

67
00:03:53.230 --> 00:03:55.642
they're going to be the account that's governed.

68
00:03:55.642 --> 00:03:59.142
So in the governed account they'll look at it from the point of view,

69
00:03:59.142 --> 00:04:01.742
oh great I've got some EC2 resources to use,

70
00:04:01.742 --> 00:04:04.742
I've got maybe some database resources, RDS resources to use,

71
00:04:04.742 --> 00:04:07.031
and I've got maybe some elastic block storage.

72
00:04:07.031 --> 00:04:10.086
They're looking at it from a totally different point of view,

73
00:04:10.086 --> 00:04:14.642
they're not setting it up from scratch, but they're utilizing those resources.

74
00:04:14.642 --> 00:04:20.326
So when I have a cross account access establishing trust between the

75
00:04:20.326 --> 00:04:24.565
accounts to get this cross account access to resources,

76
00:04:24.565 --> 00:04:29.642
so in our case the governing account, it has the resources.

77
00:04:29.642 --> 00:04:31.392
It's the trusting account.

78
00:04:31.392 --> 00:04:35.329
And the account that's trying to access those resources,

79
00:04:35.329 --> 00:04:39.642
the governed account, is going to be the trusted account.

80
00:04:39.642 --> 00:04:46.642
Alright so in this demo let's take a look at managing multiple accounts.

81
00:04:46.642 --> 00:04:50.542
Now in regards to Wired Brain Coffee, they have an account at Amazon,

82
00:04:50.542 --> 00:04:52.642
and they have a developer at Amazon,

83
00:04:52.642 --> 00:04:56.877
and what they'd like to do is have the developer account and

84
00:04:56.877 --> 00:04:58.642
their corporate account linked together.

85
00:04:58.642 --> 00:05:03.695
They want to pay all the bills for the developer and they

86
00:05:03.695 --> 00:05:07.213
want some methodology of managing the projects and what's

87
00:05:07.213 --> 00:05:08.642
going on with the developer.

88
00:05:08.642 --> 00:05:10.642
So they want to do some linking.

89
00:05:10.642 --> 00:05:15.642
So logged into the console, if I want to set this sort of concept up,

90
00:05:15.642 --> 00:05:19.642
what I do is go and look at consolidated billing.

91
00:05:19.642 --> 00:05:21.975
So going down to my billing dashboard,

92
00:05:21.975 --> 00:05:24.975
I can then go and set up consolidated billing,

93
00:05:24.975 --> 00:05:28.824
selecting Consolidated Billing from the menu let's

94
00:05:28.824 --> 00:05:32.642
click Sign up for Consolidated Billing.

95
00:05:32.642 --> 00:05:38.242
Now what happens here is that Amazon checks out that my finances are okay,

96
00:05:38.242 --> 00:05:41.818
sends me an email, and says you're good to go.

97
00:05:41.818 --> 00:05:45.642
In the manage requests and accounts we have an option for linked accounts.

98
00:05:45.642 --> 00:05:48.642
Let's send a request to actually link the accounts together.

99
00:05:48.642 --> 00:05:52.198
So we're going to send an email off to the other account,

100
00:05:52.198 --> 00:05:54.420
along with a note that its consolidated billing,

101
00:05:54.420 --> 00:05:58.164
a request to do this, let's click Send, and we'll have to wait,

102
00:05:58.164 --> 00:06:00.294
we'll take a look at our request,

103
00:06:00.294 --> 00:06:03.642
we can see that there is a request for this account.

104
00:06:03.642 --> 00:06:06.975
So eventually the email shows up at the other account,

105
00:06:06.975 --> 00:06:09.642
the request to add account to consolidated bill.

106
00:06:09.642 --> 00:06:12.785
So clicking the link, the two accounts will be linked together.

107
00:06:12.785 --> 00:06:16.975
So the next thing I do is accept my request for consolidated billing.

108
00:06:16.975 --> 00:06:23.642
So now if we go back to consolidated billing, we can see the linked accounts.

109
00:06:23.642 --> 00:06:26.642
So there's the methodology to actually link a couple of accounts together.

110
00:06:26.642 --> 00:06:28.642
So then you can start managing billing.

111
00:06:28.642 --> 00:06:32.642
Now what we can do is set up some cross account access,

112
00:06:32.642 --> 00:06:36.975
so how I would do that is I would go into IAM and

113
00:06:36.975 --> 00:06:39.309
in IAM I would define the role.

114
00:06:39.309 --> 00:06:42.642
So under roles, well what do we want to do?

115
00:06:42.642 --> 00:06:46.431
Well we want the developers that are working with

116
00:06:46.431 --> 00:06:49.800
Wired Brain Coffee to have access, full access,

117
00:06:49.800 --> 00:06:52.221
to EC2, the EC2 instances.

118
00:06:52.221 --> 00:06:58.010
So let's create a new role and we'll call it ec2_access,

119
00:06:58.010 --> 00:07:02.326
click Next Step and select Role for Cross-Account Access.

120
00:07:02.326 --> 00:07:06.958
What we want is the access between accounts that we own,

121
00:07:06.958 --> 00:07:10.204
so we can define some access by clicking Select.

122
00:07:10.204 --> 00:07:13.642
So let's enter in the account ID for the other account.

123
00:07:13.642 --> 00:07:16.484
We could require MFA, Next Step.

124
00:07:16.484 --> 00:07:22.642
What policy do I want to attach out of the managed prebuilt policies?

125
00:07:22.642 --> 00:07:26.990
Let's look at EC2 and select full access, Next Step.

126
00:07:26.990 --> 00:07:33.499
So at the bottom of the screen there's a link which we would give to

127
00:07:33.499 --> 00:07:37.356
the users who can switch roles in the console.

128
00:07:37.356 --> 00:07:43.097
We have the account ID and the role is ec2_access, let's create the role.

129
00:07:43.097 --> 00:07:48.915
So let's test out the role by going over to the other account and seeing if

130
00:07:48.915 --> 00:07:52.842
I can access this account from the other linked account.

131
00:07:52.842 --> 00:07:57.942
So let's log out and we're going to sign into the console and

132
00:07:57.942 --> 00:08:03.642
it's set up to log in as the root user, let's cut and paste in the IAM log on.

133
00:08:03.642 --> 00:08:06.381
So let's enter the account information and log on.

134
00:08:06.381 --> 00:08:08.816
Now I logged on as an IAM user,

135
00:08:08.816 --> 00:08:13.842
so if I go up and select the user name I can switch roles.

136
00:08:13.842 --> 00:08:18.642
So the account I want to connect to, the role - ec2_access.

137
00:08:18.642 --> 00:08:25.642
I can color code it, let's pick blue, and let's click Switch Role.

138
00:08:25.642 --> 00:08:28.597
So you can see at the top right I have gone from one

139
00:08:28.597 --> 00:08:31.642
account to the other using a cross account policy and the

140
00:08:31.642 --> 00:08:36.142
role that we defined allows me, in that account,

141
00:08:36.142 --> 00:08:37.642
full EC2 access.

142
00:08:37.642 --> 00:08:48.000
So the Wired Brain Coffee developers will be happy. So there's a look at some of the concepts of managing multiple accounts.

