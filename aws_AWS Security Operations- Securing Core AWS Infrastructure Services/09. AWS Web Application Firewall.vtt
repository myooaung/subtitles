WEBVTT
1
00:00:00.000 --> 00:00:05.909
Let's take a look at the AWS web application firewall.

2
00:00:05.909 --> 00:00:08.659
Now we've looked at a couple of firewalls in this class.

3
00:00:08.659 --> 00:00:10.909
We've looked at the fact that there's that hidden

4
00:00:10.909 --> 00:00:12.488
firewall at the hypervisor level.

5
00:00:12.488 --> 00:00:16.909
We've looked at the fact there is, in a sense, firewalls on the subnets.

6
00:00:16.909 --> 00:00:19.678
There are firewalls protecting the instances,

7
00:00:19.678 --> 00:00:22.909
but what about protecting my edge locations?

8
00:00:22.909 --> 00:00:26.674
So the web application firewall monitors the HTTP,

9
00:00:26.674 --> 00:00:27.615
the HTTPS,

10
00:00:27.615 --> 00:00:31.353
any requests that are forwarded to an application

11
00:00:31.353 --> 00:00:34.465
load balancer or to CloudFront, the CDN,

12
00:00:34.465 --> 00:00:38.909
so something coming in to Amazon from the outside world.

13
00:00:38.909 --> 00:00:43.027
And the access is going to be based on conditions

14
00:00:43.027 --> 00:00:45.909
controlling the content that you want accessed.

15
00:00:45.909 --> 00:00:51.909
Requested content is delivered, or based on the request, hey, it's forbidden.

16
00:00:51.909 --> 00:00:54.909
We can also use CloudFront to return a custom error message page,

17
00:00:54.909 --> 00:00:58.709
and you might want to use something like this because it's PCI DSS 3.

18
00:00:58.709 --> 00:00:59.909
2 level 1 compliant,

19
00:00:59.909 --> 00:01:03.380
so maybe you need that sort of additional protection for your

20
00:01:03.380 --> 00:01:06.674
web-based content that's being served from AWS.

21
00:01:06.674 --> 00:01:11.380
So there's three basic behaviors that can be chosen when

22
00:01:11.380 --> 00:01:13.733
setting up the application firewall.

23
00:01:13.733 --> 00:01:18.909
Number 1, allow all requests, except the ones that you specify.

24
00:01:18.909 --> 00:01:23.409
So this might be to block requests from specific attackers,

25
00:01:23.409 --> 00:01:27.909
or block all requests, except the ones that you specify.

26
00:01:27.909 --> 00:01:29.076
So for example,

27
00:01:29.076 --> 00:01:33.353
maybe we're serving content for a restricted website to specific users,

28
00:01:33.353 --> 00:01:34.909
users that you know.

29
00:01:34.909 --> 00:01:39.909
Maybe you want to count the requests that match the properties that you specify.

30
00:01:39.909 --> 00:01:45.085
We allow or block requests based on an analysis of the

31
00:01:45.085 --> 00:01:47.909
properties contained in the web requests.

32
00:01:47.909 --> 00:01:50.556
So, we're getting down to a pretty granular level,

33
00:01:50.556 --> 00:01:52.909
saying that's in that request, not coming in.

34
00:01:52.909 --> 00:01:55.042
Protection by defined conditions,

35
00:01:55.042 --> 00:01:59.309
maybe the IP address where the requests originate,

36
00:01:59.309 --> 00:02:03.120
maybe there's specific strains that appear in the requests,

37
00:02:03.120 --> 00:02:08.284
maybe it's the length of requests, maybe it's the values in the request headers,

38
00:02:08.284 --> 00:02:11.284
maybe it's the presence of malicious SQL code,

39
00:02:11.284 --> 00:02:13.909
maybe it's the presence of cross-site scripting.

40
00:02:13.909 --> 00:02:18.576
So we have pretty powerful protection that's going to allow you to

41
00:02:18.576 --> 00:02:23.091
ultimately have a higher level of potential of protecting these

42
00:02:23.091 --> 00:02:26.909
DDoS attacks that happen in the world.

43
00:02:26.909 --> 00:02:30.438
Now the creation of these web security rules is utilizing the API,

44
00:02:30.438 --> 00:02:34.909
therefore, it can become completely automated by your developers.

45
00:02:34.909 --> 00:02:38.338
Let's take a look at a fairly new service.

46
00:02:38.338 --> 00:02:42.909
So the Shield is a service that is doing advanced DDoS protection.

47
00:02:42.909 --> 00:02:45.534
You've got a couple of different levels.

48
00:02:45.534 --> 00:02:48.909
There's the standard, which is dealing with web applications,

49
00:02:48.909 --> 00:02:51.601
what's a web application being attacked on?

50
00:02:51.601 --> 00:02:53.909
Well, network transport layer DDoS attacks.

51
00:02:53.909 --> 00:02:58.330
So ultimately what's going on here is that you're actually configuring the

52
00:02:58.330 --> 00:03:02.321
control of the web ACLs that match the DDoS request patterns.

53
00:03:02.321 --> 00:03:05.850
Obviously, that could be pretty difficult to actually figure out,

54
00:03:05.850 --> 00:03:09.488
and this is configured by the web application firewall service.

55
00:03:09.488 --> 00:03:15.294
So you may be thinking, well then can't I just use the web application firewall?

56
00:03:15.294 --> 00:03:17.601
Well hold on, we'll explain.

57
00:03:17.601 --> 00:03:19.909
So there's the one level.

58
00:03:19.909 --> 00:03:22.856
We also have the advanced, which says well,

59
00:03:22.856 --> 00:03:25.804
we cover more than just the web application,

60
00:03:25.804 --> 00:03:28.052
we'll cover elastic load balancer, CloudFront,

61
00:03:28.052 --> 00:03:28.814
Route 53,

62
00:03:28.814 --> 00:03:32.623
all of the services that potentially are going to be

63
00:03:32.623 --> 00:03:34.909
out there in the edge locations.

64
00:03:34.909 --> 00:03:39.027
This involves using Amazon to set up detection and mitigation,

65
00:03:39.027 --> 00:03:40.674
but using some intelligence,

66
00:03:40.674 --> 00:03:46.962
using the smarts of yourself and Amazon to protect for network layer 3 and 4,

67
00:03:46.962 --> 00:03:49.909
for example, UDP reflection, SYN flood attacks,

68
00:03:49.909 --> 00:03:54.273
DNS query flood attacks, application layer,

69
00:03:54.273 --> 00:03:57.909
including HTTP flood, cache-bursting attacks.

70
00:03:57.909 --> 00:04:02.909
With the advanced versus the standard, well there's some money now involved.

71
00:04:02.909 --> 00:04:05.856
So, when we look at the advanced,

72
00:04:05.856 --> 00:04:09.225
24x7 DDoS Response Team from Amazon helping you

73
00:04:09.225 --> 00:04:14.601
with assistance for your problems, advanced real-time metrics and reports,

74
00:04:14.601 --> 00:04:18.909
full visibility into attacks on your resources,

75
00:04:18.909 --> 00:04:22.615
and what this is giving you is cost protection,

76
00:04:22.615 --> 00:04:25.909
because if you're involving the Shield, Amazon's saying,

77
00:04:25.909 --> 00:04:27.709
hey, if we can't protect it,

78
00:04:27.709 --> 00:04:30.709
then we're not going to charge you for the overruns

79
00:04:30.709 --> 00:04:33.052
based on somebody attacking your system,

80
00:04:33.052 --> 00:04:35.909
pulling potential data requests out,

81
00:04:35.909 --> 00:04:39.909
overloading your budget potentially from outbound traffic.

82
00:04:39.909 --> 00:04:45.409
So it's giving you cost protection features for elastic load balancing,

83
00:04:45.409 --> 00:04:47.909
confirmation, and Route 53 services.

84
00:04:47.909 --> 00:04:51.615
So we can protect up to 100 CloudFront distributions,

85
00:04:51.615 --> 00:04:56.909
Route 53 zones, and/or elastic load balancing resources in total,

86
00:04:56.909 --> 00:05:05.000
so pretty big. So you have a choice, self-managed or AWS-managed service option.

