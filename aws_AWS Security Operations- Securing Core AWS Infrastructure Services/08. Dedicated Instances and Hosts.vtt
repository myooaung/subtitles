WEBVTT
1
00:00:01.000 --> 00:00:07.322
In this clip we're going to take a look at dedicated instances and hosts,

2
00:00:07.322 --> 00:00:12.128
different ways of utilizing your instances at AWS.

3
00:00:12.128 --> 00:00:15.075
So when I talk about a dedicated instance,

4
00:00:15.075 --> 00:00:19.128
we're talking about something that is defined for a single customer.

5
00:00:19.128 --> 00:00:23.128
So EC2 instances, got to be running in a VPC, dedicated to a single customer.

6
00:00:23.128 --> 00:00:27.328
So this is isolated from any other instances that are not dedicated,

7
00:00:27.328 --> 00:00:30.128
so anything in the VPC, in this case,

8
00:00:30.128 --> 00:00:33.861
is a dedicated instance for a single customer.

9
00:00:33.861 --> 00:00:37.128
You may have some unique compliance requirements,

10
00:00:37.128 --> 00:00:39.350
so you might have HIPAA,

11
00:00:39.350 --> 00:00:45.128
you may have something in your industry where you need this physical isolation.

12
00:00:45.128 --> 00:00:47.820
So this dedicated instance physically isolated at

13
00:00:47.820 --> 00:00:50.128
the hardware level of the host.

14
00:00:50.128 --> 00:00:52.233
Now since I'm dealing with a single customer,

15
00:00:52.233 --> 00:00:56.028
maybe I can share hardware with other instances from this same AWS account.

16
00:00:56.028 --> 00:00:58.278
Yes I can do that.

17
00:00:58.278 --> 00:01:02.778
And the tenancy of an instance, once it's been defined,

18
00:01:02.778 --> 00:01:06.828
can't be changed from multitenant to dedicated after launch.

19
00:01:06.828 --> 00:01:08.628
Now one other caveat,

20
00:01:08.628 --> 00:01:14.233
the tenancy of the instance if it is a different type of dedication,

21
00:01:14.233 --> 00:01:16.444
I'm being a little coy here,

22
00:01:16.444 --> 00:01:19.760
but the tenancy can change from a dedicated instance

23
00:01:19.760 --> 00:01:23.069
to a dedicated host after launch.

24
00:01:23.069 --> 00:01:26.010
I thought this was dedicated.

25
00:01:26.010 --> 00:01:31.878
Yeah, but the dedication is the instances dedicated to a single customer.

26
00:01:31.878 --> 00:01:35.028
So we have dedication, we're on a single server,

27
00:01:35.028 --> 00:01:38.219
but we're at a certain point of the stack.

28
00:01:38.219 --> 00:01:40.037
So what's this dedicated host?

29
00:01:40.037 --> 00:01:41.128
Well let's explain.

30
00:01:41.128 --> 00:01:44.128
So a dedicated host, we go a little lower in the stack.

31
00:01:44.128 --> 00:01:44.628
We say,

32
00:01:44.628 --> 00:01:47.549
well you can have a physical server if you want with

33
00:01:47.549 --> 00:01:49.233
a dedicated instance capacity.

34
00:01:49.233 --> 00:01:55.128
So it's as close as we're going to get to bare metal at AWS.

35
00:01:55.128 --> 00:01:58.171
If I have a compliance issue where I need something

36
00:01:58.171 --> 00:02:02.128
from the cores on up to be dedicated, this might be for you.

37
00:02:02.128 --> 00:02:04.128
So existing per socket,

38
00:02:04.128 --> 00:02:08.628
per core or approved VM software licenses that require

39
00:02:08.628 --> 00:02:12.128
access to the cores can be used.

40
00:02:12.128 --> 00:02:17.128
So examples, Windows Server, SQL Server, Linux Enterprise Server.

41
00:02:17.128 --> 00:02:21.128
So you could also be in a situation where you could have

42
00:02:21.128 --> 00:02:24.128
additional security and not only is that my server,

43
00:02:24.128 --> 00:02:27.812
I'm at the core level, I'm controlling the entire box.

44
00:02:27.812 --> 00:02:31.128
Now we can control the cores, do some customizations,

45
00:02:31.128 --> 00:02:33.795
based on the operating system that I deploy.

46
00:02:33.795 --> 00:02:35.128
So kind of interesting.

47
00:02:35.128 --> 00:02:39.253
So let's take a look at a comparison between the dedicated

48
00:02:39.253 --> 00:02:41.128
host versus the dedicated instances.

49
00:02:41.128 --> 00:02:44.286
We can see most of the features are for the dedicated host.

50
00:02:44.286 --> 00:02:48.339
The visibility of the sockets, the cores and the host ID, dedicated hosts.

51
00:02:48.339 --> 00:02:53.128
Since I have the whole box at that level I have affinity control

52
00:02:53.128 --> 00:02:56.503
between the host and the instances that are hosted.

53
00:02:56.503 --> 00:03:00.628
I've also got targeted instance placement because I control the whole box.

54
00:03:00.628 --> 00:03:03.028
Now in the case of a dedicated instance,

55
00:03:03.028 --> 00:03:07.401
because I have that separation with the dedicated instances in a VPC,

56
00:03:07.401 --> 00:03:10.128
I can have automatic instance placement.

57
00:03:10.128 --> 00:03:12.461
So I've got one of the features,

58
00:03:12.461 --> 00:03:16.128
when I'm comparing to the dedicated host versus the dedicated instances.

59
00:03:16.128 --> 00:03:20.414
There's really no performance security or physical differences between the

60
00:03:20.414 --> 00:03:24.128
dedicated instances and instances on the dedicated hosts,

61
00:03:24.128 --> 00:03:28.628
the distinct difference is the access to the cores,

62
00:03:28.628 --> 00:03:29.628
the sockets,

63
00:03:29.628 --> 00:03:35.128
that lower level based on the operating system that I want to install.

64
00:03:35.128 --> 00:03:37.952
So let's take a look at dedicated instances,

65
00:03:37.952 --> 00:03:41.128
where I would order them, what are my choices?

66
00:03:41.128 --> 00:03:44.673
So we're going to look at some of the documentation because what we

67
00:03:44.673 --> 00:03:49.820
want to find out is what kind of instances do I have to use in order

68
00:03:49.820 --> 00:03:52.128
to actually get a dedicated instance?

69
00:03:52.128 --> 00:03:55.128
Let's go down and take a look at a few options.

70
00:03:55.128 --> 00:03:58.128
The region I'm going to do testing in is US East.

71
00:03:58.128 --> 00:04:00.128
So I can pick an m4.

72
00:04:00.128 --> 00:04:00.461
large.

73
00:04:00.461 --> 00:04:04.795
The developers at Wired Brain Coffee want to do some work with the

74
00:04:04.795 --> 00:04:08.304
database and they want to be a little more secure.

75
00:04:08.304 --> 00:04:12.075
They've decided they're going to leave multi-tenancy behind and the owners

76
00:04:12.075 --> 00:04:16.496
are really thinking this is a good idea to be absolutely sure the database

77
00:04:16.496 --> 00:04:18.628
is absolutely separated because after all,

78
00:04:18.628 --> 00:04:20.503
they're handling credit card information,

79
00:04:20.503 --> 00:04:23.753
they don't have to adhere to PCI right now,

80
00:04:23.753 --> 00:04:26.253
but maybe in the future they'll have to,

81
00:04:26.253 --> 00:04:28.128
so they're looking at this seriously.

82
00:04:28.128 --> 00:04:31.128
So they are going to start with an m4.

83
00:04:31.128 --> 00:04:31.795
large box.

84
00:04:31.795 --> 00:04:34.128
So let's go and set this up.

85
00:04:34.128 --> 00:04:37.557
On the Services menu let's go into EC2,

86
00:04:37.557 --> 00:04:41.842
for their database testing they're going to run a Windows

87
00:04:41.842 --> 00:04:46.359
Server 2012 R2 and we want to do m4.

88
00:04:46.359 --> 00:04:50.128
large and next configure our instance details.

89
00:04:50.128 --> 00:04:52.355
Now here is where it gets interesting,

90
00:04:52.355 --> 00:04:57.128
I don't want to put it in the default VPC because that's got public access,

91
00:04:57.128 --> 00:05:00.128
I want a new VPC for doing all of this work.

92
00:05:00.128 --> 00:05:03.128
So we're going to get serious and create a new VPC.

93
00:05:03.128 --> 00:05:09.128
And we go over to the VPC console, let's click Create VPC,

94
00:05:09.128 --> 00:05:13.128
the name tag, wired brain coffee, my CIDR,

95
00:05:13.128 --> 00:05:14.461
what's my CIDR?

96
00:05:14.461 --> 00:05:18.461
Well it's my numbering scheme in CIDR notation and

97
00:05:18.461 --> 00:05:21.661
they give a fairly handy example, 10.

98
00:05:21.661 --> 00:05:22.195
0.

99
00:05:22.195 --> 00:05:22.728
0.

100
00:05:22.728 --> 00:05:29.128
0/24 and the block size between a /16 and 28 network mask.

101
00:05:29.128 --> 00:05:31.128
So we're going to go with that.

102
00:05:31.128 --> 00:05:33.128
Leaves us lots of room for growth.

103
00:05:33.128 --> 00:05:39.128
And here's where the dedicated instances meet the security at the network level.

104
00:05:39.128 --> 00:05:41.461
Yeah the VPC is an isolated portion,

105
00:05:41.461 --> 00:05:46.128
what if I want to ensure that my tenancy is for only dedicated instances?

106
00:05:46.128 --> 00:05:52.414
Well that's what I select when I'm creating the VPC and that

107
00:05:52.414 --> 00:05:57.128
goes and creates it and now within that VPC,

108
00:05:57.128 --> 00:06:00.205
only dedicated instances are going to be allowed

109
00:06:00.205 --> 00:06:02.128
because the tenancy is dedicated.

110
00:06:02.128 --> 00:06:04.970
So we'll do a refresh, here's my wired brain.

111
00:06:04.970 --> 00:06:08.128
I guess the next thing we need is a subnet.

112
00:06:08.128 --> 00:06:11.128
I've got subnets, but they're in the default VPC,

113
00:06:11.128 --> 00:06:14.128
so to start off we will create a subnet.

114
00:06:14.128 --> 00:06:16.023
My private database subnet,

115
00:06:16.023 --> 00:06:21.707
we want to place it into wired brain and we'll pick 10.

116
00:06:21.707 --> 00:06:22.181
0.

117
00:06:22.181 --> 00:06:22.654
0.

118
00:06:22.654 --> 00:06:23.128
0/24.

119
00:06:23.128 --> 00:06:26.075
It says righto, you've got a subnet,

120
00:06:26.075 --> 00:06:31.128
let's go back and maybe I have to refresh this yet again,

121
00:06:31.128 --> 00:06:34.557
private db subnet, auto-assign, we don't need public.

122
00:06:34.557 --> 00:06:37.128
So now we're ready to go.

123
00:06:37.128 --> 00:06:40.422
From this point forward we review and launch,

124
00:06:40.422 --> 00:06:44.128
after we add storage, tabs, security, and we're good.

125
00:06:44.128 --> 00:06:47.893
There's the steps for setting up a dedicated

126
00:06:47.893 --> 00:06:56.000
instance and a VPC that's dedicated, no pun intended, to dedicated instances.

