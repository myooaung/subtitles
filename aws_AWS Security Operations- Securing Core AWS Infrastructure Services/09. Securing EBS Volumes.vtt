WEBVTT
1
00:00:00.000 --> 00:00:05.046
In this clip we'll move down to the volumes that store our

2
00:00:05.046 --> 00:00:08.410
data or our secured boot or alternate drives,

3
00:00:08.410 --> 00:00:11.839
this is the Elastic Block Storage, how do we set these up?

4
00:00:11.839 --> 00:00:16.410
What are some of the security options with these volumes?

5
00:00:16.410 --> 00:00:21.410
Elastic Block Storage, the data volumes are unformatted block devices.

6
00:00:21.410 --> 00:00:24.466
Just before you get to use them they're wiped to ensure

7
00:00:24.466 --> 00:00:26.410
that they're clean and ready to go.

8
00:00:26.410 --> 00:00:28.981
You give them a name, you decide the interface,

9
00:00:28.981 --> 00:00:32.410
and then you create a file system on top of the volumes.

10
00:00:32.410 --> 00:00:34.660
So you can decide on the number of _____,

11
00:00:34.660 --> 00:00:37.410
how you want to link them together on a particular server,

12
00:00:37.410 --> 00:00:39.010
and away you go.

13
00:00:39.010 --> 00:00:43.410
So the customer creates the file system on the EBS volume.

14
00:00:43.410 --> 00:00:47.774
The access to the volumes is restricted to the account that created

15
00:00:47.774 --> 00:00:51.410
the volume and IAM can be used to grant access.

16
00:00:51.410 --> 00:00:54.319
Now we can also do snapshots, a snapshot,

17
00:00:54.319 --> 00:00:59.410
a block level view of the entire volume at a specific point in time.

18
00:00:59.410 --> 00:01:03.410
And we can make it publically available if we wish to other AWS accounts.

19
00:01:03.410 --> 00:01:08.410
Now you want to be careful, of course, but there is some built in security.

20
00:01:08.410 --> 00:01:12.010
If I share a snapshot this doesn't allow the other accounts the

21
00:01:12.010 --> 00:01:14.410
ability to alter or delete the original snapshot,

22
00:01:14.410 --> 00:01:19.410
they just are granted access.

23
00:01:19.410 --> 00:01:20.463
When I'm doing snapshots,

24
00:01:20.463 --> 00:01:22.831
they start off as an EBS volume before their

25
00:01:22.831 --> 00:01:25.172
snapshotted and they head over to Amazon S3.

26
00:01:25.172 --> 00:01:27.458
They head over to a bucket.

27
00:01:27.458 --> 00:01:29.743
Now they're not directly accessible, i.

28
00:01:29.743 --> 00:01:30.124
e.

29
00:01:30.124 --> 00:01:32.410
the snapshots in the S3 console,

30
00:01:32.410 --> 00:01:35.704
but the snapshots are accessible through the management

31
00:01:35.704 --> 00:01:40.179
console or you can use the command line interface if you've

32
00:01:40.179 --> 00:01:42.487
got that installed for complete control,

33
00:01:42.487 --> 00:01:44.410
highly recommended, by the way.

34
00:01:44.410 --> 00:01:45.234
Best practice,

35
00:01:45.234 --> 00:01:50.998
set up a schedule for manual replication to a different region for safe keeping,

36
00:01:50.998 --> 00:01:54.057
because when you create a snapshot, it's stored in S3,

37
00:01:54.057 --> 00:01:56.410
but it's in the region where you're located.

38
00:01:56.410 --> 00:02:00.621
Now when we focus on the security aspects of EBS,

39
00:02:00.621 --> 00:02:05.795
data stored in the volumes, well it's redundantly stored in multiple locations,

40
00:02:05.795 --> 00:02:10.410
within the same availability zone, but not across multiple zones.

41
00:02:10.410 --> 00:02:12.881
So multiple physical locations, multiple data centers,

42
00:02:12.881 --> 00:02:15.351
and there's no additional charge for this,

43
00:02:15.351 --> 00:02:20.220
this is just how EBS is set up with a level of redundancy.

44
00:02:20.220 --> 00:02:23.267
So we've got the data with multiple copies,

45
00:02:23.267 --> 00:02:28.410
we have snapshots to make copies of EBS when we deem it's necessary.

46
00:02:28.410 --> 00:02:32.010
So for best practices, save those snapshots to S3,

47
00:02:32.010 --> 00:02:35.035
replicate your data across multiple availability zones,

48
00:02:35.035 --> 00:02:39.410
and this is a manual administrative task at this point,

49
00:02:39.410 --> 00:02:42.839
encrypt your data in transit and at rest.

50
00:02:42.839 --> 00:02:46.696
So if you want boot volumes that are encrypted,

51
00:02:46.696 --> 00:02:49.910
other volumes to be encrypted, entirely possible.

52
00:02:49.910 --> 00:02:54.910
You can use a number of options for the encryption,

53
00:02:54.910 --> 00:02:59.621
you can decide to use the operating system that you've installed,

54
00:02:59.621 --> 00:03:04.848
if it has that feature, you can also use the encryption that Amazon provides,

55
00:03:04.848 --> 00:03:07.035
the Amazon EBS encryption service,

56
00:03:07.035 --> 00:03:11.410
and you can also use a variety of third-party products.

57
00:03:11.410 --> 00:03:14.137
If you're familiar with a product and you want to use it,

58
00:03:14.137 --> 00:03:16.410
if it runs in the VM, you can do it.

59
00:03:16.410 --> 00:03:19.704
Now think about this, I've got a volume,

60
00:03:19.704 --> 00:03:23.854
it's encrypted, it's attached to an instance that supports encryption,

61
00:03:23.854 --> 00:03:27.410
Windows, Linux, yeah they support encryption don't they?

62
00:03:27.410 --> 00:03:28.610
Where's the work done?

63
00:03:28.610 --> 00:03:32.510
The data stored at rest in the volume, the I/O of the disk,

64
00:03:32.510 --> 00:03:36.704
and the snapshots create from the volume are all encrypted.

65
00:03:36.704 --> 00:03:50.000
So it's controlled by the instance, once we've turned on the encryption, this is the Amazon encryption, then in transit and at rest are controlled.

