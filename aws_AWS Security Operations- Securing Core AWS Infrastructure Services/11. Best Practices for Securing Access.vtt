WEBVTT
1
00:00:00.000 --> 00:00:08.152
This clip looks at best practices for securing access to your edge locations.

2
00:00:08.152 --> 00:00:08.952
Consider prewarming.

3
00:00:08.952 --> 00:00:11.752
How fast do you need to operate?

4
00:00:11.752 --> 00:00:14.152
I'm setting up a load balancer,

5
00:00:14.152 --> 00:00:18.965
and we know that the load balancer can be application based or web based.

6
00:00:18.965 --> 00:00:21.152
There could be a level of traffic.

7
00:00:21.152 --> 00:00:23.505
How much traffic are you going to have?

8
00:00:23.505 --> 00:00:26.152
How much traffic is Wired Brain going to have?

9
00:00:26.152 --> 00:00:29.652
Well, they don't really know, they're kind of a new company,

10
00:00:29.652 --> 00:00:33.930
but maybe over time you say, I know this is the holiday season,

11
00:00:33.930 --> 00:00:37.041
or a sales season, and I need capacity.

12
00:00:37.041 --> 00:00:40.152
So you'll see this note on Amazon saying,

13
00:00:40.152 --> 00:00:43.152
configure the load balancer to have the appropriate level

14
00:00:43.152 --> 00:00:45.152
of capacity based on expected traffic,

15
00:00:45.152 --> 00:00:49.452
but you have to contact AWS and say I want my load balancer prewarmed,

16
00:00:49.452 --> 00:00:53.799
and they'll say, here's some questions that we need answers for such as,

17
00:00:53.799 --> 00:00:59.152
what's the request rate expected, are there keep-alives used on the back end,

18
00:00:59.152 --> 00:01:03.438
meaning how long is that channel open for requests?

19
00:01:03.438 --> 00:01:09.152
Are there things being kept alive for a longer period of time?

20
00:01:09.152 --> 00:01:12.844
What's the percent of traffic using SSL termination

21
00:01:12.844 --> 00:01:15.152
on the elastic load balancer?

22
00:01:15.152 --> 00:01:18.093
What's the amount of data passing through the load balancer?

23
00:01:18.093 --> 00:01:21.243
What's the number of availability zones that will be used?

24
00:01:21.243 --> 00:01:22.697
So they'll do it,

25
00:01:22.697 --> 00:01:27.061
but they want to know that you know exactly how much traffic

26
00:01:27.061 --> 00:01:31.819
you're going to be actually expecting, because they want to be ready for it.

27
00:01:31.819 --> 00:01:35.152
And finally, is the back end scaled up and down?

28
00:01:35.152 --> 00:01:36.415
Well, we hope so.

29
00:01:36.415 --> 00:01:38.941
So you're telling them, this is my two-tier,

30
00:01:38.941 --> 00:01:42.352
three-tier app, here's all the bells and whistles I've got,

31
00:01:42.352 --> 00:01:47.152
I need a load balancer based on expected traffic in these conditions.

32
00:01:47.152 --> 00:01:52.152
Monitoring the elastic load balancers with CloudWatch, absolutely.

33
00:01:52.152 --> 00:01:56.090
And we want to consider using the following metrics,

34
00:01:56.090 --> 00:01:59.152
the latency, how much traffic you're having,

35
00:01:59.152 --> 00:02:02.352
what's the request count, is the traffic building,

36
00:02:02.352 --> 00:02:06.652
what's healthy, what's unhealthy, what's my back-end response error messages,

37
00:02:06.652 --> 00:02:10.152
what's the elastic load balancing response count?

38
00:02:10.152 --> 00:02:12.252
We're tracking all of these details.

39
00:02:12.252 --> 00:02:15.402
You'll be able to find out exactly the potential

40
00:02:15.402 --> 00:02:17.152
problems with your load balancer.

41
00:02:17.152 --> 00:02:21.152
You won't know if you don't monitor.

42
00:02:21.152 --> 00:02:24.652
It's like that Easy button at Staples.

43
00:02:24.652 --> 00:02:29.152
Let the elastic load balancer do the SSL termination.

44
00:02:29.152 --> 00:02:31.777
Plan to terminate at the ELB.

45
00:02:31.777 --> 00:02:36.152
This will save time, CPU processing time for your instances,

46
00:02:36.152 --> 00:02:39.277
saves you administrative overhead, you set up the load balancer,

47
00:02:39.277 --> 00:02:41.152
the certificates, the level of security,

48
00:02:41.152 --> 00:02:44.152
you're done, and you've protected your instances.

49
00:02:44.152 --> 00:02:47.708
Now consider to use cross zone load balancing,

50
00:02:47.708 --> 00:02:49.485
not enabled by default,

51
00:02:49.485 --> 00:02:53.752
but plan on placing your instances into multiple availability zones,

52
00:02:53.752 --> 00:02:56.152
and take advantage of this feature.

53
00:02:56.152 --> 00:03:00.652
I'm going across my different availability zones and balancing

54
00:03:00.652 --> 00:03:04.152
between the resources in the different zone.

55
00:03:04.152 --> 00:03:09.152
This will give you availability, resiliency, failover.

56
00:03:09.152 --> 00:03:11.096
Make sure you rely on health checks.

57
00:03:11.096 --> 00:03:12.485
Take advantage of health checks,

58
00:03:12.485 --> 00:03:16.152
health checks for the elastic load balancer and their instances,

59
00:03:16.152 --> 00:03:17.152
of course.

60
00:03:17.152 --> 00:03:23.152
I have an outage, requests are routed away from the unhealthy ELB,

61
00:03:23.152 --> 00:03:25.339
hopefully to another availability zone.

62
00:03:25.339 --> 00:03:30.152
Instance failure, auto scaling groups integrated with the elastic load balancer.

63
00:03:30.152 --> 00:03:33.836
Route 53 health checks are published to all DNS servers,

64
00:03:33.836 --> 00:03:37.152
so no matter where your clients are coming from,

65
00:03:37.152 --> 00:03:39.879
the DNS servers know what's healthy and what is not.

66
00:03:39.879 --> 00:03:43.537
Now when you get some time, take a look at your DNS records,

67
00:03:43.537 --> 00:03:48.152
and make sure you're not using A address records for domain names.

68
00:03:48.152 --> 00:03:50.731
This means you're using hard-coded IP addresses.

69
00:03:50.731 --> 00:03:55.152
What you want to use is an alias or canonical name record,

70
00:03:55.152 --> 00:03:58.352
where the resource can change behind the record,

71
00:03:58.352 --> 00:04:01.152
gives you the failover that you require.

72
00:04:01.152 --> 00:04:05.152
You don't want to be a relying on a specific, hard-coded IP address.

73
00:04:05.152 --> 00:04:08.152
What happens when that box disappears?

74
00:04:08.152 --> 00:04:11.152
And lastly, protect your web app.

75
00:04:11.152 --> 00:04:14.152
Stick it behind a load balancer.

76
00:04:14.152 --> 00:04:18.402
The load balancer is only accepting well-formed TCP connections,

77
00:04:18.402 --> 00:04:21.152
so stuff isn't getting through that's not supposed to get through.

78
00:04:21.152 --> 00:04:25.152
SYN floods or UDP reflection attacks, they're just not accepted.

79
00:04:25.152 --> 00:04:27.152
They are not well formed.

80
00:04:27.152 --> 00:04:32.052
When an attack is detected, the ELB will scale to absorb the additional traffic,

81
00:04:32.052 --> 00:04:35.902
so if there's a DDoS attack going on hammering the service,

82
00:04:35.902 --> 00:04:39.752
in the background the load balancer will detect this and will

83
00:04:39.752 --> 00:04:44.652
scale up to get around that CPU overload that's going on and

84
00:04:44.652 --> 00:04:48.152
trying to respond to all those fake requests.

85
00:04:48.152 --> 00:04:52.858
Use the web application firewall to create a mitigation strategy,

86
00:04:52.858 --> 00:04:56.564
block known IP addresses with rules and actions,

87
00:04:56.564 --> 00:04:59.446
and create rules with conditions that block,

88
00:04:59.446 --> 00:05:00.681
and, as mentioned,

89
00:05:00.681 --> 00:05:04.626
use the elastic load balancing and the auto-scaling groups for

90
00:05:04.626 --> 00:05:07.205
that horizontal scale of the your applications,

91
00:05:07.205 --> 00:05:13.152
and if I do that, I can monitor and respond with CloudWatch alarms.

92
00:05:13.152 --> 00:05:15.363
It's time for a wrap up.

93
00:05:15.363 --> 00:05:18.678
In this module, we looked at elastic load balancing,

94
00:05:18.678 --> 00:05:22.552
we looked at traffic encryption, we looked at security policies,

95
00:05:22.552 --> 00:05:28.512
we looked at Route 53, we took a look at the AWS web application firewall,

96
00:05:28.512 --> 00:05:33.192
and we looked at the new AWS Shield, and then we ended off,

97
00:05:33.192 --> 00:05:37.152
as we always as do, with best practices for securing access.

98
00:05:37.152 --> 00:05:39.152
That's it for this module.

99
00:05:39.152 --> 00:05:41.152
Thank you so much for hanging in.

100
00:05:41.152 --> 00:05:50.000
Hopefully you learned lots of good stuff. Up next, securing access to S3 object storage.

