1
00:00:02,150 --> 00:00:05,190
So what is flex grow, how can we use it?

2
00:00:05,420 --> 00:00:09,820
Well let's first again delete align self from our item three right here

3
00:00:10,160 --> 00:00:16,070
and if we now look at our elements, I prepared two equal elements here,

4
00:00:16,220 --> 00:00:24,170
the last one's width, the width of 350 pixels and as you might imagine, I had a good reason to do that because

5
00:00:24,260 --> 00:00:28,930
I will now show you flex grow with the example of these two items.

6
00:00:28,940 --> 00:00:38,360
So for that, we go back to our code and now we will add flex grow right here. Flex grow has an initial

7
00:00:38,360 --> 00:00:39,630
value of zero,

8
00:00:39,710 --> 00:00:47,360
so if I add flex grow zero to both our items right here, like this and like that and go back, you can

9
00:00:47,360 --> 00:00:53,600
see that if I inspect the width now, we have a width of 350 pixels because we've reach the maximum

10
00:00:53,600 --> 00:00:57,900
and if I decrease the size, we still have wrap applied,

11
00:00:57,920 --> 00:01:04,010
let me go back quickly and change our flex wrap to no wrap because this makes it easier for me to

12
00:01:04,010 --> 00:01:07,220
show you the flex grow property, like that.

13
00:01:07,220 --> 00:01:13,370
So if I now decrease the size, you know already it decreases the width up to the point where the content

14
00:01:13,520 --> 00:01:21,470
needs the space inside our box which is right here at 202 let's say, round about 200 pixels for both

15
00:01:21,560 --> 00:01:23,060
elements. Important,

16
00:01:23,060 --> 00:01:24,740
both elements behave the same way,

17
00:01:24,860 --> 00:01:26,060
that's the minimum value

18
00:01:26,090 --> 00:01:32,500
and if I increase the size, as I showed you, we have a maximum value of 350 pixels.

19
00:01:32,570 --> 00:01:41,330
Now let's keep that in mind and let's now go back to our code right here and scroll down to item 5, because

20
00:01:41,420 --> 00:01:45,860
what if I change the value now from 0 to 1 for example?

21
00:01:45,860 --> 00:01:50,360
Keep in mind, the default value for flex grow is 0 for item 6

22
00:01:50,360 --> 00:01:53,450
and of course also for all the other items.

23
00:01:53,460 --> 00:01:58,280
Now let's go back and let me first reduce the size, like that

24
00:01:58,280 --> 00:02:02,560
and now reload the page because as you can imagine, the size is still equal,

25
00:02:02,560 --> 00:02:08,940
316.3, 316.3 but if now increase the width right here,

26
00:02:09,900 --> 00:02:10,770
like that,

27
00:02:10,890 --> 00:02:12,080
can you see what happens?

28
00:02:13,010 --> 00:02:14,830
The last item,

29
00:02:14,870 --> 00:02:19,540
so our item right here with flex grow zero doesn't increase the width

30
00:02:19,610 --> 00:02:28,160
as soon as it hits its maximum of 350 pixels but if I now inspect the other element, we can see that

31
00:02:28,160 --> 00:02:31,550
it has a width of 383 pixels now

32
00:02:31,770 --> 00:02:38,810
and this is interesting, right? Because just by adding this flex grow value of one, the element used

33
00:02:38,900 --> 00:02:44,450
the remaining space available because otherwise if we would increase the width of the page, we would

34
00:02:44,450 --> 00:02:50,630
have space available if this would be limited to 350 pixels and simply occupies this space because we

35
00:02:50,630 --> 00:02:53,100
added flex grow one right here.

36
00:02:53,120 --> 00:02:56,800
Now we added flex grow one, what happens now

37
00:02:56,810 --> 00:03:04,280
if I add flex grow two to our last item right here, this one? Let's do that and let's first again decrease

38
00:03:04,280 --> 00:03:06,610
the size of course and reload the page

39
00:03:06,920 --> 00:03:10,070
and let's now increase the size.

40
00:03:10,240 --> 00:03:11,870
I think it's hard to see,

41
00:03:11,990 --> 00:03:14,020
let me change it maybe to 4

42
00:03:14,030 --> 00:03:15,440
even, so that's a bigger difference.

43
00:03:15,440 --> 00:03:20,490
So we have flex grow one for item 5 and flex grow four for item 6.

44
00:03:20,530 --> 00:03:31,870
So if I now reload and increase the width, I think now you can see it right here because the last item now

45
00:03:31,870 --> 00:03:33,820
became the one with the biggest width

46
00:03:34,020 --> 00:03:39,730
and if we inspect the values, we can see that this item, that's not the best value, let me increase it

47
00:03:39,820 --> 00:03:40,900
a bit more

48
00:03:41,200 --> 00:03:43,390
so that we're close to 400, this makes it easier,

49
00:03:43,390 --> 00:03:44,010
yes.

50
00:03:44,140 --> 00:03:48,260
Now we can see that this item has a width of 400,

51
00:03:48,280 --> 00:03:52,510
this one has a width of 556.

52
00:03:52,520 --> 00:03:54,060
Now how is this calculated?

53
00:03:54,090 --> 00:04:01,120
Well basically, what happens from a mathematical perspective is the remaining space is calculated first,

54
00:04:01,160 --> 00:04:05,840
so if we increase the width, we would have an empty space right here which is not occupied by elements

55
00:04:06,200 --> 00:04:08,420
and this space has a certain width,

56
00:04:08,720 --> 00:04:18,160
then this space will be divided by five because we have one for this element and four for this element.

57
00:04:18,160 --> 00:04:20,590
So we basically have five parts,

58
00:04:20,590 --> 00:04:23,730
how this remaining total space should be divided.

59
00:04:24,020 --> 00:04:31,240
Well and one part of this remaining space, so one-fifth of it will be applied to our first element right

60
00:04:31,240 --> 00:04:31,570
here,

61
00:04:31,570 --> 00:04:36,420
so round about 50 pixels and then we have the remaining four-fifths,

62
00:04:36,430 --> 00:04:41,260
so round about 200 pixels which will be added to that last item.

63
00:04:41,260 --> 00:04:49,440
So what we basically see right here is by increasing the width of our page, we had a remaining space of 250

64
00:04:49,510 --> 00:04:56,640
pixels that must be distributed between these two flex grow items right here. As we have flex grow

65
00:04:56,650 --> 00:05:04,280
one for this item, one-fifth is applied to this item and four-fifths are applied to this last item,

66
00:05:04,480 --> 00:05:06,100
so that's how it works.

67
00:05:06,160 --> 00:05:13,210
If I now would add flex grow one to this element right here also, like that and if I reload the page

68
00:05:13,210 --> 00:05:14,100
again,

69
00:05:14,350 --> 00:05:19,570
then you can see that both elements now have a width of round about 425

70
00:05:19,600 --> 00:05:28,690
pixels because this simply means again we have a free space of 250 pixels which will

71
00:05:28,690 --> 00:05:30,590
then be split into two parts,

72
00:05:30,610 --> 00:05:35,230
one right here and one right there and then equally distributed.

73
00:05:35,260 --> 00:05:43,620
If I change it to two right here as a last example and reload the page, you can see that we have 85 right

74
00:05:43,620 --> 00:05:44,250
here

75
00:05:44,400 --> 00:05:47,550
and we have 170 right there,

76
00:05:47,550 --> 00:05:54,170
it's not totally matching because it's not exactly 250 pixels but again, one-third is added right here

77
00:05:54,480 --> 00:06:02,570
and two-thirds are added to this item right here. One last thing about flex grow though, if I would change

78
00:06:02,810 --> 00:06:10,040
the flex wrap again to wrap right here, like that and go back and reload our page, then nothing happens

79
00:06:10,040 --> 00:06:10,740
right here

80
00:06:10,880 --> 00:06:20,460
but if I decrease the size, we can see that as soon as we hit the defined width of 350 pixels, the element

81
00:06:20,550 --> 00:06:22,890
will be wrapped into the second line

82
00:06:23,770 --> 00:06:29,490
and interestingly, this element then occupies the entire space of this second line.

83
00:06:29,530 --> 00:06:30,540
Now why is this happening?

84
00:06:30,700 --> 00:06:37,450
Well if this element would only have 350 pixels, there would be an empty space and this empty space will

85
00:06:37,450 --> 00:06:44,470
again be filled but we only have one element now with a flex grow of two applied, doesn't make a difference

86
00:06:44,500 --> 00:06:51,550
though, if I apply five right here for example, it will remain the same because the space can only be distributed

87
00:06:51,610 --> 00:06:52,650
to one element,

88
00:06:52,660 --> 00:06:58,450
therefore as soon as you apply a flex grow which is larger than zero, a single element which will

89
00:06:58,450 --> 00:07:04,060
be wrapped into the second line will occupy the entire space as we can see it right here.

90
00:07:04,390 --> 00:07:06,560
So this is the last thing about flex grow

91
00:07:06,610 --> 00:07:12,120
and let me change flex wrap back to no wrap right here

92
00:07:12,310 --> 00:07:19,330
and let's also the delete flex grow right here and right there because we don't need it at the moment, right

93
00:07:20,080 --> 00:07:23,390
here like that because our page looks fine like this.

94
00:07:23,740 --> 00:07:30,880
And with that, we can jump to the next property because if we have flex grow, well chances are that

95
00:07:30,880 --> 00:07:32,710
we also have flex shrink.
