WEBVTT
1
00:00:02.310 --> 00:00:07.430
So back in our theory grid, here we also added the grid areas

2
00:00:07.500 --> 00:00:09.690
the last time we worked on that

3
00:00:09.690 --> 00:00:15.780
and don't forget that earlier at the beginning of this module, I showed that under the layout tab of the

4
00:00:15.780 --> 00:00:21.200
Firefox developer tools, you get that display area names checkbox.

5
00:00:21.200 --> 00:00:26.850
Now if you click it, here you can then also see the areas defined by you.

6
00:00:27.030 --> 00:00:33.570
So this can be really useful since this gives you an overview over which parts of your grid do have

7
00:00:33.570 --> 00:00:36.770
which name, just as a side note.

8
00:00:36.900 --> 00:00:43.580
However in this video here, I also want to dive into something else related to areas and not related

9
00:00:43.580 --> 00:00:45.810
to the areas but to line names again.

10
00:00:46.240 --> 00:00:50.670
Remember that earlier, we set these names here on the rows.

11
00:00:50.790 --> 00:00:55.010
We didn't set names for columns because there, we're using repeat,

12
00:00:55.020 --> 00:00:58.560
now the obvious question is how do you assign a line name here

13
00:00:58.740 --> 00:01:01.190
because this gets repeated? You can't set

14
00:01:01.260 --> 00:01:08.190
column one start, it will get repeated and you don't need four column one start lines, do you?

15
00:01:08.190 --> 00:01:14.940
Well turns out you might need. So we can add a line name here in the repeat argument, in the second argument

16
00:01:15.210 --> 00:01:21.410
just as we add it in other places. We add square brackets and in the square brackets here,

17
00:01:21.480 --> 00:01:23.180
we then assign the line name

18
00:01:23.190 --> 00:01:26.320
we have. Now these are column line names,

19
00:01:26.430 --> 00:01:29.120
so let's maybe name it column start.

20
00:01:29.130 --> 00:01:36.030
I deliberately don't add a number here, so it's not column one start or anything like that because that

21
00:01:36.030 --> 00:01:37.550
wouldn't really be helpful,

22
00:01:37.740 --> 00:01:43.730
it's in the end getting repeated. After this, I'll add column end though.

23
00:01:43.800 --> 00:01:50.630
So now I define column line names and these line names will actually be repeated.

24
00:01:51.030 --> 00:01:53.340
Now we're not using line names anymore,

25
00:01:53.340 --> 00:01:59.610
we're using the area but let's switch back to line names and let's assign our remaining unassigned element,

26
00:01:59.970 --> 00:02:04.550
element 1 to a place in the grid with the help of line names.

27
00:02:04.590 --> 00:02:10.920
So here, I will add my grid column property to use that shorthand

28
00:02:11.080 --> 00:02:18.630
and now how could I tell this that I want to position it let's say in this empty box here, in this empty

29
00:02:18.630 --> 00:02:19.740
cell?

30
00:02:20.010 --> 00:02:25.600
It would start at column line two and end at column line three

31
00:02:25.710 --> 00:02:30.600
but we assigned a name but the name is column start all the time.

32
00:02:30.810 --> 00:02:36.870
Well if you repeat column names and you have the same name more than once, you can use column-start

33
00:02:36.870 --> 00:02:42.030
here and then add the number of occurrence you want to start.

34
00:02:42.030 --> 00:02:45.910
So the first line here will actually be column start one,

35
00:02:46.030 --> 00:02:53.610
the second one is column start two, you don't add this as part of the name but you simply add two as

36
00:02:53.610 --> 00:02:58.540
an extra value after the name, then your forward slash and then

37
00:02:58.580 --> 00:03:05.400
the point where you want to end, so column end and here also, the second occurrence because the first

38
00:03:05.400 --> 00:03:07.590
column end will be line number

39
00:03:07.710 --> 00:03:10.150
two here, this vertical line,

40
00:03:10.320 --> 00:03:12.120
the second column

41
00:03:12.150 --> 00:03:16.570
end is this one, With that if we save that and reload, 

42
00:03:16.840 --> 00:03:23.640
this is now placed exactly where we want to place it. So you can use line names together with repeat,

43
00:03:23.730 --> 00:03:30.060
you just need to specify the number of occurrence so to say, so which one of the automatically generated

44
00:03:30.240 --> 00:03:32.650
lines do you want to target?

45
00:03:32.670 --> 00:03:35.730
So this is one very nice thing,

46
00:03:35.790 --> 00:03:42.430
one other thing you might have noticed is that I always used -start and -end at the name.

47
00:03:42.570 --> 00:03:48.810
Now it makes sense to use this because it clearly marks what the line is or where it is positioned

48
00:03:49.020 --> 00:03:55.240
but it also yields one other benefit, we get automatically generated template areas

49
00:03:55.410 --> 00:04:03.180
if we follow the naming patterns of naming our lines with -start or -end, let me show you what

50
00:04:03.180 --> 00:04:03.850
I mean.

51
00:04:04.720 --> 00:04:11.280
In our container, we got this first row which has a height of 5rem,

52
00:04:11.480 --> 00:04:16.720
let's maybe rename it from row one start to hd-start, hd for header,

53
00:04:16.720 --> 00:04:21.520
I'm not using header because I defined it here and I want to show you that we create a new area here

54
00:04:21.580 --> 00:04:30.380
automatically. I'll name this then hd-end, so after the value for the first row and now let's also work

55
00:04:30.470 --> 00:04:36.410
our template columns. Now instead of the repeat function would be the wrong place because the pattern

56
00:04:36.410 --> 00:04:37.640
would then be repeated

57
00:04:37.640 --> 00:04:41.770
and I want to enclose all column with a start and end line name

58
00:04:41.780 --> 00:04:44.680
but I can simply add it in front and after repeat. 

59
00:04:44.690 --> 00:04:51.850
So in square brackets, I can add hd-start here too and after the repeat function at the very end of

60
00:04:51.850 --> 00:04:52.840
this declaration

61
00:04:52.840 --> 00:05:00.310
therefore, I will also add square brackets and add hd-end. What this will give us is a named line or two

62
00:05:00.310 --> 00:05:06.020
named lines, one in front of the whole column set here and one after all the columns,

63
00:05:06.280 --> 00:05:08.890
it still also creates these line names in between

64
00:05:08.890 --> 00:05:17.010
but we also get these outside of the repeat function and we get the same line names for the first row,

65
00:05:17.110 --> 00:05:23.590
so for the first two row lines in the end, hd-start for the first row line, hd-end for the second and it's

66
00:05:23.590 --> 00:05:27.700
no problem that some lines have duplicate or multiple names I should say.

67
00:05:28.150 --> 00:05:35.860
So now, we got hd-start and hd-end and we clearly mark or enclose an area in the grid with that. We

68
00:05:35.860 --> 00:05:40.730
can now use this as an automatically generated area name, HD.

69
00:05:40.930 --> 00:05:47.920
So if we follow the pattern of having -start or -end after the name, then this name in front

70
00:05:47.920 --> 00:05:54.340
of -start and -end will become an automatically generated grid area enclosing whatever you

71
00:05:54.340 --> 00:05:56.270
put between these lines.

72
00:05:56.290 --> 00:06:00.360
So now we can use HD as a name for our element three.

73
00:06:00.410 --> 00:06:04.360
Right now, we use header, that's the area we defined on our own,

74
00:06:04.420 --> 00:06:11.270
if I now change this to HD and save this and keep in mind, HD is not defined by us here,

75
00:06:11.560 --> 00:06:19.240
if we go back and reload, we have the same result as before because we still occupy the full first row

76
00:06:19.780 --> 00:06:25.520
simply due to our set up here, simply because we use this pattern.

77
00:06:25.720 --> 00:06:31.850
If I change one name, for example hd-start to hd-sart, this is still a valid line name,

78
00:06:31.900 --> 00:06:39.850
we can name it like this but if I reload, our layout breaks because now we're referencing an area, HD

79
00:06:40.420 --> 00:06:45.910
which does not exist because it's not automatically generated because we have to follow that naming

80
00:06:45.910 --> 00:06:48.340
pattern of -start and -end

81
00:06:48.340 --> 00:06:49.610
at the end.

82
00:06:49.690 --> 00:06:51.450
So this is also useful to know.

83
00:06:51.520 --> 00:06:58.750
I'd argue that this approach of manually laying out the grid is easier to understand for your fellow developers

84
00:06:59.260 --> 00:07:05.740
but it is good to know that you have the possibility of automatically inferring the grid area names

85
00:07:05.740 --> 00:07:08.280
or using these autogenerated grid areas.
