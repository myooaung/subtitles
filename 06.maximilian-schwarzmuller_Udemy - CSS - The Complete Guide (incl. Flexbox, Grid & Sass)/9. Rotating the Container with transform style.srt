1
00:00:02,420 --> 00:00:05,300
Thus far we transformed the elements in our container,

2
00:00:05,450 --> 00:00:12,950
let's now transform the container itself. Let's transform it by rotating it, by rotating it around the

3
00:00:12,950 --> 00:00:13,640
y-axis

4
00:00:13,640 --> 00:00:17,930
let's say. Let's rotate it by 45 degrees,

5
00:00:18,040 --> 00:00:19,040
let's save that,

6
00:00:19,060 --> 00:00:20,790
so I'm on the container now.

7
00:00:21,190 --> 00:00:28,050
Now if I reload, you see the elements moved a bit because the parent container also rotates.

8
00:00:28,270 --> 00:00:35,570
If I rotate the container by 90 degrees, so we shouldn't see the container and I reload the page,

9
00:00:35,570 --> 00:00:38,670
everything is hidden.

10
00:00:38,730 --> 00:00:43,770
Now of course, logically this doesn't make a lot of sense because even if the container is rotated by

11
00:00:43,770 --> 00:00:50,400
90 degrees, since we also rotate the red box and move the blue box a little bit to the back, we should

12
00:00:50,400 --> 00:00:52,710
definitely see these two elements still

13
00:00:52,830 --> 00:00:57,730
because they actually have their own 3D space inside of the container.

14
00:00:57,930 --> 00:01:01,830
The default behavior however flattens this 3D space

15
00:01:01,950 --> 00:01:06,150
and you can change this behavior with another property which you add to the container,

16
00:01:06,300 --> 00:01:08,500
it's called transform style.

17
00:01:08,610 --> 00:01:15,870
The default value is flat, which means the container rotates and the elements move with the container

18
00:01:16,110 --> 00:01:20,170
but they're actually in a flat 3D space in there,

19
00:01:20,370 --> 00:01:23,990
so the overall container is seen as one flat object.

20
00:01:24,220 --> 00:01:30,100
However, you can change that value to preserve-3D. With this value,

21
00:01:30,270 --> 00:01:34,580
the 3D position of the child elements is preserved.

22
00:01:34,860 --> 00:01:40,200
So now if you reload, you can actually still see the red box,

23
00:01:40,270 --> 00:01:46,360
now the blue box is something we can't see because since we only translate but don't rotate it, it has the

24
00:01:46,360 --> 00:01:52,690
same angle as the parent element, which right now is rotated by 90 degree and therefore is perfectly

25
00:01:52,690 --> 00:01:53,830
invisible.

26
00:01:53,830 --> 00:02:03,800
If we change this to 95 again and we reload, then we can see the border of our container again, we don't

27
00:02:03,800 --> 00:02:05,060
see the blue box.

28
00:02:05,060 --> 00:02:10,210
The reason for this is that keep in mind, the blue element is in front of the red element

29
00:02:10,340 --> 00:02:16,850
and since we're flipping everything here, in front now actually means in the back. Yes it can be tricky

30
00:02:16,850 --> 00:02:19,010
to wrap your head around that

31
00:02:19,130 --> 00:02:24,410
but the easiest way to get into this really is just to build a simple demo like this and play around

32
00:02:24,410 --> 00:02:31,080
with it to see how elements move around and change their look or how the visual effect changes.

33
00:02:31,370 --> 00:02:37,610
If we increase this to 130 degree, we flip this element further, then we'll soon reach the point where

34
00:02:37,610 --> 00:02:39,390
we can see the blue box again.

35
00:02:39,530 --> 00:02:45,980
Of course one way to see it right now would be to give the red box a z-index of one so that it sits

36
00:02:45,980 --> 00:02:47,420
in front of the blue box

37
00:02:48,500 --> 00:02:49,980
and with that if we reload

38
00:02:50,490 --> 00:02:53,190
and we also decrease that translateY

39
00:02:53,190 --> 00:02:57,270
value, translateZ value of the blue box let's say -10,

40
00:03:00,100 --> 00:03:04,620
then we can see it. With a higher translateZ value, we couldn't see it because that actually also

41
00:03:04,630 --> 00:03:08,000
moved it out of the screen because again, we're flipping this,

42
00:03:08,050 --> 00:03:10,030
so a negative translateZ value

43
00:03:10,050 --> 00:03:17,410
now actually leads to this element moving towards us or towards us and out of the screen to the left

44
00:03:17,740 --> 00:03:24,460
to be precise and therefore a smaller distance moves it closer to the container, closer to the red box and

45
00:03:24,460 --> 00:03:26,630
the red box is behind the blue box

46
00:03:26,680 --> 00:03:32,500
even though it has a z-index because we're flipping everything as you can see by the reversed text

47
00:03:32,500 --> 00:03:33,300
here.

48
00:03:33,880 --> 00:03:40,810
So 3D transformations can really mess with your head but also allow you to create really powerful visual

49
00:03:40,810 --> 00:03:42,180
effects on your page.
