WEBVTT
1
00:00:02.220 --> 00:00:08.780
So the badge is inside our package but it doesn't look good and it's not positioned correctly,

2
00:00:09.060 --> 00:00:13.420
let's maybe work on the look first and then see how we can now position it.

3
00:00:14.840 --> 00:00:15.440
For that,

4
00:00:15.440 --> 00:00:22.080
I'm back in the packages.css file and right here in the package__badge selector

5
00:00:22.430 --> 00:00:29.090
and now let's maybe start by changing the font size first, because it was kind of big.

6
00:00:29.150 --> 00:00:32.720
So let's maybe add a font size of 12 pixels,

7
00:00:32.780 --> 00:00:39.410
let's also maybe add a color of white because I like the white font to be honest and I also prepared

8
00:00:39.500 --> 00:00:40.700
a background color,

9
00:00:40.700 --> 00:00:42.430
this is our nice red

10
00:00:42.430 --> 00:00:48.440
we already saw, this is the #ff5454 red.

11
00:00:48.440 --> 00:00:53.010
With these changes in place, let's see what the badge looks like right now,

12
00:00:53.480 --> 00:00:55.570
yes it looks a lot better already,

13
00:00:55.670 --> 00:01:02.090
what I don't like is that we don't have any padding, so let's maybe change that by adding some padding,

14
00:01:02.750 --> 00:01:07.950
maybe 10 pixels or let's maybe say 8 pixels, not that big,

15
00:01:08.270 --> 00:01:10.520
let's see if this helps improving the look,

16
00:01:10.790 --> 00:01:13.220
yes it looks a lot better already.

17
00:01:13.280 --> 00:01:16.900
The general style is fine with that,

18
00:01:17.060 --> 00:01:19.530
what I don't like though is the position

19
00:01:19.640 --> 00:01:23.230
but as we learned how this works now, we have the absolute position

20
00:01:23.360 --> 00:01:26.780
but we are in the positioning context of the package,

21
00:01:27.050 --> 00:01:32.100
so we could simply say that we don't go to the left but to the right,

22
00:01:32.120 --> 00:01:38.990
so we specify the distance from the right to our element and why don't we just use something, like maybe

23
00:01:39.230 --> 00:01:40.520
40 pixels?

24
00:01:40.650 --> 00:01:42.210
Let's see what this looks like,

25
00:01:43.720 --> 00:01:46.910
that's a bit too far because we still have our margin,

26
00:01:46.960 --> 00:01:55.350
so actually we could also get rid of that distance in total and simply add a distance of zero,

27
00:01:55.360 --> 00:01:58.170
we can also specify that, like this

28
00:01:58.470 --> 00:02:04.670
and with that the margin specifies the distance we have for our recommended badge right here.

29
00:02:04.770 --> 00:02:07.990
And with that, I think we already achieved a lot,

30
00:02:08.040 --> 00:02:11.930
our badge is now positioned correctly inside our package,

31
00:02:12.210 --> 00:02:15.210
it is positioned in the right package.

32
00:02:15.210 --> 00:02:22.320
The problem though is that if we scroll down now, we can see that our package is above our navigation

33
00:02:22.320 --> 00:02:24.950
bar but we know how to fix this, right?

34
00:02:25.140 --> 00:02:31.770
If we go back and have a quick look at our shared.css file, we can see that the main header has a

35
00:02:31.770 --> 00:02:33.030
z-index of 0.

36
00:02:33.330 --> 00:02:35.730
If we change that to 1 for example,

37
00:02:35.760 --> 00:02:42.360
so above the standard, then we can see that if we reload the page, that the navigation bar stays on

38
00:02:42.360 --> 00:02:50.270
top and our package scrolls smoothly below it. With that, our project looks quite cool actually

39
00:02:50.400 --> 00:02:53.920
and we understood fixed and absolute positioning,

40
00:02:53.940 --> 00:02:57.350
we also had a quick look at relative positioning.

41
00:02:57.600 --> 00:03:04.160
But as I said, there are some more details that I would like to share with you about this relative positioning.

42
00:03:04.440 --> 00:03:07.950
So let's have a look at that in theory in the next video.
