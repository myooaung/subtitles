WEBVTT
1
00:00:02.380 --> 00:00:07.660
We had a look at grid auto flow rows and columns in the last lecture.

2
00:00:07.660 --> 00:00:15.200
Now we also have a grid where we do define parts of the grid manually, we do define two columns.

3
00:00:15.280 --> 00:00:23.560
Of course you can also define rows with grid template rows as you learned it, you could define for example

4
00:00:23.560 --> 00:00:29.740
the first column. You could say the first, excuse me the first row, you could say the first row should

5
00:00:29.740 --> 00:00:34.440
maybe have a size of let's say 20rem.

6
00:00:34.630 --> 00:00:41.040
If you do that and you reload, then obviously the first child element will be put into that first row

7
00:00:41.260 --> 00:00:45.830
because the grid is always populated according to the browser settings,

8
00:00:45.850 --> 00:00:53.020
so for left-to-right languages, it's populated from top to bottom and from left-to-right, for other

9
00:00:53.020 --> 00:00:56.090
right-to-left languages, the opposite is the case.

10
00:00:56.110 --> 00:01:03.250
So the grid automatically populates its cells with the child elements and obviously, the first child

11
00:01:03.280 --> 00:01:05.270
element goes into the first row.

12
00:01:05.530 --> 00:01:13.030
Now the interesting thing I here really want to emphasize, is that we define two columns and one row manually.

13
00:01:13.510 --> 00:01:15.940
Of course we have more than just one child

14
00:01:15.940 --> 00:01:22.240
however, we got a bunch of childs, a bunch of quotes and all the other quotes which don't fit into the

15
00:01:22.300 --> 00:01:28.350
predefined row and the two columns are then put into these automatically added cells.

16
00:01:28.570 --> 00:01:30.790
The cells on the other hand are added automatically

17
00:01:30.790 --> 00:01:37.960
because as you learned, the grid automatically adds new rows and each of the new rows still has the two manually

18
00:01:37.960 --> 00:01:39.220
defined columns,

19
00:01:39.220 --> 00:01:40.790
so I hope this makes sense.

20
00:01:40.840 --> 00:01:46.180
It's really important to understand that you can consider or that you can think of the grid as an

21
00:01:46.240 --> 00:01:53.470
implicit and explicit grid. The explicit grid is always the part you define with grid template columns

22
00:01:53.500 --> 00:01:59.470
and grid template rows and sometimes, you define the entire grid like in our project where you defined

23
00:01:59.470 --> 00:02:02.820
header, main and footer, that was everything we have on the page

24
00:02:03.070 --> 00:02:09.820
but sometimes you only define parts of the grid or nothing at all and the parts you didn't define explicitly

25
00:02:10.030 --> 00:02:15.920
are then managed with the implicit grid which you can in turn control with the grid auto settings here.

26
00:02:16.210 --> 00:02:17.720
So I hope this makes sense.

27
00:02:17.770 --> 00:02:24.040
I'm really emphasizing this because it is important to keep in mind how that grid works and that you can rely

28
00:02:24.160 --> 00:02:28.970
on parts or on new rows by default being added automatically.
