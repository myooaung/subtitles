WEBVTT
1
00:00:02.320 --> 00:00:08.030
Brand new video, brand new code and of course, you can find the code attached to this video.

2
00:00:08.070 --> 00:00:14.800
Now as you can see, unfortunately this website is not as spectacular and as beautiful as our course

3
00:00:14.800 --> 00:00:21.230
project but it will help us a lot to understand the general behavior of the position property.

4
00:00:21.250 --> 00:00:27.640
As I said, I want to focus onto the static value in the beginning and then especially onto the fixed

5
00:00:27.640 --> 00:00:28.390
value.

6
00:00:28.390 --> 00:00:34.450
Now what we can see right here is basically if we inspect it, an HTML element right here, that's kind

7
00:00:34.450 --> 00:00:36.630
of the wrapper around it with some margin,

8
00:00:36.670 --> 00:00:39.610
we will see why this margin is important.

9
00:00:39.610 --> 00:00:43.810
Then we have a body element, inside this body element,

10
00:00:43.810 --> 00:00:44.710
we have a div,

11
00:00:44.710 --> 00:00:51.610
I gave it the class parent and as this name parent, it has some children, it has three children with an

12
00:00:51.640 --> 00:00:52.870
equal styling,

13
00:00:52.870 --> 00:00:59.120
I just gave it some example names like navigation bar, background image and features.

14
00:00:59.140 --> 00:01:01.590
So this is just examples as I said,

15
00:01:01.690 --> 00:01:07.000
the important thing is that we have this general structure right here. From a code perspective,

16
00:01:07.000 --> 00:01:13.860
it's also not really spectacular, as you can see we have this parent class right here which wraps these

17
00:01:13.860 --> 00:01:18.290
three divs as we saw it on the website already and in this CSS code,

18
00:01:18.340 --> 00:01:21.600
we basically have the HTML selector right here

19
00:01:21.640 --> 00:01:24.020
where I applied some basic styling.

20
00:01:24.040 --> 00:01:27.660
Don't be confused because of this height of 2000 pixels,

21
00:01:27.670 --> 00:01:30.880
I just want to make sure that we can scroll on our website,

22
00:01:30.940 --> 00:01:32.630
therefore I apply this

23
00:01:32.630 --> 00:01:38.540
and then we have the body with also some default stylings applied, you know all these properties already

24
00:01:38.710 --> 00:01:40.640
and the same thing is true for the parent,

25
00:01:40.690 --> 00:01:48.220
so this wrapping div that we have and then the three divs inside our parent element right here or our parent class

26
00:01:48.220 --> 00:01:50.760
right here also with some basic styling.

27
00:01:50.760 --> 00:01:55.890
So nothing right here has to do with the position property so far

28
00:01:56.010 --> 00:02:02.260
and I think it's time to change that and I want to focus on two these three divs right here to show you

29
00:02:02.260 --> 00:02:04.540
how the position property works.

30
00:02:04.540 --> 00:02:07.980
For that, I will not start with the position property though

31
00:02:08.050 --> 00:02:13.210
but with this top, right, bottom and left properties that we saw,

32
00:02:13.270 --> 00:02:19.870
so these properties that allow us to change to position of our elements in the document flow because

33
00:02:19.870 --> 00:02:20.610
at the moment,

34
00:02:20.680 --> 00:02:27.580
keep that in mind, we have the default positioning value applied and the default value is static and

35
00:02:27.580 --> 00:02:34.650
if we now add another selector right here, which could be parent child 1,

36
00:02:34.660 --> 00:02:38.770
so I'm referring to this element right here

37
00:02:38.770 --> 00:02:48.710
now, this navigation bar element and if I now say I want to change the position by top 100 pixels, let's

38
00:02:48.710 --> 00:02:50.520
just assume that you want to do that

39
00:02:50.650 --> 00:02:56.390
and if I reload the page, you can see that, nothing happens and that's the first important thing.

40
00:02:56.870 --> 00:03:04.220
All the positioning changes we want to apply right now are only possible if you apply a value that is

41
00:03:04.220 --> 00:03:05.500
different from static,

42
00:03:05.510 --> 00:03:07.700
so different from the default value,

43
00:03:07.760 --> 00:03:08.980
keep that in mind.

44
00:03:09.200 --> 00:03:16.670
However if we get rid of that top property now and change it to position fixed, as I said, the value I

45
00:03:16.670 --> 00:03:21.150
want to focus on and now go back to our website,

46
00:03:21.420 --> 00:03:25.290
well we can see that the behavior already changed.

47
00:03:25.290 --> 00:03:28.290
Actually we see two interesting things,

48
00:03:28.320 --> 00:03:32.920
the first thing see is of course that the width of the element decreased significantly,

49
00:03:32.940 --> 00:03:34.660
it almost looks like an inline element

50
00:03:34.680 --> 00:03:38.280
now, we will talk about that in a few seconds.

51
00:03:38.310 --> 00:03:45.870
Let's focus on to the maybe second thing that we can see right here because the element now is now basically

52
00:03:46.020 --> 00:03:49.540
not existing for the other elements anymore, as we can see it

53
00:03:49.560 --> 00:03:51.120
the second element,

54
00:03:51.120 --> 00:03:52.860
so our background image,

55
00:03:52.890 --> 00:03:54.290
that's what it's called element

56
00:03:54.480 --> 00:04:01.380
now overtook this position the navigation bar element had. We can still see the navigation bar element

57
00:04:01.380 --> 00:04:02.100
right here

58
00:04:02.280 --> 00:04:06.120
but the background image is exactly at the same position

59
00:04:06.570 --> 00:04:12.570
and this happens because by applying position fixed to this element, to the navigation bar element, we

60
00:04:12.570 --> 00:04:15.410
took it out of the actual document flow.

61
00:04:15.540 --> 00:04:22.140
This simply means that for all the other elements here, this navigation bar element is no longer existing

62
00:04:22.410 --> 00:04:25.350
because we applied this declaration to it.

63
00:04:25.350 --> 00:04:26.730
Now what about the width now,

64
00:04:26.730 --> 00:04:29.700
did we create an inline element right here now?

65
00:04:29.940 --> 00:04:36.800
Well let's quickly find that out by going back right here and maybe changing the width to let's say 400

66
00:04:36.810 --> 00:04:37.520
pixels

67
00:04:37.590 --> 00:04:44.010
because as we learned throughout the course already, for inline elements, changing the width has no impact.

68
00:04:44.160 --> 00:04:49.770
So if you do that and reload it, we can see that the width of our element changed,

69
00:04:49.770 --> 00:04:52.700
therefore we did not create an inline element now,

70
00:04:53.220 --> 00:04:58.660
we basically have an element which behaves like an inline block element actually.

71
00:04:58.710 --> 00:05:00.010
So that's what we saw so far,

72
00:05:00.090 --> 00:05:06.840
we took the element out of the document flow and we changed the general behavior from a block level

73
00:05:06.840 --> 00:05:10.950
element to a rather inline block element style.

74
00:05:10.950 --> 00:05:14.240
However, the element is called navigation bar,

75
00:05:14.280 --> 00:05:19.040
how could we now create the navigation bar with this position property that we applied?

76
00:05:19.050 --> 00:05:26.760
Well, if we now go back and maybe remember these top, bottom, left, right properties again, maybe these have

77
00:05:26.760 --> 00:05:27.950
an impact right now,

78
00:05:28.170 --> 00:05:35.080
so if I add top and let's say 100 pixels right here, let's see what happens.

79
00:05:35.470 --> 00:05:41.650
As you can see, the element moved down a bit but so far, it's not clear what this element refers to,

80
00:05:41.750 --> 00:05:45.100
that's this positioning context I talked about on the slide.

81
00:05:45.450 --> 00:05:50.360
Let's maybe change the value to 0 because with 0,

82
00:05:50.360 --> 00:05:56.930
we should immediately see what this element depends on and as we can see, the element

83
00:05:56.930 --> 00:06:02.950
basically seems to be sticked kind of near the border of the HTML element

84
00:06:03.200 --> 00:06:06.980
but kind of, it doesn't exactly fit,

85
00:06:06.980 --> 00:06:11.400
let's go back right here and let's not remove the margin from our element,

86
00:06:11.540 --> 00:06:17.900
maybe this makes things clearer. If we reload that and if it now becomes evident. As you can see,

87
00:06:18.200 --> 00:06:23.530
the navigation bar is not dependent on the HTML element,

88
00:06:23.540 --> 00:06:26.240
so right here, this is the HTML element

89
00:06:26.240 --> 00:06:34.460
but if we scroll down, we can see that this element now basically has the viewport as the position in

90
00:06:34.460 --> 00:06:35.300
context.

91
00:06:35.300 --> 00:06:41.510
So basically, the position of this element only depends on the viewport.

92
00:06:41.530 --> 00:06:50.590
I can prove this to you if I go back and change top to bottom for example, not like that, like this, so

93
00:06:50.590 --> 00:06:56.020
if you have a look at it right now, you can see that now this bar is sticked to the bottom,

94
00:06:56.020 --> 00:06:59.550
same thing can of course be applied if we change it to left or right.

95
00:06:59.560 --> 00:07:07.480
So the important thing now is that this now always refers or relates to the viewport and that's of course

96
00:07:07.540 --> 00:07:16.410
really cool because if we use that knowledge now and not only add left zero but also top zero, then we can

97
00:07:16.410 --> 00:07:22.870
see that we have this navigation bar already added in the left top part of the screen

98
00:07:23.100 --> 00:07:29.850
and if we now increase the width to 100% because we would like this navigation bar to occupy

99
00:07:29.850 --> 00:07:35.610
the entire space available, like that, well then this should look fine.

100
00:07:36.810 --> 00:07:38.520
And it actually does

101
00:07:38.520 --> 00:07:45.290
but right here we have a problem because we can see that the border is kind of located outside of our

102
00:07:45.300 --> 00:07:46.740
viewport.

103
00:07:46.740 --> 00:07:49.420
Now we had such an issue already,

104
00:07:49.560 --> 00:07:52.000
do you know how we can solve this now?

105
00:07:52.610 --> 00:08:01.850
Well you probably know, we can simply add the box sizing with a value of border box right here. Max already

106
00:08:01.860 --> 00:08:03.030
explained that to you,

107
00:08:03.120 --> 00:08:10.050
so if we now reload the page, we can see that our navigation bar is positioned perfectly and always sticks

108
00:08:10.170 --> 00:08:14.810
to 100% of the width of our viewport.

109
00:08:14.850 --> 00:08:22.380
So that's how easy it is to add a navigation bar, a fixed navigation bar to our website. Before we apply

110
00:08:22.380 --> 00:08:28.500
it to our project though, there is one more thing that I would like to show you because I talked about inline

111
00:08:28.500 --> 00:08:35.730
elements already and so far we only used block level elements, what would happen now though if I change

112
00:08:35.730 --> 00:08:41.390
the div, so the navigation bar div to an inline element, a span for example?

113
00:08:41.640 --> 00:08:43.340
Let's quickly do that right here,

114
00:08:43.410 --> 00:08:51.630
so we will change the div to a span right here and right there, I just changed this one because as I said,

115
00:08:52.050 --> 00:08:55.070
this is the one that well is our navigation bar

116
00:08:55.290 --> 00:09:02.280
and now I will change the div right here also to a span because I want to have this background color right

117
00:09:02.280 --> 00:09:05.100
here, also on the span

118
00:09:05.250 --> 00:09:11.370
and if I reload the page now, we can see that the background image and the features lost their styling,

119
00:09:11.520 --> 00:09:18.150
that's just because we changed right here, the selector to span but the navigation bar still sticks to

120
00:09:18.150 --> 00:09:18.760
the top.

121
00:09:18.840 --> 00:09:20.600
So that's also important to keep in mind,

122
00:09:20.730 --> 00:09:28.370
you can apply this positioning property no matter if you have a block level element or an inline element.

123
00:09:28.500 --> 00:09:34.560
Let's change it back to it to a div though because I think that's the way it's supposed to be in our case.

124
00:09:34.560 --> 00:09:35.600
So let's reload it,

125
00:09:35.660 --> 00:09:36.090
yes

126
00:09:36.360 --> 00:09:37.590
this looks fine now.

127
00:09:38.010 --> 00:09:41.050
So this was the theory partially applied,

128
00:09:41.310 --> 00:09:46.480
let's now jump back to our project and see how we can add this fixed navigation bar to it.

129
00:09:46.500 --> 00:09:48.620
Let's do this in the next video.
