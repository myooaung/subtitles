WEBVTT
1
00:00:02.220 --> 00:00:04.030
We're almost done with this module,

2
00:00:04.140 --> 00:00:11.040
you learned a lot about CSS animations. Now when using animations, there actually is a cool extra

3
00:00:11.040 --> 00:00:13.260
feature you can use in Javascript,

4
00:00:13.260 --> 00:00:18.070
you can listen to certain events connected to your animations,

5
00:00:18.540 --> 00:00:22.810
let's connect an event to our call to action button.

6
00:00:24.080 --> 00:00:27.020
We do that by going into our Javascript code

7
00:00:27.260 --> 00:00:29.370
and let's first of all get access to that button,

8
00:00:29.390 --> 00:00:36.590
so CTA button maybe, we can get access by using the document query selector again

9
00:00:36.590 --> 00:00:42.490
and keep in mind, our button has a class of main nav item CTA,

10
00:00:42.700 --> 00:00:44.870
so let's use that class as a selector,

11
00:00:44.870 --> 00:00:49.200
we only got one button, so we'll only select this element here.

12
00:00:49.220 --> 00:00:54.330
Now we can add an event listener, as we already did it for a click event for example.

13
00:00:54.560 --> 00:00:58.050
So at the end of this Javascript file, the position doesn't matter though,

14
00:00:58.230 --> 00:01:03.480
I'll add an event listener again and now the event I can listen to of course is a click

15
00:01:03.620 --> 00:01:07.310
but regarding animations, we get three interesting animations,

16
00:01:07.400 --> 00:01:12.130
the first one is animation start.

17
00:01:12.330 --> 00:01:14.920
We can then execute a function

18
00:01:15.240 --> 00:01:22.830
and here I simply want to console log animation started it and actually, we receive an argument in this

19
00:01:22.830 --> 00:01:26.910
function, an event object with additional information about that event,

20
00:01:27.000 --> 00:01:32.490
so let's also print this, console log is a helpful function which allows us to output something in the

21
00:01:32.490 --> 00:01:34.480
developer console.

22
00:01:34.500 --> 00:01:37.350
Let's register two other event listeners;

23
00:01:37.350 --> 00:01:49.330
the first other is animation end and the third one is animation iteration.

24
00:01:49.340 --> 00:01:56.450
I'll adjust my log messages to animation ended and animation iteration.

25
00:01:56.680 --> 00:02:02.030
With that let's save all of that, let's go back to our page and open that Javascript console in the developer

26
00:02:02.030 --> 00:02:05.870
tools and let's reload the page

27
00:02:05.960 --> 00:02:07.190
and now you can see, 

28
00:02:07.490 --> 00:02:10.030
we get a couple of logs here on the right.

29
00:02:10.070 --> 00:02:11.980
We got animation started,

30
00:02:12.290 --> 00:02:16.650
then we got a log for each iteration and we got animation ended

31
00:02:17.020 --> 00:02:21.660
and if you inspect the animation event, you'll find the animation name which was played,

32
00:02:21.710 --> 00:02:26.870
so your keyframe set essentially and a couple of helpful properties, like

33
00:02:26.870 --> 00:02:31.750
which element was animated and a timestamp. For each iteration,

34
00:02:31.760 --> 00:02:37.880
you'll find that same information but also useful things, like the elapsed time.

35
00:02:37.910 --> 00:02:45.910
Now as you see, the elapsed time of course increases by the same amount for each iteration step.

36
00:02:45.920 --> 00:02:50.280
This can be super useful if you want to time something in your Javascript code,

37
00:02:50.300 --> 00:02:56.000
for example if you want to start something once the animation ended because you got this hook here too

38
00:02:56.000 --> 00:02:59.520
of course. After the full time of the animation,

39
00:02:59.520 --> 00:03:01.740
this is what gets fired.

40
00:03:02.090 --> 00:03:08.260
By the way, if you're wondering why this is 3.2s, if we specified 400ms, we

41
00:03:08.260 --> 00:03:09.390
repeat it eight times,

42
00:03:09.410 --> 00:03:11.570
so this is how we end up with the 3.2s

43
00:03:11.600 --> 00:03:13.120
at the end.

44
00:03:13.760 --> 00:03:20.300
So the Javascript event listeners can be really useful and I definitely wanted to add them to dismantle

45
00:03:20.420 --> 00:03:22.610
here, even though it's a CSS course.
