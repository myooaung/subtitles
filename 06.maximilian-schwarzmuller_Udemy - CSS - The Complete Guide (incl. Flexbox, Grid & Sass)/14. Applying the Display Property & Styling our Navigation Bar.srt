1
00:00:02,150 --> 00:00:08,370
So now that you had a brief introduction to that display property and especially inline block, try taking

2
00:00:08,370 --> 00:00:16,220
this to the next level. If you have a look at our navigation, in the header to be precise, we still have

3
00:00:16,220 --> 00:00:17,300
a problem,

4
00:00:17,330 --> 00:00:24,600
our div which holds our brand link still is on a different line than the nav because both div and nav

5
00:00:24,620 --> 00:00:29,390
elements are block level elements hence they take the full available width and don't go into the same

6
00:00:29,390 --> 00:00:30,250
line.

7
00:00:30,270 --> 00:00:31,760
Here is your challenge,

8
00:00:31,830 --> 00:00:38,060
add code that ensures that both now sit in the same line.

9
00:00:38,060 --> 00:00:42,230
You again can now pause the video and thereafter we'll do it together.

10
00:00:45,470 --> 00:00:46,580
Were you successful?

11
00:00:46,730 --> 00:00:48,330
Let's do it together.

12
00:00:48,920 --> 00:00:56,030
So the goal will be to turn this div and this nav into an inline block element.

13
00:00:56,030 --> 00:00:59,130
Now for that, we can add a class to this first div.

14
00:00:59,410 --> 00:01:04,830
Now we can do that and it would not be bad, even might be the best option of doing that

15
00:01:05,060 --> 00:01:08,480
but I also want to practice a combinator again.

16
00:01:08,510 --> 00:01:10,150
So what I'll do in main.css,

17
00:01:10,340 --> 00:01:18,300
here after main header before main-nav__item, not because the priority matters but because it

18
00:01:18,310 --> 00:01:28,350
makes more sense reading the HTML file from top to bottom, I'll add main header and then the direct child combinator

19
00:01:28,500 --> 00:01:30,480
to directly select a div.

20
00:01:30,480 --> 00:01:35,730
Now I only want to select a div that's a direct child because later in the course, we might add some

21
00:01:35,730 --> 00:01:42,210
nested divs somewhere in the header, so this will now only select this div and any div siblings of that div

22
00:01:42,210 --> 00:01:43,490
if there were any

23
00:01:43,860 --> 00:01:51,330
and now we can give this a style of display inline block, like this.

24
00:01:51,330 --> 00:01:55,870
If we do that and we go back to the page, nothing changed.

25
00:01:56,280 --> 00:02:00,290
Well because the nav element also still is a block level element.

26
00:02:00,290 --> 00:02:02,240
Now the nav element has a class

27
00:02:02,370 --> 00:02:05,970
and of course we could also select nav with a direct child combinator,

28
00:02:05,970 --> 00:02:08,640
I just wanted to throw this in here real quick,

29
00:02:08,700 --> 00:02:12,720
it's generally better to use direct selectors like this class selector.

30
00:02:12,720 --> 00:02:19,890
So now I will take the main nav class which sits on the nav element here and in the main.css, I'll

31
00:02:19,890 --> 00:02:25,560
now also add some styling for that by selecting it with .main-nav and in there,

32
00:02:25,860 --> 00:02:30,130
well display inline block is what we need.

33
00:02:30,180 --> 00:02:33,750
If we add this here and we go back and reload,

34
00:02:33,840 --> 00:02:35,500
now they're in the same line,

35
00:02:35,500 --> 00:02:40,960
so this is looking much better now and this already is the solution to the tiny task I gave you.

36
00:02:41,970 --> 00:02:49,770
Now what we also could do now is we could try to move the elements in that nav element to the right.

37
00:02:49,770 --> 00:02:57,420
Now one thing we can try is since we have an unordered list with list items that are also turned to

38
00:02:57,420 --> 00:03:06,420
inline block, we could use text align on the main nav element to align all our text, and inline block

39
00:03:06,450 --> 00:03:15,170
elements will be treated as text, to the right, so we could add text align right to the main nav element.

40
00:03:15,300 --> 00:03:17,680
If we do that and we reload,

41
00:03:17,970 --> 00:03:18,680
nothing changed

42
00:03:18,680 --> 00:03:27,300
I guess. If we inspect the nav, well we actually see the elements are aligned to the right and we can

43
00:03:27,300 --> 00:03:30,530
confirm this by selecting the nav, here

44
00:03:30,810 --> 00:03:32,310
we got a text align right

45
00:03:32,370 --> 00:03:37,560
and if you argue, that doesn't matter because list items are children of unordered list.

46
00:03:37,610 --> 00:03:40,530
Well, this also has it due to inheritance,

47
00:03:40,530 --> 00:03:43,530
so here text align right is inherited from main nav.

48
00:03:43,770 --> 00:03:49,980
So this is getting applied but it doesn't have an effect because unordered list sits inside nav which

49
00:03:49,980 --> 00:03:54,360
is an inline block element and which therefore doesn't take the full available width,

50
00:03:54,360 --> 00:03:57,920
it only has as much width as its content needs,

51
00:03:57,930 --> 00:04:01,180
hence text align right doesn't do anything here.

52
00:04:01,560 --> 00:04:09,090
So we instead need to set a width and the width should be the width of our header minus the width of this

53
00:04:09,090 --> 00:04:10,440
div here at the beginning.

54
00:04:12,180 --> 00:04:18,660
Now then we would still have a problem because that unordered list in there still has an additional

55
00:04:18,870 --> 00:04:19,660
padding,

56
00:04:19,800 --> 00:04:22,800
if you go down, you see we've got a padding to the left

57
00:04:22,800 --> 00:04:25,170
and we also got margin to top and bottom even.

58
00:04:25,500 --> 00:04:31,940
So we first of all should reset that before we try changing the width of the main nav navigation.

59
00:04:32,250 --> 00:04:39,300
So back in code, in index.html we see this unordered list where I just said I want to reset padding

60
00:04:39,300 --> 00:04:43,160
and margin, it has the main-nav__items class.

61
00:04:43,260 --> 00:04:52,440
So if we copy that class name and we add that with the class selector, we can actually set margin to

62
00:04:52,440 --> 00:04:53,340
zero here

63
00:04:53,400 --> 00:04:58,080
and padding, to reset all these basic settings or remove them essentially.

64
00:04:58,360 --> 00:05:05,310
There's one additional property which we can set and that is list style none, this removes the bullet points,

65
00:05:05,490 --> 00:05:08,450
though setting the padding to zero will also remove them

66
00:05:08,580 --> 00:05:13,490
but that really ensures that there are no bullet points.

67
00:05:13,600 --> 00:05:19,360
With that, we can now change the width of main nav, we could set it to 100%.

68
00:05:19,800 --> 00:05:26,860
If we do that and we reload, yes it's on the right but it's also in a new line if you watch closely which makes

69
00:05:26,860 --> 00:05:27,670
sense,

70
00:05:27,670 --> 00:05:33,910
the nav now takes the full available width minus the padding of the header and therefore, it doesn't

71
00:05:33,910 --> 00:05:38,170
fit into a line with our first div here anymore.

72
00:05:38,230 --> 00:05:46,150
So what we need to do is take 100% minus the width of that div and that div if we scroll down

73
00:05:46,390 --> 00:05:55,390
has a width of 48.134. Now reading this from the rendered page like this is

74
00:05:55,390 --> 00:05:57,580
not the best possible approach to be honest,

75
00:05:57,580 --> 00:05:59,270
we'll find a cleaner approach later

76
00:05:59,290 --> 00:06:04,390
once we got more powerful tools. For now what we can do is we can take that value,

77
00:06:04,390 --> 00:06:11,900
so let's make it 49 and subtract that from 100% and CSS got a function, a helper

78
00:06:11,910 --> 00:06:12,660
for that,

79
00:06:12,690 --> 00:06:20,160
the calc function. We can assign this as a value too and calc takes a simple calculation.

80
00:06:20,620 --> 00:06:26,620
Here, the calculation would be 100% minus and the whitespace between the number and the minus

81
00:06:26,620 --> 00:06:28,790
does matter, whitespace

82
00:06:28,900 --> 00:06:30,690
and then the value you want to subtract,

83
00:06:30,880 --> 00:06:33,280
for example 49 pixels.

84
00:06:33,730 --> 00:06:41,200
If you now save this and you reload, it became narrower but it's still in a new line

85
00:06:41,200 --> 00:06:48,760
and that is something that is related to inline block and it's super important to be aware of this behavior

86
00:06:49,030 --> 00:06:51,680
because that can cost you hours otherwise.
