WEBVTT
1
00:00:02.220 --> 00:00:09.750
So what's causing this navigation element to sit in the new line even though we're assigning a width

2
00:00:09.960 --> 00:00:14.180
which is 100% minus the width of that div?

3
00:00:14.290 --> 00:00:18.030
Now you could say it's the padding of the header but that's not the case,

4
00:00:18.030 --> 00:00:23.010
we got box sizing border box, so padding is included in all width calculations,

5
00:00:23.010 --> 00:00:27.810
so width 100% already is header width minus the padding of the header,

6
00:00:27.840 --> 00:00:29.880
so that's not the case.

7
00:00:29.880 --> 00:00:33.000
Instead it's something related to display inline block.

8
00:00:33.330 --> 00:00:38.640
If you go to your HTML code, it's this whitespace you have in the editor here.

9
00:00:38.690 --> 00:00:40.040
Now that's super dumb

10
00:00:40.060 --> 00:00:46.040
but in your editor, you of course structure code like this and this doesn't normally doesn't cause any issues

11
00:00:46.490 --> 00:00:49.790
but actually, this empty whitespace

12
00:00:50.660 --> 00:00:56.890
is considered a character and is added as an extra inline element.

13
00:00:57.020 --> 00:01:00.680
So you don't just have the width of that inline element you have to subtract,

14
00:01:00.680 --> 00:01:02.870
it's also the width of that whitespace

15
00:01:02.870 --> 00:01:07.100
and of course that's really hard to measure because you don't even see that in the developer tools really

16
00:01:07.100 --> 00:01:07.930
good.

17
00:01:07.970 --> 00:01:11.570
So what you can do is you can remove it in your editor, like this.

18
00:01:11.990 --> 00:01:18.320
If you do that, so that the nav directly begins after the div and there is no space in between, then

19
00:01:18.320 --> 00:01:21.870
you can reload and actually see it's in the same line now

20
00:01:22.060 --> 00:01:25.690
but that really is not that much fun.

21
00:01:25.700 --> 00:01:33.770
So a better way since we want to structure our code is to instead simply subtract a bit more, like 54

22
00:01:33.800 --> 00:01:34.530
pixels

23
00:01:34.730 --> 00:01:37.250
and if that sounds hacky to you, it is

24
00:01:37.360 --> 00:01:40.250
and a cleaner solution will follow in this course

25
00:01:40.250 --> 00:01:43.320
but with that subtracted, it now also fits into one line

26
00:01:43.400 --> 00:01:49.460
even as we decrease the size. If we go to a very small page size, it looks ugly but we'll take care about

27
00:01:49.460 --> 00:01:55.050
responsive design in an extra module or from an extra module on too.

28
00:01:55.130 --> 00:01:56.960
So this now works,

29
00:01:57.050 --> 00:02:01.740
let's now continue styling this now that display inline block does its job.
