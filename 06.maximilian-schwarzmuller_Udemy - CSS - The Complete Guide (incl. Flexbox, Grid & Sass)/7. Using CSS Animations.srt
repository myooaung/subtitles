1
00:00:02,420 --> 00:00:08,930
We had a detailed look at CSS transitions, which make it very easy to animate the transition of a

2
00:00:08,940 --> 00:00:12,290
CSS property from one value to another,

3
00:00:12,290 --> 00:00:18,560
now let's have a look at CSS animations. We can think of them as CSS Transitions++,

4
00:00:18,590 --> 00:00:24,020
so it's still about animating things but with way more control over the animation.

5
00:00:24,410 --> 00:00:30,380
So if we have a block and we want to move to a bigger block, maybe with a different color, we

6
00:00:30,380 --> 00:00:32,210
can of course use a transition

7
00:00:32,360 --> 00:00:37,910
but if we want more control, like some in-between step, CSS animations are really what we're looking for.

8
00:00:37,910 --> 00:00:40,240
In CSS animations,

9
00:00:40,250 --> 00:00:47,330
we define so-called keyframes and we got full control what the style of an element is at a given point

10
00:00:47,330 --> 00:00:48,170
of time,

11
00:00:48,170 --> 00:00:50,110
now let's see how that works.

12
00:00:50,630 --> 00:00:57,260
For this, I'm back in our project and I want to animate that start hosting call to action button in

13
00:00:57,260 --> 00:00:59,190
the top right corner here.

14
00:00:59,210 --> 00:01:06,140
Now that button's style is defined in the shared.css file, we can search for CTA here to find our main

15
00:01:06,140 --> 00:01:08,430
nav CTA link here

16
00:01:08,840 --> 00:01:12,980
and I want to play an animation on that button, right when the page loads,

17
00:01:12,980 --> 00:01:20,420
I want it to wiggle around, so to rotate a bit up and rotate a bit down. Now with a transition, that's hard

18
00:01:20,420 --> 00:01:21,720
to do because it should 

19
00:01:21,740 --> 00:01:26,750
wiggle, it should move in both directions and it should also stop after a given time

20
00:01:26,840 --> 00:01:31,900
but until this it should just iterate between moving up moving down.

21
00:01:32,140 --> 00:01:34,830
Transition is not really what we're looking for in this case, an

22
00:01:34,930 --> 00:01:36,550
animation is what we need

23
00:01:36,860 --> 00:01:40,580
and an animation always starts with you defining some keyframes,

24
00:01:40,610 --> 00:01:43,870
these are the steps of the animation you want to go through.

25
00:01:44,080 --> 00:01:49,260
You define keyframes in a CSS file by using @keyframes,

26
00:01:49,280 --> 00:01:55,910
so just as you used @media and so on before, @keyframes is a special expression. You define a set

27
00:01:55,970 --> 00:02:02,290
of keyframes here, which you can later use in a CSS animation and you have to give that set a name,

28
00:02:02,360 --> 00:02:10,030
the name is totally up to you, can be wiggle for example. Now you then add curly braces and in there,

29
00:02:10,210 --> 00:02:14,210
the most basic animation simply has a from value,

30
00:02:14,350 --> 00:02:22,060
so you add the from keyword and then curly braces and then the two keyword. This essentially allows you

31
00:02:22,060 --> 00:02:28,660
to define two keyframes, the starting state and the ending state. We'll later dive into how you can add

32
00:02:28,660 --> 00:02:30,340
more keyframes.

33
00:02:30,370 --> 00:02:39,900
Now I want this to rotate, so let's add a transform property here and then maybe rotate set zero,

34
00:02:39,910 --> 00:02:41,010
this is where I want to start,

35
00:02:41,020 --> 00:02:45,980
so I want to start with the rotation it has initially, which is not rotated at all.

36
00:02:46,030 --> 00:02:51,090
Please note that there is no CSS selector in here, just the CSS property,

37
00:02:51,370 --> 00:02:58,660
this property will later be applied to any element which receives that set of keyframes as an animation.

38
00:02:59,510 --> 00:03:01,810
The target state maybe is that

39
00:03:01,810 --> 00:03:08,610
we have a transformation of let's say rotate set of 10 degrees,

40
00:03:08,830 --> 00:03:10,750
so moved up a little bit.

41
00:03:10,780 --> 00:03:15,990
Now important, you can of course use any CSS property here, not just transforme,

42
00:03:16,150 --> 00:03:23,200
you can also change the text color with color or the background or whatever you want to do,

43
00:03:23,230 --> 00:03:26,880
not every property is animatable but you can still change it,

44
00:03:26,890 --> 00:03:32,110
it might just jump to the next value immediately because what happens behind the scenes is that for

45
00:03:32,110 --> 00:03:38,860
a CSS animation, CSS will still automatically generate smooth transitions between your starting

46
00:03:38,860 --> 00:03:40,420
and target value,

47
00:03:40,420 --> 00:03:44,970
you just have more control about the different in-between states, something I'll come back to

48
00:03:45,160 --> 00:03:50,790
and of course it's way easier to define like five different properties that should be animated

49
00:03:50,800 --> 00:03:52,820
than it is with transitions, here

50
00:03:52,840 --> 00:03:55,400
you simply add them one after each other.

51
00:03:55,570 --> 00:04:01,810
So here we get a simple animation though, just one property which we change and just two states; starting

52
00:04:01,900 --> 00:04:03,160
and end state.

53
00:04:03,220 --> 00:04:07,040
Now with that keyframes set defined, let's use it as an animation

54
00:04:07,090 --> 00:04:11,440
and please note that we say nothing about the duration of the animation here, just where we want to start

55
00:04:11,530 --> 00:04:12,490
and end.

56
00:04:12,940 --> 00:04:19,630
So let's move up then and let's find our navigation items, here we got the call to action button,

57
00:04:19,630 --> 00:04:24,210
now I'll add a new selector and for main nav item CTA,

58
00:04:24,280 --> 00:04:27,320
so only in the main navigation for the call to action button,

59
00:04:27,370 --> 00:04:31,860
I want to add that animation by adding the animation property.

60
00:04:32,110 --> 00:04:35,800
First of all, we then reference the name of the keyframes we want to play, wiggle

61
00:04:35,800 --> 00:04:42,130
in our case, so the name we defined for the keyframe set and then we define the duration, like

62
00:04:42,130 --> 00:04:43,410
200ms.

63
00:04:43,420 --> 00:04:45,000
We can also add a delay

64
00:04:45,130 --> 00:04:50,230
and since this will actually play right from the time we load the page, a delay of three seconds might

65
00:04:50,230 --> 00:04:53,880
not be too bad, to give the user some time to orientate himself.

66
00:04:53,890 --> 00:04:58,990
Of course you can also use Javascript to dynamically add an animation so that it only plays when a certain

67
00:04:58,990 --> 00:05:03,190
event happens. One other useful value you can specify here are the 

68
00:05:03,500 --> 00:05:05,280
animation iterations,

69
00:05:05,440 --> 00:05:06,130
maybe eight,

70
00:05:06,130 --> 00:05:10,800
this means it will play the animation eight times after it starts.

71
00:05:10,930 --> 00:05:18,310
You also can then specify the direction, which simply means after one iteration, does it snap back to the

72
00:05:18,310 --> 00:05:25,060
starting state and start the next iteration or does it actually alternate and move back to the starting

73
00:05:25,060 --> 00:05:25,690
state?

74
00:05:25,690 --> 00:05:32,590
So we can specify alternate here in this case. With that if we save that, we can reload our page

75
00:05:32,590 --> 00:05:37,830
and now after three seconds, we actually see that our button starts wiggling here.

76
00:05:38,170 --> 00:05:44,000
Now this didn't look like eight times because the alternate swing actually also counts as an iteration,

77
00:05:44,140 --> 00:05:49,320
so we got four iterations in each direction. Besides alternate, you got also got reverse,

78
00:05:49,330 --> 00:05:56,400
let's see what this does. If we now reload, here after three seconds, we can see now it's way more bumpy

79
00:05:56,640 --> 00:05:59,980
because now what it actually does is it plays the keyframes in reverse,

80
00:06:00,000 --> 00:06:06,030
so it starts with the end state and then moves back and you also got alternate reverse, I think alternate

81
00:06:06,030 --> 00:06:13,480
looks the best here though. One interesting other value you can set for animations is filled state. 

82
00:06:13,500 --> 00:06:19,860
Now the fill states simply defines, should the properties set during the animation,

83
00:06:19,860 --> 00:06:25,560
so in our case the transformed property and its value, should that be kept when the animation is finished

84
00:06:25,710 --> 00:06:26,540
or not?

85
00:06:26,730 --> 00:06:29,160
The default is that it's not keeping that,

86
00:06:29,160 --> 00:06:34,980
you can also decide that you'd want to keep the starting state which can differ from your normal elements

87
00:06:34,980 --> 00:06:41,100
state by the way. Here it's the same but of course, you can have an element where you add an animation

88
00:06:41,370 --> 00:06:44,840
and the starting state is for example that it has a blue background color,

89
00:06:44,910 --> 00:06:50,400
so it immediately starts the animation with that but by default, the element could have a green background

90
00:06:50,400 --> 00:06:51,050
color,

91
00:06:51,090 --> 00:06:56,750
so then the starting state of the animation would differ from the default state of the element. Anyways

92
00:06:56,820 --> 00:07:03,780
you can tell the animation or CSS which values to keep with the fill state which is added as another

93
00:07:03,900 --> 00:07:11,080
value to that animation shorthand here and that can be forwards to tell it to keep the final result,

94
00:07:11,130 --> 00:07:12,650
let me show you what this means.

95
00:07:12,720 --> 00:07:13,770
Now if I reload,

96
00:07:13,890 --> 00:07:21,320
you will see that the animation plays and it actually finishes with nothing because we alternate

97
00:07:21,390 --> 00:07:26,880
but if we remove alternate, you will see that it actually will finish in a rotated state

98
00:07:27,650 --> 00:07:34,790
because now it has this bumpy look but it actually finishes rotated because we specified forwards

99
00:07:35,000 --> 00:07:41,870
which tells it 'please keep the final property and values you have in the last keyframe here.'

100
00:07:42,470 --> 00:07:46,790
If you use backwards, it'll keep the set up of the starting state,

101
00:07:46,810 --> 00:07:47,970
now let me show you what I mean.

102
00:07:48,020 --> 00:07:53,510
If we set the starting set to -10 degrees, then it's actually a different state than the default

103
00:07:53,510 --> 00:07:56,810
state of the element which of course is no rotation.

104
00:07:56,810 --> 00:08:04,220
So if I now set this to backwards and we reload, you'll see it starts in this state already and then

105
00:08:04,220 --> 00:08:09,500
it starts wiggling and it ends in the final normal state.

106
00:08:09,500 --> 00:08:17,150
You can also use both, in which case it will start with that first keyframe already and then will end

107
00:08:17,330 --> 00:08:19,380
with the value of the last keyframe.

108
00:08:19,430 --> 00:08:25,100
Now the most common use case is forwards actually because often you have animations where you want to

109
00:08:25,100 --> 00:08:30,120
ensure that you finish in a certain state and that you then keep that state.

110
00:08:30,120 --> 00:08:36,000
So now with forward set, we start in the normal state, then we start wiggling around

111
00:08:36,280 --> 00:08:37,960
and then we have our end state.

112
00:08:38,110 --> 00:08:40,040
Now here for the call to action button,

113
00:08:40,090 --> 00:08:41,640
I actually want to have none,

114
00:08:41,800 --> 00:08:44,120
so we can set none here,

115
00:08:44,260 --> 00:08:48,140
we don't have to do that though, none is the default value.

116
00:08:48,580 --> 00:08:50,550
So that's a basic animation.

117
00:08:50,620 --> 00:08:53,110
Thus far, we only use two keyframes,

118
00:08:53,110 --> 00:08:56,380
the cool thing about animations is that we can use more than two though,

119
00:08:56,390 --> 00:08:58,630
so let's do that in the next lecture.
