1
00:00:02,580 --> 00:00:10,300
So time to write our first SASS code and for that, I'll create a new file and I'll name it main.sass

2
00:00:10,680 --> 00:00:14,880
and now in this file, we can surprisingly write SASS code.

3
00:00:15,160 --> 00:00:21,990
Now let's start simple and let's not even use a SASS feature, let's just try to replicate our CSS code with

4
00:00:21,990 --> 00:00:28,060
SASS and for that, I'll copy all the code from the main.css file and put it into that SASS file

5
00:00:28,230 --> 00:00:30,430
and now you see a bunch of errors,

6
00:00:30,720 --> 00:00:35,570
all the semi-colons are marked as red and all the curly braces.

7
00:00:35,670 --> 00:00:44,520
The reason for this is that SASS actually works without semi-colons and without braces, instead indentation

8
00:00:44,520 --> 00:00:49,600
is used to determine to which selector a certain property belongs.

9
00:00:49,950 --> 00:00:56,530
So if we were to convert this code to valid SASS code, we would remove all these semi-colons and

10
00:00:56,550 --> 00:01:00,580
we would remove all the curly braces here, like that.

11
00:01:00,610 --> 00:01:02,650
This is a valid SASS code now

12
00:01:02,940 --> 00:01:08,790
and if we would remove the indentation, this would be invalid because the indentation here really now

13
00:01:08,790 --> 00:01:15,900
decides to which selector this property belongs, if it's indented one level, it belongs to the selector

14
00:01:16,140 --> 00:01:18,330
above this level so to say.

15
00:01:18,330 --> 00:01:21,070
So this is how we would convert our code.

16
00:01:21,120 --> 00:01:24,010
Now you might like this or you may not like this,

17
00:01:24,020 --> 00:01:27,380
this is really something which differs from person to person.

18
00:01:27,390 --> 00:01:35,370
Most people find SCSS a bit easier though, it uses the same features as SASS does but it actually keeps

19
00:01:35,370 --> 00:01:39,240
the CSS syntax with the semi-colons and the curly braces.

20
00:01:39,540 --> 00:01:45,870
So I will revert my deletions here and add all the semi-colons and curly braces back in and I'll rename

21
00:01:45,870 --> 00:01:49,620
that file here to .scss at the end,

22
00:01:49,680 --> 00:01:51,630
not SASS.

23
00:01:51,630 --> 00:02:01,750
Now we can actually keep our code as it was before, just need to add a semi-colon after the import here and now

24
00:02:01,750 --> 00:02:03,910
we can continue working here.

25
00:02:03,910 --> 00:02:05,560
So this is the syntax I will use

26
00:02:05,650 --> 00:02:12,790
and this now looks like CSS and actually normal CSS also is valid SCSS, so we could leave it like

27
00:02:12,790 --> 00:02:13,400
this

28
00:02:13,570 --> 00:02:16,890
but now we can add more features to that file.

29
00:02:16,900 --> 00:02:23,440
Now let's already add one feature, so that I can also show you how this compilation step works and that

30
00:02:23,440 --> 00:02:26,290
one feature I want to add is nesting.

31
00:02:26,320 --> 00:02:32,800
So if we scrolled down a bit, we see that for example for documentation links, we nest a list item,

32
00:02:33,210 --> 00:02:38,740
we nest documentation link and we nest documentation link hover and active.

33
00:02:38,740 --> 00:02:48,720
So what we can do is, we can go to documentation links and simply add another selector nested into this selector,

34
00:02:48,720 --> 00:02:54,160
so next to the other properties. With normal CSS, this would not be possible

35
00:02:54,370 --> 00:02:59,570
but now, this will actually be converted to this syntax here.

36
00:02:59,740 --> 00:03:06,120
So I will now grab the code I had in there and put it into this nested li

37
00:03:06,520 --> 00:03:08,560
and now we can nest this even more.

38
00:03:08,590 --> 00:03:14,190
So I will grab this code for the documentation link and add it next to the li.

39
00:03:14,410 --> 00:03:16,670
Actually it could also added inside of the li,

40
00:03:16,840 --> 00:03:23,320
since as you can see on the index.html file, documentation link is a class on an element nested in

41
00:03:23,320 --> 00:03:24,100
the li

42
00:03:24,340 --> 00:03:29,590
but both will work here of course because documentation link is also nested in documentation links,

43
00:03:29,740 --> 00:03:34,130
even though it's no direct child but that also doesn't have to be the case,

44
00:03:34,150 --> 00:03:38,550
this really is just the translation of this syntax here.

45
00:03:39,840 --> 00:03:46,190
And that of course means you can also grab the hover and active links and copy that into our code, so we

46
00:03:46,190 --> 00:03:50,010
can go up and add that selector here,

47
00:03:50,090 --> 00:03:56,130
get rid of that documentation links, so that now we got this nested code.

48
00:03:56,250 --> 00:03:59,580
Now I can get rid of documentation links

49
00:03:59,600 --> 00:04:02,120
li and this and this,

50
00:04:02,130 --> 00:04:08,040
so all the code we just nested and you can already see how this makes the code a bit more readable

51
00:04:08,160 --> 00:04:14,910
because here, we're now containing all the styles related to my documentation links in one big selector

52
00:04:14,910 --> 00:04:16,500
so to say.

53
00:04:16,620 --> 00:04:23,910
Now how do we turn this into normal CSS though because this would not run. We need the command line,

54
00:04:23,970 --> 00:04:25,240
the terminal for that

55
00:04:25,290 --> 00:04:30,540
and here I will open the terminal which is integrated into Visual Studio Code but you can also use the

56
00:04:30,540 --> 00:04:34,130
normal Mac or Windows terminal we used before,

57
00:04:34,140 --> 00:04:37,700
just make sure that you navigate into this project folder.

58
00:04:38,010 --> 00:04:43,760
Then you can use the SASS command which is available since we installed SASS with the gem command earlier

59
00:04:44,190 --> 00:04:51,480
and now you can run SASS main.scss, so you target the file which holds your SASS code and then you

60
00:04:51,480 --> 00:04:57,020
define a file name for the file you want to generate and here I will use main.css,

61
00:04:57,060 --> 00:05:02,290
hence I will overwrite the original .css file. If I hit enter,

62
00:05:03,130 --> 00:05:06,180
this will now generate the main.css file,

63
00:05:06,190 --> 00:05:14,200
it also gives us a map file which is a source map file which makes it easier for the browser to map

64
00:05:14,200 --> 00:05:16,600
our code to the original source code

65
00:05:16,640 --> 00:05:18,650
but we don't have to worry about that right now.

66
00:05:18,880 --> 00:05:21,140
In the new main.css file though,

67
00:05:21,250 --> 00:05:26,000
you can see that instead, it automatically created these nestings

68
00:05:26,020 --> 00:05:27,600
we had in there before.

69
00:05:27,760 --> 00:05:34,110
So we get the same code as before but now generated automatically by the SASS command

70
00:05:34,330 --> 00:05:39,370
and if you don't want to rerun this command whenever you make a change in your .scss file, then you

71
00:05:39,370 --> 00:05:47,440
can also enter sass--watch main.scss, so the file you want to watch for changes and

72
00:05:47,440 --> 00:05:52,410
then colon and then immediately without a whitespace, main.css.

73
00:05:52,450 --> 00:05:54,040
Now this will enter watch mode

74
00:05:54,160 --> 00:05:58,570
and as you see, this is now an ongoing process which you can quit with control c

75
00:05:58,690 --> 00:06:04,690
and now whenever we change something in that file and save that file, it will automatically recompile.

76
00:06:04,690 --> 00:06:09,760
So if I quickly set the background here to black for example, just to see a difference and I save this,

77
00:06:10,260 --> 00:06:13,480
you'll see it detected a change and recreated the file

78
00:06:13,480 --> 00:06:16,670
and if we go back and reload, we see that new style.

79
00:06:16,840 --> 00:06:22,660
Now I will switch this back but this is now really useful to ensure that we don't have to manually compile

80
00:06:22,660 --> 00:06:24,260
all the time.

81
00:06:24,280 --> 00:06:30,130
So with that, we see how we can use SASS and we already learned about the first feature, the nesting of

82
00:06:30,130 --> 00:06:31,240
selectors.

83
00:06:31,240 --> 00:06:33,130
Now let's see what else we can do with SASS.
