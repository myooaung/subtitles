WEBVTT
1
00:00:00.940 --> 00:00:03.140
[Autogenerated] while our instances initializing we

2
00:00:03.140 --> 00:00:05.040
do need to download and prepare.

3
00:00:05.040 --> 00:00:07.600
Our demo application to deploy.

4
00:00:07.600 --> 00:00:10.960
The application is included with the exercise files

5
00:00:10.960 --> 00:00:13.440
in the Pluralsight class page.

6
00:00:13.440 --> 00:00:18.940
You can also download the application from my GitHub account using this address,

7
00:00:18.940 --> 00:00:23.460
you can download a zip file with the code directly from GitHub or

8
00:00:23.460 --> 00:00:27.050
clone the GitHub account if you prefer Either way,

9
00:00:27.050 --> 00:00:32.390
get the demo application code whichever way is most comfortable to you now

10
00:00:32.390 --> 00:00:35.950
open a command line and navigate to the folder where you downloaded and

11
00:00:35.950 --> 00:00:40.800
unpacked the demo application code We're going to use npm to read the

12
00:00:40.800 --> 00:00:45.410
dependency requirements in the package dot JSON file and download

13
00:00:45.410 --> 00:00:48.470
dependencies from the NPM registry,

14
00:00:48.470 --> 00:00:52.700
execute the command npm install once the progress bar

15
00:00:52.700 --> 00:00:56.190
completes all the dependencies downloaded will output and

16
00:00:56.190 --> 00:00:58.970
you'll be back at your prompt at this point.

17
00:00:58.970 --> 00:01:01.910
Everything should be ready to start up the application.

18
00:01:01.910 --> 00:01:08.420
So run the command npm start this will execute the index dot Js file in our

19
00:01:08.420 --> 00:01:14.680
Pizza folder which will run the application and listen on port 3000 and if

20
00:01:14.680 --> 00:01:17.430
you ever happen to need to stop this process.

21
00:01:17.430 --> 00:01:25.040
Hit control C Now open a browser and go to local host colon 3000.

22
00:01:25.040 --> 00:01:29.340
You should see Pizza lovers appear and you can play around with it.

23
00:01:29.340 --> 00:01:33.970
It should be fully functioning and Pizza Licious by now.

24
00:01:33.970 --> 00:01:35.990
Our instance should be initialized.

25
00:01:35.990 --> 00:01:37.660
So let's go ahead and get back to it.

26
00:01:37.660 --> 00:01:41.240
All right, let's take a look at the instance we just created.

27
00:01:41.240 --> 00:01:46.490
Open up the web console and go to the ec two dashboard Now in the dashboard

28
00:01:46.490 --> 00:01:51.140
summary we should see a line with one running instances,

29
00:01:51.140 --> 00:01:55.040
click on that to go to the instance list and then select our

30
00:01:55.040 --> 00:01:58.850
pizza hoagie instance at the bottom of the screen is the

31
00:01:58.850 --> 00:02:01.460
details of that particular instance.

32
00:02:01.460 --> 00:02:04.520
There's a ton of good information but right now I just want to

33
00:02:04.520 --> 00:02:08.650
call out a few relevant pieces first we can see that there is

34
00:02:08.650 --> 00:02:11.840
actually no public IP for this instance.

35
00:02:11.840 --> 00:02:16.550
Next we can see that there is a private IP and it's in the range of

36
00:02:16.550 --> 00:02:20.440
addresses that we configured for a VPc and submit.

37
00:02:20.440 --> 00:02:24.820
Our EC two instance currently has no public IP address which means

38
00:02:24.820 --> 00:02:28.860
that even though we configured security groups to allow ssh

39
00:02:28.860 --> 00:02:33.040
sessions from anywhere there's no way to connect because there's no

40
00:02:33.040 --> 00:02:36.040
public in point outside the VPc.

41
00:02:36.040 --> 00:02:37.590
So we need to add an I.

42
00:02:37.590 --> 00:02:37.820
P.

43
00:02:37.820 --> 00:02:43.220
To our instance to assign this instance a public IP address We

44
00:02:43.220 --> 00:02:47.190
will first create an elastic IP elastic I.

45
00:02:47.190 --> 00:02:49.280
P s are basically public I.

46
00:02:49.280 --> 00:02:53.440
P addresses that can be associated with instances.

47
00:02:53.440 --> 00:02:56.490
If the underlying instance is terminated.

48
00:02:56.490 --> 00:03:02.240
The elastic IP will still exist and can be associated with a different instance.

49
00:03:02.240 --> 00:03:07.210
This is very useful when you're building services or configuring DNS off

50
00:03:07.210 --> 00:03:11.240
of I P addresses that you need to stay consistent.

51
00:03:11.240 --> 00:03:14.600
We will create an elastic iP and associated to our

52
00:03:14.600 --> 00:03:17.660
current ec two instance in the left menu,

53
00:03:17.660 --> 00:03:23.010
select elastic IPs the elastic IP list should be empty.

54
00:03:23.010 --> 00:03:30.710
So click allocate elastic IP address then allocate now we have a public

55
00:03:30.710 --> 00:03:35.740
IP address that once associated with an instance can be used to connect

56
00:03:35.740 --> 00:03:39.020
to it with that elastic IPs selected,

57
00:03:39.020 --> 00:03:45.780
click the actions button above and select associate elastic IP address will be

58
00:03:45.780 --> 00:03:50.580
associating this elastic iP to our pizza hoagie instance.

59
00:03:50.580 --> 00:03:54.700
So in the instance drop down, select pizza O G.

60
00:03:54.700 --> 00:03:59.340
In the next field we need to select a private IP to connect to

61
00:03:59.340 --> 00:04:04.410
click the drop down and select the only IP available now click

62
00:04:04.410 --> 00:04:07.390
associate the elastic IP details.

63
00:04:07.390 --> 00:04:12.540
Window will update with the Ec two instance that it is associated with.

64
00:04:12.540 --> 00:04:14.440
If you click on the instance link,

65
00:04:14.440 --> 00:04:18.050
it will take us to the instance details and we can see that the

66
00:04:18.050 --> 00:04:23.020
instance now shows that it has a public IP address copy this iP

67
00:04:23.020 --> 00:04:25.940
address so that we can use it next.

68
00:04:25.940 --> 00:04:27.330
Now that we have an endpoint,

69
00:04:27.330 --> 00:04:32.910
let's connect Windows Mac and Linux users can use ssh to

70
00:04:32.910 --> 00:04:37.590
connect to our instance for Windows you may need to install

71
00:04:37.590 --> 00:04:40.850
open SSH but once it's installed,

72
00:04:40.850 --> 00:04:44.680
the instructions should be the same since I'm using a Mac.

73
00:04:44.680 --> 00:04:48.070
The only difference will be the file path format in the

74
00:04:48.070 --> 00:04:50.800
command line open a command line.

75
00:04:50.800 --> 00:04:54.610
We first need to modify our key pair file that we downloaded.

76
00:04:54.610 --> 00:04:59.890
So SSH will let us use it for Mac and Linux users enter the command

77
00:04:59.890 --> 00:05:06.010
ch mod 400 path to the pEM file for Windows users you may not need

78
00:05:06.010 --> 00:05:11.120
to do this or you may have to use the Windows Explorer menu through

79
00:05:11.120 --> 00:05:15.960
the GUI This will change the permissions of that file so it's only

80
00:05:15.960 --> 00:05:17.940
readable by us.

81
00:05:17.940 --> 00:05:18.370
Now.

82
00:05:18.370 --> 00:05:23.380
We can enter the ssh command to connect to our instance at the prompt,

83
00:05:23.380 --> 00:05:29.940
enter SSH dash I the path to your PEM file,

84
00:05:29.940 --> 00:05:36.840
Then EC 2- User at the elastic iP of your instance.

85
00:05:36.840 --> 00:05:38.740
Here's an example of that.

86
00:05:38.740 --> 00:05:39.480
Every Ec.

87
00:05:39.480 --> 00:05:45.170
Two instance sets up Ec two user as the default user name to log into,

88
00:05:45.170 --> 00:05:49.040
which is why we are using that to log into this instance.

89
00:05:49.040 --> 00:05:50.520
Once you execute this command,

90
00:05:50.520 --> 00:05:54.980
there should be a message about the authenticity of the host and

91
00:05:54.980 --> 00:05:59.070
type us here and then you should be presented with a new prompt

92
00:05:59.070 --> 00:06:02.540
after an Ask e arte E C two logo.

93
00:06:02.540 --> 00:06:10.000
Now we have successfully connected to our instance and we can proceed to deploy our application to it

