1
00:00:00,940 --> 00:00:04,310
[Autogenerated] CloudFormation is a tool offered by amazon to use

2
00:00:04,310 --> 00:00:08,640
configuration data to create and configure resources in AWS.

3
00:00:08,640 --> 00:00:13,350
Almost any AWS resource can be created using CloudFormation from a

4
00:00:13,350 --> 00:00:17,040
security group to Annecy to auto scaling group.

5
00:00:17,040 --> 00:00:21,620
CloudFormation allows you to perfectly create groups of resources over and

6
00:00:21,620 --> 00:00:26,080
over again due to the static nature of the templates used to create those

7
00:00:26,080 --> 00:00:29,100
resources you've seen in this course already,

8
00:00:29,100 --> 00:00:33,120
how many different resources we've created databases,

9
00:00:33,120 --> 00:00:36,410
I am rolls launch configurations ec,

10
00:00:36,410 --> 00:00:40,190
two instances the list goes on and on and all of this

11
00:00:40,190 --> 00:00:42,840
just to support one application,

12
00:00:42,840 --> 00:00:48,040
what if we needed to create a development stack to mirror our production stack.

13
00:00:48,040 --> 00:00:52,540
Doing this process by hand would be error prone and time intensive.

14
00:00:52,540 --> 00:00:55,520
If we use CloudFormation to provision those resources,

15
00:00:55,520 --> 00:00:58,460
we can recreate the infrastructure to support pizza

16
00:00:58,460 --> 00:01:01,160
lovers anytime we want the key tool.

17
00:01:01,160 --> 00:01:03,260
And CloudFormation is a template.

18
00:01:03,260 --> 00:01:07,460
A CloudFormation template is just a JSON document that contains the

19
00:01:07,460 --> 00:01:12,440
configuration information for AWS resources and how they relate,

20
00:01:12,440 --> 00:01:15,900
you can create this template document as a file and check it

21
00:01:15,900 --> 00:01:19,750
into version control to track changes to your infrastructure and

22
00:01:19,750 --> 00:01:22,140
make it easy to roll back if needed.

23
00:01:22,140 --> 00:01:25,680
These templates can often be massive documents when you have a

24
00:01:25,680 --> 00:01:28,440
large amount of infrastructure to create.

25
00:01:28,440 --> 00:01:32,540
The great thing about CloudFormation is that there is no limit to how many or

26
00:01:32,540 --> 00:01:36,780
few resources a template can be used to create for instance,

27
00:01:36,780 --> 00:01:41,100
if you just wanted to create a CloudFormation template to create one Ec.

28
00:01:41,100 --> 00:01:44,480
Two instance with an I AM role and a security group.

29
00:01:44,480 --> 00:01:46,340
CloudFormation can do that.

30
00:01:46,340 --> 00:01:50,240
This could be useful when you already have a VPC created but

31
00:01:50,240 --> 00:01:52,640
just need to create some resources in it.

32
00:01:52,640 --> 00:01:55,080
In fact using CloudFormation in this way,

33
00:01:55,080 --> 00:01:58,620
ensures that you will be able to create the same resources again,

34
00:01:58,620 --> 00:02:03,540
especially since even the best among us will forget which _______ they clicked.

35
00:02:03,540 --> 00:02:07,640
The other unique CloudFormation concept is the idea of a stack.

36
00:02:07,640 --> 00:02:11,650
A stack is essentially a group of AWS resources created

37
00:02:11,650 --> 00:02:14,540
by a single CloudFormation template.

38
00:02:14,540 --> 00:02:17,920
A template can be used to create more than one stack but

39
00:02:17,920 --> 00:02:20,940
each stack needs to be named uniquely.

40
00:02:20,940 --> 00:02:23,900
In addition to CloudFormation being able to create a stack,

41
00:02:23,900 --> 00:02:27,230
it can also update and delete a given stack.

42
00:02:27,230 --> 00:02:30,470
Updating allows you to modify your CloudFormation

43
00:02:30,470 --> 00:02:33,570
template and resubmit it to the stack.

44
00:02:33,570 --> 00:02:37,740
Some examples of this are if you need to increase the size of an ec two

45
00:02:37,740 --> 00:02:41,740
instance or change the rules and a security group,

46
00:02:41,740 --> 00:02:46,100
CloudFormation will attempt to process the update without even restarting your

47
00:02:46,100 --> 00:02:50,450
resources if it's possible once a stack isn't needed anymore,

48
00:02:50,450 --> 00:02:51,930
CloudFormation can delete it,

49
00:02:51,930 --> 00:02:55,810
which removes all of the resources created in that stack,

50
00:02:55,810 --> 00:02:58,340
it's a very powerful operation.

51
00:02:58,340 --> 00:03:01,980
One important thing to know is that CloudFormation doesn't hold

52
00:03:01,980 --> 00:03:05,330
your hand the same way the AWS console wizards,

53
00:03:05,330 --> 00:03:08,910
we've used do whatever resources are configured in

54
00:03:08,910 --> 00:03:12,190
your template will be created, but nothing else.

55
00:03:12,190 --> 00:03:19,000
Sometimes there can be a bit of trial and arrow in creating a CloudFormation template to get it exactly right

