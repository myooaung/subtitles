WEBVTT
1
00:00:00.940 --> 00:00:04.670
[Autogenerated] it wasn't that long ago that running a web company meant paying

2
00:00:04.670 --> 00:00:09.370
for on premises Web servers and databases and hiring an I.

3
00:00:09.370 --> 00:00:09.700
T.

4
00:00:09.700 --> 00:00:13.730
Staff to maintain that infrastructure and while this is

5
00:00:13.730 --> 00:00:15.900
still the case for some companies,

6
00:00:15.900 --> 00:00:18.820
the balance is shifting to utilizing the cloud for

7
00:00:18.820 --> 00:00:24.630
web infrastructure as a developer, you may have zero background in operations,

8
00:00:24.630 --> 00:00:27.180
types, procedures and applications.

9
00:00:27.180 --> 00:00:29.680
I know that when I was getting into a W.

10
00:00:29.680 --> 00:00:32.940
S as a developer, I was totally new to it all.

11
00:00:32.940 --> 00:00:37.720
So I want to start by talking about how developing in the cloud is a little

12
00:00:37.720 --> 00:00:41.280
different and a little similar to what you're used to first.

13
00:00:41.280 --> 00:00:45.020
Let's talk about how it's similar if you're running an application

14
00:00:45.020 --> 00:00:47.240
that you're developing on your local machine,

15
00:00:47.240 --> 00:00:50.480
it's executing and running on some sort of platform,

16
00:00:50.480 --> 00:00:56.300
be it an interpreter, virtual machine or operating system in the cloud.

17
00:00:56.300 --> 00:01:00.140
Your application will be running on the exact same thing.

18
00:01:00.140 --> 00:01:03.710
Granted there is usually another layer of abstraction that

19
00:01:03.710 --> 00:01:08.420
amazon uses because the server or instance that you use is

20
00:01:08.420 --> 00:01:10.590
almost always going to be virtual.

21
00:01:10.590 --> 00:01:14.840
But the fact remains that there isn't much difference for you.

22
00:01:14.840 --> 00:01:17.440
If you're running a .NET application,

23
00:01:17.440 --> 00:01:22.240
you need the .NET platform to be installed to execute.

24
00:01:22.240 --> 00:01:24.150
If it's a web application,

25
00:01:24.150 --> 00:01:28.370
it will be opening the same ports on this cloud instance that it does

26
00:01:28.370 --> 00:01:32.480
locally and if your application connects to a database,

27
00:01:32.480 --> 00:01:35.440
it will be doing the same thing in the cloud.

28
00:01:35.440 --> 00:01:39.300
The conceptual functionality of your application is going to

29
00:01:39.300 --> 00:01:41.490
be the same when it runs in the cloud.

30
00:01:41.490 --> 00:01:43.150
Now, what's different?

31
00:01:43.150 --> 00:01:47.200
Well the key difference when running an application in the cloud versus

32
00:01:47.200 --> 00:01:52.220
developing it locally is that you'll need to start thinking of how to extract

33
00:01:52.220 --> 00:01:56.960
responsibilities of your application into services The whole goal of

34
00:01:56.960 --> 00:02:00.170
developing in the cloud is that you want your application to be as

35
00:02:00.170 --> 00:02:05.650
maintainable and resilient as possible to achieve this will take pieces out of

36
00:02:05.650 --> 00:02:09.580
your applications such as file storage, databases,

37
00:02:09.580 --> 00:02:15.170
cash and more and move this into other Amazon Web Services You'll

38
00:02:15.170 --> 00:02:19.700
want to start thinking of your application as just the core logic

39
00:02:19.700 --> 00:02:22.540
that utilizes these other services.

40
00:02:22.540 --> 00:02:25.460
The connections to these services will mostly be handled

41
00:02:25.460 --> 00:02:28.080
by an AWS software development kit,

42
00:02:28.080 --> 00:02:30.990
so you will still be able to code your application

43
00:02:30.990 --> 00:02:33.070
comfortably as you connect it to.

44
00:02:33.070 --> 00:02:36.910
These superpowered services developing in the cloud

45
00:02:36.910 --> 00:02:39.040
may feel a little weird at first,

46
00:02:39.040 --> 00:02:48.000
but by the end of this course you're going to feel right at home developing with AWS and hey, you might even begin to enjoy it

