1
00:00:00,940 --> 00:00:05,030
[Autogenerated] sometimes you may find yourself deciding between RDS and a

2
00:00:05,030 --> 00:00:10,440
relational database or dynamo DB and a non relational database.

3
00:00:10,440 --> 00:00:13,510
I found myself thinking through this before as well and there are a

4
00:00:13,510 --> 00:00:18,000
couple of aspects that RDS and dynamo DB are opposites on which

5
00:00:18,000 --> 00:00:20,740
should help you decide which to choose.

6
00:00:20,740 --> 00:00:25,100
RDS like a typical database can be used for many different purposes.

7
00:00:25,100 --> 00:00:28,340
Putting data in and getting it out is very efficient.

8
00:00:28,340 --> 00:00:33,440
One aspect of relational databases is the strict schema of the data being stored

9
00:00:33,440 --> 00:00:36,490
when you're developing and adding properties to your data.

10
00:00:36,490 --> 00:00:40,450
This schema constraint can become frustrating as I've experienced.

11
00:00:40,450 --> 00:00:44,840
Dynamodb on the other hand, is extremely flexible with how your data looks.

12
00:00:44,840 --> 00:00:48,150
You can add a new field at any time and put it in a table with

13
00:00:48,150 --> 00:00:52,050
data that have different schema as long as your primary key is

14
00:00:52,050 --> 00:00:54,240
there Dynamo won't complain.

15
00:00:54,240 --> 00:00:57,580
This flexibility obviously speeds up development time and

16
00:00:57,580 --> 00:01:00,490
makes it easier to iterate because of this,

17
00:01:00,490 --> 00:01:03,920
I like to say that Dynamo DB has strong storage

18
00:01:03,920 --> 00:01:06,930
flexibility on the other side of this however,

19
00:01:06,930 --> 00:01:10,740
is querying the data to get data out of a database,

20
00:01:10,740 --> 00:01:13,510
you typically need to give it some factors to look

21
00:01:13,510 --> 00:01:16,040
for enquiring relational databases.

22
00:01:16,040 --> 00:01:19,770
Excel and structured query language or SQL is

23
00:01:19,770 --> 00:01:22,940
perfect for getting data out however, you need it.

24
00:01:22,940 --> 00:01:28,340
The strict schema of relational databases actually make it easier to query data.

25
00:01:28,340 --> 00:01:32,290
DynamodB however is not very flexible with querying data.

26
00:01:32,290 --> 00:01:37,400
Getting out items by primary key is fast and easy but trying to query

27
00:01:37,400 --> 00:01:40,740
based on other properties becomes very difficult.

28
00:01:40,740 --> 00:01:44,240
You can create secondary indexes on other properties of your data,

29
00:01:44,240 --> 00:01:47,330
but again it's just matching an ID.

30
00:01:47,330 --> 00:01:53,240
You'll quickly find that RDS has the strongest query flexibility.

31
00:01:53,240 --> 00:01:58,270
So to me this is a deciding factor between these types for a given dataset Do

32
00:01:58,270 --> 00:02:02,240
I need storage flexibility or do I need query flexibility?

33
00:02:02,240 --> 00:02:03,780
For storage flexibility?

34
00:02:03,780 --> 00:02:05,720
I would choose dynamodb.

35
00:02:05,720 --> 00:02:08,030
If I'm only ever pulling data out by I.

36
00:02:08,030 --> 00:02:08,720
D.

37
00:02:08,720 --> 00:02:12,940
Then I don't need query flexibility and can opt for dynamodb.

38
00:02:12,940 --> 00:02:17,380
But for query flexibility I'd go with rDS strict schemas

39
00:02:17,380 --> 00:02:19,520
can make it more tedious to work with.

40
00:02:19,520 --> 00:02:27,000
But if I need to do range queries or query on multiple properties, RDS is going to be the best choice.

