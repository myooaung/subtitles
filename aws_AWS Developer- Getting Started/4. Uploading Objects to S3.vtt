WEBVTT
1
00:00:00.940 --> 00:00:03.700
[Autogenerated] now that we have a bucket to store our objects,

2
00:00:03.700 --> 00:00:05.650
we need to actually get them there.

3
00:00:05.650 --> 00:00:10.120
Here are some of the various resources that our web application uses.

4
00:00:10.120 --> 00:00:14.750
We will be moving all of these two S3 and then we'll need to change any

5
00:00:14.750 --> 00:00:20.510
references to these files in our code to the U R L s used in S3 You can

6
00:00:20.510 --> 00:00:24.010
upload objects to S3 using either the console,

7
00:00:24.010 --> 00:00:27.240
the AWS Cli or the SDK.

8
00:00:27.240 --> 00:00:31.050
We will be doing all three in this module in the next clip will

9
00:00:31.050 --> 00:00:35.040
dynamically do this for the new Pizza images but in this clip I will

10
00:00:35.040 --> 00:00:39.340
demonstrate uploading with both the console and the cli.

11
00:00:39.340 --> 00:00:42.570
The console is an efficient way to upload a file quickly.

12
00:00:42.570 --> 00:00:44.560
If you have a small number of them,

13
00:00:44.560 --> 00:00:48.790
if you need to do bulk uploading then the Cli is much better at that

14
00:00:48.790 --> 00:00:51.840
since there's no GUI to have to click through.

15
00:00:51.840 --> 00:00:55.920
Let's start by using the Cli to upload some of our directories,

16
00:00:55.920 --> 00:01:00.230
open your command line and navigate to where you've locally unpacked the

17
00:01:00.230 --> 00:01:05.720
Pizza Lovers code Since we've already installed the AWS Cli and we have

18
00:01:05.720 --> 00:01:08.990
the key from the user we created configured,

19
00:01:08.990 --> 00:01:12.340
there's nothing else we need to do for set up here,

20
00:01:12.340 --> 00:01:15.840
let's start by transferring over a few folders,

21
00:01:15.840 --> 00:01:19.040
there are three that I want to upload from our assets directory,

22
00:01:19.040 --> 00:01:24.540
Js CSS and Pizzas, we will upload each one at a time.

23
00:01:24.540 --> 00:01:30.570
Here's the ca manual use its kind of long so I'm not going to speak it out but

24
00:01:30.570 --> 00:01:35.740
I'll break down the pieces first we execute the AWS Cli.

25
00:01:35.740 --> 00:01:39.320
The first argument we pass in is the service we want to use

26
00:01:39.320 --> 00:01:43.750
which will be S3 The next is the command to execute on that

27
00:01:43.750 --> 00:01:47.640
service which is C p short for copy.

28
00:01:47.640 --> 00:01:51.650
The next argument is the local file or directory to copy I want to

29
00:01:51.650 --> 00:01:55.630
copy the contents of the assets slash Js folder.

30
00:01:55.630 --> 00:01:58.420
The next argument is the S3 destination.

31
00:01:58.420 --> 00:02:00.840
Using an S3 protocol.

32
00:02:00.840 --> 00:02:05.120
This will be your bucket name followed by any remote path since

33
00:02:05.120 --> 00:02:07.730
I want these files to go in the Js folder,

34
00:02:07.730 --> 00:02:09.970
I'll add that to my bucket path.

35
00:02:09.970 --> 00:02:10.570
Finally,

36
00:02:10.570 --> 00:02:15.220
some option arguments include dash dash recursive which will copy

37
00:02:15.220 --> 00:02:19.420
everything in the directory and the next is a file pattern for

38
00:02:19.420 --> 00:02:22.430
excluded files because I'm on a Mac,

39
00:02:22.430 --> 00:02:26.740
there are those pesky Ds store files that I want to ignore.

40
00:02:26.740 --> 00:02:31.050
You may not need to do the same if you're on a different iOS now let's

41
00:02:31.050 --> 00:02:35.070
execute that command and you should see the output that it copied a single

42
00:02:35.070 --> 00:02:42.400
make dot Js file now re create that same command but switch out Js for CSS

43
00:02:42.400 --> 00:02:46.040
in both the source and the destination.

44
00:02:46.040 --> 00:02:52.090
This will copy another file style sheet dot CSS Now swap out CSS

45
00:02:52.090 --> 00:02:56.840
for pizzas and execute the command one last time.

46
00:02:56.840 --> 00:03:00.110
One thing to note we are executing this operation with the

47
00:03:00.110 --> 00:03:02.940
credentials from the user you created,

48
00:03:02.940 --> 00:03:07.510
you assign that user to an admin group that had administrator access,

49
00:03:07.510 --> 00:03:09.290
that's why we're able to do this.

50
00:03:09.290 --> 00:03:14.560
If our user had downgraded permissions that didn't have S3 write access,

51
00:03:14.560 --> 00:03:17.880
we would get an access denied message when we try to do

52
00:03:17.880 --> 00:03:20.590
this now that our files have uploaded,

53
00:03:20.590 --> 00:03:22.850
let's see what they look like in the console.

54
00:03:22.850 --> 00:03:26.580
Open up the S3 console and click on your bucket It should

55
00:03:26.580 --> 00:03:31.940
load and you'll see three folders here, CSS Js and Pizzas.

56
00:03:31.940 --> 00:03:36.360
If we click on pizzas you should then see the pizzas P and G.

57
00:03:36.360 --> 00:03:37.340
S.

58
00:03:37.340 --> 00:03:40.620
Let's test out and see if our policy to make all these

59
00:03:40.620 --> 00:03:43.640
files visible is being applied correctly.

60
00:03:43.640 --> 00:03:48.200
Click on one of the PNG s, click on the hyperlink beneath object.

61
00:03:48.200 --> 00:03:53.840
URL and the PNG should open in the new tab and you should see one of the

62
00:03:53.840 --> 00:03:58.060
pizzas when we make this web request to view the S3 object,

63
00:03:58.060 --> 00:04:01.090
it is doing so completely anonymously without the

64
00:04:01.090 --> 00:04:02.910
credentials you have in the web console.

65
00:04:02.910 --> 00:04:06.910
So successfully viewing the pizza is confirmation that

66
00:04:06.910 --> 00:04:09.140
our policy is working correctly.

67
00:04:09.140 --> 00:04:13.050
We still need to transfer over the toppings and a few other

68
00:04:13.050 --> 00:04:16.240
files so let's do that with the console.

69
00:04:16.240 --> 00:04:18.940
Go back to the main bucket page via the breadcrumbs

70
00:04:18.940 --> 00:04:21.140
link towards the top of the page,

71
00:04:21.140 --> 00:04:26.850
click the create folder button and type toppings in the input that opens up,

72
00:04:26.850 --> 00:04:29.340
then click create folder.

73
00:04:29.340 --> 00:04:34.320
Now click this toppings folder we want to upload the toppings images here,

74
00:04:34.320 --> 00:04:36.080
click the upload button,

75
00:04:36.080 --> 00:04:40.100
click on the add files button and navigate to and

76
00:04:40.100 --> 00:04:43.770
select all the toppings PNG files.

77
00:04:43.770 --> 00:04:49.180
We don't need to set any details for these files so click upload the transfer

78
00:04:49.180 --> 00:04:53.090
pain will show the progress of the file transfer and once it's complete you

79
00:04:53.090 --> 00:04:56.100
should see all the files showing in the file list.

80
00:04:56.100 --> 00:04:59.000
We just have a few more files to upload,

81
00:04:59.000 --> 00:05:02.040
navigate back to the root of your bucket,

82
00:05:02.040 --> 00:05:04.640
then click the upload button,

83
00:05:04.640 --> 00:05:10.200
go up one directory to the root of the assets directory in your local demo

84
00:05:10.200 --> 00:05:15.920
project and then copy all of the PNG s as well as the fab Akane.

85
00:05:15.920 --> 00:05:18.030
Should just be about four of them.

86
00:05:18.030 --> 00:05:22.360
Uh This should be a much quicker upload than the other folder,

87
00:05:22.360 --> 00:05:28.740
a lot less images and then we've got everything uploaded to S3 in the

88
00:05:28.740 --> 00:05:39.000
next clip will modify our code to use S3 for retrieving these files and also use the AWS SDK to upload files to S3

