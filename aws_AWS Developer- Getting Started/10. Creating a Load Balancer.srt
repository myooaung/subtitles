1
00:00:00,940 --> 00:00:05,200
[Autogenerated] now let's set up our load balancer from the ec two dashboard,

2
00:00:05,200 --> 00:00:08,700
click on load balancers in the resources section and

3
00:00:08,700 --> 00:00:11,040
then click create load balancer.

4
00:00:11,040 --> 00:00:15,190
First we need to select the load balancer type application load

5
00:00:15,190 --> 00:00:20,440
balancers are for web applications that use http and https.

6
00:00:20,440 --> 00:00:23,140
Just like our Pizza lovers application,

7
00:00:23,140 --> 00:00:26,300
there's also network load balancers which focus on lower

8
00:00:26,300 --> 00:00:29,980
level web protocols like TCP and UDP.

9
00:00:29,980 --> 00:00:33,850
And then there's the classic load balancers which are an older

10
00:00:33,850 --> 00:00:38,100
type of load balancer that aWS used to support but that aren't

11
00:00:38,100 --> 00:00:40,840
particularly relevant anymore.

12
00:00:40,840 --> 00:00:44,110
Click the create button in the application load balancer

13
00:00:44,110 --> 00:00:47,950
section Now we need to get the load balancer a name which

14
00:00:47,950 --> 00:00:53,860
will of course be Pizza loader, this will be an internet facing load balancer.

15
00:00:53,860 --> 00:01:02,440
So leave that radio button selected And we'll use IPV4 for our IP address types.

16
00:01:02,440 --> 00:01:06,100
The listener configuration section is basically saying which

17
00:01:06,100 --> 00:01:08,840
ports you want the load balance are listening on.

18
00:01:08,840 --> 00:01:10,880
Usually you'll have two entries,

19
00:01:10,880 --> 00:01:17,440
one for http on port 80 and one for https on port 443.

20
00:01:17,440 --> 00:01:22,630
We don't have an ssl certificate for HTTPS So we'll just go with

21
00:01:22,630 --> 00:01:29,150
regular http on port 80 for our app Next select our Pizza VPc from

22
00:01:29,150 --> 00:01:33,230
the drop-down indicating we want to create the load balancer

23
00:01:33,230 --> 00:01:36,630
inside of our Pizza VPc here.

24
00:01:36,630 --> 00:01:41,300
We need to select two availability zones to enable our load balance are in,

25
00:01:41,300 --> 00:01:45,190
you should have two availability zones to check which are available

26
00:01:45,190 --> 00:01:49,940
here because we created two sub nets and our VPc,

27
00:01:49,940 --> 00:01:53,730
select both of them Now, click next this warning,

28
00:01:53,730 --> 00:01:57,060
lets you know that you aren't using a secure listener like

29
00:01:57,060 --> 00:02:03,790
HTTPS that's fine for us for this demo, go ahead and hit next in the next screen.

30
00:02:03,790 --> 00:02:07,430
We want to make a new security group for our load balancer.

31
00:02:07,430 --> 00:02:11,790
So select that radio button name the security group.

32
00:02:11,790 --> 00:02:15,440
Pizza L B S G.

33
00:02:15,440 --> 00:02:20,390
There is an existing rule accepting connections on Port 80 from anywhere,

34
00:02:20,390 --> 00:02:22,380
which is exactly what we want.

35
00:02:22,380 --> 00:02:27,570
So go ahead and click the next button in this screen will configure how the

36
00:02:27,570 --> 00:02:31,840
load balancer will send requests to our application instances.

37
00:02:31,840 --> 00:02:36,810
It does this by defining a target group and rounding to any instances in

38
00:02:36,810 --> 00:02:40,480
that target group will start by naming the target group.

39
00:02:40,480 --> 00:02:42,740
Pizza T G.

40
00:02:42,740 --> 00:02:44,670
The target type is an ec.

41
00:02:44,670 --> 00:02:45,650
two instance.

42
00:02:45,650 --> 00:02:49,140
So leave the instance radio button selected.

43
00:02:49,140 --> 00:02:51,690
Our protocol is http.

44
00:02:51,690 --> 00:02:55,570
So leave that option selected but our application is

45
00:02:55,570 --> 00:02:59,040
listening on port 3000 not poor 80.

46
00:02:59,040 --> 00:03:04,800
So change the port in this field to 3000 load balancers know

47
00:03:04,800 --> 00:03:08,660
which instances to send requests to by checking their status

48
00:03:08,660 --> 00:03:10,870
with a health check these fields.

49
00:03:10,870 --> 00:03:15,740
Let you configure what protocol to use and the path to hit.

50
00:03:15,740 --> 00:03:19,990
Sometimes applications will have a dedicated health check path but

51
00:03:19,990 --> 00:03:25,160
for our app we can just use the root index page which will be hit by

52
00:03:25,160 --> 00:03:28,240
leaving this slash in the path field.

53
00:03:28,240 --> 00:03:31,040
Now we can click next.

54
00:03:31,040 --> 00:03:35,040
This page will let us register instances with the target group.

55
00:03:35,040 --> 00:03:37,630
You can see it shows that there are currently no

56
00:03:37,630 --> 00:03:41,270
registered targets and the group, If you scroll down,

57
00:03:41,270 --> 00:03:47,340
you should see a short list of instances including your pizza dash oge instance,

58
00:03:47,340 --> 00:03:52,370
select that and since and then click add to registered now our load

59
00:03:52,370 --> 00:03:56,240
balancer will send requests to our Pizza Hoagie instance,

60
00:03:56,240 --> 00:04:01,140
click next to review and then create.

61
00:04:01,140 --> 00:04:05,780
Now there is one last configuration step we need with the load balancer,

62
00:04:05,780 --> 00:04:10,050
we need to ensure that if a user logs into our app in one

63
00:04:10,050 --> 00:04:13,730
easy to instance that they continue to connect to that same

64
00:04:13,730 --> 00:04:16,440
instance with subsequent requests.

65
00:04:16,440 --> 00:04:17,770
If we didn't do this,

66
00:04:17,770 --> 00:04:21,020
there's a possibility that they would hit an instance where they don't

67
00:04:21,020 --> 00:04:24,830
have a session to avoid this situation entirely.

68
00:04:24,830 --> 00:04:28,240
Let's enable stickiness on the load balancer.

69
00:04:28,240 --> 00:04:31,630
The load balancer will use a cookie to keep track of which

70
00:04:31,630 --> 00:04:36,270
users should be sent to which instances click close and will

71
00:04:36,270 --> 00:04:38,180
be taken back to the load balancer.

72
00:04:38,180 --> 00:04:42,900
List sessions, stickiness is configured in the target group,

73
00:04:42,900 --> 00:04:46,740
so click on the target groups, menu option on the left,

74
00:04:46,740 --> 00:04:51,820
select the Pizza T G target group you created and in the group

75
00:04:51,820 --> 00:04:56,340
details at the bottom there is an attribute section,

76
00:04:56,340 --> 00:05:01,640
click edit and then select the checkbox next to stickiness.

77
00:05:01,640 --> 00:05:03,240
The duration for instance,

78
00:05:03,240 --> 00:05:08,370
stickiness is set at one day by default which is the same as our app,

79
00:05:08,370 --> 00:05:18,000
so leave it as is now click save changes and session stickiness is set up on our load balancer

