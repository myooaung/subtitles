WEBVTT
1
00:00:00.940 --> 00:00:03.800
[Autogenerated] as I explained to the module covering RDS and

2
00:00:03.800 --> 00:00:08.890
dynamodb databases are extremely important to web applications but

3
00:00:08.890 --> 00:00:11.640
databases don't work for all use cases.

4
00:00:11.640 --> 00:00:15.340
There are times when applications need the kind of big data storage of

5
00:00:15.340 --> 00:00:19.860
databases but need much faster retrieval for this purpose.

6
00:00:19.860 --> 00:00:22.740
In memory cache data stores were created.

7
00:00:22.740 --> 00:00:25.410
These are used widely throughout the industry with the most

8
00:00:25.410 --> 00:00:28.530
popular solutions being readiness and meme cache D,

9
00:00:28.530 --> 00:00:32.690
both of which are offered by elastic cache extremely

10
00:00:32.690 --> 00:00:35.180
similar to RDS and instrumentation.

11
00:00:35.180 --> 00:00:39.840
Alaska cache provides managed in memory cache services to use with

12
00:00:39.840 --> 00:00:43.740
your applications in AWS the maintenance upgrades,

13
00:00:43.740 --> 00:00:48.410
backups and read replicas are taken care of by the Alaska cache service.

14
00:00:48.410 --> 00:00:52.670
In addition the scaling up and down of a cache cluster by adding nodes is

15
00:00:52.670 --> 00:00:57.250
made simple by Alaska cache All of the benefits of RDS are found with

16
00:00:57.250 --> 00:01:02.030
elastic cache just with a different product that is being provided the main

17
00:01:02.030 --> 00:01:06.360
structure in Alaska caches the cluster a cluster is a collection of nodes

18
00:01:06.360 --> 00:01:08.940
running a single cache instance.

19
00:01:08.940 --> 00:01:11.920
Both caching engines operate slightly different in

20
00:01:11.920 --> 00:01:14.610
regards to their scaling organization.

21
00:01:14.610 --> 00:01:18.520
Mm cache D clusters comprise of 1 to 20 nodes,

22
00:01:18.520 --> 00:01:23.270
nodes are basically individual ec two instances running the caching

23
00:01:23.270 --> 00:01:28.980
software with Red is a cluster comprises of one single node and there are

24
00:01:28.980 --> 00:01:33.940
up to six read replicas that can also be added to create a replica group

25
00:01:33.940 --> 00:01:36.860
when choosing between red disarm em cache D.

26
00:01:36.860 --> 00:01:39.510
There's honestly not much of a decision to make,

27
00:01:39.510 --> 00:01:42.060
you should almost always choose readiness.

28
00:01:42.060 --> 00:01:46.380
While meme cache he does have better memory management with small datasets

29
00:01:46.380 --> 00:01:50.040
Reddit's provides more features and works better at scale.

30
00:01:50.040 --> 00:01:53.160
The industry has almost unanimously adopted Read US at

31
00:01:53.160 --> 00:01:58.440
this point as the caching solution, and it works with nearly all use cases.

32
00:01:58.440 --> 00:02:05.000
In this module, we're going to use a Reddish cache cluster to store our user session data.

