1
00:00:00,940 --> 00:00:06,940
In this clip, we are going to configure JUnit 5 in a Gradle project.

2
00:00:06,940 --> 00:00:10,940
I have imported a Gradle project in IntelliJ IDEA.

3
00:00:10,940 --> 00:00:14,700
It only has a HelloWorldTest class,

4
00:00:14,700 --> 00:00:18,060
which is not compiling because I haven't added the

5
00:00:18,060 --> 00:00:22,440
JUnit dependency to the project, so let's do it.

6
00:00:22,440 --> 00:00:29,440
Starting with version 4.6, Gradle provides native support for JUnit 5.

7
00:00:29,440 --> 00:00:37,340
We just need to enable it in the test closure by using useJUnitPlatform.

8
00:00:37,340 --> 00:00:40,140
Now to add the JUnit dependencies,

9
00:00:40,140 --> 00:00:44,160
we can start by adding the JUnit Bill of Materials,

10
00:00:44,160 --> 00:00:44,950
BOM.

11
00:00:44,950 --> 00:00:50,980
This will take care of managing the versions of the JUnit JAR files that I'll

12
00:00:50,980 --> 00:00:55,840
add that are compatible with the version I'm using here.

13
00:00:55,840 --> 00:01:00,680
In other words, we still need to declare all the dependencies that we'll need,

14
00:01:00,680 --> 00:01:03,680
but without specifying a version.

15
00:01:03,680 --> 00:01:05,010
For this,

16
00:01:05,010 --> 00:01:09,970
we can individually add each one of these dependencies, for example

17
00:01:09,970 --> 00:01:16,420
the Jupiter API, the Jupiter Engine, and so on. Or we can add, as a

18
00:01:16,420 --> 00:01:21,290
dependency, the artifact junit‑jupiter, which aggregates all

19
00:01:21,290 --> 00:01:26,260
dependencies that are required to use JUnit 5 along with some

20
00:01:26,260 --> 00:01:28,440
optional dependencies.

21
00:01:28,440 --> 00:01:34,810
Let me apply these changes. And in the External Libraries section, you can

22
00:01:34,810 --> 00:01:39,340
see the dependencies that have been added to the project.

23
00:01:39,340 --> 00:01:42,810
One dependency that probably is not always needed is

24
00:01:42,810 --> 00:01:49,140
junit‑jupiter‑params, which is required to use parameterized tests.

25
00:01:49,140 --> 00:01:53,150
We'll talk about this later in the course, but you can exclude

26
00:01:53,150 --> 00:01:57,450
dependencies like this one if you choose to use the JUnit Jupiter

27
00:01:57,450 --> 00:02:03,560
dependency or include exactly what you need. In any case, our test

28
00:02:03,560 --> 00:02:07,040
class now compiles correctly.

29
00:02:07,040 --> 00:02:12,140
If you run this class inside the IDE, you'll see it runs as

30
00:02:12,140 --> 00:02:17,180
suspected. But you can also run it from the command line with

31
00:02:17,180 --> 00:02:25,740
gradlew test. And in the directory build, reports,

32
00:02:25,740 --> 00:02:36,000
tests, tests, you can find a report in HTML format with the results from the test task.

