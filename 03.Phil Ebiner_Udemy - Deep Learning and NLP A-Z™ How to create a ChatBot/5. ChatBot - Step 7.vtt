WEBVTT
1
00:00:00.490 --> 00:00:06.160
Highs and welcome to this new tutorial and this one after creating a dictionary that maps each of the

2
00:00:06.160 --> 00:00:10.340
line with their ideas we're going to create a list of all the conversations.

3
00:00:10.570 --> 00:00:13.560
So first we must wonder why do we need to do that.

4
00:00:13.750 --> 00:00:20.170
Well we already have a list of the conversations but we have a lot of meta data and we want to only

5
00:00:20.170 --> 00:00:26.230
keep what's interesting for us what we will use for the training and what will only use for the training.

6
00:00:26.230 --> 00:00:33.550
Actually this part on the right that is the list of the conversations containing the lines IDs and therefore

7
00:00:33.550 --> 00:00:40.720
what we're simply going to get in Statoil is saying a huge list containing all the conversations but

8
00:00:40.780 --> 00:00:42.090
only keeping this part.

9
00:00:42.100 --> 00:00:47.620
So we're going to get a list of all these lists here containing the lines IDs.

10
00:00:47.920 --> 00:00:49.420
All right let's do this.

11
00:00:49.420 --> 00:00:55.800
It's going to be quite the same as what we did before we first need to introduce a new list that we're

12
00:00:55.810 --> 00:01:04.290
going to call conversations and to specify that we want to keep the IDs.

13
00:01:04.340 --> 00:01:08.090
We're going to add here IDs so this will be our list.

14
00:01:08.120 --> 00:01:16.220
And since this is a list we don't introduce it as brackets but as square brackets and then starts to

15
00:01:16.220 --> 00:01:17.060
fold.

16
00:01:17.450 --> 00:01:25.400
So for here then the Lavoy will and since we're going to iterate through the conversations of the conversations

17
00:01:25.410 --> 00:01:36.060
dataset well let's call the loop variable conversation perfect in conver sessions.

18
00:01:36.570 --> 00:01:38.550
But then just a little trick here.

19
00:01:38.550 --> 00:01:45.930
The last row of the conversations data set is an empty row so we won't include it and therefore we'll

20
00:01:45.960 --> 00:01:50.070
take the whole conversations dataset except the last one.

21
00:01:50.070 --> 00:01:57.900
And to do this the trick is to do call in minus 1 because minus one is actually the last row of conversations

22
00:01:58.410 --> 00:02:03.940
and by taking the calling here we take the range from the beginning to this last row.

23
00:02:04.110 --> 00:02:10.370
But since the upper bound of a range and by end is excluded this will exclude the last row that is empty

24
00:02:10.370 --> 00:02:10.760
row.

25
00:02:11.010 --> 00:02:11.850
That's perfect.

26
00:02:11.940 --> 00:02:15.030
And now we're ready to start the follow up.

27
00:02:15.030 --> 00:02:20.030
All right so basically we just want to simplify the conversation in the conversations dataset.

28
00:02:20.040 --> 00:02:27.420
So what we'll do first is as before introduce a temporary variable that will call underscore conversation

29
00:02:27.540 --> 00:02:31.190
the underscores specifies that it is a temporary variable.

30
00:02:31.390 --> 00:02:31.790
OK.

31
00:02:31.800 --> 00:02:37.650
So this will be equal to the result of cleaning the conversation.

32
00:02:37.650 --> 00:02:40.120
That is we only want to keep the last part.

33
00:02:40.290 --> 00:02:46.890
And besides since we will want this last part to be a list and a huge list of lists each list being

34
00:02:46.970 --> 00:02:54.000
a conversation giving the lines ideas well we will need to remove all the square brackets and all the

35
00:02:54.000 --> 00:02:57.460
quotes and all the spaces and you will understand why.

36
00:02:57.690 --> 00:03:00.190
OK so first let's get the last point.

37
00:03:00.210 --> 00:03:06.820
So just to make sure we understand we first need to get this part here.

38
00:03:06.920 --> 00:03:08.230
So how are we going to do that.

39
00:03:08.360 --> 00:03:14.490
Well very simply what we need to do first is a split to split all the elements here.

40
00:03:14.540 --> 00:03:20.870
Then once we make the split we will play with the index to get the last element after the split which

41
00:03:20.870 --> 00:03:22.850
is this guy.

42
00:03:22.850 --> 00:03:28.700
And then once we get this last Delmon that's where we will remove the square brackets by playing with

43
00:03:28.700 --> 00:03:29.700
the indexes.

44
00:03:29.810 --> 00:03:33.920
And then again we will remove all the quotes and all the spaces I guess.

45
00:03:33.930 --> 00:03:36.340
Let's do this conversation.

46
00:03:36.380 --> 00:03:36.910
Equals.

47
00:03:36.950 --> 00:03:44.150
So as before we take our conversation which is our new Barbul but representing each of the different

48
00:03:44.150 --> 00:03:47.540
conversations then we add to split.

49
00:03:47.660 --> 00:03:50.270
And again we're going to split that by

50
00:03:53.680 --> 00:03:58.150
space plus plus plus dollar plus plus plus space.

51
00:03:58.150 --> 00:04:05.890
All right so with this we make the split but then we need to get the last element after the split which

52
00:04:05.890 --> 00:04:06.850
is this one.

53
00:04:07.000 --> 00:04:08.430
And so how are we going to get it.

54
00:04:08.590 --> 00:04:16.240
Well we're simply going to take the last index of this list resulting after the split and the last index

55
00:04:16.240 --> 00:04:18.730
we can get it with the trick minus 1.

56
00:04:18.730 --> 00:04:20.830
So that's exactly what we're going to do now.

57
00:04:20.910 --> 00:04:27.350
We're going to add here in square brackets minus 1 and that takes the last element.

58
00:04:27.370 --> 00:04:34.630
So if I go back to it that takes exactly this including the square brackets.

59
00:04:34.790 --> 00:04:40.090
But then remember we want to remove the square brackets because if we keep the square brackets well

60
00:04:40.090 --> 00:04:48.580
in the end when we append this element to our huge conversations IDs list which will be in the end the

61
00:04:48.580 --> 00:04:51.960
huge list of all the conversations given by the lines IDs.

62
00:04:52.180 --> 00:04:57.190
Well you'll get a nasty result with many square brackets and many quotes.

63
00:04:57.220 --> 00:04:58.330
So we want to remove this.

64
00:04:58.330 --> 00:05:04.120
We need actually to only keep the line ID's without the quote and without the square brackets.

65
00:05:04.120 --> 00:05:07.360
So first what we have to do is remove the square brackets and to do this.

66
00:05:07.540 --> 00:05:08.410
Well that's very simple.

67
00:05:08.410 --> 00:05:15.310
We need to take the range of all the characters here but without the first index because the first index

68
00:05:15.310 --> 00:05:20.380
corresponds to this first square bracket and with the last index because the last index corresponds

69
00:05:20.380 --> 00:05:23.000
to this last square bracket.

70
00:05:23.050 --> 00:05:24.840
So let's do this.

71
00:05:24.960 --> 00:05:32.340
I'm adding here this range that I just mentioned which will not include the first index there is the

72
00:05:32.340 --> 00:05:39.840
index zeros who will start from index 1 and which will not include either the last index which is index

73
00:05:40.200 --> 00:05:44.210
minus 1 and that's perfect because the upper bound in Python is excluded.

74
00:05:44.400 --> 00:05:49.380
That doesn't take the first index zero and that doesn't take the left index minus one.

75
00:05:49.440 --> 00:05:50.270
Great.

76
00:05:50.280 --> 00:05:58.610
So by doing this we just removed the square brackets and now we have to remove the quote and then we

77
00:05:58.610 --> 00:06:01.150
will remove eventually the spaces.

78
00:06:01.460 --> 00:06:03.540
So let's first remove the quotes.

79
00:06:03.560 --> 00:06:09.560
The trick to do that is to use the replace function and actually to replace the quote by nothing that

80
00:06:09.560 --> 00:06:10.850
will just remove them.

81
00:06:10.850 --> 00:06:17.690
So let's do it let's use the replace function which takes two argument the first argument is what we

82
00:06:17.690 --> 00:06:18.350
want to play.

83
00:06:18.350 --> 00:06:25.640
So we want to replace the quote the single quote but that we have to put in double quotes and the second

84
00:06:25.790 --> 00:06:29.320
argument is what we want to replace this first argument by.

85
00:06:29.510 --> 00:06:34.580
And that is nothing but we need to put the nothing in double quotes like that.

86
00:06:34.640 --> 00:06:37.490
So we're replacing the single quote by nothing.

87
00:06:37.490 --> 00:06:38.670
So we're removing it.

88
00:06:38.780 --> 00:06:39.630
Perfect.

89
00:06:39.770 --> 00:06:45.020
That removes the single quote but then remember we also want to remove the spaces and so we're going

90
00:06:45.020 --> 00:06:46.190
to use the same trick.

91
00:06:46.280 --> 00:06:55.320
Another replays and we're going to replace this time to space by again nothing.

92
00:06:55.700 --> 00:06:57.850
And this will simplify everything.

93
00:06:58.010 --> 00:06:59.490
We will get in the end.

94
00:07:00.290 --> 00:07:10.190
Only the L 194 up to L 197 without any quotes and without any spaces and without any square brackets

95
00:07:10.550 --> 00:07:16.670
just with the comma and we need to keep the comma because then we going to make another split to get

96
00:07:16.940 --> 00:07:18.260
these elements.

97
00:07:18.270 --> 00:07:19.240
L 194.

98
00:07:19.250 --> 00:07:20.780
Up to L1 97.

99
00:07:21.110 --> 00:07:22.790
And why do we want to get these ailments.

100
00:07:22.790 --> 00:07:29.010
Because that's what we want to put in each of the final list of the huge list of the conversations.

101
00:07:29.010 --> 00:07:36.820
All right you can the best way to be convinced about what we're doing is to try to do this without this.

102
00:07:36.890 --> 00:07:38.760
This part actually no.

103
00:07:38.810 --> 00:07:45.320
Without all these parts that is as what we did here try to execute that for loop when we finish it at

104
00:07:45.320 --> 00:07:46.370
the end of this.

105
00:07:46.550 --> 00:07:51.350
Without this part and you'll see that you'll get a nasty list with too many square brackets and too

106
00:07:51.350 --> 00:07:53.210
many quotes and this will be out.

107
00:07:53.330 --> 00:07:57.680
Not only this will be a but also this will be syntactically incorrect.

108
00:07:58.070 --> 00:08:00.780
So that's why we are doing this right now.

109
00:08:00.980 --> 00:08:08.630
And now the last thing that we need to do is just to append this cleaned temporary conversation to the

110
00:08:08.630 --> 00:08:11.790
whole list the huge list of all the conversations.

111
00:08:11.830 --> 00:08:19.450
So that's why right now I'm taking this huge list conversations underscore core ideas then that and

112
00:08:19.450 --> 00:08:26.830
then I use the append function to append this clean conversation and therefore the append function I

113
00:08:26.830 --> 00:08:37.220
just need to input underscore conversation and then as I just said we use the split to get what we're

114
00:08:37.230 --> 00:08:45.120
interested in that is the lines IDs and to get them we just need to split this last element here.

115
00:08:45.120 --> 00:08:50.750
That was clean without the square brackets and without the quotes and without the spaces by the commas.

116
00:08:50.820 --> 00:08:55.080
So we'll only get this guy this guy this guy and this guy.

117
00:08:55.470 --> 00:09:00.760
All right so let's split that by the comma.

118
00:09:00.840 --> 00:09:04.730
All right so now let's look at the result of what we just did.

119
00:09:04.860 --> 00:09:13.440
So I'm going to select these four lines of code here and execute perfect executed properly.

120
00:09:13.440 --> 00:09:20.530
Now let's have a look at our conversations IDs list and this is exactly what we wanted.

121
00:09:20.580 --> 00:09:27.280
We wanted a huge list of all the conversations given by only the lines IDs.

122
00:09:27.480 --> 00:09:35.370
And so what I was telling you is try to get that huge list of conversations without what we did here

123
00:09:35.370 --> 00:09:38.790
without taking the Rangers year and without the replace.

124
00:09:39.030 --> 00:09:45.030
Well you will get a nasty and ugly huge list of conversations with many square brackets and too many

125
00:09:45.030 --> 00:09:48.060
quotes and that will be ugly and not correct.

126
00:09:48.060 --> 00:09:56.220
This is not what we want we want a simple huge list of lists each list containing the lines is perfect.

127
00:09:56.220 --> 00:10:01.190
Now we're ready to move on to the next step and the next step will be very interesting because we're

128
00:10:01.200 --> 00:10:08.010
going to get a lot closer to the final structure because that's where we'll start to sort the lines

129
00:10:08.130 --> 00:10:15.420
into some questions which will be the input of the new network and the answers which will be the targets

130
00:10:15.570 --> 00:10:16.860
of the new network.

131
00:10:16.860 --> 00:10:19.770
So we're getting closer and closer to the new network.

132
00:10:19.770 --> 00:10:25.290
But keep in mind that we are unfortunately still in the data processing phase.

133
00:10:25.290 --> 00:10:26.850
So let's do that in the next tutorial.

134
00:10:26.880 --> 00:10:28.600
And until then and and Penelope.
