1
00:00:00,540 --> 00:00:04,020
Hello and welcome to part two building the sector.

2
00:00:04,060 --> 00:00:10,070
Merrill eventually we're getting there and that is in this part that we're going to start using tensor

3
00:00:10,120 --> 00:00:12,780
flow to build the architecture of the.

4
00:00:12,800 --> 00:00:18,620
But it is the architecture of the sectors like Meral which is at the heart at the core of the chapbooks.

5
00:00:18,930 --> 00:00:22,640
So in the previous part we made a lot of for loops.

6
00:00:22,650 --> 00:00:27,900
Now I guess you are an expert in four loops and now in this part you're going to become an expert in

7
00:00:28,020 --> 00:00:35,190
another python technique which is functions we're going to make a lot of functions in this part because

8
00:00:35,190 --> 00:00:40,520
these are going to be the functions that will define the architecture of the sector PSEC model.

9
00:00:40,530 --> 00:00:45,870
So actually we're going to make one function purgatorial and the function we're going to start with

10
00:00:45,870 --> 00:00:52,660
right now is going to be a function that will create placeholders for the inputs and the target.

11
00:00:52,860 --> 00:00:55,860
So what is a placeholder and why do we need to create it.

12
00:00:55,890 --> 00:00:59,250
That's the first question we will answer right now.

13
00:00:59,250 --> 00:01:03,830
So intense a flow all variables are used in tensors.

14
00:01:03,960 --> 00:01:10,020
Tensors are like an advanced array more advanced than an empire array which is of a single type and

15
00:01:10,020 --> 00:01:13,550
that allows fastest computations in the deep neural networks.

16
00:01:13,740 --> 00:01:19,000
So we need to go from the number of arrays the class Signum by race to tensors.

17
00:01:19,110 --> 00:01:26,010
But that's not all because then in terms of flow all the variables used in tensors must be defined as

18
00:01:26,100 --> 00:01:29,330
what we call tensor flow placeholders.

19
00:01:29,370 --> 00:01:36,380
So basically that's an even more advanced data structure that can contain tensors and also other features.

20
00:01:36,540 --> 00:01:41,800
So that's always the first thing we must do when starting to build a deep neural network with tons of

21
00:01:41,800 --> 00:01:46,480
flow we need to create some placeholders for the inputs and the toilet.

22
00:01:46,590 --> 00:01:50,700
And that's exactly what we're going to do right now but we're going to do it through a function that

23
00:01:50,700 --> 00:01:52,550
we'll call model inputs.

24
00:01:52,680 --> 00:01:58,680
And so inside this function we will create a placeholder for the inputs a placeholder for the targets

25
00:01:59,010 --> 00:02:03,510
and then we will add a learning rate and even more hybrid parameters.

26
00:02:03,510 --> 00:02:09,470
So in short we are creating this placeholders to be able to use these variables in the future training.

27
00:02:09,750 --> 00:02:14,300
All right so let's define this function to define a function in Python.

28
00:02:14,370 --> 00:02:15,720
We need to start with them.

29
00:02:15,990 --> 00:02:22,720
Then we need to give a name to that function and we're going to call it model underscore inputs and

30
00:02:23,050 --> 00:02:29,220
this function is not going to take any arguments because it will just directly take the input and output.

31
00:02:29,340 --> 00:02:36,190
And for each of them convert them into placeholders into tensor flow placeholders so that's all good.

32
00:02:37,000 --> 00:02:39,280
And let's go inside the function.

33
00:02:39,280 --> 00:02:45,280
All right so we're going to start by creating some new variable that we're going to call inputs and

34
00:02:45,280 --> 00:02:50,950
that will be this tensor flow placeholder containing the inputs.

35
00:02:50,950 --> 00:02:57,130
And so to create a sense of placeholder Well first we need to call our sense of library which we can

36
00:02:57,130 --> 00:03:00,920
get things to the shortcut we made which is T.F..

37
00:03:01,120 --> 00:03:09,730
So we called sense of flow and from sense of flow we're going to get the place holder function that

38
00:03:09,730 --> 00:03:14,050
is a function that can create placeholders for the input.

39
00:03:14,050 --> 00:03:19,570
All right so now in this placeholder function we need to enter three parameters.

40
00:03:19,570 --> 00:03:26,890
The first one is going to be the type of the data there are the inputs and remember that we converted

41
00:03:26,980 --> 00:03:32,070
our input into unique integers and part 1 data preprocessing.

42
00:03:32,140 --> 00:03:40,090
So the type that will choose here is going to be T.F. we need to call it from tensor of flow that int

43
00:03:40,480 --> 00:03:41,860
32.

44
00:03:41,860 --> 00:03:47,770
All right then next argument is going to be the dimensions of the matrix of the input data.

45
00:03:47,860 --> 00:03:54,940
And since the inputs are the lists of the questions encoded into unique integers we can have a look

46
00:03:54,940 --> 00:03:59,890
at it again sorting questions which you must understand are the inputs.

47
00:04:00,010 --> 00:04:06,400
You can see that these inputs are lists of integers and therefore with the pairing we will get a two

48
00:04:06,580 --> 00:04:08,310
dimensional matrix.

49
00:04:08,470 --> 00:04:13,460
And that's why right now we need to specify this that it's a two dimensional matrix.

50
00:04:13,630 --> 00:04:21,150
And to do this we're going to add here in brackets square brackets none and none.

51
00:04:21,220 --> 00:04:26,460
That's a way to specify that our inputs are two dimensional matrix.

52
00:04:26,500 --> 00:04:26,790
All right.

53
00:04:26,800 --> 00:04:33,280
And then the last argument is just a name that we have to give to the input and we specify this with

54
00:04:33,280 --> 00:04:40,550
the argument name equals and we can put in quotes and put I perfect.

55
00:04:40,600 --> 00:04:45,700
So that creates the placeholder for our inputs.

56
00:04:46,480 --> 00:04:46,890
All right.

57
00:04:46,900 --> 00:04:50,100
And now we are going to do the same for the targets.

58
00:04:50,230 --> 00:04:53,360
So I'm copying this because it's going to be almost the same.

59
00:04:53,470 --> 00:05:02,310
I'm pasting now here I am replacing here inputs by targets and same we have to create a sense of flow

60
00:05:02,330 --> 00:05:06,060
placeholder that will contain these targets data.

61
00:05:06,160 --> 00:05:13,090
Then of course the target data is composed of integers because they correspond to the encoded integers

62
00:05:13,330 --> 00:05:16,400
that encode the words or the answers.

63
00:05:16,420 --> 00:05:19,440
Remember that answers are the targets.

64
00:05:19,480 --> 00:05:24,250
And then we are going to compare the chat but answers to the real answers.

65
00:05:24,380 --> 00:05:31,060
And that's how it will train itself to speak like a human and then Same same dimension for the matrix

66
00:05:31,060 --> 00:05:32,020
of the toilet.

67
00:05:32,020 --> 00:05:35,130
None none to say it's a two dimensional matrix.

68
00:05:35,200 --> 00:05:40,180
And then of course we need to change the name of the input here by Target.

69
00:05:40,180 --> 00:05:41,950
All right so perfect.

70
00:05:41,980 --> 00:05:48,580
We have created placeholders for the inputs in the toilet and now we're going to create two more intensively

71
00:05:48,640 --> 00:05:54,250
placeholders which are going to be simple ones one that will hold the learning rate which is a hyper

72
00:05:54,250 --> 00:05:59,440
parameter and one that will hold the popular keep frob hyper parameter.

73
00:05:59,440 --> 00:06:00,930
That's the way we call it.

74
00:06:01,090 --> 00:06:05,600
And that is just a parameter used to control the dropout rate.

75
00:06:05,680 --> 00:06:08,690
You know the dropout is the rate of the neurons.

76
00:06:08,740 --> 00:06:11,950
You choose to override during one iteration in the training.

77
00:06:11,950 --> 00:06:18,640
Usually the dropout rate is 20 percent so that you activate 20 percent of the neurons during the different

78
00:06:18,640 --> 00:06:20,040
iterations of the training.

79
00:06:20,230 --> 00:06:26,110
And so this key prob parameter for which we're going to create a placeholder will be used to control

80
00:06:26,200 --> 00:06:29,240
this dropout rate because sometimes the drop out is too high.

81
00:06:29,350 --> 00:06:33,570
So we will need to reduce it and sometimes it is too low so we will need to increase that.

82
00:06:33,670 --> 00:06:36,700
And this will be done by the keeper of parameter.

83
00:06:36,700 --> 00:06:42,240
All right so let's create these last two placeholders for the learning rate and keep prob..

84
00:06:42,400 --> 00:06:45,340
So let's do this learning right first.

85
00:06:45,520 --> 00:06:48,480
I'm going to place actually what we copied before.

86
00:06:48,580 --> 00:06:57,050
Replace inputs here by L R then the learning rate is not an integer anymore but a float.

87
00:06:57,160 --> 00:07:04,470
So float 32 then there is no matrix for such a hyper parameter because it's a simple value.

88
00:07:04,510 --> 00:07:06,490
Therefore I'm going to remove this.

89
00:07:06,820 --> 00:07:13,440
And we just need to specify a name for that which is going to be learning rate.

90
00:07:13,630 --> 00:07:18,310
Let's do this learning rate and perfect.

91
00:07:18,310 --> 00:07:25,400
All right then the final one the placeholder I'm going to copy this because this is going to be a float

92
00:07:25,460 --> 00:07:33,530
as well but it's not going to be the learning rate it's going to be that keep prob parameters so you

93
00:07:33,530 --> 00:07:39,230
will see this keep the parameter name everywhere on line you can find it on stack overflow.

94
00:07:39,230 --> 00:07:45,080
There are some nice explanations you can find on the tense of the web site I think in a lot of good

95
00:07:45,230 --> 00:07:46,040
pages.

96
00:07:46,120 --> 00:07:51,350
Keep the parameter is the parameter that controls the drop out rate.

97
00:07:51,620 --> 00:07:55,040
So placeholder flow 32 perfect.

98
00:07:55,070 --> 00:07:58,890
And the name is not learning right but we can call it.

99
00:07:59,060 --> 00:08:03,240
Well let's just call it keep PRUD keep this core problem.

100
00:08:03,470 --> 00:08:04,010
All right.

101
00:08:04,010 --> 00:08:05,270
And that's it.

102
00:08:05,270 --> 00:08:12,170
Now we just need to return what this function is supposed return which is of course all these placeholders

103
00:08:12,560 --> 00:08:14,490
and therefore I'm going to add here.

104
00:08:14,510 --> 00:08:25,520
Return then inputs the placeholders for inputs then targets the placeholder for our target then are

105
00:08:25,700 --> 00:08:32,660
the learning rate and keep prob the parameter that controls the dropout rates.

106
00:08:32,660 --> 00:08:33,950
All right so perfect.

107
00:08:33,950 --> 00:08:38,130
Congratulations you made your first functional use in terms of flow.

108
00:08:38,300 --> 00:08:46,340
That's very important to do this and therefore now we're going to select this and execute our right

109
00:08:46,580 --> 00:08:47,770
function created.

110
00:08:47,870 --> 00:08:50,280
And now we'll move onto the next step until then.

111
00:08:50,340 --> 00:08:51,260
And Jaideep an p.
