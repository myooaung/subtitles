1
00:00:00,390 --> 00:00:05,430
Hello and welcome to this new tutorial this one is very special and very important because we're going

2
00:00:05,430 --> 00:00:13,360
to do two essential tasks of an LP which are tokenization and filtering the non frequent words.

3
00:00:13,450 --> 00:00:17,490
We're going to do that at the same time by creating two dictionaries.

4
00:00:17,490 --> 00:00:24,660
One that is going to map each word of all the questions to a unique integer and one other dictionary

5
00:00:24,660 --> 00:00:31,590
that is going to map all the words of all the answers to a unique integer and while creating this dictionary

6
00:00:31,810 --> 00:00:37,820
we will add an if condition that will check if the number of arguments is of the word.

7
00:00:37,860 --> 00:00:42,780
We'll be dealing with in the loop will be higher than a certain threshold that we will choose in the

8
00:00:42,780 --> 00:00:49,080
same tutorial and if that's the case we will include that word in this dictionary this word will be

9
00:00:49,080 --> 00:00:51,290
one of the key under-fire of the dictionary.

10
00:00:51,450 --> 00:00:56,890
And on the other hand if the number of arguments is of the word is below the threshold.

11
00:00:57,060 --> 00:01:03,180
Well we will not include this word in the dictionary so that at the same time we proceed to the process

12
00:01:03,180 --> 00:01:09,300
of tokenization by getting separately all the different words of all the questions and all the answers

13
00:01:09,540 --> 00:01:16,740
and attributing a unique integer to each of this word and at the same time we filter out the words that

14
00:01:16,740 --> 00:01:22,050
don't appear frequently in the dictionary that is there or below the threshold that we're going to choose.

15
00:01:22,050 --> 00:01:27,990
And speaking of the threshold this is the first thing we will do in the tutorial we will choose a number

16
00:01:28,260 --> 00:01:34,470
for that threshold and for the words having a number of occurrences below the threshold we will exclude

17
00:01:34,470 --> 00:01:34,970
them.

18
00:01:35,150 --> 00:01:35,960
So let's do it.

19
00:01:36,030 --> 00:01:38,700
Let's start by choosing this threshold.

20
00:01:38,790 --> 00:01:47,400
So we're going to call it naturally Trece hold and in general when doing this kind of task in LP I recommend

21
00:01:47,400 --> 00:01:54,060
to filter out the 5 percent that appear the least in the whole corpus of words and considering the total

22
00:01:54,060 --> 00:01:56,800
number of words in our corpus of words.

23
00:01:56,940 --> 00:02:02,090
Well a good threshold for our situation would be between 10 and 20.

24
00:02:02,160 --> 00:02:08,400
Remember you can experiment with different hybrid parameters different values for the hyper parameters.

25
00:02:08,490 --> 00:02:09,990
The threshold is one of them.

26
00:02:10,080 --> 00:02:16,720
So I'm going to choose 20 here that will give us a removal of 5 percent of the least appearing words.

27
00:02:16,770 --> 00:02:22,800
But feel free to either increase it increase the threshold that will reduce the training time.

28
00:02:22,890 --> 00:02:28,380
Or if you have a powerful computer you can also try with a lower Tressell but not too low because then

29
00:02:28,380 --> 00:02:31,860
it will be too overwhelming for the model to learn.

30
00:02:31,860 --> 00:02:35,180
So here we're going to choose 20 and there we go.

31
00:02:35,220 --> 00:02:40,530
Let's create now are two dictionaries one dictionary that will map each of the questions words to a

32
00:02:40,530 --> 00:02:46,220
unique integer and one other dictionary that one that each of the answers words to a unique integer.

33
00:02:46,410 --> 00:02:50,270
So let's start with the dictionary for the questions words.

34
00:02:50,430 --> 00:02:58,320
And in the spirit of making all our variable names clear we are going to call that dictionary questions

35
00:02:58,710 --> 00:03:06,950
words to and because we're mapping all the questions words to a unique integer.

36
00:03:07,320 --> 00:03:14,940
So questions words to end and as usual we initialized it with some brackets like that.

37
00:03:14,940 --> 00:03:19,550
All right then we are used to directly getting to a full loop.

38
00:03:19,590 --> 00:03:27,180
But for us we need to initialize a variable to zero which will be the number of arguments as of the

39
00:03:27,180 --> 00:03:33,660
word we will be dealing with in the loop because we are going to loop over the word in the word to count

40
00:03:34,020 --> 00:03:36,520
dictionary that we created before.

41
00:03:36,520 --> 00:03:43,110
You're going to see but we need to introduce a new verbal right now that we're going to call word number

42
00:03:43,710 --> 00:03:48,560
and we will initialize it to zero because basically we're counting from zero.

43
00:03:48,780 --> 00:03:50,450
And now we can start to flip.

44
00:03:50,610 --> 00:03:59,190
So for as we say we loop over the words of our previous dictionaries so loop variable word and also

45
00:03:59,220 --> 00:04:05,340
count because for each of these word we're going to get the number of arguments as of these words which

46
00:04:05,340 --> 00:04:09,020
will get things to our word to count dictionary that we created before.

47
00:04:09,040 --> 00:04:11,270
So a word count in.

48
00:04:11,460 --> 00:04:18,870
Well we can get the words and the count of the words in that same entity the word to count dictionary.

49
00:04:19,020 --> 00:04:27,630
So that in Word to count and to get them we need to adhere to that and items with parenthesis and this

50
00:04:27,630 --> 00:04:29,260
will get us the word.

51
00:04:29,310 --> 00:04:34,940
Which are the key identifiers and the number of your answers which are the values of the cat and the

52
00:04:34,940 --> 00:04:37,130
fires in the word to come dictionary.

53
00:04:37,440 --> 00:04:41,160
So Cullen and then let's start the for loop.

54
00:04:41,190 --> 00:04:48,360
So as I said at the beginning of this tutorial now we have to make an IF condition to make sure we include

55
00:04:48,510 --> 00:04:51,050
only the words that appear.

56
00:04:51,180 --> 00:04:55,370
A number of times higher than the chosen threshold which is equal to 20.

57
00:04:55,620 --> 00:05:04,160
So what I'm going to add here is an IF condition that check if the count which is the value of the dictionary

58
00:05:04,520 --> 00:05:09,440
associated to the key identify word the word we're dealing with right now the loop.

59
00:05:09,440 --> 00:05:16,920
So if count that is the number of arguments as of this word is larger than the Trece hold.

60
00:05:17,150 --> 00:05:22,820
Well what are we going to do we can even include the threshold if we want to keep the words that appear

61
00:05:22,820 --> 00:05:23,720
at least 20.

62
00:05:23,900 --> 00:05:27,820
That's not a big deal that won't change much but we can include it.

63
00:05:27,830 --> 00:05:29,510
And if that's the case what do we do.

64
00:05:29,630 --> 00:05:36,170
Well we will include that word in the dictionary that we're creating right now and that we're calling

65
00:05:36,470 --> 00:05:41,260
questions were to end and therefore Right now I'm taking this dictionary.

66
00:05:41,270 --> 00:05:45,820
I'm copying that and pasting them here.

67
00:05:45,890 --> 00:05:50,380
And so you know the trick I'm going to create the key and the value at the same time.

68
00:05:50,570 --> 00:05:56,390
And the key which appears in the square brackets is the word we're dealing with right now and that we

69
00:05:56,720 --> 00:06:03,290
choose to include in this dictionary because it's number of occupancies is larger than a threshold of

70
00:06:03,290 --> 00:06:04,080
20.

71
00:06:04,100 --> 00:06:11,270
So questions were in that word we just created the key and now we must associate it to it the value

72
00:06:11,570 --> 00:06:15,530
and the value as we said is a unique integer.

73
00:06:15,530 --> 00:06:22,460
Right because our dictionary maps to questions word to a unique integer and that's what this word number

74
00:06:22,460 --> 00:06:24,120
will be useful for us right now.

75
00:06:24,270 --> 00:06:29,860
It's because we're going to simply create these unique integers by starting from zero.

76
00:06:29,900 --> 00:06:36,860
So the first word that we find appearing more than the threshold will be associated to zero then the

77
00:06:36,860 --> 00:06:42,200
next one that we find appearing more than the threshold will be associated to one then the next one

78
00:06:42,200 --> 00:06:43,920
to two then the next one to three.

79
00:06:44,030 --> 00:06:45,460
Well you get the idea.

80
00:06:45,530 --> 00:06:47,910
We will increment the word number.

81
00:06:48,020 --> 00:06:55,340
Each time we find a word appearing more then the threshold and therefore the value associated to this

82
00:06:55,340 --> 00:06:58,090
key identify words in our questions words.

83
00:06:58,190 --> 00:07:03,210
In dictionary is the word number variable.

84
00:07:03,400 --> 00:07:11,480
For the first word zero then we will incremented right now so that the next word we find appearing more

85
00:07:11,480 --> 00:07:16,510
than the threshold will get the incremented value of the word number variable.

86
00:07:16,520 --> 00:07:25,070
So right now what we get to do is increment word number and that's why M and N here plus equals 1.

87
00:07:25,250 --> 00:07:29,830
Which is exactly the same as word number equals number plus 1.

88
00:07:29,870 --> 00:07:34,340
Therefore the next frequent word will have to identify 1 then the next one after that we'll have to

89
00:07:34,340 --> 00:07:36,920
keep it in the fire two etc..

90
00:07:37,010 --> 00:07:38,630
All right and that's it.

91
00:07:38,630 --> 00:07:42,850
That creates our questions where to the dictionary.

92
00:07:42,980 --> 00:07:50,210
So we get this dictionary that encodes each of the words of the questions by at the same time only including

93
00:07:50,210 --> 00:07:51,230
the frequent ones.

94
00:07:51,440 --> 00:07:58,190
Or at least the 95 percent most frequent one and now we're going to do the same for the answers we are

95
00:07:58,190 --> 00:08:03,530
going to create a new dictionary that we're going to call answerers words to end and that will do the

96
00:08:03,530 --> 00:08:10,250
same it will not only include the 95 percent most frequent words of the answers and at the same time

97
00:08:10,310 --> 00:08:14,300
associate them to a unique integer and so you get that.

98
00:08:14,300 --> 00:08:16,640
This is exactly the same logic.

99
00:08:16,760 --> 00:08:23,150
We just need to copy this copy and I'm going to paste that just below.

100
00:08:23,150 --> 00:08:23,850
There we go.

101
00:08:23,870 --> 00:08:28,870
And like before we just need to replace question by answer and we will be good to go.

102
00:08:29,120 --> 00:08:31,100
So questions words.

103
00:08:31,130 --> 00:08:33,750
I'm going to replace that by answer.

104
00:08:33,860 --> 00:08:34,920
Answers words to end.

105
00:08:34,970 --> 00:08:40,580
Perfect word number we can keep that because it was only used for the previous for loop and therefore

106
00:08:40,580 --> 00:08:46,870
we can re-initialize it to zero because that's it by this code section here we get our dictionaries.

107
00:08:46,870 --> 00:08:48,260
We can just use it again.

108
00:08:48,260 --> 00:08:49,130
That's fine.

109
00:08:49,250 --> 00:08:50,510
So we're numbers.

110
00:08:50,510 --> 00:08:54,960
Fine then for word count in Word to count items.

111
00:08:54,950 --> 00:08:55,570
All good.

112
00:08:55,700 --> 00:08:57,840
If count is larger than the threshold.

113
00:08:58,070 --> 00:09:01,540
Well our answerers words to int.

114
00:09:01,590 --> 00:09:08,090
Dictionary will create the word key that was accepted because it appears more than the threshold and

115
00:09:08,100 --> 00:09:13,780
the value word number which is its unique integer identifying and coding it.

116
00:09:13,880 --> 00:09:19,490
And here eventually that's the same we just need to increment the word number so that the next word

117
00:09:19,490 --> 00:09:26,500
that we find appearing more than the threshold gets a new unique integer to be encoded with.

118
00:09:26,510 --> 00:09:30,870
There we go our two dictionaries are created.

119
00:09:30,980 --> 00:09:37,520
We not only removed the 5 percent less frequent words and at the same time we encoded all the words

120
00:09:37,610 --> 00:09:40,160
of our questions and of our answers.

121
00:09:40,160 --> 00:09:41,480
That's a good thing done.

122
00:09:41,690 --> 00:09:49,370
So now we're going to execute this section to have a look at our two dictionaries that we just created.

123
00:09:49,370 --> 00:09:53,090
There we go we have them all good so let's have a look.

124
00:09:53,120 --> 00:09:58,410
First let's have a look at the first one corresponding to the questions which is right here.

125
00:09:58,430 --> 00:10:07,290
Questions words to it and there we go we get all the words of the questions and for each of them a unique

126
00:10:07,470 --> 00:10:11,930
value identifier which is of course an integer right.

127
00:10:11,970 --> 00:10:21,320
So you get all the words here and that will be very useful for our future to say model and in general

128
00:10:21,330 --> 00:10:25,400
way that's the common task to do in natural language processing.

129
00:10:25,440 --> 00:10:29,480
Of course you understand that right now we are only doing natural language processing.

130
00:10:29,520 --> 00:10:31,110
We have not attacked deep.

131
00:10:31,110 --> 00:10:36,840
And yet the deep part will come when we get to the deep neural networks.

132
00:10:36,840 --> 00:10:42,710
That is when we get to the SEC to say all this what we're doing right now is just the common process

133
00:10:42,720 --> 00:10:43,480
in our people.

134
00:10:43,480 --> 00:10:45,540
That's of course very important.

135
00:10:45,540 --> 00:10:50,970
Next have a quick look now at that and his words to the dictionary.

136
00:10:51,150 --> 00:10:57,250
That's the same you have all the words and a unique integer for each of these words.

137
00:10:57,270 --> 00:10:59,420
All right perfect so let's close this.

138
00:10:59,460 --> 00:11:04,770
And now let's move on to the next step which will be quite simple actually it will be to add the final

139
00:11:04,830 --> 00:11:09,060
unique tokens to our two dictionaries that we just created.

140
00:11:09,060 --> 00:11:12,250
And that's basically the end of strings Storen string.

141
00:11:12,280 --> 00:11:19,380
So as well the last unique tokens that we need to add to our dictionaries which are essential tokens

142
00:11:19,380 --> 00:11:22,270
to consider when building the sector second work.

143
00:11:22,560 --> 00:11:24,110
So we'll do that in the next tutorial.

144
00:11:24,150 --> 00:11:25,830
And until then I didn't know the.
