1
00:00:05,040 --> 00:00:09,330
Hello welcome to this new tutorial and now lead by our actions.

2
00:00:09,420 --> 00:00:16,140
So as a reminder we're now making a function so that we can get the by at coin's action in my wallet

3
00:00:16,530 --> 00:00:21,720
and exactly as what we just did for getting the equity in at coin's an investor.

4
00:00:21,870 --> 00:00:28,500
We going to make a new function here which we'll call by at coins and which this time will not return

5
00:00:28,530 --> 00:00:34,560
anything but we'll update three variables right after the investor buy some Atkins and the three variables

6
00:00:34,620 --> 00:00:38,250
are first the equity in Adkins of the investor.

7
00:00:38,250 --> 00:00:41,320
Second the equity in dollars of the investor.

8
00:00:41,520 --> 00:00:47,710
And third that all at once but which is I remind the total number of coins that have been bought by

9
00:00:47,710 --> 00:00:54,490
the investors because indeed as soon as an investor buys them at coins Well this variable is a dated

10
00:00:54,750 --> 00:00:57,880
and that is increasing because some you add coins were bought.

11
00:00:57,900 --> 00:00:59,700
All right so buy at coins.

12
00:00:59,710 --> 00:01:07,200
Let's make this function and we start with a function function then we need to give a name to this function

13
00:01:07,200 --> 00:01:15,350
which will go by at coin's very simply and then this function will take actually two arguments to sign.

14
00:01:15,480 --> 00:01:21,180
First the address of the investor because it's actually the investor that will call this function to

15
00:01:21,180 --> 00:01:22,410
buy some coins.

16
00:01:22,440 --> 00:01:27,090
So we need to specify here address of the investor.

17
00:01:27,300 --> 00:01:34,000
But keep in mind that address here is the type of the variable and investor is the name of the variable.

18
00:01:34,080 --> 00:01:39,930
So that's the first variable and then the second variable will be well how much dollars the investor

19
00:01:39,930 --> 00:01:42,710
wants to spend to buy the coins.

20
00:01:42,750 --> 00:01:45,930
That is basically how many coins does he want to get.

21
00:01:45,930 --> 00:01:47,560
But with US dollars.

22
00:01:47,610 --> 00:01:56,130
So the second argument here will be the USD invested but again we need to specify the type just before

23
00:01:56,130 --> 00:02:03,960
the name of this variable and the type of this variable is an unsigned integer int and investor is not

24
00:02:03,960 --> 00:02:10,020
going to spend billions of dollars to buy at coins so we can take the simple You end with 32 bytes.

25
00:02:10,260 --> 00:02:15,150
So you and you as invested we have our two arguments perfect.

26
00:02:15,150 --> 00:02:22,350
Now we're just going to specify exactly like before that our input variables are external because indeed

27
00:02:22,620 --> 00:02:25,260
these are not intrinsic to the contract.

28
00:02:25,300 --> 00:02:27,160
And now guess what we have to do.

29
00:02:27,210 --> 00:02:30,090
Do we have to open some new brackets here.

30
00:02:30,090 --> 00:02:31,590
No that's the trick.

31
00:02:31,590 --> 00:02:33,400
There is a tricky thing to do here.

32
00:02:33,420 --> 00:02:41,890
We must apply the modifier because remember we need to check first if this investor here can buy the

33
00:02:41,910 --> 00:02:48,650
at coins with the money he wants to invest that is with his US dollars and to check this well we'll

34
00:02:48,660 --> 00:02:50,660
of course apply or modify.

35
00:02:50,880 --> 00:02:51,500
All right.

36
00:02:51,590 --> 00:02:57,420
And so now the question is how do we apply this money if I hear how do we link it to this function.

37
00:02:57,420 --> 00:02:59,550
Well that's exactly the next step here.

38
00:02:59,610 --> 00:03:08,790
Just before we opened the brackets we need to call our modify here just this way can buy at coin so

39
00:03:08,790 --> 00:03:16,140
that I might if I remember we got it can buy at coins and of course we can put what this modifier is

40
00:03:16,140 --> 00:03:24,540
expecting as argument which is exactly the U.S. invested by the investor which is already an existing

41
00:03:24,540 --> 00:03:29,700
viable dysfunction because indeed is the argument of the buy at coins function.

42
00:03:29,700 --> 00:03:36,540
So what I can simply do here is just take this USD invested without taking the time because the type

43
00:03:36,540 --> 00:03:39,360
is just use when you declare a new variable.

44
00:03:39,360 --> 00:03:43,900
But this was already declared and therefore we just need to pay that here.

45
00:03:43,920 --> 00:03:49,370
You as the invested and now we are allowed to start implementing the function.

46
00:03:49,560 --> 00:03:50,850
So pressing enter.

47
00:03:51,150 --> 00:03:54,570
I get my closing bracket and now we're definitely ready.

48
00:03:54,990 --> 00:04:01,160
OK so as I said at the beginning of the Statoil this function is not going to return any value.

49
00:04:01,320 --> 00:04:04,280
It's just going to modify some variables.

50
00:04:04,290 --> 00:04:11,040
Remember these are the equity in us the investor the equity in coins and the total Aitken's.

51
00:04:11,040 --> 00:04:16,810
But all right so let's start with the equity in at CUENTA.

52
00:04:16,890 --> 00:04:25,500
So to date this equity in at coin's well simply we must increment we must add to the current equity

53
00:04:26,060 --> 00:04:30,180
and at coin's of our investor.

54
00:04:30,190 --> 00:04:35,880
So here I just took my mapping again this is my mapping and this is the argument of the mapping which

55
00:04:35,880 --> 00:04:37,450
is the address of the investor.

56
00:04:37,560 --> 00:04:43,040
So that basically gives me the equity in coins of our investor here.

57
00:04:43,050 --> 00:04:47,740
And so that's exactly the variable that we need to update right now and to update it.

58
00:04:47,790 --> 00:04:56,310
What I want to do is add to this equity and at coin's Well the at coin's but by this investor when he

59
00:04:56,310 --> 00:05:02,550
pays this amount of US dollars that is this you as the invested amount of dollars.

60
00:05:02,610 --> 00:05:09,670
And so what we exactly need to add to the equity at coin's of the investor is this amount of at coin's

61
00:05:09,670 --> 00:05:13,700
this investor could get by spending this amount of US invested.

62
00:05:13,930 --> 00:05:23,890
And so let's call this number of coins and coins but and now we are going to define exactly what this

63
00:05:23,890 --> 00:05:32,110
variable will be equal to which is of course the USD invested by the investor that is the amount of

64
00:05:32,110 --> 00:05:35,200
money paid by the investor times.

65
00:05:35,200 --> 00:05:42,610
Remember we have our USD to add coin's conversion rate the USD to add on conversion rate allows us to

66
00:05:42,610 --> 00:05:45,300
go from USD to add coins.

67
00:05:45,310 --> 00:05:52,690
And therefore since here our investors spent USD investor dollars well to get the number of at coins

68
00:05:52,780 --> 00:05:54,810
this investor could die with his dollars.

69
00:05:54,820 --> 00:05:58,130
We simply need to multiply this by this rate here.

70
00:05:58,180 --> 00:06:07,820
You get it at once and therefore let's just take this USD at coin's copy it and let's face it here so

71
00:06:07,820 --> 00:06:09,750
that we get our ad going.

72
00:06:09,770 --> 00:06:14,100
But and here the equity and at coin's is well incremented.

73
00:06:14,160 --> 00:06:16,660
However let's not forget that at Cone's.

74
00:06:16,670 --> 00:06:22,580
But here is a new variable that wasn't declared anywhere before and therefore this is the first time

75
00:06:22,580 --> 00:06:23,550
we declare it here.

76
00:06:23,690 --> 00:06:30,470
And when you declare a new variable and solidity and that comes from C++ because solidity was inspired

77
00:06:30,470 --> 00:06:31,560
from C++.

78
00:06:31,640 --> 00:06:36,880
Well we need to declare the type here which is an unsigned integer.

79
00:06:37,400 --> 00:06:41,180
And again and there we go now to get rid of this.

80
00:06:41,240 --> 00:06:45,220
We simply don't add the semi color.

81
00:06:45,490 --> 00:06:45,820
All right.

82
00:06:45,820 --> 00:06:51,130
And that update our first viable equity in at coin's of the investor.

83
00:06:51,130 --> 00:06:53,600
Now let's update the other variables.

84
00:06:53,890 --> 00:06:59,330
So the second one was the equity in dollars and the third one was the total at but.

85
00:06:59,650 --> 00:07:03,540
So let's start first with the equity in USD.

86
00:07:03,670 --> 00:07:12,190
So that's why I'm coupling this because the equity in USD is simply the knapping equity USD taking the

87
00:07:12,220 --> 00:07:14,620
investor's argument investor address.

88
00:07:14,750 --> 00:07:17,660
So that gives us the equity annuity of the investor.

89
00:07:17,760 --> 00:07:20,650
And now how do we update the variable.

90
00:07:20,650 --> 00:07:27,460
The right way after the investor buys the coins well simply what we can do is update it this way we

91
00:07:27,460 --> 00:07:36,440
can take our equity in at coin's of the investor which is exactly this and paste it here and then divide

92
00:07:36,440 --> 00:07:41,660
it by the U.S. at Cohn's conversion rate that is 1000.

93
00:07:41,950 --> 00:07:45,450
Because indeed since one dollar equals 1000 at.

94
00:07:45,640 --> 00:07:51,730
Well in order to convert your coins into dollars you just need to divide your actions equity by 1000.

95
00:07:51,850 --> 00:07:54,120
And that's exactly what we did here.

96
00:07:54,340 --> 00:07:54,970
All right.

97
00:07:55,090 --> 00:07:56,870
And let's not forget the semicolon.

98
00:07:57,050 --> 00:07:57,850
And there we go.

99
00:07:57,850 --> 00:08:00,980
We have our second variable updated.

100
00:08:01,330 --> 00:08:02,100
Good.

101
00:08:02,110 --> 00:08:04,170
Now let's update the third one.

102
00:08:04,300 --> 00:08:10,530
That is the toll at coin's but so try to guess how we have to update it.

103
00:08:10,540 --> 00:08:12,320
It's actually very simple.

104
00:08:12,550 --> 00:08:19,990
Well very logically the total Aitken's But is the total number of coins that have been bought by all

105
00:08:19,990 --> 00:08:20,900
the investors.

106
00:08:21,070 --> 00:08:26,500
Right now we're dealing with one investor which is this one and therefore right after this investor

107
00:08:26,500 --> 00:08:30,620
had but his coins with this amount of dollars.

108
00:08:30,760 --> 00:08:35,560
Well that means that some new head coins were but and this number of new actions but is exactly what

109
00:08:35,560 --> 00:08:38,600
we got here with this variable at coins.

110
00:08:38,610 --> 00:08:46,660
But so that's why I'm selecting this and copying it because now I'm going to use it to update the total

111
00:08:46,660 --> 00:08:47,580
number of coins.

112
00:08:47,590 --> 00:08:54,260
But by the investors the following way by simply incrementing it by this number of actions.

113
00:08:54,280 --> 00:08:56,720
But by this specific investor.

114
00:08:56,720 --> 00:08:57,040
All right.

115
00:08:57,040 --> 00:09:04,120
We just add up some new Atkinsons which is but to the total number of coins that were bought by all

116
00:09:04,120 --> 00:09:05,430
the other investors.

117
00:09:05,630 --> 00:09:12,320
Great let's not forget the semicolon and we are done with the function the red flag just disappeared.

118
00:09:12,340 --> 00:09:17,980
All good we're ready to move on to the last final function of this implementation which is the function

119
00:09:17,980 --> 00:09:23,460
that allows the buyback option or in other words allows us to buy actions back.

120
00:09:23,770 --> 00:09:28,580
All right let's do this in the next tutorial and then I guess we'll be ready for the demo.

121
00:09:28,870 --> 00:09:30,610
Until then and good luck.
