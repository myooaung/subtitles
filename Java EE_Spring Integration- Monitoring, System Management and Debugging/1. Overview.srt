1
00:00:01,040 --> 00:00:03,840
[Autogenerated] spring integration enables us to write software

2
00:00:03,840 --> 00:00:06,370
consisting of loosely coupled components,

3
00:00:06,370 --> 00:00:08,840
which has a lot of advantages.

4
00:00:08,840 --> 00:00:11,650
But one thing that loose coupling and Asian colonel is

5
00:00:11,650 --> 00:00:15,840
messaging make a bit more complicated is debugging.

6
00:00:15,840 --> 00:00:16,740
Fortunately,

7
00:00:16,740 --> 00:00:20,940
spring integration provides us with tools to help us analyze the flow off

8
00:00:20,940 --> 00:00:25,240
messages and inspect what's happening in this module.

9
00:00:25,240 --> 00:00:27,640
We'll take a look at these tools.

10
00:00:27,640 --> 00:00:32,740
First, we're going to work with the wiretap and message store patterns.

11
00:00:32,740 --> 00:00:37,080
Our first explain the main idea off these enterprise integration patterns

12
00:00:37,080 --> 00:00:39,920
and how they are implemented in spring integration.

13
00:00:39,920 --> 00:00:45,740
And then we'll do a demo where real store messages in a Mongo DB database.

14
00:00:45,740 --> 00:00:48,880
Then we'll take a look at the message history pattern,

15
00:00:48,880 --> 00:00:52,410
and you'll learn how it can help you to analyze what has happened to a

16
00:00:52,410 --> 00:01:00,000
message as it has passed through the integration flow. Those error three topics for this module

