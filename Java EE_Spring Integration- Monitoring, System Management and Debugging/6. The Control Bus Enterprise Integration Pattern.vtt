WEBVTT
1
00:00:01.040 --> 00:00:03.340
[Autogenerated] the Enterprise Integration Patterns Book

2
00:00:03.340 --> 00:00:06.060
describes another pattern for system management.

3
00:00:06.060 --> 00:00:08.540
The control bus pattern.

4
00:00:08.540 --> 00:00:13.540
Let's investigate this pattern and see house bring integration support it.

5
00:00:13.540 --> 00:00:18.560
One disadvantage of J M X is that it has a different and completely shepherd

6
00:00:18.560 --> 00:00:23.040
interface to the application via remote method invocation.

7
00:00:23.040 --> 00:00:27.050
The main idea behind the control was pattern is that you can use

8
00:00:27.050 --> 00:00:30.510
the messaging infrastructure that used for application level

9
00:00:30.510 --> 00:00:34.040
messages for system management as well.

10
00:00:34.040 --> 00:00:35.730
To manage the application,

11
00:00:35.730 --> 00:00:38.300
you would send system management messages to the

12
00:00:38.300 --> 00:00:41.840
appropriate channels to control components.

13
00:00:41.840 --> 00:00:45.800
This would be particularly useful for distributed systems where

14
00:00:45.800 --> 00:00:49.370
you already have the infrastructure in place for exchanging

15
00:00:49.370 --> 00:00:53.200
messages and where you wouldn't want to add a completely separate

16
00:00:53.200 --> 00:00:55.740
infrastructure for management.

17
00:00:55.740 --> 00:00:58.820
Spring integration provides a control bus component,

18
00:00:58.820 --> 00:01:02.440
which supports this pattern in a particular way.

19
00:01:02.440 --> 00:01:06.350
The Spring Integration Control bus component is a message Chandler

20
00:01:06.350 --> 00:01:10.610
that interprets the body off messages that you send to it a spring

21
00:01:10.610 --> 00:01:15.040
expression language expressions, which it executes.

22
00:01:15.040 --> 00:01:19.910
You can use these to send messages that call methods on arbitrary beans.

23
00:01:19.910 --> 00:01:24.930
In the spring application context, you cannot call arbitrary message.

24
00:01:24.930 --> 00:01:26.240
However,

25
00:01:26.240 --> 00:01:29.650
the control was limits the methods that you can call to

26
00:01:29.650 --> 00:01:32.170
the methods from the interface possible,

27
00:01:32.170 --> 00:01:36.810
which are Poles and resume, and from its super interface lifecycle,

28
00:01:36.810 --> 00:01:39.400
which are start, stop and is running,

29
00:01:39.400 --> 00:01:45.240
and methods that have a managed operation or managed attribute annotation.

30
00:01:45.240 --> 00:01:51.040
These two annotations are from the core Spring Framework support for J M X.

31
00:01:51.040 --> 00:01:54.880
The purpose off the spring Immigration Control bus component is mainly

32
00:01:54.880 --> 00:01:58.490
to enable you to call management methods by sending messages to the

33
00:01:58.490 --> 00:02:03.000
application instead of calling them via J. M X.

