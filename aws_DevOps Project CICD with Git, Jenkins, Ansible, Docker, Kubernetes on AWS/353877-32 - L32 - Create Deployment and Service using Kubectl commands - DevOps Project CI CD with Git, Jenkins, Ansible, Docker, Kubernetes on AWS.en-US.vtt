WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.420
Hello.

00:00:01.420 --> 00:00:02.400
Welcome back.

00:00:02.400 --> 00:00:03.200
In last video,

00:00:03.200 --> 00:00:07.330
we have seen how to set up Kubernetes cluster using movinto system.

00:00:07.330 --> 00:00:09.810
I still locked into my window system.

00:00:09.810 --> 00:00:11.480
Let me rename the session.

00:00:11.480 --> 00:00:15.450
Name cares.

00:00:15.450 --> 00:00:18.690
Man has meant settle it.

00:00:18.690 --> 00:00:24.790
I will just to rename it so that it would be easy toe identified Now I am jumping onto my

00:00:24.790 --> 00:00:28.630
kubernetes Master Sister for that we should execute this comment.

00:00:28.630 --> 00:00:31.230
Let's execute it so I'm on my crew.

00:00:31.230 --> 00:00:32.350
Burn it is Master,

00:00:32.350 --> 00:00:34.250
This is my master server.

00:00:34.250 --> 00:00:37.250
Let's become your route over here.

00:00:37.250 --> 00:00:38.880
Clear the screen.

00:00:38.880 --> 00:00:44.140
Even though I mentioned a Cuban Nitties management their work I'm on my master system right

00:00:44.140 --> 00:00:44.350
now.

00:00:44.350 --> 00:00:52.860
Now if I execute cubes CTL here I can see the Cube Citadel is working here.

00:00:52.860 --> 00:00:55.950
Let's execute the comment Cube CTL,

00:00:55.950 --> 00:00:58.530
get north.

00:00:58.530 --> 00:00:59.270
Okay,

00:00:59.270 --> 00:01:00.550
this is the commander Toe.

00:01:00.550 --> 00:01:01.250
Get north.

00:01:01.250 --> 00:01:03.090
We have one master.

00:01:03.090 --> 00:01:04.750
Nothing but this current system.

00:01:04.750 --> 00:01:13.500
You can see here 33.1 26 under two claims are there Next one more command is cube CTL get

00:01:13.500 --> 00:01:16.510
parts You feel how created any parts?

00:01:16.510 --> 00:01:18.430
You can find parts over here.

00:01:18.430 --> 00:01:20.780
So far we haven't created any port.

00:01:20.780 --> 00:01:22.550
You cannot find anything here.

00:01:22.550 --> 00:01:30.470
Similar where deploy our deployments both will work so we don't have any deployment so far

00:01:30.470 --> 00:01:30.470
.

00:01:30.470 --> 00:01:32.520
You cannot get any deployments.

00:01:32.520 --> 00:01:34.470
Similar were service.

00:01:34.470 --> 00:01:35.450
Okay,

00:01:35.450 --> 00:01:38.870
we haven't created any services.

00:01:38.870 --> 00:01:42.020
This is the default service which comes with the cluster,

00:01:42.020 --> 00:01:43.580
so it will be available.

00:01:43.580 --> 00:01:46.350
But we don't have any customs services over here.

00:01:46.350 --> 00:01:49.250
So usually what will happen in our case?

00:01:49.250 --> 00:01:51.020
We are going to create your deploy.

00:01:51.020 --> 00:01:53.710
Whenever we created the play in the background,

00:01:53.710 --> 00:01:55.310
it is going to create parts.

00:01:55.310 --> 00:02:01.620
How it create parts deploy is going to create a replica city on and replica said make sure

00:02:01.620 --> 00:02:03.650
that you were parts are always available.

00:02:03.650 --> 00:02:05.150
That's how it works.

00:02:05.150 --> 00:02:07.780
So parts are running with the application.

00:02:07.780 --> 00:02:10.860
That application can be accessible only if we create.

00:02:10.860 --> 00:02:17.400
The service service is helpful to expose our application toe outside other ways you cannot

00:02:17.400 --> 00:02:20.950
access You were applications from outside of your cluster.

00:02:20.950 --> 00:02:26.590
Now we are going toe test this one by running one up the deployment Under service for that

00:02:26.590 --> 00:02:26.590
,

00:02:26.590 --> 00:02:28.650
I have updated our document itself.

00:02:28.650 --> 00:02:30.750
Let's go and get the comments.

00:02:30.750 --> 00:02:33.510
So in the document itself,

00:02:33.510 --> 00:02:34.990
we can scroll down.

00:02:34.990 --> 00:02:41.250
Let me increase the four ounces so to deploy and the Knicks on our Kubernetes cluster.

00:02:41.250 --> 00:02:45.390
We should execute Cube CTL run command on the sample,

00:02:45.390 --> 00:02:48.020
and the Knicks is the deployment name.

00:02:48.020 --> 00:02:50.430
Whenever we are creating any deployment,

00:02:50.430 --> 00:02:53.850
we should give that deployment a name followed by images,

00:02:53.850 --> 00:02:56.950
this image it pulls from the darker hope,

00:02:56.950 --> 00:02:58.670
then replicas.

00:02:58.670 --> 00:02:59.050
Nothing.

00:02:59.050 --> 00:03:00.850
But how many parts do you need?

00:03:00.850 --> 00:03:02.500
We needed to parts,

00:03:02.500 --> 00:03:07.750
so we are special ink replica as to if we don't specify replicas by defaulted,

00:03:07.750 --> 00:03:09.050
create only one part.

00:03:09.050 --> 00:03:12.030
But if something goes wrong with that party,

00:03:12.030 --> 00:03:14.140
where application wouldn't be accessible,

00:03:14.140 --> 00:03:18.340
that's where it's better to create replicas so that they were.

00:03:18.340 --> 00:03:21.250
Application is highly available most of the time,

00:03:21.250 --> 00:03:25.730
then port Engine X runs on port number eijiro.

00:03:25.730 --> 00:03:29.720
So we are specifying that one application should run under port number.

00:03:29.720 --> 00:03:31.450
Eijiro India pard.

00:03:31.450 --> 00:03:33.950
So let's execute this command.

00:03:33.950 --> 00:03:38.170
So far,

00:03:38.170 --> 00:03:40.070
we don't have any deployments.

00:03:40.070 --> 00:03:41.860
We are creating faster deployment.

00:03:41.860 --> 00:03:45.140
You can see here deployment is created on.

00:03:45.140 --> 00:03:51.130
We can execute this commander to see their deployments models.

00:03:51.130 --> 00:03:54.310
We all cigs good deployment.

00:03:54.310 --> 00:03:57.660
Both will give the same or put on if you observe here.

00:03:57.660 --> 00:04:00.970
We have created your deployment called sample engine.

00:04:00.970 --> 00:04:02.850
ICS deserved how many parts.

00:04:02.850 --> 00:04:05.040
Does it required it required.

00:04:05.040 --> 00:04:07.920
Two parts are currently two parts are running.

00:04:07.920 --> 00:04:09.570
So whatever desert is there,

00:04:09.570 --> 00:04:12.750
make sure that those many parts are running all the time.

00:04:12.750 --> 00:04:17.300
That is the job applications it next up to date.

00:04:17.300 --> 00:04:17.640
Yes,

00:04:17.640 --> 00:04:18.470
this to our up.

00:04:18.470 --> 00:04:19.150
Put it on.

00:04:19.150 --> 00:04:20.350
Both are available.

00:04:20.350 --> 00:04:22.150
Sometimes it would be running,

00:04:22.150 --> 00:04:23.630
but it may not be available.

00:04:23.630 --> 00:04:25.770
And it created 10 seconds ago.

00:04:25.770 --> 00:04:26.380
Okay,

00:04:26.380 --> 00:04:28.250
That is how the output comes.

00:04:28.250 --> 00:04:29.260
And also,

00:04:29.260 --> 00:04:30.780
we can exclude this command.

00:04:30.780 --> 00:04:35.650
We can see that our parts by executing this comment,

00:04:35.650 --> 00:04:41.460
we can see here it created to part with the deployment name initially under,

00:04:41.460 --> 00:04:44.950
followed by some characters added extra to this one.

00:04:44.950 --> 00:04:47.670
This is part under this is container.

00:04:47.670 --> 00:04:48.210
Okay.

00:04:48.210 --> 00:04:49.890
Pardoned container tour,

00:04:49.890 --> 00:04:52.330
different entities within your part,

00:04:52.330 --> 00:04:56.650
our container stunts that I'll come in the dedicated kubernetes course.

00:04:56.650 --> 00:04:57.650
Next.

00:04:57.650 --> 00:05:01.180
This part is running on the restart zero,

00:05:01.180 --> 00:05:03.250
and it is running from 60 seconds.

00:05:03.250 --> 00:05:10.020
And also we can use one more option which will give some more details about these parts.

00:05:10.020 --> 00:05:10.900
You can see here.

00:05:10.900 --> 00:05:13.010
These are the parts on the parts.

00:05:13.010 --> 00:05:14.650
How the internal Liapis.

00:05:14.650 --> 00:05:15.980
By using this,

00:05:15.980 --> 00:05:16.260
I p,

00:05:16.260 --> 00:05:19.010
we can access application on you can see here.

00:05:19.010 --> 00:05:20.360
These are our North I.

00:05:20.360 --> 00:05:20.870
P's.

00:05:20.870 --> 00:05:26.670
One part is created in one or other parties created in another north so that it would be

00:05:26.670 --> 00:05:27.460
highly available,

00:05:27.460 --> 00:05:29.940
even though one nor ghost don't still,

00:05:29.940 --> 00:05:32.050
your application would be accessible.

00:05:32.050 --> 00:05:35.730
But so far we have created only deployment.

00:05:35.730 --> 00:05:39.750
That's way we cannot access this application from the outside.

00:05:39.750 --> 00:05:46.710
We can access within the system that is w get followed by the I P address on followed

00:05:46.710 --> 00:05:47.650
report number.

00:05:47.650 --> 00:05:50.610
But port number 80 is the default port number.

00:05:50.610 --> 00:05:52.340
So even though we don't space way,

00:05:52.340 --> 00:05:55.010
we can able to connect to our application.

00:05:55.010 --> 00:05:57.060
It's connected under downloaded.

00:05:57.060 --> 00:06:00.430
And if I open this where we can see that the engine,

00:06:00.430 --> 00:06:01.200
it's a default.

00:06:01.200 --> 00:06:01.510
Five.

00:06:01.510 --> 00:06:02.450
All right,

00:06:02.450 --> 00:06:15.050
Now let me remove this file on a clear the screen cube CTL get Ford's minus.

00:06:15.050 --> 00:06:15.700
Woo hoo!

00:06:15.700 --> 00:06:18.610
I'm executing this command again.

00:06:18.610 --> 00:06:23.650
So now we could able to access this parts internally.

00:06:23.650 --> 00:06:26.950
If you want to access this part outside off you were cluster.

00:06:26.950 --> 00:06:31.110
Then we must create its service for this one to create a service.

00:06:31.110 --> 00:06:37.050
We have a command called exposed that is cube CDL expose under deployment.

00:06:37.050 --> 00:06:37.420
What?

00:06:37.420 --> 00:06:39.760
The deployment we are exposing our deployment.

00:06:39.760 --> 00:06:45.410
Name is sample engine ICS under on which port number we are exposing toe the external

00:06:45.410 --> 00:06:45.850
network,

00:06:45.850 --> 00:06:48.930
External network Nothing but cluster network.

00:06:48.930 --> 00:06:52.510
It is port number 80 on the pipe load balancer.

00:06:52.510 --> 00:06:54.460
Whenever we execute this comment,

00:06:54.460 --> 00:06:55.840
it is going to create.

00:06:55.840 --> 00:07:00.480
Yet service on the service type is Lord balancer.

00:07:00.480 --> 00:07:05.920
We have different types off services or their Lord balance or nor port on a few other

00:07:05.920 --> 00:07:07.530
depends upon the use case.

00:07:07.530 --> 00:07:09.050
You can choose the right one.

00:07:09.050 --> 00:07:12.020
So whenever we exude this one,

00:07:12.020 --> 00:07:15.270
it exposures our services to the external network.

00:07:15.270 --> 00:07:17.760
Under it exposes on a random port.

00:07:17.760 --> 00:07:21.210
This random port is commonly created in the kubernetes.

00:07:21.210 --> 00:07:22.500
By using that port,

00:07:22.500 --> 00:07:24.250
we should access our cluster.

00:07:24.250 --> 00:07:26.250
So cube CTL,

00:07:26.250 --> 00:07:29.090
get services.

00:07:29.090 --> 00:07:31.100
If you execute,

00:07:31.100 --> 00:07:35.400
we can see here We have created a service called Sample and Genetics,

00:07:35.400 --> 00:07:36.620
and it is type off.

00:07:36.620 --> 00:07:37.500
Lord Balancer,

00:07:37.500 --> 00:07:39.090
this is Cluster AP,

00:07:39.090 --> 00:07:40.120
and excellently.

00:07:40.120 --> 00:07:45.680
People don't get in the cluster Liability is running on port number 80 under outside.

00:07:45.680 --> 00:07:48.750
We need to access it from the 30,000 won.

00:07:48.750 --> 00:07:50.810
This is the port number we should use.

00:07:50.810 --> 00:07:51.400
No,

00:07:51.400 --> 00:07:55.430
we can access this one from the outside nothing but in the browser.

00:07:55.430 --> 00:07:59.870
So we should probably Masters are where I p followed by this port number.

00:07:59.870 --> 00:08:01.460
So let's go and grab.

00:08:01.460 --> 00:08:02.800
Our masters are very p.

00:08:02.800 --> 00:08:06.680
So I'm taking the master server or DNS.

00:08:06.680 --> 00:08:07.750
This is Master Server.

00:08:07.750 --> 00:08:16.550
Read all the services running on Kubernetes cluster.

00:08:16.550 --> 00:08:18.750
We should access from the Master nor Donnelly.

00:08:18.750 --> 00:08:21.680
30,000 won on the enter.

00:08:21.680 --> 00:08:25.950
We should be able to access ever engine ex service from here.

00:08:25.950 --> 00:08:32.130
Problem here is this port number is not exposed in the security group level.

00:08:32.130 --> 00:08:33.110
Let me go on,

00:08:33.110 --> 00:08:35.450
expose it in the security group level.

00:08:35.450 --> 00:08:44.190
So this is the security group which God created from our you're going to system while

00:08:44.190 --> 00:08:45.750
executing cops.

00:08:45.750 --> 00:08:48.900
I'm adding one custom port.

00:08:48.900 --> 00:08:51.750
What is the Port Tostitos under one.

00:08:51.750 --> 00:08:56.630
And it should be accessible from anywhere.

00:08:56.630 --> 00:08:57.550
For time being.

00:08:57.550 --> 00:09:03.840
Syria it Now let me try to access it.

00:09:03.840 --> 00:09:04.250
Yes,

00:09:04.250 --> 00:09:05.130
you can see here.

00:09:05.130 --> 00:09:06.520
Welcome to end Knicks.

00:09:06.520 --> 00:09:09.160
Where this application is running on Cuban.

00:09:09.160 --> 00:09:10.020
It is cluster.

00:09:10.020 --> 00:09:10.590
There is.

00:09:10.590 --> 00:09:11.920
Your party's there on that.

00:09:11.920 --> 00:09:13.280
It is running now.

00:09:13.280 --> 00:09:14.160
What I will do,

00:09:14.160 --> 00:09:16.450
I'm going to remove these two parts.

00:09:16.450 --> 00:09:28.650
So let's get the parts to remove Parts Cube CTL they lit board under part names.

00:09:28.650 --> 00:09:31.310
So whenever we deleted what happens,

00:09:31.310 --> 00:09:33.570
our application won't be accessible.

00:09:33.570 --> 00:09:36.030
But our deployment I didn't say that.

00:09:36.030 --> 00:09:39.710
The parts are not running under it Recreates done new parts.

00:09:39.710 --> 00:09:40.750
Let's see.

00:09:40.750 --> 00:09:43.390
Don't be played.

00:09:43.390 --> 00:09:45.850
Access it currently It could be down.

00:09:45.850 --> 00:09:47.480
Yes,

00:09:47.480 --> 00:09:48.010
you can see.

00:09:48.010 --> 00:09:48.780
Here it is.

00:09:48.780 --> 00:09:50.130
It's created.

00:09:50.130 --> 00:09:54.390
Created new parts And let me get the personal You can see here.

00:09:54.390 --> 00:09:57.250
New parts God created 13 seconds ago.

00:09:57.250 --> 00:09:59.250
Let me test it one more time.

00:09:59.250 --> 00:10:04.150
I'm deleting only one part of this time.

00:10:04.150 --> 00:10:05.650
Sorry.

00:10:05.650 --> 00:10:13.340
Cubes Citadel daily part on DA again.

00:10:13.340 --> 00:10:15.560
He played around this one You can see here.

00:10:15.560 --> 00:10:18.010
One party is running from 61 seconds.

00:10:18.010 --> 00:10:19.750
Another one is from four seconds.

00:10:19.750 --> 00:10:21.000
Right.

00:10:21.000 --> 00:10:25.050
This is how we can create our deployment on services in Kubernetes.

00:10:25.050 --> 00:10:27.620
But in the real world,

00:10:27.620 --> 00:10:29.830
we don't create a deployment on services.

00:10:29.830 --> 00:10:31.040
By using the comments,

00:10:31.040 --> 00:10:34.960
we create a amel pills where it has all the definitions.

00:10:34.960 --> 00:10:40.050
We just need to execute those amel felt so that our parts get created.

00:10:40.050 --> 00:10:41.000
And also,

00:10:41.000 --> 00:10:42.630
whenever there is a new deployment,

00:10:42.630 --> 00:10:44.820
we just need to remove the world containers.

00:10:44.820 --> 00:10:48.150
It pulls the latest emails and create the new container.

00:10:48.150 --> 00:10:50.200
How it is goingto happen.

00:10:50.200 --> 00:10:54.820
We are going to see in the next decision in next decision we are going to create service

00:10:54.820 --> 00:10:55.700
under deployment.

00:10:55.700 --> 00:10:56.620
Wells on.

00:10:56.620 --> 00:11:01.000
We will see what and all the information is there in that Thanks for watching this video

00:11:01.000 --> 00:11:02.350
and see you in the next video.

