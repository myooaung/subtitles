WEBVTT

00:10.720 --> 00:16.210
Hey guys welcome back to the course so in this lecture we're going to talk a little bit about best practices

00:16.300 --> 00:20.060
around what you should outsource and what you should not.

00:20.100 --> 00:26.540
So the biggest takeaway from this lecture is I'm going to go over what are the big rules around outsourcing.

00:26.620 --> 00:31.860
What are the things that if you knew it could prevent you from making a huge outsourcing mistake is

00:31.930 --> 00:37.270
most important is to understand that there are certain scenarios that are completely inappropriate for

00:37.270 --> 00:40.350
outsourcing and are in general a bad idea.

00:40.420 --> 00:44.410
And then there are other scenarios where it's a fantastic idea and you're actually doing yourself a

00:44.410 --> 00:46.030
disservice by not outsourcing it.

00:46.030 --> 00:50.260
So the first thing to take into consideration when you can determine whether or not you should outsource

00:50.260 --> 00:55.870
or you should the first thing I'd always like to ask people is do you have enough money to outsource

00:56.020 --> 01:02.590
Now this might be a little bit of kind of a misnomer because you think outsourcing is saving money.

01:02.590 --> 01:04.800
So why is the first thing you ask about my budget.

01:04.810 --> 01:10.590
Well outsourcing just save you a lot of money but it's not free it's to cost some money.

01:10.690 --> 01:15.130
You can still spend a lot of money outsourcing especially if you're trying to build say a large web

01:15.130 --> 01:19.410
application or you're trying to outsource a very large business process.

01:19.420 --> 01:24.590
So I mean I can't even really generalize on the whole as to how much money outsourcing will Seaview

01:24.880 --> 01:25.150
you know.

01:25.140 --> 01:29.920
I mean it could be anywhere from 40 percent savings to 90 95 percent savings.

01:29.920 --> 01:34.450
It kind of depends with how comfortable you are with outsourcing and what exactly you are outsourcing

01:34.460 --> 01:36.760
and obviously how you do it and what deals you strike.

01:36.880 --> 01:39.130
But in general you do need some money.

01:39.130 --> 01:43.210
This is not one of those scenarios where we're going to find some of to do it for free.

01:43.240 --> 01:47.450
I wish there were more scenarios like that and you know typically when someone comes into Sprint.

01:47.530 --> 01:52.120
And they simply don't have the budget I usually suggest outsourcing and if they don't have the budget

01:52.120 --> 01:54.630
for that I usually tell them hey what you're trying to build.

01:54.630 --> 01:55.640
It needs to shrink.

01:55.660 --> 01:57.380
So take your application.

01:57.400 --> 01:58.470
Reduce features.

01:58.470 --> 02:02.050
Focus on the core of what you're trying to build or do.

02:02.420 --> 02:03.510
And start from there.

02:03.520 --> 02:06.930
So take a moment to evaluate what is your budget.

02:06.940 --> 02:09.630
Is it more than zero.

02:09.640 --> 02:12.390
Does it fit in general with what you think.

02:12.550 --> 02:17.500
A very cheap version of what you could build is now later we're going to have lectures on how you can

02:17.500 --> 02:23.150
figure out what exactly this is going to cost and I give some pretty in detail examples of what app

02:23.260 --> 02:29.310
web applications I've had built before cost and to give you some kind of an idea of big applications

02:29.310 --> 02:33.910
small application what are we talking about in terms of money for most of you out there most of you

02:34.090 --> 02:38.890
guys listening to this course you probably came from other courses are trying to build a webapp mobile

02:38.890 --> 02:39.390
app.

02:39.460 --> 02:44.920
You know we're not talking hundreds of dollars but we're usually not talking tens of thousands really

02:44.920 --> 02:46.750
just kind of depends on what you're trying to build.

02:46.750 --> 02:53.410
The second thing I always usually like to ask is Is the technology of your application is that the core

02:53.410 --> 02:58.570
of what you're trying to build in the core of why a customer would value what you're trying to do now.

02:58.600 --> 03:04.900
If your customer drives the majority of their value from your service or product or app and they derive

03:04.900 --> 03:11.260
it from the technology of that application then outsourcing is quite a bit harder to do and you need

03:11.260 --> 03:16.480
to focus on using outsource outsourcing and outsourcing techniques to help you with smaller and more

03:16.480 --> 03:19.690
auxilary processes related to your main application.

03:19.720 --> 03:22.230
Now you might be asking yourself What am I talking about.

03:22.270 --> 03:27.490
I'll give you some examples so if you use the application called Shazam.

03:27.730 --> 03:30.320
That's a great example of something you should not outsource.

03:30.400 --> 03:35.590
So when I was saying that the consumer or you're in customer derives most of their value off of the

03:35.590 --> 03:38.850
technology of what you're building schizm is a great example.

03:38.860 --> 03:43.450
Shahzad is that mobile application or believe it used to be a web application and what it does it listens

03:43.450 --> 03:49.300
to a song and it uses this kind of waveform technology to match it to a database to tell the person

03:49.300 --> 03:50.610
what song it is.

03:50.710 --> 03:57.520
So it's just this case the technology right there is proprietary it's the core reason why someone uses

03:57.520 --> 03:57.960
it.

03:58.000 --> 04:04.180
Now the rest of the application the buttons the signs the you know all the smaller features that just

04:04.180 --> 04:05.920
gets you to that technology.

04:05.950 --> 04:12.520
Those are not core but the core technology of the matching system that is the reason why people care

04:12.520 --> 04:15.220
about Shazam if they didn't have that we wouldn't be talking about it.

04:15.250 --> 04:16.790
I'll give you another example.

04:16.840 --> 04:22.060
We had a student in another course bring up anti-virus software is an advantage should outsource anti-virus

04:22.060 --> 04:22.750
software.

04:23.050 --> 04:27.580
If you're going to try to build a software or some system that could detect viruses that's another one

04:27.580 --> 04:31.240
that's not a good candidate for outsourcing.

04:31.270 --> 04:31.760
Why.

04:31.780 --> 04:37.870
Well because the success of your application and then the reason why people will use it ultimately comes

04:37.870 --> 04:42.440
down to how complex and how well refined your technology is.

04:42.460 --> 04:48.140
So an anti-virus it's you're constantly updating algorithms you're constantly updating the way that

04:48.140 --> 04:51.370
it determines what a virus is in the way gets rid of it.

04:51.370 --> 04:56.140
It's not one of those projects that you build it once and it's good for 10 years it's a project that's

04:56.140 --> 04:58.650
constantly going to be iterating.

04:58.780 --> 05:04.210
And again the technology itself is the core reason why it's good and why it makes money.

05:04.210 --> 05:08.170
Last example Face dot com is a great example.

05:08.170 --> 05:15.400
This is a technology that existed where it could match someone's face to other photographs of the same

05:15.400 --> 05:18.790
person so it could basically determine who you are.

05:18.880 --> 05:24.550
And it would use really interesting calculations and algorithms to match distance between your eyes

05:24.580 --> 05:28.480
and your mouth and is really good even doing it like angles and things like that.

05:28.480 --> 05:33.910
So now face dot com is actually integrated into Facebook I'm sure you use Facebook and that's the technology

05:33.910 --> 05:37.080
they actually use to match your face into auto tag.

05:37.350 --> 05:42.250
So faced don't call them is a great example of a something you could not outsource if you're trying

05:42.250 --> 05:46.870
to compete with these dot com and you wanted to make a system that could match people's faces again

05:47.140 --> 05:53.680
core reason why your application or your product succeeds or fails and the reason why consumers use

05:53.680 --> 05:58.630
it is whether or not it can match your face and do that well and that's something that's constantly

05:58.630 --> 06:03.230
going to need improvement and constantly going to need to have tinkering with.

06:03.250 --> 06:08.800
I bring that one up because at Sprint we were actually asked after face to face dotcom got bought to

06:08.800 --> 06:12.580
build an alternative to dot com.

06:12.590 --> 06:17.200
That's why don't we realize it's one of those things that would be impossible if you had an external

06:17.200 --> 06:20.950
organization or external freelancer or build for yourself.

06:20.960 --> 06:28.240
Now the core reason why these are bad situations for outsourcing is because when you outsource you're

06:28.270 --> 06:33.880
not only going to have a communication gap you're also going to have a relay process.

06:34.030 --> 06:39.180
Something's wrong you notice it you tell your contractor there's always a delay.

06:39.190 --> 06:45.960
And the more delays you have the harder and slower it'll take to make constant updates and iteration.

06:45.970 --> 06:52.630
So if the core technology constantly needs to change and it's very advanced that is something that would

06:52.630 --> 07:00.160
very much suffer from being in a vendor purchaser kind of relationship a contractor entrepreneur or

07:00.160 --> 07:01.400
company relationship.

07:01.450 --> 07:07.690
And this brings me to the third thing I always ask people how will your business crumble if what you're

07:07.690 --> 07:09.760
outsourcing does not work.

07:09.970 --> 07:13.690
Now it's really just kind of like the Jenga theory right.

07:13.960 --> 07:19.570
If I remove this tiny little piece whatever come crashing down and that's a very important question

07:19.570 --> 07:25.180
to ask yourself when you outsource and this applies not only to web application mobile application development

07:25.340 --> 07:31.180
it of applies to promotion it applies to advertising as SEO work PR.

07:31.210 --> 07:34.210
Any of those auxillary services accounting for example.

07:34.210 --> 07:39.880
Now if you know if you had a situation where it was done poorly came late would that seriously hurt

07:39.940 --> 07:42.290
your organization and not just inconvenience.

07:42.310 --> 07:46.570
Because if you have inefficiencies in any department of your company or your business or whatever you're

07:46.570 --> 07:49.990
doing that can affect other departments.

07:49.990 --> 07:50.800
I'm talking about.

07:50.800 --> 07:52.840
Will the will the curtain come down.

07:52.840 --> 07:59.860
Will everything come to a close if this is not delivered on time correctly if that's the case that is

07:59.860 --> 08:04.710
something you should probably think about doing in-house hiring in-house or figuring out to do yourself.

08:04.870 --> 08:07.220
Not to say that you can't do it outsourced.

08:07.390 --> 08:12.050
It's just typically one of those cases were I when I hear that I say that's a little bit more risky.

08:12.130 --> 08:18.700
The last thing I usually like to ask people is what you're building a first of a kind in technology

08:19.120 --> 08:21.430
meaning I'm building something.

08:21.430 --> 08:23.230
It's never been done before.

08:23.320 --> 08:25.120
And that's what I'm going to go forward with.

08:25.120 --> 08:28.110
That is typically not something that you want to outsource.

08:28.210 --> 08:33.670
Now if you're trying to build a social network for let's say moms OK and you're saying that's never

08:33.670 --> 08:34.580
been done before.

08:34.600 --> 08:35.870
That's not what I'm talking about.

08:36.010 --> 08:39.520
I'm talking about the core technology of your service or your product.

08:39.520 --> 08:44.480
Has that been done before of course social networking has been done it's been done a hundred times.

08:44.560 --> 08:48.200
I'm talking about is what makes your whole thing work.

08:48.220 --> 08:52.900
What makes it so valuable is that something that has been done before.

08:52.900 --> 08:56.590
Now the reason why I say this is because outsourcing and one of the tricks we're going to teach you

08:56.590 --> 09:03.790
in this course is using comparable services and comparable functions to not only make your communication

09:03.790 --> 09:08.200
more efficient but also to reduce the price of your application or whatever you're getting done.

09:08.200 --> 09:15.010
Now if it's never been done before then it's one of those cases where you can't actually show the comparable

09:15.010 --> 09:17.130
function and somewhere else to a developer.

09:17.200 --> 09:20.210
So you don't have to destroy it from scratch.

09:20.230 --> 09:26.590
Now that in and of itself is not really the biggest problem the biggest problem is the estimate process.

09:26.590 --> 09:30.880
Now if you came to spread Kagan said hey I want to build something that's never been done before.

09:30.880 --> 09:32.900
How long is it going to take you to build.

09:32.920 --> 09:35.390
That's almost an impossible question to ask.

09:35.500 --> 09:35.910
Why.

09:35.920 --> 09:37.210
Because we have to research it.

09:37.210 --> 09:43.210
We have to develop new techniques and it's impossible to tell how long it's going to take us to research

09:43.540 --> 09:45.700
how complex this ends up being.

09:45.820 --> 09:49.810
And when we're going to arrive at this kind of eureka moment where everything clicks together and then

09:49.810 --> 09:50.590
we build it.

09:50.620 --> 09:56.980
So I say it's a bad idea for outsourcing because what ends up happening is you know it could be 10 percent

09:56.980 --> 10:02.620
of the time you pay for is actually spent building it and 90 percent of the time could be researching

10:02.620 --> 10:02.740
it.

10:02.740 --> 10:05.800
So it's a very inefficient way of doing it.

10:05.800 --> 10:12.290
It's also a problem then when you're outsourced vendor outsourced company they're the ones that have

10:12.290 --> 10:14.090
the know how and how to build this.

10:14.090 --> 10:18.980
So now if you're planning on having a long term relationship with an outsourced or contracted company

10:19.250 --> 10:20.760
that's perfectly fine then right.

10:20.780 --> 10:24.380
But if this is something you're just doing to get your business off the ground you might have issues

10:24.380 --> 10:25.280
later down the road.

10:25.280 --> 10:27.860
Now on the flip side what are good things to outsource.

10:27.860 --> 10:29.960
Well actually make it's pretty simple.

10:29.960 --> 10:36.130
It's quite literally everything that didn't fit into the other four categories that I just came up with.

10:36.410 --> 10:41.070
Typically things that are good for outsourcing are things that you've seen be built before.

10:41.360 --> 10:45.980
It's you know web application development it's mobile application development promotion it's testing

10:45.980 --> 10:52.820
it's marketing it's really any type of process that you can define relatively well and you want to save

10:52.820 --> 10:57.170
money on really the skies kind of the limit when it comes to what you can do with outsourcing.

10:57.170 --> 11:01.790
I'm always amazed every time I see outsourced firms and what they're building and how they're getting

11:01.790 --> 11:07.850
more and more integrated into modern companies today I'm obviously a huge fan of outsourcing and that's

11:07.850 --> 11:12.500
why I'm creating this course and that's why I think it's something that everybody can benefit from it's

11:12.500 --> 11:17.930
going to almost immediately once you develop the skills and this course help you save money save time

11:17.930 --> 11:19.660
get your projects done faster.

11:19.700 --> 11:23.420
But it's obvious that there are some situations where it's not worth doing.

11:23.420 --> 11:26.720
You can't outsource 100 percent of everything you do.

11:26.930 --> 11:31.850
And that's typically because something in your business or your project or your entrepreneurial idea

11:32.300 --> 11:36.130
is going to fall on on those four no no categories that I just brought up.

11:36.190 --> 11:36.540
OK.

11:36.560 --> 11:41.510
So when you're evaluating your project for building out keep this in mind think about whether or not

11:41.510 --> 11:43.710
it matches any of those four criteria.

11:43.730 --> 11:44.630
Any other questions.

11:44.630 --> 11:51.020
There are obviously other ways other you know things that would prevent you from outsourcing this effectively.

11:51.020 --> 11:56.590
These are just the big four that I think are the trickiest to kind of figure how.

11:56.750 --> 12:00.830
And they're the ones that I've seen happen to people over and over and over again even seasoned veterans

12:00.830 --> 12:01.300
so.

12:01.490 --> 12:11.550
See you guys in the next lecture.
