WEBVTT

00:05.770 --> 00:11.030
I thought it would be worth it to talk a little bit more about the tools that you need with regards

00:11.030 --> 00:12.320
to mobile.

00:12.320 --> 00:14.740
Previously I talked about you need for a web.

00:14.840 --> 00:20.000
I still think you need the Pohlman d'Oro or some kind of a timer app to stay focused.

00:20.030 --> 00:24.590
You're also still going to need google docs so that you can type out all of the bugs that you run into

00:25.200 --> 00:31.640
the demands of that mobile is that you also need mobile devices that can be tricky depending on what

00:31.700 --> 00:34.120
environment you built your application for.

00:34.400 --> 00:39.020
If you build it for iPhone and Android then I think you ignored some of the advice I had earlier in

00:39.020 --> 00:45.490
the course where I said stick to one or try to minimize your launch so you can minimize the cost upfront

00:45.530 --> 00:46.880
to validate your idea.

00:47.090 --> 00:51.370
You know if you're super confident what you can do then yes you can launch for two regardless.

00:51.450 --> 00:57.650
In either case you'll find this information somewhat useful if you're trying to test for an iPhone app.

00:57.650 --> 01:04.580
The number one thing you need to do is you need to have test flight the is that your developer if they

01:04.580 --> 01:12.380
are an iPhone developer they should be more than acquainted with Tesfaye allows you to launch applications

01:12.380 --> 01:15.570
to private parties without sending it to the App Store.

01:15.770 --> 01:21.860
When you submit an application to the App Store it can take anywhere from two days to three weeks for

01:21.860 --> 01:22.730
it to get approved.

01:22.730 --> 01:23.580
That's insane.

01:23.600 --> 01:25.730
Just to get the first version out to bug testing.

01:25.790 --> 01:27.190
So you don't want to do that.

01:28.030 --> 01:29.090
Test flight.

01:29.140 --> 01:32.310
It's a great system for uploading small packages.

01:32.320 --> 01:35.020
You can send it to your friends and family and everyone can download it.

01:35.020 --> 01:40.360
They can all participate in the bug hunting and it will also help you keep track of versions so you

01:40.360 --> 01:45.190
can upload a version save it download it and then every time they have a new version they can upload

01:45.190 --> 01:48.990
it and you can always revert backwards and then download an older version.

01:49.000 --> 01:52.810
If something's screwed up that's a great system you've got back by Apple.

01:52.810 --> 01:55.080
Great great great past that.

01:55.100 --> 02:01.790
What I'd suggest using is make sure for iPhone that you have the three main resolutions you don't need

02:01.790 --> 02:04.020
to worry about iPhone 3 anymore.

02:04.280 --> 02:08.430
If you want to do a good job at this you should have access to at least two of them.

02:08.480 --> 02:14.510
Hopefully you have five and you have a six at the point which I'm speaking right now five is the biggest

02:14.870 --> 02:18.820
and six is up and coming but obviously you need four or five and six.

02:18.830 --> 02:21.110
I know a lot of people who still use force.

02:21.410 --> 02:23.800
So if you can access those three it's pretty easy.

02:23.800 --> 02:28.940
You just got to do the same testing and all three and do the same kind of Pomodoro just run a test on

02:28.940 --> 02:33.960
each one see if there's something you notice that exists on law that doesn't exist on the other now

02:33.970 --> 02:37.270
be built an Android app you don't use test flight.

02:37.270 --> 02:42.760
Just ask your developer what they prefer to use to send you development packages.

02:42.760 --> 02:49.720
Hopefully in either case your Android or iPhone ask them for an o t a package meaning over the air meaning

02:49.720 --> 02:51.160
you just go to a Web site and download it.

02:51.160 --> 02:54.520
You don't have to call it on your computer and plug in your phone.

02:54.520 --> 02:56.010
It's just unnecessary.

02:56.070 --> 02:58.390
Hopefully developer knows how to do that in the studio.

02:58.390 --> 02:59.840
They definitely know how to do that.

03:00.780 --> 03:02.450
If he built an Android app.

03:02.450 --> 03:03.430
God help you.

03:03.440 --> 03:06.760
There are so many different resolutions you need to test.

03:06.800 --> 03:13.340
You used to be that there where you know four or five Android resolutions back when there is only one

03:13.400 --> 03:14.460
iPhone resolution.

03:14.480 --> 03:16.700
But it's really exploded.

03:16.700 --> 03:20.550
I think it's unrealistic that you're going to test this on every single resolution.

03:20.570 --> 03:27.350
There are one Web site that are often refer to they list after there are four thousand distinct devices

03:27.590 --> 03:32.670
and I don't even know how many resolutions there are hundreds is my guess.

03:33.340 --> 03:40.010
I think with Android it's the case that you can capture 70 percent of the market in probably three resolutions.

03:40.060 --> 03:41.380
I want you to keep it simple.

03:41.380 --> 03:42.900
Just stay realistic.

03:43.090 --> 03:44.720
It's unrealistic think you're in a test.

03:44.720 --> 03:46.980
Fifteen different Android screens.

03:47.050 --> 03:48.540
Stick with the basics.

03:48.700 --> 03:50.770
And I call this the galaxy test.

03:50.800 --> 03:56.200
The galaxies are aligned by Samsung that are very popular amongst Android users.

03:56.200 --> 03:58.700
They have the most popular resolutions.

03:58.740 --> 04:04.630
So the way you do this is you follow the resolution of the Galaxy S one galaxy s one is a hundred by

04:04.710 --> 04:06.060
480 pixels.

04:06.130 --> 04:08.740
You skipped the two because of the same size as the one.

04:08.740 --> 04:09.900
Go to this three.

04:09.990 --> 04:16.240
That's 12 80 by 720 and then asked for is 1920 by 10 80.

04:16.570 --> 04:18.850
Those are the resolutions you want to test for.

04:18.850 --> 04:24.580
So your best shot is to try to get some kind of Android phone that matches hopefully two of those three.

04:24.610 --> 04:29.770
Obviously when you build your application will ask you specifically what resolutions you want and if

04:29.770 --> 04:31.700
they don't ask you to please tell them.

04:31.820 --> 04:33.400
And if you want to keep the costs low.

04:33.400 --> 04:36.090
Pick one or two or pick three.

04:36.100 --> 04:40.670
These are the three that I think and in my experience are the best to follow.

04:40.810 --> 04:45.670
They are the most common but they're also the most easily adaptable to other screen resolutions because

04:45.670 --> 04:48.760
they're all kind of based off of a similar grid to these.
