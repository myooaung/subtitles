1
00:00:01,940 --> 00:00:02,790
In this demo,

2
00:00:02,790 --> 00:00:07,240
we are going to create the back end for our task manager application.

3
00:00:07,240 --> 00:00:09,570
From the AWS management console, first,

4
00:00:09,570 --> 00:00:11,550
we need to navigate to the AppSync service.

5
00:00:11,550 --> 00:00:15,380
We can quickly find it by searching for it.

6
00:00:15,380 --> 00:00:21,540
Let's start by creating a new API using the Create API button.

7
00:00:21,540 --> 00:00:24,840
We have a couple of options for creating our API.

8
00:00:24,840 --> 00:00:26,680
We can create it using the wizard.

9
00:00:26,680 --> 00:00:31,640
Also, we can import an API definition from existing DynamoDB tables,

10
00:00:31,640 --> 00:00:36,470
which will create the appropriate API definition for managing data in the table.

11
00:00:36,470 --> 00:00:39,240
Or we can build it from scratch.

12
00:00:39,240 --> 00:00:42,280
Building from scratch is useful when we have our schema definition,

13
00:00:42,280 --> 00:00:45,020
and we want to use that. For this demo, we are going

14
00:00:45,020 --> 00:00:46,720
to create an API using the wizard.

15
00:00:46,720 --> 00:00:51,930
So let's start the API creation using the Start button. For our API,

16
00:00:51,930 --> 00:00:53,490
we need to create a model.

17
00:00:53,490 --> 00:00:57,740
The model will determine what types of queries the wizard should create for us.

18
00:00:57,740 --> 00:01:06,140
Let's start by giving it a name. For this demo, let's name it GlobomanticsTasks.

19
00:01:06,140 --> 00:01:10,640
We already have two fields predefined for us, an ID and a title.

20
00:01:10,640 --> 00:01:14,440
We are going to need the ID field as this is going to be our primary key.

21
00:01:14,440 --> 00:01:16,480
The type of the primary key is ID,

22
00:01:16,480 --> 00:01:19,530
which is what AppSync uses to define our primary keys.

23
00:01:19,530 --> 00:01:22,540
We need to make this field required as we can't have our primary key

24
00:01:22,540 --> 00:01:27,740
being empty. Here, we also have an option for list. The list checkbox

25
00:01:27,740 --> 00:01:30,840
determines if the property holds the list.

26
00:01:30,840 --> 00:01:34,270
Types that are marked as lists can hold multiple values.

27
00:01:34,270 --> 00:01:39,040
For example, if our task table had a field for categories,

28
00:01:39,040 --> 00:01:43,640
then we would mark this as list, and then here we could add multiple values.

29
00:01:43,640 --> 00:01:46,940
Next, we have the title field, which is of type string.

30
00:01:46,940 --> 00:01:51,040
Our tasks will have a field for title, and the type will be string.

31
00:01:51,040 --> 00:01:53,710
We also need to mark it as required since the title for

32
00:01:53,710 --> 00:01:56,540
a task has to be always supplied.

33
00:01:56,540 --> 00:02:01,530
Now let's add another field for the task description. Let's name it

34
00:02:01,530 --> 00:02:06,480
description, and we'll leave the type as string. And then, we will not

35
00:02:06,480 --> 00:02:09,870
mark this as required as the task description will not be required

36
00:02:09,870 --> 00:02:13,940
from our application. And finally, we'll add another field for date.

37
00:02:13,940 --> 00:02:19,150
This will contain the date when the task was created. Let's name it

38
00:02:19,150 --> 00:02:28,040
date. And from the list of types, let's choose Date.

39
00:02:28,040 --> 00:02:33,540
This field is also going to be required, so we need to check the required field.

40
00:02:33,540 --> 00:02:35,660
And this is all the fields that we are going to

41
00:02:35,660 --> 00:02:38,240
need for test manager application.

42
00:02:38,240 --> 00:02:40,850
We also have a section for configuring model table,

43
00:02:40,850 --> 00:02:45,930
which is optional. Here, we can define the table name. By default, it will

44
00:02:45,930 --> 00:02:49,940
create it as the model name and append the value table after it.

45
00:02:49,940 --> 00:02:52,090
And as our primary key,

46
00:02:52,090 --> 00:02:55,270
it will choose the ID field. Fields that are marked as

47
00:02:55,270 --> 00:02:57,740
list cannot be used as primary keys.

48
00:02:57,740 --> 00:03:00,150
We can also add additional indexes.

49
00:03:00,150 --> 00:03:03,600
These will heavily depend on the requirement of your application and how

50
00:03:03,600 --> 00:03:06,740
the data will be queried. Our table is a simple one,

51
00:03:06,740 --> 00:03:09,270
and we will not need additional indexes.

52
00:03:09,270 --> 00:03:13,740
Now let's create our backâ€‘end API using the Create button.

53
00:03:13,740 --> 00:03:15,840
And finally, we need to give it a name.

54
00:03:15,840 --> 00:03:28,000
Let's name it GlobomanticsTaskManager and create our API using the Create button. We'll explore the newly created API in the next clip.

