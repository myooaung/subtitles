WEBVTT
1
00:00:02.240 --> 00:00:03.070
In this module,

2
00:00:03.070 --> 00:00:07.270
we learned what AWS AppSync was, and how we can use

3
00:00:07.270 --> 00:00:12.240
it to quickly create flexible, secure, and scalable APIs for our applications.

4
00:00:12.240 --> 00:00:15.960
We went over creating and configuring AppSync APIs for our test manager

5
00:00:15.960 --> 00:00:21.440
application, and storing data into our DynamoDB tables. We explored the GraphQL

6
00:00:21.440 --> 00:00:26.120
Schema generated by the AWS console reserve, and we looked at the different

7
00:00:26.120 --> 00:00:31.140
options that are provided by AppSync APIs for creating our backend applications.

8
00:00:31.140 --> 00:00:34.940
Using AppSync backend, we learned how to build a client application that queries

9
00:00:34.940 --> 00:00:40.420
and and mutates data using GraphQL, so, we can build the frontend for our task

10
00:00:40.420 --> 00:00:41.940
manager application.

11
00:00:41.940 --> 00:00:46.470
We learned how to customize the AppSync resolvers, so, we can map and

12
00:00:46.470 --> 00:00:50.790
enter the data coming in from our client application. This way, we

13
00:00:50.790 --> 00:00:54.410
did some changes to the data and some preprocessing before we stored

14
00:00:54.410 --> 00:00:57.040
it into our DynamoDB tables.

15
00:00:57.040 --> 00:00:57.750
Finally,

16
00:00:57.750 --> 00:01:01.130
we protected our apps in the API endpoint using Amazon Cognito user

17
00:01:01.130 --> 00:01:05.040
pools, so only authenticated users can use our API.

18
00:01:05.040 --> 00:01:07.840
I hope this has given you an understanding on how AppSync

19
00:01:07.840 --> 00:01:10.940
works, and what it brings to the table.

20
00:01:10.940 --> 00:01:14.160
You can start by putting this knowledge to use by creating your own

21
00:01:14.160 --> 00:01:20.000
AppSync backends for your client applications. Thank you for watching.

