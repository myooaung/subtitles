WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:02.120 --> 00:00:04.590
Throughout this section, we've collected

00:00:04.590 --> 00:00:07.590
various DOM elements using different methods.

00:00:07.590 --> 00:00:10.020
We've selected DOM elements by class name,

00:00:10.020 --> 00:00:13.350
by ID, and also using the query selector.

00:00:13.350 --> 00:00:16.200
When we selected multiple elements at the same time,

00:00:16.200 --> 00:00:20.790
we also got back either a HTML collection or a NodeList.

00:00:20.790 --> 00:00:23.070
As promised earlier, we're now going to

00:00:23.070 --> 00:00:25.455
take a look at the difference between the two.

00:00:25.455 --> 00:00:27.210
Generally speaking, it often

00:00:27.210 --> 00:00:28.710
doesn't matter which one we have.

00:00:28.710 --> 00:00:32.130
Both contain multiple values in an array-like format,

00:00:32.130 --> 00:00:34.290
which we can use how we would like to,

00:00:34.290 --> 00:00:36.510
such as looping over them.

00:00:36.510 --> 00:00:39.300
But if you are interested in the differences,

00:00:39.300 --> 00:00:41.670
we're now going to cover them in this video.

00:00:41.670 --> 00:00:44.840
Jump into this lesson's file and inside of here we have

00:00:44.840 --> 00:00:48.335
an unordered list we do four different list-items.

00:00:48.335 --> 00:00:49.340
If you look closely,

00:00:49.340 --> 00:00:51.230
you'll see the first three list-items

00:00:51.230 --> 00:00:52.910
have the class of list-item,

00:00:52.910 --> 00:00:55.630
and the final one has the class of active.

00:00:55.630 --> 00:00:58.020
This will become important soon,

00:00:58.020 --> 00:01:00.900
inside of the script.js.

00:01:00.900 --> 00:01:03.020
Inside of the script, we'll take a look at how we can

00:01:03.020 --> 00:01:05.750
grab the contents of all of these list items,

00:01:05.750 --> 00:01:07.235
we query selector all,

00:01:07.235 --> 00:01:09.710
and get elements by class name.

00:01:09.710 --> 00:01:12.380
First we'll create a constant called static,

00:01:12.380 --> 00:01:14.210
and we'll see why, in just a moment.

00:01:14.210 --> 00:01:18.800
Set this equal to document.queryselectorall,

00:01:18.800 --> 00:01:20.160
we're going to grab all of

00:01:20.160 --> 00:01:22.275
our list-items and these classes.

00:01:22.275 --> 00:01:24.410
Just like we're seeing inside the HTML,

00:01:24.410 --> 00:01:28.140
we'll grab these with the class of list item.

00:01:28.330 --> 00:01:32.060
After this, create a second constant called live.

00:01:32.060 --> 00:01:33.935
This is equal to document.

00:01:33.935 --> 00:01:35.750
I'm going to grab the same list-items,

00:01:35.750 --> 00:01:39.930
but this time using getElementsByClassName.

00:01:40.640 --> 00:01:43.685
Grab the list items and we don't need the dot

00:01:43.685 --> 00:01:46.675
since we already know we're grabbing the class name.

00:01:46.675 --> 00:01:48.530
Just as a quick refresher,

00:01:48.530 --> 00:01:50.390
if you don't remember from early on,

00:01:50.390 --> 00:01:52.400
when we use the query selector,

00:01:52.400 --> 00:01:55.470
this will return back a node list.

00:01:55.700 --> 00:01:58.250
Make sure this is query selector all

00:01:58.250 --> 00:02:00.170
since we're grabbing multiple items.

00:02:00.170 --> 00:02:02.240
This will return back a node list and when

00:02:02.240 --> 00:02:04.370
we use getElementsByClassName,

00:02:04.370 --> 00:02:07.495
this will return back a HTML collection.

00:02:07.495 --> 00:02:09.555
We can test this, if we do

00:02:09.555 --> 00:02:13.050
a console log for the value of static.

00:02:13.050 --> 00:02:17.785
Duplicate this and the second one is going to be live.

00:02:17.785 --> 00:02:20.480
Refresh with the console open.

00:02:20.480 --> 00:02:23.915
Here is our NodeList and also our HTML collection.

00:02:23.915 --> 00:02:26.730
Both of these does have some similarities and

00:02:26.730 --> 00:02:30.020
the first one is they both have a line of property.

00:02:30.020 --> 00:02:31.695
We can see this, we

00:02:31.695 --> 00:02:36.860
access.length on both of these console logs.

00:02:37.650 --> 00:02:40.225
Refresh and we can see both of these

00:02:40.225 --> 00:02:42.370
has three separate items.

00:02:42.370 --> 00:02:46.000
Also another similarity is if we remove the length,

00:02:46.000 --> 00:02:47.740
we can also use the square brackets to

00:02:47.740 --> 00:02:50.950
access any property by the index number.

00:02:50.950 --> 00:02:54.455
This works for static and also live.

00:02:54.455 --> 00:02:58.475
This will return the single value which was selected.

00:02:58.475 --> 00:03:00.499
But as well as these similarities,

00:03:00.499 --> 00:03:03.265
there is also some key differences too.

00:03:03.265 --> 00:03:06.170
Earlier we talked about something called nodes,

00:03:06.170 --> 00:03:08.930
and said that we can have different types inside the DOM.

00:03:08.930 --> 00:03:10.400
We have element nodes,

00:03:10.400 --> 00:03:11.780
we have attribute nodes,

00:03:11.780 --> 00:03:14.185
and also the text nodes too.

00:03:14.185 --> 00:03:16.220
These are all values which can be

00:03:16.220 --> 00:03:18.875
returned inside of a NodeList.

00:03:18.875 --> 00:03:21.140
With a HTML collection though,

00:03:21.140 --> 00:03:24.125
these can only contain HTML elements.

00:03:24.125 --> 00:03:27.470
Often this is not going to cause any major problems,

00:03:27.470 --> 00:03:29.480
but it can be useful to know.

00:03:29.480 --> 00:03:31.100
Also a clue to the next

00:03:31.100 --> 00:03:32.255
thing we're going to take a look at,

00:03:32.255 --> 00:03:34.105
is the name of these constants.

00:03:34.105 --> 00:03:37.340
A NodeList which we get back with query selector all,

00:03:37.340 --> 00:03:39.440
will return a static collection.

00:03:39.440 --> 00:03:42.260
An HTML collection is considered live.

00:03:42.260 --> 00:03:44.840
What this means is when we update the DOM,

00:03:44.840 --> 00:03:48.490
only live collection is aware of any of the changes.

00:03:48.490 --> 00:03:50.450
To see this test what we're going to do

00:03:50.450 --> 00:03:52.310
if we jump back into our index page,

00:03:52.310 --> 00:03:54.310
is we're going to make our item 4

00:03:54.310 --> 00:03:56.870
have the same class of list item.

00:03:56.870 --> 00:04:00.050
We'll then see which one of these two references to

00:04:00.050 --> 00:04:01.640
the same elements are going to

00:04:01.640 --> 00:04:03.925
be updated inside the console.

00:04:03.925 --> 00:04:05.510
Quickly, just before we do this,

00:04:05.510 --> 00:04:07.610
we'll also move these square brackets.

00:04:07.610 --> 00:04:10.750
Sometimes when we have multiple console logs like these,

00:04:10.750 --> 00:04:12.410
it is easier to wrap both of

00:04:12.410 --> 00:04:15.200
these inside of some curly braces.

00:04:15.200 --> 00:04:18.050
The reason why, if we look at the console at the moment,

00:04:18.050 --> 00:04:20.345
we don't see which one of these is which.

00:04:20.345 --> 00:04:22.490
If we save this and refresh,

00:04:22.490 --> 00:04:26.000
these curly braces will now turn these both into objects,

00:04:26.000 --> 00:04:29.075
which will give us a property name of static and live.

00:04:29.075 --> 00:04:32.725
We can clearly see the difference between these two logs.

00:04:32.725 --> 00:04:34.820
Now let's get back to the task of

00:04:34.820 --> 00:04:37.100
updating the fourth list item element,

00:04:37.100 --> 00:04:39.365
to have the class of list item.

00:04:39.365 --> 00:04:41.920
First we need to grab a reference to this.

00:04:41.920 --> 00:04:45.840
We'll say const, and we'll say active,

00:04:45.840 --> 00:04:50.790
and we'll set this equal to documents.queryselector.

00:04:50.790 --> 00:04:52.730
We'll grab our fourth list item

00:04:52.730 --> 00:04:55.680
which has this class of active.

00:04:58.100 --> 00:05:01.970
Then I'm going to set up a set-timeout function,

00:05:01.970 --> 00:05:03.695
which is going to update this elements

00:05:03.695 --> 00:05:05.970
after a certain period of time.

00:05:05.970 --> 00:05:09.670
Set-timeout takes in a function which is going to run.

00:05:09.670 --> 00:05:13.115
Also just after the function as a second argument,

00:05:13.115 --> 00:05:14.990
we pass in, the time delay.

00:05:14.990 --> 00:05:18.380
After 3,000 milliseconds, which is three seconds,

00:05:18.380 --> 00:05:21.035
we're going to run the contents of this function.

00:05:21.035 --> 00:05:25.255
All we need to do here is to select our active elements,

00:05:25.255 --> 00:05:27.495
drop the class list,

00:05:27.495 --> 00:05:29.915
where we can make use of the add method

00:05:29.915 --> 00:05:31.505
to add a new class.

00:05:31.505 --> 00:05:34.235
The class which you want to add is list-item,

00:05:34.235 --> 00:05:37.465
make this the same as the previous three items.

00:05:37.465 --> 00:05:39.260
Then also inside this function,

00:05:39.260 --> 00:05:41.420
we can move up the two console logs

00:05:41.420 --> 00:05:44.120
and see what happens after we perform the update.

00:05:44.120 --> 00:05:47.000
Save, reload the browser

00:05:47.000 --> 00:05:49.960
and give this three seconds to run the function.

00:05:49.960 --> 00:05:54.270
The static NodeList only has the three original items,

00:05:54.270 --> 00:05:56.570
well the live collection has been updated.

00:05:56.570 --> 00:05:58.130
This also includes the fourth

00:05:58.130 --> 00:06:00.810
item which we've just added.
