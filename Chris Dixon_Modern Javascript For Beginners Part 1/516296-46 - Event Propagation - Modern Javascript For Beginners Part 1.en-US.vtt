WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.400 --> 00:00:04.620
This video is going to look at something important that

00:00:04.620 --> 00:00:07.875
happens behind the scenes when dealing with events.

00:00:07.875 --> 00:00:09.555
Even better, we're going to add

00:00:09.555 --> 00:00:13.050
another event listener over in our startup project.

00:00:13.050 --> 00:00:14.820
Open up the start project,

00:00:14.820 --> 00:00:16.530
which is event propagation,

00:00:16.530 --> 00:00:19.080
and then you'll see inside the browser that we have

00:00:19.080 --> 00:00:22.870
the same project we carried on from the previous video.

00:00:22.870 --> 00:00:25.950
Looking at the recipe section down at the bottom,

00:00:25.950 --> 00:00:27.510
we have our two recipes,

00:00:27.510 --> 00:00:29.010
and we maybe want to extend

00:00:29.010 --> 00:00:31.185
the functionality of the recipes.

00:00:31.185 --> 00:00:33.140
For example, we could click on one and

00:00:33.140 --> 00:00:34.895
then we could expand the recipe.

00:00:34.895 --> 00:00:37.100
We could open this up in a pop-up or

00:00:37.100 --> 00:00:39.940
even redirect the full recipes page.

00:00:39.940 --> 00:00:44.210
We're going to go over to our events.js inside of

00:00:44.210 --> 00:00:46.310
this folder and then simulate this

00:00:46.310 --> 00:00:49.180
by first selecting our recipes.

00:00:49.180 --> 00:00:51.665
Our two recipes, if you remember,

00:00:51.665 --> 00:00:54.335
stored inside of the Article sections.

00:00:54.335 --> 00:00:56.360
We'll begin by grabbing both of

00:00:56.360 --> 00:00:59.665
these articles and storing these inside of a constant.

00:00:59.665 --> 00:01:02.940
Let's set this up. Our constant and we'll say

00:01:02.940 --> 00:01:07.875
recipe titles and set this equal to document,

00:01:07.875 --> 00:01:09.720
and then deselect multiple elements,

00:01:09.720 --> 00:01:14.550
we use query select all passing in our article.

00:01:14.630 --> 00:01:17.920
Now, since this returns back multiple elements,

00:01:17.920 --> 00:01:20.365
we need to loop over our recipe titles,

00:01:20.365 --> 00:01:23.060
and we can do this with a for each loop.

00:01:23.060 --> 00:01:25.240
For each, we'll take in a function which is

00:01:25.240 --> 00:01:27.595
going to run for each of our elements.

00:01:27.595 --> 00:01:29.875
In our case, we have two separate elements.

00:01:29.875 --> 00:01:34.310
We store these inside of a variable called title.

00:01:34.310 --> 00:01:36.310
Now, we're looping over both of

00:01:36.310 --> 00:01:37.750
these articles what we want to

00:01:37.750 --> 00:01:40.705
do is add an event listener to both of these.

00:01:40.705 --> 00:01:42.520
We looked at how to do this previously,

00:01:42.520 --> 00:01:45.415
we first select each individual elements,

00:01:45.415 --> 00:01:47.900
then we can use add event listener.

00:01:47.900 --> 00:01:50.305
This will listen out for a click event

00:01:50.305 --> 00:01:53.485
and then run a function called Redirect.

00:01:53.485 --> 00:01:55.510
Of course, we've not created

00:01:55.510 --> 00:01:57.325
this redirect function that just yet,

00:01:57.325 --> 00:01:59.810
let's create this just above.

00:02:02.390 --> 00:02:06.215
Now, all this you're going to do is to create an alert.

00:02:06.215 --> 00:02:07.985
Let us know this is working.

00:02:07.985 --> 00:02:10.530
We'll say recipe clicked.

00:02:12.320 --> 00:02:15.840
Also, we can pass in the event data.

00:02:15.840 --> 00:02:19.235
Back over to the browser and reload the page.

00:02:19.235 --> 00:02:22.010
Click on any of these articles and this will then

00:02:22.010 --> 00:02:25.080
call our function once done,

00:02:25.080 --> 00:02:27.665
we can try this with the second article too.

00:02:27.665 --> 00:02:29.600
This all works as expected.

00:02:29.600 --> 00:02:32.920
But what about if we tried to click on the Star?

00:02:32.920 --> 00:02:35.925
First of all, we see the title of Ultimate Vegan,

00:02:35.925 --> 00:02:38.165
and we set this up in the previous videos.

00:02:38.165 --> 00:02:40.300
But what about if we click "Okay"?

00:02:40.300 --> 00:02:42.650
Well, we'll then see our second layer,

00:02:42.650 --> 00:02:44.180
which is recipe clicked.

00:02:44.180 --> 00:02:46.595
We may not be expecting this because we did

00:02:46.595 --> 00:02:49.505
click on the Star and not the actual article.

00:02:49.505 --> 00:02:51.740
Well, the reason for this is because of

00:02:51.740 --> 00:02:55.190
various phases which occurred during the event.

00:02:55.190 --> 00:02:57.780
In modern browsers, event handlers will

00:02:57.780 --> 00:03:00.560
do something called bubbling by default.

00:03:00.560 --> 00:03:02.690
If you think of a bubble in water,

00:03:02.690 --> 00:03:04.490
a bubble will always float to

00:03:04.490 --> 00:03:08.020
the top and this is what happens with our events.

00:03:08.020 --> 00:03:10.970
We can see this better if we go into our

00:03:10.970 --> 00:03:15.445
index.html and then find any one of our articles.

00:03:15.445 --> 00:03:17.630
When we trigger an event in the browser,

00:03:17.630 --> 00:03:19.490
such as clicking on an element,

00:03:19.490 --> 00:03:21.260
the bubbling phase will cause it to not

00:03:21.260 --> 00:03:23.060
only set of this click event,

00:03:23.060 --> 00:03:24.440
but will also trigger

00:03:24.440 --> 00:03:27.640
any inside of other parents elements too.

00:03:27.640 --> 00:03:31.460
This is why when we click on this Add button just here,

00:03:31.460 --> 00:03:34.130
it will also bubble up to the parents elements which is

00:03:34.130 --> 00:03:35.615
the article and trigger

00:03:35.615 --> 00:03:38.920
any events associated with this article too.

00:03:38.920 --> 00:03:42.350
Not only this parent article will also keep

00:03:42.350 --> 00:03:45.350
bubbling up to the other parents, such as a div,

00:03:45.350 --> 00:03:46.910
this section and it will keep

00:03:46.910 --> 00:03:48.830
going all the way to the top of the body,

00:03:48.830 --> 00:03:50.930
the HTML, the document

00:03:50.930 --> 00:03:53.575
and then finally the window object.

00:03:53.575 --> 00:03:55.550
It will also trigger any events

00:03:55.550 --> 00:03:57.425
attached to these elements too.

00:03:57.425 --> 00:04:00.035
This bubbling events can be useful.

00:04:00.035 --> 00:04:01.685
For example, rather than add

00:04:01.685 --> 00:04:04.565
an event listener to lots of different child elements,

00:04:04.565 --> 00:04:06.830
we could just add a single event listener to

00:04:06.830 --> 00:04:08.990
a parent's elements and we can

00:04:08.990 --> 00:04:12.035
test this by adding a simple event to the body.

00:04:12.035 --> 00:04:14.990
Let's go up to the opening body section.

00:04:14.990 --> 00:04:17.900
We'll add an inline event handler called

00:04:17.900 --> 00:04:21.545
On-click and set this equal to an alert,

00:04:21.545 --> 00:04:24.765
which is going to output the string of body.

00:04:24.765 --> 00:04:27.215
Now refresh the browser,

00:04:27.215 --> 00:04:29.990
click on any elements will go for our article,

00:04:29.990 --> 00:04:32.600
so we'll see recipe clicked and then also

00:04:32.600 --> 00:04:35.600
our body element has been fired on the way up too.

00:04:35.600 --> 00:04:37.440
To remove this example, we don't need

00:04:37.440 --> 00:04:39.030
this inside of our project,

00:04:39.030 --> 00:04:41.090
but this gives us a good indication

00:04:41.090 --> 00:04:43.565
of what is going on inside the browser.

00:04:43.565 --> 00:04:45.740
There is also the opposite available

00:04:45.740 --> 00:04:49.205
too and this is what is called the capturing phase.

00:04:49.205 --> 00:04:51.200
This begins at the very top,

00:04:51.200 --> 00:04:52.850
which is the window object,

00:04:52.850 --> 00:04:54.740
and then runs all the way down through

00:04:54.740 --> 00:04:56.570
our elements to the bottom by

00:04:56.570 --> 00:04:58.310
running any event which is attached to

00:04:58.310 --> 00:05:00.840
any of the elements on the way.

00:05:00.840 --> 00:05:03.200
This is bubbling and capturing which both

00:05:03.200 --> 00:05:05.350
relate to fire events if on the way

00:05:05.350 --> 00:05:09.520
up or way down and there is also a third term too,

00:05:09.520 --> 00:05:11.250
which is called the Target.

00:05:11.250 --> 00:05:14.720
The target is the actual elements which fires events,

00:05:14.720 --> 00:05:16.100
such as the article event,

00:05:16.100 --> 00:05:18.210
which we just created.

00:05:18.710 --> 00:05:21.220
Knowing that other nested events

00:05:21.220 --> 00:05:22.615
are also triggered on the way up,

00:05:22.615 --> 00:05:24.550
all the way down, this leaves us with

00:05:24.550 --> 00:05:27.295
some different ways for how we want to handle it.

00:05:27.295 --> 00:05:29.980
We may still want all of the events to fire,

00:05:29.980 --> 00:05:32.585
but maybe do the opposite of what we currently have.

00:05:32.585 --> 00:05:34.800
Currently we want to click on our add button,

00:05:34.800 --> 00:05:36.685
this will fire first when clicked on,

00:05:36.685 --> 00:05:39.145
followed by the outer article element.

00:05:39.145 --> 00:05:40.750
We're seeing this by the order of

00:05:40.750 --> 00:05:42.655
the alert inside the browser.

00:05:42.655 --> 00:05:46.295
But we may want to also fire them in the reverse order,

00:05:46.295 --> 00:05:48.010
or maybe we don't want any

00:05:48.010 --> 00:05:49.430
of the events to be fired at all,

00:05:49.430 --> 00:05:52.525
only the events for the elements which we clicked on,

00:05:52.525 --> 00:05:56.120
and is a way to cover both of these situations.

00:05:56.120 --> 00:05:58.180
First of all, we'll take a look at how

00:05:58.180 --> 00:05:59.545
to reverse the order

00:05:59.545 --> 00:06:02.545
in which these events are fired and the way to do this,

00:06:02.545 --> 00:06:03.760
if we just double-check inside

00:06:03.760 --> 00:06:05.440
the browser, when we click on the star,

00:06:05.440 --> 00:06:07.915
we see the title which is ultimate vegan,

00:06:07.915 --> 00:06:10.880
followed by the article event which was recipe clicked.

00:06:10.880 --> 00:06:13.510
This is working inner to outer and we're going to

00:06:13.510 --> 00:06:16.670
reverse this by switching this to the capturing phase.

00:06:16.670 --> 00:06:18.970
Way to do this, is to go inside of

00:06:18.970 --> 00:06:22.510
our events and then inside of our add event listener,

00:06:22.510 --> 00:06:24.730
add a third value separated by

00:06:24.730 --> 00:06:27.770
a comma and we'll set this to be true.

00:06:27.770 --> 00:06:30.295
True will enable the capturing phase

00:06:30.295 --> 00:06:32.140
rather than the default bubbling.

00:06:32.140 --> 00:06:34.150
If we wanted to, we could also

00:06:34.150 --> 00:06:36.250
set this up as an options object,

00:06:36.250 --> 00:06:40.310
where we set the capture to be equal to true.

00:06:40.310 --> 00:06:42.520
Both of these approaches are exactly

00:06:42.520 --> 00:06:44.290
the same and fine to use.

00:06:44.290 --> 00:06:47.110
Alertness to run from the bubbling to

00:06:47.110 --> 00:06:48.970
the capturing phase will mean that

00:06:48.970 --> 00:06:51.010
now if we click on our button,

00:06:51.010 --> 00:06:52.735
which is the add section just here,

00:06:52.735 --> 00:06:55.345
rather than working from the inside to the outside,

00:06:55.345 --> 00:06:58.120
the outside article event will be fired first,

00:06:58.120 --> 00:06:59.890
followed by this art.

00:06:59.890 --> 00:07:01.860
We can try this if we refresh

00:07:01.860 --> 00:07:04.695
the browser, click on the star.

00:07:04.695 --> 00:07:06.730
We first see recipe clicked which

00:07:06.730 --> 00:07:08.935
was associated with the article,

00:07:08.935 --> 00:07:12.385
followed by our span elements just afterwards.

00:07:12.385 --> 00:07:14.530
The overall term for this bubbling

00:07:14.530 --> 00:07:16.480
and the capturing phase is called

00:07:16.480 --> 00:07:18.730
events propagation and we can

00:07:18.730 --> 00:07:21.205
also stop this propagation completely.

00:07:21.205 --> 00:07:23.830
This would mean only the exact element which trigger

00:07:23.830 --> 00:07:26.805
will run rather than overs inside the tree.

00:07:26.805 --> 00:07:29.120
As an example, when we clicked on the start,

00:07:29.120 --> 00:07:31.490
if we only wanted to run the add to favorites

00:07:31.490 --> 00:07:34.495
function rather than the one we just created before,

00:07:34.495 --> 00:07:36.410
we can jump into this function and we

00:07:36.410 --> 00:07:38.345
can access our event information,

00:07:38.345 --> 00:07:39.770
which gives us access to

00:07:39.770 --> 00:07:43.080
a function called Stop Propagation.

00:07:43.330 --> 00:07:46.460
We can also remove the options object from below,

00:07:46.460 --> 00:07:48.925
which sets the capturing phase.

00:07:48.925 --> 00:07:51.080
Refresh the browser and now if we try

00:07:51.080 --> 00:07:52.925
this by clicking on the star,

00:07:52.925 --> 00:07:56.195
we can see just the title of ultimate Vegan is run.

00:07:56.195 --> 00:08:00.280
Click "Okay", we don't see any other events fired.

00:08:00.280 --> 00:08:02.780
This can be pretty complex if this is

00:08:02.780 --> 00:08:05.725
the first time you've been introduced to this thing.

00:08:05.725 --> 00:08:07.310
But the easy way to remember

00:08:07.310 --> 00:08:09.095
is if you have multiple events,

00:08:09.095 --> 00:08:11.570
we have an option where we want to trigger any of

00:08:11.570 --> 00:08:13.895
these events on the parent elements

00:08:13.895 --> 00:08:15.755
or on the child elements,

00:08:15.755 --> 00:08:18.530
or as we've just discovered we can also reverse

00:08:18.530 --> 00:08:20.090
the order and also stop

00:08:20.090 --> 00:08:22.435
any propagation and completely too.

00:08:22.435 --> 00:08:24.560
The reason why we have both the capture and

00:08:24.560 --> 00:08:26.900
the bubbling stages is historic.

00:08:26.900 --> 00:08:30.125
Longtime ago, when browsers were less standardized,

00:08:30.125 --> 00:08:32.360
some browsers used the capturing phase

00:08:32.360 --> 00:08:34.010
and some used bubbling,

00:08:34.010 --> 00:08:36.800
which then led to the current standard where both of

00:08:36.800 --> 00:08:40.320
these are now implemented in modern browsers.
