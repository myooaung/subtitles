WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:02.420 --> 00:00:05.535
Hey. Welcome back to our new section.

00:00:05.535 --> 00:00:07.620
This section is going to be used to create

00:00:07.620 --> 00:00:09.180
some practice projects to

00:00:09.180 --> 00:00:11.430
reinforce what we've learned so far.

00:00:11.430 --> 00:00:13.050
We're going to kick things off

00:00:13.050 --> 00:00:15.000
with a video player project.

00:00:15.000 --> 00:00:17.820
HTML has a native video player with

00:00:17.820 --> 00:00:20.490
controls to play and pause the video.

00:00:20.490 --> 00:00:21.900
But we can also remove

00:00:21.900 --> 00:00:24.780
these controls and create a fully custom player.

00:00:24.780 --> 00:00:26.820
We do this using some properties,

00:00:26.820 --> 00:00:29.700
methods and events which we'll have available.

00:00:29.700 --> 00:00:31.380
Just as a quick preview,

00:00:31.380 --> 00:00:32.900
this is what we're going to be creating and

00:00:32.900 --> 00:00:34.695
this is the final version.

00:00:34.695 --> 00:00:36.690
At the top, we have our video display

00:00:36.690 --> 00:00:38.880
in which is the full width of the browser,

00:00:38.880 --> 00:00:41.020
below we have a progress bar

00:00:41.020 --> 00:00:43.510
and then we have the controls at the bottom.

00:00:43.510 --> 00:00:45.260
As you would expect, we can click on

00:00:45.260 --> 00:00:46.730
the Play button and this will begin

00:00:46.730 --> 00:00:49.910
the video and start things off with the progress bar.

00:00:49.910 --> 00:00:53.060
We can pause, if the video has audio,

00:00:53.060 --> 00:00:55.235
we can also control the volume level

00:00:55.235 --> 00:00:58.310
and also the playback speed can be controlled too.

00:00:58.310 --> 00:01:02.190
We can make this slower, we can speed things up

00:01:02.190 --> 00:01:04.730
and we can also skip through

00:01:04.730 --> 00:01:07.960
the video by going backwards and forwards too.

00:01:07.960 --> 00:01:11.015
To start things off, jump into the stars files.

00:01:11.015 --> 00:01:12.110
I'm going to need to go into the new

00:01:12.110 --> 00:01:13.910
section which is Number 5,

00:01:13.910 --> 00:01:16.355
jump into the video-player project.

00:01:16.355 --> 00:01:18.110
If you open up the index page,

00:01:18.110 --> 00:01:20.495
you'll see we have a pretty basic starter.

00:01:20.495 --> 00:01:22.040
We don't have any content,

00:01:22.040 --> 00:01:23.870
all we're doing here is linking it to

00:01:23.870 --> 00:01:28.015
our style sheets and also our script.js.

00:01:28.015 --> 00:01:29.840
The script is an empty file,

00:01:29.840 --> 00:01:31.789
so we'll create all of this ourselves

00:01:31.789 --> 00:01:34.685
but we do have a headstart with the style sheet.

00:01:34.685 --> 00:01:37.130
This just gives us some basic styling and

00:01:37.130 --> 00:01:40.355
layout so we can focus on the JavaScript.

00:01:40.355 --> 00:01:42.950
Also provided is a video which is

00:01:42.950 --> 00:01:44.930
an MP4 file and this is

00:01:44.930 --> 00:01:47.435
the same one you just seen in the final version.

00:01:47.435 --> 00:01:49.160
But you can also replace this with

00:01:49.160 --> 00:01:51.635
a video of your choice if you prefer,

00:01:51.635 --> 00:01:54.370
everything will work exactly the same.

00:01:54.370 --> 00:01:56.175
Let's start by opening up

00:01:56.175 --> 00:01:58.575
our index page inside the browser,

00:01:58.575 --> 00:02:01.570
copy the path to this file,

00:02:01.790 --> 00:02:04.080
paste this in and as you would expect,

00:02:04.080 --> 00:02:06.640
there's no content yet on the screen.

00:02:06.640 --> 00:02:09.395
We'll begin inside the body section,

00:02:09.395 --> 00:02:12.860
I use the HTML video elements and this

00:02:12.860 --> 00:02:14.360
is a wrapper for the content

00:02:14.360 --> 00:02:16.370
which we're going to place inside.

00:02:16.370 --> 00:02:19.100
If you've used the native video elements

00:02:19.100 --> 00:02:20.930
or even the audio elements,

00:02:20.930 --> 00:02:23.825
this will be pretty familiar, if not,

00:02:23.825 --> 00:02:25.880
video is just a wrapper where we

00:02:25.880 --> 00:02:28.600
provide the source to our video files.

00:02:28.600 --> 00:02:33.335
The source is provided inside with the source elements.

00:02:33.335 --> 00:02:35.870
This doesn't contain any content inside,

00:02:35.870 --> 00:02:37.640
so we just have the single tag.

00:02:37.640 --> 00:02:41.330
We don't need to close it off just like this, instead,

00:02:41.330 --> 00:02:42.395
we use this to provide

00:02:42.395 --> 00:02:44.360
the source to our files which we want to

00:02:44.360 --> 00:02:49.230
play and in our case, it's the video.mp4.

00:02:49.240 --> 00:02:52.250
A second attribute which we can add is

00:02:52.250 --> 00:02:54.740
the video type and in our case,

00:02:54.740 --> 00:02:58.940
this is the type of video and it's an MP4 format.

00:02:58.940 --> 00:03:03.220
The video element does also support other types too.

00:03:03.220 --> 00:03:04.940
Although this will also just add

00:03:04.940 --> 00:03:06.590
some text in place which is

00:03:06.590 --> 00:03:09.845
some fallback text if the video is not supported.

00:03:09.845 --> 00:03:11.930
This is not really a problem nowadays

00:03:11.930 --> 00:03:13.880
since the video player is really well

00:03:13.880 --> 00:03:15.575
supported in all browsers

00:03:15.575 --> 00:03:18.410
but it's worth putting this in, just in case.

00:03:18.410 --> 00:03:23.760
Let's say your browser does not support HTML5 video,

00:03:24.620 --> 00:03:28.360
so initially if we open this up inside the browser,

00:03:28.360 --> 00:03:32.755
refresh the page, we effectively have a still image,

00:03:32.755 --> 00:03:35.020
we can click on this, we can play.

00:03:35.020 --> 00:03:37.510
The way we can do this is to make use of

00:03:37.510 --> 00:03:41.150
the native HTML5 video controls.

00:03:41.150 --> 00:03:43.170
Activate this, it's pretty simple,

00:03:43.170 --> 00:03:44.995
we just go into the video wrapper

00:03:44.995 --> 00:03:47.845
and we add the controls attributes.

00:03:47.845 --> 00:03:51.550
This will enable the default video controls

00:03:51.550 --> 00:03:52.690
which we can now see down at

00:03:52.690 --> 00:03:55.155
the bottom. We can play this.

00:03:55.155 --> 00:03:56.785
We have the elapsed time,

00:03:56.785 --> 00:03:58.430
the total time of the video,

00:03:58.430 --> 00:04:00.340
we have a progress bar and

00:04:00.340 --> 00:04:02.290
we can also control things like the volume,

00:04:02.290 --> 00:04:04.310
we can switch this to be full screen.

00:04:04.310 --> 00:04:06.190
Also, we have some options for

00:04:06.190 --> 00:04:10.580
the playback speed and also to enable picture-in-picture.

00:04:11.270 --> 00:04:14.570
Of course, this is all really good and it's great to have

00:04:14.570 --> 00:04:17.600
a native video player, for our situation,

00:04:17.600 --> 00:04:19.385
it doesn't learn us anything about

00:04:19.385 --> 00:04:21.860
JavaScript.` What I would like to do is

00:04:21.860 --> 00:04:25.220
to remove these native controls by removing the controls

00:04:25.220 --> 00:04:27.635
attribute and recreate these buttons

00:04:27.635 --> 00:04:28.850
to interact with the video,

00:04:28.850 --> 00:04:30.770
play it using JavaScript.

00:04:30.770 --> 00:04:32.990
Where we could do this, if we go over to

00:04:32.990 --> 00:04:37.135
the Mozilla website which is developer.mozilla.org,

00:04:37.135 --> 00:04:40.500
do a search for video.

00:04:40.500 --> 00:04:46.650
This is one minute here. Inside of here,

00:04:46.650 --> 00:04:48.230
we'll see an example which is nothing

00:04:48.230 --> 00:04:50.000
we've already not seen so far.

00:04:50.000 --> 00:04:51.470
We have the video wrapper,

00:04:51.470 --> 00:04:53.210
we have the controls attribute,

00:04:53.210 --> 00:04:56.210
we have the source to our video files and

00:04:56.210 --> 00:04:57.500
then the fallback texts if

00:04:57.500 --> 00:04:59.750
the video player is not supported.

00:04:59.750 --> 00:05:02.120
We have various other attributes such as,

00:05:02.120 --> 00:05:03.560
if you want the video to also

00:05:03.560 --> 00:05:06.710
play and also if we go a little bit further,

00:05:06.710 --> 00:05:09.640
we have access to various events.

00:05:09.640 --> 00:05:12.200
Various events are configured throughout

00:05:12.200 --> 00:05:14.750
the playback of our video, for example,

00:05:14.750 --> 00:05:16.070
looking at this now for events

00:05:16.070 --> 00:05:17.130
when the video is playing,

00:05:17.130 --> 00:05:19.015
for when it's paused and also

00:05:19.015 --> 00:05:22.130
the video progress too as the time updates.

00:05:22.130 --> 00:05:25.430
Also, this video element inherits methods from

00:05:25.430 --> 00:05:29.225
a parent API called HTML media elements.

00:05:29.225 --> 00:05:33.695
Let's do a search for this, scroll this up, HTML,

00:05:33.695 --> 00:05:38.000
media elements and as

00:05:38.000 --> 00:05:40.150
well as these events which we can list now for.

00:05:40.150 --> 00:05:42.350
This media element has properties and

00:05:42.350 --> 00:05:45.710
methods such as the ability to play impulse,

00:05:45.710 --> 00:05:47.900
we can change the volume and we can see

00:05:47.900 --> 00:05:50.255
how long the media has been playing for.

00:05:50.255 --> 00:05:52.820
We can see these if we scroll down a little bit further,

00:05:52.820 --> 00:05:54.665
we'd have various properties.

00:05:54.665 --> 00:05:56.510
We can also toggle the controls

00:05:56.510 --> 00:05:57.905
from here if we wanted to,

00:05:57.905 --> 00:05:59.735
we could check the current time

00:05:59.735 --> 00:06:01.585
of the video as it's playing,

00:06:01.585 --> 00:06:03.530
we can check the duration of the video,

00:06:03.530 --> 00:06:06.095
how long it's for, we can loop the video,

00:06:06.095 --> 00:06:07.715
we can also mute the video,

00:06:07.715 --> 00:06:09.260
and scrolling down we'll also have

00:06:09.260 --> 00:06:11.825
the various methods which we can use too.

00:06:11.825 --> 00:06:13.790
We have some useful methods such

00:06:13.790 --> 00:06:15.440
as the ability to play and pause

00:06:15.440 --> 00:06:17.180
a video and we are going to

00:06:17.180 --> 00:06:19.400
make use of these in our projects.

00:06:19.400 --> 00:06:22.445
Our video elements which we use inside of here has

00:06:22.445 --> 00:06:26.095
access by inheriting all of these properties and methods.

00:06:26.095 --> 00:06:28.085
Of course, regular methods such

00:06:28.085 --> 00:06:29.750
as a dif would not need access

00:06:29.750 --> 00:06:31.400
to these extra methods which

00:06:31.400 --> 00:06:33.470
is why these need to be inherited.

00:06:33.470 --> 00:06:36.260
But why not just attach these extra methods and

00:06:36.260 --> 00:06:39.605
properties directly to these video elements?

00:06:39.605 --> 00:06:42.640
Why do we need to inherit them in the first place?

00:06:42.640 --> 00:06:44.565
We'll have any separate means,

00:06:44.565 --> 00:06:47.135
other elements can also make use of them too.

00:06:47.135 --> 00:06:49.400
Looking at this, other elements such as

00:06:49.400 --> 00:06:51.320
the audio elements can also

00:06:51.320 --> 00:06:53.090
make use of these same methods and

00:06:53.090 --> 00:06:55.720
properties such as play and pause,

00:06:55.720 --> 00:06:58.005
meaning we don't have to duplicate these,

00:06:58.005 --> 00:07:01.910
to add them to both the video and the audio elements.

00:07:01.910 --> 00:07:04.430
Also this HTML media element

00:07:04.430 --> 00:07:06.680
is part of a collection of lots of

00:07:06.680 --> 00:07:09.350
different web APIs which give us

00:07:09.350 --> 00:07:10.940
access to the power of lots of

00:07:10.940 --> 00:07:12.935
amazing things inside the browser.

00:07:12.935 --> 00:07:17.360
In fact, one of these web APIs listed is the DOM API.

00:07:17.360 --> 00:07:19.220
This is the one which we've used in

00:07:19.220 --> 00:07:22.595
the last section to interact with our DOM elements.

00:07:22.595 --> 00:07:24.320
For example, among others,

00:07:24.320 --> 00:07:26.465
that is the HTML canvas elements,

00:07:26.465 --> 00:07:29.270
which enables various drawing functions.

00:07:29.270 --> 00:07:30.710
This is just above.

00:07:30.710 --> 00:07:33.200
It enables to draw inside

00:07:33.200 --> 00:07:36.260
the browser and we'll take a look at this one later too.

00:07:36.260 --> 00:07:39.260
We also have things like the Geolocation API,

00:07:39.260 --> 00:07:41.570
so users can share their location.

00:07:41.570 --> 00:07:42.920
We have drag-and-drop, which

00:07:42.920 --> 00:07:44.180
allows us to move elements on

00:07:44.180 --> 00:07:47.960
the page and drop them into certain locations.

00:07:47.960 --> 00:07:50.150
We're going to use these media properties

00:07:50.150 --> 00:07:51.575
and methods very soon,

00:07:51.575 --> 00:07:54.245
but first we need to create some HTML controls,

00:07:54.245 --> 00:07:56.525
which we're going to use to activate them.

00:07:56.525 --> 00:07:58.220
Let's create these inside of

00:07:58.220 --> 00:08:00.650
the body section, just below the video.

00:08:00.650 --> 00:08:02.450
This will create a new section with

00:08:02.450 --> 00:08:05.190
the class of controls.

00:08:05.230 --> 00:08:07.370
This is just going to trigger

00:08:07.370 --> 00:08:10.730
our CSS and let's open this section up.

00:08:10.730 --> 00:08:13.340
At the very top, we'll begin with a progress bar,

00:08:13.340 --> 00:08:15.200
just like we see in the final version,

00:08:15.200 --> 00:08:16.640
and then we'll create various new

00:08:16.640 --> 00:08:18.720
sections from top to bottom.

00:08:18.720 --> 00:08:22.100
From the top we have the progress bar,

00:08:22.650 --> 00:08:25.180
it's in the value attribute,

00:08:25.180 --> 00:08:27.775
which is going to be initially the value of zero

00:08:27.775 --> 00:08:31.255
and we'll update this value as a video progress updates.

00:08:31.255 --> 00:08:32.920
Next a div section,

00:08:32.920 --> 00:08:34.330
which is going to be the wrapper for

00:08:34.330 --> 00:08:36.225
the Play and Pause buttons.

00:08:36.225 --> 00:08:39.950
The first button detects the play,

00:08:39.950 --> 00:08:41.300
and since this is going to

00:08:41.300 --> 00:08:43.280
be controlled using JavaScript,

00:08:43.280 --> 00:08:45.605
this will need a unique ID.

00:08:45.605 --> 00:08:49.820
This can be Play, and so you kick in our CSS,

00:08:49.820 --> 00:08:52.190
we'll give this here class a round.

00:08:52.190 --> 00:08:55.010
Duplicate this one and change the ID to be

00:08:55.010 --> 00:08:58.470
Pause and also the text too,

00:08:59.290 --> 00:09:03.470
give this a "Save" and "Refresh" the browser.

00:09:03.470 --> 00:09:05.540
Good. Of course, these won't do

00:09:05.540 --> 00:09:07.670
anything just yet because we need to grab these

00:09:07.670 --> 00:09:09.260
using JavaScript and trigger

00:09:09.260 --> 00:09:12.260
all properties and methods which we looked up before.

00:09:12.260 --> 00:09:15.005
The next section is for the volume,

00:09:15.005 --> 00:09:20.150
so just below our last div, we'll create a new one.

00:09:20.150 --> 00:09:22.680
The class of align.

00:09:22.680 --> 00:09:25.690
From left to right, we'll create a span element and

00:09:25.690 --> 00:09:28.300
this is going to be to reduce the volume level,

00:09:28.300 --> 00:09:31.330
so say volume negative in

00:09:31.330 --> 00:09:35.880
the center and input which is going to be a range slider.

00:09:35.880 --> 00:09:39.605
The ID is equal to volume.

00:09:39.605 --> 00:09:41.765
Then we can also control the minimum

00:09:41.765 --> 00:09:44.120
and the maximum values for this input.

00:09:44.120 --> 00:09:45.890
The minimum is going to be equal to

00:09:45.890 --> 00:09:49.970
zero and the max is equal to one.

00:09:49.970 --> 00:09:52.640
This is what we use inside of JavaScript.

00:09:52.640 --> 00:09:54.905
We'll grab the range between zero and one.

00:09:54.905 --> 00:09:57.515
The detected volume is selected by the user.

00:09:57.515 --> 00:10:00.170
We can also jump up from zero to one in

00:10:00.170 --> 00:10:03.155
various stages and we can do this with this step,

00:10:03.155 --> 00:10:06.470
which is going to be equal to 0.1.

00:10:06.470 --> 00:10:09.635
This means that each time we move this circle across,

00:10:09.635 --> 00:10:12.470
this will jump in 0.1 increments,

00:10:12.470 --> 00:10:15.210
basically giving us 10 steps.

00:10:15.220 --> 00:10:17.540
After this, just below

00:10:17.540 --> 00:10:19.310
a second span elements and

00:10:19.310 --> 00:10:21.650
this one is to increase volume.

00:10:21.650 --> 00:10:24.770
We'll say volume plus. There we are.

00:10:24.770 --> 00:10:27.380
The next section is for these playback speeds,

00:10:27.380 --> 00:10:30.050
so this is going to be various buttons which goes

00:10:30.050 --> 00:10:33.575
from 0.5 up to a double speed.

00:10:33.575 --> 00:10:37.920
To keep this consistent place in a div,

00:10:39.010 --> 00:10:41.300
and the first button is going to be for

00:10:41.300 --> 00:10:44.210
the playback speed of 0.5,

00:10:44.210 --> 00:10:47.615
the class of speed,

00:10:47.615 --> 00:10:51.695
and then copy and paste this three more times.

00:10:51.695 --> 00:10:53.690
This is going to be for one,

00:10:53.690 --> 00:10:55.730
which is the regular playback speed,

00:10:55.730 --> 00:11:00.290
1.5, and then double our regular speed.

00:11:00.290 --> 00:11:03.815
The last section, again inside of a div,

00:11:03.815 --> 00:11:07.530
this is going to be for our back and our forward buttons.

00:11:07.690 --> 00:11:10.910
Last button, we can use some HTML entities to

00:11:10.910 --> 00:11:13.655
get these left and the right directions.

00:11:13.655 --> 00:11:20.420
Entity for the first one is &#10226;

00:11:20.420 --> 00:11:22.310
grab this inside of JavaScript with

00:11:22.310 --> 00:11:24.290
a unique ID which will be equal to

00:11:24.290 --> 00:11:29.130
back and also the class of skip.

00:11:30.100 --> 00:11:32.840
Duplicate this, and this is for forward.

00:11:32.840 --> 00:11:34.565
We'll use the same class,

00:11:34.565 --> 00:11:36.080
where the entity is the &#10227;

00:11:36.080 --> 00:11:43.475
and this will give us the Forward icon.

00:11:43.475 --> 00:11:46.340
Let's try this. "Refresh" and

00:11:46.340 --> 00:11:49.250
our control is now complete inside the browser.

00:11:49.250 --> 00:11:51.440
Of course, they won't do anything because they are

00:11:51.440 --> 00:11:53.675
just regular HTML elements.

00:11:53.675 --> 00:11:56.645
We need to control these inside of our script.

00:11:56.645 --> 00:11:59.420
Let's jump into our script and we can grab each one

00:11:59.420 --> 00:12:02.510
of these elements with their unique ID.

00:12:02.510 --> 00:12:05.015
Open up our scripts

00:12:05.015 --> 00:12:06.845
and as well as accessing

00:12:06.845 --> 00:12:08.660
each one of these controls buttons,

00:12:08.660 --> 00:12:11.810
we also need a reference to our actual video.

00:12:11.810 --> 00:12:14.090
Need a reference to all video elements or

00:12:14.090 --> 00:12:16.190
the wrapper because these elements

00:12:16.190 --> 00:12:17.930
can access all the properties,

00:12:17.930 --> 00:12:19.565
methods, and events which are

00:12:19.565 --> 00:12:21.635
going to allow us to control the player.

00:12:21.635 --> 00:12:28.745
The document.querySelector, pass in the video.

00:12:28.745 --> 00:12:31.730
We'll do the same for each one of our controls.

00:12:31.730 --> 00:12:33.680
We need to access our progress bar because

00:12:33.680 --> 00:12:35.570
we need to update this with JavaScript,

00:12:35.570 --> 00:12:37.565
we need to access the play and pause.

00:12:37.565 --> 00:12:39.680
We want to access the volume input,

00:12:39.680 --> 00:12:41.630
all of the different speed buttons,

00:12:41.630 --> 00:12:44.405
and finally the back and the forward buttons.

00:12:44.405 --> 00:12:46.430
We'll do this from top to bottom.

00:12:46.430 --> 00:12:49.230
The next one is for the progress bar

00:12:49.690 --> 00:12:53.130
and we use the query selector.

00:12:56.650 --> 00:13:00.420
Next we have the play and pause buttons.

00:13:03.280 --> 00:13:06.545
This one is an ID, we use the hash,

00:13:06.545 --> 00:13:09.695
the ID of play and let's duplicate this.

00:13:09.695 --> 00:13:12.000
The second one is pause.

00:13:14.530 --> 00:13:16.850
On to the next,

00:13:16.850 --> 00:13:19.325
we need the volume.

00:13:19.325 --> 00:13:22.940
We'll grab the input type with the ID of volume,

00:13:22.940 --> 00:13:28.325
we duplicate this one, change this to volume.

00:13:28.325 --> 00:13:31.460
The next one, if we go back to our Index page,

00:13:31.460 --> 00:13:35.600
is going to be selecting all four of our buttons.

00:13:35.600 --> 00:13:38.315
We don't have an ID for each one of these,

00:13:38.315 --> 00:13:39.620
it'll be a lot simpler if we

00:13:39.620 --> 00:13:41.540
selected these by the class,

00:13:41.540 --> 00:13:44.525
so we can use query selector all to grab these.

00:13:44.525 --> 00:13:46.175
Then in the next video we'll detect

00:13:46.175 --> 00:13:48.395
which button has been selected.

00:13:48.395 --> 00:13:50.390
The next constant is forward

00:13:50.390 --> 00:13:57.750
speed and this time we need to use query selector all,

00:14:00.520 --> 00:14:04.010
use a dot since this is a class,

00:14:04.010 --> 00:14:06.170
and then the final two is for

00:14:06.170 --> 00:14:08.820
our back and our forward buttons.

00:14:11.650 --> 00:14:15.650
This time we are back to the IDs, so we use a hash.

00:14:15.650 --> 00:14:17.765
This is for our back button,

00:14:17.765 --> 00:14:21.300
duplicate this and change this to be forward.

00:14:24.790 --> 00:14:28.250
Good. We're making good progress with this video player.

00:14:28.250 --> 00:14:29.840
We've now added the controls.

00:14:29.840 --> 00:14:32.045
We have access to all of these controls

00:14:32.045 --> 00:14:34.490
through our variables, and in the next video,

00:14:34.490 --> 00:14:36.530
we can start to add events, properties,

00:14:36.530 --> 00:14:40.320
and methods to then control our video player.
