WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:03.020 --> 00:00:06.255
The previous examples we've looked at

00:00:06.255 --> 00:00:09.390
added a event listener to a single element.

00:00:09.390 --> 00:00:11.580
But there may be a time when we want to add

00:00:11.580 --> 00:00:15.135
the same event listener to multiple elements.

00:00:15.135 --> 00:00:17.340
Let's jump into this lesson's file,

00:00:17.340 --> 00:00:20.790
which is listening for multiple events and event data.

00:00:20.790 --> 00:00:23.250
You can take a look at how to do this.

00:00:23.250 --> 00:00:25.680
The example we're going to be using for this is

00:00:25.680 --> 00:00:28.335
down at the bottom of our index page.

00:00:28.335 --> 00:00:29.970
You'll notice with these two

00:00:29.970 --> 00:00:31.560
recipe sections at the bottom,

00:00:31.560 --> 00:00:32.940
I've added a star to

00:00:32.940 --> 00:00:35.760
the top of each one of these articles.

00:00:35.760 --> 00:00:41.070
We can see these if we go down to the bottom of our HTML.

00:00:41.070 --> 00:00:43.050
In each one of these articles,

00:00:43.050 --> 00:00:45.590
we have a span element at the very top.

00:00:45.590 --> 00:00:48.230
This is at the top of both of these articles.

00:00:48.230 --> 00:00:50.210
What we may want to do is to

00:00:50.210 --> 00:00:52.745
add an event listener to each one of these stars,

00:00:52.745 --> 00:00:56.105
which will then add them to a save list of favorites.

00:00:56.105 --> 00:00:58.910
We could also have many more recipes

00:00:58.910 --> 00:01:00.590
listed and we may want to add

00:01:00.590 --> 00:01:03.140
the same event listener to each one of them.

00:01:03.140 --> 00:01:05.300
Selecting each one of these recipes

00:01:05.300 --> 00:01:07.730
individually and adding an event listener

00:01:07.730 --> 00:01:09.480
would take a lot of work.

00:01:09.480 --> 00:01:12.425
Instead, we can use a loop to help with this.

00:01:12.425 --> 00:01:13.970
Over in the sidebar,

00:01:13.970 --> 00:01:17.110
let's go to the events.js file.

00:01:17.110 --> 00:01:19.985
The first thing we need to do inside of the events file

00:01:19.985 --> 00:01:21.410
is to select all these span

00:01:21.410 --> 00:01:23.275
elements which we want to work with.

00:01:23.275 --> 00:01:25.570
In the Index page, we can see that

00:01:25.570 --> 00:01:28.405
these span elements have a class of add.

00:01:28.405 --> 00:01:29.830
We're going to select both of

00:01:29.830 --> 00:01:32.420
these with querySelectorAll.

00:01:32.420 --> 00:01:35.620
Let's do this. We'll store this inside of a

00:01:35.620 --> 00:01:38.650
constant called the addButtons.

00:01:38.650 --> 00:01:43.010
Set this equal to document.querySelectorAll.

00:01:43.250 --> 00:01:46.795
Then we can pass in our query as a string.

00:01:46.795 --> 00:01:50.885
It's a class so use the dot on the class name of add.

00:01:50.885 --> 00:01:54.255
Remember from earlier when we used querySelectorAll,

00:01:54.255 --> 00:01:56.690
is it will return back a HTML collection

00:01:56.690 --> 00:01:59.545
which we can loop over using forEach.

00:01:59.545 --> 00:02:04.010
First, select all of our buttons with addButtons.

00:02:04.010 --> 00:02:06.825
The method which is forEach,

00:02:06.825 --> 00:02:09.440
forEach takes any function to

00:02:09.440 --> 00:02:11.750
run for each one of the elements,

00:02:11.750 --> 00:02:13.340
which is in our collection.

00:02:13.340 --> 00:02:17.285
Therefore, each element also needs a variable name.

00:02:17.285 --> 00:02:20.410
We'll call this button, to keep it simple.

00:02:20.410 --> 00:02:22.505
Then just like we looked at

00:02:22.505 --> 00:02:24.155
above with our single element,

00:02:24.155 --> 00:02:26.795
we can also use addEventListener.

00:02:26.795 --> 00:02:32.135
We can access our button.addEventListener.

00:02:32.135 --> 00:02:33.980
Then inside we're going to listen out for

00:02:33.980 --> 00:02:37.185
a click event separated by a comma.

00:02:37.185 --> 00:02:39.360
We then want to run a function.

00:02:39.360 --> 00:02:41.030
We haven't created a function yet,

00:02:41.030 --> 00:02:42.830
but we'll do this in just a second.

00:02:42.830 --> 00:02:45.720
I'm going to call this addToFavourites.

00:02:45.860 --> 00:02:48.950
This is how we add our event listener

00:02:48.950 --> 00:02:51.260
to each one of the buttons inside of our loop.

00:02:51.260 --> 00:02:54.350
Then we can go ahead and create this function.

00:02:54.350 --> 00:02:57.570
This was addToFavourites.

00:02:59.200 --> 00:03:01.400
Now for now we'll just add a

00:03:01.400 --> 00:03:02.940
test alert to make sure this is all

00:03:02.940 --> 00:03:06.345
working. I will added.

00:03:06.345 --> 00:03:08.870
Say this, and over to the browser,

00:03:08.870 --> 00:03:11.270
down to the bottom, click on our star.

00:03:11.270 --> 00:03:13.490
That's our alert, click on

00:03:13.490 --> 00:03:15.680
some other elements to make sure this isn't working.

00:03:15.680 --> 00:03:17.575
Then we can try our second star.

00:03:17.575 --> 00:03:20.795
This is now added to both of our stars.

00:03:20.795 --> 00:03:23.150
This is how we add an event listener to

00:03:23.150 --> 00:03:26.210
multiple elements but often we may want to also be

00:03:26.210 --> 00:03:28.970
able to tell which one of the elements was actually

00:03:28.970 --> 00:03:30.940
clicked if we were just adding

00:03:30.940 --> 00:03:33.640
some CSS or something very generic.

00:03:33.640 --> 00:03:35.810
It doesn't matter which one we click on.

00:03:35.810 --> 00:03:37.800
But for our particular use case,

00:03:37.800 --> 00:03:40.960
we may want to know exactly which recipe was clicked on.

00:03:40.960 --> 00:03:43.780
Then we could redirect that recipes page and

00:03:43.780 --> 00:03:47.300
also make sure the correct one is added to our favorites.

00:03:47.300 --> 00:03:50.200
The way to do this, along with many other things,

00:03:50.200 --> 00:03:53.005
is by accessing the event data.

00:03:53.005 --> 00:03:56.230
To access our events data inside the function,

00:03:56.230 --> 00:03:58.835
we pass it in as a parameter.

00:03:58.835 --> 00:04:01.075
I'm going to name this variable e,

00:04:01.075 --> 00:04:03.175
but its name is completely up to us,

00:04:03.175 --> 00:04:06.430
but it is common to see it called event or e for short.

00:04:06.430 --> 00:04:08.980
It contains the event object.

00:04:08.980 --> 00:04:11.560
This event object contains a huge amount of

00:04:11.560 --> 00:04:14.610
data which we can access. You'll see this.

00:04:14.610 --> 00:04:17.320
Place in a console log with the value of

00:04:17.320 --> 00:04:20.575
e and remove our [inaudible] for this example,

00:04:20.575 --> 00:04:22.750
and then refresh the browser and open up

00:04:22.750 --> 00:04:26.680
the developer tools into

00:04:26.680 --> 00:04:29.200
the console and click on any of those stars.

00:04:29.200 --> 00:04:30.985
This will then give us access to

00:04:30.985 --> 00:04:33.190
all of the events information.

00:04:33.190 --> 00:04:34.570
Since we've used a mouse,

00:04:34.570 --> 00:04:36.790
this is a pointer event and this will give us

00:04:36.790 --> 00:04:39.790
lots of different information in the form of an object.

00:04:39.790 --> 00:04:41.870
We can see this with the curly braces and we

00:04:41.870 --> 00:04:44.065
have lots of key value pairs.

00:04:44.065 --> 00:04:46.960
For example, we can see the location of the click,

00:04:46.960 --> 00:04:50.095
which is the x and the y-axis.

00:04:50.095 --> 00:04:51.940
We can see something called bubbles,

00:04:51.940 --> 00:04:54.010
which we'll take a look at very soon and

00:04:54.010 --> 00:04:56.890
lots more information regarding this event.

00:04:56.890 --> 00:04:59.930
One of the most commonly used pieces of

00:04:59.930 --> 00:05:03.545
information inside of this event is the target section.

00:05:03.545 --> 00:05:05.540
If we open this up, this gives us

00:05:05.540 --> 00:05:08.330
access to our elements, which we've clicked on.

00:05:08.330 --> 00:05:09.965
In our case, accessing

00:05:09.965 --> 00:05:12.440
e.targets inside of JavaScript would

00:05:12.440 --> 00:05:14.255
access our span elements and

00:05:14.255 --> 00:05:16.610
all the information contained inside.

00:05:16.610 --> 00:05:19.940
But our use case is a little bit more complex.

00:05:19.940 --> 00:05:22.370
If we take a look at the structure

00:05:22.370 --> 00:05:24.995
of our code in our index page,

00:05:24.995 --> 00:05:27.890
what we want to do is to grab the contents for our level

00:05:27.890 --> 00:05:30.940
four heading to add this to our list of favorites.

00:05:30.940 --> 00:05:34.445
But if we're clicking on this span element just here,

00:05:34.445 --> 00:05:35.930
how do we then access

00:05:35.930 --> 00:05:39.250
the information from two lines just below?

00:05:39.250 --> 00:05:43.095
Well, the answer also lies in this target section.

00:05:43.095 --> 00:05:44.955
It's all alphabetical.

00:05:44.955 --> 00:05:47.395
If you scroll down to the p section,

00:05:47.395 --> 00:05:49.330
the first thing we need to do is to step up

00:05:49.330 --> 00:05:51.325
one level to our article.

00:05:51.325 --> 00:05:53.200
This article is the parent wrapper

00:05:53.200 --> 00:05:54.670
for all of this information.

00:05:54.670 --> 00:05:56.200
We can access all of

00:05:56.200 --> 00:05:58.640
these contents inside of parent node.

00:05:58.640 --> 00:06:02.080
We can see the article just here. Open this up.

00:06:02.080 --> 00:06:04.495
This contains, if we scroll down,

00:06:04.495 --> 00:06:08.770
a list of children in the form of a HTML collection.

00:06:08.770 --> 00:06:10.810
Inside the children, we can see we have

00:06:10.810 --> 00:06:13.750
the span elements with the class of add at the top.

00:06:13.750 --> 00:06:15.910
Then our image, our level 4

00:06:15.910 --> 00:06:18.680
heading and then the div down at the bottom.

00:06:18.680 --> 00:06:21.885
We can access all of this object information

00:06:21.885 --> 00:06:25.300
in exactly the same as you would with any other objects.

00:06:25.300 --> 00:06:27.570
Let's go over to our events.

00:06:27.570 --> 00:06:30.545
What we to do is to access the target,

00:06:30.545 --> 00:06:32.150
which is the first section,

00:06:32.150 --> 00:06:35.255
and then the parent node.

00:06:35.255 --> 00:06:38.905
After the parent node came the children.

00:06:38.905 --> 00:06:42.965
Then since the children's section is a HTML collection,

00:06:42.965 --> 00:06:45.575
we access this by the index number.

00:06:45.575 --> 00:06:47.360
Just like with an array, we pass

00:06:47.360 --> 00:06:48.710
in these square brackets,

00:06:48.710 --> 00:06:50.510
and the index number of two,

00:06:50.510 --> 00:06:52.990
which is a level 4 heading.

00:06:52.990 --> 00:06:54.930
Let's save this and check this

00:06:54.930 --> 00:06:56.985
contains our level 4 heading.

00:06:56.985 --> 00:06:58.865
Refresh. Now if we fire

00:06:58.865 --> 00:07:00.965
any of these events with the stars,

00:07:00.965 --> 00:07:04.460
it's going to give us our h4 Spicy bean Burger.

00:07:04.460 --> 00:07:06.845
Our second one, refresh.

00:07:06.845 --> 00:07:09.070
We'll try the Ultimate Vegan.

00:07:09.070 --> 00:07:11.985
Good. We now have the elements which you want.

00:07:11.985 --> 00:07:14.050
Now we can drill down into this and

00:07:14.050 --> 00:07:16.495
select the name with our inner text.

00:07:16.495 --> 00:07:23.825
So children.innerText. Try this again.

00:07:23.825 --> 00:07:26.110
Click on the stars and this will then reveal

00:07:26.110 --> 00:07:29.270
the text for each one of our recipes.

00:07:29.270 --> 00:07:31.690
This is a pretty long way to

00:07:31.690 --> 00:07:33.760
get the recipe name which you want to,

00:07:33.760 --> 00:07:36.250
but sometimes to get the correct information,

00:07:36.250 --> 00:07:38.110
we just have to keep digging into

00:07:38.110 --> 00:07:41.495
the object to get the information which we need.

00:07:41.495 --> 00:07:44.695
I'm not going to build a favorites list for this project,

00:07:44.695 --> 00:07:47.025
but this is how we could go about it.

00:07:47.025 --> 00:07:49.970
You could grab the name for each one of these burgers and

00:07:49.970 --> 00:07:53.380
then push it to an array or even a database.

00:07:53.380 --> 00:07:56.510
One of the pieces of information we also see in

00:07:56.510 --> 00:07:59.990
inside of the event object was something called bubbles.

00:07:59.990 --> 00:08:02.030
This is what we're going to take a look at in

00:08:02.030 --> 00:08:03.500
the upcoming videos when we

00:08:03.500 --> 00:08:06.660
discover all about events propagation.
