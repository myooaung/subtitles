WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:11.300
way Want tohave on the sales were the sales amount is between $5000 on $6000.

00:00:11.300 --> 00:00:12.270
Obviously,

00:00:12.270 --> 00:00:15.010
we need to give a more complex quiet.

00:00:15.010 --> 00:00:16.950
So let's go and create a new one.

00:00:16.950 --> 00:00:21.150
And then let's call it US x 06 start Js.

00:00:21.150 --> 00:00:35.530
So the quite it would look something like db dot sales don't find on the field that we want

00:00:35.530 --> 00:00:36.270
to test.

00:00:36.270 --> 00:00:38.850
Is sales underscore amount?

00:00:38.850 --> 00:00:47.930
It is good to then r equals toe fighters and and then we also want to specify that it is

00:00:47.930 --> 00:00:49.650
less than or equal to 6000.

00:00:49.650 --> 00:00:53.750
So obviously we have to give multiple conditions at this time.

00:00:53.750 --> 00:00:57.050
So the quiet go something like this to David art sales start,

00:00:57.050 --> 00:01:04.630
find and we'll set dollar on and which is an array off one or more conditions and the

00:01:04.630 --> 00:01:07.320
conditions are themselves objects.

00:01:07.320 --> 00:01:09.880
Where will they sales underscore?

00:01:09.880 --> 00:01:16.330
Amount greater than r equals to 5000.

00:01:16.330 --> 00:01:20.410
This is one condition and then a similar condition.

00:01:20.410 --> 00:01:25.600
Where we say sell someone is less than r equals toe 6000.

00:01:25.600 --> 00:01:32.310
So there's gonna be lt So we save it on,

00:01:32.310 --> 00:01:33.460
then run the same.

00:01:33.460 --> 00:01:33.810
Of course,

00:01:33.810 --> 00:01:38.150
we also like to do a pretty to make sure that we get the different output,

00:01:38.150 --> 00:01:39.950
but it's execute the team.

00:01:39.950 --> 00:01:44.230
Mongo e X 06 torches.

00:01:44.230 --> 00:01:49.620
So you continue to get a bunch of documents where the sales amount is between five and

00:01:49.620 --> 00:01:51.150
$6000.

00:01:51.150 --> 00:01:57.100
Suppose we want to find out all the fields done in the quarter one our Quarter three.

00:01:57.100 --> 00:01:58.960
So there are two ways to do this.

00:01:58.960 --> 00:02:04.150
One is using a Our operator are the other one is an in operator.

00:02:04.150 --> 00:02:06.310
Let's begin with our operator.

00:02:06.310 --> 00:02:14.240
So with a DVD art sales don't find with a dollar are on Dari off criteria,

00:02:14.240 --> 00:02:18.510
and each creditor is given as a Jason objects themselves,

00:02:18.510 --> 00:02:22.390
since this time it's just 1/4 equals to one.

00:02:22.390 --> 00:02:30.300
Our father equals 23 We can just say quarter one and then another object we say quarter is

00:02:30.300 --> 00:02:30.740
three.

00:02:30.740 --> 00:02:32.570
They should fit the desired results,

00:02:32.570 --> 00:02:34.140
So we'll also do a pretty.

00:02:34.140 --> 00:02:38.380
As you can see,

00:02:38.380 --> 00:02:42.770
there are a bunch off quarter three documents and then if I scroll up,

00:02:42.770 --> 00:02:45.850
you see quarter one document and you don't see anything else.

00:02:45.850 --> 00:02:49.810
So this is one way to go on.

00:02:49.810 --> 00:02:53.560
The second admitted to do the same thing is David Art sales Start,

00:02:53.560 --> 00:02:55.850
find And then we simply say,

00:02:55.850 --> 00:03:00.150
quarter on the operator is Dollar in,

00:03:00.150 --> 00:03:01.460
which takes an R A.

00:03:01.460 --> 00:03:03.550
Off values that match the quarter,

00:03:03.550 --> 00:03:05.730
which is one and three in our case.

00:03:05.730 --> 00:03:06.220
Then,

00:03:06.220 --> 00:03:06.780
as usual,

00:03:06.780 --> 00:03:09.430
will also where three different save it.

00:03:09.430 --> 00:03:10.280
Andi,

00:03:10.280 --> 00:03:11.780
run the court.

00:03:11.780 --> 00:03:13.450
We get the similar results.

00:03:13.450 --> 00:03:20.100
You can also combine multiple criteria one after the other to give the effect often and

00:03:20.100 --> 00:03:20.730
operation.

00:03:20.730 --> 00:03:21.670
For example.

00:03:21.670 --> 00:03:29.450
Db dot still start find that's a category is equals toe beverages.

00:03:29.450 --> 00:03:34.210
And then I can give a comma and give another condition that can say,

00:03:34.210 --> 00:03:35.150
for example,

00:03:35.150 --> 00:03:40.980
quarter dollar in and then again say,

00:03:40.980 --> 00:03:42.050
103.

00:03:42.050 --> 00:03:44.950
They checked what in the total number of seals.

00:03:44.950 --> 00:03:49.990
By using mango eg 08 30 years,

00:03:49.990 --> 00:03:54.200
you'll see that there are 22 documents that match this criteria.

00:03:54.200 --> 00:03:59.670
But if I include our if I remove this condition on,

00:03:59.670 --> 00:04:01.410
then try the same thing once more,

00:04:01.410 --> 00:04:07.300
you will see that there are more number of products that are 46 documents that match this

00:04:07.300 --> 00:04:07.850
condition,

00:04:07.850 --> 00:04:11.830
so giving multiple conditions are going to narrow down.

00:04:11.830 --> 00:04:14.700
There isn't so I can also add another condition.

00:04:14.700 --> 00:04:19.000
Sales amount greater than R equals two,

00:04:19.000 --> 00:04:21.200
and then you say,

00:04:21.200 --> 00:04:21.880
for example,

00:04:21.880 --> 00:04:25.350
5000 would further reduce the number of rows,

00:04:25.350 --> 00:04:30.850
so this has the same effect as combining all of them using the and operators.

