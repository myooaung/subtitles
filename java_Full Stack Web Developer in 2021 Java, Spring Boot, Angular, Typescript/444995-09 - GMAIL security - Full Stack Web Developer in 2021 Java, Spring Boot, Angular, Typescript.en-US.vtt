WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:06.000
We'll need to test the email sending functionality.

00:00:06.000 --> 00:00:09.344
But in order to do this,

00:00:09.344 --> 00:00:17.880
we will need to actually invoke this ML service send functionality.

00:00:18.160 --> 00:00:25.730
So let's go to our controller and auto while the email

00:00:25.730 --> 00:00:35.494
service and the sent email method.

00:00:35.494 --> 00:00:42.290
We need to use the ML service sent

00:00:42.290 --> 00:00:49.985
method and pass the contact form dto growth.

00:00:49.985 --> 00:00:53.600
Now we should be able to test this.

00:00:53.600 --> 00:00:56.910
So let's start the application.

00:00:58.450 --> 00:01:03.300
So we don't have any issues.

00:01:03.550 --> 00:01:09.739
And please note that there is no direct connection

00:01:09.739 --> 00:01:15.440
from the Angular app back-end service or this contact form.

00:01:15.440 --> 00:01:19.340
So the first testing process will

00:01:19.340 --> 00:01:26.165
involve using a different tool that will focus only on the backend side.

00:01:26.165 --> 00:01:33.890
So we'll use Postman to send email API.

00:01:33.890 --> 00:01:38.625
So you use the post HTTP verb.

00:01:38.625 --> 00:01:46.765
Http local host 8080 API contact, send email.

00:01:46.765 --> 00:01:49.585
So you see here request mapping,

00:01:49.585 --> 00:01:55.090
API contact in the post-marketing should send email.

00:01:55.090 --> 00:01:59.365
And of course we need to pass a contact form dto.

00:01:59.365 --> 00:02:06.500
So let's select the body raw and JSON format.

00:02:07.080 --> 00:02:12.160
Over here we can set the name, simple name.

00:02:12.160 --> 00:02:16.330
Let's go with John Carter, an email.

00:02:16.330 --> 00:02:21.920
So this will be John Carter's email.

00:02:22.270 --> 00:02:26.550
We need to also set the subject.

00:02:26.710 --> 00:02:29.750
Let's go with something.

00:02:29.750 --> 00:02:40.950
Model fish show something like related to the meeting and message.

00:02:41.050 --> 00:02:47.795
Maybe I don't know. Let's try to reschedule a specific meeting.

00:02:47.795 --> 00:02:51.515
So I want to reschedule the meeting.

00:02:51.515 --> 00:02:56.990
Let's plan it for next week.

00:02:56.990 --> 00:03:03.395
Something like this. So now.

00:03:03.395 --> 00:03:13.115
Let's clear the logs are back-end server and check our email.

00:03:13.115 --> 00:03:15.845
We don't have any email so far.

00:03:15.845 --> 00:03:19.649
And click on the Send button.

00:03:20.320 --> 00:03:23.360
Sending requests.

00:03:23.360 --> 00:03:26.225
This is synchronous process.

00:03:26.225 --> 00:03:28.595
Please take into account this.

00:03:28.595 --> 00:03:32.000
And this will take a few seconds.

00:03:32.000 --> 00:03:37.970
And boom, we have only shoe internal server error status 500.

00:03:37.970 --> 00:03:44.735
Plus check specific logs to see what's happening. Over here.

00:03:44.735 --> 00:03:47.030
If you scroll up,

00:03:47.030 --> 00:03:57.845
you see that username and password are not accepted by Google using our Gmail account.

00:03:57.845 --> 00:04:00.845
So in order to fix this,

00:04:00.845 --> 00:04:05.780
please note that this is a security concern on

00:04:05.780 --> 00:04:13.850
Gmail and they are blocking specific access to different applications.

00:04:13.850 --> 00:04:16.325
And in order to basically fix this,

00:04:16.325 --> 00:04:22.880
you need to allow Gmail to user credentials to actually send emails.

00:04:22.880 --> 00:04:27.964
So you need to navigate to your account.

00:04:27.964 --> 00:04:31.250
So my account, google.com,

00:04:31.250 --> 00:04:34.355
and type in less secure apps.

00:04:34.355 --> 00:04:38.900
And you see here the less secure app access.

00:04:38.900 --> 00:04:44.195
Some apps and devices use less secure sign-in technology,

00:04:44.195 --> 00:04:47.285
which makes your account for nullable.

00:04:47.285 --> 00:04:51.470
Basically, you need to allow access to Gmail to

00:04:51.470 --> 00:04:56.195
properly use your credentials to send emails.

00:04:56.195 --> 00:05:00.335
Since this functionality is blocked by default.

00:05:00.335 --> 00:05:05.450
So if you select the on feature,

00:05:05.450 --> 00:05:09.170
so you're allowing access to Gmail two,

00:05:09.170 --> 00:05:12.335
use your credentials, emails.

00:05:12.335 --> 00:05:16.040
You'll be able to unblock now.

00:05:16.040 --> 00:05:22.715
So let's clear our logs and do the sand once again.

00:05:22.715 --> 00:05:29.315
And it's a bit annoying that this process is so synchronous.

00:05:29.315 --> 00:05:34.355
We'll need to fix this ofcourse to make his arsine Cronos.

00:05:34.355 --> 00:05:43.770
So sending requests, since I want this to be handled in no dime,

00:05:46.030 --> 00:05:49.560
still take some time.

00:05:55.110 --> 00:05:59.395
Grows so Tor, one created.

00:05:59.395 --> 00:06:02.725
And now if you take a look into the logs,

00:06:02.725 --> 00:06:06.565
you see that ML centroid success.

00:06:06.565 --> 00:06:10.630
And you have this security alert since you allow

00:06:10.630 --> 00:06:15.890
access to your account to send emails with.

00:06:15.900 --> 00:06:21.890
And next to this email,

00:06:22.230 --> 00:06:27.025
you will see that you have received the email.

00:06:27.025 --> 00:06:29.604
So related to the meeting,

00:06:29.604 --> 00:06:36.945
their spring email, corresponding G-mail account, email sent by.

00:06:36.945 --> 00:06:42.275
Email address and also the corresponding message.

00:06:42.275 --> 00:06:48.200
You see that the form N2 are identical since since

00:06:48.200 --> 00:06:54.379
Gmail does not allow you to basically override the from address.

00:06:54.379 --> 00:07:01.740
So this is the only way you are capable of sending emails now using your Gmail account.

00:07:03.520 --> 00:07:07.925
Now if you recall that sin kernels process,

00:07:07.925 --> 00:07:10.085
I want to fix this.

00:07:10.085 --> 00:07:12.005
Since it's not normal.

00:07:12.005 --> 00:07:17.195
Imagine that we are using a contact form is not normal to block the application,

00:07:17.195 --> 00:07:19.955
to wait for the email to be sent.

00:07:19.955 --> 00:07:27.065
So let's change this approach to use parsing process in our backend server.

00:07:27.065 --> 00:07:30.630
On the backend application.

00:07:30.910 --> 00:07:34.325
That's used the enable us think

00:07:34.325 --> 00:07:42.290
annotation and sent method

00:07:42.290 --> 00:07:45.140
in our email servers.

00:07:45.140 --> 00:07:50.405
We need to annotate it with the US incur stereotype.

00:07:50.405 --> 00:07:56.480
And that's basically as do another test for sludge removed.

00:07:56.480 --> 00:08:00.420
This is the emails.

00:08:01.300 --> 00:08:04.565
Let's change the message.

00:08:04.565 --> 00:08:10.115
Something like this with our sink.

00:08:10.115 --> 00:08:15.390
And for the subject, I think testing.

00:08:17.050 --> 00:08:26.130
Now you see that when you look at the logs to have a better visibility and click on send.

00:08:26.350 --> 00:08:32.315
And you see the message right away to one created.

00:08:32.315 --> 00:08:37.490
And now this is an asynchronous process.

00:08:37.490 --> 00:08:39.890
There is or will not be blocked.

00:08:39.890 --> 00:08:43.970
Everything will be made behind the scenes in our backend server.

00:08:43.970 --> 00:08:50.750
And of course we need to wait a bit for the logs.

00:08:50.750 --> 00:08:56.360
What is important, such as the user will not be blocked in the UI,

00:08:56.360 --> 00:09:01.715
even if his boss man or the Angular application that will move on.

00:09:01.715 --> 00:09:03.990
The next video.

00:09:11.470 --> 00:09:12.740
You'll see

00:09:12.740 --> 00:09:15.755
the email has been received.

00:09:15.755 --> 00:09:18.740
The same email sent by John Carter.

00:09:18.740 --> 00:09:28.295
And the message that I think also we have the e-mail sent with success log statement.

00:09:28.295 --> 00:09:31.490
And now we are able to send emails from

00:09:31.490 --> 00:09:37.310
our backend server using an asynchronous functionality.

00:09:37.310 --> 00:09:41.520
So let's move forward to the next video.
