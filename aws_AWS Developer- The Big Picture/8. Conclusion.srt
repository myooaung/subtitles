1
00:00:00,940 --> 00:00:04,680
We've reached the end of our module on extended services in AWS.

2
00:00:04,680 --> 00:00:08,300
We've looked at quite a few services that extend well beyond

3
00:00:08,300 --> 00:00:10,700
the core services covered in the last module,

4
00:00:10,700 --> 00:00:15,200
and you should have a good picture now of the robustness of AWS.

5
00:00:15,200 --> 00:00:18,760
Let's wrap this module up by recapping each service that we covered.

6
00:00:18,760 --> 00:00:20,740
First, we looked at Elastic Beanstalk,

7
00:00:20,740 --> 00:00:23,710
an application deployment and management service.

8
00:00:23,710 --> 00:00:28,200
Under the covers, it's deploying your code to run on EC2 instances,

9
00:00:28,200 --> 00:00:31,820
but it takes care of so much that you'd be doing yourself a disservice

10
00:00:31,820 --> 00:00:34,940
if you didn't take advantage of what it provides.

11
00:00:34,940 --> 00:00:36,040
Next was Lambda,

12
00:00:36,040 --> 00:00:39,080
the simplest way to quickly execute code with the least

13
00:00:39,080 --> 00:00:41,440
amount of configuration required.

14
00:00:41,440 --> 00:00:46,720
We also looked at DynamoDB, a fully managed NoSQL database solution.

15
00:00:46,720 --> 00:00:48,890
Virtual Private Cloud is used to organize and

16
00:00:48,890 --> 00:00:51,810
control access to your AWS resources.

17
00:00:51,810 --> 00:00:55,560
It's essentially free, so it's highly recommended to utilize its

18
00:00:55,560 --> 00:00:59,640
advanced networking features to secure your application.

19
00:00:59,640 --> 00:01:03,010
Then we looked at CloudWatch, the monitoring service that's integrated with

20
00:01:03,010 --> 00:01:07,770
most existing services. Setting alerts is absolutely essential to staying

21
00:01:07,770 --> 00:01:11,240
informed with how your AWS resources are doing.

22
00:01:11,240 --> 00:01:15,610
And finally, we revisited CloudFront, a content delivery network service,

23
00:01:15,610 --> 00:01:19,310
and saw how we could easily configure it to reduce latency around the

24
00:01:19,310 --> 00:01:24,150
world. That's it for all the individual service overviews. In the next

25
00:01:24,150 --> 00:01:27,460
module, we're going to look at how you, as a developer, will interact

26
00:01:27,460 --> 00:01:31,940
with the various services in AWS. We'll start with an overview of the web

27
00:01:31,940 --> 00:01:35,870
console, which I've already previewed a bit. A lot of the configuration

28
00:01:35,870 --> 00:01:41,140
and monitoring time you'll spend with AWS will happen in this web app.

29
00:01:41,140 --> 00:01:41,650
Next,

30
00:01:41,650 --> 00:01:45,580
we'll look at some of the various software development kits that Amazon supports

31
00:01:45,580 --> 00:01:48,730
and see what types of actions you can perform in your code,

32
00:01:48,730 --> 00:01:53,340
such as connecting to RDS databases or S3 buckets.

33
00:01:53,340 --> 00:01:56,230
Finally, we'll look at the command line interface tool.

34
00:01:56,230 --> 00:02:01,260
This CLI makes it easy to send files to S3 buckets, deploy to Elastic

35
00:02:01,260 --> 00:02:06,440
Beanstalk environments, or orchestrate many more AWS services.

36
00:02:06,440 --> 00:02:10,230
If you've been waiting for the gritty details of what you'll be doing with AWS,

37
00:02:10,230 --> 00:02:15,000
the time has arrived. I hope you've enjoyed this module, and I'll see you in the next one.

