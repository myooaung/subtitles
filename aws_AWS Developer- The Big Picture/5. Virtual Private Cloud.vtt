WEBVTT
1
00:00:01.040 --> 00:00:05.270
Virtual Private Cloud allows you to secure your resources into groups

2
00:00:05.270 --> 00:00:09.040
that follow access rules and share a logical space.

3
00:00:09.040 --> 00:00:13.510
VPC is commonly used when launching EC2 instances whether

4
00:00:13.510 --> 00:00:15.820
in the service of Elastic Beanstalk, RDS,

5
00:00:15.820 --> 00:00:21.210
or by themselves in order to easily secure and control access to them.

6
00:00:21.210 --> 00:00:24.790
We've already discussed security groups as a key feature to control

7
00:00:24.790 --> 00:00:28.250
which IP addresses can talk with your EC2 instances,

8
00:00:28.250 --> 00:00:31.840
and VPC is the next evolution of that.

9
00:00:31.840 --> 00:00:34.750
You would still use security groups for your instances

10
00:00:34.750 --> 00:00:36.640
while they are launched in a VPC,

11
00:00:36.640 --> 00:00:42.060
but Virtual Private Cloud also lets you have full control over routing tables,

12
00:00:42.060 --> 00:00:45.540
configuring NAT gateways for outbound traffic and complete

13
00:00:45.540 --> 00:00:48.980
control over internal IP addresses for instances.

14
00:00:48.980 --> 00:00:53.840
Inside each AWS Virtual Private Cloud are one or more subnets.

15
00:00:53.840 --> 00:00:57.360
These subnets are a further way to group your resources

16
00:00:57.360 --> 00:00:59.750
and assign different rules to each.

17
00:00:59.750 --> 00:01:03.720
One of the main reasons for using multiple subnets within a VPC

18
00:01:03.720 --> 00:01:07.150
is to set up both private and public subnets.

19
00:01:07.150 --> 00:01:11.320
The private subnet would house your databases and application instances.

20
00:01:11.320 --> 00:01:14.930
The private subnet would have no access to the internet at all,

21
00:01:14.930 --> 00:01:16.840
keeping it quite secure.

22
00:01:16.840 --> 00:01:18.680
The public subnet, on the other hand,

23
00:01:18.680 --> 00:01:21.280
would have access to the internet and could utilize

24
00:01:21.280 --> 00:01:23.540
security groups to make it secure.

25
00:01:23.540 --> 00:01:27.430
The private subnet may use a NAT gateway in the public

26
00:01:27.430 --> 00:01:30.340
subnet to securely access the internet.

27
00:01:30.340 --> 00:01:34.290
You could also launch an EC2 instance in the public subnet to act as a

28
00:01:34.290 --> 00:01:40.410
tunnel to SSH into your private EC2 instances. Subnets provide another

29
00:01:40.410 --> 00:01:44.640
resource to increase the security of your AWS instances.

30
00:01:44.640 --> 00:01:48.300
Two of the key ways that Virtual Private Cloud controls routing is

31
00:01:48.300 --> 00:01:52.040
with route tables and network access control lists.

32
00:01:52.040 --> 00:01:55.440
Route tables allow you to override certain IP ranges

33
00:01:55.440 --> 00:01:57.780
and redirect the traffic elsewhere.

34
00:01:57.780 --> 00:02:01.120
A perfect use case is if you want to direct all outgoing

35
00:02:01.120 --> 00:02:04.730
traffic to a NAT gateway that will filter traffic and mask

36
00:02:04.730 --> 00:02:07.040
the instance's IP address.

37
00:02:07.040 --> 00:02:10.640
This can be accomplished with a single route table entry.

38
00:02:10.640 --> 00:02:16.430
Network access control lists or ACLs act as subnetâ€‘level firewalls,

39
00:02:16.430 --> 00:02:22.140
allowing or disallowing IP ranges for both incoming and outgoing connections.

40
00:02:22.140 --> 00:02:25.620
By utilizing both network ACLs and route tables,

41
00:02:25.620 --> 00:02:29.470
you can ensure that your instances have multiple levels of security.

42
00:02:29.470 --> 00:02:33.200
Virtual Private Cloud pricing is extremely simple.

43
00:02:33.200 --> 00:02:34.750
It's free. Yep,

44
00:02:34.750 --> 00:02:37.740
there's no additional cost for using VPC when

45
00:02:37.740 --> 00:02:41.020
launching or managing your AWS resources.

46
00:02:41.020 --> 00:02:51.000
That means there's no reason not to use it. So do yourself a favor and keep your applications secure with AWS VPC.

