WEBVTT
1
00:00:00.500 --> 00:00:02.278
What About the Users?

2
00:00:02.278 --> 00:00:08.500
Do you need your customers or users to buy into your Agile development approach?

3
00:00:08.500 --> 00:00:11.650
It would be best for all if they did.

4
00:00:11.650 --> 00:00:13.400
Do they really need to?

5
00:00:13.400 --> 00:00:14.800
To optimize Agile benefits,

6
00:00:14.800 --> 00:00:18.731
all stakeholders should be involved and follow Agile

7
00:00:18.731 --> 00:00:22.500
principles and adopt Agile methodology, like SCRUM.

8
00:00:22.500 --> 00:00:23.929
What if they don't?

9
00:00:23.929 --> 00:00:27.500
You can still follow your Agile approach to some degree.

10
00:00:27.500 --> 00:00:31.000
You can try and divide up one large project into

11
00:00:31.000 --> 00:00:35.833
several mini projects or releases, but you may be fighting an uphill battle,

12
00:00:35.833 --> 00:00:39.833
since all requirements first and software second is still

13
00:00:39.833 --> 00:00:42.500
so ingrained in many companies today.

14
00:00:42.500 --> 00:00:44.100
How Much and When?

15
00:00:44.100 --> 00:00:48.900
Customers still want to know, how much will the entire system cost,

16
00:00:48.900 --> 00:00:55.500
the budget they may need, how long will the entire system take to build,

17
00:00:55.500 --> 00:00:56.500
the schedule.

18
00:00:56.500 --> 00:00:57.833
With the Agile approach,

19
00:00:57.833 --> 00:01:02.500
you may not know how much it will take to develop the entire system.

20
00:01:02.500 --> 00:01:06.389
Users may want or expect this information upfront and early,

21
00:01:06.389 --> 00:01:09.500
or they may not even approve the project.

22
00:01:09.500 --> 00:01:10.250
An approach.

23
00:01:10.250 --> 00:01:14.375
Use Release 1 to complete requirements gathering for the entire system,

24
00:01:14.375 --> 00:01:17.167
using the practical tools from Module 2.

25
00:01:17.167 --> 00:01:20.500
Now, let's look at this in more detail.

26
00:01:20.500 --> 00:01:23.324
How Much and When, Part 2.

27
00:01:23.324 --> 00:01:25.206
Inputs to Release Planning.

28
00:01:25.206 --> 00:01:28.029
Use the guidance, direction, high-level scope,

29
00:01:28.029 --> 00:01:33.500
etc., from your project definition template we discussed in Module 1.

30
00:01:33.500 --> 00:01:37.864
To mitigate the issue of "how much and when" consider the first release to

31
00:01:37.864 --> 00:01:41.500
be a broader analysis of the entire set of requirements.

32
00:01:41.500 --> 00:01:45.700
Consider each iteration of the first release as an

33
00:01:45.700 --> 00:01:48.500
opportunity to produce more refined requirements.

34
00:01:48.500 --> 00:01:52.763
Iteration 1: using user stories and use cases develop

35
00:01:52.763 --> 00:01:57.500
the necessary workflow diagrams, such as state or swim lanes.

36
00:01:57.500 --> 00:02:01.000
Iteration 2: create screen prototypes and wireframes.

37
00:02:01.000 --> 00:02:04.500
Iteration 3: create screen mockups, data model,

38
00:02:04.500 --> 00:02:06.500
and business specification document.

39
00:02:06.500 --> 00:02:09.500
And then a Release wrap up.

40
00:02:09.500 --> 00:02:14.500
Revisit the roadmap planning and revise the product release plan.

41
00:02:14.500 --> 00:02:16.605
Why Agile Makes Users Nervous.

42
00:02:16.605 --> 00:02:19.974
It is important to understand why your Agile

43
00:02:19.974 --> 00:02:22.500
customers and users will be nervous.

44
00:02:22.500 --> 00:02:26.605
It will be your job as you gather requirements in an Agile environment,

45
00:02:26.605 --> 00:02:30.833
to be aware of these concerns so you can better perform

46
00:02:30.833 --> 00:02:33.633
your job in serving your customers.

47
00:02:33.633 --> 00:02:35.500
Users want budget predictability.

48
00:02:35.500 --> 00:02:40.167
Agile requires a huge leap of faith for customers who are used to hard

49
00:02:40.167 --> 00:02:45.500
budgets and fixed bids (as are many people in the CFO role).

50
00:02:45.500 --> 00:02:47.500
Users want technology predictability.

51
00:02:47.500 --> 00:02:50.500
How do you ensure that the architecture scales?

52
00:02:50.500 --> 00:02:53.500
How do you balance maintenance versus new features?

53
00:02:53.500 --> 00:02:57.100
A traditional detailed requirements documents might reveal traps that

54
00:02:57.100 --> 00:03:02.000
would appear in an Agile project at a very late stage.

55
00:03:02.000 --> 00:03:04.500
Iterative versus disorganized and never-ending.

56
00:03:04.500 --> 00:03:09.000
Users worry that development teams will avoid providing estimates,

57
00:03:09.000 --> 00:03:10.500
documentation, and plans.

58
00:03:10.500 --> 00:03:11.029
Remember,

59
00:03:11.029 --> 00:03:16.853
you are the glue between the business and user community and

60
00:03:16.853 --> 00:03:19.500
the software teams implementing Agile.

61
00:03:19.500 --> 00:03:25.500
Why Agile Makes Users Nervous, Part 2: Yet 'another way' to make software.

62
00:03:25.500 --> 00:03:28.167
Some users are overwhelmed at how collaborative and

63
00:03:28.167 --> 00:03:29.500
interactive Agile projects are.

64
00:03:29.500 --> 00:03:34.500
Users will see this as an increase in workload for project involvement.

65
00:03:34.500 --> 00:03:36.300
Change is scary,

66
00:03:36.300 --> 00:03:43.500
so adopt Agile over time and gradually incorporate Agile techniques; be patient.

67
00:03:43.500 --> 00:03:44.250
Executive sponsorship.

68
00:03:44.250 --> 00:03:49.500
Agile will have a good chance of taking hold if you have executive sponsorship.

69
00:03:49.500 --> 00:03:54.500
Without executive sponsorship, a grass roots effort may be a course of action.

70
00:03:54.500 --> 00:04:02.000
Have patience and look for small wins. Now, let's see how we can educate our customers.

