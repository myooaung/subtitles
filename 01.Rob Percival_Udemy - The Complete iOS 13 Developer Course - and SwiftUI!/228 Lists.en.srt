1
00:00:00,620 --> 00:00:01,250
Hi.

2
00:00:01,400 --> 00:00:02,890
We did this lecture.

3
00:00:02,950 --> 00:00:10,080
We're going to work with lists so we don't have a table we use inside of swift UI but rather we have

4
00:00:10,080 --> 00:00:10,940
lists.

5
00:00:11,010 --> 00:00:14,700
So come over here and create a new Swift UI file.

6
00:00:14,720 --> 00:00:21,990
I'm going to call this turd veal and really daring to see how to work with lists because as you know

7
00:00:22,170 --> 00:00:28,650
we work with table views a lot and we have to know the substitute of that method inside of swift UI

8
00:00:28,770 --> 00:00:29,390
as well.

9
00:00:30,840 --> 00:00:38,670
So suppose that I have an array inside of my struct over here and I want to display those elements the

10
00:00:38,670 --> 00:00:42,090
elements of the array inside of a list.

11
00:00:42,210 --> 00:00:49,790
So traditionally we do that with table view but now we're going to have a list and arrows of data.

12
00:00:50,280 --> 00:00:56,390
So let me create my area over here under my struct but not inside of my body.

13
00:00:56,400 --> 00:01:00,620
OK so my array will have the values of James.

14
00:01:00,790 --> 00:01:02,650
LAUGHS Okay.

15
00:01:02,790 --> 00:01:04,320
Kirk I rob.

16
00:01:05,550 --> 00:01:09,980
So that's what I want to display inside of lists.

17
00:01:09,990 --> 00:01:16,840
So how do I do that rather than having this text I'm going to go for a list.

18
00:01:16,920 --> 00:01:24,690
So let me delete this and just write list so dirt two ways to do that actually and as you can see this

19
00:01:25,110 --> 00:01:29,010
presents the rows of data range in a single column.

20
00:01:29,760 --> 00:01:36,660
So if you choose the list and open a curly brace there are two ways to do that you can use a for loop

21
00:01:36,690 --> 00:01:45,030
or for each loop or you can just give this array as a parameter inside of your list so open the parentheses

22
00:01:45,360 --> 00:01:47,960
and choose your array.

23
00:01:47,970 --> 00:01:55,860
Now after doing that you have to create your own closure and in order to do that you just going to have

24
00:01:55,860 --> 00:02:01,840
to come right to your curly braces K after your curly braces.

25
00:02:01,920 --> 00:02:10,740
You have to a sign some variable to hold the individual holding the individual elements like this element

26
00:02:10,890 --> 00:02:11,910
in.

27
00:02:11,910 --> 00:02:18,390
So that will assign every assign everything inside of your list to an element and you can just come

28
00:02:18,390 --> 00:02:22,000
over here and say text elements.

29
00:02:22,020 --> 00:02:25,850
Now what this will do is this is going to take James.

30
00:02:25,860 --> 00:02:33,330
This is going to take Lars Kirk and rob one by one and assign it to be an element every going to show

31
00:02:33,330 --> 00:02:35,980
them inside of a text.

32
00:02:36,060 --> 00:02:44,640
It has to work but right now as you can see it gives us an error so maybe we can see over here.

33
00:02:44,640 --> 00:02:51,630
In this case this is correct but just keep in mind that swift UI doesn't show some very quality error

34
00:02:51,630 --> 00:02:53,970
messages at least for right now.

35
00:02:53,970 --> 00:03:00,420
So if you get any error message it might not be the message that you are looking for.

36
00:03:00,420 --> 00:03:07,650
So if you do something and if you get an error message somewhere else then just check what you have

37
00:03:07,650 --> 00:03:09,100
done last.

38
00:03:09,120 --> 00:03:09,760
Okay.

39
00:03:09,840 --> 00:03:12,600
I know this is not ideal but does it.

40
00:03:12,600 --> 00:03:15,030
That is the case for a swift UI right now.

41
00:03:15,120 --> 00:03:18,960
But in this case this error message is actually correct.

42
00:03:19,020 --> 00:03:28,110
We have to make this array identifiable and we're going to see how to do that structurally within a

43
00:03:28,110 --> 00:03:29,820
model later on.

44
00:03:30,120 --> 00:03:39,480
But right now we're going to do it manually what means identifiable is that the list has to understand

45
00:03:40,050 --> 00:03:43,020
which index it will show the elements.

46
00:03:43,020 --> 00:03:43,490
Okay.

47
00:03:43,830 --> 00:03:51,270
So we're going to use the same index as our array right now but later on we are going to create some

48
00:03:51,270 --> 00:03:59,010
identifiable models and they will have their own ideas and in order to make this work right now I'm

49
00:03:59,010 --> 00:04:02,530
going to assign this I.D. manually over here.

50
00:04:02,700 --> 00:04:08,490
After I just give this my array as a parameter to my list.

51
00:04:08,490 --> 00:04:17,640
So if you say come up and say I.D. after works as you can see it pops up then over here we have to say

52
00:04:17,670 --> 00:04:21,790
something like backslash dot self.

53
00:04:21,850 --> 00:04:22,560
Okay.

54
00:04:22,710 --> 00:04:32,820
So this means to use the array indexes and as you can see V how James Lars Kirk and Rob displaying inside

55
00:04:32,820 --> 00:04:34,140
of a list.

56
00:04:34,140 --> 00:04:36,760
So this is how you work with lists.

57
00:04:36,810 --> 00:04:41,850
This is how you work this work with a race inside of swift UI.

58
00:04:42,480 --> 00:04:44,580
It's actually easier than it looks.

59
00:04:44,580 --> 00:04:53,130
You create the list you you the array is a parameter and you display it in a way that you want and you

60
00:04:53,130 --> 00:04:54,790
can't change the font.

61
00:04:54,810 --> 00:04:59,130
You can add whatever you want inside of your list as well.

62
00:04:59,130 --> 00:05:05,120
So this does have to be some prototype cell that we have seen before.

63
00:05:05,120 --> 00:05:09,780
For example I can even add an image over here easily.

64
00:05:09,890 --> 00:05:12,440
I can just call the Metallica image.

65
00:05:12,520 --> 00:05:13,170
Okay.

66
00:05:13,220 --> 00:05:18,110
And as you can see now with displays in each row it's too big.

67
00:05:18,110 --> 00:05:20,560
So I'm going to make this very sizable.

68
00:05:21,110 --> 00:05:28,970
And then later on I'm going to set the aspect ratio to be fit.

69
00:05:29,190 --> 00:05:29,820
OK.

70
00:05:29,840 --> 00:05:32,380
The content most to both fit.

71
00:05:32,390 --> 00:05:40,580
And then later on I'm going to give a very small frame so that we can display them inside of our lists

72
00:05:40,730 --> 00:05:43,100
our rows like this.

73
00:05:43,100 --> 00:05:49,970
So this is very easy to do with swift UI as you can see in traditional Main storyboards.

74
00:05:49,970 --> 00:05:58,220
We had to create a new cell and we had to create an swift file for that so and we had to work our way

75
00:05:58,850 --> 00:05:59,870
around this.

76
00:05:59,900 --> 00:06:04,130
But right now I just did it with a simple line.

77
00:06:04,400 --> 00:06:06,470
So that's very cool.

78
00:06:06,470 --> 00:06:11,990
That's one of the powerful features of swift UI as well.

79
00:06:11,990 --> 00:06:17,960
And as I said before this is not the only way to display data inside of lists.

80
00:06:17,960 --> 00:06:27,190
Actually there is another way but this list is actually much better and much easier to work with.

81
00:06:27,230 --> 00:06:34,160
So I suggest you go for this unless you have a specific reason to do the second method that I'm about

82
00:06:34,160 --> 00:06:35,460
to show you.

83
00:06:35,690 --> 00:06:41,150
The second method actually let me just comment this out for right now.

84
00:06:41,150 --> 00:06:41,420
OK.

85
00:06:41,450 --> 00:06:48,830
So let me come over here and after opening this parentheses I have to close this as well.

86
00:06:49,490 --> 00:06:53,180
So inside of my list I'm going to do a for loop.

87
00:06:53,600 --> 00:06:57,500
So this time I'm going to go four for each loop.

88
00:06:57,830 --> 00:07:06,200
So this is kind of for loop but rather than saying four elements inside of list we are going to say

89
00:07:06,200 --> 00:07:10,270
for each array in that element.

90
00:07:10,280 --> 00:07:10,980
OK.

91
00:07:11,060 --> 00:07:12,800
So this is vice versa.

92
00:07:12,830 --> 00:07:15,030
In terms of sine texts.

93
00:07:15,050 --> 00:07:16,760
Let me show you what I mean.

94
00:07:17,270 --> 00:07:25,760
I'm going to give my array as a parameter inside of my list and I have to say I.D. backslash that s

95
00:07:25,790 --> 00:07:35,030
one more time I'm going to open my curly braces and then I'm going to close it and have my own closure

96
00:07:35,030 --> 00:07:39,450
one more time and then I can just say text elements.

97
00:07:39,470 --> 00:07:47,360
So this is exactly the same as I did in the list but I'm doing it with a for each loop but if you if

98
00:07:47,360 --> 00:07:52,500
you want to bring in an image right now you will have a problem over here.

99
00:07:52,760 --> 00:07:59,810
So that I suggest you go for the list and give the array as a parameter to the list.

100
00:07:59,930 --> 00:08:06,860
And if you have a specific reason to use the for each loop then you can come over here and use it as

101
00:08:06,860 --> 00:08:07,610
well.

102
00:08:07,650 --> 00:08:13,390
We're going to see both examples later on when we deal with an app.

103
00:08:13,520 --> 00:08:22,970
But just know that this is the way to go to create table we use to create rows of data and work inside

104
00:08:23,330 --> 00:08:27,010
of arrays with inside of swift UI.

105
00:08:27,050 --> 00:08:33,320
So let's stop here and within the next picture we're going to see how to work with data inside also

106
00:08:33,320 --> 00:08:34,430
if the UI is about.
