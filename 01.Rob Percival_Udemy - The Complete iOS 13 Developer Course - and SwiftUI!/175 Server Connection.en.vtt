WEBVTT
1
00:00:00.940 --> 00:00:08.050
Hi within this lecture regarding to create our own back for app server and we're going to connect our

2
00:00:08.050 --> 00:00:14.440
exe code project to our servers so that we can start working on our past project.

3
00:00:14.440 --> 00:00:22.150
So go to bat for app dot com and if you don't have any account and I dubbed you have you can just register

4
00:00:22.150 --> 00:00:28.680
here by giving your email and password and saying create the account and I already have a password and

5
00:00:28.700 --> 00:00:34.500
account here so I'm going to come over here and give my email and password as a log in.

6
00:00:34.540 --> 00:00:39.270
So this will bring me to my dashboard and in my app.

7
00:00:39.280 --> 00:00:43.850
So when you create your account you will come here too.

8
00:00:43.900 --> 00:00:52.000
So I have a previous test app in here but you won't see this you will just see this new plus button

9
00:00:52.240 --> 00:00:53.610
if you click over here.

10
00:00:53.620 --> 00:00:56.560
You can choose a new app name for yourself.

11
00:00:57.430 --> 00:01:02.120
So I'm going to call this first crowd clone us OK.

12
00:01:02.390 --> 00:01:10.510
Yeah I'm going to say create and this will just create the database the server the everything for me.

13
00:01:10.540 --> 00:01:11.250
OK.

14
00:01:11.290 --> 00:01:15.150
Once it does that and as you can see it's pretty fast.

15
00:01:15.220 --> 00:01:20.620
It takes me to this first crack clone IOW dashboard.

16
00:01:20.680 --> 00:01:25.980
So this is my app and this is my database.

17
00:01:26.110 --> 00:01:30.600
So this is kind of different when we compare it to the firebase.

18
00:01:30.700 --> 00:01:33.980
We have everything in our database in here.

19
00:01:34.210 --> 00:01:34.670
OK.

20
00:01:34.750 --> 00:01:37.540
We don't have any authentication module.

21
00:01:37.570 --> 00:01:39.790
We don't have any storage module.

22
00:01:39.820 --> 00:01:45.500
We only have one database and we save everything in that database.

23
00:01:45.610 --> 00:01:52.780
Of course we can have more than one database classes or one database sheets or tables.

24
00:01:52.900 --> 00:02:00.960
As you may wish and it's different then a sequel or sequel and however you may want to pronounce it.

25
00:02:01.090 --> 00:02:06.850
But it's more close to the sequel when you compare it to the firebase.

26
00:02:06.850 --> 00:02:08.610
So we have these classes.

27
00:02:08.800 --> 00:02:09.500
OK.

28
00:02:09.520 --> 00:02:13.650
And under these classes we have some columns and there is columns.

29
00:02:13.660 --> 00:02:16.210
We have some rows and values.

30
00:02:16.210 --> 00:02:22.190
So for example we have our default user database and then we do authentication.

31
00:02:22.210 --> 00:02:27.760
It actually saves all the information in that database where you're going to see how this works I'm

32
00:02:27.760 --> 00:02:33.930
just trying to take you over this dashboard and I'm trying to get your family realized with this dashboard

33
00:02:33.960 --> 00:02:42.750
to right now and in the left hand side you see that rather than having get authentication and every

34
00:02:42.750 --> 00:02:49.800
other thing we have something called Clouds called functions if you want to run a cloud code in the

35
00:02:49.800 --> 00:02:53.210
cloud server like a javascript code you can use it.

36
00:02:53.250 --> 00:02:59.730
Of course it's out of our scoping our cars but you can't do that using called called functions.

37
00:02:59.730 --> 00:03:07.920
And in here you see V how configuration is API call so and logs and everything every going to do a lot

38
00:03:07.920 --> 00:03:16.080
of configurations Don't worry in the admin app tab you get to see an admin application.

39
00:03:16.140 --> 00:03:24.000
So if you build a good project or if you build a big project where you may want to give some administrator

40
00:03:24.000 --> 00:03:31.620
rights to a non-technical person's non-technical people then you may use this administrator app and

41
00:03:31.620 --> 00:03:36.150
this doesn't even exist in the original pass server.

42
00:03:36.150 --> 00:03:40.820
So back for app actually improved their self to create this.

43
00:03:40.980 --> 00:03:46.610
So we don't need this right now so I'm not going to enabled as I'm not going to use this because we're

44
00:03:46.620 --> 00:03:50.250
going to see how to develop this as a technical person.

45
00:03:50.250 --> 00:03:57.740
So we're going to see how to create users up to your rights to database I have to reach from data always

46
00:03:57.780 --> 00:04:00.740
using SWIFT code so I'm not going to do that.

47
00:04:00.750 --> 00:04:07.140
But in real life these may come in handy if you have a big project going on.

48
00:04:07.140 --> 00:04:12.910
So here we have something called Push and this is related to push notifications.

49
00:04:13.020 --> 00:04:18.960
So we have seen how to work with one signal so I'm not going to use this and you can use one signal

50
00:04:18.960 --> 00:04:21.030
with this pass as though.

51
00:04:21.090 --> 00:04:28.380
So this doesn't actually being too much for me because I already know how to leverage push notifications.

52
00:04:28.440 --> 00:04:35.040
But if you don't want to use one signal for some reason you're more than welcome to use this push notification

53
00:04:35.310 --> 00:04:37.710
section of the pass platform as well.

54
00:04:38.310 --> 00:04:43.710
And in a double as in Amazon Web Services push notifications do not work.

55
00:04:43.710 --> 00:04:46.370
But in back for app it works.

56
00:04:46.380 --> 00:04:54.180
So in the analysis we have the statistics of our app like how many requests that we got how many users

57
00:04:54.690 --> 00:05:01.980
signed in on everything and in server settings an app settings we have the general settings so app settings

58
00:05:02.220 --> 00:05:08.640
are actually very brief so we have the app name if we want we can change it from here.

59
00:05:08.640 --> 00:05:15.150
We have the collaborators so if you have like a team you are you can just invite them writing their

60
00:05:15.150 --> 00:05:19.770
e-mail you can clean up the app and clean up the logs from here.

61
00:05:19.770 --> 00:05:23.700
But we're interested in the server settings right now.

62
00:05:23.920 --> 00:05:30.690
So if you come over here you will see a lot of settings regarding our own back for app server.

63
00:05:30.750 --> 00:05:39.060
So if you come to your general settings over here you will see something like app idea app name.

64
00:05:39.060 --> 00:05:42.090
So the API address and the version.

65
00:05:42.090 --> 00:05:48.970
So we are going to need these information in order to connect our app to this server.

66
00:05:48.990 --> 00:05:56.880
So this these values are just created for you by the way you shouldn't actually share this information

67
00:05:56.880 --> 00:06:04.440
with other people but rather use that information in your own projects to connect your app to your back

68
00:06:04.440 --> 00:06:06.380
for app server.

69
00:06:06.420 --> 00:06:14.180
So that's what we are going to use to connect our X code project but right now we don't know how to

70
00:06:14.180 --> 00:06:15.210
do it right.

71
00:06:15.260 --> 00:06:22.400
So we have to get some some some sort of documentation to start with our process.

72
00:06:22.460 --> 00:06:27.410
So this back for a actually has great documentation as well.

73
00:06:27.830 --> 00:06:33.100
So they provide everything in order to connect our app and get started.

74
00:06:33.110 --> 00:06:39.860
So right now it's it's actually under these guides in the help menu by maybe they will change the menu

75
00:06:39.950 --> 00:06:48.150
in time but they have great documentation and I believe they will continue to have this so under IRS

76
00:06:48.480 --> 00:06:53.580
we have a swift templates so we can actually start with this templates.

77
00:06:53.850 --> 00:07:01.360
But we don't need that because we already have created our own project and browse in the past SDK case.

78
00:07:01.380 --> 00:07:01.990
OK.

79
00:07:02.100 --> 00:07:05.310
I will just download it and show you how this is done.

80
00:07:05.460 --> 00:07:10.110
Anyway for later on if you want to start with this.

81
00:07:10.110 --> 00:07:14.220
But right now we're not going to use this ax code project.

82
00:07:14.220 --> 00:07:15.090
OK.

83
00:07:15.210 --> 00:07:25.010
And in here you can see something like getting started and the github repository of this current project.

84
00:07:25.170 --> 00:07:25.760
OK.

85
00:07:25.800 --> 00:07:30.840
If you come over here to get Hub Repository it will download this project for you.

86
00:07:31.170 --> 00:07:36.300
And in fact it's a great tool to copy and paste and get started with the pass there.

87
00:07:36.360 --> 00:07:43.020
For example in the github repository of the parse itself doesn't have this documentation.

88
00:07:43.020 --> 00:07:47.890
So I'm going to click over here and download it then show it to you anyway.

89
00:07:47.970 --> 00:07:54.630
So if you come over here and click on this Neve pass app tutorial you will see how to create an app

90
00:07:54.630 --> 00:07:57.270
and to create a server like this.

91
00:07:57.270 --> 00:08:03.900
So we have already done that so I'm going to close this down rather I'm going to go for a DOS depository

92
00:08:04.260 --> 00:08:09.750
and download it as you can see it asks me if I want to download this.

93
00:08:09.750 --> 00:08:15.210
So I'm going to say allow and don't worry if you cannot find this in the documentation it doesn't matter

94
00:08:15.210 --> 00:08:21.540
because we're not even going to use this I'm just going to show you how you can use if you want but

95
00:08:21.540 --> 00:08:25.210
I'm just going to write my own code from scratch anyway.

96
00:08:25.680 --> 00:08:33.570
So if you come over here to create startup example for app you we have this workspace file in here as

97
00:08:33.570 --> 00:08:34.070
well.

98
00:08:34.200 --> 00:08:41.260
If we double click on this it will pop open and we can see the necessary code to integrate our past

99
00:08:41.260 --> 00:08:46.020
server to our project and then you download some app from the Internet.

100
00:08:46.020 --> 00:08:50.130
Make sure you run party install before you open this.

101
00:08:50.220 --> 00:08:53.190
But I'm not even going to use this.

102
00:08:53.490 --> 00:09:01.110
So I'm just trying to see the content of these swift files so I didn't bother doing it.

103
00:09:01.170 --> 00:09:07.040
As you can see in app delegate we have some sort of configuration in WI controller Swift.

104
00:09:07.050 --> 00:09:08.830
We don't have anything.

105
00:09:08.850 --> 00:09:09.580
OK.

106
00:09:09.780 --> 00:09:20.270
So this is kind of an old file I believe it's created in USA label Mariah's 12th we're doing IOW 13

107
00:09:20.290 --> 00:09:23.800
over here so I'm not going to use this that's all.

108
00:09:23.860 --> 00:09:31.900
But as you can see we have some sort of configuration function in here and configuration function in

109
00:09:32.260 --> 00:09:36.190
at Delegate and we don't have anything else in other wheel controllers.

110
00:09:36.700 --> 00:09:43.990
So the saving installation object is kind of a test function and we don't need it actually but we need

111
00:09:44.350 --> 00:09:53.260
something like this before we actually load our weave controller we have to configure our pass using

112
00:09:53.500 --> 00:10:00.010
the application idea and other parameters that we got to get from our server so that we can connect

113
00:10:00.010 --> 00:10:05.680
our project easily and smoothly with our power server.

114
00:10:05.680 --> 00:10:12.910
I'm not even going to copy and paste is in my own project but again you're more than welcome to do so

115
00:10:13.150 --> 00:10:16.630
I'm going to show you how to do it from scratch.

116
00:10:16.630 --> 00:10:22.680
So if you come over here you are apt to look at that Swift you will see did finish launching with options.

117
00:10:22.840 --> 00:10:26.590
And remember in file your base we did the configuration here as well.

118
00:10:26.620 --> 00:10:34.120
So this is one of the first functions that is getting called then app first launches right.

119
00:10:34.150 --> 00:10:41.680
So after importing pass we will be ready to create a configuration file for configuration variable for

120
00:10:41.680 --> 00:10:42.580
parts.

121
00:10:42.610 --> 00:10:51.920
So I'm going to say let configuration and this configuration is actually going to be a past client configuration.

122
00:10:51.920 --> 00:11:01.570
OK so as you can see this is the configuration to connect our SDK with our servers so I'm going to come

123
00:11:01.570 --> 00:11:05.320
over and open our parentheses and it will give us adblock.

124
00:11:05.920 --> 00:11:06.960
So this is cool.

125
00:11:06.970 --> 00:11:15.880
We can just double click on this to have our pass mutable client configuration so mutable mean it can

126
00:11:16.060 --> 00:11:17.050
be change.

127
00:11:17.380 --> 00:11:18.330
OK.

128
00:11:18.340 --> 00:11:20.500
And we don't have anything else.

129
00:11:20.500 --> 00:11:22.300
I'm going to go for it.

130
00:11:22.450 --> 00:11:29.650
Once you do that once you hit enter you can hit Enter from more time to use this variable given to us.

131
00:11:29.650 --> 00:11:34.340
So this is at closure and we have seen closures before right.

132
00:11:34.570 --> 00:11:44.080
And in here we can just delete this and make it a not a closure but just a regular array of all I write

133
00:11:44.110 --> 00:11:51.330
our code like we see we have seen in the sample code as well but I'm not going to do that.

134
00:11:51.400 --> 00:11:57.130
I'm just going to use the pass mutable conflict client configuration variable that is given to me in

135
00:11:57.130 --> 00:11:57.860
here.

136
00:11:57.970 --> 00:12:06.130
I'm going to say dot and we are going to choose three parameters from here to connect our app to our

137
00:12:06.130 --> 00:12:07.410
server.

138
00:12:07.630 --> 00:12:14.170
So these three parameters are actually given us in the general settings up our server.

139
00:12:14.170 --> 00:12:16.930
So first of which is application I.D..

140
00:12:17.140 --> 00:12:18.320
OK.

141
00:12:18.370 --> 00:12:20.960
And the second one is client key.

142
00:12:21.250 --> 00:12:22.170
OK.

143
00:12:22.210 --> 00:12:25.900
And the last one is the server your aisle itself.

144
00:12:25.930 --> 00:12:28.370
So it's called server.

145
00:12:28.570 --> 00:12:36.780
Once you do that you can just initialize these values as empty strings for right now later on where

146
00:12:36.780 --> 00:12:39.880
you're going to get that and paste it in here.

147
00:12:39.880 --> 00:12:48.100
Once we do that the configuration is ready and we can say past that initialize and will ask us as a

148
00:12:48.120 --> 00:12:53.090
passcode client configuration where will and we're going to give that as configuration.

149
00:12:53.800 --> 00:12:54.840
OK.

150
00:12:55.060 --> 00:13:03.850
So that's it that's all you had to do to connect your app to your server and we have to get this application

151
00:13:03.910 --> 00:13:08.280
I.D. client key I remember in our pass dash worked.

152
00:13:08.290 --> 00:13:13.510
So in the back for app dashboard we already have seen those.

153
00:13:13.510 --> 00:13:18.400
So this resides on their server settings for any reason if you close this.

154
00:13:18.400 --> 00:13:25.630
You can reach it from here on the core settings you can't come over here to get your app I.D..

155
00:13:25.820 --> 00:13:33.600
OK copy it and come over here and paste it come over here to find your client's key.

156
00:13:33.610 --> 00:13:43.420
So this one come to here and paste it and far last but not least we going to need this server your url.

157
00:13:43.450 --> 00:13:49.320
So this is our server Euro pass API that back for app dot com.

158
00:13:49.330 --> 00:13:54.220
So copy this and we don't need anything else at this point.

159
00:13:54.250 --> 00:13:59.120
So I'm going to just paste it here and now we are done.

160
00:13:59.720 --> 00:14:01.470
So I'm going to save this.

161
00:14:01.530 --> 00:14:03.290
I'm going to run this.

162
00:14:03.370 --> 00:14:09.700
If we don't get any error it means that we managed to connect our app to our server.

163
00:14:09.730 --> 00:14:16.920
Of course we have to do some further tests like writing some values to our database.

164
00:14:16.970 --> 00:14:21.560
We're not going to do that in this lecture but we're going to do that in the next lecture for right

165
00:14:21.590 --> 00:14:28.650
now I'm just trying to build what we have in here and see if we get any error.

166
00:14:28.730 --> 00:14:38.310
So let me open this in my simulator and let's see if he gets any errors or any unusual logs.

167
00:14:38.540 --> 00:14:41.420
So did we close down the other app.

168
00:14:41.720 --> 00:14:42.200
Yep.

169
00:14:42.200 --> 00:14:44.890
We have closed down so I believe that's good.

170
00:14:45.440 --> 00:14:49.400
Actually we can just delete this because we won't need it.

171
00:14:50.000 --> 00:14:50.930
So here we go.

172
00:14:50.930 --> 00:14:56.630
Right now I don't have anything in my storyboard but I don't get any errors as well.

173
00:14:56.630 --> 00:15:06.390
So I believe we are good to go right now we have completed this sections so I'm going to close everything

174
00:15:06.390 --> 00:15:07.360
down.

175
00:15:07.380 --> 00:15:09.100
I don't even need this.

176
00:15:09.120 --> 00:15:16.400
All I need is my back for app dashboard so that I can keep track of what's going on in my database.

177
00:15:16.440 --> 00:15:23.400
So we're going to see how to write and read from database before we go on and create our Foursquare

178
00:15:23.430 --> 00:15:28.030
clone because we're going to use those operations a lot.

179
00:15:28.320 --> 00:15:33.870
During our section so let's stop here and do that within the next lecture.
