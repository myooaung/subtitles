WEBVTT
1
00:00:00.670 --> 00:00:01.340
Hi.

2
00:00:01.500 --> 00:00:09.390
We done this lecture regrowing to complete our image recognition app by writing our handler so that

3
00:00:09.390 --> 00:00:15.900
we can fire up this request and get the observations out of this Courier Mail model.

4
00:00:16.050 --> 00:00:19.920
As you can see there is a sample code for creating the handler.

5
00:00:20.550 --> 00:00:25.920
And before we go on and do that I'm just going to focus on this line.

6
00:00:26.130 --> 00:00:33.280
So dispatch Q that global ad user initiated global and this will work as synchro needlessly.

7
00:00:33.690 --> 00:00:37.700
So we have never worked with this kind of dispatch queue before.

8
00:00:37.950 --> 00:00:45.140
Yeah we have done the main sink thing and we have understood why it was necessary to do that.

9
00:00:45.390 --> 00:00:55.020
But what is this why we are using this global and why are we using this as sync at all.

10
00:00:55.020 --> 00:01:01.620
So let me go over to Google and let me try to understand this a little bit.

11
00:01:01.620 --> 00:01:06.510
So let me write something like dispatch Q main versus global.

12
00:01:06.770 --> 00:01:07.460
OK.

13
00:01:07.620 --> 00:01:14.810
So the first result is the stack overflow of course because this is the best friend of a developer.

14
00:01:14.850 --> 00:01:22.040
So this is stack overflow and we can find all the answers in the world regarding two developments.

15
00:01:22.050 --> 00:01:25.820
So let me write swift in order to be more explicit.

16
00:01:25.890 --> 00:01:26.710
Okay.

17
00:01:26.970 --> 00:01:31.580
And as you can see we have again this stack overflow were here.

18
00:01:31.650 --> 00:01:36.000
And let me just try to go one of these results.

19
00:01:36.060 --> 00:01:43.980
And let me try to understand the difference between this dispatch Q types and as you can see one of

20
00:01:43.980 --> 00:01:51.600
the guys over here has this same question in mind regarding the dispatch Q So it says that yep there

21
00:01:51.600 --> 00:01:59.670
is a main track there's a main and there is a global and what are the differences between those two.

22
00:01:59.790 --> 00:02:03.410
And let me just look at the first four result levels.

23
00:02:03.480 --> 00:02:06.220
The first answering here.

24
00:02:06.330 --> 00:02:15.360
So this guy is trying to explain the differences between them and in here we have something like SYNC

25
00:02:15.580 --> 00:02:19.460
put tasks in queue and wait until it finishes.

26
00:02:19.530 --> 00:02:19.760
Yeah.

27
00:02:19.780 --> 00:02:23.610
The async doesn't actually wait until it finishes.

28
00:02:23.610 --> 00:02:27.560
So it works as in courteously and we already know that right.

29
00:02:27.570 --> 00:02:36.810
We actually used it before and we understand what it takes to do something asynchronously and why is

30
00:02:36.810 --> 00:02:41.340
it necessary because we have done this a lot.

31
00:02:41.340 --> 00:02:48.960
Like we have been downloading data from the Internet and everything would think and we how we need actually

32
00:02:48.960 --> 00:02:50.810
a more clear answer.

33
00:02:51.120 --> 00:02:53.340
And by the way you don't have to do that.

34
00:02:53.370 --> 00:02:59.890
Obviously I'm just trying to make a case here as showing that you can find your answers easily online

35
00:02:59.970 --> 00:03:03.930
by googling and looking over the stack overflow.

36
00:03:03.930 --> 00:03:07.470
And here I believe we have our answer.

37
00:03:07.890 --> 00:03:17.250
So as you can see it says that yep you can use this global cue and it's a very high priority background.

38
00:03:17.250 --> 00:03:27.510
Q So if we want to make something high priority if we want to work this on a background threat then

39
00:03:27.510 --> 00:03:30.470
we have to use this global cue.

40
00:03:30.570 --> 00:03:39.660
But it's not generally used so swift doesn't actually want us to be involved in the priorities too often.

41
00:03:39.960 --> 00:03:46.410
And as you can see in other answers they mention that yep this is rarely used.

42
00:03:46.410 --> 00:03:52.000
And if you want to do something very fast in the background you can use this.

43
00:03:52.020 --> 00:03:54.090
So we didn't need that before.

44
00:03:54.090 --> 00:04:02.850
But as Apple suggests in this case we have to use this because there is a lot of things going on in

45
00:04:02.850 --> 00:04:11.100
the background when we try to recognize an image it just goes into the model and follows a long gone

46
00:04:11.160 --> 00:04:16.350
algorithm and it just tries to do a lot of stuff in the background.

47
00:04:16.350 --> 00:04:17.730
We have to do this fast.

48
00:04:17.730 --> 00:04:24.720
We have to do this prioritize so that we can get results immediately and that's what we're going to

49
00:04:24.720 --> 00:04:25.770
do actually.

50
00:04:25.920 --> 00:04:34.520
I'm going to create the handler in here and I'm going to say we end image requests.

51
00:04:34.530 --> 00:04:38.130
Handler yep this is the thing that I'm looking for.

52
00:04:38.250 --> 00:04:45.240
If I open the parentheses this handler will ask me for a C.I. image OK.

53
00:04:45.270 --> 00:04:50.720
And this is not a CIA image I believe this is a CGM which yep this is the one that we are looking for.

54
00:04:50.740 --> 00:04:58.140
S.I. image and it has some options parameter as well but I believe this is optional so we can just delete

55
00:04:58.140 --> 00:05:01.810
this and go along with DCI image.

56
00:05:01.980 --> 00:05:06.650
OK so let me delete these options and in the CIA image.

57
00:05:06.690 --> 00:05:13.650
I'm going to give you the image as an input because you remember we are getting this inside of our function

58
00:05:13.950 --> 00:05:19.710
here as an input so we can just give it as an input here as well.

59
00:05:19.710 --> 00:05:23.280
And I'm going to do what Swift told me to do.

60
00:05:23.310 --> 00:05:30.690
But Apple told me to do actually I'm going to use this global and in this phone I'm going to go for

61
00:05:30.690 --> 00:05:32.440
a user interactive.

62
00:05:32.670 --> 00:05:33.880
OK.

63
00:05:34.050 --> 00:05:39.330
And then I can say that's a sync and will create a coding block for me.

64
00:05:39.420 --> 00:05:44.590
And in here I'm going to use my handler to perform the requests.

65
00:05:44.640 --> 00:05:47.570
So there are two things to remember here.

66
00:05:47.670 --> 00:05:52.890
As you can see it asks for an array of requests and it throws an error.

67
00:05:52.890 --> 00:05:54.620
So we're going to do this within.

68
00:05:54.690 --> 00:05:55.220
Do try.

69
00:05:55.220 --> 00:06:02.310
Catch and we're going to have to create an array here and put our requests inside of that area.

70
00:06:03.510 --> 00:06:05.150
So far so good.

71
00:06:05.160 --> 00:06:08.360
But we're getting in every here.

72
00:06:08.520 --> 00:06:12.160
So let's see it couldn't understand why the request is.

73
00:06:12.160 --> 00:06:15.600
Yeah I believe I have misplaced this.

74
00:06:15.600 --> 00:06:19.000
So let me put it inside of our model here.

75
00:06:19.020 --> 00:06:19.370
OK.

76
00:06:19.380 --> 00:06:25.230
After the creation of request so that it can see the request.

77
00:06:25.230 --> 00:06:25.560
Yep.

78
00:06:25.560 --> 00:06:31.910
Now we'd seize and even though we're just working with a single request it asks us to create an array.

79
00:06:31.920 --> 00:06:34.020
So that's what we are doing.

80
00:06:34.530 --> 00:06:37.740
So let me create a do try catch block in here.

81
00:06:37.740 --> 00:06:38.330
OK.

82
00:06:38.610 --> 00:06:41.600
So do try catch.

83
00:06:42.570 --> 00:06:43.950
OK.

84
00:06:43.950 --> 00:06:47.080
And if we get an error I'm just going to print one.

85
00:06:47.100 --> 00:06:50.930
OK I'm just going to print error and that's it.

86
00:06:51.090 --> 00:07:01.020
Actually this will fire up the requests and in the request I'm getting this image processed in my model

87
00:07:01.320 --> 00:07:09.010
and getting the observations out of that model and see splitting the first result to the user.

88
00:07:09.030 --> 00:07:11.190
OK so let's try this.

89
00:07:11.190 --> 00:07:18.420
Let's open our photo library and we don't have some good images in here but I'm just going to choose

90
00:07:18.420 --> 00:07:19.740
one.

91
00:07:19.740 --> 00:07:23.460
And as you can see yep we got the result back.

92
00:07:23.610 --> 00:07:30.180
And this is actually a font and I believe and it's understood that this is a fountain but as you can

93
00:07:30.180 --> 00:07:32.430
see we have too much decimals in here.

94
00:07:32.430 --> 00:07:35.350
So that's what I have been talking about.

95
00:07:35.370 --> 00:07:41.810
So rather than saying 20 6 7 9 7 5 I'm just going to say something like.

96
00:07:41.830 --> 00:07:42.050
Yes.

97
00:07:42.060 --> 00:07:43.710
Twenty seven percent.

98
00:07:43.710 --> 00:07:44.880
This is a font.

99
00:07:45.540 --> 00:07:46.460
OK.

100
00:07:46.470 --> 00:07:50.670
And I believe we don't have to change anything else.

101
00:07:50.670 --> 00:07:52.290
So this is working fine.

102
00:07:52.680 --> 00:07:58.620
All we have to do is just run this up and in order to do that I'm going to create another thing called

103
00:07:58.890 --> 00:07:59.780
round it.

104
00:08:00.130 --> 00:08:09.060
OK I'm going to convert my confidence level to ending teacher and let me stop this simulator because

105
00:08:09.060 --> 00:08:11.820
it's getting a little bit leggy here.

106
00:08:11.820 --> 00:08:14.410
So let's say a confidence level.

107
00:08:14.460 --> 00:08:15.350
Yep.

108
00:08:15.360 --> 00:08:20.900
So let me just multiply this by a hundred and divide this by a hundred.

109
00:08:20.910 --> 00:08:30.990
So it will ramp this up and of course if we don't put this in our result label it won't matter much.

110
00:08:30.990 --> 00:08:37.360
So rather than using confidence level I'm going to use around that's in here.

111
00:08:37.380 --> 00:08:45.410
Now this is really the time to test this app and see if we can get the good results back from our model.

112
00:08:45.430 --> 00:08:47.640
So let me change this picture.

113
00:08:47.700 --> 00:08:48.080
OK.

114
00:08:48.090 --> 00:08:51.300
Let me choose the fountain.

115
00:08:51.300 --> 00:08:54.910
And as you can see it's twenty six per cent fountain.

116
00:08:55.230 --> 00:08:55.590
Yep.

117
00:08:55.590 --> 00:09:02.280
So this is finding the image content very well actually this is indeed a fountain.

118
00:09:03.570 --> 00:09:10.900
So maybe you can do something like a result labeled dot tax founding or trying to find.

119
00:09:10.980 --> 00:09:11.500
OK.

120
00:09:11.850 --> 00:09:19.560
So that we won't have a blank label in the process of finding the image.

121
00:09:19.560 --> 00:09:23.160
So this will be much more elegant.

122
00:09:23.190 --> 00:09:24.890
So let me try this.

123
00:09:24.990 --> 00:09:25.370
OK.

124
00:09:25.380 --> 00:09:30.750
Let me go over here to change and let me choose one of these pictures.

125
00:09:30.810 --> 00:09:32.310
Let me go for a fountain.

126
00:09:32.360 --> 00:09:32.680
The.

127
00:09:32.760 --> 00:09:37.260
Found that very fast so I couldn't see its findings.

128
00:09:37.260 --> 00:09:40.830
So as you can see it finds this content.

129
00:09:40.850 --> 00:09:41.220
Yep.

130
00:09:41.280 --> 00:09:42.180
This is a cliff.

131
00:09:42.180 --> 00:09:45.420
So this is 45 percent cliff.

132
00:09:45.480 --> 00:09:48.320
So let me go over here to.

133
00:09:48.390 --> 00:09:52.290
Flowers maybe or do we have anything specific.

134
00:09:52.290 --> 00:09:55.770
No let's go for this flowers okay.

135
00:09:55.860 --> 00:09:56.090
Yeah.

136
00:09:56.100 --> 00:10:03.800
It says that this coral reef and I don't know if this is coral reef I don't understand very much about

137
00:10:03.800 --> 00:10:04.550
flowers.

138
00:10:04.880 --> 00:10:15.020
So in fact let me go to Safari here let me close this up and try to find some images to test this model.

139
00:10:15.020 --> 00:10:20.480
OK let me go to Google and let me just search for monkey.

140
00:10:20.510 --> 00:10:23.790
So far we have been talking about this monkey image.

141
00:10:23.960 --> 00:10:24.260
Right.

142
00:10:24.260 --> 00:10:26.840
Let me find some monkey image.

143
00:10:27.140 --> 00:10:28.010
And here you go.

144
00:10:28.010 --> 00:10:31.070
Fee click over here on Long press.

145
00:10:31.340 --> 00:10:37.700
We can actually add this to the photo library of the user not the user actually.

146
00:10:37.700 --> 00:10:40.740
In this case we already reserved.

147
00:10:40.820 --> 00:10:48.300
So let's go for Lion this time and this bird's up the Lion King I believe.

148
00:10:48.320 --> 00:10:50.410
But it doesn't matter it's still a lion.

149
00:10:50.420 --> 00:10:54.450
So it has to be recognized by our model.

150
00:10:54.500 --> 00:10:54.860
Right.

151
00:10:54.860 --> 00:11:00.810
So let me bring this in and let's go for a car for example.

152
00:11:01.110 --> 00:11:06.620
OK so this is bugging me is asking for my location.

153
00:11:06.620 --> 00:11:14.800
So let me just give it anyway and open one of the car images and let me try to get this one as well.

154
00:11:15.590 --> 00:11:17.810
And let's find a fourth one.

155
00:11:17.900 --> 00:11:23.920
Maybe we can go for something like that plain K or you can just search for a plane.

156
00:11:23.920 --> 00:11:25.820
It will be much more explicit.

157
00:11:26.330 --> 00:11:34.850
Let me find one of the plane images and try to save this to my photo library and this doesn't work for

158
00:11:34.850 --> 00:11:35.630
some reason.

159
00:11:35.630 --> 00:11:37.190
Let me choose another one.

160
00:11:37.220 --> 00:11:46.520
OK let me long press over here and yep this is how we add this to photos so far so good.

161
00:11:46.520 --> 00:11:54.630
So let me close this down and go to my machine learning app and let me open the mine key image.

162
00:11:54.740 --> 00:12:02.390
So as you can see this I believe this is a macaque rather than a monkey knows it better than us.

163
00:12:02.840 --> 00:12:04.760
So it's working.

164
00:12:04.760 --> 00:12:07.010
So let me choose the lion.

165
00:12:07.070 --> 00:12:09.680
And here you go so this is the lion.

166
00:12:10.190 --> 00:12:12.500
And it found that as well.

167
00:12:12.500 --> 00:12:14.270
Let me search for car.

168
00:12:14.270 --> 00:12:15.530
Here you go.

169
00:12:15.590 --> 00:12:21.320
It's not even a car it's a race car as you can see it's pretty good I believe.

170
00:12:21.350 --> 00:12:25.520
So let me go for the final one and yep.

171
00:12:25.520 --> 00:12:28.310
Ninety four percent confidence level.

172
00:12:28.310 --> 00:12:30.940
This is an airliner.

173
00:12:31.010 --> 00:12:34.070
So this is very King Very good.

174
00:12:34.070 --> 00:12:39.440
And the reason this is working very good because the model is good because the model is trained very

175
00:12:39.440 --> 00:12:49.160
well and we can integrate these kind of models into our app tanks to car email framework thanks to region

176
00:12:49.160 --> 00:12:55.410
framework very easily as you can see we have just read them these and much of code.

177
00:12:55.640 --> 00:13:04.700
We have just rhythm like something like maybe 20 line or 50 lines of code and we can actually understand

178
00:13:05.030 --> 00:13:07.070
the content of an image.

179
00:13:07.070 --> 00:13:12.560
This was very hard to do back in old days so this is now the truth.

180
00:13:12.560 --> 00:13:16.660
This is now the reality thanks to the core and male model.

181
00:13:17.570 --> 00:13:19.740
So I hope you enjoyed this section.

182
00:13:19.750 --> 00:13:23.600
We're going to stop here and continue within our next section.
