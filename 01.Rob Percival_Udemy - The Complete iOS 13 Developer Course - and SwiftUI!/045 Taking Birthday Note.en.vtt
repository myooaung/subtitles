WEBVTT
1
00:00:00.150 --> 00:00:00.860
Hi.

2
00:00:00.930 --> 00:00:08.760
In order to save our data in the small database that I have been talking about Reagan a learn about

3
00:00:08.760 --> 00:00:12.210
the user defaults in this lecture.

4
00:00:12.270 --> 00:00:16.900
So far we have been getting the information from the user about V.

5
00:00:17.070 --> 00:00:19.410
Haven't been able to save them.

6
00:00:19.530 --> 00:00:25.270
So we're going to use user defaults as you type user defaults.

7
00:00:25.290 --> 00:00:31.890
It shows you the description that this is an interface to use user defaults database.

8
00:00:31.890 --> 00:00:38.120
So this kind of a small database that you can store some single value.

9
00:00:38.120 --> 00:00:39.070
Okay.

10
00:00:39.210 --> 00:00:46.600
And if you read the description it will store this in a key value pairings like we did in the dictionaries.

11
00:00:46.740 --> 00:00:51.090
So it's not very practical when it comes to large set of data.

12
00:00:51.120 --> 00:00:58.290
But we're going to work with small ones and I have to say standard after this.

13
00:00:58.290 --> 00:01:06.690
And this will create these shared defaults object for me so whenever I call this user defaults dot standard

14
00:01:06.750 --> 00:01:14.040
it will return me the same object Regan to learn what an object is in the object oriented programming

15
00:01:14.040 --> 00:01:21.330
sections but right now know that when I create a string for example it creates an object.

16
00:01:21.330 --> 00:01:21.650
OK.

17
00:01:21.660 --> 00:01:29.310
So I say let my string is something and let my string to is something else.

18
00:01:29.310 --> 00:01:32.490
So I'm creating different kinds of objects.

19
00:01:32.500 --> 00:01:39.840
OK so they have the other different values there are different objects like this.

20
00:01:39.840 --> 00:01:41.700
So this is my string too.

21
00:01:41.880 --> 00:01:46.790
And this completely different object from my string but very ever.

22
00:01:46.800 --> 00:01:48.330
I called User defaults.

23
00:01:48.330 --> 00:01:49.800
That's standard.

24
00:01:49.800 --> 00:01:56.010
I get the same object so I can't reach the same data that I have been working on.

25
00:01:56.190 --> 00:02:03.740
And after that you're going to say sets and as you can see it asks for a key and the value.

26
00:02:03.960 --> 00:02:12.120
So we can store your l billion double faulting teacher string because for whatever we want in here all

27
00:02:12.120 --> 00:02:18.590
we have to do is just come up with a value and a key like in the dictionaries.

28
00:02:18.810 --> 00:02:21.330
So choose any of this.

29
00:02:21.330 --> 00:02:27.400
And for value I'm going to save name tax field up text for example.

30
00:02:27.540 --> 00:02:35.670
OK so name tax field dot text and you can make this force our app because we know there's going to be

31
00:02:35.670 --> 00:02:43.440
a text and in the name an end in the key I'm going to go for a name and it doesn't matter what I write

32
00:02:43.440 --> 00:02:51.330
in here I can just write James over here I can write my own name I still over here but you have to make

33
00:02:51.330 --> 00:02:56.850
sure that you don't forget this key because we're going to need it later on.

34
00:02:56.850 --> 00:03:04.910
Let me try to call this towards value OK so make sure there's something logical.

35
00:03:04.920 --> 00:03:07.440
Make sure does make sense to you.

36
00:03:07.440 --> 00:03:09.720
So I'm gonna go for a key name.

37
00:03:09.790 --> 00:03:15.620
Of course we're gonna have to call and do the same thing for birthday text as well.

38
00:03:15.630 --> 00:03:23.520
So I'm going to set the value as a birthday text field that tax with four stone wrap and the key will

39
00:03:23.520 --> 00:03:26.450
be birth day.

40
00:03:26.670 --> 00:03:29.570
So I believe that's OK.

41
00:03:29.760 --> 00:03:37.800
And after this maybe you see some documentation on the Internet or some other researches maybe they're

42
00:03:37.800 --> 00:03:42.650
trying to call these user defaults that standardized synchronize.

43
00:03:42.780 --> 00:03:45.420
But this is an old method.

44
00:03:45.450 --> 00:03:46.060
OK.

45
00:03:46.170 --> 00:03:49.470
You don't need that anymore so I'm not going to do that.

46
00:03:49.800 --> 00:03:57.090
Maybe I can just leave it as a note but you don't have to code is right now we will just stir this data

47
00:03:57.120 --> 00:04:01.530
without having to do anything else.

48
00:04:01.530 --> 00:04:04.960
So this will actually save the data.

49
00:04:05.010 --> 00:04:06.090
Right.

50
00:04:06.090 --> 00:04:14.100
Were you going to save this data in a database but without having to call this without having to get

51
00:04:14.100 --> 00:04:21.940
this data from database we cannot show it to the user and we have to do this in the we did load.

52
00:04:22.050 --> 00:04:23.030
Why.

53
00:04:23.160 --> 00:04:32.640
Because after the user closes down the application and opens it again we did load will be called and

54
00:04:32.640 --> 00:04:41.290
that's then we want to get this data and show it to the user because once I click save it will display

55
00:04:41.300 --> 00:04:43.920
in the name and birthday labels anyway.

56
00:04:43.920 --> 00:04:50.890
But when I reopen the app the vert and birthday and name labels will be empty.

57
00:04:50.940 --> 00:04:59.090
That's why I need to get the Zeta in the we did load to display them in the name label and birthdate

58
00:04:59.130 --> 00:05:03.250
labels so let me create a variable called starred name.

59
00:05:03.250 --> 00:05:11.410
And in order to get this I'm going to call user defaults dot standard dot object and when I say object

60
00:05:11.770 --> 00:05:15.720
it asks for a key and it gives me an any object.

61
00:05:15.760 --> 00:05:16.750
As you can see.

62
00:05:17.260 --> 00:05:18.700
So remember any.

63
00:05:18.790 --> 00:05:20.460
We don't know this type.

64
00:05:20.470 --> 00:05:20.820
OK.

65
00:05:20.830 --> 00:05:24.420
We don't know whether Disney's a string or just is an integer.

66
00:05:24.430 --> 00:05:27.610
So we had to cast this as a string.

67
00:05:27.640 --> 00:05:30.060
After we get this.

68
00:05:30.280 --> 00:05:32.410
So this is any optional.

69
00:05:32.520 --> 00:05:33.600
Okay.

70
00:05:33.700 --> 00:05:36.760
And remember our name is name.

71
00:05:36.760 --> 00:05:43.040
So this will check to see if there is a name it will give it to me.

72
00:05:43.210 --> 00:05:46.060
But how can I cast this to be a string.

73
00:05:46.120 --> 00:05:53.380
Because right now I cannot just say name label dot text is your name.

74
00:05:53.380 --> 00:05:56.300
We're going to see how to do that.

75
00:05:56.380 --> 00:06:03.580
So let's start birthday user default standard object for key birthday so I'm doing exactly the same

76
00:06:03.580 --> 00:06:07.690
thing and I'm using exactly the same keys over here.

77
00:06:07.690 --> 00:06:12.280
So suppose that I get star name and start birthday.

78
00:06:12.280 --> 00:06:18.840
So can I come over here and say name label text is star name.

79
00:06:18.940 --> 00:06:24.110
I cannot say that right because it's any right now any optional.

80
00:06:24.700 --> 00:06:33.350
And I don't want to do it that way anyway because once I do that I will get this error.

81
00:06:33.400 --> 00:06:35.670
So let me click on this.

82
00:06:35.680 --> 00:06:43.780
And as you can see it says that you cannot convert this to string optional unless you do something.

83
00:06:44.440 --> 00:06:47.200
So what are we going to do.

84
00:06:47.200 --> 00:06:57.360
Can I say can I do a casting like we did before with S but also there are two types of castings as optional

85
00:06:57.430 --> 00:07:02.420
and as first unwrapped so how do we do that.

86
00:07:02.500 --> 00:07:05.470
Can I say as optional strings.

87
00:07:06.310 --> 00:07:09.930
So this will attempt to convert this to a string.

88
00:07:10.090 --> 00:07:12.170
And if it works it's fine.

89
00:07:12.180 --> 00:07:14.960
And if it doesn't work it won't crash.

90
00:07:14.980 --> 00:07:16.390
Right.

91
00:07:16.510 --> 00:07:18.380
So this is good.

92
00:07:18.430 --> 00:07:25.330
But if I do it like this it will definitely try to convert does into a string.

93
00:07:25.780 --> 00:07:29.760
And if it fails the app will crash.

94
00:07:29.770 --> 00:07:35.620
So remember when we use does exclamation point we need to be very careful and we need to be certain

95
00:07:35.980 --> 00:07:38.100
of ourselves.

96
00:07:38.140 --> 00:07:44.060
So I'm going to go for even more robust more safer way to do this.

97
00:07:44.080 --> 00:07:49.810
I'm going to control this to be and Neil variable with it flat.

98
00:07:49.960 --> 00:07:50.390
OK.

99
00:07:50.740 --> 00:07:52.630
So we have seen this before right.

100
00:07:52.700 --> 00:07:59.170
VK actually come across a situation like this where we have to decide between optional and force and

101
00:07:59.170 --> 00:08:00.010
wrapping.

102
00:08:00.010 --> 00:08:02.140
He can use it flat.

103
00:08:02.200 --> 00:08:07.690
So I'm going to say if let my name surname as optional strings.

104
00:08:09.280 --> 00:08:10.900
So this is very good.

105
00:08:10.990 --> 00:08:20.320
Then in here I can just take this my name and let it be my new name label dot text.

106
00:08:20.320 --> 00:08:20.960
Right.

107
00:08:21.010 --> 00:08:26.540
Because if this works it means that stirred name will be cast of this string.

108
00:08:26.740 --> 00:08:30.010
And my name can be my title.

109
00:08:30.250 --> 00:08:32.560
Right now we face if I say my name.

110
00:08:32.560 --> 00:08:33.850
This is not an optional.

111
00:08:33.850 --> 00:08:36.630
This is just as strange.

112
00:08:36.670 --> 00:08:38.750
This is not optional strings.

113
00:08:38.830 --> 00:08:42.010
If this works it will display if it doesn't work.

114
00:08:42.010 --> 00:08:44.010
It won't happen.

115
00:08:44.380 --> 00:08:48.430
It won't happen to be crashing or it won't display anything.

116
00:08:49.900 --> 00:08:57.670
So let me just change this to new name because we we're going to have a new birthday or here as well

117
00:08:57.910 --> 00:08:59.680
in order to avoid confusion.

118
00:08:59.680 --> 00:09:01.700
I'm just going to use new.

119
00:09:01.930 --> 00:09:04.660
So start birthday as string.

120
00:09:05.030 --> 00:09:11.670
And this will be the same thing birthday labeled are taxed is new birthday.

121
00:09:11.890 --> 00:09:13.550
So this is cool right.

122
00:09:13.570 --> 00:09:15.560
If it works out then it's OK.

123
00:09:15.570 --> 00:09:18.940
If it doesn't work out don't do anything else.

124
00:09:19.030 --> 00:09:21.750
Just don't crash my app.

125
00:09:22.150 --> 00:09:27.470
So let me run this and see if we can get the same results.

126
00:09:27.760 --> 00:09:32.180
So we don't get anything right now because we haven't save it yet.

127
00:09:32.230 --> 00:09:35.540
So let's go for Dave and Jen 20.

128
00:09:35.650 --> 00:09:46.140
OK and let's close this down and I'll put it one more time and let's see if we can see the results.

129
00:09:46.150 --> 00:09:46.810
Here you go.

130
00:09:46.810 --> 00:09:50.200
We see the day when we see the birthday in here.

131
00:09:50.200 --> 00:09:59.200
So right now we have saved this entire database and we managed to get that information from that database

132
00:09:59.220 --> 00:10:03.200
and we're displaying the result to the user.

133
00:10:03.280 --> 00:10:07.150
So that's how you work with user defaults.

134
00:10:07.150 --> 00:10:10.720
It's very practical with a simple line of code.

135
00:10:10.720 --> 00:10:18.400
We managed to save the stuff and with a simple line of code we managed to get the stuff back from database.

136
00:10:18.400 --> 00:10:24.100
And when it comes to big set of data this doesn't make sense because you have to create so many variables

137
00:10:24.400 --> 00:10:33.430
but it's much easier to work with this if you're going to if you're looking for saving one data or two

138
00:10:33.430 --> 00:10:37.210
data then this is perfect for you.

139
00:10:37.570 --> 00:10:38.850
OK.

140
00:10:38.920 --> 00:10:46.330
And if you're looking for saving like a one thousand data points then this doesn't even make sense to

141
00:10:46.330 --> 00:10:47.220
you.

142
00:10:47.260 --> 00:10:51.200
And again we're how learns about casting in here.

143
00:10:51.220 --> 00:10:51.700
OK.

144
00:10:52.030 --> 00:11:01.630
So first casting an optional casting and the best way to do that in here is to do this with the optional

145
00:11:01.660 --> 00:11:09.880
casting with if let's and we had to learn one more thing we don't know how to delete this data from

146
00:11:09.880 --> 00:11:11.240
this database.

147
00:11:11.290 --> 00:11:18.010
So I'm going to replace this Dave or I'm just I just want to delete him from my database.

148
00:11:18.010 --> 00:11:19.410
How do I do that.

149
00:11:19.420 --> 00:11:22.090
We have to learn about that as well.

150
00:11:22.090 --> 00:11:25.330
And we're going to do that within the next lecture.
