WEBVTT
1
00:00:00.630 --> 00:00:01.270
Hi.

2
00:00:01.380 --> 00:00:07.560
We didn't this lecture we're going to learn how to save data in our car data database so that we can

3
00:00:07.560 --> 00:00:10.380
reach them whenever we want.

4
00:00:10.380 --> 00:00:15.330
So far we have our image we have our name artists tax and your tax.

5
00:00:15.480 --> 00:00:20.890
So we are ready to save those information in our database.

6
00:00:20.890 --> 00:00:27.420
I remember in order to do that we are going to leverage the app delegate functions that are automatically

7
00:00:27.420 --> 00:00:31.500
created for us when we chose Core Data checkbox.

8
00:00:31.500 --> 00:00:39.810
When we first create these projects I call data actually has a square like database if you have worked

9
00:00:39.810 --> 00:00:41.550
with a SKU like before.

10
00:00:41.550 --> 00:00:46.440
It's very similar but we're going to use SWIFT code rather than a square code.

11
00:00:46.470 --> 00:00:53.760
So if you come over here to save context you can see there's a core data saving support function and

12
00:00:53.960 --> 00:00:55.590
we're going to see how to use that.

13
00:00:55.590 --> 00:01:03.120
But for right now as you can see it's saving those with context and it's doing something different that

14
00:01:03.330 --> 00:01:04.650
we haven't seen before.

15
00:01:04.650 --> 00:01:07.120
He's doing it do try catch.

16
00:01:07.290 --> 00:01:16.530
So sometimes when we do some operations like going to the Internet with the euro it can't troll an error

17
00:01:16.770 --> 00:01:19.560
throwing meat means it can cause an error.

18
00:01:19.560 --> 00:01:20.380
OK.

19
00:01:20.520 --> 00:01:29.310
So it becomes irretrievable function and then we come across in a situation like that we have to do

20
00:01:29.310 --> 00:01:37.230
this do try catch it means that try this and if we get an error rather than crashing all app just catch

21
00:01:37.230 --> 00:01:43.500
this error and try to find a solution to that error or just display an error message.

22
00:01:43.500 --> 00:01:50.910
For example if you're going to a euro in the Internet and if you're trying to get data out of that euro

23
00:01:51.180 --> 00:01:59.610
we can in fact write you URL in a wrong way so it can't cause problems or euro can be changed over time.

24
00:01:59.880 --> 00:02:01.960
And this may cause some problems.

25
00:02:02.040 --> 00:02:09.480
So we're going to do some context about save here and we're going to write some entity names class names

26
00:02:09.780 --> 00:02:16.470
and it can do that that can be some problem and it throws an error and we have to catch this error if

27
00:02:16.470 --> 00:02:20.490
we don't want to make our app crash.

28
00:02:20.490 --> 00:02:25.000
So we're going to use those do try catch thing a lot.

29
00:02:25.890 --> 00:02:32.430
So let's go to our Save button clicked in details we see and try to reach that app delegate functions

30
00:02:32.760 --> 00:02:33.720
in order to do that.

31
00:02:33.720 --> 00:02:40.870
I'm going to a sign up delegate as a variable inside of my coat so I'm going to say this is going to

32
00:02:40.870 --> 00:02:46.140
be an app delegate and I'm going to take this from you I application.

33
00:02:46.180 --> 00:02:50.190
So this brings us the application itself actually.

34
00:02:50.860 --> 00:02:58.480
And if you say dot shared it will give me the instance of this app and that very ever over whenever

35
00:02:58.570 --> 00:03:07.330
I type UI application that shared it brings me the own only instance that this class has it's kind of

36
00:03:07.600 --> 00:03:14.770
the thing that we're doing with user defaults remember it returns the same instance and this returns

37
00:03:14.770 --> 00:03:22.390
the same instance as well so that we can reached the same value from everywhere inside of our app.

38
00:03:22.540 --> 00:03:28.090
Later on you're going to say dot delegate and this will give us the delegate itself and we're going

39
00:03:28.090 --> 00:03:36.040
to cast this forest cast as actually as an app delegate with a capitalized a not UI application delegate

40
00:03:36.070 --> 00:03:39.580
but app delegate cape with the uppercase eight.

41
00:03:40.030 --> 00:03:45.100
So now I reached my app delegate with a Vrabel.

42
00:03:45.100 --> 00:03:53.350
Now each side of this app delegate I I have a context that I want to get so I can do this on the same

43
00:03:53.350 --> 00:03:58.900
line as well but it will be too much complicated so I'm going to go for a separate line.

44
00:03:58.900 --> 00:04:02.740
I'm going to say context app delegate the small one.

45
00:04:02.740 --> 00:04:03.080
OK.

46
00:04:03.100 --> 00:04:09.410
This one a variable app delegate dots per resistant container.

47
00:04:09.430 --> 00:04:10.200
OK.

48
00:04:10.270 --> 00:04:15.060
So this is the container that our core data is safe doing.

49
00:04:15.130 --> 00:04:18.860
And then contexts we have contexts.

50
00:04:18.940 --> 00:04:21.290
So this is an NSA managed object.

51
00:04:21.320 --> 00:04:27.400
We're going to work with NSA managed objects in the card data of every three of something from core

52
00:04:27.400 --> 00:04:28.120
data.

53
00:04:28.120 --> 00:04:34.780
It will be returned us we done in its managed object type you're going to see Don't forget first of

54
00:04:34.780 --> 00:04:41.260
all we have to learn how to write data later on we're going to see how to retrieve.

55
00:04:41.260 --> 00:04:48.810
So when I see so when I say contacts that say it's sais that it's going to throw an error it may throw

56
00:04:48.810 --> 00:04:50.630
an error as you can see.

57
00:04:50.710 --> 00:04:57.550
So I cannot just go over and say context not saying I have to do this we do try catch.

58
00:04:57.550 --> 00:04:59.890
So that's what I have been talking about.

59
00:04:59.890 --> 00:05:06.890
But before we do that we have to come up with a way to write our data in the database anyway.

60
00:05:06.920 --> 00:05:10.010
So let me show you how it's done.

61
00:05:10.040 --> 00:05:15.010
We're going to create an variable called Neil painting or Neil arts.

62
00:05:15.040 --> 00:05:15.870
It doesn't matter.

63
00:05:15.880 --> 00:05:19.980
I'm going to call it nude painting because our entity name is paintings.

64
00:05:19.990 --> 00:05:21.030
OK.

65
00:05:21.130 --> 00:05:26.500
And does new painting will drive from the entity that we have created.

66
00:05:26.530 --> 00:05:33.810
So you have to say in this entity and it doesn't work because we haven't imported core data in here.

67
00:05:33.820 --> 00:05:39.550
So we have to do that first so that we can reach the core data objects.

68
00:05:39.550 --> 00:05:48.650
So once we got go here and we can just say close down the Siri and now I can say in this entity.

69
00:05:48.700 --> 00:05:53.470
OK and as you can see and this entity description comes up.

70
00:05:53.470 --> 00:06:01.090
So this is a description of the entity in Core Data and we only have one entity but we can have multiple

71
00:06:01.090 --> 00:06:09.760
as well if you say that is her new object it will ask you for an entity name and it will ask you for

72
00:06:09.760 --> 00:06:11.950
it context.

73
00:06:12.010 --> 00:06:13.370
So this is easy right now.

74
00:06:13.380 --> 00:06:14.180
Right.

75
00:06:14.230 --> 00:06:19.870
We have the entity name as paintings and asks for the context itself.

76
00:06:19.870 --> 00:06:22.360
And we have already created it.

77
00:06:22.390 --> 00:06:29.610
So here our context here is our context so you can just say context in here.

78
00:06:30.040 --> 00:06:31.350
Now that's good.

79
00:06:31.360 --> 00:06:35.140
We have our new painting model me painting object.

80
00:06:35.180 --> 00:06:42.220
We can add whatever information we want using this entity in here.

81
00:06:42.250 --> 00:06:46.800
Now we have to go over attributes one by one.

82
00:06:46.840 --> 00:06:48.950
So what do we have we have a name.

83
00:06:48.970 --> 00:06:51.550
We have the artist we have the year.

84
00:06:51.580 --> 00:06:58.990
So let me say attributes and I can just say need painting dot not ADD but set value.

85
00:06:59.170 --> 00:07:03.190
OK so this is going to ask me for a value and the key.

86
00:07:03.850 --> 00:07:11.080
So this is very simple like user defaults right now for key I have already defined the keys right.

87
00:07:11.080 --> 00:07:13.300
I have already defined the attributes name.

88
00:07:13.960 --> 00:07:19.870
So if you come over here you will see that we already have our attributes defined in here.

89
00:07:19.870 --> 00:07:23.840
Now all we have to do is just use the exact same names.

90
00:07:24.130 --> 00:07:28.240
For example in the key I'm going to go for a name first.

91
00:07:28.510 --> 00:07:31.020
So for rally I'm going to go for name tags.

92
00:07:31.030 --> 00:07:35.880
That text and I can actually make this force all wrapped.

93
00:07:36.070 --> 00:07:43.690
And for the key I'm going to go for name so let me say a new painting that sat value.

94
00:07:43.690 --> 00:07:51.460
Now I can go for artists text right so I can go for artist tax dot text and for the key I'm going to

95
00:07:51.460 --> 00:07:52.840
say artists.

96
00:07:53.500 --> 00:07:55.010
So far so good.

97
00:07:55.030 --> 00:08:03.370
Right now we're going to have year OK so I'm going to say set value and I can get the year tax that

98
00:08:03.390 --> 00:08:10.690
tax but I have to convert this to be an integer first and in order to do that of course I'm going to

99
00:08:10.690 --> 00:08:13.850
use an E flat like we did before.

100
00:08:13.870 --> 00:08:21.350
So I'm going to say flat year integer and I'm going to take this from your text dot text.

101
00:08:21.400 --> 00:08:22.370
OK.

102
00:08:22.680 --> 00:08:28.280
And I will try to cast is as as in as an integer in like this.

103
00:08:28.390 --> 00:08:35.190
And if this works I'm going to say let me just delete this I write it from here.

104
00:08:35.230 --> 00:08:44.710
Once more so need painting that set value and the value will be year and the key not year text but the

105
00:08:44.710 --> 00:08:45.640
year.

106
00:08:45.640 --> 00:08:47.290
And the key will be year again.

107
00:08:48.320 --> 00:08:48.730
OK.

108
00:08:48.760 --> 00:08:57.130
So there are two values last first I.D. and then the image idea is actually very easy to create because

109
00:08:57.130 --> 00:09:01.820
as I said before Swift will take care of these you you I.D. thing by itself.

110
00:09:01.840 --> 00:09:09.070
All we have to do is just say do painting that set value and the value at the key actually will be I.D..

111
00:09:09.100 --> 00:09:09.450
OK.

112
00:09:09.460 --> 00:09:10.570
This is easy.

113
00:09:10.570 --> 00:09:13.670
And the value will be a you you I.D..

114
00:09:13.980 --> 00:09:14.630
OK.

115
00:09:14.920 --> 00:09:20.740
So if you say you you I.D. Open Close parentheses it will create an I.D. for us.

116
00:09:20.740 --> 00:09:28.630
This is a universal unique I.D. And every time we do that it will create unique value for us.

117
00:09:28.630 --> 00:09:32.240
And this will be kind of a gibberish string tax.

118
00:09:32.320 --> 00:09:36.620
And we're going to see later on don't worry we're going to see what it looks like.

119
00:09:36.730 --> 00:09:42.120
But it will just give us a unique I.D. and this will do the job for I.D..

120
00:09:42.490 --> 00:09:50.210
Right now we're going to learn how to get an image because if we want to save the image into core data

121
00:09:50.250 --> 00:09:59.020
you have to convert this into a data binary data first as we have seen before because we couldn't choose

122
00:09:59.030 --> 00:10:01.960
UI image in the core data.

123
00:10:02.140 --> 00:10:06.530
We have chosen the data binary data right.

124
00:10:06.640 --> 00:10:09.120
So let me create this data from Image view.

125
00:10:09.130 --> 00:10:16.310
That image and it's fairly easy to do that all you have to just say Image view that image and there

126
00:10:16.320 --> 00:10:27.820
is a method from that image to create data and in fact you can even specify the compressed size when

127
00:10:27.820 --> 00:10:33.250
you do that because if you have something like a big picture like three megabytes two megabytes you

128
00:10:33.250 --> 00:10:40.930
want to compress it was you turn it trip data so that it won't take too much space in the database so

129
00:10:40.930 --> 00:10:50.740
it won't actually slow down the process of reading or writing information OK if you say that J de tight

130
00:10:50.830 --> 00:10:58.660
asks you for a compression quality as you can see every going to use this so for compression quality

131
00:10:58.960 --> 00:11:06.280
I'm just going to go for all point five for example if you make this lower the quality will be lower

132
00:11:06.280 --> 00:11:13.450
if you make this higher the quality will be higher but the iPhone's actually take very good pictures

133
00:11:13.450 --> 00:11:19.940
right now so they will have high quality even if we do this with 50 percent.

134
00:11:20.020 --> 00:11:27.310
So I believe going with 0 point 5 or 0 point 4 is going to be sufficient for us because we're going

135
00:11:27.310 --> 00:11:31.910
to display this in a small UI image view anyway.

136
00:11:32.080 --> 00:11:37.080
So this is kind of optional right now I can make it for our wrap.

137
00:11:37.090 --> 00:11:44.380
And in order to check this we can have a lot of different kind of control mechanisms like I can make

138
00:11:44.380 --> 00:11:55.000
my button not enabled so that whenever a user chooses an image then we can make those enabled or even

139
00:11:55.000 --> 00:12:03.320
if we don't do that we will have our own select image J bag anyway so it won't crash and you're going

140
00:12:03.320 --> 00:12:09.540
to see what I mean once we do the button thing but for right now I'm going to say set value data for

141
00:12:09.620 --> 00:12:13.520
the image and now we're ready for attributes.

142
00:12:13.570 --> 00:12:20.650
I have a name I have my artist I have my year my I.D. and my image now I can just call context that

143
00:12:20.650 --> 00:12:24.530
set but again this will give me an error.

144
00:12:24.530 --> 00:12:30.040
It will ask me to wrap this inside of what do try catch structure.

145
00:12:30.470 --> 00:12:31.900
So how do we do that.

146
00:12:31.910 --> 00:12:36.380
You can just say do open curly braces and under do you.

147
00:12:36.430 --> 00:12:38.840
You can just say try this.

148
00:12:38.840 --> 00:12:43.010
OK so I'm going to try and save this context.

149
00:12:43.010 --> 00:12:46.310
And if it throws any error let me delete this.

150
00:12:46.400 --> 00:12:53.870
I will catch the error in here and I will display a user something like an alert message maybe for right

151
00:12:53.900 --> 00:13:01.520
now I'm just going to say print error and it saves I'm just going to say print success so that we can

152
00:13:01.520 --> 00:13:02.450
keep track.

153
00:13:02.660 --> 00:13:11.510
If we made this save to our database because we don't have any function to get our information right

154
00:13:11.510 --> 00:13:19.550
now all I want to do is just test this and see if we can actually save this to our database so that

155
00:13:19.640 --> 00:13:23.870
in the following lectures we are going to see how to retrieve this information as well.

156
00:13:24.560 --> 00:13:25.900
So let me open this.

157
00:13:25.910 --> 00:13:29.260
Let me choose one of these pictures like this.

158
00:13:29.270 --> 00:13:30.180
OK.

159
00:13:30.590 --> 00:13:35.750
And for the name I'm gonna go for something like waterfall maybe.

160
00:13:36.110 --> 00:13:42.920
So this is kind of a waterfall picture or lateral I'm just going to get real pictures as far like Mona

161
00:13:42.920 --> 00:13:43.340
Lisa.

162
00:13:43.340 --> 00:13:44.110
Don't worry.

163
00:13:44.450 --> 00:13:52.460
So a waterfall and the artists will be doubling Chie and the year is nineteen hundreds if I click on

164
00:13:52.460 --> 00:14:00.830
Save and then this image does name the artist and the year will be saved on the card data as you can

165
00:14:00.830 --> 00:14:09.200
see I got the success message right now of course I cannot see it is anywhere I cannot be sure if this

166
00:14:09.200 --> 00:14:15.350
is saved or not but since I got the success message it means that it got saved.

167
00:14:15.350 --> 00:14:24.220
Later on I'm going to retrieve those information and I'm just going to try and show those names in here.

168
00:14:24.410 --> 00:14:32.080
And once I hit that it refreshes the view controller which is good I can add another picture as well.

169
00:14:32.180 --> 00:14:36.720
I'm not going to do that right now because I'm not even sure if this works or not.

170
00:14:36.770 --> 00:14:45.620
We're going to do this after we finish retrieving information and displaying them in our table view

171
00:14:45.890 --> 00:14:51.260
and we're going to do the same bottom thing enabling and disabling to make sure that image has been

172
00:14:51.590 --> 00:14:53.450
selected later on.

173
00:14:53.450 --> 00:14:55.370
Don't worry about that either.

174
00:14:55.370 --> 00:14:58.580
So let's stop and continue within the next lecture.
