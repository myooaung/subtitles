WEBVTT
1
00:00:00.510 --> 00:00:02.590
Hi reading this lecture.

2
00:00:02.590 --> 00:00:08.490
Where are you going to see how we can't write data to our database in PA server.

3
00:00:08.490 --> 00:00:11.100
So let's go to a real controller.

4
00:00:11.100 --> 00:00:11.870
OK.

5
00:00:12.090 --> 00:00:16.400
Because we have already connected our app with our server.

6
00:00:16.470 --> 00:00:16.800
Right.

7
00:00:16.800 --> 00:00:25.300
So we can actually test to write something to our database and we going to use parts objects.

8
00:00:25.320 --> 00:00:32.190
Either you're a cheat this and as I said before we're going to use this database for any reason like

9
00:00:32.190 --> 00:00:36.540
storage like authentication like writing or reading data.

10
00:00:36.570 --> 00:00:41.030
So we have to make sure that we know how to do that.

11
00:00:41.040 --> 00:00:48.450
So after importing pass you can just come over here and create something called Pass object and this

12
00:00:48.450 --> 00:00:52.060
will drive from P.F. Object class.

13
00:00:52.200 --> 00:00:56.640
So after importing pass you can call this P.F. object.

14
00:00:56.670 --> 00:01:01.400
OK if you open up parentheses it will ask you for a class name.

15
00:01:02.610 --> 00:01:08.430
So this class name is actually like a collection name in firebase.

16
00:01:08.610 --> 00:01:12.500
So rather than collect shells we have classes over here.

17
00:01:12.570 --> 00:01:16.470
So this is like having a table in sequel.

18
00:01:16.470 --> 00:01:22.080
OK so we have a User class right now and we have columns.

19
00:01:22.080 --> 00:01:30.930
We have some key values over here in which we can assign new values with new rows.

20
00:01:30.930 --> 00:01:32.610
And let me show you what I mean.

21
00:01:32.610 --> 00:01:40.350
I'm going to create a first class OK in which we will have a name of a fruit and a calorie welfare fruit.

22
00:01:40.380 --> 00:01:48.240
So after you say pass object you can open the parentheses and write whatever value that you want here

23
00:01:48.600 --> 00:01:55.410
rather than value actually you write a key over here like a name and this name will have something like

24
00:01:55.590 --> 00:01:57.040
Apple.

25
00:01:57.600 --> 00:02:06.580
So this is key value pairing like like we did in the firebase like we have specified the key of a field

26
00:02:06.870 --> 00:02:13.500
and the value of a field in here we have the key of the pass object as a name and the value of that

27
00:02:13.770 --> 00:02:15.560
key as an apple.

28
00:02:15.570 --> 00:02:23.070
So our object will have the column name and value of Apple under that column.

29
00:02:23.070 --> 00:02:27.210
And let me do another example so you can understand that better.

30
00:02:27.210 --> 00:02:32.170
I will go for calories and I'm going to say 100.

31
00:02:32.400 --> 00:02:34.980
So I created an object.

32
00:02:35.100 --> 00:02:36.420
I give it a name.

33
00:02:36.420 --> 00:02:42.860
I gave it a calories and I gave it some respect of values as well.

34
00:02:42.990 --> 00:02:45.430
And now I want to save this.

35
00:02:45.480 --> 00:02:52.150
So if you say pass object save you will see we have a lot of options.

36
00:02:52.440 --> 00:02:56.220
So if you say that save it will throw an error.

37
00:02:56.250 --> 00:02:59.310
So we have to use try catch and everything.

38
00:02:59.400 --> 00:03:05.930
And also this works sync erroneously and in most of the cases we don't want that.

39
00:03:05.990 --> 00:03:06.560
Right.

40
00:03:06.600 --> 00:03:14.220
We want to work with a synchronous tasks so that we don't wait for it to happen and we don't block the

41
00:03:14.280 --> 00:03:20.840
main user interface so that users can actually continue using the app.

42
00:03:20.880 --> 00:03:27.990
So in most of the cases we don't want that we want something within background like this say ring background

43
00:03:28.260 --> 00:03:30.560
it works as synchro nicely.

44
00:03:30.790 --> 00:03:31.530
OK.

45
00:03:31.650 --> 00:03:37.980
So we have a saving background and we have saved in background lit block and this gives us a completion

46
00:03:37.980 --> 00:03:44.880
block and this gives us a callback function within closure and we get to see the result of our action.

47
00:03:44.910 --> 00:03:48.780
So that's what we're going to use and say we eventually.

48
00:03:48.810 --> 00:03:52.760
It means that whenever you have the chance just do it.

49
00:03:52.760 --> 00:04:00.630
OK so in saving background if we lose the internet connection for example we will see an error but in

50
00:04:00.630 --> 00:04:06.330
saving eventually it will just save it eventually when its finds a chance.

51
00:04:06.330 --> 00:04:15.000
So most of the time in any methods in parts we're going to use in background with block because that's

52
00:04:15.000 --> 00:04:15.980
the way to go.

53
00:04:16.120 --> 00:04:16.580
Right.

54
00:04:17.340 --> 00:04:21.690
So let me choose this and hit enter.

55
00:04:21.840 --> 00:04:23.370
It will give you either.

56
00:04:23.370 --> 00:04:26.490
This is successful or not as a boolean.

57
00:04:26.490 --> 00:04:27.310
OK.

58
00:04:27.420 --> 00:04:34.680
So you can just write something like success in here as a variable name and it will give you an error

59
00:04:34.770 --> 00:04:37.290
if there is any on the other side.

60
00:04:37.320 --> 00:04:41.180
So I'm going to name this success and I'm going to name is error.

61
00:04:41.370 --> 00:04:48.150
So I will check to see if error is not nil and if is not nil most of the time we're going to display

62
00:04:48.150 --> 00:04:49.360
an error message.

63
00:04:49.410 --> 00:04:53.850
But right now I'm just going to print the error dot localised description.

64
00:04:54.120 --> 00:04:55.230
OK.

65
00:04:55.290 --> 00:04:58.470
Ls it means that it's successful.

66
00:04:58.530 --> 00:05:06.760
Right now I'm just going to say something like upload that so that we can know this gets uploaded.

67
00:05:06.880 --> 00:05:10.230
OK so let's run this in our simulator.

68
00:05:10.420 --> 00:05:11.410
And here you go.

69
00:05:11.410 --> 00:05:14.410
We have already seen the uploaded in here.

70
00:05:14.740 --> 00:05:23.110
So let's go to our dashboard and let's refresh this page to see if we got the for class.

71
00:05:23.110 --> 00:05:25.370
Here we go we have the fruits class.

72
00:05:25.690 --> 00:05:30.460
So if you click on it you will see we how some columns.

73
00:05:30.460 --> 00:05:32.650
We have some default columns here.

74
00:05:32.900 --> 00:05:35.200
OK like object I.D..

75
00:05:35.470 --> 00:05:37.230
So this is a unique I.D..

76
00:05:37.270 --> 00:05:39.910
And this is created bypass itself.

77
00:05:39.910 --> 00:05:45.790
So every time we create an object it gets its own object idea and this is very useful.

78
00:05:45.800 --> 00:05:49.230
We're going to use that in our code as well.

79
00:05:49.240 --> 00:05:58.960
So this has created app and updated ads so this automatically actually uploads or creates the data itself.

80
00:05:58.970 --> 00:06:00.800
Then we create an object.

81
00:06:01.000 --> 00:06:02.130
So this is very good.

82
00:06:02.130 --> 00:06:07.530
So we can just use this if we want something chronological in our app.

83
00:06:07.570 --> 00:06:13.760
So in here we have the ACL and this is kind of the security rules in firebase.

84
00:06:13.840 --> 00:06:19.150
For example it says that the public can read and write it right now.

85
00:06:19.390 --> 00:06:22.300
And in here we have the name and the calories.

86
00:06:22.300 --> 00:06:26.630
So these are two columns that are created by us.

87
00:06:26.650 --> 00:06:35.150
So here you go we managed to save our first information in our back for app server so we can create

88
00:06:35.150 --> 00:06:39.700
the new column from here we can manually change data from here.

89
00:06:39.710 --> 00:06:46.330
OK we can refresh the data and we can see track what's going on inside of our database.

90
00:06:47.020 --> 00:06:49.270
So let's go back.

91
00:06:49.270 --> 00:06:56.410
As you can see it's very easy to create objects you key value pairings to that object and unsaved them

92
00:06:56.410 --> 00:07:00.750
to the server by just writing a few lines of code.

93
00:07:00.790 --> 00:07:04.840
So it's very user friendly it's very easy to follow along.

94
00:07:04.840 --> 00:07:11.020
Now let's stop up here and within the next lecture we are going to see how we can read data from the

95
00:07:11.020 --> 00:07:12.130
server as about.
