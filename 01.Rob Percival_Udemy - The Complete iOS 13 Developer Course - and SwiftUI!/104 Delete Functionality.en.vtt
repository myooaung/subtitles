WEBVTT
1
00:00:00.930 --> 00:00:06.390
Hi within this lecture we are going to add delete functionality in our app.

2
00:00:06.480 --> 00:00:13.020
Right now we can see the data we can see the details of the data and everything but we don't have delete

3
00:00:13.020 --> 00:00:19.960
functionality and we have seen how to delete values from table to use before right.

4
00:00:20.040 --> 00:00:27.120
We have to use commit editing style function but we don't know how to delete those values from the core

5
00:00:27.120 --> 00:00:29.300
data and we're just going to learn in this lecture.

6
00:00:29.790 --> 00:00:36.210
So go to the bottom of this controller and I'm not in the wheel controller I believe.

7
00:00:36.210 --> 00:00:44.040
I mean the details we see I have to go to wheel controller because that's where my table view is now

8
00:00:44.040 --> 00:00:45.630
at the bottom of the wheel controller.

9
00:00:45.690 --> 00:00:51.290
I'm just going to call for editing editing style committee editing style.

10
00:00:51.290 --> 00:00:51.500
Yeah.

11
00:00:51.510 --> 00:00:53.900
That is the one that I'm looking for.

12
00:00:53.910 --> 00:00:57.920
Remember we can have the delete functionality in here.

13
00:00:57.990 --> 00:01:03.570
We had to just check for the editing style and if it's delete we're just going to do what we have to

14
00:01:03.570 --> 00:01:04.340
do.

15
00:01:04.410 --> 00:01:13.890
So I will say if editing style is actually dot delete then I'm going to do my thing in here and deleting

16
00:01:14.100 --> 00:01:21.000
functionality in the core data and it has to be double equal sign of course and the leading functionality

17
00:01:21.000 --> 00:01:22.650
in the core data works like this.

18
00:01:22.650 --> 00:01:25.350
First we get the element from the core data.

19
00:01:25.750 --> 00:01:33.210
Okay so we do the patch again and then we just going to delete it and save it one more time.

20
00:01:33.210 --> 00:01:36.050
So I'm just going to create our app delegate.

21
00:01:36.150 --> 00:01:40.490
I'm just going to go over and create a factual crest one more time.

22
00:01:40.650 --> 00:01:46.290
So this is going to be exactly what we're doing in the details we see so you can just copy and paste

23
00:01:46.290 --> 00:01:46.860
as well.

24
00:01:46.950 --> 00:01:53.880
But I believe we should write this so it will be a practice for us so I'm going to drive this contacts

25
00:01:53.880 --> 00:01:58.950
from the app to get that persistent container that we've context.

26
00:01:58.980 --> 00:02:00.740
Okay.

27
00:02:00.840 --> 00:02:08.370
And then later on I'm just going to create my fetch request and remember this is and that's fetch requests.

28
00:02:08.640 --> 00:02:15.660
And remember the reason that I'm doing this before I delete the data I had to get it from the core data

29
00:02:15.930 --> 00:02:17.200
and then delete it.

30
00:02:17.260 --> 00:02:20.760
And and in the end actually I'm going to save it again.

31
00:02:21.540 --> 00:02:29.460
So in here I have I'm doing the same thing as I'm doing in the we did load but I'm just going to write

32
00:02:29.460 --> 00:02:30.970
it from scratch.

33
00:02:30.990 --> 00:02:35.570
So in this feature quest if you open parentheses it will ask you for an entity name.

34
00:02:35.860 --> 00:02:36.330
OK.

35
00:02:36.690 --> 00:02:45.930
So entity name will be paintings and we have to just say in his facial cross results one more time.

36
00:02:45.930 --> 00:02:52.290
So I think it's getting boring in here but at the same time you're doing this practice so you won't

37
00:02:52.290 --> 00:02:57.750
forget how to create app delegates how to create fetch requests.

38
00:02:57.750 --> 00:03:03.930
So let's say in this fetch request predicate will be in predicate why I'm doing this filtering thing

39
00:03:03.960 --> 00:03:12.210
because we're just going to get the selected item right the item that our user is trying to delete.

40
00:03:12.690 --> 00:03:14.260
So we're just going to get it.

41
00:03:14.340 --> 00:03:17.550
Using the idea of the selected item.

42
00:03:17.940 --> 00:03:25.980
So you know how to do that we're just going to use our selected ideas from the idea array and make it

43
00:03:26.010 --> 00:03:28.400
equal to I.D. percent at.

44
00:03:28.950 --> 00:03:32.620
So just say I.D. equal 2 percent adds.

45
00:03:32.730 --> 00:03:39.290
So with spaces over here and the arguments of course going to be the you you I.D. string.

46
00:03:39.420 --> 00:03:44.820
So this is going to be I.D. drink I.D. array index path throw.

47
00:03:45.050 --> 00:03:46.220
OK.

48
00:03:46.350 --> 00:03:53.980
So this will give me the selected items I.D. And I'm going to convert this to be a new UI this drink.

49
00:03:54.060 --> 00:04:00.390
So this is exactly the same thing that we have done in the details view controller.

50
00:04:00.690 --> 00:04:02.340
So we're gonna get this.

51
00:04:02.340 --> 00:04:05.370
We're going to get those values from the core data.

52
00:04:05.720 --> 00:04:11.150
And before we do that let me just not forget the return objects as false thing.

53
00:04:11.250 --> 00:04:21.060
And then I'm going to use the context and I'm going to fetch this as try results not the results contacts

54
00:04:21.120 --> 00:04:22.680
that fetch.

55
00:04:22.980 --> 00:04:26.000
And the fact you crest is fetch request.

56
00:04:26.220 --> 00:04:31.440
Of course we're going to have to do this in a do try catch structure.

57
00:04:31.440 --> 00:04:35.580
Okay do try catch.

58
00:04:36.270 --> 00:04:39.650
So print error if any error or cures.

59
00:04:40.410 --> 00:04:48.840
And then later on I'm just going to check if results is actually results that count is actually larger

60
00:04:48.840 --> 00:04:50.130
than zero.

61
00:04:51.060 --> 00:04:54.540
So there isn't any reason not to be.

62
00:04:54.540 --> 00:05:01.170
But just for being on the safe side I'm just going to check it anyway and just do the same for loop

63
00:05:01.200 --> 00:05:09.000
that we have been doing and cast is as and that's managed object and this will only give me one results.

64
00:05:09.060 --> 00:05:14.700
However we got an array in here so we have to go into for loop anyway.

65
00:05:14.700 --> 00:05:16.650
So I'm going to find the idea.

66
00:05:16.840 --> 00:05:17.410
OK.

67
00:05:17.520 --> 00:05:24.850
I'm going to get the idea from results that value and it doesn't pop up because I misspelled it.

68
00:05:24.870 --> 00:05:29.110
The result that value for the key I.D. as you I.D..

69
00:05:29.160 --> 00:05:39.500
OK and even though it doesn't make sense to you right now I'm just gonna check if this I.D. is equal

70
00:05:39.500 --> 00:05:49.490
to the idea that it's coming from my I.D. array so I'm just going to say if I.D. is equal to you you

71
00:05:49.490 --> 00:05:54.580
I.D. not you your I.D. I.D. array index parts that throw.

72
00:05:54.620 --> 00:05:55.510
OK.

73
00:05:55.520 --> 00:05:58.830
So what does it mean why I'm doing this.

74
00:05:58.850 --> 00:06:08.590
I got the idea if I got the selected I.D. from the idea array and I used that I.D. to get those information.

75
00:06:08.690 --> 00:06:11.470
So it has to be equal right.

76
00:06:11.480 --> 00:06:18.320
So I'm just comparing the same I.D. but I'm just doing this to be on the safe side because right now

77
00:06:18.350 --> 00:06:25.520
I'm just going to delete the value from the core data by saying context that delete and there is no

78
00:06:25.520 --> 00:06:26.780
return from this.

79
00:06:26.800 --> 00:06:27.150
OK.

80
00:06:27.170 --> 00:06:29.200
I'm just going to delete the object.

81
00:06:29.280 --> 00:06:33.140
OK I'm just going to say delete the result and there is no way back.

82
00:06:33.140 --> 00:06:41.630
So I'm just doing this just to be sure and after I'm deleting this result and result being DNS managed

83
00:06:41.630 --> 00:06:47.210
object I'm just going to remove everything from my arrays as well.

84
00:06:47.300 --> 00:06:54.940
OK I'm just going to say name array not renew I.D. array that removed in order to synchronize my datasets.

85
00:06:54.950 --> 00:06:56.350
OK.

86
00:06:56.510 --> 00:07:03.270
And for the last thing I'm just going to have to say table view dot reload data.

87
00:07:03.280 --> 00:07:08.660
Because I've just changed the data source and that's it.

88
00:07:08.690 --> 00:07:13.700
Right now I deleted the others managed object meaning I deleted the record.

89
00:07:13.730 --> 00:07:17.750
Now I have to save the current context.

90
00:07:17.750 --> 00:07:22.160
So I have to come over here and say context not save.

91
00:07:22.460 --> 00:07:28.800
And again it will give me an error saying that you have to do this inside of a do you try catch.

92
00:07:28.880 --> 00:07:34.770
So I'm just gonna create another do try catch inside of my current to try catch.

93
00:07:34.770 --> 00:07:35.700
Okay.

94
00:07:35.930 --> 00:07:38.910
But in here just say do try.

95
00:07:38.920 --> 00:07:40.330
Context not save.

96
00:07:40.370 --> 00:07:44.690
Catch if it's any error you can just print the error.

97
00:07:46.340 --> 00:07:47.060
So that's it.

98
00:07:47.060 --> 00:07:54.020
That's how you delete the value from core data you get the data you check if it's the data that you

99
00:07:54.020 --> 00:08:00.680
want to delete and you delete the data or you delete DNS managed object and then you save it.

100
00:08:00.710 --> 00:08:02.890
I'm just going to say break in here.

101
00:08:02.930 --> 00:08:04.230
Why do I use this.

102
00:08:04.250 --> 00:08:11.060
Because if I delete the data ok I'm checking give the IDC cool and everything.

103
00:08:11.060 --> 00:08:17.990
If I delete the data if this idea is actually the idea that I'm looking for then I want to break out

104
00:08:17.990 --> 00:08:19.400
a for loop.

105
00:08:19.400 --> 00:08:26.270
It will give me very results really because we are working with ideas not names not any made up values

106
00:08:26.300 --> 00:08:27.690
that we have come up with.

107
00:08:27.740 --> 00:08:29.290
We are working with ideas.

108
00:08:29.420 --> 00:08:32.830
So it's going to be only one looping this fall.

109
00:08:32.880 --> 00:08:37.300
But to be on the safe side I'm just going to use break in here.

110
00:08:37.310 --> 00:08:45.200
So if you decide to use something rather than I.D. in your own codes you have to use this because once

111
00:08:45.200 --> 00:08:50.700
you delete one item then this loop shouldn't be continue.

112
00:08:50.780 --> 00:08:52.900
You have to break out of this loop.

113
00:08:52.910 --> 00:09:01.100
So if you say break it means that and this loop just go out of it and do what you have to do next.

114
00:09:01.160 --> 00:09:08.180
And again in my case it isn't necessary to use this but it in some cases we're doing this with a name

115
00:09:08.180 --> 00:09:11.440
rather than I.D. should be necessary.

116
00:09:11.510 --> 00:09:12.770
So let's see.

117
00:09:12.770 --> 00:09:20.780
Let's run this and let's see if we can actually delete the values from table were you let's say swipe

118
00:09:20.780 --> 00:09:23.870
left and here you go We can delete them.

119
00:09:23.870 --> 00:09:28.010
OK so let me delete this one and let me delete this one as well.

120
00:09:28.320 --> 00:09:29.290
Yep they're gone.

121
00:09:29.600 --> 00:09:33.210
So let's see if we managed to delete them from the core data.

122
00:09:33.350 --> 00:09:40.090
If we run it from the scratch one more time as you can see we don't see the related the value.

123
00:09:40.100 --> 00:09:43.280
So it works.

124
00:09:43.280 --> 00:09:44.550
So far so good.

125
00:09:44.600 --> 00:09:50.930
Let's stop here and within the next lecture we're going to finish our app by doing the rest of the improvements.
