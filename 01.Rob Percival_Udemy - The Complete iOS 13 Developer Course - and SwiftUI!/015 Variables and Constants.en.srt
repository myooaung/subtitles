1
00:00:01,990 --> 00:00:08,830
Hi within this lecture we're going to continue working on playgrounds and we're going to learn about

2
00:00:09,130 --> 00:00:10,900
variables.

3
00:00:10,900 --> 00:00:13,560
So far we have been creating variables.

4
00:00:13,660 --> 00:00:18,610
As an example like this so like var tr is a variable.

5
00:00:18,610 --> 00:00:20,830
My number is a variable.

6
00:00:20,830 --> 00:00:22,300
So let me take an n here.

7
00:00:22,300 --> 00:00:26,260
If you do two slashes you can't take in notes like this.

8
00:00:26,260 --> 00:00:28,890
Variables and constants.

9
00:00:29,000 --> 00:00:31,350
We going to learn what a variable is right now.

10
00:00:31,960 --> 00:00:38,470
But this is important as well if you add two slashes before a line means this is a cold month so you

11
00:00:38,470 --> 00:00:42,490
cannot type whatever you want in a coding section.

12
00:00:42,490 --> 00:00:43,090
Okay.

13
00:00:43,240 --> 00:00:52,360
So this is all relevant codes but if I do something like this so if I write something random like this

14
00:00:52,390 --> 00:00:59,500
if I click the play button over here it won't play because it won't recognize what I'm writing.

15
00:00:59,830 --> 00:01:01,290
So if you take a..

16
00:01:01,360 --> 00:01:09,380
Just add two slashes so we call this a comment string a comment line in our code.

17
00:01:09,410 --> 00:01:17,230
Okay so what is ever able as you can see we can create variables with keyword var.

18
00:01:17,230 --> 00:01:19,440
But why do we need them.

19
00:01:19,570 --> 00:01:23,300
Because we can not do everything in the code.

20
00:01:23,320 --> 00:01:26,810
Maybe we want to take some input from the user.

21
00:01:27,160 --> 00:01:30,420
Or maybe we want to get some data from the Internet.

22
00:01:30,430 --> 00:01:32,290
We want to download something.

23
00:01:33,010 --> 00:01:36,080
So we cannot know what's going to happen.

24
00:01:36,160 --> 00:01:38,290
We cannot anticipate everything.

25
00:01:38,320 --> 00:01:44,220
So we need to store those values in order to work on them later on.

26
00:01:44,230 --> 00:01:51,280
For example if you're going to build an app like this you're going to take the input of the user for

27
00:01:51,280 --> 00:01:52,280
their name.

28
00:01:52,570 --> 00:02:00,490
So the user will just enter their name into a text box and then later on they're going to enter there's

29
00:02:00,490 --> 00:02:01,790
her name.

30
00:02:01,880 --> 00:02:05,360
We're going to just display this name as her name together.

31
00:02:06,190 --> 00:02:14,610
So in order to do that you cannot just come here and you can not just say name is this name is that

32
00:02:14,650 --> 00:02:15,850
or just show.

33
00:02:15,850 --> 00:02:24,100
This just showed that you had to create something in order to hold these value inside of it.

34
00:02:24,610 --> 00:02:26,350
So this is ever able.

35
00:02:26,350 --> 00:02:28,090
This is what we call a variable.

36
00:02:28,090 --> 00:02:35,120
For example we are just multiplying this ten by five here and it shows us the value of 50.

37
00:02:35,380 --> 00:02:40,570
But maybe we want to multiply the age of the user by five.

38
00:02:40,600 --> 00:02:45,120
So when I'm writing this code I don't know the age of the user.

39
00:02:45,130 --> 00:02:54,490
So I need to create something like var my age then multiply it by five and let me do this by example

40
00:02:54,490 --> 00:02:57,590
so you will understand it much better.

41
00:02:57,600 --> 00:02:59,030
Okay.

42
00:02:59,530 --> 00:03:04,360
So when I create ever able I use var keyword.

43
00:03:04,360 --> 00:03:14,090
For example if I say var user name and b word that I'm using the second word with capitalized letters.

44
00:03:14,110 --> 00:03:18,940
So if I say user name the N will be capitalized.

45
00:03:18,940 --> 00:03:20,020
Why are we doing this.

46
00:03:20,050 --> 00:03:21,070
I'm gonna show you.

47
00:03:21,070 --> 00:03:22,270
Don't worry.

48
00:03:22,270 --> 00:03:28,150
For example right now I'm going to assign you my user name to be James.

49
00:03:28,150 --> 00:03:31,440
So why I'm using a capitalized letter.

50
00:03:31,480 --> 00:03:33,860
So this is a conversation.

51
00:03:33,910 --> 00:03:34,810
OK.

52
00:03:34,870 --> 00:03:39,820
This is what we generally do in swift programming language.

53
00:03:39,820 --> 00:03:44,270
Every programming language has their own connotation.

54
00:03:44,290 --> 00:03:46,510
So let me take notes here.

55
00:03:46,510 --> 00:03:50,050
So we have something called Snake case.

56
00:03:50,050 --> 00:03:59,060
If we follow this convention we will do this in a different way like that user under name.

57
00:03:59,080 --> 00:04:01,350
And this is a snake case convention.

58
00:04:01,630 --> 00:04:01,990
OK.

59
00:04:01,990 --> 00:04:03,580
Does it stay Kay's name.

60
00:04:04,870 --> 00:04:10,380
So if we do something like this var user sir name OK.

61
00:04:10,390 --> 00:04:14,430
With underscores it will still work.

62
00:04:14,440 --> 00:04:18,450
It actually doesn't matter what we name our variables.

63
00:04:18,490 --> 00:04:19,150
OK.

64
00:04:19,300 --> 00:04:22,650
But generally we don't do that in Swift.

65
00:04:22,660 --> 00:04:29,130
So when you go to the internet when you search for things you won't see that you will see this.

66
00:04:29,140 --> 00:04:34,980
So I'm going to follow the convention of Swift which is a camel case.

67
00:04:34,990 --> 00:04:35,350
OK.

68
00:04:35,950 --> 00:04:41,870
So this is called Snake case and this is called camel case.

69
00:04:42,070 --> 00:04:49,900
And again this is not mandatory but we are doing this in order to make our variables more readable by

70
00:04:49,900 --> 00:04:52,720
coders by developers.

71
00:04:52,720 --> 00:04:58,000
So I'm going to follow these norm in here throughout the course.

72
00:04:58,420 --> 00:05:06,070
So that's why I'm using capitalized letters so for example I created a user name called James and I

73
00:05:06,070 --> 00:05:11,290
created a user surname in the name of Hatfield.

74
00:05:11,410 --> 00:05:22,210
OK so any time I can change those renewables because they are variables OK I can come here and say user

75
00:05:22,210 --> 00:05:26,140
name is not James say the more user name is something else.

76
00:05:26,140 --> 00:05:34,600
So I can do whatever I want to do with James that is so because this every both right because I stored

77
00:05:34,900 --> 00:05:45,610
these value into user name and I stored is Hatfield value in the user name Strake and the string means

78
00:05:45,640 --> 00:05:49,150
basically yet text okay a text value.

79
00:05:50,050 --> 00:05:53,380
So what if I want to changed his user name.

80
00:05:53,380 --> 00:05:58,810
If you type user name and if you say this is not James right now.

81
00:05:58,990 --> 00:06:07,120
This is Lars if you hit shift enter rather than hitting the play button it will automatically run this

82
00:06:07,120 --> 00:06:08,270
codes for you.

83
00:06:08,290 --> 00:06:08,690
OK.

84
00:06:08,740 --> 00:06:16,900
You can do shift enter when you type something like you can say print user name and you can say print

85
00:06:17,260 --> 00:06:27,340
user name here as well and not user surname user name as you can see if I type user I can hit TAB or

86
00:06:27,340 --> 00:06:30,980
I can just double click on whatever I want to choose.

87
00:06:31,060 --> 00:06:31,690
And now what.

88
00:06:31,690 --> 00:06:39,640
Now if I do play or shift enter it will play it for me for example as you can see for the first time

89
00:06:40,060 --> 00:06:48,160
this run user name print the user name and it just gave me James and for the second time it gave me

90
00:06:48,160 --> 00:06:54,420
last because I changed the user name in here and this tells us something.

91
00:06:54,670 --> 00:06:59,240
These codes are actually run with order.

92
00:06:59,330 --> 00:07:02,500
Right there running with chronology.

93
00:07:02,530 --> 00:07:05,610
So it is running the first command.

94
00:07:05,620 --> 00:07:10,290
Then the second comment than the term comment and the fourth comment and the fifth comment.

95
00:07:11,260 --> 00:07:20,020
And because of that first I have seen James as a log as a print output.

96
00:07:20,020 --> 00:07:26,920
And then I changed this James then I so Lars.

97
00:07:27,010 --> 00:07:35,680
So for example if I go to the top and if I want to change the user name I cannot do that because the

98
00:07:35,680 --> 00:07:39,810
user your name won't be even defined in here.

99
00:07:40,000 --> 00:07:40,770
OK.

100
00:07:40,900 --> 00:07:44,920
So if you could play button over here it will give you an error.

101
00:07:45,040 --> 00:07:49,450
It will say this is an unresolved identifier because why.

102
00:07:49,510 --> 00:07:59,440
Because I have initialized I have defined this in the tenth row in the tenth light user name isn't even

103
00:07:59,440 --> 00:08:02,020
defined in the eight line.

104
00:08:02,020 --> 00:08:07,300
So once you defined this with the VAR keyword then you can change it.

105
00:08:07,330 --> 00:08:08,140
You can play it.

106
00:08:08,160 --> 00:08:11,570
You can do what they were you want to do with it.

107
00:08:12,160 --> 00:08:13,930
And this is for variables.

108
00:08:14,020 --> 00:08:14,310
OK.

109
00:08:14,320 --> 00:08:19,560
We are we also how constants and we use let keyword for that.

110
00:08:20,110 --> 00:08:24,340
So it means that we're going to define this value.

111
00:08:24,340 --> 00:08:26,800
And we not going to change it afterwards.

112
00:08:27,190 --> 00:08:30,800
So for example let's say that let the user age is 50.

113
00:08:30,820 --> 00:08:34,330
Now I can reach the user age when I type user age.

114
00:08:34,360 --> 00:08:37,960
OK but I cannot do this.

115
00:08:37,990 --> 00:08:48,730
I cannot say user age is now tardy because I have defined this as a constant as you can say this is

116
00:08:49,670 --> 00:08:57,280
I resolved because I have misspelled it as you can see I have to run a with capitalized day.

117
00:08:57,290 --> 00:09:04,660
OK as you can see it says that you cannot assign these value because user age is a less constant.

118
00:09:05,250 --> 00:09:07,380
So this is not ever able anymore.

119
00:09:07,380 --> 00:09:09,360
This is a constant.

120
00:09:09,480 --> 00:09:13,930
So we have to create the variables with the right keyword.

121
00:09:13,950 --> 00:09:21,570
If you want to change them afterwards and we want to create variables or constants with let's keyword

122
00:09:21,900 --> 00:09:25,550
if we don't want to change them afterwards.

123
00:09:25,590 --> 00:09:26,750
OK.

124
00:09:26,940 --> 00:09:34,890
So why do we need constants for example if we if we are going to use something like Pi number in our

125
00:09:35,040 --> 00:09:37,950
app we won't change it forever.

126
00:09:37,950 --> 00:09:46,560
Right so pi is constant like G 14 and it doesn't make any sense to define these variables with a var

127
00:09:46,590 --> 00:09:47,700
keywords.

128
00:09:47,790 --> 00:09:50,420
So we need the Latin here.

129
00:09:50,430 --> 00:09:57,610
So we multiply 10 by five before can we multiply user age with pi.

130
00:09:57,900 --> 00:10:03,600
In fact we cannot do that because they're not even the same type.

131
00:10:04,440 --> 00:10:06,960
So here comes a new concept.

132
00:10:07,020 --> 00:10:09,190
So there is something called type.

133
00:10:09,370 --> 00:10:10,090
Okay.

134
00:10:10,320 --> 00:10:16,480
And as you can see one is in s integer and then another one is double.

135
00:10:16,500 --> 00:10:20,100
So we then learn what those mean in the next lecture.

136
00:10:20,100 --> 00:10:21,030
Don't worry.

137
00:10:21,030 --> 00:10:25,380
But for right now know that variables are not the same.

138
00:10:25,410 --> 00:10:33,530
So we have texts strings like James or Hatfield or Lars and we have doubles or integers.

139
00:10:33,570 --> 00:10:42,030
So if you put Dad o over here in the user age value then it will compile and it will just do the multiplication

140
00:10:42,030 --> 00:10:43,920
for you and show the results.

141
00:10:44,220 --> 00:10:47,740
As you can see now they are the same type.

142
00:10:47,790 --> 00:10:55,800
So now maybe you understood that numbers of decimals and numbers without decimals are not the same type.

143
00:10:55,830 --> 00:10:58,110
And that's correct.

144
00:10:58,110 --> 00:11:03,300
So we're going to stop here and within the next lecture we're going to discuss what are some different

145
00:11:03,300 --> 00:11:07,800
kinds of variables that we can operate with in swift.
