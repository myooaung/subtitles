WEBVTT
1
00:00:00.390 --> 00:00:01.690
We didn't lecture.

2
00:00:01.790 --> 00:00:06.090
Where are you going to go ahead and create our landmark book project.

3
00:00:06.090 --> 00:00:13.440
And we're going to see how to implement table we use how to set up table views so we can use them efficiently

4
00:00:13.440 --> 00:00:14.680
later on.

5
00:00:14.760 --> 00:00:22.080
So I'm going to go for a single view app as usual and for product name I'm going to go for a landmark

6
00:00:22.080 --> 00:00:24.090
book app or landmark book.

7
00:00:24.330 --> 00:00:24.750
OK.

8
00:00:25.410 --> 00:00:29.210
So don't check and his swift UI or car data.

9
00:00:29.340 --> 00:00:31.680
We're not going to use them in this lecture.

10
00:00:31.820 --> 00:00:40.530
And after we complete this actually you will have a good template in which you can build apps working

11
00:00:40.530 --> 00:00:47.220
with different kinds of data working with a race so that you can build your own apps.

12
00:00:47.220 --> 00:00:51.750
So let me create this and create this.

13
00:00:51.750 --> 00:00:55.120
Actually my IRS app folder.

14
00:00:55.110 --> 00:00:56.720
So so far so good.

15
00:00:56.730 --> 00:00:58.680
We have created our projects.

16
00:00:58.680 --> 00:01:06.630
So let me make this into a full screen and then later on I'm just going to go into main that storyboard.

17
00:01:06.630 --> 00:01:10.290
Because we will start by adding our table view.

18
00:01:10.460 --> 00:01:10.880
OK.

19
00:01:11.160 --> 00:01:18.930
So table viewer is actually a view so you can drag and drop them into your weave controller in your

20
00:01:18.930 --> 00:01:25.860
main storyboard and then you can actually define it in your weave controller that swift file and then

21
00:01:25.860 --> 00:01:27.810
start by using them.

22
00:01:27.940 --> 00:01:34.630
You going to learn about so much new things and so much new concepts during this lecture.

23
00:01:34.630 --> 00:01:41.250
We're going to see how to work with delegates how to set up table we use every going to practice this

24
00:01:41.250 --> 00:01:44.870
information so much later on.

25
00:01:44.910 --> 00:01:50.670
So you're going to learn something new and you will get to practice it later on.

26
00:01:50.680 --> 00:01:56.220
Don't worry if you get overwhelmed during this lecture okay.

27
00:01:56.610 --> 00:01:59.220
So here we don't have anything.

28
00:01:59.280 --> 00:02:05.160
Now I'm going to go to my library as usual and I'm going to search for a table view.

29
00:02:05.160 --> 00:02:09.210
So here you see the table view and you see some other teams as well.

30
00:02:09.210 --> 00:02:12.190
Don't worry about them we're going to see what they are.

31
00:02:12.360 --> 00:02:20.720
In the following sections right now I want to make my table view straight to the edges right.

32
00:02:20.790 --> 00:02:30.270
So one way to do that is to come over here to my constraints and give zero constraints to each of these

33
00:02:30.270 --> 00:02:30.680
sites.

34
00:02:30.690 --> 00:02:38.010
So make sure that they're all selected and add for constraints and it will just stretch to the edges.

35
00:02:38.010 --> 00:02:40.440
So this is exactly what we want.

36
00:02:40.470 --> 00:02:47.910
We want a table view filling up all the screen in our we have controller.

37
00:02:47.940 --> 00:02:48.800
OK.

38
00:02:49.080 --> 00:02:56.010
So later on of course we going to have another view controller in which we will display the details

39
00:02:56.010 --> 00:02:57.770
of the view selected.

40
00:02:57.840 --> 00:03:05.200
But right now I'm just going to go over and drag and drop my table view into my view controller files.

41
00:03:05.700 --> 00:03:09.600
So let me try to go to my main sorry Bert.

42
00:03:09.660 --> 00:03:09.920
Yeah.

43
00:03:09.930 --> 00:03:18.000
Here so let me zoom in a little bit and as usual I'm going to control drag this table view and drop

44
00:03:18.000 --> 00:03:22.670
it in my weave controller and I'm going to name this table you.

45
00:03:23.100 --> 00:03:25.020
OK so that's it.

46
00:03:25.050 --> 00:03:30.720
That's all I had to do to create table view and define it in my view controller.

47
00:03:31.470 --> 00:03:38.640
So let's start this in our simulator and let's see how it looks like it will look like fine by the way

48
00:03:38.640 --> 00:03:46.260
but we're going to have to set some things up in order to start using this table view in our coding

49
00:03:46.260 --> 00:03:47.030
file.

50
00:03:47.240 --> 00:03:56.280
OK but for right now I just want to see how table view looks like in my simulator and I ran this on

51
00:03:56.280 --> 00:03:59.160
my iPhone X our simulator.

52
00:03:59.850 --> 00:04:08.300
So let me open this every going to see some empty rows empty table view south actually.

53
00:04:08.370 --> 00:04:12.450
So each row is cold at table view south.

54
00:04:13.170 --> 00:04:21.780
And as you can see we have some empty rows and we're going to fill them up with data in a minute in

55
00:04:21.780 --> 00:04:22.800
order to do that.

56
00:04:22.800 --> 00:04:25.190
I'm just going to go ahead and close this.

57
00:04:25.210 --> 00:04:26.090
OK.

58
00:04:26.220 --> 00:04:29.900
And we will start working on these rows.

59
00:04:30.000 --> 00:04:32.230
So let me go to you controller.

60
00:04:32.340 --> 00:04:32.880
OK.

61
00:04:33.510 --> 00:04:40.540
So this is our real controller that's we've done table view is already defined in here.

62
00:04:40.620 --> 00:04:49.230
So right now we're going to do what we have to do while we work with table we use each time.

63
00:04:49.890 --> 00:04:56.730
So whenever you add a table we've to your project you have to follow these exact steps.

64
00:04:56.730 --> 00:05:05.230
So first we're going to work with this class I know you don't know even why the classes so class consists

65
00:05:05.380 --> 00:05:08.400
of elements like functions and variables.

66
00:05:08.440 --> 00:05:13.160
So this is like a blueprint of our app blueprint of our project.

67
00:05:13.300 --> 00:05:13.820
Okay.

68
00:05:14.200 --> 00:05:25.640
And this is a class of a UI view controller and reading to make this a delegate of UI table view.

69
00:05:26.350 --> 00:05:30.400
So what do I mean by making get delegates.

70
00:05:30.520 --> 00:05:39.460
So when you make delegate when you go to some delegate C to your class it means that this class can

71
00:05:39.460 --> 00:05:43.810
use the functions of that delegate class.

72
00:05:43.840 --> 00:05:48.920
So if you hit coma and say you table you delegate over here.

73
00:05:49.150 --> 00:05:59.110
And also if you say UI table view data source it means that we get to use this UI table we've delegate

74
00:05:59.380 --> 00:06:05.050
and UI table view data source functions in our class.

75
00:06:05.050 --> 00:06:11.370
After just sections where you're going to learn about object oriented programming and you will understand

76
00:06:11.370 --> 00:06:12.470
it much better.

77
00:06:12.580 --> 00:06:19.810
But right now if you click on this UI table view delegate and if you say jump to definition you will

78
00:06:19.810 --> 00:06:27.630
see a UI table with delegate defining in here UI table view delegate filing here.

79
00:06:27.640 --> 00:06:32.650
So this is a D Swift's programming language builds in file.

80
00:06:32.650 --> 00:06:42.880
Okay I you will see some functions and you will actually see how with works encoding but what we are

81
00:06:42.880 --> 00:06:50.680
going to do is just take two functions out of that class out of that protocol in order to make this

82
00:06:50.680 --> 00:06:51.790
work.

83
00:06:51.820 --> 00:06:56.650
So when you do at the UI table have delegate.

84
00:06:56.650 --> 00:07:04.840
It means that you're now capable of you have the power of using these functions and in order to make

85
00:07:04.840 --> 00:07:09.430
this work you have to define two of these functions.

86
00:07:09.430 --> 00:07:10.240
OK.

87
00:07:10.420 --> 00:07:19.060
How are we going to see what are those obviously but know that the table you delegate and table wheel

88
00:07:19.060 --> 00:07:27.790
data serves is going to be our view controller and as you can see this does not confirm to the table

89
00:07:27.790 --> 00:07:35.350
view data source or UI table view delegate and in order to solve this problem I'm going to come over

90
00:07:35.350 --> 00:07:39.820
here not in the V did load but under the we load.

91
00:07:39.820 --> 00:07:48.420
Okay we're going to call some other functions and if I hadn't put this UI table we've delegate on UI

92
00:07:48.460 --> 00:07:56.830
table view data source lines in here I wouldn't be able to call this functions that I'm about to call

93
00:07:56.840 --> 00:07:58.930
right here.

94
00:07:58.990 --> 00:08:05.980
So since we have done that we're going to call these functions and these are functions like we did load

95
00:08:05.980 --> 00:08:14.860
over here but these are related to not we have control or lifecycle but these are actually focusing

96
00:08:15.040 --> 00:08:18.550
on the table view themselves.

97
00:08:18.550 --> 00:08:22.950
So let's come here and just write s for a row.

98
00:08:22.960 --> 00:08:23.610
Okay.

99
00:08:23.920 --> 00:08:29.740
So this is the function that we're going to create our UI table use cell.

100
00:08:30.160 --> 00:08:35.230
So this is basically the row each row that you see in the table view.

101
00:08:35.260 --> 00:08:42.280
So if you just type table you sell sell for a row it will just show up and double click on it and then

102
00:08:42.520 --> 00:08:52.570
you have to go for number of rows in section so click on this one more time and you have these two functions

103
00:08:52.840 --> 00:09:01.330
that you need to set up in order to use table view as you can see errors now went away because we have

104
00:09:01.330 --> 00:09:08.470
called the necessary functions in order to confirm to this UI table we delegate and UI table view data

105
00:09:08.470 --> 00:09:16.630
source and then we're going to just rewrite what we want to do inside of these functions.

106
00:09:16.630 --> 00:09:21.130
So the first function actually defines the S for a row.

107
00:09:21.580 --> 00:09:32.200
So as I said before our UI table view causes some rows and each of these rows has some UI table view

108
00:09:32.200 --> 00:09:33.010
sets.

109
00:09:33.490 --> 00:09:39.760
So whatever rewrite here it will be displayed on the table we have rows.

110
00:09:40.720 --> 00:09:48.280
And basically we're going to get data from an array and we're going to show those arrays if we're going

111
00:09:48.280 --> 00:09:56.710
to show these elements of arrays inside of the zeros and in here we're going to define what kind of

112
00:09:56.710 --> 00:09:58.290
a number we want to return.

113
00:09:58.300 --> 00:10:01.110
So to returns on integer as you can see.

114
00:10:01.240 --> 00:10:06.920
So if we say return 10 our table you will have 10 rows.

115
00:10:07.090 --> 00:10:10.150
And in here he two returns your table to you sell.

116
00:10:10.420 --> 00:10:16.930
So I'm going to create a table you sell and it's going to return a UI table to you.

117
00:10:17.650 --> 00:10:26.200
So I'm going to say let s is a UI table to you sell just like we are creating a view with a code rather

118
00:10:26.200 --> 00:10:29.790
than dragging and dropping it in our main that storyboard.

119
00:10:29.950 --> 00:10:31.390
And this will be ours.

120
00:10:31.380 --> 00:10:31.990
How.

121
00:10:32.170 --> 00:10:33.420
Right.

122
00:10:33.490 --> 00:10:34.710
And in this.

123
00:10:34.750 --> 00:10:40.530
Actually I can just change the tax change the way it looks.

124
00:10:40.570 --> 00:10:42.450
So I'm gonna do that.

125
00:10:42.450 --> 00:10:45.060
But for right now I'm just going to say return.

126
00:10:45.340 --> 00:10:45.890
So.

127
00:10:46.360 --> 00:10:50.480
So the error went away because this was expecting yes.

128
00:10:50.650 --> 00:10:51.790
And I gave it one.

129
00:10:52.870 --> 00:10:58.740
So if you say sell that tax label you can write whatever you want in it.

130
00:10:58.750 --> 00:11:04.990
So sell the tax label dot tax is test for example.

131
00:11:04.990 --> 00:11:12.890
And here we have some optional issues so you have to make this tax label optional.

132
00:11:13.270 --> 00:11:14.630
OK.

133
00:11:14.740 --> 00:11:22.090
And before we test this you have to come to with that load and you have to say table you delegate is

134
00:11:22.150 --> 00:11:24.880
actually the view controller that we are in.

135
00:11:25.000 --> 00:11:30.910
And in order to do that what you're going to write here is not the view controller itself but you're

136
00:11:30.910 --> 00:11:33.310
just going to have to type s.

137
00:11:33.820 --> 00:11:40.360
So remember we refer our real controller with s keyword like we did before.

138
00:11:41.070 --> 00:11:44.610
So I'm going to go for self and it refers to controller.

139
00:11:44.790 --> 00:11:45.620
OK.

140
00:11:45.760 --> 00:11:52.810
And delegate and also the table view data source will be self as well because we're going to get the

141
00:11:52.810 --> 00:11:56.280
data source from this view controller.

142
00:11:56.500 --> 00:12:01.750
So that's the final thing that we need to do in order to use this table view.

143
00:12:02.590 --> 00:12:10.990
So I'm going to go for some far more time okay and I'm going to say table view table view.

144
00:12:11.050 --> 00:12:11.560
Okay.

145
00:12:11.560 --> 00:12:15.340
That data serves is again south.

146
00:12:16.570 --> 00:12:17.990
So that's it.

147
00:12:18.190 --> 00:12:25.750
And maybe it's just kind of overwhelming right now but you will get used to it because Reagan to do

148
00:12:25.750 --> 00:12:29.410
this a lot in the following sections as well.

149
00:12:29.410 --> 00:12:29.730
OK.

150
00:12:29.740 --> 00:12:36.400
Because we will need table views in almost every app that we going to build because they're so efficient

151
00:12:36.700 --> 00:12:38.860
they make our life so easy.

152
00:12:39.430 --> 00:12:45.340
So you have to call you a table where you delegate and table with data serves you have to sign this

153
00:12:45.340 --> 00:12:52.960
table to use to your weave controller and then you have to call these two functions in which you define

154
00:12:53.260 --> 00:13:01.710
the table you sell and in which you define the table view number of rows.

155
00:13:01.780 --> 00:13:10.980
So if everything's fine we're going to see 10 rows as we can in here and they are all field tests.

156
00:13:11.200 --> 00:13:12.460
So this works.

157
00:13:12.460 --> 00:13:13.290
Right.

158
00:13:13.300 --> 00:13:21.910
So rather than test I'm going to display some data in here and this data will come from an array and

159
00:13:22.150 --> 00:13:32.050
the magic here is that this table view has some index as we have in arrays so for example the first

160
00:13:32.260 --> 00:13:34.870
row has the index of 0.

161
00:13:35.410 --> 00:13:45.940
So as you can see our arrays has the index of 0 for the first element as well so we can ordinarily define

162
00:13:45.940 --> 00:13:51.570
an orderly show the content of an array inside of our table view.

163
00:13:52.210 --> 00:13:56.740
So that's what we're going to work on during this section.

164
00:13:56.740 --> 00:14:03.460
Let's stop here actually and not make this lecture into a very long one and we will continue building

165
00:14:03.460 --> 00:14:07.060
our landmark book app within the next lecture.
