WEBVTT
1
00:00:00.780 --> 00:00:07.380
Hi within this lecture we are going to learn a concept called predicates and we will use this to filter

2
00:00:07.380 --> 00:00:10.940
out the results that we are getting from the car data.

3
00:00:11.070 --> 00:00:18.480
For example in our view controller we have just gotten a read data on the core data and just printed

4
00:00:18.480 --> 00:00:20.560
out the names on the table to you.

5
00:00:20.610 --> 00:00:26.760
But in here rather than getting only the names and the ideas I will just get everything related to one

6
00:00:26.760 --> 00:00:27.800
single item.

7
00:00:28.260 --> 00:00:31.670
So let me delete all of this and start from scratch.

8
00:00:31.740 --> 00:00:35.280
I'm going to of course create the app delegate one more time.

9
00:00:35.280 --> 00:00:40.740
So this will be UI application dot shared dot delegate.

10
00:00:40.920 --> 00:00:43.600
OK so delegates.

11
00:00:43.650 --> 00:00:51.030
Yes I'm going to first cast is the app delegate and then I'm going to create my context as usual so

12
00:00:51.030 --> 00:01:00.870
my contacts will be app delegate dot persistent container dot our we'll contact star we have context.

13
00:01:00.870 --> 00:01:02.470
Yes.

14
00:01:02.550 --> 00:01:09.490
So this one and I'm I'm going to create a flash request as we did before.

15
00:01:09.540 --> 00:01:16.340
So I'm going to say this is going to be a flash request and it will drive from n as fetch request.

16
00:01:16.470 --> 00:01:22.760
It will ask me for an entity name not entity but entity name.

17
00:01:22.770 --> 00:01:23.030
Yeah.

18
00:01:23.040 --> 00:01:24.120
Like this.

19
00:01:24.120 --> 00:01:31.180
So paintings and we're gonna have to add and as fh requests a result in here.

20
00:01:31.560 --> 00:01:35.380
So far so good we know how it's done right.

21
00:01:35.490 --> 00:01:39.570
Next thing we're going to just fashion is using context.

22
00:01:39.570 --> 00:01:47.780
But before we go on and do that I'm going to say this return objects as false is false as usual.

23
00:01:47.940 --> 00:01:53.280
And before we do that I'm going to add the predicate that I have been talking about.

24
00:01:53.970 --> 00:02:02.970
So I want to filter out the results so that it will only include the I.D. that has the selected I.D..

25
00:02:03.840 --> 00:02:12.560
So let's convert this chosen paintings I.D. to a string because we're going to need this into predicates.

26
00:02:12.660 --> 00:02:13.870
Okay.

27
00:02:13.950 --> 00:02:20.940
And in order to add this predicate you will just say fetch your request that predicate and it will ask

28
00:02:20.940 --> 00:02:21.780
you for.

29
00:02:21.900 --> 00:02:22.940
And then this predicate.

30
00:02:22.950 --> 00:02:31.140
And if you write this predicate as you can see this is the logical conditions used to constrain a search.

31
00:02:31.860 --> 00:02:40.170
So re going to do a fetch and in this fetch regrowing to just add some logical constraints so that our

32
00:02:40.170 --> 00:02:43.780
results will be filtered accordingly.

33
00:02:44.070 --> 00:02:51.000
And in order to do that we going to open up parentheses and just see the parameters that that are being

34
00:02:51.150 --> 00:02:52.830
asked for us.

35
00:02:53.100 --> 00:02:59.310
And it's kind of different than what we have seen before it's kind of regular expressions if you have

36
00:02:59.310 --> 00:03:00.900
worked one with before.

37
00:03:01.290 --> 00:03:03.530
So let me show you what I mean.

38
00:03:03.990 --> 00:03:10.740
We want this format I think we're just going to explain it a format and we're just going to give some

39
00:03:10.770 --> 00:03:12.280
arguments.

40
00:03:12.360 --> 00:03:16.280
So for format I'm just going to say so.

41
00:03:16.380 --> 00:03:19.890
Name will be this I.D. will be this okay.

42
00:03:20.010 --> 00:03:20.580
Like that.

43
00:03:20.580 --> 00:03:28.540
So you have to say I.D. equals 2 percent and that's percent and adds.

44
00:03:29.160 --> 00:03:36.330
So it means that I.D. will be equal to something and something will be written in these arguments for

45
00:03:36.330 --> 00:03:38.500
example I.D. trick.

46
00:03:38.520 --> 00:03:48.190
So it basically means that find I.D. being equal to I.D. trick for example you can do this for anything

47
00:03:48.210 --> 00:03:56.340
like you can just go for a name being equal to name string or chosen painting like this name being equal

48
00:03:56.340 --> 00:03:58.980
to the chosen painting.

49
00:03:59.060 --> 00:04:00.240
Okay.

50
00:04:00.360 --> 00:04:09.210
And this will work too but if we have the same name for two different arts then it wouldn't it wouldn't

51
00:04:09.210 --> 00:04:14.940
work because it would get confused rather than doing this we're just going to do that with I.D..

52
00:04:15.290 --> 00:04:16.360
Okay.

53
00:04:16.440 --> 00:04:17.180
And that's it.

54
00:04:17.190 --> 00:04:20.840
That's what we'll filter our results.

55
00:04:20.880 --> 00:04:28.430
So if I do the FHA right now I will only get the results of the selected I.D..

56
00:04:29.190 --> 00:04:30.350
So let's do that.

57
00:04:30.350 --> 00:04:38.970
So remember what do we have to do we have to use the context and just say Fetch and will ask us for

58
00:04:38.970 --> 00:04:45.040
a fact request and we will provide our factual quest remember it returns us.

59
00:04:45.330 --> 00:04:47.150
It can throw an error.

60
00:04:47.160 --> 00:04:50.610
So we will have to do do try catch.

61
00:04:50.610 --> 00:04:54.800
So let me cut this and paste here we try.

62
00:04:55.310 --> 00:04:55.810
OK.

63
00:04:55.830 --> 00:05:02.490
Try and this will return us and NASA managers object a right.

64
00:05:02.500 --> 00:05:03.380
Right.

65
00:05:03.430 --> 00:05:08.590
So I'm going to just say let results try context not fetch.

66
00:05:08.620 --> 00:05:14.890
And in fact this is not going to be an NASA managed object as I said it's going to be an any area.

67
00:05:14.980 --> 00:05:15.340
Right.

68
00:05:15.340 --> 00:05:16.500
Any object.

69
00:05:16.720 --> 00:05:20.560
So I had to cast his as a. managed object array.

70
00:05:20.590 --> 00:05:28.680
So I'm going to say if results that count is actually bigger than zero and it's in fact safety do that

71
00:05:28.720 --> 00:05:30.870
I believe you me to to do this.

72
00:05:30.910 --> 00:05:33.100
In the previous control.

73
00:05:33.140 --> 00:05:33.830
Yep.

74
00:05:33.910 --> 00:05:38.110
So we have tried to just go into the for loop.

75
00:05:38.110 --> 00:05:44.350
I believe we should do that if results that count is actually bigger than zero then we have to go into

76
00:05:44.350 --> 00:05:49.270
the for loop because results can actually be empty in here.

77
00:05:49.330 --> 00:05:49.610
OK.

78
00:05:49.620 --> 00:05:56.710
If there is not any recorded value in our app it means that the results cannot go into the for loop.

79
00:05:57.070 --> 00:05:59.150
So it's actually safer to use this.

80
00:05:59.160 --> 00:06:06.070
So if results that count is bigger than zero then I can just try to go into the for loop with casting

81
00:06:06.070 --> 00:06:14.740
this as as managed object array so I'm going to do the same thing for resulting results as an as managed

82
00:06:14.800 --> 00:06:15.490
object.

83
00:06:15.610 --> 00:06:16.660
Okay.

84
00:06:17.110 --> 00:06:23.920
And then I'm going to go into the for loop and you can say that we're just going to get one item why

85
00:06:23.920 --> 00:06:26.900
are we even bothering doing that for a loop.

86
00:06:27.010 --> 00:06:35.110
Because even though we have one or two or 1000 items the result will be given us within an array.

87
00:06:35.140 --> 00:06:36.250
It doesn't matter.

88
00:06:36.310 --> 00:06:43.740
It returns us at this context about Fischer returns us and and this managed object array.

89
00:06:43.810 --> 00:06:45.180
So we have to do that.

90
00:06:45.190 --> 00:06:52.150
We have to go into the loop anyway even though we have one we can do that as well a results zero.

91
00:06:52.180 --> 00:06:55.420
But it won't be as safe as doing that.

92
00:06:55.450 --> 00:07:02.530
So maybe we're working with Ida maybe there is it is it it is certain that we're just going to get one

93
00:07:02.530 --> 00:07:11.310
item but I believe we should just stick on the for loop so we can do the same structure in all apps

94
00:07:11.320 --> 00:07:17.410
so we can just say if let name results that value for key name is shrink as we did before.

95
00:07:17.410 --> 00:07:18.520
Right.

96
00:07:18.580 --> 00:07:24.910
So it's actually better to use consistent methods consistent functions during the app.

97
00:07:24.910 --> 00:07:30.280
So name tags that tax is going to be name.

98
00:07:30.400 --> 00:07:32.650
So this is what we have done before.

99
00:07:32.650 --> 00:07:35.260
Let me copy and paste this.

100
00:07:35.480 --> 00:07:40.740
And it's kind of distorted in here so let me make this right.

101
00:07:40.810 --> 00:07:44.990
So rather than name I'm just going to go for artists this time.

102
00:07:44.990 --> 00:07:51.130
OK so the key will be artist as well and this will be artist tax that taxed.

103
00:07:51.540 --> 00:07:51.720
Yeah.

104
00:07:51.730 --> 00:07:56.290
If I write everything from the scratch it will be much more easier I believe.

105
00:07:56.290 --> 00:08:01.230
So let me just say it flat year is going to be resolved.

106
00:08:01.270 --> 00:08:02.400
That value.

107
00:08:02.470 --> 00:08:10.980
The key will be year as well not year yeah year and this will be an integer rather than string.

108
00:08:10.990 --> 00:08:18.340
So this will be displayed in the year taxed that taxed and in fact we're just going to convert this

109
00:08:18.340 --> 00:08:25.000
to be string again and maybe you can just say that if we're going to convert this to an integer and

110
00:08:25.180 --> 00:08:26.290
to a string.

111
00:08:26.290 --> 00:08:30.100
Why did we store it as an integer in the first place.

112
00:08:30.100 --> 00:08:30.260
Yeah.

113
00:08:30.280 --> 00:08:34.210
It doesn't make sense to start does into as an integer.

114
00:08:34.210 --> 00:08:41.580
In this example but I just wanted to show you how to star an integer to call data.

115
00:08:42.580 --> 00:08:44.770
So let's go for image data.

116
00:08:45.310 --> 00:08:48.110
Remember we start our image as data.

117
00:08:48.130 --> 00:08:51.250
So I'm going to chastise as data as well.

118
00:08:52.210 --> 00:09:00.490
So first I'm going to get this as data not string not UI image not I don't think about data and then

119
00:09:00.520 --> 00:09:07.060
I'm going to convert this to be a UI image and it's fairly easy to do that for four.

120
00:09:07.090 --> 00:09:14.010
So far we have been doing this UI image thing and we have been selecting the named rather we just going

121
00:09:14.010 --> 00:09:15.900
to go for data this time.

122
00:09:16.300 --> 00:09:19.350
And I'm just going to paste in image data.

123
00:09:19.720 --> 00:09:26.350
So this will take our data and convert into a UI image so that I can just come over and say image view

124
00:09:26.620 --> 00:09:29.010
that image is going to be image.

125
00:09:29.430 --> 00:09:32.400
OK so that's it.

126
00:09:32.490 --> 00:09:33.120
That's hot.

127
00:09:33.180 --> 00:09:39.310
How are we going to get the information related to our selected paintings.

128
00:09:39.570 --> 00:09:43.600
So in the catch I will just print out some air okay.

129
00:09:43.800 --> 00:09:47.060
And I don't think we have to do anything else.

130
00:09:47.190 --> 00:09:51.700
We can just try this on our simulator and see if we can see the details.

131
00:09:51.720 --> 00:09:52.600
And here we go.

132
00:09:52.600 --> 00:09:58.520
We see the waterfall diving cheap and for the flower we see the mango.

133
00:09:58.530 --> 00:09:59.820
Nineteen Hundred.

134
00:10:00.310 --> 00:10:00.500
Yeah.

135
00:10:00.510 --> 00:10:02.520
It seems to be working I believe.

136
00:10:02.550 --> 00:10:04.170
That's good.

137
00:10:04.170 --> 00:10:08.430
Of course we had to do some more improvements here as well.

138
00:10:08.460 --> 00:10:11.910
For example we cannot delete those values.

139
00:10:12.060 --> 00:10:16.400
And as you can see when I click on the ads it shows up as a default screen.

140
00:10:16.430 --> 00:10:20.240
So it's it definitely works.

141
00:10:20.250 --> 00:10:28.080
So when I tap on this I I shouldn't see the same bother I can see in here it doesn't matter but when

142
00:10:28.080 --> 00:10:31.650
I click on the table view it shouldn't pop up here.

143
00:10:31.680 --> 00:10:32.620
OK.

144
00:10:32.670 --> 00:10:38.060
And I cannot delete this right now because I don't have this kind of functionality yet.

145
00:10:38.610 --> 00:10:43.980
So I believe we should stop here and within the next pictures we are going to work on the improvements

146
00:10:44.040 --> 00:10:45.450
and finish our app.
