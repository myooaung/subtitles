WEBVTT

00:02.730 --> 00:06.700
We finished the relationships and we will start with the data view right now

00:06.960 --> 00:12.660
and if you look at our workflow, you can see that we are still in the data modeling part but in that

00:12.660 --> 00:21.840
data view. Now in the data view, we have to understand one important thing, the language, so the formula language

00:21.870 --> 00:28.740
or the code that lies behind that data model is totally different from that that we had in the query editor,

00:29.070 --> 00:31.570
let's talk about that.

00:31.600 --> 00:34.870
So we have one tool and two languages,

00:35.080 --> 00:40.900
this means that we have first that M language, you might have heard of that we talked about that also sometimes

00:40.900 --> 00:42.020
in the last module.

00:42.100 --> 00:46.030
However the M language can be described as follows,

00:46.030 --> 00:53.020
this is the power query formula language and it's made for data transformation and this means it should be

00:53.020 --> 00:54.610
applied to do the following,

00:54.850 --> 00:58.130
to prepare your data before you load them into the data model.

00:58.420 --> 01:02.300
So this means in the query editor, you should use that language.

01:02.320 --> 01:10.110
This is the first one but there is a second language, the DAX language, the Data Analysis Expression language,

01:10.450 --> 01:12.760
let's see how we can describe this language.

01:13.180 --> 01:17.830
Well as I just said, it's the Data Analysis Expression language,

01:17.830 --> 01:25.380
it's made for analytical data calculations and it can be slightly compared to Excel formulas.

01:25.390 --> 01:27.150
Now this is not Excel,

01:27.190 --> 01:32.710
that's an important information but if you want to have a quick idea on how these DAX formulas look

01:32.710 --> 01:34.720
like, that's probably the best way.

01:35.080 --> 01:36.990
Now why do we use that DAX language?

01:37.120 --> 01:43.360
Well we use it to create formulas, to create that in-depth analysis that we might want to have in our

01:43.360 --> 01:45.320
data model, specifically in the data view.

01:45.340 --> 01:52.450
Now we have that two languages and now you might ask ourselves, OK are they kind of the same or

01:52.450 --> 01:54.310
are they equal or are they connected,

01:54.310 --> 01:57.190
so maybe we have kind of a combination of those two languages

01:57.640 --> 02:00.590
and this is definitely not the case.

02:00.640 --> 02:04.080
Both languages are totally independent from each other,

02:04.120 --> 02:08.170
they follow a different structure, a different logic and a different code

02:08.320 --> 02:14.150
and additionally, you only use the M language in the query editor and the DAX language in the data model,

02:14.200 --> 02:15.440
so that's per definition

02:15.480 --> 02:16.760
a big difference.

02:17.230 --> 02:23.410
So we could keep talking about the differences in theory or we could just go back to our project and

02:23.410 --> 02:28.750
simply create a new column which should retrieve the same results but which should be calculated one

02:28.750 --> 02:36.100
time in the query editor using the M language and a second time using the DAX in the data model.

02:36.550 --> 02:39.520
Let's go back to our project and do that in the next video.
