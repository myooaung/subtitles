WEBVTT

00:02.420 --> 00:05.130
Let's get started setting our development environment

00:05.210 --> 00:10.170
and the easiest way of getting started is to visit the Power BI developer tools page.

00:10.190 --> 00:15.070
You can simply google for Power BI developer tools and you should find this article on

00:15.080 --> 00:15.920
microsoft.com.

00:15.950 --> 00:20.890
Here you are walked through the installation of the developer tools and developer tools

00:20.900 --> 00:24.320
sounds like you can do a lot of things with that,

00:24.320 --> 00:29.900
that's actually not the case. You use these tools to create custom visuals but of course it's a

00:29.900 --> 00:34.250
great coincidence that that is exactly what you plan to do in this lecture.

00:34.250 --> 00:39.320
So here you can see the requirements and how you install it and definitely have a look at this article, I'll 

00:39.320 --> 00:41.990
link it in the last lecture of this module

00:41.990 --> 00:49.040
if you are stuck or if you want to dive into some specific aspect. The first requirement we will need

00:49.400 --> 00:51.470
is NodeJS here

00:51.950 --> 00:54.540
and we can visit this link to download NodeJS

00:54.580 --> 00:57.010
from nodejs.org.

00:57.260 --> 00:59.350
Now what is NodeJS and

00:59.360 --> 01:06.600
why do we need it? NodeJS is a server-side language which uses Javascript on the server.

01:06.740 --> 01:11.100
Now I mentioned that you use Javascript or Typescript to build your visual

01:11.420 --> 01:17.300
but there, we will kind of use it on the client, together with HTML and CSS.

01:17.370 --> 01:23.000
NodeJS is actually not related to the code we will write but NodeJS needs to be installed

01:23.000 --> 01:24.780
for two reasons.

01:24.890 --> 01:34.510
One, it has npm, Nodes Package Manager which is a great tool for handling packages you need for development,

01:34.580 --> 01:40.730
for example the Power BI developer tools are such a package which we install through the Node Package

01:40.730 --> 01:41.650
Manager,

01:41.660 --> 01:46.010
it's simply a package manager which makes the installation and management of dependencies very simple.

01:46.010 --> 01:49.280
We will later also use it to manage dependencies of our project,

01:49.280 --> 01:56.690
for example when installing this d3 package. So npm, this package manager is one reason but we also

01:56.690 --> 01:58.860
need NodeJS itself

01:59.120 --> 02:08.060
because as you will learn, we can get the behavior of building our custom visual and then using the developer

02:08.060 --> 02:14.060
tools to run a command to create a little development server which will use NodeJS in the background,

02:14.060 --> 02:20.920
that is why we need it, to host our custom visual so that we can log into Power BI Service and get

02:20.930 --> 02:24.310
live updating of the visual whilst we are working on it.

02:24.500 --> 02:29.150
So that might sound a bit strange right now, we will have a look at it later but these are two reasons

02:29.150 --> 02:32.370
we need NodeJS. So on nodejs.org,

02:32.420 --> 02:38.000
you can either download the latest version or the latest stable question, 6.10 here. Now I will

02:38.000 --> 02:39.220
go with the latest one

02:39.230 --> 02:41.290
but of course feel free the other one

02:41.600 --> 02:48.140
and once this did finish, we can walk through the installer together. I just open the file and download it

02:48.440 --> 02:51.560
and I will now walk through the installer and it's super simple,

02:51.560 --> 02:55.030
you can basically click through it, choose a path where you want to install it,

02:55.050 --> 02:57.070
I'll leave it to the default path here,

02:57.200 --> 03:00.110
make sure you install all these packages which is the default,

03:00.110 --> 03:04.690
click next again and click install and this will now install both NodeJS

03:04.820 --> 03:08.560
and this package manager I was talking about on your machine.

03:08.640 --> 03:15.380
Now once this is done, it is here, we are ready to do the next step which is install the actual developer

03:15.380 --> 03:18.860
tools or the Power BI visual tools as they are called,

03:18.980 --> 03:20.610
this is this command here.

03:20.690 --> 03:28.350
So for this step, we should open the command prompt and in there, you can actually see the command down

03:28.350 --> 03:28.980
here,

03:29.190 --> 03:35.970
we should run npm install -g for global to install this package globally on our system so that we

03:35.970 --> 03:43.460
can access it from everywhere, from every folder and then the package name, powerbi-visuals-tools,

03:43.560 --> 03:49.350
the name you find down here. Now you can hit enter and this will install it for you, install it in a local

03:49.350 --> 03:55.830
repository, a global folder on your machine and add it to the path variable so that you will soon be

03:55.830 --> 04:00.040
able to run a command, a command which is also known here,

04:00.070 --> 04:04.990
this one to use this installed visuals or

04:04.990 --> 04:09.720
powerbi-visuals-tools, I'll come back to this second once this is done. It is done now,

04:09.720 --> 04:12.590
that was quick, so we can now use this command

04:12.600 --> 04:18.800
and the easiest way of using this is to just type pbiviz which is this newly installed package, the

04:18.810 --> 04:20.320
powerbi-visuals-tools.

04:20.640 --> 04:25.320
If you hit enter, you should see something like this which basically just means it was successful and

04:25.320 --> 04:28.090
which lists the commands you may actually use.

04:28.140 --> 04:33.440
The next step is to navigate to a folder where you want to use that, so I will quickly do that.

04:33.540 --> 04:39.630
So I navigate it to a folder where I want to create this custom visuals project and there we can use

04:39.630 --> 04:42.330
this pbiviz command of the 

04:42.330 --> 04:46.820
powerbi-visuals-tools and then new to create a new project.

04:46.830 --> 04:49.200
Now you can choose any name you want and I'll name it

04:49.500 --> 04:52.860
bar chart since I want to recreate a basic bar chart

04:53.070 --> 04:59.910
and yes, we do have bar charts in Power BI already but it is a great practice to rebuild such such a simple

04:59.970 --> 05:02.850
visual and therefore learn how that really works.

05:02.850 --> 05:04.000
You of course are free to

05:04.080 --> 05:09.660
then fine tune this to your needs and change it however you want to change it. So we can now hit enter

05:09.810 --> 05:16.980
and this will create this bar chart for us. With that, that visual is created, we can now navigate into this newly

05:16.980 --> 05:21.720
created bar chart folder and then we can run pbiviz start.

05:21.720 --> 05:24.280
This will now run this development server

05:24.300 --> 05:31.260
I was referring to which is basically a little server doing one thing, exposing our chart.

05:31.410 --> 05:37.730
Now we need someone listening to that server and getting this chart info and this someone is Power BI.

05:37.890 --> 05:42.780
Now here's one important thing, we won't use Power BI Desktop during development,

05:42.780 --> 05:49.050
we will use the Power BI service in the Internet because that service is able to listen to our

05:49.050 --> 05:53.190
development server here and get the live updates of our visual.

05:53.490 --> 06:00.560
So the next step for us is to visit app.powerbi.com and there, you should login

06:00.600 --> 06:05.320
and once you did login, we need to enable the development mode.

06:05.400 --> 06:11.220
We do this under the gear icon here in that settings and there, under developer,

06:11.340 --> 06:18.630
you might want to check this box here and now once you did tick this, you're ready to view your own visual.

06:18.650 --> 06:22.040
Now to do so, we need to have some data with which we can play around,

06:22.140 --> 06:26.400
so let's quickly publish some data to our Power BI service.

06:26.430 --> 06:29.880
You can find an example data file attached to this lecture,

06:29.910 --> 06:37.500
so I'll quickly start Power BI Desktop to then import this into my Power BI Desktop file and publish it to the

06:37.500 --> 06:42.270
service so that we can use it here and see our custom visual in action.

06:42.270 --> 06:48.090
Therefore in Power BI Desktop, you should save this file and then once you did this, click get data from a

06:48.090 --> 06:54.150
csv file and then it is this data.csv file which again you can find attached to this file.

06:54.150 --> 07:01.520
Now this will import it and that automatically is all correct here, so let's hit load and

07:01.520 --> 07:07.070
once this did loaded, let's have a look at this data, we get sales and region, that looks all right to

07:07.070 --> 07:07.790
me,

07:07.790 --> 07:13.620
if we have a look at our query data, let's see the types, text and a number, that's also correct,

07:13.640 --> 07:19.640
so now we can it publish to publish it to Power BI service so that we can use it there. I'll publish it to

07:19.640 --> 07:21.480
my workspace

07:21.620 --> 07:28.750
and after this has been downloaded, we can go back to Power BI service to finally see this first basic custom

07:28.780 --> 07:33.100
chart the pbiviz command already created for us.

07:33.110 --> 07:40.180
So back in the Power BI service, here we see the bar chart dataset and in the report, here if we edit this

07:40.250 --> 07:46.780
report, you can see this new visual here. It wasn't there before you tick the box in the settings,

07:46.990 --> 07:49.220
this is the developer visual

07:49.280 --> 07:55.440
and if you click this, now you see this is the visual which was created by pbiviz new.

07:55.550 --> 08:00.950
It has this update count text and if you resize it, this number increases because there are a couple

08:00.950 --> 08:06.410
of update events fired because on each resizing, it of course needs to update the visual but more on that

08:06.500 --> 08:07.470
later.

08:07.500 --> 08:12.140
This is our first visual as it was created with pbiviz new,

08:12.140 --> 08:17.720
now let's have a look at the code which was actually created to understand what's happening there.
