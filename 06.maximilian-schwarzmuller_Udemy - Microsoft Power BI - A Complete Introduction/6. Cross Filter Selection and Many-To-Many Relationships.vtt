WEBVTT

00:02.560 --> 00:07.350
We talked about two relationship types, one-to-many and one-to-one,

00:07.450 --> 00:13.310
now we have to understand the third relationship type, the many-to-many relationship.

00:13.370 --> 00:20.420
So here I am not in our project file but in our Power BI file that you can find attached to that video.

00:21.320 --> 00:22.280
In this file,

00:22.370 --> 00:27.630
if you go to the data model and to the data view, you will you can find three tables.

00:27.830 --> 00:31.560
The first table is the product type table, in this table,

00:31.610 --> 00:35.870
we have two columns, the ID car column and the color column.

00:35.870 --> 00:37.670
So we have four different card types,

00:37.710 --> 00:43.320
ABCD. The second table is the cars produce table right here,

00:43.320 --> 00:49.740
here we again if the ID of the cars, we have the units produced and we have the year of production

00:50.120 --> 00:54.360
and we have a third table, the cars sold table, right here.

00:54.380 --> 00:59.870
Here we can see that we again if the ID of the car, we have the units sold and we have the year when

00:59.870 --> 01:01.770
the units were sold.

01:01.790 --> 01:08.660
Now the important thing that you might have seen is that in the cars produced and in the cars sold table, the ID

01:08.660 --> 01:14.600
of the car exists multiple times as you can see right here and in the cars produced table right there

01:15.050 --> 01:21.600
and in the product type table, we only have the ID car once. This is going to be important in a few minutes,

01:21.620 --> 01:23.290
so keep that in mind.

01:23.440 --> 01:25.700
Now let's go to the report view

01:25.940 --> 01:32.000
and here I prepared two charts for you. In the left chart, you can see the units produced and the units

01:32.000 --> 01:34.320
sold and in a right chart,

01:34.510 --> 01:36.990
well you can see the same thing, right?

01:37.010 --> 01:44.520
Not totally true because if you click onto the left chart and now go to the visualizations column, you

01:44.520 --> 01:48.550
can see that we have the axis, the ID car and two values.

01:48.780 --> 01:52.350
So far, well you don't understand a lot of that, right?

01:52.620 --> 01:59.220
But if you go to the fields column then and then open the cars produced and the car sold table, then

01:59.220 --> 02:05.310
you can see that the ID car and the units produced are both based on one table,

02:05.370 --> 02:11.690
the cars produced table. The units sold are coming from the cars sold table,

02:11.690 --> 02:16.700
so from a separate table and this is the reason why at the moment, you can see the units produced with

02:16.710 --> 02:23.190
a correct value but the units sold always with the same value because at the moment, both tables cannot

02:23.190 --> 02:24.650
communicate with each other,

02:24.700 --> 02:26.730
we know that problem from the last video.

02:27.060 --> 02:34.350
However if you click onto the second table right here, you can see that we have the same issue but from

02:34.350 --> 02:40.650
a different perspective. In this case, the ID of the car and the units sold are both coming from the

02:40.650 --> 02:46.980
cars sold table and this is why the units sold are now displayed correctly but the units produced are

02:46.980 --> 02:48.590
coming from another table

02:48.720 --> 02:51.690
and this is why the units produced are displayed wrong.

02:51.690 --> 02:55.220
So this is the background that we have in that little example,

02:55.560 --> 03:00.270
let's now go back to the relationship view because this is where the problem comes from, right?

03:00.330 --> 03:05.110
We have to create a relationship between the cars produced and the cars sold table,

03:05.400 --> 03:06.720
let's see how we can do this.

03:08.550 --> 03:10.720
So this is what the structure looks like,

03:10.740 --> 03:12.270
so we have the cars produced,

03:12.300 --> 03:14.890
the cars sold and the product type.

03:14.970 --> 03:20.980
Now the easiest thing that we could do is we could simply connect the both ID car columns right of

03:21.030 --> 03:23.850
the cars produced and of the cars sold table.

03:23.910 --> 03:27.190
Let's do that and we learn how to do that by dragging it right here

03:28.380 --> 03:31.480
and now we have an error, we don't know that

03:31.530 --> 03:33.150
and let's see what it says.

03:33.180 --> 03:38.370
It says that we can't create a relationship between those two columns because one of the columns must

03:38.370 --> 03:45.630
have unique values and we don't have unique values because as we saw in the data view, in the cars

03:45.630 --> 03:51.270
produced and in the cars sold table, we have all car types multiple times,

03:51.270 --> 03:54.250
this means we cannot create a relationship like this,

03:54.420 --> 03:55.760
so let's press OK.

03:57.070 --> 04:05.310
But what we have, we have that product type and in that product type table, we only have each car ID once,

04:05.320 --> 04:07.650
so we have unique values.

04:07.660 --> 04:14.500
Now what happens if we simply click right here onto ID car in the cars produce table and drag that to

04:14.500 --> 04:16.780
the product type ID car column?

04:17.170 --> 04:22.120
Then we established a relationship, a many-to-one relationship because we now have the connection between

04:22.120 --> 04:27.720
the multiple car IDs and the unique car IDs in the product type table,

04:28.090 --> 04:30.430
let's see if that changed something.

04:30.430 --> 04:32.570
Now for a moment, nothing changed

04:32.590 --> 04:34.000
so let's go back.

04:34.240 --> 04:39.940
Maybe we also have to connect the ID car of the car sold with the product type, ID car column.

04:40.150 --> 04:41.700
Let's see if this works.

04:41.770 --> 04:43.560
So I'm now connecting this one

04:43.990 --> 04:46.600
and now let's go back to the report view

04:47.230 --> 04:49.420
and still, this is not working

04:49.690 --> 04:51.130
but why is this not working?

04:51.280 --> 04:53.920
Well let's go back to the relationship view again,

04:53.920 --> 04:58.390
I know it's kind of jumping around at the moment but I think it's the best way to understand that step

04:58.390 --> 04:59.510
by step.

04:59.530 --> 05:05.620
So at the moment, we have the problem that the filter direction limits us because if you look at that

05:05.680 --> 05:11.570
arrows right here, you can see that the further direction is only from the product type table to the

05:11.590 --> 05:13.700
cars produce table.

05:13.750 --> 05:18.810
So because of that, those two tables, so the cars produce table and the cars sold table,

05:18.990 --> 05:20.650
they cannot communicate,

05:20.680 --> 05:27.150
so we need a way on how to change that single filter direction to a cross filter direction

05:27.160 --> 05:32.820
and if you remember back what we had on the illustration, this is exactly what we can do. If we double

05:32.820 --> 05:38.300
click onto that line right here and go down to cardinality which is fine,

05:38.320 --> 05:45.030
many-to-one, this is correct but then change the cross filter direction from single to both and press

05:45.050 --> 05:49.160
OK, then you can see that we now have two arrows right here and

05:49.180 --> 05:50.530
here we only have one arrow

05:50.860 --> 05:56.170
and because of that two arrows, now those two tables are able to communicate with each other in both

05:56.170 --> 05:57.160
ways

05:57.250 --> 05:58.540
and what that means?

05:58.540 --> 06:01.500
Well let's go back to the illustration.

06:01.510 --> 06:06.780
This means that now the units sold are also displayed correctly,

06:06.820 --> 06:12.430
the only problem is that in our second table, this doesn't work and why doesn't this work?

06:12.550 --> 06:17.830
Well if we go back to the relationship view, then we can see that we still have that single filter direction

06:17.830 --> 06:18.970
right here.

06:18.970 --> 06:24.880
Now let's click onto that line and set that cross filter direction to both and click OK

06:25.270 --> 06:28.030
and if we now go back to the report view,

06:28.120 --> 06:31.820
we can see that this is also working perfectly right now

06:32.410 --> 06:35.830
and that's the purpose of that cross filter direction.

06:36.010 --> 06:42.250
If you have problems like that and if you have to create a many-to-many relationship, then you can do

06:42.250 --> 06:50.050
it simply by creating something like this and using two many-to-one relationships and setting the cross

06:50.050 --> 06:55.960
filter direction to both because then you can create relationships and by the charts, the way we did

06:55.960 --> 06:57.450
it right here.

06:57.790 --> 07:00.640
Now for our project, we don't need that,

07:00.880 --> 07:06.940
however I just wanted to make sure that you basically understood how this works and how to create such

07:06.940 --> 07:09.790
relationships in Power BI desktop.

07:09.790 --> 07:15.780
However we now understand what the cross filter direction means but we still didn't talk about the active properties,

07:15.800 --> 07:16.470
right?

07:16.840 --> 07:18.780
Let's do that in the next video.
