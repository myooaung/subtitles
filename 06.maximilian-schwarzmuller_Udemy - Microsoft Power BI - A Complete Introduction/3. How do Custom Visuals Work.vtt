WEBVTT

00:02.420 --> 00:08.150
To get started building our own visuals and to set up the development environment, we need to understand

00:08.270 --> 00:12.850
which programming language we actually need to use when creating custom visuals

00:12.860 --> 00:16.360
and as you might know, there are a lot of different programming languages,

00:16.430 --> 00:19.340
so are you free to choose whichever language you want?

00:19.700 --> 00:27.680
Well not really. Custom visuals in Power BI are simply just HTML documents in the end,

00:27.890 --> 00:34.430
so each visual you drag into your report or you add to your report is just a tiny little

00:34.490 --> 00:35.180
HTML

00:35.190 --> 00:37.800
document, a little webpage you could say.

00:37.850 --> 00:44.120
Now of course it misses a lot of the features webpages typically have but all the graphics, everything

00:44.120 --> 00:49.400
you see is created with HTML, CSS and Javascript,

00:49.430 --> 00:51.450
the three languages you use

00:51.450 --> 00:54.890
for creating webpages, at least from a front-end perspective,

00:54.890 --> 01:01.000
so from what runs in the browser. If you already know web development, it should be easy to follow along

01:01.010 --> 01:02.470
and build your own visuals

01:02.570 --> 01:07.310
and if you don't know it but plan to dive deeper into creating your own visuals,

01:07.610 --> 01:14.150
learning web development, especially as mentioned front-end web development might be a great idea since

01:14.150 --> 01:17.430
this is what you will use to build your own visuals.

01:17.510 --> 01:19.820
Now whilst it is true that we use HTML,

01:19.850 --> 01:23.060
of course the visuals charts often are about shapes,

01:23.060 --> 01:29.060
rectangles like in a bar chart as you can see here or circles or anything like that and whilst you could

01:29.450 --> 01:32.850
build these shapes with normal HTML,

01:32.870 --> 01:40.390
there is one specific HTML element which really makes your life easier here and that is svg, scalable

01:40.400 --> 01:42.870
vector graphics. In a normal webpage,

01:42.890 --> 01:50.620
you can embed svg graphics to quickly add such shapes or such illustrations to a webpage and it's

01:50.630 --> 01:51.880
the same for your visual

01:51.890 --> 01:56.990
since you use HTML, you could use svg here and that's the great thing, with svg

01:57.020 --> 02:04.880
you can easily build these shapes. Now with svg and HTML, we get a powerful way of creating our shapes.

02:04.880 --> 02:10.590
So what we will do in the end here is we will use web technologies as mentioned before, so that's HTML,

02:10.610 --> 02:12.010
CSS and Javascript,

02:12.200 --> 02:18.320
though I have to say something about that Javascript part. We don't actually use Javascript when creating

02:18.320 --> 02:23.790
our own custom visuals, we use Typescript which is a superset to Javascript.

02:24.020 --> 02:25.940
So what is Typescript and

02:25.940 --> 02:31.260
why do we use it? If we have a look at vanilla Javascript which is the language which runs in the browser

02:31.290 --> 02:34.700
and which also runs in Power BI in the end,

02:35.030 --> 02:40.720
we know that yeah runs in every browser and it's a powerful language but it misses some features other

02:40.810 --> 02:47.670
languages have, for example the support for strong typing. In Javascript and you may already know this,

02:47.780 --> 02:52.700
if you have a variable which holds a number, you can easily assign a string thereafter to it and Javascript

02:52.700 --> 02:53.960
won't complain.

02:54.230 --> 03:00.020
That can be an advantage but often times, it's a disadvantage because your code is unpredictable and

03:00.020 --> 03:05.180
you as a developer can run into problems which you can't detect during development which only occur

03:05.180 --> 03:07.200
once your app runs.

03:07.220 --> 03:09.760
That is one of the issues types Typescript fixes,

03:09.770 --> 03:16.580
it adds many new features to Javascript, for example types but also other things like classes or interfaces,

03:16.880 --> 03:21.750
so it makes it easier for you to code your app, to work with

03:21.870 --> 03:24.490
Javascript or then Typescript

03:24.860 --> 03:27.060
and that is the main advantage.

03:27.320 --> 03:31.920
What will happen though is it is always compiled to Javascript during development,

03:31.940 --> 03:38.600
so you write Typescript code and then some program, some compiler, Typescript ships with one will automatically

03:38.600 --> 03:41.310
compile the code to Javascript once you're done

03:41.460 --> 03:44.620
so that what runs in the browser or in Power BI

03:44.660 --> 03:51.170
in our case is Javascript and that is important. It is Javascript but we use Typescript during development

03:51.170 --> 03:54.920
to get these extra features, to have an easier life basically.

03:55.280 --> 04:01.670
So that is the language we'll use, Typescript together with some HTML and some CSS but most of

04:01.670 --> 04:04.460
the work will happen in Typescript.

04:04.580 --> 04:07.000
Now one issue we might face is that

04:07.010 --> 04:12.030
we of course have a data-driven document and we will have a look at this in the next lecture.
