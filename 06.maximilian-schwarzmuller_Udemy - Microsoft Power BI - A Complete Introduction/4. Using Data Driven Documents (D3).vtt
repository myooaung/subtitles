WEBVTT

00:02.350 --> 00:08.900
So we learned about which languages we use and why we use them, HTML, CSS and Typescript,

00:08.920 --> 00:14.980
now the problem we also have is we're using data. We're using data to render shapes, to render a chart

00:15.010 --> 00:16.030
probably

00:16.070 --> 00:22.060
and we learned that we can use svg, scalable vector graphics to create these rectangles, circles or whatever we're

00:22.060 --> 00:23.420
using very simple.

00:23.800 --> 00:31.480
Now that is true it is simple but managing these charts can get cumbersome because keep in mind, if the

00:31.480 --> 00:37.390
user resizes the chart, you'll have to adjust it, so that if you're creating a bar chart, that your

00:37.390 --> 00:39.230
bars get a bit broader,

00:39.280 --> 00:43.960
if you're having circles, that they increase in size, if the user shrinks it, you'll have to shrink all

00:43.960 --> 00:51.150
your shapes, if new data gets added, you will have to add a new shape, a new bar in the bar chart for example

00:51.520 --> 00:53.790
and you will have to manage all of that.

00:53.890 --> 00:57.810
You will have to find out how many bars do I have, do I need to add a new one,

00:57.820 --> 01:01.550
how do I resize everything so that the dimensions stay the same

01:01.780 --> 01:03.350
and that is no fun.

01:03.400 --> 01:08.620
Therefore what you typically use is a third party Javascript package.

01:08.620 --> 01:14.770
Since we do use Javascript, we can add any Javascript package we want and one that is particularly

01:14.770 --> 01:20.830
useful is d3, for data driven documents.

01:20.830 --> 01:30.580
D3 is a package which allows you to easily manipulate the DOM, the HTML code at runtime and add

01:30.580 --> 01:32.710
new shapes, remove them, rescale them

01:32.870 --> 01:40.150
but without doing the nitty-gritty work. Instead you simply bind some data to your shape, so you can basically

01:40.170 --> 01:46.760
define create rectangles for this array of data, whenever you add a new item to this array of data,

01:46.900 --> 01:49.060
it automatically creates a new rectangle.

01:49.060 --> 01:56.530
You can set up hey please scale this like that and when you resize the window or the chart, it will automatically

01:56.530 --> 02:01.960
re-execute the scaling command and thus keep the dimensions. So that's the advantage of d3, makes the creation

02:02.290 --> 02:05.650
of HTML elements like svg but not limited to this

02:05.710 --> 02:06.820
super easy.

02:06.820 --> 02:12.280
It makes styling very easy because probably, you want to assign some styles to your elements and it allows

02:12.280 --> 02:18.760
you to bind your HTML content to your data so that all the updating is done automatically for you and

02:18.790 --> 02:25.300
we will have a basic look at it whilst we go through the example code in the section so that you understand

02:25.540 --> 02:29.080
what is done by d3 and how you use it to create a chart.

02:29.290 --> 02:31.730
Now with that, I'd say that's enough of the talking,

02:31.750 --> 02:36.760
let's get started setting up our development environment and then building our own chart.
