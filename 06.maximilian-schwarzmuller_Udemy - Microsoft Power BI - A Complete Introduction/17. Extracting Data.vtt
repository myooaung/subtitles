WEBVTT

00:02.220 --> 00:07.320
Now that we checked the data and we made sure we don't get too much, we can extract it.

00:07.620 --> 00:12.490
So here, I want to extract a categorical section of my data.

00:12.540 --> 00:18.240
So in my data views which is the data we got, I'll access the first element because remember, we only

00:18.240 --> 00:23.880
get one. If you would have a chart or a visual with more, you would have to create some loop to loop through

00:23.880 --> 00:25.870
all possible datasets

00:26.370 --> 00:31.770
and there, I can access categorical because remember, that's what we're mapping it to per our definition

00:31.770 --> 00:32.600
here.

00:33.140 --> 00:39.150
So that holds the data and it is a categorical data, that is what we're saying here basically,

00:39.210 --> 00:43.110
I'm then interested in the category section of our data,

00:43.110 --> 00:49.630
so on categorical, I can access the categories of the first dataset

00:50.040 --> 00:52.170
and I'm interested in the value,

00:52.350 --> 01:02.130
so on categorical, I could also access values for the first dataset here.

01:03.350 --> 01:09.290
So that is what I am extracting here, the categories and the values so to say or a category and value

01:09.470 --> 01:12.640
object array, with that extracted,

01:12.800 --> 01:16.370
I want to create my data points,

01:16.370 --> 01:21.030
this will be an empty array but I'll soon create a loop where we fill this array

01:21.590 --> 01:29.240
and I then want to create my maximum data and that is what I'll later store in my data info there.

01:29.240 --> 01:35.340
So the maximum number will simply be of type number, I won't initialize it yet.

01:35.540 --> 01:43.400
Let's now create a for loop where I start with an index of 0, where I also will define a length variable

01:43.730 --> 01:49.860
and this should be the maximum of either my categories or values.

01:50.300 --> 01:57.590
So here I will call math.max, a built-in Javascript function and this needs a list of items or of

01:57.680 --> 01:59.960
numbers I want to compare. Here

01:59.990 --> 02:06.840
I want to compare my category values and that can be a bit strange but for my categories, the name

02:06.840 --> 02:11.040
of the categories are simply stored in a property named values

02:11.210 --> 02:13.220
and that's just something you should keep in mind.

02:13.420 --> 02:19.630
And here of course I'm interested in the length or the other value I want to check is my data

02:19.660 --> 02:20.480
value,

02:20.570 --> 02:22.930
here the values and there, the length.

02:22.940 --> 02:28.550
So these are two arrays of categories and values and whatever a bigger one is will define the length

02:28.790 --> 02:30.500
variable I'm defining here.

02:30.800 --> 02:36.710
So I will loop as long as i is smaller than length, so that I go through all these data pieces and

02:36.710 --> 02:40.280
then I will increment i on each iteration.

02:40.880 --> 02:46.700
So inside of this loop, we now want to extract the data and store it.

02:46.700 --> 02:55.190
So what I will now do is I will access my data points here and I will call push and push a new object on

02:55.190 --> 03:04.580
it, on this array of data points. Each new object should have a category and that will just be my category

03:05.420 --> 03:06.540
values

03:06.590 --> 03:13.460
and now at the index i, which is why I'm looping through it and I need to turn this into a string because

03:13.470 --> 03:18.740
Typescript doesn't know that this is one, I can do this with lower than, greater than string thing in front

03:18.740 --> 03:20.350
of it.

03:20.350 --> 03:24.550
The second thing I want to add this object is the value,

03:24.560 --> 03:30.180
so this is the same structure as in a static data before now filled dynamically with the user data.

03:30.470 --> 03:39.950
The value here, that should access my data value, there the values array, also at index i, the current index

03:39.950 --> 03:44.910
of this iteration here and that is all.

03:44.930 --> 03:50.340
Now with that, I'm extracting the two data pieces I'm interested in outside of this for loop,

03:50.480 --> 03:55.810
so after we are done, after we've filled this array, I will implement dataMax

03:55.910 --> 04:01.810
and here I can access data value and this is provided by Power BI, there

04:01.850 --> 04:04.390
I have a maxLocal property.

04:04.430 --> 04:07.190
So Power BI is calculating the maximum for me,

04:07.340 --> 04:13.170
I need to cast this to a number though because Typescript doesn't know that maxLocal gives us a number.

04:13.400 --> 04:22.520
So with that, we also set dataMax, finally what I can do is I can return an object here and this object

04:22.820 --> 04:32.190
should have my data points which I'll assign my data points variable here.

04:32.320 --> 04:37.260
It should have my dataMax and that is the dataMax variable here.

04:37.610 --> 04:41.510
So that is what I'm returning in the visual transform function,

04:41.510 --> 04:46.680
now we want to use that function in the update method to actually use that data.
