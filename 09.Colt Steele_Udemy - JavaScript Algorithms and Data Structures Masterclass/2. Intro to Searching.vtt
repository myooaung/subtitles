WEBVTT

00:00.150 --> 00:01.130
Mereka akan kembali.

00:01.200 --> 00:06.750
Jadi, ketika bagian ini kita berbicara tentang algoritma pencarian dan pencarian dan ketika saya mengatakan mencari

00:06.750 --> 00:10.410
beberapa dari Anda mungkin memikirkan sesuatu seperti Google segera.

00:10.560 --> 00:15.870
Sekarang algoritma di belakang Google dan pencariannya sangat kompleks mungkin salah satu algoritma paling rumit

00:15.900 --> 00:21.660
di luar sana dan mungkin lebih seperti 10 algoritma berbeda yang sedang diuji pada waktu tertentu

00:21.660 --> 00:23.580
dan segala sesuatunya sedang diubah.

00:23.580 --> 00:29.340
Belum lagi fakta bahwa algoritma ini berubah sangat tergantung pada siapa Anda riwayat penelusuran Anda hal-hal yang

00:29.970 --> 00:33.050
telah Anda lakukan dan hal-hal yang telah Anda klik.

00:33.060 --> 00:37.260
Jadi ketika saya mencari monyet howler saya mungkin melihat hasil yang berbeda daripada jika Anda mencari monyet howler.

00:37.560 --> 00:41.680
Jadi kita tidak akan mencoba dan membuat ulang hal seperti ini.

00:41.710 --> 00:47.340
Apa yang akan kita bahas nanti dalam kursus tidak sekarang tetapi nanti setelah kita membahas grafik dan pohon

00:47.340 --> 00:52.560
dan struktur data rumit lainnya Kita akan membahas bagaimana mencari dan melintasi sesuatu seperti grafik yang lebih

00:52.560 --> 00:54.640
dekat dengan apa yang dilakukan Google.

00:54.660 --> 00:58.650
Kami tidak akan berbicara tentang pembelajaran mesin di balik semua ini dan bagaimana hal

00:58.650 --> 01:03.300
itu menentukan Anda tahu apa yang terbaik untuk saya pilih dingin dibandingkan dengan orang lain di jalan.

01:03.330 --> 01:08.910
Kami hanya akan membahas tentang kapan Google pertama kali memulai bahkan sebelum Anda memperhatikan orang-orang di iklan

01:08.910 --> 01:11.480
dan melacak semua itu jika ada periode.

01:11.550 --> 01:11.970
Siapa tahu.

01:11.970 --> 01:12.630
Saya ragu ada.

01:12.650 --> 01:16.130
Tetapi jika ada maka kita akan mendekati perkiraan itu.

01:16.230 --> 01:21.540
Tetapi untuk sekarang kami fokus pada algoritma pencarian yang lebih sederhana yang benar-benar umum digunakan.

01:21.630 --> 01:28.470
Tetapi kita mungkin tidak sering menyebutnya pencarian misalnya tetapi mengatakan bahwa kita memiliki string dan kami sedang memeriksa untuk

01:28.470 --> 01:32.150
melihat apakah ada string lain yang terkandung dalam string itu.

01:32.560 --> 01:38.340
Atau katakanlah saya memiliki situs Web dan saya ingin orang mendaftar dan mereka menambahkan nama pengguna mereka dan mereka mendaftar

01:38.340 --> 01:40.130
nama pengguna dan kata sandi.

01:40.130 --> 01:42.600
Yang perlu kita beri tahu mereka jika nama pengguna mereka diambil.

01:42.870 --> 01:46.900
Jadi katakanlah bahkan tidak ada database yang tidak perlu khawatir tentang cara kerjanya.

01:46.920 --> 01:52.560
Katakanlah saya memiliki sederetan nama pengguna jika seseorang mengetikkan nama pengguna ke dalam formulir dan

01:52.560 --> 02:01.140
berkata OK Aku akan menjadi aku benci uang tunai yang akan menjadi nama pengguna dan kata sandi saya akan diam-diam mencintai kucing 72 atau

02:01.140 --> 02:01.680
sesuatu.

02:01.890 --> 02:04.200
Jika saya menekan enter saya perlu.

02:04.320 --> 02:08.570
Saya pengembang perlu mengambil nama pengguna itu dan entah bagaimana mencari tahu apakah itu diambil.

02:08.640 --> 02:14.820
Jadi, jika saya memiliki daftar nama pengguna, bagaimana saya mencari tahu apakah kucing yang saya benci ini ada dalam daftar

02:14.820 --> 02:15.310
itu.

02:15.360 --> 02:18.260
Dan javascript memiliki banyak cara untuk melakukan ini.

02:18.330 --> 02:26.400
Misalnya Anda dapat melakukan pengindeksan yang sederhana dan mari kita coba pengindeksan nama pengguna.

02:26.400 --> 02:28.860
Aku benci kucing.

02:29.220 --> 02:30.730
Ini menggunakan algoritma pencarian.

02:30.740 --> 02:32.520
Di belakang layar dan jadi kami mendapatkan 11.

02:32.520 --> 02:36.600
Dan jika tidak ada di sana seperti itu kita harus mendapatkan yang negatif.

02:36.600 --> 02:40.740
Ada beberapa yang lain yang akan melihat beberapa opsi lain tetapi yang akan kita bicarakan

02:40.740 --> 02:45.570
di bagian ini adalah bagaimana ini bekerja di belakang layar dan bagaimana kita dapat mengimplementasikan versi kita sendiri

02:45.570 --> 02:49.840
dari beberapa fungsi yang dibangun dalam metode dan bagaimana kita mencari di seluruh array dan string.

02:49.890 --> 02:55.500
Atau satu contoh lagi yang sangat cepat jika kita memiliki daftar status array di AS.

02:55.500 --> 03:01.380
Saya minta maaf karena menjadi Amerika sentris dalam video, tetapi jika ini yang kami miliki, kami ingin memastikan

03:01.380 --> 03:03.350
pengguna menempatkan negara yang valid.

03:03.660 --> 03:07.810
Yah kita bisa memeriksanya melawan ini tetapi bagaimana kita akan melakukan itu apa algoritma terbaik.

03:07.980 --> 03:10.260
Kita akan membahasnya di bagian ini.

03:10.290 --> 03:11.830
Jadi apa tujuan kita?

03:11.830 --> 03:14.100
Pertama-tama jelaskan apa itu algoritma pencarian.

03:14.100 --> 03:18.940
Kami agak membicarakannya sedikit dan kami akan menerapkan pencarian linear pada array.

03:19.260 --> 03:24.340
Kemudian kita akan berbicara tentang pencarian biner algoritma yang sedikit lebih baik pada array yang diurutkan.

03:24.390 --> 03:26.770
Jadi kita akan berbicara tentang pro dan kontra dari pendekatan itu.

03:27.000 --> 03:32.730
Kemudian kita akan menerapkan algoritma pencarian string naif serta sesuatu yang disebut algoritma pencarian string

03:32.760 --> 03:33.520
KMP.

03:33.780 --> 03:39.410
Jadi bagian ini adalah yang pertama di mana kita masuk ke algoritma bernama di bagian rekursi misalnya

03:39.420 --> 03:45.480
kita berbicara tentang cara menulis solusi untuk masalah faktorial tetapi tidak memiliki nama seperti kita belum benar-benar melihat kode

03:45.680 --> 03:50.420
yang memiliki nama tertentu untuk solusinya tetapi itu akan berubah di bagian ini dan

03:50.430 --> 03:54.870
itu akan menjadi sesuatu yang kita lihat sepanjang kursus adalah tema yang berulang.

03:54.930 --> 03:59.400
Kita akan berbicara tentang mengurutkan nama-nama tertentu untuk banyak algoritma pengurutan yang umum.

03:59.400 --> 04:03.740
Jadi itulah tujuan kami dan hal pertama yang akan kami lakukan dengan video berikutnya adalah menerapkan pencarian

04:03.750 --> 04:04.200
linear.
