WEBVTT

00:00.210 --> 00:00.930
Baiklah.

00:00.930 --> 00:05.700
Jadi kami memperkenalkan fakta bahwa kita berbicara tentang pencarian untuk saat ini kita akan fokus pada

00:05.790 --> 00:06.450
pencarian array.

00:06.630 --> 00:12.990
Jadi bayangkan kita memiliki array ini dengan status di mana saya tidak mengetik ini sendiri hanya untuk menjelaskan saya menyalin ini.

00:12.990 --> 00:16.260
Dan itu juga termasuk saya pikir 59 item.

00:16.260 --> 00:22.760
Ini mencakup wilayah seperti Samoa Amerika Puerto Riko di sini, Guam hal-hal seperti itu.

00:22.830 --> 00:24.000
Tapi itu intinya.

00:24.000 --> 00:29.730
Jadi bayangkan seorang pengguna mengetik sesuatu dan mereka mencoba, saya tidak tahu membuat alamat dan kemudian perlu memasukkan

00:29.730 --> 00:35.020
negara bagian atau teritori dan untuk aplikasi kami, kami ingin memastikan itu dalam array ini.

00:35.070 --> 00:36.910
Apa cara terbaik untuk melakukan itu.

00:36.990 --> 00:43.220
Dan cara paling sederhana adalah dengan melihat setiap elemen secara berurutan dan memeriksa apakah itu yang kita inginkan.

00:43.530 --> 00:48.580
Benar jadi jika pengguna masuk katakanlah Indiana kita hanya akan mulai dari awal dan periksa.

00:48.660 --> 00:49.110
BAIK.

00:49.140 --> 00:50.060
Apakah ini Indiana.

00:50.100 --> 00:50.470
Nggak.

00:50.580 --> 00:51.990
Apakah Indiana Indiana ini.

00:52.000 --> 00:53.330
Apakah ini Indiana.

00:53.340 --> 00:55.590
Dan kita terus berjalan sampai kita sampai di Indiana.

00:55.800 --> 01:01.980
Dan dalam hal ini kami mengembalikan sesuatu yang Anda tahu benar atau kami katakan indeks bahwa kami menemukan hutang atau jika tidak ada di

01:01.980 --> 01:06.510
sana kami terus berjalan sampai akhir dan kemudian kami memiliki beberapa logika di akhir yang mengatakan jika

01:06.510 --> 01:09.830
tidak ditemukan kembali salah atau mengembalikan negatif 1 atau sesuatu seperti itu.

01:09.900 --> 01:13.140
Sekarang pendekatan itu sebenarnya bukan pendekatan yang buruk.

01:13.140 --> 01:19.160
Sekarang dalam situasi ini di mana kami telah mengurutkan data berdasarkan abjad, ada beberapa cara yang lebih baik.

01:19.320 --> 01:23.180
Tapi mari kita kembali ke pemikiran di depan memiliki daftar bernama nama pengguna.

01:23.190 --> 01:24.870
Ini tidak disortir.

01:25.080 --> 01:27.660
Jadi tidak ada perintah untuk ini sama sekali.

01:27.660 --> 01:29.690
Sekarang seseorang masuk aku benci kucing.

01:29.690 --> 01:30.760
Itu adalah nama pengguna.

01:30.780 --> 01:32.700
Bagaimana kita memeriksa apakah sudah diambil atau tidak.

01:32.700 --> 01:38.310
Dalam hal itu cara terbaik untuk melakukannya adalah dengan memeriksa setiap elemen satu per satu.

01:38.430 --> 01:38.970
Apakah kamu.

01:38.970 --> 01:39.690
Aku benci kucing.

01:39.690 --> 01:40.370
Tidak.

01:40.380 --> 01:41.740
Selanjutnya kamu, aku benci kucing.

01:41.760 --> 01:42.280
Nggak.

01:42.300 --> 01:45.480
Teruskan sampai kita menemukannya atau kita sampai akhir.

01:45.570 --> 01:47.850
Itu disebut pencarian linear.

01:48.060 --> 01:54.670
Dan sebenarnya javascript melakukan hal-hal seperti Indeks yang Anda bicarakan termasuk.

01:54.720 --> 02:00.190
Temukan indeks temukan semua metode ini melakukan hal yang sama di belakang layar.

02:00.390 --> 02:05.290
Mereka memeriksa setiap elemen satu per satu untuk memeriksa apakah apa pun yang kita lewati.

02:05.300 --> 02:12.360
Jadi mari kita lakukan dua indeks dari apa yang harus dilakukan indeks nama pengguna indeks Tommy nol.

02:12.630 --> 02:15.960
Mari kita lakukan indeks Q menjelang akhir 15.

02:16.050 --> 02:18.240
Kami membuat indeks atau sesuatu yang tidak ada di sana.

02:18.600 --> 02:19.450
Negatif 1.

02:19.500 --> 02:22.210
Kita juga bisa melakukan hal yang sama dengan memasukkan.

02:22.350 --> 02:24.670
Saya tidak akan membahas semua metode ini, tetapi mari kita coba.

02:24.680 --> 02:28.530
Apakah ini termasuk Tom.

02:28.650 --> 02:29.590
Itu benar.

02:29.630 --> 02:30.790
Itu termasuk Tom.

02:30.810 --> 02:31.700
Itu salah.

02:31.710 --> 02:36.450
Jadi apa yang terjadi di sini adalah bahwa ia sedang melewati dan memeriksa setiap item untuk melihat apakah

02:36.450 --> 02:38.970
Anda Tom Apakah Anda Tom berulang kali sampai akhir.

02:38.970 --> 02:43.140
Dan jika Anda melihat kode sumber Anda benar-benar akan melihat algoritma yang akan kita bicarakan

02:43.390 --> 02:44.850
dan itu sangat mudah.

02:44.850 --> 02:46.740
Ini disebut pencarian linear.

02:46.740 --> 02:48.130
Jadi kita sudah menggambarkannya.

02:48.150 --> 02:53.040
Kami mengunjungi satu item satu item sekaligus mulai dari awal bergerak maju.

02:53.040 --> 02:56.910
Atau kita bisa mulai dari akhir dan bergerak mundur tetapi tidak masalah.

02:57.000 --> 03:02.870
Yang penting adalah kita bergerak pada interval tertentu satu per satu untuk memeriksa setiap hal.

03:03.510 --> 03:09.150
Jadi jika kita ingin memiliki daftar nomor array ini dan kita ingin memeriksa 12 dalam pencarian jika

03:09.150 --> 03:12.410
ada di sana kita hanya memulai awal adalah 12.

03:12.450 --> 03:12.930
Nggak.

03:13.020 --> 03:14.570
Apakah 8 12 Tidak.

03:14.580 --> 03:18.120
1 bukan 12 100 bukan 12 12 adalah 12.

03:18.240 --> 03:23.010
Dan kemudian kita mengembalikan true atau kita mengembalikan indeks 0 1 2 3 4.

03:23.040 --> 03:24.560
Itu tergantung apa yang kita lakukan.

03:24.570 --> 03:29.380
Jadi untuk indeks misalnya akan kembali untuk 4 Ini termasuk mengembalikan true.

03:29.520 --> 03:30.920
Jadi itu pencarian linear.

03:31.140 --> 03:36.060
Dan apa yang akan saya lakukan sekarang adalah sesuatu yang sedikit berbeda dari cara kami menyusun kursus

03:36.060 --> 03:36.750
sejauh ini.

03:36.840 --> 03:42.630
Saya akan memberi Anda kode semu untuk dicoba dan diimplementasikan dan saya mendorong Anda untuk menulis kode ini sendiri.

03:42.630 --> 03:44.180
Ini bagus dan sederhana.

03:44.460 --> 03:49.500
Ini kode pseudo dan setelah itu kita akan membahasnya dan saya akan menulis solusinya.

03:49.500 --> 03:53.660
Jadi, tulis fungsi, panggil saja apa pun yang Anda inginkan, tetapi ia menerima larik dan nilai.

03:53.880 --> 03:59.610
Jadi sebut saja pencarian linear dan dibutuhkan array yang penuh katakan saja angka-angkanya tetapi

03:59.610 --> 04:06.660
tidak masalah benar-benar menyimpan angka dan kemudian nilai angka lain Anda hanya mengulang seluruh array dan memeriksa apakah

04:06.660 --> 04:10.800
elemen array saat ini sama dengan nilai yang kami berikan.

04:11.160 --> 04:17.450
Dan jika itu mengembalikan indeks di mana ia ditemukan dan jika tidak pernah ditemukan mengembalikan negatif 1.

04:17.940 --> 04:18.480
BAIK.

04:18.630 --> 04:21.720
Jadi lewati seluruh array untuk memeriksa nilainya.

04:21.720 --> 04:23.640
Apa pun itu, katakanlah kita sedang mencari tiga.

04:23.850 --> 04:29.120
Jika Anda menemukan tiga pengembalian indeks itu jika Anda tidak mengembalikan negatif 1.

04:29.190 --> 04:31.270
Jadi ini mungkin hanya dalam beberapa baris.

04:31.320 --> 04:32.190
Jangan terlalu memikirkannya.

04:32.340 --> 04:34.340
Cobalah di video berikutnya.

04:34.440 --> 04:36.570
Saya akan menunjukkan Anda solusi potensial.

04:36.570 --> 04:39.940
Dan perlu diingat bahwa meskipun ini sederhana namun tidak menjadikannya buruk.

04:40.080 --> 04:45.080
Seperti yang kita bahas itu digunakan oleh fungsi-fungsi built in hal-hal seperti Indeks misalnya.

04:45.390 --> 04:46.020
BAIK.

04:46.200 --> 04:46.980
Begitu di video berikutnya.
