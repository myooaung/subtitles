WEBVTT

00:00.240 --> 00:02.960
Apa kompleksitas waktu dari semacam gelembung.

00:03.210 --> 00:10.170
Yah secara umum kuadrat karena kami memiliki loop bersarang dan kami secara kasar membuat perbandingan untuk setiap item

00:10.170 --> 00:11.540
dalam array itu.

00:11.630 --> 00:16.160
Kami membuat sejumlah perbandingan untuk mendapatkan 8 hingga akhir.

00:16.200 --> 00:19.700
Kami harus membandingkan delapan untuk setiap item lainnya dalam array.

00:19.710 --> 00:26.880
Namun jika data hampir diurutkan atau sudah diurutkan maka dengan versi baru ini tanpa swap itu lebih

00:26.940 --> 00:29.580
seperti waktu linier itu kasus terbaik.

00:29.610 --> 00:32.250
Dan ada delapan item yang kami lalui.

00:32.250 --> 00:37.620
Maksud saya secara teknis dalam contoh kami adalah untuk N karena kami melewati pertama kali dan kemudian kami pergi

00:37.620 --> 00:39.610
lagi untuk memastikan tidak ada yang ditukar.

00:39.630 --> 00:41.260
Dan kemudian kami keluar dari lingkaran.

00:41.310 --> 00:47.100
Jadi, tetapi dibulatkan ke bawah seharusnya tidak mengatakan putaran tetapi disederhanakan sampai 0 akhir.

00:47.310 --> 00:52.590
Jadi itu kasus terbaik tetapi itu tidak berarti bahwa kita harus menggunakan semacam gelembung

00:52.710 --> 00:54.840
Anda tahu bahwa data Anda hampir diurutkan.

00:54.840 --> 00:56.480
Itu kandidat yang bagus.

00:56.710 --> 00:59.430
Mungkin juga melihat kandidat lain yang baik dalam sedikit.

00:59.450 --> 01:03.830
Ini lebih untuk menunjukkan optimasi, ini adalah optimasi klasik untuk dilakukan.

01:03.990 --> 01:05.910
Dan ya saya pikir video ini di sini.

01:05.910 --> 01:10.000
Jadi kami memiliki versi ini yang tidak menggunakan sintaks sw swax mewah.

01:10.240 --> 01:17.070
Kemudian kita memiliki versi ini yang tidak menggunakan sintaks cahaya serta timur 20:15 dan kemudian di sini kita memiliki

01:17.130 --> 01:21.510
versi Murray menambahkan bahwa tidak ada swap variabel ke hubung singkat

01:21.510 --> 01:24.290
Jika kita tidak melakukan swap apa pun itu semacam bubble.

01:24.410 --> 01:25.510
Banyak yang saya tahu.

01:25.680 --> 01:27.930
Sekarang kita memiliki algoritma pengurutan lain yang akan datang berikutnya.
