WEBVTT

00:00.300 --> 00:00.890
Baiklah.

00:00.930 --> 00:06.000
Jadi jika Anda melewatkan video terakhir kita sedang membicarakan tentang algoritma Dexter di sini dan

00:06.000 --> 00:12.600
dua hal penting yang perlu Anda ketahui sebelum Anda mulai, ini adalah grafik dan antrian prioritas dengan tumpukan biner yang

00:12.600 --> 00:15.090
keduanya memiliki banyak konten dalam kursus ini.

00:15.090 --> 00:17.360
Jadi apa algoritmanya.

00:17.370 --> 00:20.430
Ini adalah salah satu algoritma yang paling terkenal dan banyak digunakan.

00:20.490 --> 00:25.440
Hampir setiap kelas ilmu komputer di dunia mengetahui bahwa pada titik tertentu dan lebih dari

00:25.450 --> 00:30.660
itu, bukan hanya hal akademis, itu bukan hanya Anda yang tahu tantangan wawancara meskipun sering demikian.

00:30.660 --> 00:32.060
Itu muncul dalam wawancara.

00:32.130 --> 00:35.970
Yang paling penting itu sering digunakan.

00:36.180 --> 00:42.600
Perusahaan teknologi besar akan mendasarkan banyak jenis algoritma rahasia khusus mereka yang lebih eksklusif di atas

00:42.600 --> 00:43.380
Dykstra.

00:43.560 --> 00:46.550
Dan dalam beberapa rasa khusus mereka sendiri saya rasa begitu.

00:46.580 --> 00:48.500
Jadi kita akan berbicara tentang seperti apa itu nantinya.

00:48.960 --> 00:55.560
Dan banyak kasus penggunaan tetapi yang dilakukan utamanya adalah menemukan jalur terpendek antara dua simpul pada

00:55.560 --> 00:56.270
grafik.

00:56.370 --> 01:02.580
Jadi, jika Anda memiliki grafik dengan Anda tahu 10.000 simpul simpul yang berbeda bagaimana kita dapatkan dari titik A ke Titik

01:02.610 --> 01:03.130
B.

01:03.140 --> 01:08.580
Apa cara tercepat mungkin ada sejuta opsi dan grafik yang sangat besar bagaimana

01:08.580 --> 01:10.290
kita menghitung yang terpendek.

01:10.320 --> 01:13.070
Jadi itulah masalah yang mencerna diri kita sendiri.

01:13.230 --> 01:17.680
Oleh karena itu istilah atau nama Dykstra adalah algoritma jalur terpendek.

01:17.750 --> 01:21.880
Pertama mari kita bicara tentang siapa dekstro hanya bilah sisi di sini.

01:21.880 --> 01:24.950
Jadi Edgar Dykstra memotongnya.

01:24.950 --> 01:27.120
Saya tahu dia adalah seorang programmer Belanda.

01:27.150 --> 01:29.440
Dia sebenarnya meninggal relatif baru-baru ini.

01:29.580 --> 01:38.040
Yah bukan itu baru-baru ini tetapi 2002 atau 2003 saya percaya tapi dia bekerja di awal abad ke-20 ketika ilmu

01:38.580 --> 01:41.010
komputer adalah semacam bidang baru.

01:41.190 --> 01:42.480
Dan dia sedikit polymath.

01:42.490 --> 01:46.810
Dia adalah saya pikir dia mulai sebagai fisikawan teoritis fisika.

01:46.830 --> 01:52.590
Dia menulis banyak esai dan banyak makalah akademis tentang pemrograman pemecahan masalah

01:52.590 --> 01:53.490
matematika.

01:53.490 --> 01:57.480
Pria yang benar-benar pintar dan lebih dari sekedar pintar sangat berpengaruh.

01:57.480 --> 02:03.090
Jadi dia membantu untuk memajukan bidang ilmu komputer dari pada saat itu lebih merupakan seni

02:03.450 --> 02:06.920
yang berkembang untuk disiplin akademik gila seperti sekarang.

02:06.980 --> 02:12.970
Dia benar-benar membangun banyak kekakuan akademis yang hadir dalam ilmu komputer.

02:12.990 --> 02:17.770
Dia datang dengan banyak makalah yang sebagian besar masih dikutip hari ini.

02:17.860 --> 02:24.480
Saya membaca beberapa fakta bahwa dari 30 makalah paling berpengaruh yang ia tulis, enam di antaranya saya kira kira seperti

02:24.480 --> 02:24.830
itu.

02:24.840 --> 02:28.100
Saya tidak tahu bagaimana Anda, Anda tahu bagaimana Anda menentukan yang paling berpengaruh.

02:28.110 --> 02:35.610
Tetapi bagaimanapun juga hal lain adalah bahwa ia benar-benar menciptakan bidang baru di dalam kertas-kertas tunggal ilmu komputer

02:35.610 --> 02:38.720
yang ia tulis memunculkan disiplin baru ini.

02:38.820 --> 02:40.310
Jadi sangat sangat berpengaruh.

02:40.320 --> 02:47.400
Dan tidak seperti beberapa perintis lain yang jenis pekerjaannya pada waktu itu sangat penting dan memimpin jalan bagi terobosan-terobosan lainnya, banyak

02:47.400 --> 02:52.830
hal yang ia bicarakan dan tulis tentangnya masih dalam praktik hingga saat ini umumnya digunakan

02:52.830 --> 02:55.830
seperti halnya alam yang lebih besar daripada mereka.

02:56.340 --> 03:02.090
Jadi, inilah screenshot kecil dari Wikipedia di sisi kanan halaman Wikipedia-nya.

03:02.140 --> 03:08.670
Seperti tokoh akademis apa pun atau benar-benar orang mana pun, ada bilah kecil yang mengatakan tidak ada orang yang

03:08.670 --> 03:11.420
bisa melihat Anda terkenal karena banyak yang top.

03:11.550 --> 03:13.770
Prestasi utamanya yang dikenal orang saat ini.

03:13.940 --> 03:19.080
Ini seperti algoritma saurus tetapi ada banyak algoritma lain yang dapat Anda lihat,

03:19.980 --> 03:27.660
tetapi juga hal-hal seperti sistem terdistribusi yang menstabilkan diri sendiri, algoritma shunting yard, pemisahan pedang yang halus dari arsitektur perangkat

03:27.660 --> 03:28.740
lunak awal.

03:28.740 --> 03:31.530
Dia melakukan banyak hal dan banyak berkontribusi.

03:31.530 --> 03:35.020
Jadi cowok sangat keren dan orang yang sangat penting.

03:35.040 --> 03:37.700
Sekarang algoritma itu sendiri terdaftar di bagian atas.

03:37.710 --> 03:43.410
Ini banyak digunakan secara luas diajarkan seperti yang saya sebutkan dan kami sudah mengeksplorasi beberapa ide utama di

03:43.410 --> 03:48.480
baliknya menemukan jalan terpendek antara satu titik dan yang lain tetapi kisah tentang bagaimana ia sampai

03:48.480 --> 03:51.740
pada itu dan mengapa ia menangani masalah ini agak menarik.

03:51.840 --> 03:57.600
Saya tidak tahu apakah ini 100 persen benar tetapi ada di Wikipedia yang tidak selalu berarti

03:57.600 --> 04:03.330
banyak tetapi tampaknya bahwa dorongan baginya untuk benar-benar melakukan ini untuk datang dengan algoritma jalur terpendeknya

04:03.330 --> 04:09.390
adalah bahwa ia menginginkan masalah yang ia dapat datang dengan menunjukkan kepada masyarakat umum mengapa komputer mengagumkan

04:09.390 --> 04:10.860
mengapa mereka kuat.

04:10.860 --> 04:17.150
Dia ingin menunjukkan sesuatu yang sulit bagi manusia untuk dilakukan dan betapa mudahnya komputer dapat melakukannya.

04:17.160 --> 04:23.460
Jadi dia menemukan masalah perjalanan untuk menemukan jalur terpendek di sepanjang jaringan kereta api besar

04:23.550 --> 04:27.960
di Belanda, mencari tahu yang tercepat adalah jalan terpendek.

04:27.960 --> 04:28.950
Ini adalah kutipannya.

04:28.950 --> 04:32.520
Apa cara terpendek untuk bepergian dari Rotterdam ke granit lagi.

04:32.670 --> 04:33.480
Tidak banyak.

04:33.480 --> 04:34.900
Maaf soal itu.

04:35.100 --> 04:39.010
Dari kota mana saja ke kota mana itu adalah algoritma untuk jalur terpendek.

04:39.240 --> 04:43.980
Dan kemudian inilah sesumbar kecilnya yang sederhana yang saya rancang dalam waktu sekitar 20 menit.

04:43.980 --> 04:48.360
Rupanya dia berbelanja dan kemudian minum kopi dan dia lelah.

04:48.540 --> 04:52.240
Dia mendesainnya seperti meja kafe kecil dalam 20 menit.

04:52.920 --> 04:55.430
Dan akhirnya algoritma itu menjadi takjub saya.

04:55.530 --> 04:57.160
Salah satu pilar ketenaran saya.

04:57.270 --> 04:58.370
Jadi agak menarik.

04:58.380 --> 05:04.140
Dia tidak berangkat untuk menyelesaikan ini sebagai miliknya Anda tahu tesisnya atau pencapaian terbesarnya masalah ini

05:04.140 --> 05:05.900
yang menghantui seluruh hidupnya.

05:05.970 --> 05:11.220
Itu lebih dari oh saya ingin hanya datang dengan sesuatu yang publik akan mengerti

05:11.220 --> 05:14.490
sesuatu yang akan menunjukkan nilai intrinsik dari komputer.

05:14.490 --> 05:19.800
Bagaimana menemukan jalur terpendek menggunakan jaringan kereta api di Belanda dan kemudian itulah yang

05:19.800 --> 05:23.700
kemudian memiliki banyak implikasi dan menggunakan kasus hingga hari ini.

05:23.700 --> 05:25.680
Jadi Leslie, mari kita bicarakan mengapa itu terjadi.

05:25.710 --> 05:27.410
Kenapa masih berguna.

05:27.450 --> 05:33.000
Jadi hal yang paling jelas yang telah saya sebutkan ini sebagai contoh GPS GPS atau segala jenis perangkat lunak pemetaan aplikasi

05:33.120 --> 05:38.070
apa pun yang Anda gunakan apakah itu Google Maps Apple Maps atau versi lain apa pun yang ada

05:38.070 --> 05:42.370
di luar sana atau Anda memiliki salah satu dari GPS kuno perangkat di mobil Anda.

05:42.570 --> 05:47.970
Mapquest semua itu melibatkan menemukan jalur terpendek dari satu titik ke titik lainnya dan semua data

05:48.000 --> 05:50.010
itu dapat direpresentasikan menggunakan grafik.

05:50.010 --> 05:54.260
Sekarang tentu saja ada banyak komplikasi lain di dunia saat ini.

05:54.360 --> 06:00.390
Dan seperti Google Maps, algoritmenya tidak hanya mengambil jarak, tetapi kapasitas jalan, jumlah

06:00.390 --> 06:04.690
lajur yang mengalami kecelakaan, baik saat siang maupun siang.

06:04.710 --> 06:08.210
Saya yakin ada banyak faktor lain yang bahkan tidak saya pikirkan tentang liburan.

06:08.610 --> 06:08.950
Ya.

06:09.120 --> 06:13.180
Ada banyak yang masuk ke dalamnya tetapi masih didasarkan pada pertempuran.

06:13.230 --> 06:14.640
Menemukan jalan terpendek.

06:14.820 --> 06:20.820
Sekarang apa yang membuat sesuatu pendek mungkin berbeda karena versi kita akan berbicara tentang kita

06:20.820 --> 06:24.410
sedang melihat satu kriteria seperti jarak pada peta.

06:24.570 --> 06:26.910
Kami tidak menerapkan lalu lintas dan semua itu.

06:27.000 --> 06:31.650
Tetapi pada intinya kita bisa mengambil algoritma digester karena kita akan mempelajarinya dan kemudian men-tweak untuk

06:31.650 --> 06:35.040
menambahkan lalu lintas atau untuk memperhitungkan cuaca dan hal-hal semacam itu.

06:35.040 --> 06:39.930
Selanjutnya perutean jaringan menemukan jalur terpendek untuk data di seluruh jaringan besar.

06:40.020 --> 06:43.590
Jika Anda memikirkan komputer Anda tahu mereka terhubung dalam grafik.

06:44.040 --> 06:45.680
Katakan saja satu juta komputer.

06:45.720 --> 06:46.700
Bagaimana cara kami mengirim.

06:47.100 --> 06:49.960
Bagaimana kita memecah pesan besar menjadi beberapa bagian kecil.

06:50.070 --> 06:55.080
Senator Krus banyak komputer berakhir di komputer lain yang merupakan cara tercepat tercepat

06:55.080 --> 06:57.070
untuk sampai ke sana biologi.

06:57.420 --> 07:05.970
Ini sering digunakan untuk memodelkan penyebaran penyakit menular di manusia yang sering digunakan dalam proyeksi.

07:05.970 --> 07:07.730
Saya tidak memiliki keahlian dalam hal itu.

07:07.740 --> 07:08.910
Itu hanya sesuatu yang saya baca online.

07:08.900 --> 07:10.490
Apa yang saya temukan menarik.

07:10.830 --> 07:15.300
Tiket pesawat jika Anda pergi ke situs-situs Web itu dan Anda tahu Anda masuk ke tempat yang ingin Anda

07:15.300 --> 07:18.030
kunjungi dari satu kota ke kota lain, katakan saja satu arah.

07:18.030 --> 07:25.920
Tentu saja Anda dapat mengoptimalkan untuk semua hal yang berbeda seperti jumlah harga durasi mil maskapai penerbangan.

07:25.980 --> 07:30.090
Tetapi jika Anda mau, katakanlah Anda mencoba untuk datang dengan opsi termurah yang mungkin

07:30.090 --> 07:32.880
dan Anda bersedia membuat seperti tiga perhentian berbeda.

07:33.120 --> 07:37.920
Yah ada banyak pilihan dan akan sangat sulit untuk mencoba dan secara manual

07:37.920 --> 07:45.090
menghitungnya tetapi menggunakan algoritma jalur terpendek di mana meminimalkan itu mengoptimalkan untuk termurah daripada jarak terpendek Anda mungkin akhirnya

07:45.600 --> 07:49.800
terbang melintasi dunia beberapa kali yang mungkin menjadi murah dan

07:49.800 --> 07:55.170
Anda mungkin memiliki singgah panjang tetapi algoritma bisa melakukan itu bisa mencari tahu untuk Anda.

07:55.240 --> 07:57.150
Sepertinya Anda menaruh biologi di sini dua kali.

07:57.210 --> 07:59.010
Aduh maaf tentang itu.

07:59.010 --> 08:04.830
Dan masih banyak lagi kegunaan lain seperti yang akan kita bicarakan tetapi kita akan mulai dengan hanya grafik campuran.

08:04.830 --> 08:11.190
Mungkin terlihat seperti ini di mana kita memiliki angka yang mewakili jarak antar kota adalah persimpangan di

08:11.460 --> 08:12.770
jalur yang berbeda.

08:12.840 --> 08:17.760
Tetapi sebelum kita bahkan dapat berbicara tentang algoritma, kita memiliki satu masalah kecil yaitu kita

08:17.760 --> 08:24.330
tidak memiliki cara untuk menyimpan data ini sekarang jika kita menyederhanakannya untuk itu bahwa latar belakang matematika kita tidak dapat melakukan

08:24.480 --> 08:25.960
bagian ini di sini.

08:26.100 --> 08:30.940
Kami tidak memiliki cara untuk menyimpan informasi tentang keunggulan yang diberikan.

08:30.960 --> 08:34.920
Grafik kami hanyalah simpul dan tepi.

08:34.920 --> 08:37.830
Mereka tidak diarahkan artinya tidak ada panah.

08:37.830 --> 08:42.730
Keduanya sama-sama tetapi mereka juga tidak tertimbang artinya tidak ada nilai yang terkait dengan mereka.

08:42.750 --> 08:47.910
Jadi, hal pertama yang perlu kita lakukan sebelum kita dapat menemukan jalur terpendek kita hanya perlu menambahkan jarak

08:47.910 --> 08:49.840
atau menambah bobot pada grafik kita.

08:49.890 --> 08:50.580
Jadi tidak sulit.

08:50.580 --> 08:52.800
Hanya perlu satu atau dua menit dan video berikutnya.

08:53.040 --> 08:54.240
Itu yang akan kita lakukan selanjutnya.

08:54.240 --> 08:57.190
Jadi kita benar-benar dapat mengimplementasikan algoritma jalur terpendek.

08:57.330 --> 09:00.020
Jadi dalam video berikutnya saya akan kembali untuk menulis grafik berbobot.
