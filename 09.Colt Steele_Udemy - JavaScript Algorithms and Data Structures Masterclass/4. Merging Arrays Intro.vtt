WEBVTT

00:00.210 --> 00:01.440
Hai, selamat datang kembali.

00:01.440 --> 00:07.920
Jadi ini adalah bagian pertama dari penulisan penggabungan yang menulis fungsi untuk menggabungkan dua array yang diurutkan.

00:07.980 --> 00:14.130
Jadi sekali lagi kami memiliki kami menganggap array diurutkan dan yang harus Anda lakukan adalah mengembalikan kombinasi

00:14.130 --> 00:16.010
dari dua array yang diurutkan.

00:16.290 --> 00:18.380
Jadi misalnya saya sudah menulisnya di sini.

00:18.510 --> 00:24.520
Yah saya tidak menunjukkan kode tetapi Anda memiliki fungsi panggilan di sini dua array diurutkan satu 10:52

00:24.550 --> 00:26.850
yang diurutkan dua 14:19 dalam seratus.

00:26.850 --> 00:29.420
Itu diurutkan ketika saya menjalankan ini, saya menggabungkan mereka.

00:29.460 --> 00:33.590
Kami mendapatkan satu hingga 10, 14:15 sembilan ratus sembilan ratus.

00:33.630 --> 00:35.490
Jadi satu array yang dikembalikan.

00:35.700 --> 00:38.910
Jadi pada dasarnya itu adalah pekerjaan Anda jika Anda ingin mencoba dan melakukan ini sendiri.

00:38.940 --> 00:40.840
Saya akan punya solusi di video berikutnya.

00:40.920 --> 00:42.470
Bagian ini juga.

00:42.630 --> 00:47.130
Secara pribadi saya selalu benci mengatakan jika sesuatu itu sulit atau mudah, tetapi saya pikir logika untuk yang ini

00:47.130 --> 00:47.650
masuk akal.

00:47.670 --> 00:51.320
Kami akan berjalan melaluinya meskipun saya memiliki kode pseudo jadi saya melompat pistol di slide saya.

00:51.750 --> 00:52.060
Iya nih.

00:52.080 --> 00:56.690
Sangat berguna untuk terlebih dahulu mengimplementasikan fungsi yang bertanggung jawab untuk menggabungkan dua diurutkan ras yang

00:56.700 --> 01:00.570
diberikan untuk mengurutkan array, fungsi pembantu dapat membuat yang baru yang juga diurutkan.

01:00.570 --> 01:04.760
Dan ya, penting untuk terdiri dari semua elemen dalam dua array input.

01:04.800 --> 01:07.540
Jadi apa yang kita lakukan jika ukurannya tidak sama.

01:07.620 --> 01:08.430
Kami akan membahasnya.

01:08.730 --> 01:14.070
Dan sejauh cara kerjanya, ini adalah sesuatu yang belum kita lihat tetapi harus menjalankan O dari dan ditambah

01:14.130 --> 01:16.380
waktu M dan dan ditambah ruang M.

01:16.380 --> 01:22.380
Jadi N dan M Kami memiliki dua input sekarang untuk fungsi kami satu array dan kemudian array kedua.

01:22.380 --> 01:24.230
Jadi N adalah ukuran yang pertama.

01:24.250 --> 01:25.850
Amice ukuran yang kedua.

01:25.890 --> 01:31.350
Tentu saja itu adalah dua yang terdengar sangat mirip dan Anda mungkin tidak bisa mengatakan apa yang saya katakan dan saya tetapi

01:31.380 --> 01:32.890
itu adalah cara standar untuk mengatakannya.

01:33.030 --> 01:39.660
Dari menuliskannya sehingga itu hanya berarti bahwa jika n tumbuh super besar tetapi M tidak tumbuh sangat besar itu seharusnya

01:39.660 --> 01:43.790
hanya 0 dan ditambah M sering dan biasanya dan menggabungkan semacam.

01:43.790 --> 01:48.450
Mereka adalah ukuran yang sama persis atau satu elemen yang berbeda dalam kehidupan nyata.

01:48.450 --> 01:52.650
Tetapi jika kita bekerja dengan sesuatu dan untuk beberapa alasan kita menggabungkan array dari

01:52.650 --> 01:56.200
seribu item dengan array juta item itu seharusnya dan plus.

01:56.250 --> 01:58.070
Jadi saat itu orang tetap tumbuh.

01:58.230 --> 02:02.070
Yang saya katakan adalah bahwa Anda harus mengunjungi setiap item dalam array satu kali.

02:02.220 --> 02:06.810
Benar jika itu hanya 0 dari N yang berarti bahwa Anda akan ke waktu linier Anda mengunjungi setiap

02:06.810 --> 02:07.920
item setelah Anda mengulanginya.

02:08.280 --> 02:13.990
Tetapi jika itu 0 dari sembarang tempat dan itu berarti bahwa kita mengulangi setiap item dan setiap array sekali.

02:14.040 --> 02:15.520
Jadi, inilah kode semu.

02:15.600 --> 02:16.650
Buat array kosong.

02:16.650 --> 02:18.620
Jadi fungsi didefinisikan membutuhkan dua input.

02:18.720 --> 02:23.820
Buat array kosong yang Anda akan kembali di akhir dan kemudian Anda mulai dengan nilai terkecil di setiap

02:23.820 --> 02:25.350
array input mulai dari awal.

02:25.500 --> 02:29.300
Jadi ada dua counter yang disebut I satu disebut J.

02:29.310 --> 02:31.190
Saya merekomendasikan menggunakan while loop untuk ini.

02:31.200 --> 02:35.610
Secara pribadi itulah yang ingin saya lakukan dan Anda perlu memiliki satu yang mulai mereka berdua harus mulai dari

02:35.610 --> 02:36.000
nol.

02:36.000 --> 02:41.860
J dan saya adalah dua angka mulai ke Eropa sementara masih ada nilai yang belum kita lihat.

02:41.860 --> 02:48.340
Artinya sementara I dan J keduanya belum mencapai akhir array masing-masing kita akan mengambil nilai

02:48.340 --> 02:53.920
array pertama dari item pertama dan kemudian membandingkannya dengan nilai item pertama di

02:53.920 --> 02:55.030
array kedua.

02:55.030 --> 03:01.390
Sekarang jika item pertama lebih kecil kita memasukkannya ke dalam array hasil kita dan kemudian kita beralih ke item berikutnya

03:01.450 --> 03:02.460
di baris pertama.

03:02.800 --> 03:03.870
Jika sebaliknya.

03:03.970 --> 03:08.660
Jika array pertama lebih besar item dalam array pertama daripada nilai dalam array kedua kami.

03:08.740 --> 03:13.630
Kami mengambil nilai dari array kedua dan memasukkannya ke dalam hasil dan beralih ke nilai berikutnya di

03:13.630 --> 03:14.380
array kedua.

03:14.540 --> 03:19.790
Dan kemudian setelah kita menyelesaikan satu array kita hanya mendorong semua nilai yang tersisa dari array yang lain.

03:19.840 --> 03:25.180
Jadi misalnya jika kita mengambil keduanya, kita cukup menuliskannya di sini.

03:25.180 --> 03:29.680
Ini adalah dua array dan ini adalah hasil saya bahwa saya akan kembali

03:29.680 --> 03:31.790
Kami mulai dengan dua penghitung.

03:31.810 --> 03:32.730
Saya dan J.

03:32.850 --> 03:35.100
Dan mereka mulai dari nol dan nol.

03:35.650 --> 03:37.380
Jadi kami membandingkan satu dan dua.

03:37.720 --> 03:38.800
Mana yang kecil.

03:38.870 --> 03:39.870
Satu adalah.

03:39.880 --> 03:43.320
Jadi kita taruh satu di sini dan kemudian kita lanjutkan.

03:43.330 --> 03:45.840
Dalam array pertama ini kita sekarang melihat 10.

03:46.120 --> 03:51.250
Jadi jika saya harus meletakkan penanda kecil di sini seperti itu, itu bukan cara yang bagus untuk menulisnya dan

03:51.250 --> 03:52.580
penanda kita di sini.

03:52.750 --> 03:56.170
Ini akan menggigit saya, ini akan mengganggu untuk melacak juga.

03:56.320 --> 04:00.530
Jadi lain kali kita membandingkan sepuluh di mana yang lebih kecil juga.

04:00.940 --> 04:02.350
Jadi kami menempatkan dua di sini.

04:02.620 --> 04:07.730
Yang berarti bahwa sekarang kita perlu menggeser ini dan sekarang kita melihat 10 dan 14.

04:07.830 --> 04:09.000
Jadi sekarang mana yang lebih kecil.

04:09.040 --> 04:09.820
Sepuluh adalah.

04:09.820 --> 04:12.910
Jadi kita masukkan 10 dan kemudian kita naikkan ini.

04:12.910 --> 04:13.970
Bukan yang ini.

04:14.020 --> 04:19.170
Sekarang kita melihat 14 dan 50 mana yang lebih kecil 14.

04:19.240 --> 04:19.630
Baiklah.

04:19.630 --> 04:22.040
Jadi kita memindahkan ini ke 99.

04:22.270 --> 04:24.060
Dan dapatkan.

04:25.600 --> 04:28.810
OK 50 dalam 99 yang memenangkan 50 kemenangan.

04:29.040 --> 04:31.940
Jadi sekarang kita sudah kehabisan array itu.

04:32.340 --> 04:37.200
Dan apa yang memberitahu kita jika kita sudah mencapai akhir ini semua yang kita lakukan adalah mengambil semua nilai yang tersisa

04:37.200 --> 04:41.700
di yang lain ini karena jika ini diurutkan dan mereka harus disortir dengan cara yang sama saya seharusnya mengatakan

04:42.000 --> 04:44.670
bahwa kita tidak bisa memiliki satu dalam naik dan turun.

04:45.060 --> 04:49.740
Mereka semacam dalam tingkat yang sama dengan cara apa pun yang ada di akhir array ini jika kita

04:49.740 --> 04:55.320
memiliki barang-barang yang tersisa di array lain yang kita tahu pasti semuanya lebih besar dari apa pun yang 50 dalam kasus ini.

04:55.320 --> 05:01.670
Jadi sekarang kita tambahkan saja 99 dan kemudian 100 dan sekarang kita telah berhasil menggabungkan kedua array.

05:01.680 --> 05:04.660
Jadi itulah pendekatan yang saya ingin Anda coba dan ambil.

05:04.860 --> 05:08.520
Kalau tidak, jika Anda tidak ingin melakukannya di video berikutnya saya hanya akan menunjukkan solusi.

05:08.550 --> 05:10.890
Jadi ini adalah langkah penting pertama untuk merger.
