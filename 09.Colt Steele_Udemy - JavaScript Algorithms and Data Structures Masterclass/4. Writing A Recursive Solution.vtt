WEBVTT

00:00.300 --> 00:00.630
Baiklah.

00:00.630 --> 00:01.560
Selamat datang kembali.

00:01.560 --> 00:06.750
Jadi kami menghabiskan banyak waktu berbicara tentang dua fitur dari masalah yang diberikan yang harus ada

00:06.960 --> 00:09.930
agar kami dapat menggunakan pendekatan pemrograman yang dinamis.

00:09.930 --> 00:15.280
Kedua fitur tersebut hanya sebagai rekap tumpang tindih beberapa masalah dan kemudian substruktur optimal.

00:15.300 --> 00:20.910
Yang ingin saya lakukan sekarang adalah mengambil masalah yang memperlihatkan dua fitur tersebut dan menyelesaikannya terlebih

00:20.910 --> 00:24.910
dahulu tanpa pemrograman dinamis dan kemudian refactor menggunakan pemrograman dinamis.

00:25.110 --> 00:26.980
Jadi masalah yang akan kita mulai.

00:27.030 --> 00:29.940
Kami telah melihat urutan Fibonacci.

00:29.940 --> 00:36.750
Jadi ini menunjukkan kedua fitur itu terasa seperti fitur itu istilah yang salah tetapi properti yang menunjukkan kedua properti

00:36.750 --> 00:39.290
itu di mana kita sudah membahas ini.

00:39.300 --> 00:43.090
Saya menggunakan itu sebagai contoh dalam video subproblem yang tumpang tindih.

00:43.290 --> 00:48.020
Dan saya juga menyentuhnya secara singkat di video terakhir ketika kami berbicara tentang substruktur yang optimal.

00:48.120 --> 00:49.920
Ini menunjukkan kedua fitur tersebut.

00:49.920 --> 00:57.030
Jadi dengan itu keluar dari jalan mari kita menulis solusi sederhana menggunakan rekursi untuk menghitung angka ke-n

00:57.030 --> 00:59.140
digit ke dalam urutan Fibonacci.

00:59.400 --> 01:04.920
Jadi, inilah yang perlu kita ketahui atau inilah yang kita ketahui untuk pergi dan menerapkannya secara rekursif.

01:04.920 --> 01:10.740
Jadi untuk angka apa pun, katakanlah angka Fibonacci kelima yang kita lakukan adalah mengambil angka Fibonacci keempat

01:10.740 --> 01:16.620
dan menambahkannya ke nomor Fibonacci ketiga dan jelas kita tidak tahu bahwa segera kode kita tidak akan tahu

01:16.620 --> 01:17.290
itu.

01:17.310 --> 01:23.070
Jadi kita perlu menghitung angka keempat yang ketiga ditambah yang kedua dan kita terus berjalan.

01:23.100 --> 01:24.980
Tetapi kami memiliki dua kasing dasar ini.

01:25.080 --> 01:29.270
Kita tahu bahwa digit pertama adalah 1 dan digit kedua adalah 1.

01:29.340 --> 01:35.330
Jadi kita bisa terus berulang sampai kita mencapai base case Fibonacci dari 1 Fibonacci dua.

01:35.340 --> 01:37.750
Keduanya harus mengembalikan nilai 1.

01:37.860 --> 01:43.650
Kalau tidak, kita akan mengembalikan Fibonacci dan minus satu plus Fibonacci n minus dua.

01:43.650 --> 01:46.690
Jadi jika Anda ingin menulis sendiri video ini Pozza sekarang.

01:46.800 --> 01:49.440
Main-main dengannya dan lihat bagaimana kelanjutannya.

01:49.550 --> 01:51.670
Ini seperti 90 persen dari tingkat kerja di sini.

01:51.720 --> 01:53.280
Anda harus menerjemahkannya ke kode.

01:53.370 --> 01:55.620
Anda harus menulis definisi fungsi hal semacam itu.

01:55.620 --> 01:58.220
Tetapi ini adalah bagian terbesar dari logika.

01:58.500 --> 02:01.140
Saya akan memiliki solusi dalam tiga detik.

02:01.140 --> 02:02.910
Tiga dua satu.

02:03.160 --> 02:03.620
BAIK.

02:03.880 --> 02:05.250
Ini solusinya.

02:05.250 --> 02:08.090
Tidak terlalu cantik tapi cukup sederhana.

02:08.160 --> 02:14.670
Kami mendefinisikan Fibonacci fungsi kami atau saya sebut saja fib mengambil angka N dan kemudian kami periksa.

02:14.670 --> 02:15.940
Baiklah, ini kasus dasar kami.

02:16.020 --> 02:21.570
Jika angka itu kurang dari atau sama dengan dua kita bisa juga hanya mengatakan jika angka itu adalah 1 atau

02:21.570 --> 02:22.790
angka itu adalah 2.

02:23.280 --> 02:25.920
Kami tidak harus bekerja dengan angka nol dan negatif.

02:25.920 --> 02:27.590
Tetapi ini hanyalah cara singkat untuk menulisnya.

02:27.590 --> 02:33.270
Karena jika saya membuat garis panjang saya harus membuat blok kode itu sangat panjang dan kemudian ukuran font menjadi

02:33.270 --> 02:34.140
sangat kecil.

02:34.140 --> 02:37.900
Jadi saya menyederhanakannya jika kurang dari atau sama dengan mengembalikan satu.

02:37.920 --> 02:41.100
Itu berarti kita berada di digit pertama atau digit kedua.

02:41.100 --> 02:45.890
Kalau tidak, kembalikan fib dan minus satu plus fib dan minus dua.

02:45.900 --> 02:50.030
Jadi, jika Anda percaya bahwa ini berfungsi apa adanya, Anda dapat melewati sisa video ini.

02:50.040 --> 02:53.190
Ini pada dasarnya adalah ulasan dari bagian rekursi.

02:53.190 --> 02:54.910
Kami punya masalah seperti ini.

02:54.960 --> 02:57.450
Tidak ada yang melibatkan pemrograman dinamis di sini.

02:57.450 --> 02:58.940
Kami bekerja dengan submasalah dengan benar.

02:58.950 --> 03:03.090
Itu semacam dasar rekursi yang harus kita pecahkan menjadi masalah yang lebih kecil.

03:03.090 --> 03:06.140
Kami memiliki kasus dasar tetapi ini hanya rekursi lama.

03:06.150 --> 03:08.390
Jadi pertama saya kira saya harus membuktikan bahwa itu berhasil.

03:08.400 --> 03:10.200
Jadi inilah cuplikan saya dengan itu.

03:10.200 --> 03:11.100
Gigit dengan itu.

03:11.100 --> 03:15.260
Dan saya dieksekusi dan saya jalankan mari kita lakukan lima dari satu hanya untuk mengujinya.

03:15.270 --> 03:15.710
BAIK.

03:15.900 --> 03:19.960
Kita mendapatkan satu dari dua memberi kita satu juga.

03:19.990 --> 03:24.510
Lima dari tiga harus memberi kita dua sebelum memberi kita tiga.

03:24.510 --> 03:24.770
Baiklah.

03:24.780 --> 03:27.480
Lima dari lima harus lima lima dari enam.

03:27.570 --> 03:30.450
Ini akan menjadi 8 dan seterusnya.

03:30.450 --> 03:31.750
Baiklah, jadi ini berfungsi.

03:31.770 --> 03:36.090
Saya akan memperingatkan Anda bahwa saya tidak akan menguji ini dengan jumlah yang sangat besar.

03:36.150 --> 03:38.340
Anda akan melihat bahwa segala sesuatunya tumbuh dengan sangat cepat.

03:38.340 --> 03:40.380
Jadi lima dari 10 adalah 55.

03:40.380 --> 03:45.920
Tapi begitu Anda membalik 20, itu sangat besar dan 30 bahkan lebih besar.

03:45.930 --> 03:49.800
Kami benar-benar akan kembali ke ini di video berikutnya dan berbicara tentang

03:49.800 --> 03:54.290
notasi O besar implementasi kami saat ini dan Anda akan melihat bahwa itu juga sedikit berbahaya.

03:54.300 --> 03:56.920
Seperti Fitbit 100, saya tidak akan mengetik itu sekarang.

03:57.210 --> 03:59.220
Saya lakukan sebelumnya dan itu adalah kesalahan besar.

03:59.230 --> 04:01.050
Pokoknya kita akan membicarakan mengapa di video berikutnya.

04:01.230 --> 04:02.940
Jadi ini berhasil.

04:02.940 --> 04:08.310
Dan alih-alih melangkah melalui itu di chrome debugger yang menurut saya agak bukan pengalaman yang bagus

04:08.310 --> 04:09.150
untuk ditonton.

04:09.150 --> 04:13.750
Saya membuat animasi yang sangat sederhana di sini untuk menunjukkan kepada Anda semacam pohon rekursif.

04:14.010 --> 04:17.850
Jadi ketika kita sebut fib 5 ini adalah seluruh pohon diletakkan.

04:17.940 --> 04:23.790
Tetapi saya memiliki titik-titik kecil berwarna ini yang akan menunjukkan kepada kita hal-hal yang semacam menunggu

04:23.790 --> 04:25.040
sesuatu untuk dikembalikan.

04:25.080 --> 04:34.470
Jadi 4:55 akan kembali sebelum ditambah lima dari tiga tetapi kami tidak mendapatkan apa-apa kembali karena sebelum perlu dikembalikan atau kita perlu nilai di

04:34.470 --> 04:38.810
sana terlebih dahulu sebelum kita dapat menambahkannya ke lima dari tiga.

04:38.880 --> 04:42.800
Jadi, jika sebelumnya lima atau tiga ditambah lima dari dua.

04:42.810 --> 04:44.430
Tetapi kita tidak tahu lima dari tiga.

04:44.820 --> 04:51.780
Jadi kemudian kita sampai pada dua dari dua yang kali ini kita tahu nilainya karena seperti yang telah kita lihat jika kurang dari

04:51.780 --> 04:53.640
atau sama dengan mengembalikan satu.

04:53.700 --> 04:54.950
Jadi itu kasus dasar kami.

04:54.960 --> 04:58.380
Jadi ini kembali ke satu dan berwarna hijau.

04:58.380 --> 05:04.610
Jadi sekarang lima dari tiga kami menambahkan satu ditambah lima dari satu dan itu juga merupakan kasus dasar.

05:04.610 --> 05:12.890
Ini satu atau dua pengembalian satu jadi kami mendapatkan satu untuk itu bersama-sama dan itu memberi kami nilai untuk serat tiga

05:12.890 --> 05:13.860
yang dua.

05:14.210 --> 05:14.970
Baiklah.

05:15.230 --> 05:22.460
Jadi sekarang sebelum saya menunggu, kita harus menambahkannya ke fib dua dan sekali lagi kita memiliki casing dasar

05:22.460 --> 05:23.780
yang ternyata 1.

05:24.170 --> 05:27.850
Jadi sekarang kita punya dua dan satu kita tambahkan bersama-sama dan kita dapatkan tiga.

05:28.290 --> 05:29.720
Dan layar itu.

05:29.720 --> 05:36.740
Jadi sekarang lima dari lima yang asli lima dari lima sekarang tahu apa 3:55 adalah semua ini kita dapat menambahkannya ke lima

05:36.740 --> 05:39.700
dari tiga yang kita harus mencari tahu lagi.

05:39.710 --> 05:45.820
Jadi lima dari tiga adalah dua dua ditambah lima satu tetapi kita harus mulai di sini tentu saja.

05:45.860 --> 05:49.430
Sangat melelahkan untuk membicarakan pengembalian ini, ini adalah kasus dasar.

05:49.700 --> 05:54.270
Jadi apakah ini mereka tambahkan bersama untuk mengembalikan nilai ke sini.

05:54.440 --> 05:58.470
Dan akhirnya baris asli kami pertama kali kami berlari lima dari lima.

05:58.520 --> 05:59.890
Baris ini telah menunggu.

06:00.080 --> 06:04.490
Dan akhirnya itu benar-benar akan mengembalikan nilai tiga ditambah dua yang lima.

06:04.790 --> 06:06.330
Dan hari ini kita selesai.

06:06.440 --> 06:08.780
Jadi itu sedang melangkah melalui proses.

06:08.780 --> 06:11.540
Semoga itu masuk akal jika Anda berjuang dengan rekursi di sini.

06:11.540 --> 06:15.360
Saya merekomendasikan Anda untuk kembali dan meninjau bagian rekursi.

06:15.380 --> 06:20.990
Saya tahu ini agak tidak menarik, tetapi jika Anda berjuang dengan itu akan membuat

06:20.990 --> 06:25.630
hal-hal berikutnya beberapa jenis video berikutnya jauh lebih sulit untuk dipahami.

06:26.000 --> 06:26.960
Tidak menakuti siapa pun.

06:26.960 --> 06:27.850
Tolong jangan pergi.

06:28.010 --> 06:28.460
BAIK.

06:28.670 --> 06:30.960
Demikian pula dengan rekursi lama yang sederhana.

06:31.010 --> 06:33.330
Itu bukan solusi yang sangat bagus.

06:33.350 --> 06:34.560
Ini pendek dan ringkas.

06:34.570 --> 06:35.560
Saya akan memberikannya.

06:35.660 --> 06:39.070
Ini adalah cara yang bagus untuk mengajarkan rekursi tetapi benar-benar tidak efisien.

06:39.080 --> 06:43.030
Dan kita akan melihat mengapa di video berikutnya kita akan berbicara tentang O besar dari solusi ini.
