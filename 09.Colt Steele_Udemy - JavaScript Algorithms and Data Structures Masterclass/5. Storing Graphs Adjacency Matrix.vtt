WEBVTT

00:00.120 --> 00:01.050
Selamat datang kembali.

00:01.050 --> 00:04.700
Sekarang kita tahu lebih banyak tentang cangkok, kita tahu terminologi mewah di sekitar mereka.

00:04.740 --> 00:09.840
Mari selami detail yang rumit untuk mengimplementasikan grafik yang menyimpannya

00:09.840 --> 00:12.180
atau merepresentasikannya menggunakan kode.

00:12.180 --> 00:18.330
Jadi kembali ke gambar ini dari Wikipedia ini adalah grafik dari sebagian kecil halaman Wikipedia yang kita punya

00:18.360 --> 00:21.860
setiap titik di sini adalah halaman atau artikel di Wikipedia.

00:21.960 --> 00:27.460
Dan setiap sisi masing-masing koneksi mewakili Saya percaya tautan atau referensi referensi silang.

00:27.750 --> 00:33.390
Jadi, jika kita memiliki bagan ini di sini dan seseorang meminta Anda untuk menyimpannya menggunakan kode bagaimana Anda

00:33.390 --> 00:34.140
akan melakukannya.

00:34.170 --> 00:38.920
Struktur data apa yang akan Anda gunakan untuk membantu Anda membuat kelas sendiri Apa yang akan Anda lakukan.

00:39.150 --> 00:44.700
Itu tidak mudah, tetapi jika kita memecahnya apa yang kita benar-benar perlu menyimpan

00:45.090 --> 00:50.540
grafik informasi penting adalah node simpul aktual dan kemudian cara menyimpan koneksi.

00:50.550 --> 00:56.310
Jadi dengan suka dengan daftar tertaut misalnya kita lakukan berikutnya dan sebelumnya Jika itu adalah daftar tertaut ganda dengan

00:56.700 --> 00:59.510
pohon pencarian biner kita telah kiri dan kanan.

00:59.520 --> 01:05.820
Di kelas kami, itu tidak akan berfungsi untuk grafik karena ada sejumlah node dan

01:05.820 --> 01:08.640
jumlah koneksi edge antara catatan.

01:08.880 --> 01:09.720
Jadi apa yang kita lakukan.

01:09.960 --> 01:13.580
Ya, Anda bisa menemukan sejumlah solusi.

01:13.650 --> 01:18.300
Sama seperti dengan daftar tertaut Anda dapat menyimpan terlama menggunakan array tidak benar-benar masuk

01:18.300 --> 01:20.900
akal karena mengapa tidak hanya menggunakan array.

01:20.910 --> 01:26.070
Hal yang sama dengan grafik Anda bisa datang dengan semacam pendekatan tangan berat

01:26.070 --> 01:32.280
tetapi ada dua pendekatan standar yang akan kita bicarakan bahwa sebagian besar artikel posting blog meluap dua

01:32.280 --> 01:37.590
ide umum untuk bagaimana melakukan ini dan mereka disebut matriks adjacency dan daftar adjacency.

01:37.590 --> 01:42.300
Jadi sebelum kita membahas bahwa ini adalah grafik yang akan kita kerjakan di sini, cobalah dan wakili

01:42.420 --> 01:43.590
ini menggunakan kode.

01:43.590 --> 01:46.920
Agak ramping dari yang satu ini tapi itu ide yang sama.

01:46.920 --> 01:54.520
Kami memiliki simpul simpul dan kemudian ujung antara A dan B atau A dan F dan kami perlu menyimpan informasi itu.

01:54.890 --> 02:00.150
Jadi kita masuk ke adjacency matrix A matrix jika Anda tidak terbiasa dengan itu hanya

02:00.150 --> 02:04.800
struktur dua dimensi yang biasanya diimplementasikan dengan array bersarang tetapi tidak selalu.

02:04.800 --> 02:07.670
Dan pada dasarnya kami menyimpan informasi dalam baris dan kolom.

02:07.800 --> 02:12.570
Jadi kita bisa mewakili koneksi di sini menggunakan matriks seperti ini.

02:13.020 --> 02:17.550
Jadi cara Anda akan membaca semacam ini matriks boolean ya atau tidak nol atau 1.

02:17.760 --> 02:22.700
Jadi antara dua simpul dan dua simpul, katakanlah n d.

02:22.710 --> 02:25.710
Jadi jika kita melihat a dan kita pergi ke D.

02:25.920 --> 02:29.630
Tidak ada ujung nol salah tidak ada di sana.

02:29.760 --> 02:35.690
Tetapi jika kita melihat a dan b pergi ke a kita melihat B ada koneksi di sana.

02:35.730 --> 02:41.710
Jika Anda melihat sebuah F A ke F di mana ada satu di sana yang merupakan cara kami menyimpan true.

02:41.880 --> 02:44.370
Jadi ini adalah cara untuk mewakili semua sisi.

02:44.370 --> 02:47.230
Perhatikan bahwa ia bekerja dengan cara yang sama jika kita mulai di sini.

02:47.250 --> 02:53.070
Jadi jika kita melihat hubungan antara C dan D misalnya kita bisa mulai dari c pada sumbu kiri ini

02:53.460 --> 02:59.610
dan pergi ke D dan kita melihat ada koneksi atau kita mulai pada C muncul di atas dan turun ke

02:59.610 --> 03:00.350
D .

03:00.480 --> 03:05.610
Dan itu karena itu adalah grafik tanpa arah yang berarti bahwa itu adalah koneksi dua arah

03:05.610 --> 03:10.850
tetapi kita juga dapat menyimpan grafik yang diarahkan di mana hanya satu cara yang disimpan yang masuk akal.

03:10.860 --> 03:15.810
Jadi yang kita miliki di sini adalah matriks yang bisa Anda lakukan array bersarang untuk menyimpan informasi ini.

03:15.810 --> 03:18.360
Nol dan yang mungkin adalah yang paling umum tetapi Anda bisa melakukannya.

03:18.360 --> 03:19.490
Benar atau salah yang bisa Anda lakukan.

03:19.500 --> 03:21.380
Maksud saya jika Anda mau, Anda bisa melakukan ya atau tidak.

03:21.600 --> 03:23.680
Tetapi semua yang Anda simpan hanyalah bagian tepinya.

03:23.700 --> 03:30.270
Jadi setiap kali kita menambahkan simpul baru, simpul baru kita harus menambahkan seluruh baris baru di sini seluruh kolom baru dan

03:30.270 --> 03:33.440
kita akan membandingkan dan membedakan pendekatan dan hanya sedikit.

03:33.480 --> 03:38.700
Jelaskan apa yang baik dari apa yang berhasil dilakukan matriks dengan baik dan apa yang cepat disedotnya.

03:38.790 --> 03:41.400
Inilah halaman Wikipedia yang hanya ingin menunjukkan beberapa diagram.

03:41.500 --> 03:46.850
Berikut adalah representasi dari grafik yang tidak diarahkan di sini.

03:46.850 --> 03:49.350
Ini adalah grafik. Berikut ini adalah matriks yang menyimpannya.

03:49.350 --> 03:55.260
Di sini adalah grafik terarah Anda dapat melihat panah dan Anda dapat melihat matriks yang kami lakukan atau

03:55.260 --> 03:57.450
yang kami gunakan tidak lagi simetris.
