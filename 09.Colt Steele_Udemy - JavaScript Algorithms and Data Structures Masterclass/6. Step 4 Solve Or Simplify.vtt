WEBVTT

00:00.180 --> 00:01.090
Selamat datang kembali.

00:01.110 --> 00:06.090
Jadi kita telah berbicara tentang tiga komponen pertama, tiga langkah pertama dalam pendekatan

00:06.090 --> 00:10.920
pemecahan masalah lima langkah, memahami masalah, lalu melalui beberapa contoh nyata.

00:10.940 --> 00:14.280
Bicara tentang kasus tepi input keluaran semacam itu.

00:14.280 --> 00:19.490
Selanjutnya, bagi pendekatan Anda solusi Anda menjadi beberapa langkah yang dapat Anda ikuti.

00:19.490 --> 00:23.880
Tidak harus mengatakan detailnya, tetapi itu membantu jika Anda dapat membuat langkah-langkah yang

00:23.880 --> 00:24.620
cukup menyeluruh.

00:24.900 --> 00:31.320
Dan kadang-kadang jika semua itu berjalan dengan baik dan Anda merasa senang tentang hal itu, Anda dapat melakukannya sendiri dan Anda

00:31.320 --> 00:32.380
langsung menulis kode.

00:32.790 --> 00:34.320
Dan saya harus mencatat bahwa itu bukan langkah terakhir.

00:34.320 --> 00:39.420
Bahkan jika Anda menyelesaikannya masih ada langkah setelah ini tetapi kadang-kadang Anda belum siap untuk menyelesaikan seluruh

00:39.420 --> 00:40.930
masalah pada saat ini.

00:41.130 --> 00:45.500
Anda mungkin merasa senang sekitar 80 persen tetapi kemudian ada satu hal yang tidak Anda yakin

00:45.510 --> 00:47.800
lakukan atau ada dua hal yang benar-benar menantang.

00:47.820 --> 00:53.440
Jadi di situlah simplify datang dan selesaikan atau sederhanakan atau selesaikan slash simplify.

00:53.560 --> 00:53.990
BAIK.

00:54.210 --> 00:55.430
Slide yang ditunjuk.

00:55.500 --> 00:56.970
Jadi, selesaikan masalahnya jika Anda bisa.

00:57.030 --> 01:02.580
Dan jika Anda tidak dapat memecahkan masalah yang lebih sederhana sekarang bukan berarti mengubah topik pembicaraan sepenuhnya dalam memilih

01:02.780 --> 01:05.340
Anda tahu mari kita selesaikan satu ditambah satu.

01:05.580 --> 01:06.520
Itu bodoh.

01:06.530 --> 01:13.410
Saya tahu saya mengatakan bahwa apa artinya sebenarnya adalah mencoba untuk mengabaikan bagian yang memberi Anda waktu yang

01:13.410 --> 01:16.210
sangat sulit untuk fokus pada yang lain.

01:16.290 --> 01:18.360
Jadi mengapa itu layak dilakukan.

01:18.630 --> 01:24.240
Yah pertama-tama dalam sebuah pengaturan wawancara sering kali Anda ingin memiliki sesuatu untuk ditampilkan sendiri.

01:24.300 --> 01:30.180
Jadi alih-alih terjebak pada satu bagian yang sulit dari masalah dan membuat kemajuan nol sama sekali karena

01:30.480 --> 01:35.880
Anda tahu Anda meletakkan semua telur Anda dalam satu keranjang mampu menyelesaikannya 100 persen sebelum Anda

01:35.880 --> 01:39.340
bahkan mulai menulis kode yang sering dapat terlihat buruk.

01:39.540 --> 01:43.640
Ini jauh lebih baik bahkan jika Anda tahu ada bagian yang akan membuat Anda terjebak.

01:43.650 --> 01:49.230
Jauh lebih baik untuk mulai menulis kode untuk melakukan hal-hal yang Anda tahu bagaimana melakukan semua sambil

01:49.230 --> 01:52.590
mengingat bahwa Anda perlu memasukkan bagian yang sulit kembali.

01:52.590 --> 01:58.680
Kedua, cukup umum bahwa dalam menyederhanakan masalah Anda akan mendapatkan wawasan tentang solusi aktual ke bagian yang

01:58.680 --> 02:02.330
lebih sulit dari masalah dan sesuatu akan klik pada tempatnya.

02:02.340 --> 02:07.100
Jadi saya benar-benar merekomendasikan bahwa jika Anda terjebak pada sesuatu tetapi Anda tahu harus mulai dari mana.

02:07.230 --> 02:09.070
Atau Anda tahu tempat untuk memulai.

02:09.180 --> 02:13.230
Anda harus melakukannya sekali saja setelah Anda melakukan tiga langkah pertama.

02:13.410 --> 02:14.760
Anda mengerti masalahnya.

02:14.760 --> 02:18.240
Anda telah melakukan contoh nyata dan Anda memecahnya menjadi beberapa langkah.

02:18.450 --> 02:22.710
Jadi sejauh penyederhanaan saya suka memikirkannya seperti ini.

02:22.710 --> 02:24.780
Jadi Anda menemukan kesulitan inti dalam apa yang Anda coba lakukan.

02:24.780 --> 02:29.900
Hal yang membuat Anda tersandung sehingga Anda panik untuk sementara waktu mengabaikan kesulitan itu.

02:30.040 --> 02:35.440
Tulis solusi yang disederhanakan dan kemudian sertakan kesulitan itu kembali jika Anda bisa.

02:35.660 --> 02:41.400
Dan sering kali pada langkah ini Anda akan mendapatkan wawasan tentang cara kerja bagian ini.

02:41.400 --> 02:44.200
Jadi sekali lagi mari kita kembali ke contoh ini.

02:44.250 --> 02:49.300
Tulis fungsi yang mengambil string dan mengembalikan jumlah setiap karakter dalam string.

02:49.470 --> 02:56.250
Baiklah jadi ingat penghitungan char harus mengembalikan objek yang berisi semua akun untuk setiap karakter

02:56.250 --> 02:58.420
alfanumerik dalam string input.

02:58.470 --> 03:03.650
Jadi mengabaikan setiap huruf atau angka di semua huruf harus huruf kecil.

03:03.990 --> 03:07.660
Jadi ada beberapa hal yang dapat menimbulkan kesulitan di sini.

03:08.040 --> 03:10.990
Untuk memulai dengan yang jelas sangat sederhana.

03:11.190 --> 03:14.680
Jika seseorang memiliki masalah dengan perulangan maka ini bisa menjadi masalah.

03:14.750 --> 03:19.400
Dan jika Anda memang memiliki masalah dengan perulangan maka saya akan melakukannya jika itu adalah saya dan saya berjuang dengan perulangan.

03:19.410 --> 03:26.280
Saya akan mulai dengan membuat objek dan hanya bekerja dengan karakter pertama dalam string atau

03:26.280 --> 03:29.580
pengkodean keras dalam lima karakter pertama mungkin.

03:29.630 --> 03:32.940
Anda tahu saya tidak akan memberi saya pekerjaan tetapi setidaknya ini awal.

03:32.940 --> 03:37.740
Dan kemudian setelah Anda mengetahui Anda tahu bagaimana menanganinya untuk satu karakter item pertama dalam

03:37.740 --> 03:43.720
string seperti di sini Anda huruf kecil itu atau Anda menambahkannya ke objek atau Anda memeriksa apakah ada di objek.

03:43.830 --> 03:46.230
Kemudian Anda melakukannya untuk karakter kedua kemudian karakter ketiga.

03:46.380 --> 03:49.090
Kemudian Anda menemukan pola yang dapat Anda ubah menjadi satu lingkaran.

03:49.440 --> 03:54.540
Hal lain yang mungkin bermasalah adalah seseorang mungkin tidak nyaman bekerja dengan kunci dan nilai

03:54.540 --> 03:55.530
serta objek.

03:55.530 --> 03:59.850
Sekali lagi masalah yang sangat sederhana dan Anda mungkin tidak akan mewawancarai untuk suatu pekerjaan.

03:59.850 --> 04:01.790
Jika Anda kesulitan melakukannya.

04:01.890 --> 04:06.540
Tetapi jika Anda mencoba untuk menyelesaikan masalah, mungkin Anda di rumah dan Anda merasa tidak nyaman

04:06.540 --> 04:08.820
menggunakan kunci dan nilai serta memanipulasi objek.

04:08.820 --> 04:13.620
Anda bisa mulai dengan loop dan loop setiap karakter dalam string dan mungkin hanya

04:13.620 --> 04:19.720
mencetak karakter itu atau mungkin hal yang lebih realistis adalah bahwa Anda mungkin tidak nyaman bekerja dengan string huruf

04:19.800 --> 04:22.350
besar dan kecil atau untuk pengaturan wawancara.

04:22.440 --> 04:26.960
Anda mungkin tidak ingat kadang-kadang Anda tahu Anda tidak memiliki akses ke komputer atau telepon atau papan tulis.

04:27.030 --> 04:32.650
Anda mungkin tidak ingat metode yang tepat untuk huruf kecil atau huruf besar string dalam Javascript.

04:32.730 --> 04:39.300
Jadi saya hanya akan mengabaikan bahwa saya hanya akan mulai dengan logika utama dan kemudian Anda tahu menempatkan huruf besar dan kecil di sana

04:39.300 --> 04:44.640
dan hanya berurusan dengan itu nanti dan hanya mengatakan lebih keras seperti saya tidak ingat persis bagaimana melakukan ini

04:44.640 --> 04:49.430
jadi saya hanya akan melewati bagian itu dan kemudian pada akhirnya Anda tahu saya akan kembali.

04:49.440 --> 04:54.270
Atau jika saya memiliki komputer saya, saya hanya akan cepat google cara huruf kecil sesuatu di Javascript dalam

04:54.280 --> 04:55.880
huruf kecil semuanya di awal.

04:56.070 --> 04:57.650
Sesuatu seperti itu.

04:57.660 --> 05:03.580
Sekarang jika saya benar-benar menghadapi wawancara ini yang jujur itu adalah masalah yang cukup mudah

05:03.580 --> 05:05.080
setidaknya di permukaan.

05:05.170 --> 05:11.470
Hal yang mungkin paling membuat saya tersandung dan tersandung sebagian besar siswa yang telah saya kerjakan

05:11.620 --> 05:15.870
adalah memastikan karakter alfanumerik membuat objek ini kembali di akhir.

05:15.880 --> 05:20.800
Cukup sederhana, kita bisa menyebutnya frekuensi atau hasil hitungan.

05:20.810 --> 05:25.050
Mungkin itu adalah objek kosong di atas string untuk setiap karakter.

05:25.150 --> 05:31.660
Jadi lakukan saja untuk var i sama dengan nol kurang dari panjang tali.

05:31.660 --> 05:37.180
Baiklah, ini memberi saya setiap karakter dan kita bisa mulai dengan hanya menambahkan setiap karakter ke objek itu atau

05:37.180 --> 05:39.280
memeriksa apakah ada di objek itu.

05:39.400 --> 05:46.120
Jadi abaikan bagian huruf angka abaikan alfanumerik abaikan casingnya dan periksa apakah karakter yang

05:46.120 --> 05:48.410
tepat ada di objek.

05:48.730 --> 05:50.580
Jadi saya hanya akan menggunakan sesuatu seperti.

05:50.640 --> 05:57.640
Jika hasil ini membuat variabel di sini untuk membuat ini sedikit lebih terbaca.

05:57.640 --> 06:05.560
Jadi mari kita membuat variabel bernama Char sama dengan string I daripada harus meletakkan string-I di semua

06:05.560 --> 06:06.180
tempat.

06:06.250 --> 06:16.810
Jadi jika hasil char lebih besar dari nol artinya sudah ada di sana maka saya tinggal salin dan lakukan.

06:16.840 --> 06:25.820
Plus plus lagi kita akan mengatur hasil Chaar sama dengan satu karena itu berarti itu belum ada di

06:25.820 --> 06:26.540
sana.

06:27.290 --> 06:31.880
Dan ini pada dasarnya saya akan mulai berasumsi saya tidak memiliki kesalahan ketik.

06:32.480 --> 06:41.360
Jadi jika kita meletakkan kode semu saya yang ada di sini jika karakter belum menaklukkan nomor ini biarkan masalahnya, tetapi kita setidaknya

06:41.900 --> 06:45.240
mendapatkan 90 persen dari jalan ke sana.

06:46.030 --> 06:51.940
Ini hanya sedikit kode pseudo saya di sini dan kami tidak menangani ini.

06:51.950 --> 06:53.380
Kembalikan objek di akhir.

06:53.480 --> 06:58.480
Jadi kembalilah hasil dan mari kita lihat apakah itu berfungsi ok.

06:58.520 --> 07:06.940
Saya menjalankan solusi saya dan jika saya menjalankan penghitungan char maka jumlah char yang cukup besar dari halo membuat ini sedikit

07:06.940 --> 07:07.960
lebih besar.

07:08.020 --> 07:13.100
Berhasil Anda dapat melihat bahwa kami mendapatkan 8 E 1 L 2 0 1.

07:13.990 --> 07:15.660
Jika saya melakukannya.

07:15.850 --> 07:19.090
Hai yang seperti ini.

07:19.090 --> 07:22.770
Anda dapat melihat bahwa kami juga mendapatkan huruf besar H semakin.

07:22.900 --> 07:31.960
Apa lagi tanda seru atau mendapat ruang jadi itu tidak ideal tapi kita benar-benar dekat.

07:32.360 --> 07:38.870
Jadi sekarang Anda tahu jika kita telah menyelesaikan ini, setidaknya kita bisa mengetahui bagian huruf kecil atau mungkin pewawancara kita memberi kita

07:38.870 --> 07:42.760
petunjuk atau kita memiliki akses untuk mencari tahu bagaimana melakukan huruf kecil.

07:42.830 --> 07:48.830
Ini hanya metode untuk huruf kecil atau kita bisa huruf besar semuanya tapi itu masalah jika kita ingin huruf

07:48.830 --> 07:50.590
kecil seluruh string terlebih dahulu.

07:50.690 --> 07:56.600
Atau kita bisa melakukannya, Anda tahu satu karakter pada satu waktu sehingga kita bisa datang ke sini dan hanya melakukan

07:56.630 --> 07:58.810
dua huruf kecil seperti itu jalankan kembali

08:01.650 --> 08:06.960
kode kita jalankan kembali kode kita dan sekarang jika kita melihat jumlah Char tinggi di sana semuanya bekerja.

08:07.140 --> 08:10.430
Kita harus bertanya apakah itu tidak masalah.

08:10.440 --> 08:14.570
Sekarang kita masih memiliki karakter non-alfanumerik tetapi ini membuat kita hampir sampai ke sana.

08:14.790 --> 08:17.360
Dan sekarang kita bisa melakukan riset tambahan.

08:17.490 --> 08:21.840
Kita bisa bertanya kepada pewawancara kita apakah mereka punya saran,

08:21.840 --> 08:28.430
kita bisa mulai meludah dan bagaimana melakukan komponen alfanumerik itu ke nomor telepon atau jika karakter alfanumerik.

08:28.500 --> 08:35.910
Ada beberapa opsi yang bisa kami definisikan, Anda tahu sebuah array yang pada dasarnya berisi setiap karakter yang valid yang

08:36.420 --> 08:37.630
seharusnya sangat mengganggu.

08:37.710 --> 08:39.330
Jadi kita bisa memiliki array yang masif.

08:39.340 --> 08:46.650
Itu ab cd huruf besar dan kecil dan satu setiap karakter alfanumerik yang saya kira tidak banyak tetapi masih

08:46.650 --> 08:48.830
akan menjadi array yang panjang.

08:49.170 --> 08:53.400
Kita dapat menggunakan ekspresi reguler yang mungkin akan saya lakukan.

08:53.400 --> 08:56.060
Dan saya akan menunjukkan Anda solusi dengan itu di video berikutnya.

08:56.580 --> 09:01.650
Anda mungkin juga dapat melakukan sesuatu dengan kode karakter kode ASCII.

09:01.650 --> 09:07.110
Ada banyak cara berbeda yang bisa Anda lakukan dan semua yang perlu kita lakukan adalah mencolokkannya ke kode

09:07.110 --> 09:08.310
kita yang ada.

09:08.400 --> 09:14.630
Jadi, jika kami memeriksa apakah itu karakter yang valid saya mungkin hanya menambahkan pernyataan If tambahan di

09:14.650 --> 09:15.160
ness.

09:15.190 --> 09:17.340
Bagian dalam pernyataan if.

09:17.400 --> 09:20.800
Jadi semua logika ini menyatakan kita tidak akan menghapus apa pun.

09:20.930 --> 09:23.820
Kami hanya menambahkan satu komponen kecil itu.

09:23.820 --> 09:27.920
Jadi untuk menyelesaikan ini, Anda tahu ini bukan pertanyaan yang sangat menantang.

09:27.960 --> 09:31.950
Dalam semua kejujuran tetapi masih ada banyak pendekatan berbeda yang bisa kita ambil banyak cara

09:31.950 --> 09:33.080
berbeda untuk menyelesaikannya.

09:33.150 --> 09:37.380
Dan seperti yang saya katakan solusi berikutnya saya akan menunjukkan kepada Anda di video

09:37.380 --> 09:39.650
berikutnya serta beberapa versi refactored sedikit berbeda.

09:40.080 --> 09:46.220
Tetapi pada akhir hari kita menulis apa yang bisa kita tulis, kita loop, kita menambahkan sesuatu ke objek.

09:46.290 --> 09:50.640
Kami memiliki beberapa persyaratan bahkan jika itu tidak sempurna, kami masih 90 persen dari perjalanan ke

09:50.640 --> 09:51.160
sana.

09:51.240 --> 09:56.130
Kami hanya perlu cara untuk memeriksa apakah ada sesuatu yang alfanumerik dan dalam sebuah wawancara jika Anda bisa mendapatkan 90

09:56.130 --> 10:01.170
persen dari perjalanan ke sana dan Anda hanya memiliki satu hal kecil yang Anda tahu harus Anda selesaikan, beri tahu pewawancara

10:01.170 --> 10:05.850
bahwa Anda tahu ada tiga cara berbeda Saya tidak yakin yang mana yang terbaik atau saya tidak yakin bagaimana

10:05.850 --> 10:06.360
melakukan ini.

10:06.360 --> 10:12.090
Anda punya saran tentang apa yang bisa saya lakukan untuk memeriksa apakah ada alfanumerik yang mempertanyakan apakah Anda

10:12.090 --> 10:14.560
mendapatkan 90 persen dari perjalanan ke sana.

10:14.610 --> 10:20.010
Ini menunjukkan banyak tentang kemampuan pemecahan masalah Anda daripada hanya memperbaiki itu sebelum

10:20.010 --> 10:21.220
Anda mulai.

10:21.240 --> 10:26.770
Jadi jauh lebih baik untuk menulis sesuatu seperti meletakkan barang secara rasional di halaman dan berharap itu berhasil.

10:26.910 --> 10:32.490
Tapi dapatkan potongan yang tepat sehingga setelah Anda mengetahui bagian yang sulit Anda bisa tancapkan saja.
