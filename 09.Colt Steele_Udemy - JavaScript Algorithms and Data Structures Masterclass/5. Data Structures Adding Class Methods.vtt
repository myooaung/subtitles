WEBVTT

00:00.240 --> 00:01.050
Selamat datang kembali.

00:01.050 --> 00:03.690
Dalam video ini kita akan berbicara tentang metode kelas.

00:03.840 --> 00:08.980
Jadi kami berbicara tentang membuat kelas atau mendefinisikan pola penulisan metode konstruktor.

00:09.090 --> 00:11.580
Tetapi kata kunci baru yang kita bicarakan adalah metode instan.

00:11.580 --> 00:16.530
Sekarang kita berbicara tentang jenis metode kedua yang dapat Anda tambahkan ke kelas delapan tahun 2015

00:16.530 --> 00:21.210
yang disebut metode kelas di mana kami menggunakan kata kunci statis di depan definisi metode.

00:21.210 --> 00:28.620
Jadi ini memungkinkan kita lakukan adalah menemukan metode atau fungsi yang berkaitan dengan kelas tetapi tidak harus

00:28.620 --> 00:31.650
dengan contoh individu dari suatu kelas.

00:31.650 --> 00:37.170
Jadi ini sebenarnya tidak terlalu umum dan sebagian besar dari apa yang kita lakukan dalam kursus ini adalah

00:37.170 --> 00:39.150
metode instan untuk struktur data kita.

00:39.150 --> 00:45.030
Tetapi jika kita pergi ke dokumen pada MDI dan sekali lagi saya suka penjelasan ini kata kunci statis mendefinisikan metode

00:45.030 --> 00:45.930
statis untuk kelas.

00:45.930 --> 00:52.110
Metode statis dipanggil tanpa membuat instance kelas mereka dan tidak dapat dipanggil melalui instance kelas.

00:52.230 --> 00:56.120
Mereka sering digunakan untuk membuat fungsi utilitas untuk suatu aplikasi.

00:56.190 --> 01:00.870
Jadi contoh yang saya tambahkan di sini yang bukan metode lengkap dengan cara saya tidak menulis

01:00.870 --> 01:06.330
fungsionalitas sebenarnya tetapi idenya adalah bahwa kita dapat memiliki metode yang disebut mendaftarkan siswa dan ini adalah metode kelas

01:06.720 --> 01:09.750
yang dapat Anda lewati di beberapa siswa sebuah array.

01:09.780 --> 01:16.200
Sebagai contoh seperti yang kita miliki di sini dan ini akan pergi dan mungkin mengirim email ke masing-masing dari

01:16.200 --> 01:19.130
masing-masing alamat email terkait atau sesuatu seperti itu.

01:19.140 --> 01:21.320
Idenya adalah bahwa ini harus dilakukan.

01:21.330 --> 01:23.890
Ini lebih seperti fungsi utilitas saya suka penjelasan itu.

01:23.910 --> 01:30.210
Itu tidak terkait dengan satu siswa tunggal di mana kami menggunakan data dari contoh itu seperti kami di

01:30.210 --> 01:30.800
sini.

01:30.930 --> 01:35.160
Kami menggunakan nama depan nama dan nama belakang masing-masing siswa.

01:35.160 --> 01:42.180
Jadi kami akan memanggil titik siswa pertama ini untuk nama tetapi ini mendaftarkan siswa yang lagi-lagi tidak sepenuhnya

01:42.180 --> 01:42.920
ditentukan.

01:43.140 --> 01:46.630
Apa yang dilakukannya tidak terkait dengan contoh tertentu.

01:46.740 --> 01:51.750
Itu hanya bagian dari kelas secara umum dan beberapa fungsionalitas keseluruhan beberapa fungsi utilitas yang

01:51.750 --> 01:56.090
kita inginkan dan cara kita memanggilnya adalah siswa dengan huruf S ..

01:56.100 --> 02:03.210
Jadi kembali ke sini dalam kode kita jika saya mencoba dan menambahkan metode kelas di sini kita hanya akan memanggil 1.

02:03.510 --> 02:07.530
Daftarkan siswa yang baik-baik saja tetapi kami tidak akan benar-benar mendaftar di.

02:08.380 --> 02:13.200
Kami hanya akan mengembalikan string dan menggulung siswa.

02:13.530 --> 02:14.180
Oh Boy.

02:15.820 --> 02:16.620
BAIK.

02:17.210 --> 02:22.880
Jadi metode yang paling mendasar yang mungkin ada di sini dan yang ingin saya tunjukkan adalah

02:22.880 --> 02:30.210
bahwa jika kita membuat instance siswa pertama ini, saya tidak dapat memanggil siswa pertama dot yang kita sebut sebagai siswa pendaftaran.

02:31.190 --> 02:33.930
Saya akan menggunakan modal E yang tidak ingin saya lakukan.

02:33.930 --> 02:36.170
Tapi bagaimanapun juga itu tidak akan berhasil.

02:36.180 --> 02:38.090
Saya perlu siswa.

02:38.130 --> 02:40.530
Daftarkan siswa dan butuhkan orang tua.

02:40.680 --> 02:42.320
Dan sekarang kita dapat menjalankan metode itu.

02:42.450 --> 02:48.180
Jadi ini adalah fungsionalitas yang tidak relevan dengan contoh individu tetapi kami masih menginginkannya sebagai bagian dari kelas Siswa

02:48.180 --> 02:53.670
yang ada hubungannya dengan siswa dalam beberapa cara atau metode pembantu metode utilitas dan dengan siswa agak

02:53.670 --> 02:56.740
sulit untuk menunjukkan yang sebenarnya contoh yang masuk akal.

02:56.910 --> 02:59.080
Jadi kita sebenarnya punya contoh kedua di sini.

02:59.160 --> 03:01.880
Ini adalah salah satu yang saya ambil dari dokumentasi di MDA.

03:02.130 --> 03:03.950
Jadi kita memiliki kelas yang disebut point.

03:03.990 --> 03:09.480
Jadi bayangkan suatu titik pada apa yang disebut pesawat kartesius dan koordinat dasarnya.

03:09.590 --> 03:15.840
Dan jika kita bekerja dalam sistem koordinat ini, setiap titik memiliki nilai x dan Y sehingga kita dapat menginisialisasi

03:15.840 --> 03:19.270
yang baru di sini 5 datang lima 10 datang 10.

03:19.350 --> 03:25.380
Tapi kemudian ada beberapa metode utilitas yang kami inginkan seperti jarak menghitung jarak antara dua titik

03:25.380 --> 03:31.980
yang sudah lama mungkin bagi saya pasti bagi sebagian dari Anda mungkin karena Anda harus menggunakan ini

03:31.980 --> 03:34.560
atau mungkin Anda tidak pernah mempelajarinya.

03:34.590 --> 03:40.170
Ada rumus jarak di mana ini adalah matematika yang perlu Anda lakukan untuk mengetahui titik

03:40.230 --> 03:46.020
antara dua atau jarak antara dua titik yang harus dilakukan dengan membentuk segitiga siku-siku dan sisi

03:46.020 --> 03:47.780
miring dari segitiga itu.

03:47.870 --> 03:51.590
Pokoknya jangan masuk ke dalamnya tapi ini matematika untuk itu.

03:51.600 --> 03:54.180
Jadi Anda bisa menjadikan ini sebagai metode kelas.

03:54.180 --> 03:59.670
Tidak masuk akal untuk memiliki metode jarak B pada contoh individu.

03:59.670 --> 04:01.560
Jadi misalnya saya akan menjalankan ini.

04:01.650 --> 04:08.100
Jadi saya punya P1 dan P2 jika saya ingin mencari jarak antara P1 dan P2 daripada membuat Anda tahu

04:08.130 --> 04:11.000
bagaimana saya akan melakukan itu jarak P1 dot.

04:11.040 --> 04:13.660
Dan kemudian saya masuk ke maksud saya itu bisa berhasil.

04:13.740 --> 04:15.150
Anda bisa menerapkannya dengan cara itu.

04:15.150 --> 04:19.430
Tetapi ini lebih merupakan fungsi utilitas sehingga kami menjadikannya metode kelas.

04:19.620 --> 04:27.660
Jadi alih-alih saya akan memanggil Point Capital P jarak point dan kemudian saya lewati P1 dan P2.

04:27.920 --> 04:30.810
Dan ini adalah jarak antara keduanya.

04:30.860 --> 04:33.900
Apakah itu masuk akal mengapa Anda mungkin mengaturnya dengan cara ini.

04:34.070 --> 04:39.340
Tentu saja semua Pemrograman Berorientasi Objek semua semua yang kami lakukan dengan sintaksis kelas ini.

04:39.470 --> 04:44.740
Ini hanya tentang membuat hal-hal terorganisir lebih baik atau lebih mudah dipahami dan lebih logis.

04:44.750 --> 04:49.670
Jadi cukup banyak dua metode kelas yang Anda lakukan adalah meletakkan kata kunci statis di

04:50.000 --> 04:54.390
depan mereka dan itu membuatnya menjadi metode kelas yang berarti bahwa Anda

04:54.450 --> 05:00.950
tidak lagi menyebutnya pada metode individual atau pada contoh individual Anda menyebutnya kelas itu sendiri seperti titik atau sebelumnya dalam

05:00.950 --> 05:04.620
contoh kami, kami memiliki modal siswa S dot mendaftarkan siswa.

05:05.170 --> 05:05.730
BAIK.

05:05.890 --> 05:12.020
Metode instance Versus untuk memanggil instance individual seperti siswa kedua atau satu titik.

05:12.080 --> 05:16.910
Kita tidak memiliki metode instance dalam contoh ini tetapi jika kita melakukannya kita akan memanggil mereka pada P1 atau P2

05:16.910 --> 05:17.580
dan seterusnya.

05:17.750 --> 05:21.550
Jadi seperti yang saya sebutkan sebelumnya ini adalah bagaimana kita akan menggunakan kelas sendiri.

05:21.590 --> 05:27.560
Yah terutama akan mendefinisikan kelas beberapa struktur data kelas pohon pencarian biner kelas terkait daftar ganda di dalamnya kita

05:27.980 --> 05:34.250
memiliki konstruktor kami semua nilai default adalah properti awal yang kita butuhkan adalah daftar yang terhubung secara tunggal atau pohon

05:34.250 --> 05:39.380
pencarian biner untuk memiliki dan kemudian kita akan memiliki banyak metode contoh seperti yang saya tunjukkan di

05:39.380 --> 05:40.340
video terakhir.

05:40.490 --> 05:45.020
Beberapa dari struktur data ini akan melihat mungkin ada 10 metode berbeda yang kita

05:45.020 --> 05:49.880
definisikan dan itu akan sangat jarang bahwa kita akan menggunakan metode statis tetapi saya merasa bahwa

05:49.880 --> 05:54.770
ini tidak akan lengkap jika saya tidak setidaknya menjelaskan keberadaan mereka jika saya hanya menyebutkan metode contoh.

05:54.770 --> 05:56.980
Itu akan menjadi tidak jujur.

05:57.080 --> 05:58.080
Bukan kata yang tepat.

05:58.160 --> 06:00.880
Akan tidak lengkap jika saya jadi saya perlu menunjukkan bahwa mereka ada.

06:01.010 --> 06:03.170
Tetapi sebagian besar dari apa yang akan kita lakukan adalah mengikuti pola ini.

06:03.170 --> 06:08.300
Struktur data kelas apa pun itu disebut konstruktor Kami dan kemudian banyak metode contoh yang membuat

06:08.300 --> 06:09.200
semuanya berfungsi.

06:09.200 --> 06:14.490
Dan terakhir ingat bahwa kata kata kunci ini berperilaku sedikit berbeda dari biasanya.

06:14.840 --> 06:19.620
Jika ada normal itu selalu berperilaku berbeda tetapi cara itu berperilaku bukan hanya

06:19.640 --> 06:25.580
kelas 20:15 bahwa alih-alih metode contoh atau konstruktor kata kunci ini mengacu pada objek yang

06:25.640 --> 06:28.420
dibuat dari kelas individu contoh aktual.

06:28.570 --> 06:32.350
Dan kami sudah menyebutkan itu, tetapi saya hanya memasukkan slide di sini hanya untuk membuat itu lebih jelas.

06:32.420 --> 06:34.640
Jadi untuk rekap semuanya di sini.

06:34.820 --> 06:39.770
Kelas adalah cetak biru yang dibuat satu objek membuat dikenal sebagai instance.

06:39.770 --> 06:43.600
Kelas dibuat atau dipakai dengan kata kunci baru.

06:43.850 --> 06:48.950
Fungsi konstruktor adalah fungsi khusus yang dijalankan ketika kelas instantiated.

06:48.950 --> 06:55.550
Ketika Anda menjalankan siswa baru, konstruktor siswa dijalankan misalnya metode dapat ditambahkan ke kelas yang mirip dengan metode

06:55.550 --> 07:00.050
dan objek dan metode kelas dapat ditambahkan dengan kata kunci statis.

07:00.290 --> 07:00.530
Baiklah.

07:00.530 --> 07:02.450
Sekarang kita sudah menyingkirkan semua itu.

07:02.480 --> 07:07.250
Sekarang kita bisa berharap untuk benar-benar menyelam ke dalam struktur data pertama kita akan mulai dengan

07:07.310 --> 07:09.490
daftar yang terhubung sendiri sehingga selanjutnya

07:09.500 --> 07:11.690
Kami akan mendefinisikan sivin kelas pertama kami.
