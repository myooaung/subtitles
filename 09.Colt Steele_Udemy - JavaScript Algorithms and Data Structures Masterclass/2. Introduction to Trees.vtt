WEBVTT

00:00.240 --> 00:01.260
Hai, selamat datang kembali.

00:01.350 --> 00:07.260
Jadi kami memiliki bagian baru di sini tentang pohon struktur data yang menarik dan semoga menarik.

00:07.560 --> 00:12.900
Jadi pohon selain sebagai tanaman tahunan favorit semua orang juga merupakan struktur data klasik.

00:12.900 --> 00:15.470
Mereka diajarkan di kelas ilmu komputer di seluruh dunia.

00:15.480 --> 00:18.020
Mereka juga sangat umum digunakan di seluruh dunia.

00:18.120 --> 00:23.250
Jadi mereka sedikit lebih maju dari tautan ke daftar yang sedikit lebih rumit tetapi juga mungkin sedikit

00:23.250 --> 00:24.080
lebih menarik.

00:24.210 --> 00:26.530
Jadi cepat mari kita jalankan melalui tujuan kita.

00:26.550 --> 00:28.510
Kami ingin mendefinisikan apa pohon itu.

00:28.620 --> 00:32.850
Bandingkan dan bandingkan pohon dengan daftar panjang dan array dan hal-hal seperti itu.

00:33.030 --> 00:36.720
Jelaskan perbedaan antara berbagai jenis pohon ini.

00:36.720 --> 00:40.110
Kita akan berbicara tentang pohon tua biasa dari pohon biner.

00:40.110 --> 00:46.430
Dan akhirnya pohon pencarian biner dan pohon pencarian biner adalah tujuan utama dari bagian ini.

00:46.650 --> 00:52.020
Tetapi kita akan berbicara tentang tiga kategori ini dan kemudian sebagian besar dari apa yang akan kita lakukan

00:52.020 --> 00:54.530
adalah mengimplementasikan banyak operasi pada pohon pencarian biner.

00:54.540 --> 00:57.690
Jadi kita akan mendefinisikan pohon pencarian biner BSD kita sendiri.

00:57.830 --> 00:59.470
Saya katakan BSD mulai sekarang.

00:59.700 --> 01:04.590
Kelas BSD kita sendiri dan keluar banyak metode seperti yang kita lakukan dengan daftar tertaut tunggal atau daftar tertaut

01:04.620 --> 01:05.080
ganda.

01:05.220 --> 01:08.250
Tetapi pertama-tama kita harus berbicara tentang apa itu pohon.

01:08.250 --> 01:14.220
Jadi pohon adalah struktur data yang terdiri dari node seperti tautan yang terdaftar tetapi mereka berada dalam

01:14.250 --> 01:15.740
hubungan anak induk.

01:15.810 --> 01:19.820
Semoga konsensual pada dasarnya kita berakhir dengan cabang.

01:19.890 --> 01:26.460
Jadi dari satu simpul kita dapat menghubungkannya ke satu simpul lain atau dua atau tiga atau 10 atau 0 simpul tetapi

01:26.460 --> 01:28.480
kita berakhir dengan struktur percabangan ini.

01:28.560 --> 01:30.050
Oleh karena itu pohon nama.

01:30.060 --> 01:31.660
Pikirkan pohon yang sebenarnya.

01:31.710 --> 01:37.650
Kami mengikuti cabang dan terbagi pada beberapa titik dan kemudian cabang itu dapat terpecah dan mereka dapat terus

01:37.650 --> 01:42.960
membelah dan kami berakhir dengan semua cabang kecil yang berbeda ini dari cabang asli utama ini.

01:42.960 --> 01:48.570
Sekarang sering ketika kita melihat diagram atau mereka lebih terlihat seperti ini di mana mereka top down daripada pohon yang

01:48.570 --> 01:50.060
tumbuh dari bawah ke atas.

01:50.130 --> 01:53.380
Tidak masalah hak untuk struktur yang sama persis hanya terbalik.

01:53.490 --> 01:56.230
Tetapi biasanya Anda akan melihat mereka diwakili seperti ini.

01:56.640 --> 01:58.850
Jadi di sini adalah contoh pohon.

01:58.950 --> 02:03.540
Masing-masing lingkaran ini mewakili sebuah simpul seperti yang terjadi pada daftar panjang kami.

02:03.540 --> 02:08.970
Tetapi perhatikan ini sangat berbeda dari daftar panjang di mana setiap node dapat menunjuk ke lebih dari satu atau

02:08.970 --> 02:11.970
dapat memiliki lebih dari satu referensi ke node lain.

02:11.970 --> 02:14.920
Jadi ini simpul teratas kami yang akan membahas terminologi.

02:14.940 --> 02:16.140
Ini disebut root.

02:16.470 --> 02:19.200
Dan itu menunjuk ke 9 sebagai simpul lain.

02:19.200 --> 02:22.270
Ini juga referensi 12 dan 8 dalam sembilan puluh sembilan dan 10.

02:22.560 --> 02:28.300
Dan masing-masing node berpotensi referensi satu atau lebih node lain atau sebenarnya nol.

02:28.350 --> 02:36.330
Dalam hal ini ini adalah jalan buntu dan tidak ada yang datang setelah 12 memiliki 1 2 tiga anak Sembilan-Sembilan memiliki dua anak

02:36.330 --> 02:38.550
10 memiliki dua anak dan seterusnya.

02:38.550 --> 02:42.230
Jadi ini adalah contoh pohon tetapi mereka tidak selalu seperti ini.

02:42.360 --> 02:44.010
Anda mungkin memiliki pohon yang terlihat seperti ini.

02:44.070 --> 02:49.980
Kami memiliki satu node paling atas dan bercabang menjadi dua node dan kemudian masing-masing hanya bercabang menjadi

02:49.980 --> 02:50.930
satu node.

02:51.060 --> 02:54.930
Jadi tidak harus kekacauan rumit yang menjijikkan ini.

02:54.930 --> 02:56.000
Itu bisa sederhana.

02:56.340 --> 03:00.780
Ini juga contoh lain dari pohon dan Anda tahu itu tidak harus berupa angka. Kita bisa seperti

03:00.780 --> 03:06.030
daftar tertaut. Kita dapat menyimpan data di sana, kita dapat menyimpan string atau maksud saya jika Anda ingin Anda dapat menyimpan

03:06.330 --> 03:06.890
apa pun.

03:06.960 --> 03:08.020
Array adalah.

03:08.130 --> 03:09.880
Saya tidak tahu apa yang ingin Anda letakkan di sana.

03:09.900 --> 03:15.570
Sebagian besar waktu itu angka dan string tetapi bisa jadi apa saja sehingga ketika kita berbicara tentang daftar daftar

03:15.570 --> 03:16.260
adalah linier.

03:16.260 --> 03:21.180
Itu satu hal dan kemudian berikutnya kemudian berikutnya kemudian berikutnya kemudian semuanya berikutnya dalam satu

03:21.180 --> 03:21.960
baris berturut-turut.

03:22.230 --> 03:23.560
Pohon tidak linier.

03:23.580 --> 03:24.510
Mereka bisa bercabang.

03:24.570 --> 03:27.670
Kita dapat memiliki lebih dari satu jalur melalui pohon dengan panjang.

03:27.690 --> 03:34.680
Ada satu jalur dalam Alicea ganda yang bisa Anda kerjakan mundur atau maju, tetapi masih ada satu

03:34.860 --> 03:41.340
garis melalui struktur data kami di pohon, ada banyak jalur berbeda yang bisa kita ambil seperti

03:41.340 --> 03:42.310
perjalanan kehidupan.

03:42.470 --> 03:43.830
Baiklah, Anda berakhir di sini.

03:43.970 --> 03:45.720
Ini adalah keputusan yang harus Anda buat.

03:45.720 --> 03:47.520
Anda dapat membuat satu pilihan dan pergi dengan cara ini.

03:47.880 --> 03:51.650
Dan jika Anda membuat pilihan itu, Anda tidak akan pernah tahu apa yang ada di sini.

03:51.960 --> 03:53.330
Dan kemudian Anda membuat pilihan lain.

03:53.360 --> 03:54.740
Ini adalah satu jalan di sini.

03:54.800 --> 03:56.100
Ini adalah jalan lain.

03:56.100 --> 03:58.690
Ini adalah jalur lain dengan daftar panjang.

03:58.740 --> 04:00.740
Hanya ada satu jalur masuk.

04:01.260 --> 04:05.950
Jadi, Anda dapat menganggap daftar yang terhubung secara tunggal sebagai kasus pohon yang sangat istimewa.

04:06.000 --> 04:07.630
Jadi ini bisa jadi pohon.

04:07.920 --> 04:14.850
Ini bukan penggunaan yang bagus untuk sebuah pohon, tetapi jika kita memiliki ini untuk menunjuk ke 12 yang menunjuk ke anaknya 11 Anda

04:14.850 --> 04:16.450
dapat menyatakan bahwa sebagai panjang.

04:16.500 --> 04:22.050
Hanya untuk menambah 12 hingga 11 tetapi Anda mungkin tidak akan melakukannya mungkin hanya akan menggunakan daftar panjang.

04:22.060 --> 04:26.510
Jika seperti ini data Anda, tetapi saya hanya ingin menunjukkan bahwa ini adalah kasus khusus.

04:26.520 --> 04:32.520
Tetapi segera setelah kami menambahkan cabang kedua di sini atau di sini bukan itu bukan yang pertama segera

04:32.550 --> 04:33.750
setelah menjadi non-linear.

04:33.750 --> 04:36.480
Sekarang ketika kita berbicara tentang pohon, ada beberapa aturan.

04:36.630 --> 04:38.260
Jadi ini bukan pohon.

04:38.280 --> 04:43.320
Jadi yang kita miliki di sini adalah simpul yang mereferensikan simpul lain yang tidak di bawahnya.

04:43.440 --> 04:44.830
Itu masuk akal atau tidak anak-anak.

04:45.150 --> 04:48.890
Jadi sebuah simpul hanya bisa menunjuk ke hubungan anak dan orangtua.

04:48.930 --> 04:53.430
Kita tidak bisa memiliki anak yang menunjuk ke orang tua kita tidak bisa memiliki simpul yang menunjuk ke saudara kandung.

04:53.550 --> 04:55.530
Kami tidak dapat memiliki apa yang terjadi di sini.

04:55.560 --> 04:57.130
Ini sebenarnya apa yang dikenal sebagai grafik.

04:57.150 --> 05:03.590
Bicara tentang ini nanti, sebuah pohon setiap node bergerak menjauh dari root node jika itu masuk akal

05:03.600 --> 05:06.980
Semua panah ini harus mengarah ke bawah jika kita mencoba untuk mewakili itu.

05:07.380 --> 05:09.920
Jadi ini juga bukan pohon.

05:10.110 --> 05:16.080
Sepertinya bisa jadi karena semua node menunjuk keluar dari root tetapi tidak ada satu

05:16.080 --> 05:16.590
root.

05:16.590 --> 05:19.150
Kami memiliki dua permulaan dari pohon ini.

05:19.260 --> 05:20.550
Jadi itu bukan pohon.

05:20.550 --> 05:22.290
Kita perlu memiliki satu titik masuk.

05:22.740 --> 05:24.670
Jadi seperti yang saya sebutkan ada beberapa terminologi.

05:25.020 --> 05:27.850
Root adalah simpul teratas di pohon.

05:27.870 --> 05:34.050
Jadi, jika kita kembali ke pohon ini, ini adalah root, seorang anak adalah simpul yang terhubung langsung ke simpul lain.

05:34.140 --> 05:38.840
Ketika beranjak dari root, orang tua adalah konsep sebaliknya dari seorang anak.

05:38.970 --> 05:44.460
Saya pikir keduanya masuk akal saudara adalah node yang memiliki orang tua yang sama.

05:44.460 --> 05:48.090
Daun adalah simpul tanpa anak di pohon ini.

05:48.390 --> 05:50.000
Ini daun.

05:50.040 --> 05:51.920
Tidak memiliki anak.

05:51.920 --> 05:54.210
Ini juga merupakan anak dari simpul ini.

05:54.210 --> 05:56.090
Ini adalah induk dari simpul ini.

05:56.460 --> 05:57.870
Ini akarnya.

05:57.930 --> 06:02.280
Dan terakhir ada terminologi untuk koneksi yang kami sebut edge.

06:02.280 --> 06:06.700
Ini adalah panah yang sebenarnya antara satu simpul dan lainnya atau setidaknya dalam diagram saya. Ini adalah panah.

06:06.840 --> 06:07.190
BAIK.

06:07.200 --> 06:08.180
Jadi kita punya root.

06:08.310 --> 06:09.440
Ini keunggulan.

06:09.450 --> 06:15.320
Ini adalah anak yang relatif terhadap orang tua ini tetapi ini adalah orang tua relatif terhadap anak ini.

06:15.330 --> 06:16.980
Ini juga daun.

06:16.980 --> 06:18.130
Tidak memiliki anak.

06:18.420 --> 06:20.600
Dan saya pikir itu semua terminologi yang tepat.

06:20.640 --> 06:20.850
Ya.

06:20.880 --> 06:21.790
Saya menutupi Bill.

06:22.020 --> 06:22.580
BAIK.

06:22.770 --> 06:27.570
Jadi itu terminologi dasar, itu hanya berguna bagi kita untuk berdiskusi ketika kita menerapkan kode, saya akan mengatakan

06:27.570 --> 06:28.110
sesuatu seperti.

06:28.110 --> 06:31.510
Baiklah kami perlu Anda tahu menambahkan tepi dari orang tua ini ke anak ini.

06:31.530 --> 06:36.320
Atau saya bisa mengatakan, Mari kita periksa apakah sebuah simpul adalah root atau apakah itu daun dan sebagainya.

06:36.390 --> 06:38.150
OK jadi kita akan pergi dari sini.

06:38.220 --> 06:44.130
Selanjutnya saya akan berbicara tentang beberapa aplikasi nyata dari pohon dan kami juga akan memperkenalkan pohon biner dan pohon

06:44.130 --> 06:45.880
pencarian biner di video berikutnya.
