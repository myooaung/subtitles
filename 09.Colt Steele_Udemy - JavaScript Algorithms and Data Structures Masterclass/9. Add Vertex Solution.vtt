WEBVTT

00:00.240 --> 00:00.660
Baiklah.

00:00.660 --> 00:02.190
Jadi mari kita coba.

00:02.330 --> 00:07.920
Saya akan menuju ke sini dan hal pertama yang perlu kita lakukan adalah mendefinisikan kelas grafik kita.

00:07.920 --> 00:14.200
Kami perlu menambahkan konstruktor kami tidak mengambil apa-apa dan kami mengatur kedekatan ini.

00:14.250 --> 00:19.950
Itu bagian tersulit adalah daftar kedekatan ejaan akan menyamai suatu objek.

00:19.980 --> 00:20.460
BAIK.

00:20.640 --> 00:27.960
Kemudian kita menambahkan metode kita yang disebut add Virtex yang menerima kunci titik baru dan kemudian yang

00:27.960 --> 00:35.910
harus kita lakukan adalah melakukan daftar titik adjacency ini dari Vertex apa pun titik itu bukan sama dengan array kosong.

00:35.910 --> 00:39.030
Sekarang saya tidak menentukan bagaimana ini harus menangani duplikat.

00:39.060 --> 00:44.610
Jadi jika sudah ada kunci di sana kita satu hal yang akan kita lakukan dengan kelas grafik ini adalah tetap

00:44.610 --> 00:45.050
sederhana.

00:45.060 --> 00:48.390
Kami tidak akan tahu Anda menambahkan banyak penanganan kesalahan.

00:48.420 --> 00:51.140
Jadi, jika seseorang mencoba menambahkan simpul baru itu sudah ada di sana.

00:51.270 --> 00:56.190
Tidak apa-apa jika kami menimpanya dengan jelas di dunia nyata Anda ingin menambahkan semacam

00:56.190 --> 00:57.340
perlindungan di sana.

00:57.460 --> 01:02.940
Anda tahu mengembalikan atau melempar kesalahan yang mengatakan sudah ada titik di sana atau mengabaikannya karena kode

01:02.940 --> 01:08.100
kita hanya akan menimpanya dan mengaturnya menjadi kosong tetapi sangat mudah untuk memperbaikinya dengan benar.

01:08.140 --> 01:16.000
Kami baru saja memeriksa apakah daftar adjacency ini dari Virtex jika itu ada.

01:16.010 --> 01:23.240
Atau katakanlah jika tidak ada maka mari kita lakukan pada satu baris dan lihat berapa lama garis itu.

01:23.250 --> 01:24.960
Saya pikir tidak apa-apa dengan saya.

01:24.960 --> 01:28.030
Jadi kita akan melakukan ini hanya untuk membuatnya tetap sederhana.

01:28.080 --> 01:33.030
Jika belum ada maka buatlah array kosong dan itu bahkan tidak perlu mengembalikan

01:33.030 --> 01:33.540
sesuatu.

01:33.540 --> 01:34.700
Mari kita jalankan kode kita.

01:34.950 --> 01:36.160
Mari kita buat grafik baru.

01:36.180 --> 01:39.720
Sebut saja g sama dengan grafik baru.

01:40.330 --> 01:40.770
BAIK.

01:40.830 --> 01:47.870
Dan kami tidak menambahkan simpul Tokyo misalnya.

01:48.010 --> 01:52.630
Kami melihat g di daftar adjacency dan sekarang Tokyo telah diatur ke array kosong.

01:52.680 --> 01:56.230
Lakukan satu lagi dengan apa lagi yang harus kita lakukan.

01:56.230 --> 02:00.510
San Francisco Oke.

02:00.990 --> 02:03.310
Dan pada dasarnya hanya itu yang ada untuk itu.

02:03.540 --> 02:06.800
Tapi mari kita pastikan sedikit kesalahan pengecekan bekerja.

02:06.840 --> 02:11.840
Jadi saya akan mengubah secara manual ini bukan bagaimana Anda harus berinteraksi dengannya tetapi kami tidak memiliki metode untuk

02:11.850 --> 02:12.750
melakukan apa pun.

02:12.810 --> 02:14.440
Jadi saya hanya akan mengubahnya.

02:14.550 --> 02:21.240
Tokyo dari array kosong untuk hanya memiliki sesuatu di sana jadi jika kita melihat kedekatan kita sekarang Tokyo

02:21.240 --> 02:22.690
bukanlah array kosong.

02:22.710 --> 02:26.370
Berpura-pura bahwa itu adalah hubungan aktual yang merupakan data yang kita pedulikan.

02:26.370 --> 02:33.140
Jadi jika saya sekarang tidak menambahkan vertex Tokyo lagi, kami tidak ingin menimpanya.

02:33.180 --> 02:37.220
Dan jika kita melihat kita masih memiliki Tokyo yang diatur ke data awal.

02:37.400 --> 02:37.690
BAIK.

02:37.710 --> 02:38.730
Jadi ini baik-baik saja.

02:39.090 --> 02:41.900
Itu tentang penanganan kesalahan sebanyak yang kita butuhkan.

02:41.940 --> 02:44.790
Terlihat bagus di Vertex sangat sederhana.

02:44.970 --> 02:46.320
Anda bahkan tidak perlu melakukan bagian pertama ini.

02:46.320 --> 02:50.490
Cukup atur daftar adjacency dari kunci itu menjadi array kosong.

02:50.490 --> 02:54.000
Selanjutnya kita akan menambahkan hubungan antar simpul akan menambah tepi.
