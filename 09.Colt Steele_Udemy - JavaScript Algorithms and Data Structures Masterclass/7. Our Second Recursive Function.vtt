WEBVTT

00:00.110 --> 00:00.560
BAIK.

00:00.660 --> 00:04.230
Jadi semoga Anda selamat dari contoh fungsi rekursif pertama itu.

00:04.230 --> 00:06.090
Sekarang kita beralih ke contoh kedua.

00:06.090 --> 00:07.270
Jadi seperti ini tampilannya.

00:07.380 --> 00:15.430
Ini disebut Beberapa rentang dan pertama-tama coba identifikasi dua potong Anda dapat mengidentifikasi kasus dasar.

00:15.470 --> 00:17.120
Jadi petunjuk utama untuk itu.

00:17.160 --> 00:22.310
Hanya ada dua baris di sini, tetapi kasing hampir selalu melibatkan kondisional untuk memeriksa

00:22.460 --> 00:28.250
sesuatu dan kemudian mengembalikan sesuatu yang akhirnya adalah bagian bawah sumur yang Anda pukul air yang

00:28.260 --> 00:29.210
mengenai batu.

00:29.360 --> 00:31.290
Saya tidak tahu itu cara yang buruk untuk menggambarkannya.

00:31.310 --> 00:32.590
Ada titik akhir.

00:32.810 --> 00:38.540
Lalu ada input berbeda yang masih tidak senang dengan istilah itu tetapi ada panggilan rekursif yang kami

00:38.600 --> 00:41.390
panggil dengan bagian yang lebih kecil setiap kali.

00:41.390 --> 00:47.240
Jadi dalam video terakhir kami mengurangi satu dari pengetahuan dan memanggil mundur lagi NUMP

00:47.330 --> 00:52.880
terus menyusut menuju akhirnya kasus dasar di sini kita melakukan hal yang sama

00:52.940 --> 00:55.930
Jadi base case untuk memulai adalah baris ini.

00:56.090 --> 01:00.560
Jika angka sama dengan 1, kembalikan 1 dan itu masuk akal.

01:00.560 --> 01:05.510
Maksud saya pertama-tama jika kita mencoba melakukan beberapa kisaran 1 jika kita akan menambahkan semua angka antara 1

01:05.510 --> 01:07.580
dan 1 kita hanya harus mengembalikan 1.

01:07.940 --> 01:09.230
Jadi itu kasus dasar.

01:09.230 --> 01:17.560
Dan kemudian di sini adalah pendapatan pengembalian panggilan rekursif kami ditambah beberapa nomor rentang minus satu.

01:17.600 --> 01:19.070
Jadi ini menjadi sedikit gila.

01:19.070 --> 01:21.880
Saya tahu karena kami memiliki lebih dari satu pengembalian di sini.

01:21.980 --> 01:24.440
Kita akan melangkah melalui bagian kecil ini satu per satu.

01:24.680 --> 01:28.350
Tapi pikirkan seperti ini jika saya memasukkan tiga kita akan mulai.

01:28.370 --> 01:36.560
Ini tidak benar sehingga kami melewatkan itu dan ini akan mengembalikan tiga ditambah beberapa rentang dua dan beberapa rentang dua akan

01:36.560 --> 01:43.880
kembali ke ditambah beberapa rentang satu dan beberapa rentang jika satu mengembalikan satu dan kemudian semua hal ditambahkan

01:43.880 --> 01:48.370
kembali menunggu pada tumpukan panggilan dan kami berakhir dengan enam.

01:48.710 --> 01:51.810
Jadi saya memilikinya di sini, mari kita mengujinya dengan cepat.

01:51.860 --> 01:57.010
Saya melakukan beberapa kisaran, mari kita lakukan empat.

01:57.620 --> 02:01.360
Itu akan memberi kami 10 seperti yang Anda lihat di sana.

02:01.580 --> 02:02.120
BAIK.

02:02.300 --> 02:04.630
Dan tiga harus memberi kita enam dan itu benar.

02:04.820 --> 02:09.030
Jadi mari kita benar-benar berjalan melalui apa yang terjadi jika Anda merasa nyaman dengan ini.

02:09.050 --> 02:14.930
Terus dan lewati saja ini karena saya akan melakukan langkah-langkah terperinci hanya karena itu benar-benar membantu saya berpikir dan

02:14.930 --> 02:18.650
pengalaman saya membantu jika ada yang berjuang untuk memahami apa yang terjadi.

02:18.830 --> 02:19.700
Ini agak berbeda.

02:19.700 --> 02:25.610
Kami tidak hanya mencetak kami kembali dan kembali atau kembali dan kembali lagi dan lagi.

02:25.610 --> 02:26.870
Jadi mari kita berjalan melalui ini.

02:26.870 --> 02:28.950
Saya sebut kisaran tiga.

02:29.060 --> 02:30.480
Jadi itu hal pertama yang saya lakukan.

02:30.620 --> 02:31.720
Ini tidak benar.

02:31.760 --> 02:32.900
Jadi itu tidak masalah sekarang.

02:32.920 --> 02:33.860
Bilangan 3.

02:33.990 --> 02:36.140
Tapi kemudian itu akan kembali.

02:36.140 --> 02:37.090
Jadi kalau kita tulis saja.

02:37.190 --> 02:38.300
Saya tidak tahu mengapa saya melakukan topi.

02:38.300 --> 02:38.990
Itu dia.

02:39.270 --> 02:45.580
Kembalikan mati rasa yang tiga ditambah beberapa rentang dua.

02:45.620 --> 02:46.540
Kanan.

02:47.180 --> 02:47.520
BAIK.

02:47.570 --> 02:49.370
Jadi beberapa kisaran tiga.

02:49.490 --> 02:50.580
Apakah ini di sini?

02:50.700 --> 02:56.220
Dan menunggu beberapa rentang dua kisaran dua jika saya tab di sini.

02:56.240 --> 02:58.820
Yang akan dipanggil adalah nomor satu.

02:58.880 --> 03:05.310
Tidak itu tidak jadi kami lewati sehingga mengembalikan mati rasa jadi saya akan mencoba dan melakukan ini di tengah sini.

03:05.340 --> 03:13.240
Kembali ke plus beberapa kisaran minus 1 yang merupakan 1 seperti itu.

03:13.760 --> 03:14.390
BAIK.

03:14.870 --> 03:16.310
Jadi kami memiliki beberapa kisaran tiga.

03:16.310 --> 03:18.430
Hal pertama yang kami sebut menunggu.

03:18.470 --> 03:22.570
Ini pada dasarnya mencoba menambahkan tiga ke beberapa nilai tetapi belum tahu apa.

03:22.610 --> 03:28.550
Beberapa rentang 2 harus dihitung tetapi menunggu karena beberapa rentang dua akan kembali ke

03:28.760 --> 03:31.500
plus berapa pun kisaran satu.

03:31.520 --> 03:35.660
Dan akhirnya beberapa rentang satu ketika Gnome sama dengan 1.

03:35.660 --> 03:36.660
Ini benar.

03:37.070 --> 03:39.530
Jadi kita kembali 1.

03:39.950 --> 03:41.810
Itu kasus dasar kami.

03:41.980 --> 03:46.570
Ini menghentikan kita dari merasa bebas jatuh selamanya ke keturunan cepat.

03:46.580 --> 03:48.590
Kami mengembalikan yang akhirnya.

03:48.590 --> 03:50.810
Tidak ada panggilan rekursif lebih lanjut.

03:51.080 --> 03:53.750
Jadi ketika kita mengembalikan apa yang terjadi.

03:54.020 --> 03:58.400
Nah, ini sedang menunggu untuk melihat apa kisaran itu.

03:58.700 --> 04:02.850
Sehingga disederhanakan yang berubah menjadi satu.

04:02.880 --> 04:04.510
Benar jadi ini mengembalikan 1.

04:05.030 --> 04:06.790
Jadi ini berubah menjadi satu.

04:07.370 --> 04:11.470
Jadi mengembalikan beberapa rentang dua akan kembali ke plus satu.

04:11.480 --> 04:14.100
Ini sekarang memiliki nilai tiga.

04:14.510 --> 04:21.230
Jadi beberapa rentang dua mengembalikan tiga yang memimpin dan meletakkannya kembali di sini yang beberapa kisaran

04:21.230 --> 04:22.540
3 sedang menunggu.

04:22.700 --> 04:28.250
Beberapa kisaran tiga pada dasarnya tahu itu akan menjadi tiga ditambah apa pun yang kembali dari beberapa rentang

04:28.250 --> 04:28.740
dua.

04:28.880 --> 04:31.510
Yah akhirnya ada nilai yang kembali itu tiga.

04:31.610 --> 04:36.900
Jadi mengembalikan tiga tambah tiga yang akhirnya mengembalikan enam.

04:37.490 --> 04:38.910
Dan itu jawaban kami.

04:39.440 --> 04:41.470
Jadi agak rumit untuk menarik keluar.

04:41.480 --> 04:42.900
Saya memilih sejumlah kecil seperti tiga.

04:42.920 --> 04:50.090
Tetapi ketika kita semakin tinggi dan lebih tinggi ada banyak lagi pemanggilan fungsi pada stack yang harus kita khawatirkan.

04:50.510 --> 04:53.750
Jadi kita dapat melihat ini, mari kita lakukan hal yang sama.

04:53.750 --> 04:57.850
Mari kita lakukan untuk kali ini dan saya akan meletakkan breakpoint saya di sini.

04:57.980 --> 05:00.080
Jika Anda memahami ini sudah melewati itu.

05:00.350 --> 05:02.500
Tapi mari kita lakukan sekarang.

05:02.600 --> 05:03.600
Jadi kami melangkah.

05:03.680 --> 05:07.030
Hal pertama yang terjadi adalah saya harus menjalankan perintah enter

05:07.250 --> 05:08.020
BAIK.

05:08.450 --> 05:13.770
Jadi pertama dari beberapa rentang empat disebut yang ditambahkan ke tumpukan panggilan.

05:13.850 --> 05:16.190
Ini sedang menunggu sekarang untuk belum menunggu.

05:16.250 --> 05:17.870
Sedang dieksekusi sekarang.

05:17.870 --> 05:19.060
Ini tidak benar.

05:19.190 --> 05:24.860
Pindah ke baris berikutnya dan itu akan mengembalikan empat ditambah beberapa kisaran tiga.

05:25.130 --> 05:30.230
Jadi itu akan menunggu karena harus mendapat jawaban dari beberapa kisaran tiga.

05:30.440 --> 05:35.630
Jadi Anda dapat melihat dalam kisaran ini beberapa di sini adalah tiga di sini.

05:35.630 --> 05:36.620
Nomor empat.

05:36.710 --> 05:42.280
Jadi itu akan melakukan empat ditambah apa pun jawaban ini kembali ini

05:42.320 --> 05:48.770
tidak dapat mengembalikan apa pun karena nilai pengembaliannya tiga ditambah beberapa rentang untuk tidak ada.

05:48.800 --> 05:49.830
Dan yang ini juga.

05:49.910 --> 05:54.740
Jadi jika Anda menonton di sini ketika saya pergi ke langkah berikutnya kita mendapatkan beberapa rentang ditambahkan

05:55.120 --> 05:59.080
ke tumpukan panggilan dan ini dan satu variabel lokal mati rasa adalah dua.

05:59.570 --> 06:01.760
Jadi bagian pertama ini tidak benar.

06:01.760 --> 06:02.490
Berpindah.

06:02.490 --> 06:07.710
Ini akan kembali ke plus beberapa kisaran 1.

06:07.730 --> 06:10.970
Jadi akhirnya panggilan atau panggilan kami ditambahkan di sini.

06:11.120 --> 06:17.230
Jadi sekarang kita memiliki fungsi lain yang ditambahkan untuk beberapa rentang kali ini meskipun knowm adalah satu.

06:17.330 --> 06:21.930
Dalam konteks ini maka angka satu berarti ini yang berarti ini benar.

06:21.950 --> 06:23.960
Jadi kami akhirnya mengembalikan satu.

06:24.530 --> 06:26.540
Jadi ingat ini sedang menunggu di sini.

06:26.610 --> 06:30.610
Ini menunggu nilai kembali ini menunggu nilai balik itu.

06:30.650 --> 06:33.840
Yang ini menunggu nilai pengembalian yang ini.

06:33.860 --> 06:44.190
Ini akan mengembalikan 1 jadi ketika itu terjadi di sini kita pergi mengembalikan nilai satu dan kemudian menonton saat

06:44.190 --> 06:45.730
dia muncul.

06:45.780 --> 06:46.670
Itu dia.

06:46.830 --> 06:52.130
Fungsi ini sekarang yang sedang menunggu itu menambah nilai tambah beberapa rentang satu.

06:52.260 --> 06:54.500
Nah yang punya nilai itu dua tambah satu.

06:54.510 --> 07:01.950
Jadi mengembalikan tiga dan yang ini ketika mengembalikan tiga mengisi kosong untuk panggilan kedua ini yang

07:01.950 --> 07:05.280
menunggu untuk melihat berapa kisaran tiga itu.

07:05.280 --> 07:09.710
Jadi kemudian kita mendapatkan bahwa enter mengembalikan 6.

07:09.900 --> 07:16.170
Dan akhirnya kisaran jumlah ini yang menunggu sepanjang waktu dengan sabar untuk menambahkan empat ditambah jumlah

07:16.170 --> 07:23.310
jumlah tiga yang kembali pada 6 jadi kita mendapatkan empat ditambah enam yang 10 dan 10 kembali dan kita

07:23.310 --> 07:23.970
selesai.

07:24.390 --> 07:28.990
Jadi saya tahu ada banyak hal di sana tapi saya harap penjelasan itu sedikit membantu.

07:29.070 --> 07:34.530
Itu selalu menyenangkan untuk berjalan melalui geladak tetapi yang ini berbeda dari video terakhir di

07:34.530 --> 07:40.980
mana kami baru saja mencetak hal-hal dan dalam hal ini apa pun yang dikembalikan dari kasus dasar hal

07:41.010 --> 07:44.730
itu ditambahkan ke apa yang menunggu panggilan fungsi sebelumnya.

07:44.820 --> 07:50.200
Dan kemudian yang ditambahkan dan memiliki kaskade terbalik ini kembali baik-baik saja.

07:50.350 --> 07:52.390
Semoga itu masuk akal.

07:52.390 --> 07:53.840
Kami memiliki beberapa contoh lagi.
