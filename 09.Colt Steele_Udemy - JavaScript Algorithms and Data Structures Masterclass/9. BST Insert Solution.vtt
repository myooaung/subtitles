WEBVTT

00:00.180 --> 00:01.140
Baiklah, selamat datang kembali.

00:01.140 --> 00:04.040
Mari kita lanjutkan dan menulis kode untuk dimasukkan.

00:04.470 --> 00:09.750
Jadi saya punya cuplikan di sini dengan kelas yang sama saya menunjukkan dua video untuk Anda pergi.

00:09.780 --> 00:16.050
Kami memiliki nilai kelas simpul kami kiri dan kanan dan kemudian kami memiliki kelas pohon pencarian biner kami yang

00:16.050 --> 00:18.430
hanya memiliki root kosong untuk memulai.

00:18.480 --> 00:26.280
Sekarang saya merekam video ini satu kali sebelumnya dan saya menggunakan semacam struktur pohon biner dasar karena sangat sulit untuk

00:26.280 --> 00:30.300
memvisualisasikan bagaimana semua ini terlihat seperti daftar tautan yang mudah.

00:30.300 --> 00:34.470
Anda tahu Anda memasukkan sesuatu yang harus pergi setelah Anda berakhir dengan daftar linier ini dengan pohon.

00:34.470 --> 00:36.760
Mungkin sulit untuk melacak ke mana harus pergi.

00:37.050 --> 00:42.540
Jadi saya merekam seluruh video dan kemudian saya menyadari bahwa saya telah mengacaukan seluruh pohon ini.

00:42.540 --> 00:43.950
Itu sebenarnya tidak masuk akal.

00:43.950 --> 00:47.310
Nilai-nilai yang saya gunakan itu bukan pohon biner yang valid.

00:47.670 --> 00:49.610
Jadi kita punya 10 di sisi kiri.

00:49.620 --> 00:50.930
Setiap nilai harus kurang dari 10.

00:50.930 --> 00:54.600
Jadi itu benar di sisi kanan setiap nilai harus lebih dari dan kemudian 10.

00:54.840 --> 00:59.280
Tetapi jika kita melihat nilai lima ke kiri kurang dari kanan.

00:59.460 --> 01:01.080
Empat tidak lebih besar dari.

01:01.290 --> 01:04.620
Jadi saya harus memiliki sesuatu seperti 7 di sana.

01:04.620 --> 01:05.490
Hal yang sama di sini.

01:05.490 --> 01:06.720
Saya tidak tahu apa yang saya pikirkan.

01:06.790 --> 01:09.690
13 sebelah kiri dari 14 itu tidak berfungsi.

01:09.690 --> 01:13.200
Jadi mari kita pergi dengan 11 misalnya.

01:13.200 --> 01:14.880
Sekarang kami memiliki pohon yang valid.

01:14.940 --> 01:15.310
BAIK.

01:15.390 --> 01:22.470
Jadi mari kita mulai dengan mendefinisikan insert yang mengambil nilai dan kita hanya akan membuat simpul baru itu untuk memulai.

01:22.470 --> 01:27.190
Jadi simpul baru kami sama dengan simpul baru dan meneruskan nilainya.

01:27.210 --> 01:30.280
Dan kemudian mari kita pergi dengan kemenangan mudah yaitu memeriksa.

01:30.360 --> 01:37.420
Apakah sudah ada rute atau tidak ada rute seperti jika kita coba menjawab 10.

01:37.440 --> 01:39.180
Itu menjadi akar.

01:39.180 --> 01:47.540
Tidak ada apa-apa di sana sehingga kita hanya akan memeriksa apakah rute ini tidak ada maka kita akan menetapkan root untuk

01:47.550 --> 01:52.790
menyamakan node baru dan kemudian mengembalikan ini hanya supaya kita keluar dari ini.

01:52.950 --> 01:55.400
Tidak ada kode lain yang akan berjalan karena kami kembali.

01:55.470 --> 01:56.310
Saya menjalankan kode.

01:56.310 --> 01:58.130
Kami melihat pohon kami.

01:58.620 --> 01:59.630
Kami punya 10.

02:00.030 --> 02:08.610
Sekarang jika saya mencoba memasukkan sesuatu setelah tiga ini tidak terjadi apa-apa karena secara teknis kami membuat simpul baru tetapi kemudian

02:08.610 --> 02:14.670
kami tidak pernah melampirkan atau memasukkannya dan tidak ada yang dikembalikan karena kode ini tidak

02:14.670 --> 02:15.310
berjalan.

02:15.740 --> 02:16.190
BAIK.

02:16.290 --> 02:22.050
Jadi sekarang sebagian besar logika terjadi di bagian lain untuk mengingat prosesnya.

02:22.050 --> 02:26.890
Jika pohon kami hanya 10 sekarang ini tidak ada.

02:26.940 --> 02:28.480
Apa yang kita lakukan, kita periksa.

02:28.480 --> 02:29.230
Apakah ada rute?

02:29.310 --> 02:33.690
Nah jika tidak ada rute maka kita melakukan ini kalau tidak apa yang kita miliki di sini.

02:33.710 --> 02:40.380
Kondisi sebaliknya yang perlu kita periksa adalah nilainya kurang dari atau lebih besar dari nilai ini di sini.

02:40.890 --> 02:43.140
Dan jika itu kurang dari apa yang akan kita lakukan.

02:43.140 --> 02:43.770
Kami akan memeriksa.

02:43.800 --> 02:45.010
Apakah ada kiri?

02:45.450 --> 02:48.280
Dan jika tidak ada maka kita menempatkan nilainya di sana.

02:48.460 --> 02:51.260
Kalau tidak, hal yang sama di sisi kanan.

02:51.270 --> 02:53.320
Nah, itu masalahnya jika hanya ada satu simpul di sana.

02:53.370 --> 02:57.070
Tetapi jika pohon kita terlihat seperti ini, katakanlah kita memasukkan nomor satu.

02:57.240 --> 02:58.050
Kami akan memeriksa.

02:58.080 --> 02:58.920
Apakah ada root.

02:58.980 --> 02:59.640
Ya ada.

02:59.640 --> 03:02.780
Baiklah satu kurang dari 10 atau lebih besar dari itu kurang dari.

03:02.790 --> 03:03.680
Jadi kita periksa.

03:03.840 --> 03:05.240
Kami tahu itu ada di sebelah kiri.

03:05.280 --> 03:05.850
Kami memeriksa.

03:05.850 --> 03:09.470
Apakah ada simpul di sebelah kiri jika terlihat seperti ini.

03:09.480 --> 03:11.220
Kita harus meletakkannya di sini.

03:11.220 --> 03:13.950
Tetapi jika terlihat seperti ini sementara ada catatan disini.

03:13.950 --> 03:16.200
Jadi kita bandingkan lagi satu kurang dari lima.

03:16.230 --> 03:17.070
Itu benar.

03:17.070 --> 03:20.600
Jadi kita akan memasukkannya ke kiri di suatu tempat kita masukkan di sini.

03:20.680 --> 03:22.250
Tidak sudah ada nilai di sana.

03:22.290 --> 03:24.250
Jadi kita bergerak ke bawah dan mengulanginya.

03:24.360 --> 03:28.270
Jadi prosesnya melibatkan perulangan seperti dengan daftar panjang.

03:28.350 --> 03:36.330
Dan saya akan membuat variabel yang disebut Lancar dan saat ini akan mulai sebagai root seperti pada contoh daftar tertaut

03:36.330 --> 03:42.180
kami saat ini dimulai karena ini memulai awal dari daftar tertaut dan kami akan memperbarui

03:42.180 --> 03:44.410
saat ini saat kami pergi.

03:44.460 --> 03:51.000
Dan saya hanya akan menambahkan sementara benar kita akan terus berulang-ulang begitu berbeda dengan tautan di mana kami memiliki tautan yang

03:51.240 --> 03:56.060
kami bisa, Anda dapat menambahkan panjang tetapi itu tidak akan membantu Anda di sini.

03:56.160 --> 03:58.650
Maksud saya panjang bahkan bukan ukuran yang tepat.

03:58.650 --> 04:01.020
Anda bisa menambahkan seperti sejumlah node atau sesuatu.

04:01.020 --> 04:02.850
Tetapi itu masih tidak benar-benar membantu Anda.

04:02.880 --> 04:09.120
Jadi saya hanya akan mengulang sementara benar dan saya akan keluar dari lingkaran ini menggunakan pernyataan kembali.

04:09.240 --> 04:11.930
Jika kita selesai jika kita memasukkan node.

04:11.970 --> 04:17.250
Jadi sementara benar pada dasarnya proses kami adalah Anda tahu memeriksa apakah nilainya kurang dari atau lebih besar

04:17.250 --> 04:17.710
dari

04:17.940 --> 04:19.070
Jadi mari kita lakukan itu sekarang.

04:19.320 --> 04:28.480
Yah hanya untuk jika nilainya kurang dari dan kemudian nilai saat ini jika itu yang berarti akan pergi ke

04:28.480 --> 04:31.540
kiri di suatu tempat di sini.

04:31.810 --> 04:34.970
Tetapi pertama-tama kita perlu memeriksa apakah ada data saat ini yang tersisa.

04:34.990 --> 04:42.100
Jadi syarat lain jika titik kiri saat ini sama dengan mengetahui jika tidak ada apa-apa di sebelah kiri dan kami akhirnya menemukan

04:42.100 --> 04:46.450
tempat kami seperti jika kami jika kami berakhir di sini, ini adalah arus.

04:46.840 --> 04:52.630
Jika tidak ada yang tersisa dalam nilai kurang dari nilai ini maka kita masukkan ke kiri.

04:53.140 --> 04:53.510
BAIK.

04:53.530 --> 04:59.540
Jadi kita hanya akan mengatakan kiri saat ini sama dengan simpul baru dan kemudian kembali kita selesai.

04:59.590 --> 05:01.210
Kami tidak ingin loop ini terus berjalan.

05:01.210 --> 05:05.490
Sekarang kode ini hanya akan berfungsi jika kita memasukkan 10 dan 5.

05:05.500 --> 05:11.740
Ini tidak akan berfungsi jika kita memasukkan sesuatu setelah itu karena jika kita memasukkan 10 itu saja yang kita miliki

05:11.740 --> 05:15.200
maka kita periksa apakah nilainya kurang dari nilai saat ini.

05:15.200 --> 05:17.820
Jika ini saat ini, ya 5 kurang dari 10.

05:17.830 --> 05:18.740
Tidak ada yang tersisa.

05:18.760 --> 05:20.820
Jadi kami menetapkan lima di sini.

05:21.130 --> 05:27.190
Dan jika kita baru saja memverifikasi bahwa jika saya menjalankan kode ini dan saya melihat pohon maka kita melihat root dan kemudian kita

05:27.190 --> 05:28.290
melihat ke kiri.

05:28.300 --> 05:29.600
Kami punya lima.

05:29.680 --> 05:30.150
BAIK.

05:30.280 --> 05:36.880
Tetapi tidak akan berhasil jika kami mencoba memasukkan dua atau 13 atau nilai lainnya ke kanan atau ke kiri.

05:36.880 --> 05:43.360
Jadi walaupun perlu kita lakukan jika kurang dari 10 atau apapun rutenya tetapi sudah ada nilainya di

05:43.360 --> 05:44.010
sini.

05:44.500 --> 05:49.060
Maka kita perlu memindahkan arus ke sekarang menjadi 5 dan kemudian kita melakukan hal yang sama.

05:49.180 --> 05:54.120
Dan jika sudah ada nilai di sebelah kiri atau ke kanan maka kami memperbarui dua saat ini mana saja

05:54.130 --> 05:54.730
yang seharusnya.

05:54.730 --> 05:56.050
Lalu kita periksa lagi.

05:56.050 --> 05:58.590
Jadi benar-benar di sini semua yang kita butuhkan.

05:58.590 --> 05:59.170
Bagus dan pendek.

05:59.170 --> 06:02.710
Hanya saja sama dengan kiri saat ini.

06:02.890 --> 06:08.560
Jadi kami pindah ke kiri saat ini karena nilainya kurang dari nilai saat ini.

06:09.010 --> 06:13.490
Jadi jika seperti ini bentuk pohon kami dan kami mencoba memasukkan angka tiga, kami akan mulai di sini.

06:13.600 --> 06:18.620
Tiga kurang dari 10 jadi kita perlu kita tahu kita perlu melihat ke kiri tetapi sudah ada yang kiri.

06:18.640 --> 06:20.330
Jadi bagian ini tidak berjalan.

06:20.620 --> 06:21.860
Jadi kami memperbarui saat ini.

06:21.880 --> 06:23.670
Sekarang kita 5 dan melakukan hal yang sama.

06:23.710 --> 06:27.380
Kali ini tidak ada yang tersisa jadi kami masukkan di sini.

06:28.020 --> 06:28.550
BAIK.

06:28.750 --> 06:36.390
Jadi ini hanya menangani sisi kiri dan kami dapat memverifikasi bahwa itu berfungsi dengan memasukkan seperti nomor dua.

06:36.400 --> 06:45.190
Sebagai contoh jika kita menjalankan ini, pohon kita harus memiliki akar 10 kiri 10 harus lima dan kiri itu

06:45.190 --> 06:46.150
harus dua.

06:46.170 --> 06:48.660
Kami tidak punya hak untuk mengaturnya.

06:48.820 --> 06:53.060
Jadi pada dasarnya kita hanya perlu melakukan hal yang sama untuk sisi kanan.

06:53.110 --> 06:58.620
Jadi saya akan melakukan nilai LCF lebih besar dari nilai saat ini.

06:58.660 --> 07:04.240
Jika itu masalahnya kita akan memeriksa apakah hak saat ini tidak.

07:04.870 --> 07:12.050
Jika demikian maka kami menemukan titik kami saat ini sama dengan simpul baru mengembalikan ini sebaliknya.

07:12.130 --> 07:13.420
Tetap mencari.

07:13.660 --> 07:23.440
Perbarui saat ini sehingga kami menelusuri arus lebih lanjut sama dengan tarif saat ini dan kami harusnya baik-baik saja di

07:23.440 --> 07:24.140
sini.

07:24.250 --> 07:26.230
Lihat apakah saya memiliki kesalahan ketik atau masalah apa pun.

07:26.230 --> 07:28.330
Mari sekarang kita juga memasukkan beberapa nilai lainnya.

07:28.340 --> 07:46.430
Jadi 10 5 2 tetapi cobalah untuk memasukkan 13 ke 11 dan 16 dan juga berkata OK mari kita jalankan ini.

07:46.660 --> 07:48.440
Ini dia, kita punya pohon.

07:49.010 --> 07:52.570
Dan apa yang harus kita jelajahi dieksplorasi terlebih dahulu mari kita ke sisi kanan kali ini.

07:52.580 --> 07:57.780
Jadi, inilah rute 10 kami dan di sebelah kanan kami harus memiliki 13 yang kami lakukan.

07:59.450 --> 08:01.230
Di sebelah kiri kita memiliki 11.

08:01.340 --> 08:04.160
Dan di sebelah kanan ada 16 yang semuanya terlihat bagus.

08:04.160 --> 08:09.950
Mari kita periksa kiri di sebelah kiri kita harus memiliki lima di

08:09.950 --> 08:21.830
sebelah kiri bahwa kita harus ke kiri bahwa kita memiliki 7 mari kita verifikasi masih berfungsi, katakanlah kita memasukkan apa tentang 3 ke mana harus pergi.

08:21.990 --> 08:25.320
Baik pertahankan sisi kiri dan kita temukan dua.

08:25.410 --> 08:27.530
Itu di sebelah kanan dua.

08:27.740 --> 08:33.620
Jadi jika kita melihat pohon dan kita melihat rute maka kita melihat ke kiri yaitu lima.

08:33.670 --> 08:35.010
Kiri memiliki dua.

08:35.110 --> 08:37.410
Dan kemudian hak itu sekarang tiga.

08:37.420 --> 08:42.220
Jadi pada dasarnya kami menyisipkannya diagram ini semakin jelek tapi kami memasukkannya di sana.

08:43.600 --> 08:44.020
BAIK.

08:44.060 --> 08:45.370
Jadi sepertinya itu berfungsi.

08:45.650 --> 08:50.470
Mari kita lihat bagaimana cara menangani atau menangani duplikat.

08:50.480 --> 08:57.390
Jadi jika saya mencoba memasukkan 10 misalnya apa yang terjadi.

08:57.780 --> 09:00.140
Yah saya harus me-restart browser saya.

09:00.140 --> 09:05.460
Atau setidaknya jendela ini karena kami menekan loop tak terbatas dan saya mencoba mengilustrasikannya tetapi saya tidak benar-benar

09:05.460 --> 09:09.810
memikirkannya sampai tidak ada yang menunjukkan kepada Anda looping tanpa batas semua yang

09:09.810 --> 09:14.260
ingin Anda lihat atau lihat hanya komputer saya yang digantung dan saya tidak bisa mengetik.

09:14.280 --> 09:18.990
Jadi kami mendapat loop tak terbatas karena jika saya mencoba memasukkan 10 atau angka-angka ini

09:18.990 --> 09:25.680
yang sudah ada di sana kami memiliki ini sementara benar tetapi kami hanya memeriksa apakah nilainya kurang dari atau lebih besar dari.

09:25.680 --> 09:30.900
Sekarang bagaimana cara kita menangani duplikat sebenarnya tergantung pada kasus khusus dari apa yang kita lakukan

09:30.900 --> 09:31.880
secara spesifik.

09:31.920 --> 09:34.000
Beberapa orang hanya akan mengabaikannya.

09:34.020 --> 09:36.210
Beberapa orang beberapa pohon mengabaikannya begitu saja.

09:36.210 --> 09:37.290
Itu yang akan kita lakukan.

09:37.530 --> 09:42.150
Kita bisa menambahkan tanda centang di sini untuk melihat apakah nilainya sama dengan nilai saat ini.

09:42.240 --> 09:46.750
Maka kita hanya akan mengembalikan false atau tidak terdefinisi atau sesuatu.

09:46.770 --> 09:52.740
Opsi lain yang mungkin Anda lihat adalah jika Anda perlu tahu seperti apakah kami memasukkan hal-hal tertentu berulang

09:52.740 --> 09:54.490
kali Anda ingin melacaknya.

09:54.570 --> 09:59.280
Anda bisa menambahkan frekuensi atau hitungan ke simpul dan Anda bisa menambahkannya.

09:59.370 --> 10:02.040
Jadi di sebelah setiap node kita dapat memiliki akun seperti ini.

10:02.040 --> 10:06.550
Dan Anda tahu, mungkin kita memiliki empat enam remaja di sana untuk beberapa alasan dan dua puluhan.

10:06.750 --> 10:12.030
Jadi jika Anda perlu melakukannya, tetapi saya hanya akan menambahkan jika

10:12.420 --> 10:19.960
pada awalnya jika nilainya sama dengan nilai saat ini maka mari kita kembalikan undefined atau sesuatu yang undefined.

10:20.320 --> 10:22.290
OK, mari kita coba jalankan ini lagi.

10:22.320 --> 10:24.080
Kami melihat pohon kami.

10:24.270 --> 10:25.230
Semuanya terlihat bagus.

10:25.240 --> 10:26.680
Sepuluh lima dua.

10:26.700 --> 10:27.140
BAIK.

10:27.660 --> 10:31.260
Mari coba lagi memasukkan 10.

10:31.860 --> 10:36.370
Kami tidak terdefinisi dan jika kami melihat pohon itu masih berfungsi.

10:36.540 --> 10:39.150
Bukan berarti semoga tidak ada yang berubah.

10:39.150 --> 10:45.720
Semuanya masih berfungsi jika kita mencoba memasukkan sesuatu selain 10 yang sudah ada di sana seperti 7.

10:45.750 --> 10:50.130
Dibutuhkan sedikit karena memang harus melintasi pohon sampai menemukan tempat yang tepat dan menyadari

10:50.130 --> 10:52.030
oh ini sudah ada di sana.

10:52.170 --> 10:52.420
BAIK.

10:52.440 --> 10:53.050
Dilakukan.

10:53.280 --> 10:57.260
Terakhir, beberapa orang mengangkat tangan tentang ini.

10:57.300 --> 11:00.090
Anda dapat menyederhanakan beberapa logika ini.

11:00.090 --> 11:03.130
Ada beberapa tempat yang tidak perlu.

11:03.360 --> 11:11.730
Misalnya di sini jika nilainya kurang dari nilai saat ini, kami memeriksa apakah saat ini ada kiri dan kami kembali.

11:11.760 --> 11:18.840
Dan sebelum saya punya yang lain di sini tetapi karena hanya ada dua pilihan dan empat kembali di sini kita tidak

11:18.840 --> 11:23.500
perlu memiliki yang lain itu hanya hal gaya jadi saya punya kedua solusi.

11:23.520 --> 11:27.600
Yang ini sedikit lebih lama tetapi lebih eksplisit tentang hal-hal.

11:28.330 --> 11:31.370
Jadi ada hal lain yang sama di sini.

11:31.710 --> 11:36.490
Ini hal lain yang baik, kita tidak harus memiliki. Kami memeriksa jika rute tidak kembali.

11:36.600 --> 11:41.550
Jika kita selesai di tempat lain, kita tidak harus memiliki yang lain yang bisa kita mulai.

11:41.550 --> 11:42.890
Jadi itulah yang saya lakukan di sini.

11:43.170 --> 11:47.000
Tetapi hanya perubahan kecil yang benar-benar memastikan jika Anda lebih suka solusinya.

11:47.080 --> 11:48.270
Ya, Anda bisa menggunakan ini.

11:48.270 --> 11:52.890
Ini benar-benar logika yang sama hanya sedikit kurang eksplisit tetapi juga kurang bertele-tele.
