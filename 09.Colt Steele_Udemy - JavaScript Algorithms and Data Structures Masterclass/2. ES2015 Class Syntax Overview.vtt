WEBVTT

00:00.210 --> 00:01.200
Hai, selamat datang kembali.

00:01.320 --> 00:05.750
Jadi seperti yang telah saya sebutkan bagian ini menandai titik balik yang signifikan dalam kursus.

00:05.970 --> 00:10.980
Kita sekarang akan memusatkan perhatian kita pada sekelompok struktur data sehingga struktur data klasik seperti

00:10.980 --> 00:14.350
daftar yang ditautkan tunggal daftar d-link ganda menumpuk CU

00:14.370 --> 00:20.250
Kita juga akan menerapkan yang lebih rumit seperti pohon dan grafik pohon pencarian biner tetapi sepanjang waktu kita tidak

00:20.250 --> 00:24.690
hanya akan belajar tentang struktur data ini dan berbicara tentang mengapa itu penting dan

00:24.690 --> 00:25.830
bagaimana mereka berguna.

00:25.830 --> 00:27.450
Kami juga akan mengimplementasikannya.

00:27.480 --> 00:30.040
Javascript tidak datang dengan salah satu dari ini pra-dibangun.

00:30.210 --> 00:33.740
Dan intinya adalah bahwa kita akan melalui dan menulis sendiri.

00:33.810 --> 00:40.170
Tetapi untuk melakukan itu kita perlu memanfaatkan sintaksis dan Javascript kelas timur 2015.

00:40.170 --> 00:45.900
Jadi tergantung pada seberapa familiar Anda dengan javascript dan dengan pemrograman berorientasi objek Anda mungkin tahu bahwa javascript

00:45.900 --> 00:50.130
tidak benar-benar mendukung O. P. atau pemrograman berorientasi objek.

00:50.130 --> 00:55.000
Namun dengan 2015 kata kunci kelas baru diperkenalkan.

00:54.990 --> 00:58.920
Kami akan mengambil keuntungan dari itu sepanjang kursus ini karena itu membuatnya sangat mudah dan

00:58.920 --> 01:01.070
sederhana bagi kami untuk mendefinisikan struktur data kami.

01:01.080 --> 01:05.490
Jadi jika Anda sudah terbiasa dengan itu jika Anda merasa senang menulis menggunakan konstruktor penulisan

01:05.490 --> 01:11.460
kata kunci kelas instantiating contoh baru menggunakan kelas Anda di javascript maka Anda dapat melewati bagian ini tetapi jika Anda memerlukan

01:11.670 --> 01:15.390
beberapa ulasan di atasnya maka atau jika Anda belum pernah mempelajarinya sebelumnya.

01:15.450 --> 01:17.710
Saya pikir ini akan membantu Anda.

01:17.730 --> 01:23.460
Juga jika Anda belum pernah bekerja dengan bahasa Berorientasi Objek apa pun sebelumnya atau Anda tidak pernah

01:23.460 --> 01:29.670
mendefinisikan pola apa pun apakah itu dalam javascript atau Python atau Ruby atau bahasa lain apa pun, maka

01:29.670 --> 01:32.850
ini akan menjadi sesuatu yang banyak menerima segera.

01:33.180 --> 01:37.470
Tetapi saya sarankan Anda menonton video ini Anda mencoba beberapa contoh dan kemudian Anda mulai dengan

01:37.470 --> 01:40.390
daftar yang terhubung sendiri yang berikutnya dan melihat bagaimana hasilnya.

01:40.650 --> 01:41.770
Tapi bawa lambat jika Anda.

01:41.770 --> 01:46.950
Jika Anda belum pernah menulis kelas sebelumnya, maka tujuan kami akan mulai dengan

01:46.950 --> 01:51.740
berbicara tentang kelas apa yang akan memahami bagaimana javascript mengimplementasikan gagasan kelas.

01:51.910 --> 01:54.620
Berani karena itu tidak sepenuhnya benar.

01:54.630 --> 01:55.920
Pemrograman berorientasi objek.

01:56.100 --> 01:56.800
Sangat berbeda.

01:56.790 --> 02:02.430
Tentukan istilah seperti enkapsulasi abstraksi dan polimorfisme dan kemudian kita akan gunakan sebagai kelas 20:15

02:02.430 --> 02:04.040
untuk mengimplementasikan struktur data.

02:04.220 --> 02:07.720
OK jadi pertama apa sih kelas.

02:07.740 --> 02:13.870
Jadi secara umum kelas seperti cetak biru untuk membuat objek dengan properti dan metode yang telah ditentukan.

02:14.130 --> 02:18.670
Jadi kita akan belajar bagaimana membuat daftar yang ditautkan sendiri adalah daftar yang ditautkan dua kali lipat.

02:18.720 --> 02:24.960
Kita mendefinisikan suatu pola untuk daftar yang ditautkan dua kali lipat, tetapi kemudian kita dapat benar-benar membuat banyak objek banyak

02:24.960 --> 02:29.130
daftar yang ditautkan secara individu menggunakan cetak biru itu menggunakan kelas kita.

02:29.130 --> 02:32.710
Ini seperti array dan Javascript meskipun tidak persis sama.

02:32.730 --> 02:37.170
Kami memiliki pola untuk array dan array datang dengan banyak metode dan hal-hal yang dapat mereka

02:37.170 --> 02:37.690
lakukan.

02:37.950 --> 02:43.380
Tapi pertama-tama kita harus instantiate array baru dan kemudian kita bisa mendapatkan akses ke semua itu sehingga

02:43.380 --> 02:44.060
ada array.

02:44.220 --> 02:48.930
Secara teknis ini bukan kelas tetapi Anda bisa menganggapnya sebagai semacam cetak biru dan kemudian kita bisa

02:48.960 --> 02:50.830
instantiate objek berdasarkan cetak biru itu.

02:50.940 --> 02:54.960
Jadi saya agak mengisyaratkan javascript tidak benar-benar memiliki kelas.

02:54.960 --> 03:00.810
Jika Anda pergi ke dokumentasi di M. D n jaringan pengembang Mozilla Anda dapat

03:00.810 --> 03:07.740
melihat di bagian atas pada ini adalah ada kelas-kelas halaman utama javascript diperkenalkan dan 20:15 terutama gula

03:08.040 --> 03:11.330
sintaksis atas warisan berbasis prototipe javascript yang ada.

03:11.330 --> 03:15.880
Sintaks kelas tidak memperkenalkan model pewarisan Object-Oriented baru untuk Javascript.

03:15.990 --> 03:18.390
Jadi ini mengatakan ini pada dasarnya adalah javascript.

03:18.380 --> 03:20.910
Tidak pernah benar-benar berorientasi objek.

03:20.980 --> 03:27.750
Itu mengambil keuntungan dari sesuatu yang disebut warisan berbasis prototipe atau prototipe CL dan semua yang terjadi dengan East

03:27.750 --> 03:33.090
2015 adalah bahwa sintaksis kelas ini diperkenalkan tetapi itu tidak mengubah cara kerja di balik

03:33.090 --> 03:33.600
layar.

03:33.630 --> 03:38.920
Ini hanya cara yang lebih mudah untuk bekerja dan mendefinisikan struktur seperti kelas.

03:38.970 --> 03:44.670
Jadi jika Anda tidak terbiasa dengan orang-orang dengan pemrograman berorientasi objek atau pewarisan berbasis prototipe

03:44.940 --> 03:47.110
maka itu mungkin masuk akal.

03:47.340 --> 03:51.410
Tetapi yang akan dikatakan adalah membantu mengetahui bahwa secara teknis ini tidak benar.

03:51.420 --> 03:52.520
Pemrograman berorientasi objek.

03:52.530 --> 03:54.460
Tapi itu tidak akan menghalangi kita dengan cara apa pun.

03:54.600 --> 03:56.450
Kita hanya perlu mengetahui hal itu.

03:56.460 --> 03:57.570
Biarkan saja begitu.

03:57.570 --> 03:59.610
Jadi selanjutnya mengapa kita perlu mempelajari ini.

03:59.610 --> 04:04.290
Seperti yang sudah saya sebutkan kita akan mengimplementasikan banyak struktur data sebagai kelas.

04:04.290 --> 04:09.590
Jadi, setiap kali kita membangun, kita akan belajar bagaimana membangun pohon atau grafik atau daftar panjang tunggal.

04:09.600 --> 04:14.730
Kita akan mendefinisikan kelas mendefinisikan pola dalam javascript yang kemudian kita dapat instantiate daftar

04:14.730 --> 04:15.540
individu dari.

04:15.540 --> 04:17.460
Sebagai contoh di sini adalah spoiler kecil.

04:17.490 --> 04:23.880
Berikut adalah dua kelas yang kami tentukan untuk daftar tertaut tunggal kami sehingga Anda dapat melihat bahwa kami memiliki konstruktor kata kunci kelas yang akan membahas

04:23.880 --> 04:24.900
semua detail ini.

04:24.900 --> 04:28.650
Tapi di sini kelas untuk daftar yang ditautkan sendiri agak panjang.

04:28.650 --> 04:30.360
Ada banyak metode yang kami tambahkan di sana.

04:30.360 --> 04:33.490
Ini adalah cetak biru meskipun ini sebenarnya tidak mewakili data apa pun.

04:33.500 --> 04:35.580
Tidak ada tidak ada contoh daftar.

04:35.580 --> 04:37.330
Kami masih harus instantiate satu.

04:37.440 --> 04:44.130
Berikut ini adalah kelas yang sangat pendek yang disebut node dan kelas daftar yang terhubung sendiri menggunakan kelas Node di

04:44.130 --> 04:44.820
dalamnya.

04:44.850 --> 04:46.080
Jadi itu saja yang akan saya katakan tentang itu untuk saat ini.

04:46.080 --> 04:50.860
Tetapi ini hanyalah satu contoh dari banyak hal yang akan kita lihat dan terapkan sendiri.

04:50.970 --> 04:52.420
Jadi saya pikir saya akan pergi dari sini.

04:52.440 --> 04:56.000
Ketahuilah bahwa kelas adalah apa yang akan kita gunakan sepanjang sisa kursus.

04:56.130 --> 05:00.670
Muncul berikutnya sekelompok struktur data dalam video berikutnya akan memperkenalkan sintaks

05:00.730 --> 05:01.710
untuk kelas.

05:01.810 --> 05:04.840
Jadi, jika Anda tahu apa yang dapat Anda lewatkan, dapatkan ulasan.

05:04.900 --> 05:08.680
Tetapi jika Anda tidak mengetahuinya, saya sangat menyarankan Anda hanya menonton beberapa video berikutnya.

05:08.680 --> 05:12.910
Saya tahu ini belum pada struktur data tapi itu sangat penting karena kita akan

05:12.910 --> 05:13.530
menggunakan ini.

05:13.540 --> 05:14.650
OK aku akan diam.
