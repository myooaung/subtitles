WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.770
Hello there.

00:00:00.770 --> 00:00:03.550
And welcome back to this spring development course.

00:00:03.550 --> 00:00:07.450
So last time we went over using constructors,

00:00:07.450 --> 00:00:08.950
you have some homework to do.

00:00:08.950 --> 00:00:13.830
Your job was to create a class animal or a being in this case.

00:00:13.830 --> 00:00:14.330
I mean,

00:00:14.330 --> 00:00:15.230
it isn't full being,

00:00:15.230 --> 00:00:17.680
but sort of like a bean animal.

00:00:17.680 --> 00:00:19.770
And with three attributes weight,

00:00:19.770 --> 00:00:23.900
height and species name the corresponding getters and centers and the constructor that

00:00:23.900 --> 00:00:24.550
would assigned them.

00:00:24.550 --> 00:00:29.670
Then you would pass in some values into the constructor,

00:00:29.670 --> 00:00:34.180
using the beans dot xml file and then print the zebra.

00:00:34.180 --> 00:00:39.310
Don't get high or actually the animal height name and wait inside your application Start

00:00:39.310 --> 00:00:39.850
class.

00:00:39.850 --> 00:00:41.540
I mean,

00:00:41.540 --> 00:00:43.480
that was really sort of required,

00:00:43.480 --> 00:00:43.740
but,

00:00:43.740 --> 00:00:44.010
you know,

00:00:44.010 --> 00:00:48.150
it's already seem to print them just to get idea exactly what you did.

00:00:48.150 --> 00:00:48.890
So,

00:00:48.890 --> 00:00:49.190
anyway,

00:00:49.190 --> 00:00:49.460
um,

00:00:49.460 --> 00:00:50.790
here is actually what should have done.

00:00:50.790 --> 00:00:53.320
So here of my own beans on external file,

00:00:53.320 --> 00:00:54.000
Um,

00:00:54.000 --> 00:01:00.740
I just have my constructor argument as float to the value 100.5.

00:01:00.740 --> 00:01:02.080
So right here,

00:01:02.080 --> 00:01:02.820
My constructors.

00:01:02.820 --> 00:01:03.710
So float height.

00:01:03.710 --> 00:01:06.320
That's gonna be 105 then.

00:01:06.320 --> 00:01:09.930
My argument double with a value 5.0.

00:01:09.930 --> 00:01:12.670
So double wait.

00:01:12.670 --> 00:01:14.000
Value 1.0.

00:01:14.000 --> 00:01:15.280
Yeah.

00:01:15.280 --> 00:01:16.210
5.0.

00:01:16.210 --> 00:01:16.480
Yeah.

00:01:16.480 --> 00:01:17.920
Doubles 95.0.

00:01:17.920 --> 00:01:19.680
Weight's gonna be 5.0.

00:01:19.680 --> 00:01:25.730
And then I have my sort of argument type Java links string and the Value zebra.

00:01:25.730 --> 00:01:28.200
Since the species name is gonna be zebra,

00:01:28.200 --> 00:01:31.100
so then in my application start class,

00:01:31.100 --> 00:01:33.180
I just have my application context,

00:01:33.180 --> 00:01:33.580
obviously,

00:01:33.580 --> 00:01:33.770
you know,

00:01:33.770 --> 00:01:36.680
a class graphics in my application context All pretty,

00:01:36.680 --> 00:01:37.390
pretty simple.

00:01:37.390 --> 00:01:40.530
And then have my animals YB or zebra zebra.

00:01:40.530 --> 00:01:41.260
Um,

00:01:41.260 --> 00:01:43.700
is the application context about get being zebra,

00:01:43.700 --> 00:01:45.120
which was object that,

00:01:45.120 --> 00:01:45.490
you know,

00:01:45.490 --> 00:01:46.440
the type zero,

00:01:46.440 --> 00:01:49.630
because he breath and I cast it to animal,

00:01:49.630 --> 00:01:51.310
and then I just print out,

00:01:51.310 --> 00:01:51.810
get hide,

00:01:51.810 --> 00:01:53.550
gets me his name and get weight.

00:01:53.550 --> 00:01:56.390
And if you run this yet,

00:01:56.390 --> 00:01:58.950
uh,

00:01:58.950 --> 00:02:02.150
the height species name and wait.

00:02:02.150 --> 00:02:03.870
So now we can change this.

00:02:03.870 --> 00:02:04.270
Um,

00:02:04.270 --> 00:02:05.480
And it will change accordingly,

00:02:05.480 --> 00:02:06.770
so we can do everything.

00:02:06.770 --> 00:02:07.860
100.5 you can do.

00:02:07.860 --> 00:02:14.050
567.7 and 1087 25.

00:02:14.050 --> 00:02:17.720
And so now if you're on this there we go.

00:02:17.720 --> 00:02:18.670
It updates accordingly.

00:02:18.670 --> 00:02:20.930
So there we go.

00:02:20.930 --> 00:02:22.570
So that is essentially what should have done for homework.

00:02:22.570 --> 00:02:25.970
Now there are a couple other ways to do this.

00:02:25.970 --> 00:02:26.390
So,

00:02:26.390 --> 00:02:26.790
first of all,

00:02:26.790 --> 00:02:28.190
we don't actually need this type here.

00:02:28.190 --> 00:02:33.400
Spring will automatically know its strength and just put it in the correct place.

00:02:33.400 --> 00:02:37.030
As can see here.

00:02:37.030 --> 00:02:38.610
We do technically need them.

00:02:38.610 --> 00:02:39.800
We don't necessarily need them.

00:02:39.800 --> 00:02:41.530
We could just assign the index's correctly.

00:02:41.530 --> 00:02:43.100
But in this case,

00:02:43.100 --> 00:02:43.680
we do need them.

00:02:43.680 --> 00:02:45.100
Just it knows which is floating,

00:02:45.100 --> 00:02:45.890
which is double,

00:02:45.890 --> 00:02:47.910
but we could do what we could do without them,

00:02:47.910 --> 00:02:49.440
the values will just be a little bit different.

00:02:49.440 --> 00:02:57.650
So it's not necessarily wrong so much so much as it is just a in sort of no good.

00:02:57.650 --> 00:02:59.120
There we go,

00:02:59.120 --> 00:02:59.950
so they could get same thing.

00:02:59.950 --> 00:03:04.650
Except now it just goes on the order of the attributes that are defined in the constructor

00:03:04.650 --> 00:03:04.650
.

00:03:04.650 --> 00:03:09.860
They also clipped on index or just index equals one.

00:03:09.860 --> 00:03:11.030
Um,

00:03:11.030 --> 00:03:16.270
Index equals to actually I was gonna be zero.

00:03:16.270 --> 00:03:16.640
Yeah,

00:03:16.640 --> 00:03:17.550
you like that?

00:03:17.550 --> 00:03:21.420
And then we go actually get an error here.

00:03:21.420 --> 00:03:21.870
What's wrong?

00:03:21.870 --> 00:03:22.210
OK,

00:03:22.210 --> 00:03:23.700
we got to speak here.

00:03:23.700 --> 00:03:24.290
There we go.

00:03:24.290 --> 00:03:27.690
There we go.

00:03:27.690 --> 00:03:30.300
So then we couldn't put the index here as well,

00:03:30.300 --> 00:03:31.380
but I mean here,

00:03:31.380 --> 00:03:33.140
since we only have in the constructor.

00:03:33.140 --> 00:03:35.730
Since we only have one string,

00:03:35.730 --> 00:03:37.380
it'll get that use.

00:03:37.380 --> 00:03:38.190
Put it into the string.

00:03:38.190 --> 00:03:39.370
Okay,

00:03:39.370 --> 00:03:40.240
so that's what you have done.

00:03:40.240 --> 00:03:40.690
If you got that,

00:03:40.690 --> 00:03:41.180
that's very good.

00:03:41.180 --> 00:03:41.550
If not,

00:03:41.550 --> 00:03:43.000
try to understand what this code does.

00:03:43.000 --> 00:03:44.190
Get it running on your machine,

00:03:44.190 --> 00:03:46.160
and then you can move on.

00:03:46.160 --> 00:03:46.840
Yeah.

00:03:46.840 --> 00:03:47.110
Anyway,

00:03:47.110 --> 00:03:47.940
without further ado,

00:03:47.940 --> 00:03:48.450
um,

00:03:48.450 --> 00:03:49.840
let's get interested.

00:03:49.840 --> 00:03:51.420
All right?

00:03:51.420 --> 00:03:57.820
So today we're gonna be going over how we can work with other classes.

00:03:57.820 --> 00:04:00.660
So how can we put other classes into our class?

00:04:00.660 --> 00:04:04.320
So there's an animal class we wanted tohave another class.

00:04:04.320 --> 00:04:04.650
Like,

00:04:04.650 --> 00:04:05.790
what could we have?

00:04:05.790 --> 00:04:06.270
Um,

00:04:06.270 --> 00:04:10.020
color is the color.

00:04:10.020 --> 00:04:10.460
Okay.

00:04:10.460 --> 00:04:11.390
Um,

00:04:11.390 --> 00:04:12.640
delicious creative class color,

00:04:12.640 --> 00:04:15.160
new class.

00:04:15.160 --> 00:04:16.610
It's gonna be caller.

00:04:16.610 --> 00:04:17.350
There we go.

00:04:17.350 --> 00:04:21.830
And the class color will have to actually is gonna be string Ah,

00:04:21.830 --> 00:04:22.950
color name.

00:04:22.950 --> 00:04:25.420
And then ent,

00:04:25.420 --> 00:04:26.080
uh,

00:04:26.080 --> 00:04:26.710
color.

00:04:26.710 --> 00:04:27.470
I d.

00:04:27.470 --> 00:04:29.260
There we go.

00:04:29.260 --> 00:04:29.550
Uh,

00:04:29.550 --> 00:04:31.030
let's make a private since,

00:04:31.030 --> 00:04:31.360
you know,

00:04:31.360 --> 00:04:33.180
in capital Aviation,

00:04:33.180 --> 00:04:36.520
There we go.

00:04:36.520 --> 00:04:36.920
All right.

00:04:36.920 --> 00:04:40.130
And now it's gonna do source get together,

00:04:40.130 --> 00:04:40.260
then.

00:04:40.260 --> 00:04:41.960
Centers like both.

00:04:41.960 --> 00:04:42.590
Okay,

00:04:42.590 --> 00:04:45.810
then source.

00:04:45.810 --> 00:04:47.950
Um,

00:04:47.950 --> 00:04:50.320
generate,

00:04:50.320 --> 00:04:51.770
construct using fields.

00:04:51.770 --> 00:04:52.330
There we go.

00:04:52.330 --> 00:04:53.360
And they're ago.

00:04:53.360 --> 00:04:53.570
So,

00:04:53.570 --> 00:04:53.800
Carrie,

00:04:53.800 --> 00:04:55.050
constructor and get insiders.

00:04:55.050 --> 00:04:57.510
So now an animal.

00:04:57.510 --> 00:04:58.250
We're gonna have,

00:04:58.250 --> 00:04:59.340
uh,

00:04:59.340 --> 00:05:01.440
private arrive,

00:05:01.440 --> 00:05:02.860
but oops.

00:05:02.860 --> 00:05:05.550
Private color.

00:05:05.550 --> 00:05:06.960
Uh,

00:05:06.960 --> 00:05:08.500
actually do Yeah.

00:05:08.500 --> 00:05:10.960
Color whips.

00:05:10.960 --> 00:05:12.270
Color color.

00:05:12.270 --> 00:05:12.850
There we go.

00:05:12.850 --> 00:05:14.030
All right,

00:05:14.030 --> 00:05:16.340
Sandals generate gettin centers Source.

00:05:16.340 --> 00:05:16.770
Jerry?

00:05:16.770 --> 00:05:17.440
Yeah.

00:05:17.440 --> 00:05:18.350
Anderson centers,

00:05:18.350 --> 00:05:21.290
four color.

00:05:21.290 --> 00:05:21.900
There we go.

00:05:21.900 --> 00:05:22.900
All right.

00:05:22.900 --> 00:05:23.280
And now,

00:05:23.280 --> 00:05:23.560
let's go.

00:05:23.560 --> 00:05:24.840
To remove the construction,

00:05:24.840 --> 00:05:26.180
generate a new construction as well.

00:05:26.180 --> 00:05:28.650
Select.

00:05:28.650 --> 00:05:28.910
Oh,

00:05:28.910 --> 00:05:29.450
and there we go.

00:05:29.450 --> 00:05:31.010
All right,

00:05:31.010 --> 00:05:37.370
so now we want to pass in a color class into this constructor,

00:05:37.370 --> 00:05:38.440
so we're gonna have a constructor.

00:05:38.440 --> 00:05:38.870
Argh!

00:05:38.870 --> 00:05:46.000
Constructor Arc Index equals what a next is gonna be.

00:05:46.000 --> 00:05:46.570
Um,

00:05:46.570 --> 00:05:49.560
you don't want to?

00:05:49.560 --> 00:05:49.770
Yeah,

00:05:49.770 --> 00:05:50.150
three.

00:05:50.150 --> 00:05:54.580
Index equals three value equals,

00:05:54.580 --> 00:05:57.350
and then we're gonna put us a value.

00:05:57.350 --> 00:05:58.380
Well,

00:05:58.380 --> 00:05:59.180
for that,

00:05:59.180 --> 00:06:00.700
we would just need to create a new beans.

00:06:00.700 --> 00:06:04.950
We're gonna have being I d equals,

00:06:04.950 --> 00:06:08.450
Let's say,

00:06:08.450 --> 00:06:08.950
um,

00:06:08.950 --> 00:06:12.350
white.

00:06:12.350 --> 00:06:14.450
Let's call it black and white.

00:06:14.450 --> 00:06:19.600
There we go.

00:06:19.600 --> 00:06:20.300
Um,

00:06:20.300 --> 00:06:23.300
being ID equals black and white on,

00:06:23.300 --> 00:06:26.710
then class equals com.

00:06:26.710 --> 00:06:32.250
Don't example dot p k g dot color.

00:06:32.250 --> 00:06:36.070
All right,

00:06:36.070 --> 00:06:36.460
there we go.

00:06:36.460 --> 00:06:38.090
Let's add some constructors in there as well.

00:06:38.090 --> 00:06:42.360
All right.

00:06:42.360 --> 00:06:43.050
Um,

00:06:43.050 --> 00:06:46.270
we're gonna have the name and then the i d.

00:06:46.270 --> 00:06:51.150
So the name is gonna be black and white.

00:06:51.150 --> 00:06:54.490
And the idea is gonna be your say 56.

00:06:54.490 --> 00:06:54.970
All right,

00:06:54.970 --> 00:06:55.450
There we go.

00:06:55.450 --> 00:06:56.900
All right.

00:06:56.900 --> 00:06:58.850
And so now we don't need a value tag.

00:06:58.850 --> 00:07:00.090
Here we're gonna have here instead.

00:07:00.090 --> 00:07:01.190
Is a ref tag.

00:07:01.190 --> 00:07:04.550
Ref is equal to black and white.

00:07:04.550 --> 00:07:07.770
All right,

00:07:07.770 --> 00:07:08.250
And there we go.

00:07:08.250 --> 00:07:10.320
Now it's going to close off.

00:07:10.320 --> 00:07:12.440
Our constructor are tag,

00:07:12.440 --> 00:07:13.890
and there we go.

00:07:13.890 --> 00:07:15.520
Okay,

00:07:15.520 --> 00:07:17.940
so now we can go ahead and try in applications,

00:07:17.940 --> 00:07:19.170
start to get our animal,

00:07:19.170 --> 00:07:20.850
and then we're gonna do it with a new system.

00:07:20.850 --> 00:07:24.150
Does out dot out of print.

00:07:24.150 --> 00:07:28.200
Allen z dot Uh,

00:07:28.200 --> 00:07:30.050
get color.

00:07:30.050 --> 00:07:32.030
Don't get color name,

00:07:32.030 --> 00:07:32.400
All right?

00:07:32.400 --> 00:07:34.810
And we should get black and white.

00:07:34.810 --> 00:07:37.400
I was from kind of names and defined for that color.

00:07:37.400 --> 00:07:41.140
Ah,

00:07:41.140 --> 00:07:44.930
is screen color name?

00:07:44.930 --> 00:07:45.950
Get color name.

00:07:45.950 --> 00:07:49.470
Ah,

00:07:49.470 --> 00:07:51.350
Why is it undefined?

00:07:51.350 --> 00:07:57.790
Are There we go.

00:07:57.790 --> 00:07:58.710
That was weird.

00:07:58.710 --> 00:07:58.910
Oh,

00:07:58.910 --> 00:07:59.250
no,

00:07:59.250 --> 00:08:00.250
it's back.

00:08:00.250 --> 00:08:20.870
Okay,

00:08:20.870 --> 00:08:25.570
well,

00:08:25.570 --> 00:08:25.810
okay,

00:08:25.810 --> 00:08:26.490
then I got Yes,

00:08:26.490 --> 00:08:26.880
it's working.

00:08:26.880 --> 00:08:27.000
Now.

00:08:27.000 --> 00:08:27.580
Those weird.

00:08:27.580 --> 00:08:28.270
All right,

00:08:28.270 --> 00:08:32.330
Now let's run this and they're going.

00:08:32.330 --> 00:08:34.550
We got black and white as expected.

00:08:34.550 --> 00:08:35.610
Okay,

00:08:35.610 --> 00:08:38.790
So this is what this is really the ref tag.

00:08:38.790 --> 00:08:39.670
Essentially,

00:08:39.670 --> 00:08:40.150
um,

00:08:40.150 --> 00:08:42.350
it's what the reptile it does.

00:08:42.350 --> 00:08:46.660
So the ref tag just refers to another being that we have created.

00:08:46.660 --> 00:08:52.370
So if we were to change black and white to black and white,

00:08:52.370 --> 00:08:52.770
I don't know.

00:08:52.770 --> 00:08:54.300
Uh,

00:08:54.300 --> 00:08:55.980
let's just do it from a capital letter.

00:08:55.980 --> 00:08:57.680
This should in theory,

00:08:57.680 --> 00:08:59.160
actually break our application.

00:08:59.160 --> 00:09:00.680
Nope,

00:09:00.680 --> 00:09:01.030
Nope.

00:09:01.030 --> 00:09:01.320
Nope.

00:09:01.320 --> 00:09:01.500
No,

00:09:01.500 --> 00:09:02.650
I don't want in the next little found.

00:09:02.650 --> 00:09:04.730
There we go,

00:09:04.730 --> 00:09:05.370
all right.

00:09:05.370 --> 00:09:08.130
And because he actually broke it since our problem is,

00:09:08.130 --> 00:09:10.150
ah named black and white available.

00:09:10.150 --> 00:09:12.890
So no be named black and white Available this from a capital letter.

00:09:12.890 --> 00:09:15.590
So if you change it back in that case,

00:09:15.590 --> 00:09:18.400
it's just gonna refer to it and then everything will work.

00:09:18.400 --> 00:09:24.050
Eso One important thing to understand is that there are a couple of beans scopes in spring

00:09:24.050 --> 00:09:32.190
and a bean scope is essentially just away in spring of be a being being defined.

00:09:32.190 --> 00:09:34.330
So we're gonna go over.

00:09:34.330 --> 00:09:36.100
Being scope is gonna be a whole nother lesson.

00:09:36.100 --> 00:09:37.980
There's a lot of different types of being scopes,

00:09:37.980 --> 00:09:42.480
but essentially which I understand is that the default under the default scope,

00:09:42.480 --> 00:09:47.660
all the classes so the beans are created even without them being called.

00:09:47.660 --> 00:09:52.080
So what happens is that it creates this being first of all,

00:09:52.080 --> 00:09:53.510
it creates all the beans,

00:09:53.510 --> 00:09:57.020
and the only then does it actually will will be called It's black and white.

00:09:57.020 --> 00:09:58.070
So if you call it or not,

00:09:58.070 --> 00:09:59.140
Either way,

00:09:59.140 --> 00:10:01.540
this being here is going to be created.

00:10:01.540 --> 00:10:03.650
Okay?

00:10:03.650 --> 00:10:05.470
That's really all to understand.

00:10:05.470 --> 00:10:06.690
All right.

00:10:06.690 --> 00:10:08.100
Next we're gonna go over,

00:10:08.100 --> 00:10:09.950
ref and go over.

00:10:09.950 --> 00:10:10.700
Yeah,

00:10:10.700 --> 00:10:11.130
Go over,

00:10:11.130 --> 00:10:11.360
ref.

00:10:11.360 --> 00:10:12.170
In more detail,

00:10:12.170 --> 00:10:14.420
we're gonna take a look at how works under the hood.

00:10:14.420 --> 00:10:14.890
Sort of.

00:10:14.890 --> 00:10:17.750
And what are there things we can do with ref?

00:10:17.750 --> 00:10:18.810
So,

00:10:18.810 --> 00:10:19.130
anyway,

00:10:19.130 --> 00:10:23.850
are your homework for this lesson is just to get this working on a machine thing that we

00:10:23.850 --> 00:10:24.580
just created,

00:10:24.580 --> 00:10:25.320
and,

00:10:25.320 --> 00:10:25.650
uh,

00:10:25.650 --> 00:10:27.570
understand what the ref tag does.

00:10:27.570 --> 00:10:28.950
I was for first letter B.

00:10:28.950 --> 00:10:30.470
So anyway,

00:10:30.470 --> 00:10:32.530
I was never the homework just really isn't Homer.

00:10:32.530 --> 00:10:34.130
This is more just replicating classwork.

00:10:34.130 --> 00:10:34.540
But,

00:10:34.540 --> 00:10:34.890
I mean,

00:10:34.890 --> 00:10:35.150
you know,

00:10:35.150 --> 00:10:36.130
take it for what it is.

00:10:36.130 --> 00:10:37.100
And next time,

00:10:37.100 --> 00:10:38.650
we're gonna go over a ref in more detail.

00:10:38.650 --> 00:10:39.900
So anyway,

00:10:39.900 --> 00:10:40.400
um,

00:10:40.400 --> 00:10:41.150
I'll see you soon

