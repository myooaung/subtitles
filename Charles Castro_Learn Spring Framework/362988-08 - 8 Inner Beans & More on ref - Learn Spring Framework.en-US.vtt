WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.940
Hello there.

00:00:00.940 --> 00:00:02.950
And welcome back to this spring development course.

00:00:02.950 --> 00:00:05.690
So last time we went over the ref tag,

00:00:05.690 --> 00:00:07.670
and then we're gonna go be going over the ref tag,

00:00:07.670 --> 00:00:07.890
but,

00:00:07.890 --> 00:00:08.090
you know,

00:00:08.090 --> 00:00:08.890
in more detail,

00:00:08.890 --> 00:00:11.890
sort of we're gonna be going over exactly what it does last time,

00:00:11.890 --> 00:00:14.670
which is sort of I am a example,

00:00:14.670 --> 00:00:15.720
like a live example.

00:00:15.720 --> 00:00:16.070
In this time,

00:00:16.070 --> 00:00:18.510
we're gonna actually organize our knowledge,

00:00:18.510 --> 00:00:18.950
so,

00:00:18.950 --> 00:00:19.180
yes,

00:00:19.180 --> 00:00:19.850
let's get into it.

00:00:19.850 --> 00:00:20.990
All right.

00:00:20.990 --> 00:00:21.690
So here we are.

00:00:21.690 --> 00:00:24.690
I forgot to mention we're also gonna be going over inter beans,

00:00:24.690 --> 00:00:26.330
which is just sort of,

00:00:26.330 --> 00:00:27.060
uh,

00:00:27.060 --> 00:00:31.060
another way we can do things without using the ref tax so we can use the ref tag.

00:00:31.060 --> 00:00:32.900
Or we can use the inner beans tag,

00:00:32.900 --> 00:00:33.520
you know,

00:00:33.520 --> 00:00:34.140
whatever,

00:00:34.140 --> 00:00:35.060
whatever you want to do.

00:00:35.060 --> 00:00:37.890
So let's take a look at exactly how that works now.

00:00:37.890 --> 00:00:38.320
And,

00:00:38.320 --> 00:00:38.660
uh,

00:00:38.660 --> 00:00:39.540
then after that,

00:00:39.540 --> 00:00:42.090
we will actually go to the code.

00:00:42.090 --> 00:00:43.650
So it's going and it started this off.

00:00:43.650 --> 00:00:44.480
All right,

00:00:44.480 --> 00:00:44.820
so first of all,

00:00:44.820 --> 00:00:46.970
we're gonna actually gonna go over setting attributes directly.

00:00:46.970 --> 00:00:50.640
I keep introducing the topics that we're gonna go over in this lesson.

00:00:50.640 --> 00:00:51.210
Um,

00:00:51.210 --> 00:00:51.490
but yeah,

00:00:51.490 --> 00:00:53.350
this is gonna be the last one was just very quick.

00:00:53.350 --> 00:00:54.350
Um,

00:00:54.350 --> 00:00:55.610
very quick,

00:00:55.610 --> 00:00:56.150
sort of.

00:00:56.150 --> 00:01:00.850
I say this very quick overview of setting attribute directly.

00:01:00.850 --> 00:01:02.670
I don't think it warranted its own lesson.

00:01:02.670 --> 00:01:03.810
CSO before,

00:01:03.810 --> 00:01:05.030
when we set attributes,

00:01:05.030 --> 00:01:06.240
actually values,

00:01:06.240 --> 00:01:07.880
we used constructor injection.

00:01:07.880 --> 00:01:08.720
Remember,

00:01:08.720 --> 00:01:11.230
we said they values using the constructor.

00:01:11.230 --> 00:01:13.960
But what if you want to set the values not using a constructor,

00:01:13.960 --> 00:01:15.500
but using the getter and setter methods?

00:01:15.500 --> 00:01:16.200
Well,

00:01:16.200 --> 00:01:17.560
this is what it goes over,

00:01:17.560 --> 00:01:20.100
which means that we set them using a constructor.

00:01:20.100 --> 00:01:20.740
That's useful.

00:01:20.740 --> 00:01:21.150
No,

00:01:21.150 --> 00:01:24.350
but what if we wanted to set them directly?

00:01:24.350 --> 00:01:28.750
But that's supposed to be them detained that using the center methods Well,

00:01:28.750 --> 00:01:30.530
we would use the property tag.

00:01:30.530 --> 00:01:31.880
And here's an example.

00:01:31.880 --> 00:01:36.630
So here we have a bean idea of which zebra and the classes calm Example.

00:01:36.630 --> 00:01:37.680
P k G animals.

00:01:37.680 --> 00:01:43.260
Just like before then the property name equal toe weight,

00:01:43.260 --> 00:01:46.850
and the value is equal to 5.6 just like before.

00:01:46.850 --> 00:01:47.190
So he said,

00:01:47.190 --> 00:01:48.260
the property name,

00:01:48.260 --> 00:01:49.980
toe weight and the value.

00:01:49.980 --> 00:01:50.320
No,

00:01:50.320 --> 00:01:50.640
I'm sorry.

00:01:50.640 --> 00:01:50.910
We get,

00:01:50.910 --> 00:01:57.680
we get the property that's named Weight and set its value to 5.6 and then we just close off

00:01:57.680 --> 00:01:59.640
that being here.

00:01:59.640 --> 00:02:04.020
We use the property tack to assign a value 5.62 the attributes with a name.

00:02:04.020 --> 00:02:04.590
Wait,

00:02:04.590 --> 00:02:06.160
so we get this output.

00:02:06.160 --> 00:02:11.160
So over here we have our output to get the beans or xml file from class path XML

00:02:11.160 --> 00:02:13.650
application contact or said that means an XML file.

00:02:13.650 --> 00:02:16.090
Then we get a new animal Zebra?

00:02:16.090 --> 00:02:16.890
What's nope.

00:02:16.890 --> 00:02:22.400
Then we get a new animal zebra application context are get being zebra and cast it to

00:02:22.400 --> 00:02:23.020
animal.

00:02:23.020 --> 00:02:26.060
And then we print zebra don't get weight.

00:02:26.060 --> 00:02:26.500
And a result.

00:02:26.500 --> 00:02:27.110
When we run this,

00:02:27.110 --> 00:02:29.440
you'll see here we get 5.6.

00:02:29.440 --> 00:02:32.880
So let's go ahead and them actually recreate this in our code.

00:02:32.880 --> 00:02:33.760
All right,

00:02:33.760 --> 00:02:38.720
so here we are there now we're passing in a bunch of values using the constructor must go

00:02:38.720 --> 00:02:42.150
ahead and actually go to our animal class and rush.

00:02:42.150 --> 00:02:44.680
We're gonna go ahead and add a default constructors.

00:02:44.680 --> 00:02:47.070
Right now we have our constructor here,

00:02:47.070 --> 00:02:47.810
Public animal,

00:02:47.810 --> 00:02:51.010
except we have a ton of different values are inserted.

00:02:51.010 --> 00:02:55.200
What we're gonna go in and do is just create a default constructor.

00:02:55.200 --> 00:02:55.390
So,

00:02:55.390 --> 00:02:57.850
public animals,

00:02:57.850 --> 00:03:00.140
there we go.

00:03:00.140 --> 00:03:01.660
Just a default constructor.

00:03:01.660 --> 00:03:02.670
And now we can Go ahead,

00:03:02.670 --> 00:03:03.120
insider.

00:03:03.120 --> 00:03:05.350
Being Ted XML file didn't go and actually remove this.

00:03:05.350 --> 00:03:06.670
There we go.

00:03:06.670 --> 00:03:09.700
And if we didn't have a default constructor than that there,

00:03:09.700 --> 00:03:10.950
then we would get an error,

00:03:10.950 --> 00:03:14.590
since we would have to actually input values using the constructor.

00:03:14.590 --> 00:03:15.140
Argh!

00:03:15.140 --> 00:03:16.970
That would actually,

00:03:16.970 --> 00:03:17.380
you know,

00:03:17.380 --> 00:03:17.930
um,

00:03:17.930 --> 00:03:21.450
set the values since there's no defense constructor to call.

00:03:21.450 --> 00:03:24.350
So that's why we created the default construct.

00:03:24.350 --> 00:03:25.280
All right,

00:03:25.280 --> 00:03:28.950
so it's gonna just set the property names we're gonna do property,

00:03:28.950 --> 00:03:30.430
property,

00:03:30.430 --> 00:03:35.120
name wait and value equals.

00:03:35.120 --> 00:03:35.530
Um,

00:03:35.530 --> 00:03:37.900
let's just say 5.6.

00:03:37.900 --> 00:03:38.450
Okay,

00:03:38.450 --> 00:03:39.320
Five points.

00:03:39.320 --> 00:03:41.940
Now it's going to close off the tag,

00:03:41.940 --> 00:03:43.660
and I think there we go.

00:03:43.660 --> 00:03:43.870
Now,

00:03:43.870 --> 00:03:45.850
let's run our applications Start.

00:03:45.850 --> 00:03:47.720
Are we going to not get the color?

00:03:47.720 --> 00:03:49.850
We're gonna do dot Get weight,

00:03:49.850 --> 00:03:52.070
get way to their ago.

00:03:52.070 --> 00:03:53.060
All right,

00:03:53.060 --> 00:03:53.740
Now let's run this.

00:03:53.740 --> 00:03:55.130
Let me let me actually make it a little bigger.

00:03:55.130 --> 00:03:56.070
Just they can see There.

00:03:56.070 --> 00:04:00.250
We go with her on this applications start,

00:04:00.250 --> 00:04:02.140
and there we go.

00:04:02.140 --> 00:04:05.730
So you can see we get 5.6 because in beans are xml file.

00:04:05.730 --> 00:04:07.530
We actually set the property name.

00:04:07.530 --> 00:04:08.110
Wait,

00:04:08.110 --> 00:04:09.240
um,

00:04:09.240 --> 00:04:11.300
to the value 5.6 so it sets it,

00:04:11.300 --> 00:04:16.240
creates a new animal on and sets the wage right here to 5.6.

00:04:16.240 --> 00:04:16.740
Now,

00:04:16.740 --> 00:04:21.730
I realize we actually did go over this in the I believe it was the third lesson.

00:04:21.730 --> 00:04:22.130
Yeah,

00:04:22.130 --> 00:04:22.620
the third lesson,

00:04:22.620 --> 00:04:23.060
I think.

00:04:23.060 --> 00:04:25.420
But we did actually officially go over it,

00:04:25.420 --> 00:04:26.400
like in a power point.

00:04:26.400 --> 00:04:31.110
So taking for word is perhaps just a refresher for you if you already remembered it.

00:04:31.110 --> 00:04:33.620
But this is just a you don't.

00:04:33.620 --> 00:04:35.010
You can now know this.

00:04:35.010 --> 00:04:35.700
You know,

00:04:35.700 --> 00:04:38.090
I know this very well that you can use the property name.

00:04:38.090 --> 00:04:39.670
It's another thing,

00:04:39.670 --> 00:04:43.650
and it actually will be useful right now when we're gonna go over intervenes.

00:04:43.650 --> 00:04:44.390
So yeah.

00:04:44.390 --> 00:04:44.750
Anyway,

00:04:44.750 --> 00:04:45.350
let's continue.

00:04:45.350 --> 00:04:46.190
All right.

00:04:46.190 --> 00:04:46.710
So here we are,

00:04:46.710 --> 00:04:48.470
back in our power points now the ref tag.

00:04:48.470 --> 00:04:54.340
So we could also use the property tag along with the ref attribute to set being values off

00:04:54.340 --> 00:04:55.550
complex data types.

00:04:55.550 --> 00:04:56.300
We'll take a look here.

00:04:56.300 --> 00:04:57.150
So we have a bean.

00:04:57.150 --> 00:04:58.940
I d is equal to zebra.

00:04:58.940 --> 00:05:01.090
Right class is equal to calm.

00:05:01.090 --> 00:05:02.580
Example P k g animal.

00:05:02.580 --> 00:05:03.250
Okay,

00:05:03.250 --> 00:05:06.770
then Our property name is equal to color.

00:05:06.770 --> 00:05:08.610
So we have a color.

00:05:08.610 --> 00:05:09.350
Um,

00:05:09.350 --> 00:05:10.670
name.

00:05:10.670 --> 00:05:12.380
So inside the class.

00:05:12.380 --> 00:05:12.790
Seabra,

00:05:12.790 --> 00:05:14.390
there is a color color,

00:05:14.390 --> 00:05:16.900
so color attributes of type color.

00:05:16.900 --> 00:05:17.410
Okay.

00:05:17.410 --> 00:05:18.280
Actually,

00:05:18.280 --> 00:05:19.520
I could get a little bit confusing,

00:05:19.520 --> 00:05:19.690
but,

00:05:19.690 --> 00:05:20.000
you know,

00:05:20.000 --> 00:05:21.400
just the class name is color.

00:05:21.400 --> 00:05:23.150
And then the attribute name is color as well.

00:05:23.150 --> 00:05:26.250
And then the reference is to black and white,

00:05:26.250 --> 00:05:29.110
so black and white here will actually try to look for a bean.

00:05:29.110 --> 00:05:32.330
In this case is gonna take a look and find this being here.

00:05:32.330 --> 00:05:39.510
So being I d is equal to black and white class is equal to calm Example p k g.

00:05:39.510 --> 00:05:40.250
Color.

00:05:40.250 --> 00:05:46.780
So we create a new color class which won't know a new color bean and pass in the

00:05:46.780 --> 00:05:49.520
constructor values black and white and 56.

00:05:49.520 --> 00:05:50.030
In this case,

00:05:50.030 --> 00:05:52.550
I'm black and white is gonna be the name of the construct.

00:05:52.550 --> 00:05:53.530
Yeah,

00:05:53.530 --> 00:05:56.740
the name of the color and then 56 going to be the idea of the color.

00:05:56.740 --> 00:05:58.150
So color has naming an I d.

00:05:58.150 --> 00:06:00.410
And so we assigned that.

00:06:00.410 --> 00:06:01.930
So then let's read this.

00:06:01.930 --> 00:06:06.150
Here we set the color property of an animal being toe another being black and white that we

00:06:06.150 --> 00:06:06.850
created below.

00:06:06.850 --> 00:06:07.580
So when you run this,

00:06:07.580 --> 00:06:10.870
we get you the code that we run and we get black and white.

00:06:10.870 --> 00:06:12.040
So when zebra don't get color,

00:06:12.040 --> 00:06:12.330
doctor,

00:06:12.330 --> 00:06:13.030
call her name.

00:06:13.030 --> 00:06:15.360
We get black and white in results.

00:06:15.360 --> 00:06:17.100
So that is using the ref tax.

00:06:17.100 --> 00:06:20.560
So that is how we can set a complex data type.

00:06:20.560 --> 00:06:23.990
So complex attributes now,

00:06:23.990 --> 00:06:24.280
of course,

00:06:24.280 --> 00:06:25.700
that it excludes strings.

00:06:25.700 --> 00:06:27.920
Strings are technically a complex data type.

00:06:27.920 --> 00:06:29.200
So there are class.

00:06:29.200 --> 00:06:29.760
They're not,

00:06:29.760 --> 00:06:30.080
You know,

00:06:30.080 --> 00:06:30.950
primitive did a type,

00:06:30.950 --> 00:06:31.880
but,

00:06:31.880 --> 00:06:32.270
you know,

00:06:32.270 --> 00:06:32.470
I mean,

00:06:32.470 --> 00:06:33.110
to set strings.

00:06:33.110 --> 00:06:37.730
You just put in just just just just value equals than a strength.

00:06:37.730 --> 00:06:40.650
So you don't have to actually create another being for that.

00:06:40.650 --> 00:06:41.750
But I guess you could.

00:06:41.750 --> 00:06:42.740
So anyway,

00:06:42.740 --> 00:06:44.350
we'll take a look at this in code.

00:06:44.350 --> 00:06:45.160
All right,

00:06:45.160 --> 00:06:45.870
so here we are.

00:06:45.870 --> 00:06:46.160
Now,

00:06:46.160 --> 00:06:49.500
we handle We actually already have a black and white being created for us.

00:06:49.500 --> 00:06:50.980
Way actually,

00:06:50.980 --> 00:06:51.880
is in the last lesson.

00:06:51.880 --> 00:06:54.950
So now we can actually do property name equals.

00:06:54.950 --> 00:06:56.980
Um,

00:06:56.980 --> 00:06:57.750
wait.

00:06:57.750 --> 00:06:58.590
No,

00:06:58.590 --> 00:06:59.720
I was going to color property.

00:06:59.720 --> 00:07:00.320
Name is color,

00:07:00.320 --> 00:07:02.580
and this is gonna be referring to this right here.

00:07:02.580 --> 00:07:02.710
So,

00:07:02.710 --> 00:07:03.150
color,

00:07:03.150 --> 00:07:04.250
um,

00:07:04.250 --> 00:07:05.230
private color color.

00:07:05.230 --> 00:07:06.970
And this case actually going to be from a capital letter,

00:07:06.970 --> 00:07:07.250
though?

00:07:07.250 --> 00:07:09.050
Yeah,

00:07:09.050 --> 00:07:10.170
I think.

00:07:10.170 --> 00:07:10.420
Right.

00:07:10.420 --> 00:07:10.750
Yeah.

00:07:10.750 --> 00:07:11.650
Capital letter,

00:07:11.650 --> 00:07:13.600
Capital letter.

00:07:13.600 --> 00:07:13.910
Here.

00:07:13.910 --> 00:07:16.980
Color value equals We're not gonna have a value here.

00:07:16.980 --> 00:07:17.300
Remember,

00:07:17.300 --> 00:07:18.620
Since is a complex at a type.

00:07:18.620 --> 00:07:19.220
It's going first,

00:07:19.220 --> 00:07:20.650
another being we're going to ref.

00:07:20.650 --> 00:07:24.950
Ref is equal to and then black and white.

00:07:24.950 --> 00:07:26.000
The idea of the beam.

00:07:26.000 --> 00:07:28.730
All right,

00:07:28.730 --> 00:07:29.260
there we go.

00:07:29.260 --> 00:07:30.200
Now let's run this.

00:07:30.200 --> 00:07:32.450
Actually,

00:07:32.450 --> 00:07:32.600
no,

00:07:32.600 --> 00:07:33.820
We need to change the application.

00:07:33.820 --> 00:07:34.380
Start class.

00:07:34.380 --> 00:07:35.290
Do not get the weight,

00:07:35.290 --> 00:07:41.640
but instead get the get color dot Get color name And also sure the class colors Well,

00:07:41.640 --> 00:07:42.080
really quickly.

00:07:42.080 --> 00:07:42.520
We actually did.

00:07:42.520 --> 00:07:44.030
Already created together in the last lesson.

00:07:44.030 --> 00:07:44.350
But,

00:07:44.350 --> 00:07:44.980
you know,

00:07:44.980 --> 00:07:47.610
if you forgot to string color names into color I d.

00:07:47.610 --> 00:07:51.800
And so we have constructor color name color.

00:07:51.800 --> 00:07:53.550
I d set them pretty simple.

00:07:53.550 --> 00:07:54.900
Eso No.

00:07:54.900 --> 00:07:56.200
When our beans that xml file,

00:07:56.200 --> 00:07:57.570
we have everything ready.

00:07:57.570 --> 00:07:59.370
And we can now run our application start class.

00:07:59.370 --> 00:08:01.460
And as you can see,

00:08:01.460 --> 00:08:03.180
we get black and whites wouldn't get get,

00:08:03.180 --> 00:08:04.160
get the color,

00:08:04.160 --> 00:08:05.250
and then they get color name.

00:08:05.250 --> 00:08:06.980
It returns black and white.

00:08:06.980 --> 00:08:12.760
Since it is what we set here in our being dot xml files when we do constructor.

00:08:12.760 --> 00:08:13.360
Argh!

00:08:13.360 --> 00:08:16.480
Value equals black and white.

00:08:16.480 --> 00:08:20.290
And then when we do property,

00:08:20.290 --> 00:08:21.450
name equals color.

00:08:21.450 --> 00:08:25.950
And then the reference is to a black and white being so being with the I d.

00:08:25.950 --> 00:08:26.740
Black and white,

00:08:26.740 --> 00:08:32.370
it refers to this bead and a result that is what is created and that as well we get when we

00:08:32.370 --> 00:08:33.720
print zebra dart,

00:08:33.720 --> 00:08:34.450
get color,

00:08:34.450 --> 00:08:39.640
don't get color name and you also see if we are beans An XML file.

00:08:39.640 --> 00:08:41.640
Change this to black and white one,

00:08:41.640 --> 00:08:42.450
for example.

00:08:42.450 --> 00:08:43.980
In result,

00:08:43.980 --> 00:08:51.600
we yet an error since it is trying to look for a bean called a black and white right air

00:08:51.600 --> 00:08:54.810
creating being with name zebra defined in class path resource.

00:08:54.810 --> 00:08:55.100
Right,

00:08:55.100 --> 00:08:56.220
Um,

00:08:56.220 --> 00:08:57.540
it's looking for ah,

00:08:57.540 --> 00:09:01.540
reference to a black and white bean and we don't have a reference with the called black and

00:09:01.540 --> 00:09:01.800
white.

00:09:01.800 --> 00:09:03.000
We only have black and white one.

00:09:03.000 --> 00:09:05.430
The result can't find that being in a result,

00:09:05.430 --> 00:09:06.390
that throws an error.

00:09:06.390 --> 00:09:13.080
But if we change it back then and no problem there all right,

00:09:13.080 --> 00:09:15.050
so now let's move on to intervene.

00:09:15.050 --> 00:09:17.070
So this is just gonna be intervenes are essentially.

00:09:17.070 --> 00:09:18.590
If we don't want to use the ref tag,

00:09:18.590 --> 00:09:19.760
we can use intervenes.

00:09:19.760 --> 00:09:20.980
Let's take a look at how they work.

00:09:20.980 --> 00:09:21.770
All right,

00:09:21.770 --> 00:09:24.930
so we don't necessarily need to use the ref tag.

00:09:24.930 --> 00:09:29.630
We could just declare the being in between in between the beginning and and property tax.

00:09:29.630 --> 00:09:34.460
So here we have a B 90 zebra class calm example package animal are pretty simple.

00:09:34.460 --> 00:09:37.240
And then we have a property name is equal to color.

00:09:37.240 --> 00:09:42.120
So we assigned the property name eso with property with the name color will get assigned

00:09:42.120 --> 00:09:46.320
Whatever is between here and notice how we don't actually have a backslash here was just

00:09:46.320 --> 00:09:49.640
means that we don't actually end this property tag.

00:09:49.640 --> 00:09:52.950
This property tag is ended right here.

00:09:52.950 --> 00:09:54.040
So it's just,

00:09:54.040 --> 00:09:54.220
you know,

00:09:54.220 --> 00:09:57.870
Exhale XML works right here with backslash property.

00:09:57.870 --> 00:09:58.720
That's where it's actually end.

00:09:58.720 --> 00:10:02.820
His family is in between here would actually be referring or setting the value of the

00:10:02.820 --> 00:10:03.550
property tech.

00:10:03.550 --> 00:10:06.540
Then here we have an inner bean.

00:10:06.540 --> 00:10:08.320
I d equals black and white.

00:10:08.320 --> 00:10:09.520
And we don't actually need an I d.

00:10:09.520 --> 00:10:09.770
Here.

00:10:09.770 --> 00:10:11.880
Since in any way we'll get set.

00:10:11.880 --> 00:10:13.190
You can't have it.

00:10:13.190 --> 00:10:13.450
I mean,

00:10:13.450 --> 00:10:15.120
you don't break the application anything,

00:10:15.120 --> 00:10:16.200
but you don't actually need it.

00:10:16.200 --> 00:10:16.920
There's no point.

00:10:16.920 --> 00:10:19.250
And so when the class is gonna be calm.

00:10:19.250 --> 00:10:19.790
Example.

00:10:19.790 --> 00:10:20.650
Package color.

00:10:20.650 --> 00:10:24.610
Construct our constructor argument Black and white.

00:10:24.610 --> 00:10:26.940
Conservative argument 56 All pretty simple.

00:10:26.940 --> 00:10:32.280
So just setting the name and idea of the bean here we set the color property of an animal

00:10:32.280 --> 00:10:34.830
being toe another being black and white that we created previously.

00:10:34.830 --> 00:10:35.630
So when we run this,

00:10:35.630 --> 00:10:36.120
we get,

00:10:36.120 --> 00:10:37.030
um,

00:10:37.030 --> 00:10:40.050
application contacts being the XML Zebra,

00:10:40.050 --> 00:10:41.550
zebra,

00:10:41.550 --> 00:10:42.150
dark in color,

00:10:42.150 --> 00:10:43.040
dark color name.

00:10:43.040 --> 00:10:44.220
And we get black and white,

00:10:44.220 --> 00:10:45.850
so as as predicted.

00:10:45.850 --> 00:10:49.290
Now let's go in and actually take a look at how this works in the coat.

00:10:49.290 --> 00:10:50.400
All right,

00:10:50.400 --> 00:10:51.720
so it's going to modify it.

00:10:51.720 --> 00:10:54.890
We're gonna go our beans that I go to our beans are xml file.

00:10:54.890 --> 00:10:57.030
We are going to do it.

00:10:57.030 --> 00:10:59.050
This back.

00:10:59.050 --> 00:11:00.510
There we go.

00:11:00.510 --> 00:11:01.020
All right,

00:11:01.020 --> 00:11:01.390
Now,

00:11:01.390 --> 00:11:04.650
let's go ahead and change this right here.

00:11:04.650 --> 00:11:07.490
Let's copy this and delete it.

00:11:07.490 --> 00:11:12.010
Now we're gonna delete the ref tag and delete this as well.

00:11:12.010 --> 00:11:14.510
And now we're gonna close off this property tag.

00:11:14.510 --> 00:11:17.640
And in between the closing and ending property tag,

00:11:17.640 --> 00:11:20.040
we're gonna add our intervene.

00:11:20.040 --> 00:11:21.570
There we go.

00:11:21.570 --> 00:11:24.240
And we're gonna remove the i d just for demonstration purposes.

00:11:24.240 --> 00:11:25.950
to sure that you don't actually need an I d.

00:11:25.950 --> 00:11:27.560
And there we go.

00:11:27.560 --> 00:11:28.150
All right.

00:11:28.150 --> 00:11:31.590
And now let's go ahead and run this class.

00:11:31.590 --> 00:11:34.450
Run this application.

00:11:34.450 --> 00:11:35.110
Um,

00:11:35.110 --> 00:11:38.210
everything say the same here and we should get.

00:11:38.210 --> 00:11:40.210
I'll save everything.

00:11:40.210 --> 00:11:41.750
And there we go,

00:11:41.750 --> 00:11:45.170
so you can see we get the exact same output.

00:11:45.170 --> 00:11:47.260
So in being an XML file,

00:11:47.260 --> 00:11:51.150
it just specifies a property named Color and assign it the intervene,

00:11:51.150 --> 00:11:52.230
uh,

00:11:52.230 --> 00:11:53.180
this being here.

00:11:53.180 --> 00:11:57.860
So with the constructor argument values we called the black and white and the cost regular

00:11:57.860 --> 00:12:00.920
argument constructor argument values equal to 56.

00:12:00.920 --> 00:12:02.500
Now it's going to bring back the I.

00:12:02.500 --> 00:12:03.740
D field here.

00:12:03.740 --> 00:12:04.850
Let's see what that does.

00:12:04.850 --> 00:12:05.870
Well,

00:12:05.870 --> 00:12:07.120
let's just say the ideas.

00:12:07.120 --> 00:12:09.720
I don't know.

00:12:09.720 --> 00:12:10.720
Let's just say yeah,

00:12:10.720 --> 00:12:12.110
black and white as before.

00:12:12.110 --> 00:12:14.000
Here we go.

00:12:14.000 --> 00:12:19.600
And now if you run this there,

00:12:19.600 --> 00:12:22.320
you'll see it's exactly the same exact things to really No,

00:12:22.320 --> 00:12:23.960
no difference.

00:12:23.960 --> 00:12:31.970
Although you may note if we go to do it was important to note is that if we do color C

00:12:31.970 --> 00:12:43.160
equals color application context dark yet bean um,

00:12:43.160 --> 00:12:49.750
black and white and I think it's from a cat lower case letter Here we go.

00:12:49.750 --> 00:12:51.290
Is it from a lower case?

00:12:51.290 --> 00:12:51.700
Yetis.

00:12:51.700 --> 00:12:52.780
And then,

00:12:52.780 --> 00:12:53.060
you know,

00:12:53.060 --> 00:12:53.950
if you run this,

00:12:53.950 --> 00:12:55.300
actually,

00:12:55.300 --> 00:12:56.950
I was going to print something as well.

00:12:56.950 --> 00:12:57.280
What's?

00:12:57.280 --> 00:12:57.510
Nope.

00:12:57.510 --> 00:12:58.270
I quit the palm,

00:12:58.270 --> 00:12:59.860
but XML file There we go.

00:12:59.860 --> 00:13:02.030
Let's print something as well regarding the color.

00:13:02.030 --> 00:13:09.350
So let's do system dot out to Dr Print Ellen si dot Yet color I d.

00:13:09.350 --> 00:13:11.510
And now if you run this,

00:13:11.510 --> 00:13:14.980
you'll see we actually get an air.

00:13:14.980 --> 00:13:15.780
Since,

00:13:15.780 --> 00:13:16.450
um,

00:13:16.450 --> 00:13:18.960
it can't find the black and white being.

00:13:18.960 --> 00:13:20.450
So if you go to beans,

00:13:20.450 --> 00:13:20.990
XML,

00:13:20.990 --> 00:13:21.380
you'll see.

00:13:21.380 --> 00:13:23.160
So since it's an intervene,

00:13:23.160 --> 00:13:24.820
it isn't actually created,

00:13:24.820 --> 00:13:26.700
and we can't actually access it.

00:13:26.700 --> 00:13:30.450
So that's why I wanted before when I said the idea was practically useless,

00:13:30.450 --> 00:13:31.360
you could think,

00:13:31.360 --> 00:13:31.910
um,

00:13:31.910 --> 00:13:32.320
well,

00:13:32.320 --> 00:13:32.510
no,

00:13:32.510 --> 00:13:32.680
I mean,

00:13:32.680 --> 00:13:34.460
it's not pointless because still access it.

00:13:34.460 --> 00:13:35.210
You know,

00:13:35.210 --> 00:13:35.770
um,

00:13:35.770 --> 00:13:37.740
like this Well,

00:13:37.740 --> 00:13:37.940
yeah,

00:13:37.940 --> 00:13:38.500
we can't.

00:13:38.500 --> 00:13:41.210
So since this is actually an inter bean,

00:13:41.210 --> 00:13:42.310
it doesn't get created,

00:13:42.310 --> 00:13:44.050
and we can't actually access that,

00:13:44.050 --> 00:13:44.930
Just,

00:13:44.930 --> 00:13:45.270
you know,

00:13:45.270 --> 00:13:47.100
by using system out Brundtland seed out,

00:13:47.100 --> 00:13:47.540
get color,

00:13:47.540 --> 00:13:47.850
I d.

00:13:47.850 --> 00:13:50.850
But if we changed our you know,

00:13:50.850 --> 00:13:57.430
put this being outside of their and we'll hear we actually get an error.

00:13:57.430 --> 00:13:59.100
So I deal in is not valid.

00:13:59.100 --> 00:14:03.460
Respect to its type I d What's what is your problem?

00:14:03.460 --> 00:14:03.930
Actually,

00:14:03.930 --> 00:14:04.970
person most likely.

00:14:04.970 --> 00:14:05.600
Just Yeah,

00:14:05.600 --> 00:14:06.830
There we go sit in the naming here.

00:14:06.830 --> 00:14:10.950
So now if we do it like this black and white one.

00:14:10.950 --> 00:14:12.650
Now,

00:14:12.650 --> 00:14:13.390
if you're on this,

00:14:13.390 --> 00:14:16.100
you'll see we get 56 as expected.

00:14:16.100 --> 00:14:18.550
But if we put river back to black and white,

00:14:18.550 --> 00:14:22.210
then air So yeah,

00:14:22.210 --> 00:14:25.070
so just we can't have If we haven't intervene,

00:14:25.070 --> 00:14:26.990
we can't actually refer to it.

00:14:26.990 --> 00:14:29.140
All right.

00:14:29.140 --> 00:14:29.770
And so now,

00:14:29.770 --> 00:14:32.500
essentially all we have to go over in this lessons,

00:14:32.500 --> 00:14:37.160
that's just stuff and understand here that the inner being is actually a different way of,

00:14:37.160 --> 00:14:37.380
you know,

00:14:37.380 --> 00:14:38.310
writing the ref tags.

00:14:38.310 --> 00:14:40.160
So instead of having this inter being here,

00:14:40.160 --> 00:14:41.550
we could remove this.

00:14:41.550 --> 00:14:42.840
And since that I have,

00:14:42.840 --> 00:14:46.350
ref is equal to black and white one.

00:14:46.350 --> 00:14:50.310
So this is the same exact thing.

00:14:50.310 --> 00:14:54.790
So putting this into here and removing this ref tag is the same exact thing.

00:14:54.790 --> 00:14:57.600
I just having a ref tag that points to this being here.

00:14:57.600 --> 00:14:58.670
So just do different.

00:14:58.670 --> 00:15:00.050
Two different way of doing things.

00:15:00.050 --> 00:15:01.340
So if you don't want to use the ref tack.

00:15:01.340 --> 00:15:02.200
Then you can use this.

00:15:02.200 --> 00:15:03.810
And it can be useful,

00:15:03.810 --> 00:15:04.170
for example,

00:15:04.170 --> 00:15:07.330
that creating just a bead once and you're not going to use it again in your application

00:15:07.330 --> 00:15:08.090
100%.

00:15:08.090 --> 00:15:09.650
Then you can use the intervene.

00:15:09.650 --> 00:15:10.870
But if you aren't,

00:15:10.870 --> 00:15:11.450
you know,

00:15:11.450 --> 00:15:13.860
if you're gonna be using the being it again and again,

00:15:13.860 --> 00:15:17.860
then recreating the intervene again again also doesn't make much sense.

00:15:17.860 --> 00:15:23.580
So just you the ref tag if you're gonna be using one bean multiple times or referring to it

00:15:23.580 --> 00:15:23.580
.

00:15:23.580 --> 00:15:25.280
All right,

00:15:25.280 --> 00:15:27.250
so now let's send some homework.

00:15:27.250 --> 00:15:28.350
All right,

00:15:28.350 --> 00:15:29.410
so homework is pretty simple.

00:15:29.410 --> 00:15:32.330
So we're just gonna create a being size,

00:15:32.330 --> 00:15:33.820
so it's gonna be a bean size,

00:15:33.820 --> 00:15:34.960
You know what I say?

00:15:34.960 --> 00:15:35.540
Being size.

00:15:35.540 --> 00:15:36.320
I mean ah,

00:15:36.320 --> 00:15:37.570
class size.

00:15:37.570 --> 00:15:40.020
However you want being class,

00:15:40.020 --> 00:15:40.840
it's gonna have,

00:15:40.840 --> 00:15:41.010
you know,

00:15:41.010 --> 00:15:43.390
a constructor Get inside our methods and someone Ah,

00:15:43.390 --> 00:15:45.280
with a double weight and double height,

00:15:45.280 --> 00:15:47.490
attributes for two attributes weight and height.

00:15:47.490 --> 00:15:48.410
Both doubles,

00:15:48.410 --> 00:15:50.500
then add a size.

00:15:50.500 --> 00:15:51.920
Attributes the animal class.

00:15:51.920 --> 00:15:52.860
So it's gonna have size,

00:15:52.860 --> 00:15:53.450
size,

00:15:53.450 --> 00:15:54.420
um,

00:15:54.420 --> 00:15:59.070
and the necessary gettin centers as well as well as a constructor that we have created,

00:15:59.070 --> 00:16:04.400
then set the size attributes in the animal class using inter beans we just use.

00:16:04.400 --> 00:16:10.610
The use intervenes in the knowledge that we gain from inter beans to set the size attribute

00:16:10.610 --> 00:16:11.850
in the animal class.

00:16:11.850 --> 00:16:14.040
So create a resemble a zebra.

00:16:14.040 --> 00:16:21.150
We would done set the size to something like 54.6 and then the height to the weight to 54.6

00:16:21.150 --> 00:16:22.340
and in the height to,

00:16:22.340 --> 00:16:23.050
um,

00:16:23.050 --> 00:16:26.150
to 82.5.

00:16:26.150 --> 00:16:26.670
I don't know.

00:16:26.670 --> 00:16:27.220
I don't know.

00:16:27.220 --> 00:16:27.860
Maybe it's meters.

00:16:27.860 --> 00:16:28.590
Maybe it's centimeters,

00:16:28.590 --> 00:16:29.540
probably not meters,

00:16:29.540 --> 00:16:32.110
since that would be a very tall labor.

00:16:32.110 --> 00:16:34.290
But you get what I mean,

00:16:34.290 --> 00:16:35.150
um,

00:16:35.150 --> 00:16:41.220
and then set the animals size attributes to the size that we've created using intervenes.

00:16:41.220 --> 00:16:42.930
All right,

00:16:42.930 --> 00:16:44.110
so very simple of homework,

00:16:44.110 --> 00:16:45.230
if you can understand it.

00:16:45.230 --> 00:16:46.970
My explanation There was Ah,

00:16:46.970 --> 00:16:47.630
big confusing,

00:16:47.630 --> 00:16:48.200
I understand.

00:16:48.200 --> 00:16:50.180
But you could always to read this,

00:16:50.180 --> 00:16:50.710
you know,

00:16:50.710 --> 00:16:51.510
um,

00:16:51.510 --> 00:16:52.100
Hole,

00:16:52.100 --> 00:16:54.200
read this assignment.

00:16:54.200 --> 00:16:55.460
If you really don't understand it,

00:16:55.460 --> 00:16:56.110
remember it.

00:16:56.110 --> 00:16:58.620
This isn't necessarily what you have to do,

00:16:58.620 --> 00:16:59.940
so it's not gonna,

00:16:59.940 --> 00:17:00.420
you know,

00:17:00.420 --> 00:17:02.010
it's not the only thing you can do.

00:17:02.010 --> 00:17:03.750
What's important is that you understand the concept,

00:17:03.750 --> 00:17:05.620
so if you want to do something else like?

00:17:05.620 --> 00:17:05.990
I don't know.

00:17:05.990 --> 00:17:08.630
Maybe you want to create something completely different.

00:17:08.630 --> 00:17:10.070
You want to create a teacher?

00:17:10.070 --> 00:17:10.690
Ah,

00:17:10.690 --> 00:17:12.520
a classroom class that has,

00:17:12.520 --> 00:17:12.720
you know,

00:17:12.720 --> 00:17:13.760
a teacher of student.

00:17:13.760 --> 00:17:15.710
You can do it if you want.

00:17:15.710 --> 00:17:18.330
Just use inter beans and support that you understand the concept.

00:17:18.330 --> 00:17:20.190
And not that you just do the homework.

00:17:20.190 --> 00:17:21.250
So if you want to something else.

00:17:21.250 --> 00:17:21.850
By all means.

00:17:21.850 --> 00:17:23.100
As long as you understand the concept,

00:17:23.100 --> 00:17:23.550
it's OK.

00:17:23.550 --> 00:17:24.700
All right.

00:17:24.700 --> 00:17:25.100
So anyway,

00:17:25.100 --> 00:17:25.990
I wish you luck.

00:17:25.990 --> 00:17:27.850
And also next time soon.

