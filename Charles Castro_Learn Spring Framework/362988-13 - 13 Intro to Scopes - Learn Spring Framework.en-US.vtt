WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.810
Hello there.

00:00:00.810 --> 00:00:03.310
And welcome back to this spring development course.

00:00:03.310 --> 00:00:07.450
So last time we went over auto wiring and used on homework.

00:00:07.450 --> 00:00:13.610
To do your job was to create application that would have three animal beans.

00:00:13.610 --> 00:00:14.530
So zebra one,

00:00:14.530 --> 00:00:15.990
Sieber to and zebra three.

00:00:15.990 --> 00:00:19.210
It would then was zebra.

00:00:19.210 --> 00:00:21.630
One would use art a wire by name.

00:00:21.630 --> 00:00:23.950
Zebra two would use unaware by type.

00:00:23.950 --> 00:00:27.350
And then zebra three would use art a wire by constructor.

00:00:27.350 --> 00:00:31.150
So here is essentially what you should have done.

00:00:31.150 --> 00:00:32.350
Sure,

00:00:32.350 --> 00:00:33.490
I've been ID equals Ebro.

00:00:33.490 --> 00:00:36.140
One are the wires by name being I.

00:00:36.140 --> 00:00:41.180
D Z brought to Ottawa earns by type and then being I d d Breaux three auto wires by

00:00:41.180 --> 00:00:41.810
constructor.

00:00:41.810 --> 00:00:45.660
They just have a being I d color here.

00:00:45.660 --> 00:00:48.820
So the bean will look for color.

00:00:48.820 --> 00:00:49.450
Um,

00:00:49.450 --> 00:00:50.060
uh,

00:00:50.060 --> 00:00:54.610
Zebra one will look for a being color to set the color of zebra one.

00:00:54.610 --> 00:00:56.150
Um,

00:00:56.150 --> 00:01:06.050
zebra two will look for type in for a color type and a sign this color to zebra to color.

00:01:06.050 --> 00:01:10.730
Then zebra three will look for color type is well,

00:01:10.730 --> 00:01:15.080
and then said it using the constructor of zebra three and,

00:01:15.080 --> 00:01:15.400
uh,

00:01:15.400 --> 00:01:15.850
yeah,

00:01:15.850 --> 00:01:17.850
and not thesis enter method for color.

00:01:17.850 --> 00:01:18.780
All right.

00:01:18.780 --> 00:01:19.640
It was going to run this.

00:01:19.640 --> 00:01:20.440
And in theory,

00:01:20.440 --> 00:01:25.090
we should get 01 choleric was black and white deeper to call.

00:01:25.090 --> 00:01:25.770
It was black and white,

00:01:25.770 --> 00:01:28.450
and then zebra three color equals black and white as well.

00:01:28.450 --> 00:01:32.180
So let's go ahead and run this and see what happens.

00:01:32.180 --> 00:01:35.740
All right?

00:01:35.740 --> 00:01:36.450
We got an exemption,

00:01:36.450 --> 00:01:37.040
so we gotta know.

00:01:37.040 --> 00:01:37.810
Pointer exception.

00:01:37.810 --> 00:01:38.860
Why is this happening?

00:01:38.860 --> 00:01:39.290
Well,

00:01:39.290 --> 00:01:42.760
in our being that XML file in our zebra three,

00:01:42.760 --> 00:01:44.810
it will auto wire it by constructor.

00:01:44.810 --> 00:01:45.750
So as such,

00:01:45.750 --> 00:01:49.480
it will take a look at the constructors inside our animal class.

00:01:49.480 --> 00:01:51.030
So we have two constructors here,

00:01:51.030 --> 00:01:51.410
I think.

00:01:51.410 --> 00:01:51.610
Yeah.

00:01:51.610 --> 00:01:54.700
So on empty constructor and then a constructor with color,

00:01:54.700 --> 00:01:56.150
color and size size.

00:01:56.150 --> 00:01:58.140
And so it'll take a look.

00:01:58.140 --> 00:01:59.410
We have a constructor with color,

00:01:59.410 --> 00:02:00.480
color and size size.

00:02:00.480 --> 00:02:01.600
So do we have,

00:02:01.600 --> 00:02:02.560
um,

00:02:02.560 --> 00:02:03.390
to beans,

00:02:03.390 --> 00:02:04.450
color and size.

00:02:04.450 --> 00:02:06.700
We don't We only have color.

00:02:06.700 --> 00:02:07.430
We don't have size.

00:02:07.430 --> 00:02:10.000
And so that's what actually throws exception.

00:02:10.000 --> 00:02:16.480
It doesn't call the constructor because there is no constructor that would be available for

00:02:16.480 --> 00:02:17.290
just color.

00:02:17.290 --> 00:02:19.040
So in our animal class,

00:02:19.040 --> 00:02:21.690
if we change our constructor now to just color,

00:02:21.690 --> 00:02:23.180
color and remove the size.

00:02:23.180 --> 00:02:29.010
Then now we actually get there.

00:02:29.010 --> 00:02:29.230
We go.

00:02:29.230 --> 00:02:30.260
So called constructor.

00:02:30.260 --> 00:02:34.070
So it calls the constructor before we actually do,

00:02:34.070 --> 00:02:34.880
they get being.

00:02:34.880 --> 00:02:35.270
So,

00:02:35.270 --> 00:02:36.420
uh,

00:02:36.420 --> 00:02:43.500
as we went over spring will create our beans before we actually call them than actually

00:02:43.500 --> 00:02:44.170
being scopes.

00:02:44.170 --> 00:02:47.650
We're gonna be going over in today's lesson as well as in the next lesson.

00:02:47.650 --> 00:02:50.440
So what does that mean?

00:02:50.440 --> 00:02:50.790
Well,

00:02:50.790 --> 00:02:51.640
uh,

00:02:51.640 --> 00:02:52.890
first of all that means created.

00:02:52.890 --> 00:02:53.920
And then once we call it,

00:02:53.920 --> 00:02:57.120
we actually get that being so that that's all that it means anyway.

00:02:57.120 --> 00:02:58.340
So here we get everything.

00:02:58.340 --> 00:02:58.690
Correct.

00:02:58.690 --> 00:02:59.030
Now,

00:02:59.030 --> 00:03:01.700
if you actually went ahead and did this yourself,

00:03:01.700 --> 00:03:03.550
you should have gotten an air.

00:03:03.550 --> 00:03:06.630
Remember how we had this right here?

00:03:06.630 --> 00:03:08.050
So private animal animal.

00:03:08.050 --> 00:03:09.140
Now,

00:03:09.140 --> 00:03:10.180
if we go and run this,

00:03:10.180 --> 00:03:12.510
we'll get an air.

00:03:12.510 --> 00:03:14.000
It can't.

00:03:14.000 --> 00:03:20.480
It can't create the being since it tries to auto wire this animal being here.

00:03:20.480 --> 00:03:20.950
And,

00:03:20.950 --> 00:03:22.190
as you can see,

00:03:22.190 --> 00:03:28.560
if you go to their ago So no qualifying being found of type com.

00:03:28.560 --> 00:03:30.200
Example package animal available.

00:03:30.200 --> 00:03:31.990
Expected single matching being but found.

00:03:31.990 --> 00:03:33.440
Two zebra one and zebra three.

00:03:33.440 --> 00:03:36.230
Right here on zebra to it on a wires.

00:03:36.230 --> 00:03:36.970
It by type.

00:03:36.970 --> 00:03:39.290
So it looks for and it's trying to Otto,

00:03:39.290 --> 00:03:42.270
wire this animal private animal animal here.

00:03:42.270 --> 00:03:43.130
So takes a look,

00:03:43.130 --> 00:03:46.770
and it checks for beans with of type animal,

00:03:46.770 --> 00:03:49.440
and it finds to find zebra one and zebra three.

00:03:49.440 --> 00:03:55.020
And so it doesn't exactly know which animal it is supposed to.

00:03:55.020 --> 00:03:55.620
Um,

00:03:55.620 --> 00:03:57.970
a sign to zebra to animals.

00:03:57.970 --> 00:03:59.380
Okay,

00:03:59.380 --> 00:04:00.170
so for that,

00:04:00.170 --> 00:04:01.680
we actually have a handy little,

00:04:01.680 --> 00:04:02.250
um,

00:04:02.250 --> 00:04:12.650
tag called auto wire candidate.

00:04:12.650 --> 00:04:18.350
And then we're gonna sign False.

00:04:18.350 --> 00:04:24.320
So all this will do is essentially it just means that this being here will not be able to

00:04:24.320 --> 00:04:26.040
be art a wire to anything.

00:04:26.040 --> 00:04:27.740
So this will not be so.

00:04:27.740 --> 00:04:29.660
If he checks are out a word by type,

00:04:29.660 --> 00:04:31.280
it won't see zebra three.

00:04:31.280 --> 00:04:33.540
Since Seabra three is not auto wearable,

00:04:33.540 --> 00:04:33.950
essential.

00:04:33.950 --> 00:04:36.460
And so does the zebra one and a little of signs.

00:04:36.460 --> 00:04:37.090
Ebro want to it.

00:04:37.090 --> 00:04:40.930
So now it's going to run this And now what's Nope,

00:04:40.930 --> 00:04:41.230
Nope,

00:04:41.230 --> 00:04:41.650
nope.

00:04:41.650 --> 00:04:44.140
I accidentally ran the XML file.

00:04:44.140 --> 00:04:45.750
That is not what you want to do.

00:04:45.750 --> 00:04:47.080
They're ago.

00:04:47.080 --> 00:04:47.930
Let's run apple,

00:04:47.930 --> 00:04:48.330
Gangster.

00:04:48.330 --> 00:04:48.750
There we go.

00:04:48.750 --> 00:04:49.640
All right.

00:04:49.640 --> 00:04:55.080
And now you'll see we actually get it without any errors and it assigns this animal zebra

00:04:55.080 --> 00:04:56.440
one to,

00:04:56.440 --> 00:04:57.110
um,

00:04:57.110 --> 00:04:59.270
zebra to animal class.

00:04:59.270 --> 00:05:00.520
And same goes for zebra one.

00:05:00.520 --> 00:05:02.980
It'll assign zebra to to the or actually,

00:05:02.980 --> 00:05:03.080
no.

00:05:03.080 --> 00:05:04.760
In this case says there's no name.

00:05:04.760 --> 00:05:07.450
The one actually signed anything since it goes by name and by type.

00:05:07.450 --> 00:05:09.110
But is he brought to it'll?

00:05:09.110 --> 00:05:10.370
It'll check by type,

00:05:10.370 --> 00:05:13.290
and I'll find just Ebro one and Nazi for three.

00:05:13.290 --> 00:05:16.450
Since we have got a wire candidate equals false.

00:05:16.450 --> 00:05:17.940
So in our application start class,

00:05:17.940 --> 00:05:18.870
if we now do,

00:05:18.870 --> 00:05:22.320
um uh,

00:05:22.320 --> 00:05:22.740
see,

00:05:22.740 --> 00:05:33.750
so zebra three don't get animal dot Get I'm a nose to get color dot Get color I d.

00:05:33.750 --> 00:05:42.020
Now we should get to to Ah,

00:05:42.020 --> 00:05:42.330
whoops.

00:05:42.330 --> 00:05:42.900
Nope.

00:05:42.900 --> 00:05:45.800
Okay.

00:05:45.800 --> 00:05:46.090
I see.

00:05:46.090 --> 00:05:46.930
So in this case,

00:05:46.930 --> 00:05:47.840
it suppose queasy,

00:05:47.840 --> 00:05:53.540
but to knows you for three years ago since it assigns it to zebra to Nazi referee.

00:05:53.540 --> 00:05:54.070
There were ghosts.

00:05:54.070 --> 00:05:54.570
Zebra three.

00:05:54.570 --> 00:05:55.980
Color equals two,

00:05:55.980 --> 00:05:56.650
as expected.

00:05:56.650 --> 00:05:58.310
All right,

00:05:58.310 --> 00:05:59.790
that is essentially auto wiring.

00:05:59.790 --> 00:06:02.390
Now on a wiring is actually very important spring.

00:06:02.390 --> 00:06:03.250
Um,

00:06:03.250 --> 00:06:05.460
but I really wouldn't recommend you do it.

00:06:05.460 --> 00:06:09.150
So if you are going to be using XML auto wiring,

00:06:09.150 --> 00:06:11.140
it gets really confusing.

00:06:11.140 --> 00:06:12.750
So what if you have multiple beings.

00:06:12.750 --> 00:06:13.930
What if you have multiple constructions?

00:06:13.930 --> 00:06:15.010
What if you have multiple?

00:06:15.010 --> 00:06:16.990
I don't know classes.

00:06:16.990 --> 00:06:19.950
What if some developer will come along your code in,

00:06:19.950 --> 00:06:21.090
I don't know,

00:06:21.090 --> 00:06:22.650
a year or so,

00:06:22.650 --> 00:06:23.700
and we'll take a look at it.

00:06:23.700 --> 00:06:27.090
He doesn't really know how the classes air structured,

00:06:27.090 --> 00:06:30.850
and you have the super complex auto wired XML file.

00:06:30.850 --> 00:06:35.560
And he will He will quit immediately as soon as he sees that.

00:06:35.560 --> 00:06:40.080
So it's best not to use the water wire annotation all that much.

00:06:40.080 --> 00:06:43.680
If you have a very simple application and just trying to save a few lines of code,

00:06:43.680 --> 00:06:44.870
then by all means,

00:06:44.870 --> 00:06:45.150
you know.

00:06:45.150 --> 00:06:47.240
But if you are building,

00:06:47.240 --> 00:06:47.670
ah,

00:06:47.670 --> 00:06:51.020
huge application that will that need to be maintained,

00:06:51.020 --> 00:06:52.550
obviously.

00:06:52.550 --> 00:06:55.950
Maybe keep it down with the auto wiring.

00:06:55.950 --> 00:06:57.890
All right,

00:06:57.890 --> 00:06:58.420
um,

00:06:58.420 --> 00:07:00.960
so it essentially how auto wiring works in spring.

00:07:00.960 --> 00:07:02.040
All right,

00:07:02.040 --> 00:07:02.260
so there,

00:07:02.260 --> 00:07:06.330
because today we're gonna be talking about being scopes on the next time,

00:07:06.330 --> 00:07:08.250
we're gonna go over them in more detail.

00:07:08.250 --> 00:07:13.270
So being scopes are actually sort of a smooth transition,

00:07:13.270 --> 00:07:16.350
sort of for us into spring web.

00:07:16.350 --> 00:07:17.620
Um,

00:07:17.620 --> 00:07:18.220
Web,

00:07:18.220 --> 00:07:18.850
NBC.

00:07:18.850 --> 00:07:19.950
I would really like to call it,

00:07:19.950 --> 00:07:20.350
but yeah,

00:07:20.350 --> 00:07:21.100
so,

00:07:21.100 --> 00:07:25.510
essentially being scopes declare when our beans will be created.

00:07:25.510 --> 00:07:25.980
There actually,

00:07:25.980 --> 00:07:28.970
five different being scopes in spring.

00:07:28.970 --> 00:07:31.950
So we have Singleton prototype,

00:07:31.950 --> 00:07:32.760
um,

00:07:32.760 --> 00:07:40.490
request session and Global three of those requests session and global are actually used

00:07:40.490 --> 00:07:41.510
inside spring,

00:07:41.510 --> 00:07:43.310
NBC and their related to spring,

00:07:43.310 --> 00:07:44.350
NBC Firmly related.

00:07:44.350 --> 00:07:45.770
They rely on them,

00:07:45.770 --> 00:07:50.290
we're gonna be going over them in the next lesson in more detail.

00:07:50.290 --> 00:07:51.060
But in this lesson,

00:07:51.060 --> 00:07:55.460
we're just gonna be taking a look at the very basics of spring beans.

00:07:55.460 --> 00:07:56.380
And Russell,

00:07:56.380 --> 00:07:58.150
we gonna be taking a look at,

00:07:58.150 --> 00:07:59.880
um,

00:07:59.880 --> 00:08:01.750
Singleton and prototype,

00:08:01.750 --> 00:08:02.780
um,

00:08:02.780 --> 00:08:03.270
Scopes.

00:08:03.270 --> 00:08:05.370
So first of all,

00:08:05.370 --> 00:08:06.990
that's going to actually clean up record a little bit.

00:08:06.990 --> 00:08:10.170
So we're just gonna have this last zebra one.

00:08:10.170 --> 00:08:10.660
Okay,

00:08:10.660 --> 00:08:11.880
That's not gonna have for now.

00:08:11.880 --> 00:08:12.690
Now,

00:08:12.690 --> 00:08:13.980
we're gonna add a scope to it,

00:08:13.980 --> 00:08:15.390
actually know what's actually keep,

00:08:15.390 --> 00:08:16.050
um,

00:08:16.050 --> 00:08:17.810
zebra three.

00:08:17.810 --> 00:08:18.260
Okay,

00:08:18.260 --> 00:08:21.250
that we're gonna have so zebra three.

00:08:21.250 --> 00:08:24.350
So now you'll see if we actually going and are Run Zebra three.

00:08:24.350 --> 00:08:27.190
What's will actually get an error here.

00:08:27.190 --> 00:08:29.450
We have to delete Deceiver two zebra one as well,

00:08:29.450 --> 00:08:32.610
since they don't do this anymore.

00:08:32.610 --> 00:08:33.350
There we go.

00:08:33.350 --> 00:08:34.090
All right,

00:08:34.090 --> 00:08:35.050
so it's gonna run this.

00:08:35.050 --> 00:08:37.240
Okay,

00:08:37.240 --> 00:08:38.480
so it causes constructor,

00:08:38.480 --> 00:08:43.400
so you'll see that the bean is actually created before we actually get it.

00:08:43.400 --> 00:08:48.040
So it call the constructor before we refer to it and get being.

00:08:48.040 --> 00:08:51.190
So if you go to actually comment this out and this out as well,

00:08:51.190 --> 00:09:00.520
our beings an XML file will still create the zebra beat three bean and still call the zebra

00:09:00.520 --> 00:09:02.970
the animal constructors you'll see in our constructor.

00:09:02.970 --> 00:09:05.340
We have we print called constructors.

00:09:05.340 --> 00:09:06.380
So it'll still in Stan.

00:09:06.380 --> 00:09:07.650
She ate it and create the B.

00:09:07.650 --> 00:09:11.770
So if we're going to run this there we go.

00:09:11.770 --> 00:09:13.720
Even though we don't refer to the bean,

00:09:13.720 --> 00:09:14.910
it's still created.

00:09:14.910 --> 00:09:18.800
This is called the Singleton scope.

00:09:18.800 --> 00:09:24.270
So this just means that our beans will be created before we refer to them.

00:09:24.270 --> 00:09:26.320
Now we have a different scope.

00:09:26.320 --> 00:09:27.650
We haven't prototype scope,

00:09:27.650 --> 00:09:30.090
Let me go and actually changes a little bit.

00:09:30.090 --> 00:09:32.450
So we're now we're gonna have scope,

00:09:32.450 --> 00:09:38.650
scope equals proto type.

00:09:38.650 --> 00:09:40.250
There we go.

00:09:40.250 --> 00:09:41.150
All right,

00:09:41.150 --> 00:09:47.280
so now let's run our application and you'll see that nothing happens.

00:09:47.280 --> 00:09:51.850
So this is the key difference between the singleton and the prototype scope.

00:09:51.850 --> 00:09:52.920
So,

00:09:52.920 --> 00:09:53.730
um,

00:09:53.730 --> 00:09:54.310
essentially,

00:09:54.310 --> 00:09:57.450
way could actually change the scope to Singleton as well.

00:09:57.450 --> 00:10:00.010
In that case,

00:10:00.010 --> 00:10:03.260
it'll actually create the be even without us referring to it.

00:10:03.260 --> 00:10:03.510
Yeah,

00:10:03.510 --> 00:10:05.940
but the singleton scope is also the default scope.

00:10:05.940 --> 00:10:07.870
So if we don't provide any scope,

00:10:07.870 --> 00:10:10.000
if you don't specify any scope,

00:10:10.000 --> 00:10:13.350
it will automatically assign the singleton scope to are being.

00:10:13.350 --> 00:10:16.060
If we have the prototype scope here,

00:10:16.060 --> 00:10:16.850
on the other hand,

00:10:16.850 --> 00:10:23.700
then it will actually create the being itself way.

00:10:23.700 --> 00:10:24.610
Don't create being.

00:10:24.610 --> 00:10:28.210
It will only create the being once we refer to it.

00:10:28.210 --> 00:10:31.670
So if we go into our application star class and now,

00:10:31.670 --> 00:10:35.860
if we refer to our zebra three than now,

00:10:35.860 --> 00:10:37.500
it'll actually create the being,

00:10:37.500 --> 00:10:39.900
as you can see,

00:10:39.900 --> 00:10:41.180
since we only refer to it.

00:10:41.180 --> 00:10:42.420
But if we don't refer to it,

00:10:42.420 --> 00:10:45.600
then we actually don't yet.

00:10:45.600 --> 00:10:46.650
We don't create the bean.

00:10:46.650 --> 00:10:50.950
So that is the difference between the singleton scope and the prototype scope.

00:10:50.950 --> 00:10:56.060
Now about the session request and global scopes.

00:10:56.060 --> 00:10:59.890
So essentially they way they work is a little bit different,

00:10:59.890 --> 00:11:00.550
actually.

00:11:00.550 --> 00:11:02.560
So first of all,

00:11:02.560 --> 00:11:06.430
for them we have we have to have a spring,

00:11:06.430 --> 00:11:07.370
um,

00:11:07.370 --> 00:11:11.680
Web aware application context.

00:11:11.680 --> 00:11:15.800
So here we just have an application context that's not actually Webber where we have to

00:11:15.800 --> 00:11:18.390
have a Web aware application context.

00:11:18.390 --> 00:11:21.800
To know this gets you have a class path XML implication context.

00:11:21.800 --> 00:11:22.650
So yeah,

00:11:22.650 --> 00:11:27.860
so we're actually gonna be going over them in more detail in the next lesson right now,

00:11:27.860 --> 00:11:32.140
we're just gonna be taking a look at how exactly they work and the high level theory of

00:11:32.140 --> 00:11:34.580
what exactly happens when we,

00:11:34.580 --> 00:11:35.240
um,

00:11:35.240 --> 00:11:36.310
use them.

00:11:36.310 --> 00:11:38.350
So take a look at exactly how they work.

00:11:38.350 --> 00:11:42.080
So the easiest understand is a request,

00:11:42.080 --> 00:11:44.250
um is a request.

00:11:44.250 --> 00:11:46.260
So our fresco,

00:11:46.260 --> 00:11:49.350
but then it just happens whenever I create a request to my websites.

00:11:49.350 --> 00:11:53.780
I've go to my website website dot com.

00:11:53.780 --> 00:11:54.950
Um,

00:11:54.950 --> 00:11:56.680
in this case,

00:11:56.680 --> 00:11:57.920
it actually takes me to a place.

00:11:57.920 --> 00:12:00.410
But let's say I go to my website.

00:12:00.410 --> 00:12:06.240
My website support 99 dot com.

00:12:06.240 --> 00:12:08.280
Okay,

00:12:08.280 --> 00:12:08.980
let's get the sites.

00:12:08.980 --> 00:12:10.060
The site can be reached.

00:12:10.060 --> 00:12:13.530
But if I did have a website on the Port 99 in this case,

00:12:13.530 --> 00:12:15.480
what it would do and there was a spring there,

00:12:15.480 --> 00:12:19.730
this would create being if in a request scopes,

00:12:19.730 --> 00:12:24.300
this will just create it on the request and then if I re request,

00:12:24.300 --> 00:12:25.400
it'll create,

00:12:25.400 --> 00:12:28.260
it'll recreate the bean Every single time I request,

00:12:28.260 --> 00:12:32.370
it will automatically recreate the beans every time I refresh the page that is actually

00:12:32.370 --> 00:12:33.250
sending a request.

00:12:33.250 --> 00:12:34.520
Okay,

00:12:34.520 --> 00:12:37.750
then there is a session being so.

00:12:37.750 --> 00:12:43.050
The session essentially just means Http session is something that happens when you I

00:12:43.050 --> 00:12:44.240
request a website.

00:12:44.240 --> 00:12:48.010
So the way sessions are created and destroyed very little bit,

00:12:48.010 --> 00:12:52.380
depending on the browser that a person is using and the operating system as well,

00:12:52.380 --> 00:12:53.780
if there's a lot of different factors there,

00:12:53.780 --> 00:12:59.000
but essentially a session is sort of something that is it's a little bit more than a

00:12:59.000 --> 00:12:59.660
request.

00:12:59.660 --> 00:13:00.090
So,

00:13:00.090 --> 00:13:00.680
um,

00:13:00.680 --> 00:13:07.220
let's say that in a request I can put our knowledge to say I have a get request and I put

00:13:07.220 --> 00:13:09.820
in a value my number and it's one right.

00:13:09.820 --> 00:13:12.170
And then I changed to another part of the website,

00:13:12.170 --> 00:13:14.640
so I I I go to another link,

00:13:14.640 --> 00:13:15.040
for example,

00:13:15.040 --> 00:13:15.740
I click on a link.

00:13:15.740 --> 00:13:17.480
That request is no longer valid.

00:13:17.480 --> 00:13:19.410
So it's deleted essentially,

00:13:19.410 --> 00:13:22.390
and so my my number is now deleted as well.

00:13:22.390 --> 00:13:26.390
But if I put my number into an http session on the other hand,

00:13:26.390 --> 00:13:29.900
then even if I go to another link on the site.

00:13:29.900 --> 00:13:33.180
It will still stay there as long as this session is not destroyed.

00:13:33.180 --> 00:13:35.960
But then we also have the global session,

00:13:35.960 --> 00:13:36.760
Um,

00:13:36.760 --> 00:13:38.620
the global session scope.

00:13:38.620 --> 00:13:40.180
But that is a little more advanced.

00:13:40.180 --> 00:13:42.090
We're gonna talk about that in a necklace and a little bit,

00:13:42.090 --> 00:13:44.100
but it's really only used with Portland's.

00:13:44.100 --> 00:13:46.360
And we'll go over exactly what that is in the necklace.

00:13:46.360 --> 00:13:48.080
All right,

00:13:48.080 --> 00:13:48.160
so,

00:13:48.160 --> 00:13:48.290
no,

00:13:48.290 --> 00:13:49.020
it's this is being,

00:13:49.020 --> 00:13:49.690
um,

00:13:49.690 --> 00:13:51.030
being scopes.

00:13:51.030 --> 00:13:52.950
We also took a look at the wiring in this lesson.

00:13:52.950 --> 00:13:56.740
And the next lesson we're gonna transition over to spring NBC and then in us.

00:13:56.740 --> 00:13:57.380
And after that,

00:13:57.380 --> 00:14:01.150
Rex is going to start to create our very own website controller.

00:14:01.150 --> 00:14:02.310
So anyway,

00:14:02.310 --> 00:14:02.950
um,

00:14:02.950 --> 00:14:04.500
no homework for today.

00:14:04.500 --> 00:14:07.810
Just understand what we did with the scope singleton and prototype.

00:14:07.810 --> 00:14:11.750
And I understand as well what we did with our wiring,

00:14:11.750 --> 00:14:12.600
and then you're good to go.

00:14:12.600 --> 00:14:13.960
So anyway,

00:14:13.960 --> 00:14:14.550
um,

00:14:14.550 --> 00:14:16.350
I guess we'll see you next time

