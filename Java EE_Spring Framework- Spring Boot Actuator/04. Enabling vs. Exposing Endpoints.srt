1
00:00:01,346 --> 00:00:03,417
We're now familiar with how to enable, disable,

2
00:00:03,417 --> 00:00:07,356
and expose or not expose actuator endpoints.

3
00:00:07,356 --> 00:00:09,812
Let's take a moment to compare the two as it's

4
00:00:09,812 --> 00:00:12,221
often a common point of confusion.

5
00:00:12,221 --> 00:00:14,041
I believe I've made it pretty clear by now,

6
00:00:14,041 --> 00:00:15,724
but let me reiterate,

7
00:00:15,724 --> 00:00:21,403
enabling an actuator endpoint is not the same as exposing an actuator endpoint,

8
00:00:21,403 --> 00:00:23,403
they're two different things.

9
00:00:23,403 --> 00:00:25,970
Enabling an endpoint is mainly about creation.

10
00:00:25,970 --> 00:00:28,483
It controls whether or not that endpoint is actually created

11
00:00:28,483 --> 00:00:31,898
as a bean in Spring Boot and exposing it,

12
00:00:31,898 --> 00:00:35,602
on the other hand, controls whether or not you can consume the endpoint,

13
00:00:35,602 --> 00:00:39,088
whereas almost all endpoints are enabled by default,

14
00:00:39,088 --> 00:00:42,385
almost all endpoints are not exposed by default,

15
00:00:42,385 --> 00:00:44,094
at least for HTTP.

16
00:00:44,094 --> 00:00:48,900
Enabling or disabling an endpoint is more of an efficiency thing than anything.

17
00:00:48,900 --> 00:00:53,308
Disabling an endpoint results in the application using slightly less memory,

18
00:00:53,308 --> 00:00:58,886
whereas exposing or not exposing an endpoint is actually related to security.

19
00:00:58,886 --> 00:01:02,648
As I mentioned previously in prior versions of Spring Boot prior to 2.0,

20
00:01:02,648 --> 00:01:05,613
enabling an endpoint was the same as exposing it.

21
00:01:05,613 --> 00:01:09,289
This was a cause for security concern since the endpoints contained

22
00:01:09,289 --> 00:01:12,592
sensitive information and sensitive operations.

23
00:01:12,592 --> 00:01:13,510
In one case,

24
00:01:13,510 --> 00:01:15,573
security researchers found that one of the endpoints

25
00:01:15,573 --> 00:01:17,746
could be used for remote code execution,

26
00:01:17,746 --> 00:01:21,605
which in terms of bad is really, really bad.

27
00:01:21,605 --> 00:01:25,415
It's pretty much the worst-case scenario for a security vulnerability.

28
00:01:25,415 --> 00:01:34,000
Luckily, this security vulnerability was closed rather quickly, and in Spring Boot Actuator 2.0, they've improved the security greatly.

