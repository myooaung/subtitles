WEBVTT
1
00:00:01.252 --> 00:00:04.852
Now that we've seen what Spring Boot Actuator is and what it can do,

2
00:00:04.852 --> 00:00:06.899
you might be wondering what's up with the name,

3
00:00:06.899 --> 00:00:08.446
what is an actuator?

4
00:00:08.446 --> 00:00:10.197
What exactly does it do?

5
00:00:10.197 --> 00:00:11.837
And in the traditional sense,

6
00:00:11.837 --> 00:00:15.796
an actuator is a component that's responsible for

7
00:00:15.796 --> 00:00:18.595
controlling a mechanism or a system.

8
00:00:18.595 --> 00:00:20.161
Broadly and generally speaking,

9
00:00:20.161 --> 00:00:25.091
an actuator is triggered by a signal and generates some output and that

10
00:00:25.091 --> 00:00:29.711
output could be something like movement or motion and that movement or

11
00:00:29.711 --> 00:00:33.395
motion can then be used to control something.

12
00:00:33.395 --> 00:00:35.858
Well in the same sense as a real-life actuator,

13
00:00:35.858 --> 00:00:42.940
Spring Boot Actuator lets you monitor and interact or control your application.

14
00:00:42.940 --> 00:00:46.668
You can send it signals and it will output information like

15
00:00:46.668 --> 00:00:49.231
what's the current status of the application,

16
00:00:49.231 --> 00:00:50.156
is it healthy,

17
00:00:50.156 --> 00:00:55.566
is it unhealthy or you can send it signals to cause it to do something,

18
00:00:55.566 --> 00:01:00.565
to update configuration or to change something in the application.

19
00:01:00.565 --> 00:01:03.747
And one of the really nice benefits of Spring Boot Actuator is that it

20
00:01:03.747 --> 00:01:07.238
comes with a number of features built-in by default.

21
00:01:07.238 --> 00:01:11.623
So these things that you can signal, you don't have to develop them yourself.

22
00:01:11.623 --> 00:01:14.877
They are automatically included just by adding Spring

23
00:01:14.877 --> 00:01:17.413
Boot Actuator into your project.

24
00:01:17.413 --> 00:01:19.466
To kind of give you a better idea of some of the

25
00:01:19.466 --> 00:01:20.872
features that are built-in by default,

26
00:01:20.872 --> 00:01:25.852
I've pulled up the Spring Boot reference documentation and I'm looking at the

27
00:01:25.852 --> 00:01:29.206
built-in endpoints that come with Spring Boot Actuator.

28
00:01:29.206 --> 00:01:30.087
As you can see,

29
00:01:30.087 --> 00:01:33.691
there are a number of different endpoints that are included by default.

30
00:01:33.691 --> 00:01:36.739
There are endpoints for inspecting the configuration

31
00:01:36.739 --> 00:01:40.784
properties in the application, there are flyway endpoints,

32
00:01:40.784 --> 00:01:43.998
and environment endpoints, and info endpoints,

33
00:01:43.998 --> 00:01:45.385
and in general,

34
00:01:45.385 --> 00:01:50.554
there are a number of different endpoints that allow you to monitor,

35
00:01:50.554 --> 00:01:54.416
manage introspect, and audit your application.

36
00:01:54.416 --> 00:01:57.484
And even better is that these features are product ready,

37
00:01:57.484 --> 00:02:00.132
they're not just features that are only supposed to

38
00:02:00.132 --> 00:02:02.006
be used in development testing, no.

39
00:02:02.006 --> 00:02:08.000
These are real solid features that you can benefit from in a production environment.

