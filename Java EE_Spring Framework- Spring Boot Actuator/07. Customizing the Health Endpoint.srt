1
00:00:00,810 --> 00:00:03,414
First, let's take a look at the health endpoint.

2
00:00:03,414 --> 00:00:05,974
The health endpoint allows for adding additional custom health

3
00:00:05,974 --> 00:00:09,414
checks to the already built-in health checks,

4
00:00:09,414 --> 00:00:12,424
and the great thing is is that it's really easy to do so.

5
00:00:12,424 --> 00:00:15,538
Simply create and register a new bean that implements the

6
00:00:15,538 --> 00:00:19,223
HealthIndicator interface and implement its one method,

7
00:00:19,223 --> 00:00:22,140
the health method, with any custom logic.

8
00:00:22,140 --> 00:00:24,976
The health method returns a health object which is used

9
00:00:24,976 --> 00:00:28,884
to indicate the appropriate status, such as up or down.

10
00:00:28,884 --> 00:00:30,846
Let's take a look at some example code.

11
00:00:30,846 --> 00:00:33,731
We first create a new class annotated with the @Component

12
00:00:33,731 --> 00:00:37,611
annotation so our class is registered as a bean and we

13
00:00:37,611 --> 00:00:40,323
implement the HealthIndicator interface.

14
00:00:40,323 --> 00:00:44,331
Again, the HealthIndicator interface requires you to implement one method,

15
00:00:44,331 --> 00:00:48,790
the health method, and in this method, you would perform the custom health check.

16
00:00:48,790 --> 00:00:52,637
For instance, maybe you have a legacy system that your application depends on.

17
00:00:52,637 --> 00:00:56,469
You could write code to perform a check on the legacy system,

18
00:00:56,469 --> 00:01:00,494
inspect its status, and then hopefully return a healthy status.

19
00:01:00,494 --> 00:01:00,898
Alternatively,

20
00:01:00,898 --> 00:01:04,837
if after inspecting the status you determine that the system wasn't healthy,

21
00:01:04,837 --> 00:01:08,864
you could return a new health object using the down method to

22
00:01:08,864 --> 00:01:11,091
indicate that it's in an unhealthy state.

23
00:01:11,091 --> 00:01:14,966
The health object also provides the ability to add additional details.

24
00:01:14,966 --> 00:01:18,116
This could be useful for returning details about a healthy response,

25
00:01:18,116 --> 00:01:20,821
but it's particularly useful for returning additional

26
00:01:20,821 --> 00:01:23,559
details about an unhealthy response.

27
00:01:23,559 --> 00:01:24,047
For instance,

28
00:01:24,047 --> 00:01:27,401
we could add what response code we received or how long the

29
00:01:27,401 --> 00:01:31,106
response took or the number of times that we retried.

30
00:01:31,106 --> 00:01:36,000
This would all be useful information when inspecting why the health check failed.

