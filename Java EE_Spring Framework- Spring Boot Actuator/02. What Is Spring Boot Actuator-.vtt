WEBVTT
1
00:00:01.482 --> 00:00:04.592
We begin with what is Spring Boot Actuator,

2
00:00:04.592 --> 00:00:06.121
and rather than me telling you,

3
00:00:06.121 --> 00:00:09.584
let's take a sneak peak at the demo application that we'll use throughout the

4
00:00:09.584 --> 00:00:13.087
course and I can actually show you some of the features.

5
00:00:13.087 --> 00:00:16.893
I've opened IntelliJ and started the demo application in the background.

6
00:00:16.893 --> 00:00:22.652
The demo application is just a simple REST API for storing to do lists.

7
00:00:22.652 --> 00:00:26.939
It has exactly one endpoint where you can go and retrieve all of the to do

8
00:00:26.939 --> 00:00:30.722
lists along with all of the items in those to-do lists.

9
00:00:30.722 --> 00:00:34.118
Now imagine for a moment that this demo application was actually running in

10
00:00:34.118 --> 00:00:38.438
a production environment and it was serving as the back-end for your cool

11
00:00:38.438 --> 00:00:42.566
new app on the app store called My To-Do List.

12
00:00:42.566 --> 00:00:44.793
Your app is heavily dependent on the back-end for storing

13
00:00:44.793 --> 00:00:47.022
all of its to-do items and unfortunately,

14
00:00:47.022 --> 00:00:49.046
it doesn't work without it.

15
00:00:49.046 --> 00:00:51.685
You're worried that if the back-end API goes down,

16
00:00:51.685 --> 00:00:54.251
people are going to start giving you bad ratings.

17
00:00:54.251 --> 00:00:56.972
This is where Spring Boot Actuator comes in.

18
00:00:56.972 --> 00:01:01.914
Spring Boot Actuator helps you run your Spring Boot Applications in production.

19
00:01:01.914 --> 00:01:04.312
With Spring Boot Actuators built-in help endpoint,

20
00:01:04.312 --> 00:01:07.403
it's really easy to tell whether or not your

21
00:01:07.403 --> 00:01:09.485
application is healthy or unhealthy.

22
00:01:09.485 --> 00:01:13.280
Simply make a call to the /actuator/health endpoint

23
00:01:13.280 --> 00:01:16.399
and you'll get all the details.

24
00:01:16.399 --> 00:01:20.238
Curious how much memory your application is using in production, no problem.

25
00:01:20.238 --> 00:01:23.573
Just use the metrics endpoint with the jvm.memory .used

26
00:01:23.573 --> 00:01:27.720
metric and you'll immediately know.

27
00:01:27.720 --> 00:01:29.939
What if you suspect your application running in

28
00:01:29.939 --> 00:01:32.622
production has the wrong configuration value.

29
00:01:32.622 --> 00:01:33.648
How do you know?

30
00:01:33.648 --> 00:01:36.708
With Spring Boot Actuator, it's no problem.

31
00:01:36.708 --> 00:01:40.510
Just hit the configprops endpoint and you'll be able to see all of the

32
00:01:40.510 --> 00:01:46.209
configured application properties in your running application.

33
00:01:46.209 --> 00:01:46.832
In general,

34
00:01:46.832 --> 00:01:55.000
Spring Boot Actuator provides a number of features that help you ensure that your application is running well in production.

