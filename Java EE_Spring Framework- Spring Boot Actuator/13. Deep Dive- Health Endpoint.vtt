WEBVTT
1
00:00:01.056 --> 00:00:02.706
We previously took a look at the health endpoint,

2
00:00:02.706 --> 00:00:04.920
but we really only scratched the surface,

3
00:00:04.920 --> 00:00:07.181
let's take a deeper look.

4
00:00:07.181 --> 00:00:10.947
The health endpoint is actually a rather sophisticated machine.

5
00:00:10.947 --> 00:00:14.502
The results may seem simple, but don't let that fool you.

6
00:00:14.502 --> 00:00:15.352
Under the covers,

7
00:00:15.352 --> 00:00:18.164
the health check results are actually an aggregation of a

8
00:00:18.164 --> 00:00:20.874
number of different smaller health checks.

9
00:00:20.874 --> 00:00:21.417
By default,

10
00:00:21.417 --> 00:00:24.117
Spring Boot makes use of the autoconfiguration to

11
00:00:24.117 --> 00:00:27.421
automatically set up health checks for you.

12
00:00:27.421 --> 00:00:30.065
So for instance, if your application utilized elastic search,

13
00:00:30.065 --> 00:00:34.156
Spring Boot would detect the elastic search libraries on the class path and

14
00:00:34.156 --> 00:00:39.254
automatically set up a health check to ensure that elastic search was up and

15
00:00:39.254 --> 00:00:43.196
reachable and that individual elastic search health check would then roll up

16
00:00:43.196 --> 00:00:47.244
with all the other health checks to determine as a whole is the application

17
00:00:47.244 --> 00:00:49.170
healthy or unhealthy.

18
00:00:49.170 --> 00:00:49.496
Lastly,

19
00:00:49.496 --> 00:00:52.513
the Spring Boot Actuator health endpoint allows you to

20
00:00:52.513 --> 00:00:54.810
add completely custom health checks.

21
00:00:54.810 --> 00:00:55.460
So for instance,

22
00:00:55.460 --> 00:00:59.143
consider you had an application that depended on a legacy system.

23
00:00:59.143 --> 00:01:02.019
You could write your own custom health check for the legacy system

24
00:01:02.019 --> 00:01:05.438
and use that as one of the contributing factors to determine the

25
00:01:05.438 --> 00:01:12.000
health status of your application. We'll cover how to write our own custom health checks in the next module.

