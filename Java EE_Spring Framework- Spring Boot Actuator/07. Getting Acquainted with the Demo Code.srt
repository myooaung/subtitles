1
00:00:01,193 --> 00:00:04,717
In this demo, we're going to very, very quickly go over the demo code.

2
00:00:04,717 --> 00:00:07,179
The intent is really just to introduce you to the demo

3
00:00:07,179 --> 00:00:09,002
code and to get you familiar with it.

4
00:00:09,002 --> 00:00:12,075
Feel free to pause or rewind at any time if you'd like to

5
00:00:12,075 --> 00:00:14,162
inspect the code in a bit more detail.

6
00:00:14,162 --> 00:00:19,194
As we saw previously, the demo code is a simple API for storing to-do lists.

7
00:00:19,194 --> 00:00:23,429
It follows a fairly standard pattern of exposing an endpoint via a REST

8
00:00:23,429 --> 00:00:26,881
controller and ultimately fetching data from an in-memory database.

9
00:00:26,881 --> 00:00:31,929
The path to the endpoint is /todo/lists and the controller

10
00:00:31,929 --> 00:00:34,174
delegates most of its work to the service layer,

11
00:00:34,174 --> 00:00:38,952
which in turn delegates most of its work to the repository layer.

12
00:00:38,952 --> 00:00:42,472
The repository layer is implemented with Spring Data JPA and the

13
00:00:42,472 --> 00:00:46,518
actual data is stored in an H2 in-memory database.

14
00:00:46,518 --> 00:00:49,700
The schema is autogenerated from the JPA objects and there

15
00:00:49,700 --> 00:00:53,342
is a data.sql file in the source main resources that

16
00:00:53,342 --> 00:00:56,326
contains the initial to-do list data.

17
00:00:56,326 --> 00:00:57,863
That's really all there is to it.

18
00:00:57,863 --> 00:01:03,000
Now that we're familiar with the demo, let's get back to learning about actuator endpoints.

