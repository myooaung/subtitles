1
00:00:00,740 --> 00:00:05,620
Let's wrap up by doing a final review of the case for Docker and why

2
00:00:05,620 --> 00:00:09,240
we want to use this in our development environment.

3
00:00:09,240 --> 00:00:12,180
So we talked about that Docker brings many development

4
00:00:12,180 --> 00:00:16,900
benefits to our different team members, and even if you're just a team of one,

5
00:00:16,900 --> 00:00:17,960
there's a lot of benefits,

6
00:00:17,960 --> 00:00:22,610
because you could bring servers and databases and many of the things up very

7
00:00:22,610 --> 00:00:26,040
quickly, and then get rid of those if you're done with them.

8
00:00:26,040 --> 00:00:28,850
So we talked about how we can bring up web servers and

9
00:00:28,850 --> 00:00:32,240
databases and caching servers and more,

10
00:00:32,240 --> 00:00:36,350
and bring those up in a very consistent way across team members,

11
00:00:36,350 --> 00:00:39,260
even in distributed locations if we needed to,

12
00:00:39,260 --> 00:00:43,420
and then how we can even move those up into the cloud if we'd like.

13
00:00:43,420 --> 00:00:47,900
And so there's the benefits of the consistency and the fact that how it runs in

14
00:00:47,900 --> 00:00:52,200
development is how it's going to run if you move those containers and images

15
00:00:52,200 --> 00:00:56,440
into your staging and your production environments.

16
00:00:56,440 --> 00:00:59,310
Now, we talked about that the heart and soul of Docker is,

17
00:00:59,310 --> 00:00:59,700
of course,

18
00:00:59,700 --> 00:01:05,040
Docker images, and that Docker images are used to create our containers.

19
00:01:05,040 --> 00:01:08,240
So some of the key tools that we talked about were Docker Client,

20
00:01:08,240 --> 00:01:11,940
and this is, of course, how we can work with our images and containers.

21
00:01:11,940 --> 00:01:14,120
We talked about Docker Machine, and how we can use

22
00:01:14,120 --> 00:01:16,540
that to interact with a virtual box.

23
00:01:16,540 --> 00:01:20,570
And then Docker Compose, one of my personal favorite tools, is especially

24
00:01:20,570 --> 00:01:24,900
helpful as we need to work with multiple containers and get those all up and

25
00:01:24,900 --> 00:01:28,090
running and talking between each other. And then,

26
00:01:28,090 --> 00:01:29,780
if you don't want to work with the command line, we

27
00:01:29,780 --> 00:01:31,600
also talked about Docker Kitematic,

28
00:01:31,600 --> 00:01:35,570
and it does provide a really nice and simple way to get started with

29
00:01:35,570 --> 00:01:39,410
Docker if you really just want to jump in quickly and not have to

30
00:01:39,410 --> 00:01:42,350
learn all the commands that we talked about for Docker Client,

31
00:01:42,350 --> 00:01:45,610
Docker Compose, and others. Now,

32
00:01:45,610 --> 00:01:50,730
we also talked about linking our source code from a running container to a

33
00:01:50,730 --> 00:01:53,410
local folder that you might have on your development machine.

34
00:01:53,410 --> 00:01:57,020
And this is a really, really important part for us as web developers,

35
00:01:57,020 --> 00:02:01,700
because we obviously need a way to quickly and easily make changes

36
00:02:01,700 --> 00:02:05,050
to code, get that code running up in a container,

37
00:02:05,050 --> 00:02:09,870
such as a Node.js or ASP.NET or PHP or whatever it may be container

38
00:02:09,870 --> 00:02:12,910
that is running the actual server. And we talked about how we can do

39
00:02:12,910 --> 00:02:17,270
that with Docker Volumes, and how a volume can point to a folder that

40
00:02:17,270 --> 00:02:21,900
we set up, and that makes it very easy to link our source code into a

41
00:02:21,900 --> 00:02:23,740
running container.

42
00:02:23,740 --> 00:02:23,930
Now,

43
00:02:23,930 --> 00:02:27,030
when it comes to containers, while we can pull many of the

44
00:02:27,030 --> 00:02:29,540
containers out there from Docker Hub,

45
00:02:29,540 --> 00:02:32,420
we can also create our custom Docker images.

46
00:02:32,420 --> 00:02:37,120
And we talked about how we can do Docker files and create Docker files

47
00:02:37,120 --> 00:02:41,360
that can be based on an image that's in Docker Hub, and then we can

48
00:02:41,360 --> 00:02:45,040
add our custom functionality into that.

49
00:02:45,040 --> 00:02:45,770
Now, as mentioned,

50
00:02:45,770 --> 00:02:49,820
one of my favorite things covered in the entire course was Docker Compose,

51
00:02:49,820 --> 00:02:53,740
and we also talked about the Compose YAML file.

52
00:02:53,740 --> 00:02:57,110
And this YAML file is just a great way, I think,

53
00:02:57,110 --> 00:03:01,780
to get your development environment up and running very quickly. You

54
00:03:01,780 --> 00:03:05,950
could have 10 different services, if you wanted, and not have to bring

55
00:03:05,950 --> 00:03:09,440
those up individually using Docker Client.

56
00:03:09,440 --> 00:03:11,600
We could get this YAML file in place,

57
00:03:11,600 --> 00:03:15,540
and we'd be off to the races and up and running.

58
00:03:15,540 --> 00:03:18,700
So that's a wrap on the Docker for Web Developers course,

59
00:03:18,700 --> 00:03:23,400
and I hope that you have a really solid feel now for the role that

60
00:03:23,400 --> 00:03:26,640
Docker can play in your development environment.

61
00:03:26,640 --> 00:03:29,460
I appreciate you taking the time to listen to the course,

62
00:03:29,460 --> 00:03:35,000
and hope you're able to apply this new knowledge into your Web development efforts.

