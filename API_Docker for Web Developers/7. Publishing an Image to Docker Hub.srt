1
00:00:01,040 --> 00:00:03,280
Although you can always build a custom image using the

2
00:00:03,280 --> 00:00:05,840
docker build command anywhere you'd like,

3
00:00:05,840 --> 00:00:09,680
you may want an easy way to deploy this and pull it down so you

4
00:00:09,680 --> 00:00:11,750
don't have to build it every single time.

5
00:00:11,750 --> 00:00:15,410
And we can do that by publishing an image up to Docker Hub.

6
00:00:15,410 --> 00:00:18,040
And that's what we're going to take a look at here.

7
00:00:18,040 --> 00:00:19,790
So the command you'll use is really,

8
00:00:19,790 --> 00:00:22,970
really simple. Number one, you will have to go to

9
00:00:22,970 --> 00:00:25,920
hub.docker.com and create an account,

10
00:00:25,920 --> 00:00:29,900
and we talked about that earlier actually in the course. Very simple to

11
00:00:29,900 --> 00:00:33,590
do, very quick. And then you'll have to run a logging command, and I'm

12
00:00:33,590 --> 00:00:35,150
going to be showing that in just a moment.

13
00:00:35,150 --> 00:00:38,740
But once you're logged in, it's very, very simple to push your image.

14
00:00:38,740 --> 00:00:41,390
All you have to do is say docker push,

15
00:00:41,390 --> 00:00:45,810
give it the username and the name of the image, in this case, node, and then

16
00:00:45,810 --> 00:00:49,740
that's going to go ahead and push it up to the Docker Registry.

17
00:00:49,740 --> 00:00:53,200
So let's take a look at how we can do that with the node image and

18
00:00:53,200 --> 00:00:56,940
the ASP.NET Core image that we generated earlier.

19
00:00:56,940 --> 00:00:57,150
Now,

20
00:00:57,150 --> 00:01:00,010
before we can run a docker push, we will have to log in. So

21
00:01:00,010 --> 00:01:03,410
we'll do docker login. Just hit Enter, and then you can put

22
00:01:03,410 --> 00:01:09,310
your username and your password. And then it's going to ask for

23
00:01:09,310 --> 00:01:13,140
the email you used as well.

24
00:01:13,140 --> 00:01:17,480
All right, once it's done that, from here we can go ahead and try to push,

25
00:01:17,480 --> 00:01:22,140
and you'll notice it's kind of saved some of our credential information locally.

26
00:01:22,140 --> 00:01:25,620
So now I could come in, and let's do docker images again, and we'll do

27
00:01:25,620 --> 00:01:31,360
docker push danwahlin/aspnetcore, and then this is actually going to

28
00:01:31,360 --> 00:01:35,640
prepare the image and then push it up into Docker Hub.

29
00:01:35,640 --> 00:01:37,300
I'll go ahead and let it do that,

30
00:01:37,300 --> 00:01:41,140
and we're going to come on over as well to the Mac side,

31
00:01:41,140 --> 00:01:43,190
and I have the node image that was created.

32
00:01:43,190 --> 00:01:46,320
Now I've already logged in on this machine, so we can again do

33
00:01:46,320 --> 00:01:52,040
docker push, my username, and the image tag,

34
00:01:52,040 --> 00:01:54,940
and that will go ahead and prepare that.

35
00:01:54,940 --> 00:01:58,610
And after a little bit of time after it's done pushing this up,

36
00:01:58,610 --> 00:02:01,560
we'll be able to log into the site, and you can actually see

37
00:02:01,560 --> 00:02:05,250
your image up there. Now, right now this is going to go ahead

38
00:02:05,250 --> 00:02:11,440
and put it into a public repository, and I'll show you that as soon as it's done.

39
00:02:11,440 --> 00:02:16,140
It looks like the image is now pushed up to Docker Hub.

40
00:02:16,140 --> 00:02:22,240
So we'll go to hub.docker.com, and let me go ahead and log in here.

41
00:02:22,240 --> 00:02:23,350
All right, and there we go.

42
00:02:23,350 --> 00:02:27,530
So there's my node one that was pushed up, and there's the aspnetcore

43
00:02:27,530 --> 00:02:31,640
you can see. So we could click on this, and there won't be much in here

44
00:02:31,640 --> 00:02:33,240
because I don't have any descriptions yet,

45
00:02:33,240 --> 00:02:37,330
but you could see how somebody could easily pull this and then use that image.

46
00:02:37,330 --> 00:02:40,240
And we're going to do that in just a moment.

47
00:02:40,240 --> 00:02:42,890
Now, likewise over here on this side, on the Mac side,

48
00:02:42,890 --> 00:02:46,570
we've pushed up the Node.js image that was created, and

49
00:02:46,570 --> 00:02:48,740
you'll see that's all ready to go.

50
00:02:48,740 --> 00:02:52,640
So what I'm going to do is let's go ahead and try to run

51
00:02:52,640 --> 00:02:54,490
this now directly from Docker Hub.

52
00:02:54,490 --> 00:03:01,240
So we're going to say docker remove image, and we'll give it this f4 image here.

53
00:03:01,240 --> 00:03:02,040
All right,

54
00:03:02,040 --> 00:03:06,730
so that should be gone. Now we can say docker pull if we'd

55
00:03:06,730 --> 00:03:09,240
like, or even docker run if we want to run it.

56
00:03:09,240 --> 00:03:12,580
Well, we've already seen that, and now we could put the name of the image.

57
00:03:12,580 --> 00:03:17,360
So let's go ahead on this machine and we'll grab the node one, and

58
00:03:17,360 --> 00:03:20,140
this is going to pull down the latest version.

59
00:03:20,140 --> 00:03:23,650
So you can see some of the layers already exist because they were cached.

60
00:03:23,650 --> 00:03:27,720
So you can see how fast that was. Now, I could go in and clear

61
00:03:27,720 --> 00:03:30,110
everything out or do kind of a no cache scenario,

62
00:03:30,110 --> 00:03:34,110
but you can see that worked. Now, likewise on the same machine, if I wanted

63
00:03:34,110 --> 00:03:39,130
to come in and do a docker pull on the aspnetcore one that was also shown in

64
00:03:39,130 --> 00:03:42,420
this module, then we can grab that as well.

65
00:03:42,420 --> 00:03:43,790
Now this one won't be cached,

66
00:03:43,790 --> 00:03:46,140
so it's going to have to pull down everything because I've never

67
00:03:46,140 --> 00:03:50,140
run this image on this particular machine.

68
00:03:50,140 --> 00:03:52,280
All right, so that will take a moment to run.

69
00:03:52,280 --> 00:03:53,060
And then we could, of course,

70
00:03:53,060 --> 00:03:56,970
do the same thing over on my Windows box over here as well. It would

71
00:03:56,970 --> 00:04:00,640
be the same exact command. We could do docker pull. And since I've

72
00:04:00,640 --> 00:04:03,260
already done the aspnetcore one here,

73
00:04:03,260 --> 00:04:07,690
let's go ahead and I'll show you how fast this should be. And it should be

74
00:04:07,690 --> 00:04:09,800
pretty quick because a lot of the layers are already there.

75
00:04:09,800 --> 00:04:11,940
You can see that was extremely quick.

76
00:04:11,940 --> 00:04:15,730
Basically what it did is it looked at the IDs for each of those layers and said,

77
00:04:15,730 --> 00:04:17,280
hey, I already have these.

78
00:04:17,280 --> 00:04:19,560
There's really no need to recreate these because they

79
00:04:19,560 --> 00:04:22,080
haven't changed. And that makes it really,

80
00:04:22,080 --> 00:04:25,270
really fast as you work with multiple containers and

81
00:04:25,270 --> 00:04:28,040
images. So it'll start caching those.

82
00:04:28,040 --> 00:04:30,090
So you can see this one's still going; it's going to take a

83
00:04:30,090 --> 00:04:33,330
little bit longer. And we're all done.

84
00:04:33,330 --> 00:04:36,800
So now I can say docker images, and there we go.

85
00:04:36,800 --> 00:04:41,940
We now have the node, the aspnetcore, and then the base node that I had.

86
00:04:41,940 --> 00:04:46,250
So that's how easy it is to actually take an image once it's built, push

87
00:04:46,250 --> 00:04:50,340
that up to Docker Hub, and now I can pull that from anywhere. Team members

88
00:04:50,340 --> 00:04:53,830
can pull it. Even other people out there, since these are public images

89
00:04:53,830 --> 00:04:56,140
right now, could pull it as well.

90
00:04:56,140 --> 00:04:59,960
So it's a really, really powerful technology because now it makes it very,

91
00:04:59,960 --> 00:05:03,760
very easy to share my exact environment, and we still have a

92
00:05:03,760 --> 00:05:06,420
lot more to cover. So that will get us started with custom

93
00:05:06,420 --> 00:05:08,930
Docker files, how we can do builds,

94
00:05:08,930 --> 00:05:13,430
run containers, and even push images up to Docker Hub. But we're

95
00:05:13,430 --> 00:05:19,000
going to start diving into more about linking containers and more as we move along in the course.

