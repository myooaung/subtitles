WEBVTT
1
00:00:01.182 --> 00:00:03.182
Agile planning and estimating.

2
00:00:03.182 --> 00:00:10.182
Yes, you plan and make estimates in Agile, but you just don't overdo it.

3
00:00:10.182 --> 00:00:14.182
The longer the planning and estimating cycle,

4
00:00:14.182 --> 00:00:19.637
the more you are trying to predict the future and it just can't be done.

5
00:00:19.637 --> 00:00:22.182
You do not have a crystal ball.

6
00:00:22.182 --> 00:00:26.182
Build a good plan and estimate that has a shorter duration,

7
00:00:26.182 --> 00:00:30.627
both in the time to prepare the plan,

8
00:00:30.627 --> 00:00:36.182
as well as the time to actually execute the plan.

9
00:00:36.182 --> 00:00:39.130
You're not trying to estimate the whole project,

10
00:00:39.130 --> 00:00:43.182
but just the list of priority features approved by the customer.

11
00:00:43.182 --> 00:00:45.682
It's a very key point.

12
00:00:45.682 --> 00:00:52.182
You're just going to focus on the priority features, approved by the customer.

13
00:00:52.182 --> 00:00:55.382
This process works well with an existing system,

14
00:00:55.382 --> 00:00:58.182
where you want to add new features.

15
00:00:58.182 --> 00:01:01.039
Before a new system you're building from scratch,

16
00:01:01.039 --> 00:01:05.049
sometimes this approach can have challenges and even possible flaws.

17
00:01:05.049 --> 00:01:10.182
Now let's look at the customer's point of view for Agile.

18
00:01:10.182 --> 00:01:17.382
If the customer doesn't buy into the Agile approach, does it matter?

19
00:01:17.382 --> 00:01:19.182
Let's find out.

20
00:01:19.182 --> 00:01:24.782
At some point your customer is going to ask, how much will it cost?

21
00:01:24.782 --> 00:01:27.182
And when can I have it?

22
00:01:27.182 --> 00:01:33.182
Customers still want to know how much will the entire system cost?

23
00:01:33.182 --> 00:01:40.182
The budget, the dollars, and how long will the entire system take to build?

24
00:01:40.182 --> 00:01:41.182
The schedule.

25
00:01:41.182 --> 00:01:44.238
With the Agile approach you may not know how much it

26
00:01:44.238 --> 00:01:46.182
will take to develop the entire system.

27
00:01:46.182 --> 00:01:50.182
The Agile approach is done in increments.

28
00:01:50.182 --> 00:01:55.316
So, if we're going increment by increment, where are we going?

29
00:01:55.316 --> 00:01:57.182
Where is the endpoint?

30
00:01:57.182 --> 00:02:01.627
Users may want or expect this information upfront and early,

31
00:02:01.627 --> 00:02:05.182
or they may not even approve the project.

32
00:02:05.182 --> 00:02:08.782
They need to know about how big is it going to be

33
00:02:08.782 --> 00:02:11.182
and how long is it going to take?

34
00:02:11.182 --> 00:02:16.182
So on approach, you can still maybe take the Agile approach,

35
00:02:16.182 --> 00:02:20.349
and you could use Release 1 to leverage the Project

36
00:02:20.349 --> 00:02:24.182
Definition Document and build up the estimates based on the

37
00:02:24.182 --> 00:02:27.182
tools and techniques in module 2 and 3.

38
00:02:27.182 --> 00:02:28.182
That would be an approach as well.

39
00:02:28.182 --> 00:02:32.182
The customer or product manager prioritizes the feature set.

40
00:02:32.182 --> 00:02:35.972
That's produced from the outcome of Release 1.

41
00:02:35.972 --> 00:02:38.814
So Release 1 is not software,

42
00:02:38.814 --> 00:02:43.874
Release 1 is a high-level estimate of the entire system and a

43
00:02:43.874 --> 00:02:46.182
high-level schedule of the entire system,

44
00:02:46.182 --> 00:02:50.182
leveraging the artifacts from the Project Definition Document.

45
00:02:50.182 --> 00:02:54.682
And maybe Release 2 through 'n' are actually the

46
00:02:54.682 --> 00:03:05.000
implementations of the features themselves. Okay, in the next section we'll look at Agile estimating techniques.

