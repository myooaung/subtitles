1
00:00:02,340 --> 00:00:04,340
So this is the Java policy file.

2
00:00:04,340 --> 00:00:08,540
This is the default policy file we've just created.

3
00:00:08,540 --> 00:00:12,770
So the first I'm going to do is to take a copy of this,

4
00:00:12,770 --> 00:00:15,700
and there in my application in my project,

5
00:00:15,700 --> 00:00:21,340
I'm going to create a new file.

6
00:00:21,340 --> 00:00:27,210
Let's call this my.override.policy.

7
00:00:27,210 --> 00:00:32,370
And I'm going to paste the contents of the full Java policy file into this file,

8
00:00:32,370 --> 00:00:34,810
and, I'll save that.

9
00:00:34,810 --> 00:00:38,450
So to run this, as well as specifying security.manager, I

10
00:00:38,450 --> 00:00:40,570
now need to specify the policy file.

11
00:00:40,570 --> 00:00:49,300
So I say ‑Djava.security.policy==, as I'm doing the

12
00:00:49,300 --> 00:00:51,610
override. And this is up several layers here,

13
00:00:51,610 --> 00:01:01,200
so ..\..\..\my.override.policy.

14
00:01:01,200 --> 00:01:02,360
If I do this,

15
00:01:02,360 --> 00:01:07,200
then the application still runs. Again, to check that I

16
00:01:07,200 --> 00:01:12,850
am using the correct policy file here, let me go and comment out these two lines.

17
00:01:12,850 --> 00:01:17,440
Let me read the user permission and read the file permission, save the file,

18
00:01:17,440 --> 00:01:20,340
go back to the command prompt, and try this again.

19
00:01:20,340 --> 00:01:21,090
And indeed it fails.

20
00:01:21,090 --> 00:01:23,140
So I am definitely using that file.

21
00:01:23,140 --> 00:01:28,860
So if augmentation, if I copy this overridden policy file and paste it in and

22
00:01:28,860 --> 00:01:38,150
call this my.augment, if I can spell that, augment.policy. And in here I get

23
00:01:38,150 --> 00:01:42,680
rid of everything apart from the bits that I need.

24
00:01:42,680 --> 00:01:47,090
So everything is clear here except these two permissions.

25
00:01:47,090 --> 00:01:47,670
And for now,

26
00:01:47,670 --> 00:01:49,990
I'll just leave these commented out, just again, to prove it

27
00:01:49,990 --> 00:01:53,540
doesn't run unless I specify this correctly.

28
00:01:53,540 --> 00:02:00,140
If I go to the command prompt, and now rather than saying == my.override.policy,

29
00:02:00,140 --> 00:02:07,240
I say = my.augment.policy.

30
00:02:07,240 --> 00:02:09,800
So if I run this, this succeeds.

31
00:02:09,800 --> 00:02:13,040
And the reason this succeeds is that these permissions are

32
00:02:13,040 --> 00:02:16,190
still set in the default policy file.

33
00:02:16,190 --> 00:02:19,920
So if I go back into the default policy file and remove

34
00:02:19,920 --> 00:02:21,580
those permissions, and this is the danger,

35
00:02:21,580 --> 00:02:25,520
I've forgotten to remove these before I ran the demo. So let me remove these

36
00:02:25,520 --> 00:02:28,770
from the default policy file, go back to the command prompt,

37
00:02:28,770 --> 00:02:30,690
run the code again,

38
00:02:30,690 --> 00:02:34,860
and it fails. If I go back into my.augment policy file and add

39
00:02:34,860 --> 00:02:39,140
those permissions back in, and then go back to the command prompt

40
00:02:39,140 --> 00:02:42,540
and run the code again, then again, it's working.

41
00:02:42,540 --> 00:02:46,300
But now we're simply augmenting the already built‑in default

42
00:02:46,300 --> 00:02:51,080
policy, so we're adding grants to the default policy.

43
00:02:51,080 --> 00:02:55,090
So in the next module, we'll look in more detail at exactly how this works.

44
00:02:55,090 --> 00:02:58,930
In particular we'll take a look at how the access controller walks

45
00:02:58,930 --> 00:03:08,000
the stack to tell what code is on the stack and whether that code is able to access this resource or not.

