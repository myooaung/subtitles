1
00:00:03,180 --> 00:00:09,040
So previously we saw how to set permissions based on where code was loaded from.

2
00:00:09,040 --> 00:00:12,330
Now we'll see how to set permissions based on who created the code,

3
00:00:12,330 --> 00:00:14,440
that is, who signed the code.

4
00:00:14,440 --> 00:00:18,840
So in Java we can create what are known as signed JARs.

5
00:00:18,840 --> 00:00:22,550
When we do this, we store the signature in the JAR file,

6
00:00:22,550 --> 00:00:26,690
and then we store the public key in the KeyStore.

7
00:00:26,690 --> 00:00:28,710
Now, in this module,

8
00:00:28,710 --> 00:00:31,370
we're not going to go into details about public key

9
00:00:31,370 --> 00:00:34,600
cryptography or any other sort of cryptography.

10
00:00:34,600 --> 00:00:38,200
This is a tricky area, and before you deal with any of these issues,

11
00:00:38,200 --> 00:00:40,040
you need to check with an expert.

12
00:00:40,040 --> 00:00:41,370
So how do we go about this?

13
00:00:41,370 --> 00:00:43,110
So there are two sides to the story.

14
00:00:43,110 --> 00:00:46,290
There's the signer, i.e., the person that's signing the JAR file, and

15
00:00:46,290 --> 00:00:48,840
there's the person that's going to use the JAR file.

16
00:00:48,840 --> 00:00:51,290
So for the signer, we create a JAR file,

17
00:00:51,290 --> 00:00:56,840
obviously. We then generate keys, so we generate a public‑key private‑key pair.

18
00:00:56,840 --> 00:00:59,560
We sign the JAR with these keys,

19
00:00:59,560 --> 00:01:03,880
and then we export the public key in a certificate.

20
00:01:03,880 --> 00:01:06,380
The person that's going to use this JAR file, the receiver,

21
00:01:06,380 --> 00:01:07,540
if you like,

22
00:01:07,540 --> 00:01:10,040
imports the certificate that we send them, it's a

23
00:01:10,040 --> 00:01:12,040
trusted certificate, into the key store.

24
00:01:12,040 --> 00:01:15,630
They then edit the policy file to grant permission to

25
00:01:15,630 --> 00:01:25,000
the person that signed this JAR file, and then they run the code. So let's take a look at how that works in practice.

