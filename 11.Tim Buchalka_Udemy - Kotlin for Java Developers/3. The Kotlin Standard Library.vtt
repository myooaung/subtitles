WEBVTT
1
1

00:00:01.030  -->  00:00:04.640
[Music]
2

2

00:00:04.640  -->  00:00:07.470
So in the hello world application that
3

3

00:00:07.470  -->  00:00:09.690
we wrote, you'll notice that the array
4

4

00:00:09.690  -->  00:00:12.300
class is referenced and we call the
5

5

00:00:12.300  -->  00:00:14.670
print line function, but there are no
6

6

00:00:14.670  -->  00:00:17.180
imports. So why is that?
7

7

00:00:17.180  -->  00:00:20.490
Well once again, Kotlin is striving to
8

8

00:00:20.490  -->  00:00:22.020
reduce the amount of code that we have
9

9

00:00:22.020  -->  00:00:24.660
to type and so it imports a whole bunch
10

10

00:00:24.660  -->  00:00:27.510
of stuff by default into every Kotlin
11

11

00:00:27.510  -->  00:00:30.420
file and most of what it imports belongs
12

12

00:00:30.420  -->  00:00:32.160
to what's called the Kotlin standard
13

13

00:00:32.160  -->  00:00:33.960
library, so we're going to take a quick
14

14

00:00:33.960  -->  00:00:36.930
look at the library. Let's go over to the
15

15

00:00:36.930  -->  00:00:41.399
online documentation. So here we are at
16

16

00:00:41.399  -->  00:00:43.260
the online documentation for the Kotlin
17

17

00:00:43.260  -->  00:00:45.270
standard library and as you can see at
18

18

00:00:45.270  -->  00:00:47.100
the top it says the Kotlin standard
19

19

00:00:47.100  -->  00:00:49.559
library provides living essentials for
20

20

00:00:49.559  -->  00:00:52.230
everyday work with Kotlin, these include
21

21

00:00:52.230  -->  00:00:54.300
higher-order functions implementing
22

22

00:00:54.300  -->  00:00:56.370
idiomatic patterns and we're going to go
23

23

00:00:56.370  -->  00:00:58.879
over a lot of these in the course
24

24

00:00:58.879  -->  00:01:01.699
extension functions for providing
25

25

00:01:01.699  -->  00:01:04.080
functionality on blah blah blah here,
26

26

00:01:04.080  -->  00:01:05.339
because we're going to cover this in the
27

27

00:01:05.339  -->  00:01:08.100
course, various utilities for working
28

28

00:01:08.100  -->  00:01:10.200
with strings and char sequences and
29

29

00:01:10.200  -->  00:01:13.260
extensions for JDK classes, making it
30

30

00:01:13.260  -->  00:01:14.580
more convenient to work with them
31

31

00:01:14.580  -->  00:01:17.990
essentially we're going to touch on as I said,
32

32

00:01:17.990  -->  00:01:21.299
a lot of this in the course. So here
33

33

00:01:21.299  -->  00:01:22.920
are the packages that belong to the
34

34

00:01:22.920  -->  00:01:25.439
Kotlin standard library, there's quite a
35

35

00:01:25.439  -->  00:01:27.869
few of them. Let's click into the Kotlin
36

36

00:01:27.869  -->  00:01:31.770
package. And if you look at this package,
37

37

00:01:31.770  -->  00:01:33.479
you can see right away that the array
38

38

00:01:33.479  -->  00:01:35.670
class belongs to the Kotlin standard
39

39

00:01:35.670  -->  00:01:38.430
library, that's what we used in our hello
40

40

00:01:38.430  -->  00:01:41.070
world application. we scroll down,
41

41

00:01:41.070  -->  00:01:43.170
you'll also see that the Kotlin package
42

42

00:01:43.170  -->  00:01:45.500
contains the datatype classes.
43

43

00:01:45.500  -->  00:01:48.180
We'll cover data types in detail later in the
44

44

00:01:48.180  -->  00:01:51.659
course. So there's a lot of stuff in here,
45

45

00:01:51.659  -->  00:01:53.579
and you can come over and take a look at
46

46

00:01:53.579  -->  00:01:56.490
the documentation for the Kotlin package
47

47

00:01:56.490  -->  00:01:57.689
at your leisure.
48

48

00:01:57.689  -->  00:02:00.210
So the Kotlin standard library is
49

49

00:02:00.210  -->  00:02:02.490
essentially serves the same purpose as
50

50

00:02:02.490  -->  00:02:06.299
the JDK does, it's a bunch of api's that
51

51

00:02:06.299  -->  00:02:08.910
are there for you to use. So let's go
52

52

00:02:08.910  -->  00:02:12.850
back to IntelliJ and we'll
53

53

00:02:12.850  -->  00:02:15.400
see that yes, we're using array in print
54

54

00:02:15.400  -->  00:02:17.710
line and we're not importing anything.
55

55

00:02:17.710  -->  00:02:20.020
Let's take a look at the declarations
56

56

00:02:20.020  -->  00:02:22.780
for array in print line. So there's two
57

57

00:02:22.780  -->  00:02:24.340
ways you can do that, you can click on
58

58

00:02:24.340  -->  00:02:30.120
array right click go to go to and go to
59

59

00:02:30.120  -->  00:02:32.020
declaration and the second way is you
60

60

00:02:32.020  -->  00:02:33.790
can just use the keyboard shortcut would
61

61

00:02:33.790  -->  00:02:36.820
be control b on Windows and I believe
62

62

00:02:36.820  -->  00:02:39.070
command b on the Mac, whatever's here.
63

63

00:02:39.070  -->  00:02:40.750
Let's go check this out.
64

64

00:02:40.750  -->  00:02:44.620
And here's our array class and if we go
65

65

00:02:44.620  -->  00:02:46.030
to the top we'll see that it's in the
66

66

00:02:46.030  -->  00:02:48.850
Kotlin package, so if we go back to the
67

67

00:02:48.850  -->  00:02:50.740
main function and this time we'll click
68

68

00:02:50.740  -->  00:02:53.950
on print line and we'll go over to the
69

69

00:02:53.950  -->  00:02:56.600
declaration and if we scroll to the top,
70

70

00:02:56.600  -->  00:02:58.840
we'll see that this lives in the Kotlin
71

71

00:02:58.840  -->  00:03:02.560
.io package. So now let's go to a
72

72

00:03:02.560  -->  00:03:07.300
slide and this slide shows all of the
73

73

00:03:07.300  -->  00:03:08.950
default imports and we'll see that
74

74

00:03:08.950  -->  00:03:11.260
Kotlin .* is there and the array
75

75

00:03:11.260  -->  00:03:13.600
class belongs to that, we've got
76

76

00:03:13.600  -->  00:03:16.750
annotation, collections, comparisons.
77

77

00:03:16.750  -->  00:03:19.630
there's Kotlin .io, that's where the print
78

78

00:03:19.630  -->  00:03:22.660
line function lives, ranges and sequences
79

79

00:03:22.660  -->  00:03:24.160
we'll cover those later in the course
80

80

00:03:24.160  -->  00:03:26.990
text and then if you're targeting the jvm,
81

81

00:03:26.990  -->  00:03:30.550
kotlin.jvm and the java .lang
82

82

00:03:30.550  -->  00:03:33.150
packages are also imported by default.
83

83

00:03:33.150  -->  00:03:36.420
Back to IntelliJ,
84

84

00:03:36.420  -->  00:03:40.090
so if we go back to our application now,
85

85

00:03:40.090  -->  00:03:41.980
now we understand why there are no
86

86

00:03:41.980  -->  00:03:44.170
imports here, it's because the array
87

87

00:03:44.170  -->  00:03:46.810
class lives in kotlin.*, the print
88

88

00:03:46.810  -->  00:03:49.400
line function lives in kotlin.io.*,
89

89

00:03:49.400  -->  00:03:50.980
and both of those packages are
90

90

00:03:50.980  -->  00:03:56.290
imported by default by Kotlin. Once again,
91

91

00:03:56.290  -->  00:03:59.600
to cut down on the code that you have to write.
92

92

00:03:59.600  -->  00:04:01.570
So that's it for the Kotlin
93

93

00:04:01.570  -->  00:04:03.160
standard library, I just wanted to make
94

94

00:04:03.160  -->  00:04:06.100
you aware of it and also to explain why
95

95

00:04:06.100  -->  00:04:07.930
we're not importing anything in case you
96

96

00:04:07.930  -->  00:04:09.670
were scratching your head about that and
97

97

00:04:09.670  -->  00:04:12.940
just a reminder again that if you're
98

98

00:04:12.940  -->  00:04:15.460
going to distribute your Kotlin
99

99

00:04:15.460  -->  00:04:17.020
application that you also have to
100

100

00:04:17.020  -->  00:04:19.090
distribute the kotlin runtime, otherwise
101

101

00:04:19.090  -->  00:04:21.000
your application won't run.
102

102

00:04:21.000  -->  00:04:23.620
Alright! So that's it for this video, I'll see you in
103

103

00:04:23.620  -->  00:04:26.130
the next one!
