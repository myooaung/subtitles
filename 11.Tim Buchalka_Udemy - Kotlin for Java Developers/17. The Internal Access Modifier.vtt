WEBVTT
1
1

00:00:04.710  -->  00:00:06.960
So I just wanted to do a quick video
2

2

00:00:06.960  -->  00:00:09.450
here on the internal modifier, because
3

3

00:00:09.450  -->  00:00:11.730
you'll remember back when we discussed
4

4

00:00:11.730  -->  00:00:14.070
access modifiers, I mentioned that Kotlin
5

5

00:00:14.070  -->  00:00:16.560
has the internal modifier and when
6

6

00:00:16.560  -->  00:00:18.359
something is declared as internal it
7

7

00:00:18.359  -->  00:00:20.340
means that it's visible within the same
8

8

00:00:20.340  -->  00:00:22.980
module. So now we have two modules to
9

9

00:00:22.980  -->  00:00:24.660
play with, so I thought it would be a
10

10

00:00:24.660  -->  00:00:27.270
good time to revisit the internal access
11

11

00:00:27.270  -->  00:00:29.340
modifier, but before we do that
12

12

00:00:29.340  -->  00:00:31.020
I just wanted to quickly touch on
13

13

00:00:31.020  -->  00:00:33.960
private again, because we have more files
14

14

00:00:33.960  -->  00:00:37.050
to play with now and private means
15

15

00:00:37.050  -->  00:00:40.530
visible within the same file. So let's go
16

16

00:00:40.530  -->  00:00:42.600
back to company communications and let's
17

17

00:00:42.600  -->  00:00:47.910
declare top-level as private. So now, that
18

18

00:00:47.910  -->  00:00:50.520
it's private it should be visible within
19

19

00:00:50.520  -->  00:00:53.340
the same file, so let's give that a shot.
20

20

00:00:53.340  -->  00:00:55.350
We'll come up here when we'll say top
21

21

00:00:55.350  -->  00:00:59.040
level. I'm private and you can see that
22

22

00:00:59.040  -->  00:01:01.440
we don't get any errors, but if we switch
23

23

00:01:01.440  -->  00:01:03.989
to another file now, We'll see that we
24

24

00:01:03.989  -->  00:01:06.659
have errors here, we can no longer see it.
25

25

00:01:06.659  -->  00:01:08.700
The import statement gives us an error
26

26

00:01:08.700  -->  00:01:10.950
and there's an error when we use it and
27

27

00:01:10.950  -->  00:01:12.869
the same thing with another module,
28

28

00:01:12.869  -->  00:01:15.960
it can't see it either, so once we declare
29

29

00:01:15.960  -->  00:01:18.030
something private, it can only be seen
30

30

00:01:18.030  -->  00:01:21.000
within the same file. Ok, so that was just
31

31

00:01:21.000  -->  00:01:23.189
a quick revisit of private. Now, let's
32

32

00:01:23.189  -->  00:01:25.950
move on to internal, let's make the get
33

33

00:01:25.950  -->  00:01:28.350
copyright line function within the
34

34

00:01:28.350  -->  00:01:31.080
singleton, company communications object
35

35

00:01:31.080  -->  00:01:34.470
let's make that internal and see what happens.
36

36

00:01:34.470  -->  00:01:38.520
So we'll just use internal in front here
37

37

00:01:38.520  -->  00:01:41.040
and now everything within the same
38

38

00:01:41.040  -->  00:01:43.520
module should be able to use this, but
39

39

00:01:43.520  -->  00:01:46.560
stuff in another module should not be
40

40

00:01:46.560  -->  00:01:48.479
able to use this. So let's test that out.
41

41

00:01:48.479  -->  00:01:51.060
So we can obviously use it from here,
42

42

00:01:51.060  -->  00:01:53.790
we have a call to it here and that's not
43

43

00:01:53.790  -->  00:01:56.729
a problem, let's go to another file we're
44

44

00:01:56.729  -->  00:01:58.920
using it from another file, which is
45

45

00:01:58.920  -->  00:02:02.399
within the same module and that can use
46

46

00:02:02.399  -->  00:02:05.280
it no problem, but now let's go to
47

47

00:02:05.280  -->  00:02:07.890
another module file and let's try to use
48

48

00:02:07.890  -->  00:02:10.920
it. So we'll say company communications
49

49

00:02:10.920  -->  00:02:12.629
and that's okay because company
50

50

00:02:12.629  -->  00:02:15.569
communications is still public dot and
51

51

00:02:15.569  -->  00:02:18.580
you'll see that now the only
52

52

00:02:18.580  -->  00:02:20.830
two items being suggested to us are the
53

53

00:02:20.830  -->  00:02:22.660
property and they get tag line function.
54

54

00:02:22.660  -->  00:02:25.710
So if we go back and look at the object,
55

55

00:02:25.710  -->  00:02:28.990
we'll see that this is still public, the
56

56

00:02:28.990  -->  00:02:31.840
get tag line is still public but because
57

57

00:02:31.840  -->  00:02:33.760
get copyright line has now been declared
58

58

00:02:33.760  -->  00:02:36.310
as internal, this file which is then
59

59

00:02:36.310  -->  00:02:40.240
another module can't see it. So we can no
60

60

00:02:40.240  -->  00:02:43.930
longer use that within another module.
61

61

00:02:43.930  -->  00:02:46.090
So that's what the internal modifier does.
62

62

00:02:46.090  -->  00:02:48.280
So I'll take this out so we don't have
63

63

00:02:48.280  -->  00:02:51.040
any errors. Now one thing I wanted to
64

64

00:02:51.040  -->  00:02:53.410
mention is that if for some reason we
65

65

00:02:53.410  -->  00:02:56.530
decided to make this private, so that it
66

66

00:02:56.530  -->  00:02:58.390
can only be seen within the same file,
67

67

00:02:58.390  -->  00:03:00.580
obviously this is meaningless at that
68

68

00:03:00.580  -->  00:03:04.090
point because the entire class can only
69

69

00:03:04.090  -->  00:03:06.720
be seen within this one file.
70

70

00:03:06.720  -->  00:03:09.459
So declaring something as internal doesn't
71

71

00:03:09.459  -->  00:03:11.370
make any sense because by default,
72

72

00:03:11.370  -->  00:03:13.959
nothing outside the module is going to
73

73

00:03:13.959  -->  00:03:15.550
be able to access it because nothing
74

74

00:03:15.550  -->  00:03:17.350
outside the file is going to be able to
75

75

00:03:17.350  -->  00:03:19.840
access it, so this is one combination of
76

76

00:03:19.840  -->  00:03:21.580
access modifiers it doesn't make a lot
77

77

00:03:21.580  -->  00:03:23.410
of sense, if you have something private
78

78

00:03:23.410  -->  00:03:26.500
there is no point in declaring members
79

79

00:03:26.500  -->  00:03:29.410
as internal. So I'll just move with the
80

80

00:03:29.410  -->  00:03:32.850
private and we'll remove internal and
81

81

00:03:32.850  -->  00:03:35.470
then if we go back to our another module
82

82

00:03:35.470  -->  00:03:40.680
and we do the same thing we did before,
83

83

00:03:40.680  -->  00:03:43.420
we'll see that now we're getting the get
84

84

00:03:43.420  -->  00:03:45.310
copyright line function suggested to us
85

85

00:03:45.310  -->  00:03:48.280
again, because it's now public, so that's
86

86

00:03:48.280  -->  00:03:51.130
the internal modifier, now you've
87

87

00:03:51.130  -->  00:03:53.320
actually seen it in action, I'll just
88

88

00:03:53.320  -->  00:03:56.290
delete this and that's it for import,
89

89

00:03:56.290  -->  00:03:58.209
like I said they're not really that much
90

90

00:03:58.209  -->  00:03:59.950
different from Java except that you can
91

91

00:03:59.950  -->  00:04:02.260
import top-level items like functions
92

92

00:04:02.260  -->  00:04:04.900
and extension functions and that's
93

93

00:04:04.900  -->  00:04:07.120
really the only difference. However,
94

94

00:04:07.120  -->  00:04:08.739
I just wanted to mention one last thing
95

95

00:04:08.739  -->  00:04:10.540
before we move on and this is just
96

96

00:04:10.540  -->  00:04:12.760
related to IntelliJ if you've been
97

97

00:04:12.760  -->  00:04:14.620
working on a file for a while you might
98

98

00:04:14.620  -->  00:04:16.870
end up with imports you're not using or
99

99

00:04:16.870  -->  00:04:20.109
duplicate imports etc and IntelliJ can
100

100

00:04:20.109  -->  00:04:22.390
clean up your imports for you, you can
101

101

00:04:22.390  -->  00:04:23.890
see here and now I have an import I'm
102

102

00:04:23.890  -->  00:04:27.280
not using because I had company
103

103

00:04:27.280  -->  00:04:29.020
communications here and then I deleted
104

104

00:04:29.020  -->  00:04:31.060
it, so I have an import that's not being
105

105

00:04:31.060  -->  00:04:33.430
used so of course I could come along and just
106

106

00:04:33.430  -->  00:04:35.379
delete it myself, but if there was a
107

107

00:04:35.379  -->  00:04:37.569
whole bunch of imports up here, I can
108

108

00:04:37.569  -->  00:04:39.249
have IntelliJ clean it up for me and
109

109

00:04:39.249  -->  00:04:40.659
there's two ways to do that,
110

110

00:04:40.659  -->  00:04:44.169
I can press ctrl alt o on Windows and
111

111

00:04:44.169  -->  00:04:46.659
guess that would be command alt o on a
112

112

00:04:46.659  -->  00:04:48.759
Mac, but I'm not sure but the way you can
113

113

00:04:48.759  -->  00:04:51.069
check is you can also go up to code and
114

114

00:04:51.069  -->  00:04:53.169
there's an item here for optimized
115

115

00:04:53.169  -->  00:04:55.300
imports and here it will tell you what
116

116

00:04:55.300  -->  00:04:58.509
the keyboard shortcut is. So I'm going to
117

117

00:04:58.509  -->  00:05:00.999
use the menu item and when I do, you'll
118

118

00:05:00.999  -->  00:05:02.979
see that it cleaned up the imports and
119

119

00:05:02.979  -->  00:05:04.810
got rid of the one we're not using, so I
120

120

00:05:04.810  -->  00:05:06.189
just wanted to show you how to do that
121

121

00:05:06.189  -->  00:05:08.680
because when you're working on a file,
122

122

00:05:08.680  -->  00:05:10.689
it can get messy after a while and that's a
123

123

00:05:10.689  -->  00:05:13.090
quick way to have the IDE clean up the
124

124

00:05:13.090  -->  00:05:14.620
imports rather than you having to
125

125

00:05:14.620  -->  00:05:16.659
manually come in and delete stuff and
126

126

00:05:16.659  -->  00:05:19.599
that's it for imports in the internal
127

127

00:05:19.599  -->  00:05:20.700
access modifier.
128

128

00:05:20.700  -->  00:05:23.969
I'll see you in the next video.
