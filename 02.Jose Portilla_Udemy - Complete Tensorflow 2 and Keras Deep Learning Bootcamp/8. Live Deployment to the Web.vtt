WEBVTT
1
00:00:05.470 --> 00:00:12.510
Welcome everyone to this lecture on live deployment let's now deploy our application it's working locally

2
00:00:12.630 --> 00:00:15.360
to the web so anyone online can use it.

3
00:00:15.360 --> 00:00:20.400
Keep in mind there are dozens of different services to deploy and host web applications and we can make

4
00:00:20.400 --> 00:00:24.890
an entire course out of just showing this process for every single service.

5
00:00:24.900 --> 00:00:31.380
But if you just do a google search of flask application plus deploy to your preferred platform like

6
00:00:31.470 --> 00:00:37.770
AWOL yes or Google or Azure there's going to be tutorials for pretty much any online service for deploying

7
00:00:37.770 --> 00:00:39.150
a python web application.

8
00:00:39.150 --> 00:00:40.510
So keep that in mind.

9
00:00:40.590 --> 00:00:44.400
We're going to be using the free service from Heroku mainly because it's free and you will get charge

10
00:00:44.400 --> 00:00:45.360
for this.

11
00:00:45.360 --> 00:00:49.710
However the one thing you will need to do is create a Heroku account and we'll kind of walk through

12
00:00:49.710 --> 00:00:55.180
that later on in this lecture however please make sure to follow along with us carefully.

13
00:00:55.230 --> 00:00:58.320
Any minor typo will pretty much cause the entire app to fail.

14
00:00:58.320 --> 00:01:02.550
So please make sure to reference our files during the deployment process and I'll be doing that myself

15
00:01:02.550 --> 00:01:03.320
as well.

16
00:01:04.350 --> 00:01:09.380
So the main steps we need to follow is to first create a Heroku account and then we need to install

17
00:01:09.380 --> 00:01:13.980
some command line tools that we're going to be using in order to push things to our server.

18
00:01:14.150 --> 00:01:19.370
Then we'll install and setup kit as well as create a Heroku application and essentially push and install

19
00:01:19.400 --> 00:01:25.760
everything to that online Heroku application let's begin by setting up a brand new folder on our desktop

20
00:01:25.990 --> 00:01:26.960
that we will work from.

21
00:01:26.990 --> 00:01:28.570
And we're gonna copy the official course files.

22
00:01:28.580 --> 00:01:31.990
This folder just to make sure that we don't make any typos along the way.

23
00:01:32.000 --> 00:01:33.350
So let me go to my desktop now.

24
00:01:33.530 --> 00:01:33.800
OK.

25
00:01:33.800 --> 00:01:39.220
Here I am at the desktop when I'm going to do is just create a new folder so how are we create a new

26
00:01:39.220 --> 00:01:40.300
folder in your operating system.

27
00:01:40.300 --> 00:01:47.170
Go ahead and do that and I'll call this folder just deployment all lowercase hit enter and then inside

28
00:01:47.170 --> 00:01:50.800
this folder what I'm going to do is let's go ahead and open it up.

29
00:01:50.800 --> 00:01:51.070
All right.

30
00:01:51.070 --> 00:01:55.480
So now let's grab the necessary files from the course notes.

31
00:01:55.480 --> 00:02:01.750
So I will open up tensor flow to boot camp come down to deployment and then what I'm going to do is

32
00:02:01.750 --> 00:02:09.100
grab the templates folder as well as our provided final app dot pie file and then the model and the

33
00:02:09.090 --> 00:02:10.480
pickle file.

34
00:02:10.480 --> 00:02:16.750
Go ahead and copy these and then bring them back over underneath the deployment folder.

35
00:02:16.840 --> 00:02:20.680
So then we'll go ahead and hit paste here.

36
00:02:20.840 --> 00:02:26.360
And one last thing we need to do is because of the way we're going to later on set up our process file

37
00:02:26.750 --> 00:02:31.180
I need to change this application to just be app dot pi.

38
00:02:31.220 --> 00:02:39.230
So go ahead and rename this to just be app dot pi later on we're going to be using a library called

39
00:02:39.230 --> 00:02:43.450
Green unicorn in order to set up a process file and within that process file.

40
00:02:43.460 --> 00:02:49.390
I just say app colon an app and because I say the name my app is app I need this to match up with app

41
00:02:49.390 --> 00:02:50.030
that pie.

42
00:02:50.030 --> 00:02:51.470
So go ahead and make that change

43
00:02:59.760 --> 00:03:05.100
and then what you're going to do is go ahead and search for Heroku hit enter.

44
00:03:05.100 --> 00:03:07.460
You'll see sign up at Heroku dot com.

45
00:03:07.500 --> 00:03:10.930
Go ahead and click on this and we're gonna do a couple of things here.

46
00:03:11.010 --> 00:03:12.520
We're gonna sign up for free.

47
00:03:12.540 --> 00:03:17.900
So go ahead and click sign up for free and then fill out the information to sign up.

48
00:03:17.910 --> 00:03:24.350
I already have an account here so I'm going to log in instead and once you log in you should be taken

49
00:03:24.350 --> 00:03:26.300
to your dashboard it looks something like this.

50
00:03:26.300 --> 00:03:30.590
And if it doesn't even go to a dashboard that Heroku comes forward slash apps.

51
00:03:30.590 --> 00:03:31.690
So this is the dashboard.

52
00:03:31.710 --> 00:03:36.530
But before we start using it we want to get the Heroku command line interface so open up a new browser

53
00:03:36.530 --> 00:03:37.220
to Google.

54
00:03:37.370 --> 00:03:45.340
And then just search for Heroku command line and then it should take you to this page right here on

55
00:03:45.340 --> 00:03:48.830
the command line specifically Hiroki is CSI.

56
00:03:48.910 --> 00:03:53.770
So here's the command line and there's this little button somewhere on this page says install the Heroku

57
00:03:53.770 --> 00:03:54.560
CSI.

58
00:03:55.030 --> 00:03:59.190
You can also do a google search install Heroku see a line I'll take you to this link.

59
00:03:59.290 --> 00:04:01.120
Go ahead and click on that.

60
00:04:01.120 --> 00:04:06.280
And then depending on your operating system you can either use the Mac OS installer the Ubuntu installer

61
00:04:06.310 --> 00:04:07.560
or the windows installer.

62
00:04:07.600 --> 00:04:12.810
I'm going to do the Windows installer in order to actually use the Heroku command line tool.

63
00:04:12.820 --> 00:04:14.020
You also need it.

64
00:04:14.200 --> 00:04:19.840
So if you check out get here you can follow the instructions on installing it as well as a first time

65
00:04:19.840 --> 00:04:24.220
get setup already have get installed on my computer so I don't need to follow these instructions I'll

66
00:04:24.220 --> 00:04:30.100
skip forward to installing the heroic command line interface so click on the 64 bit installer and then

67
00:04:30.100 --> 00:04:35.410
go ahead and download that once you've downloaded that Heroku setup just go ahead install the default

68
00:04:35.740 --> 00:04:40.960
option selected go ahead install it in a fast forward until this is done installing.

69
00:04:41.110 --> 00:04:41.500
All right.

70
00:04:41.530 --> 00:04:47.170
So that finished installing for me what we need to do next is open up our command prompt.

71
00:04:47.200 --> 00:04:52.570
Keep in mind since this is a command line interface tool and so as get you should really restart your

72
00:04:52.570 --> 00:04:54.540
computer before continuing on.

73
00:04:54.550 --> 00:04:58.410
So I would recommend that you restart your computer before continue onto the next step.

74
00:04:58.690 --> 00:05:03.110
I technically already had all these things installed so I don't need to restart my computer.

75
00:05:03.160 --> 00:05:09.550
So what I will do is directly come back here and open up an instance of my command prompt and what I'm

76
00:05:09.550 --> 00:05:18.160
going to do is I'm going to S.D. or change directory into my desktop and then C.D. into that deployment

77
00:05:18.880 --> 00:05:20.350
folder that I was in.

78
00:05:20.620 --> 00:05:26.350
Next I want to create a new environment just for this flask application.

79
00:05:26.350 --> 00:05:33.370
So the way we can do this with Anaconda is really similar to the way that we created it for our original

80
00:05:33.460 --> 00:05:35.060
tensor flow environment.

81
00:05:35.080 --> 00:05:40.570
One thing to note here is at the time that I'm filming this tensor flow does not yet support the latest

82
00:05:40.570 --> 00:05:43.600
version of Python which is Python three point eight.

83
00:05:43.630 --> 00:05:48.020
So we need to specify a specific version of Python in our create command.

84
00:05:48.130 --> 00:06:00.350
So I will say Conda create dash dash name and then let's call this my deploy e envy for my deployment

85
00:06:00.350 --> 00:06:06.700
environment and then say python is equal to three point seven.

86
00:06:06.860 --> 00:06:08.230
Go ahead and enter.

87
00:06:08.450 --> 00:06:14.540
And then what that should do is download and install Python three point seven for you go ahead and select

88
00:06:14.630 --> 00:06:16.130
Y for yes to that.

89
00:06:16.130 --> 00:06:19.290
It can download and install all this for you.

90
00:06:19.460 --> 00:06:24.450
Once that's done you should see something that looks like this that basically says activate the environment.

91
00:06:24.500 --> 00:06:33.780
I will say Conda activates my deploy e and V and now my environment has been activated.

92
00:06:33.830 --> 00:06:35.570
Let me type CLSA to clear this.

93
00:06:35.570 --> 00:06:38.320
We can go back to the top.

94
00:06:38.330 --> 00:06:39.320
There we go.

95
00:06:39.320 --> 00:06:43.540
So now my deployment is has an environment ready to go.

96
00:06:43.610 --> 00:06:45.650
I need to install the libraries.

97
00:06:45.650 --> 00:06:47.260
I am going to be using.

98
00:06:47.390 --> 00:06:52.760
So we'll say pip install and we should be using Pip for this not contour and you'll see why later on

99
00:06:53.120 --> 00:06:55.660
we'll make a pip freeze requirements file off of this.

100
00:06:55.700 --> 00:07:02.840
So we'll say pip install and we know each flask so we'll install flask and then after flask is done

101
00:07:02.900 --> 00:07:03.900
installing.

102
00:07:03.980 --> 00:07:09.820
We'll also need to pip install flask dash WTS.

103
00:07:12.490 --> 00:07:15.430
So let that install going to clear my screen again.

104
00:07:15.460 --> 00:07:16.990
So a couple more libraries.

105
00:07:16.990 --> 00:07:23.050
Obviously we need to install tensor flow but we also need to install cycle learn so go in and say cycle

106
00:07:23.080 --> 00:07:28.540
learn pip install cycle learn recall we use that for the scaling object so it's going to download and

107
00:07:28.540 --> 00:07:33.430
install both side pipes like it learn and anything else it needs in a fast forward until it's done.

108
00:07:34.000 --> 00:07:34.200
All right.

109
00:07:34.210 --> 00:07:39.290
So I've finished installing what's nice about this it also installs job lib and MP for a certain thing

110
00:07:39.310 --> 00:07:40.830
to worry about that anymore.

111
00:07:41.110 --> 00:07:48.260
And then you just need to say pip install tensor flow and hit enter.

112
00:07:48.310 --> 00:07:55.330
OK so going to fast forward until that's done installing collecting sensor flow once that's done go

113
00:07:55.330 --> 00:07:57.790
ahead and install one more library.

114
00:07:57.790 --> 00:08:06.790
Going to clear my screen here and that library is called g unicorn which stands for green unicorn which

115
00:08:06.790 --> 00:08:13.150
is essentially a python web server Gateway interface and it's what allows us to take our flasks application

116
00:08:13.150 --> 00:08:15.540
and push it to the Heroku server.

117
00:08:15.640 --> 00:08:18.360
So go ahead and then say Pip install G unicorn.

118
00:08:18.370 --> 00:08:21.730
Now one should be a pretty fast and pretty straight forward.

119
00:08:21.770 --> 00:08:28.780
So our virtual environment now has all these Pip installed for libraries and we want to make sure that

120
00:08:28.780 --> 00:08:33.700
we can get the requirements out text file that we can then push the server and pip install all the libraries

121
00:08:33.760 --> 00:08:34.950
onto the server.

122
00:08:35.050 --> 00:08:42.840
So what we do here is once we're done of all this we say Pip freeze and then we do kind of an arrow

123
00:08:42.840 --> 00:08:48.230
sign or greater than sign and then say requirements Dot T X T.

124
00:08:48.270 --> 00:08:54.570
And it has to be called requirements that to 60 for Heroku then hit enter and you should now see requirements

125
00:08:54.570 --> 00:08:56.130
that t x t as a file.

126
00:08:56.520 --> 00:08:59.790
Let's go ahead and check that out on our computer.

127
00:08:59.790 --> 00:09:03.840
So here under deployment now notice I have this requirements file.

128
00:09:04.000 --> 00:09:10.680
There's one more file that we need to create and that is a process file and that's also specially required

129
00:09:11.070 --> 00:09:12.240
by Heroku.

130
00:09:12.240 --> 00:09:20.120
So to do it what I need to do is open up sublime text editor let me go ahead and do that so let me bring

131
00:09:20.120 --> 00:09:23.120
in sublime text editor open already.

132
00:09:23.120 --> 00:09:27.860
And what I'm going to do is I'm going to type out the following and you need to type this exactly as

133
00:09:27.860 --> 00:09:29.120
I'm showing here.

134
00:09:29.390 --> 00:09:40.730
Web colon space G unicorn space app colon app.

135
00:09:40.820 --> 00:09:42.080
So that's all we need there.

136
00:09:42.200 --> 00:09:49.950
And then we're going to do here is we're going to say file and then we'll save this and then underneath

137
00:09:49.950 --> 00:09:58.590
my deployment for folder are going to save this as capital P R O C F I L E so proc file or process file

138
00:09:59.220 --> 00:10:01.250
and then we save that there.

139
00:10:01.260 --> 00:10:05.940
Okay so I was the last thing you need to do in order to set everything up in order to push this all

140
00:10:05.940 --> 00:10:06.690
to Heroku.

141
00:10:06.750 --> 00:10:08.410
So let me close this now.

142
00:10:08.880 --> 00:10:11.560
We have our requirements file ready set up.

143
00:10:11.670 --> 00:10:17.320
We have our model and our scalar the app file and then the templates as well.

144
00:10:17.320 --> 00:10:22.690
Now let's go back to Heroku and set up our application on the Heroku end of things before we come back

145
00:10:22.690 --> 00:10:24.250
to the command line.

146
00:10:24.370 --> 00:10:33.280
So I'm going to open up Heroku again and then when I'm going to do is I'm gonna Google Search Heroku

147
00:10:33.360 --> 00:10:34.230
woops.

148
00:10:34.450 --> 00:10:35.670
Yes I did mean Heroku.

149
00:10:35.680 --> 00:10:42.830
There we go and then we're going to create a new app so click on Create new app and then we need to

150
00:10:42.830 --> 00:10:50.070
choose a unique app name so I will call this my dash flower dash app and it'll tell me whether or not

151
00:10:50.070 --> 00:10:50.820
it's available.

152
00:10:50.820 --> 00:10:53.490
Looks like it is available so me hit then create app

153
00:10:57.100 --> 00:11:02.140
and then we're we're going to do is we're going to be using the Heroku get command line interface as

154
00:11:02.140 --> 00:11:06.920
our deployment method and then we're just going to follow the instructions shown here.

155
00:11:06.940 --> 00:11:11.340
So it's really nice but this is you have the step by step instructions as shown here.

156
00:11:11.350 --> 00:11:12.960
So let's go ahead and do this.

157
00:11:13.060 --> 00:11:15.880
So we're gonna do all these instructions at our command line.

158
00:11:15.880 --> 00:11:22.580
Can I bring up my command line again let me shrink it down so we kind of see both at the same time.

159
00:11:22.830 --> 00:11:31.680
The first thing that we need to do is type out Heroku log in to say Heroku log in and if it says Heroku

160
00:11:31.680 --> 00:11:32.730
is not recognized.

161
00:11:32.730 --> 00:11:37.460
Go ahead and make sure you restart your computer but upon hitting Heroku log in.

162
00:11:37.620 --> 00:11:42.930
You should be able to press any key to open up the browser so open that up and it should open up an

163
00:11:42.960 --> 00:11:50.130
automatic browser page that then allows you to log in to Heroku and then once you hit that log in and

164
00:11:50.130 --> 00:11:52.400
sign in they'll say logged in as.

165
00:11:52.500 --> 00:11:55.240
And then your email that you're using for the log in.

166
00:11:55.400 --> 00:11:55.640
OK.

167
00:11:55.650 --> 00:12:00.560
So once that's ready next hour you're going to do is create a new get repository.

168
00:12:00.780 --> 00:12:09.000
So make sure you see the ad already and then say get in it hit enter and now initialize an empty kit

169
00:12:09.000 --> 00:12:16.620
repository and then what we'll do is type up the command as shown here Heroku space get colon remote

170
00:12:16.950 --> 00:12:22.620
dash a my flower app or whatever you happen to name your application.

171
00:12:22.680 --> 00:12:26.950
So this essentially syncs up that get repository to remote on Heroku.

172
00:12:27.000 --> 00:12:29.730
Next we want to deploy our application.

173
00:12:29.730 --> 00:12:38.070
So we say gets ad space just a dot or a period to enter the ads and any new files that we created there.

174
00:12:39.370 --> 00:12:49.380
And then we're going to say gets commit space dash a M and then double quotes here added files or whatever

175
00:12:49.380 --> 00:12:54.720
message you want to say hit enter and you should see it essentially create modes for all those files

176
00:12:55.290 --> 00:13:01.110
and then the last minute to type in here you follow along the instructions is get push Heroku master.

177
00:13:01.140 --> 00:13:09.120
So you say get push Heroku master and now we'll take all those files and push them up to the Heroku

178
00:13:09.420 --> 00:13:10.520
server.

179
00:13:10.800 --> 00:13:15.000
So give that some time depending on your internet speed.

180
00:13:15.000 --> 00:13:20.460
It may take a little bit of time to actually push everything to the Heroku server.

181
00:13:20.460 --> 00:13:21.430
OK.

182
00:13:21.510 --> 00:13:26.460
And then there's instructions here if you already have an existing repository you can just run these

183
00:13:26.460 --> 00:13:27.660
commands.

184
00:13:27.720 --> 00:13:31.080
OK I'm going to fast forward until that's done.

185
00:13:31.080 --> 00:13:36.290
Now something you may notice from time to time depending on your application is towards the very bottom.

186
00:13:36.300 --> 00:13:42.250
It may say something like push failed you know push rejected something et cetera or remote rejected.

187
00:13:42.360 --> 00:13:48.030
And essentially what's happening is Heroku requires for a python application.

188
00:13:48.030 --> 00:13:53.880
The requirements not text file and what it tries to do is install all those libraries in your requirements

189
00:13:54.000 --> 00:13:59.310
text file and if it's not able to do one of them they'll just reject the push and you'll notice that

190
00:13:59.310 --> 00:14:05.970
if I scroll up here it said no matching distribution found for tensor flow two point zero point zero

191
00:14:06.620 --> 00:14:08.140
but you'll notice it.

192
00:14:08.280 --> 00:14:09.680
It tried a bunch of things.

193
00:14:09.680 --> 00:14:15.570
So it said hey we tried zero point twelve point one one point zero etc. and towards the very end you'll

194
00:14:15.570 --> 00:14:21.630
notice that there is alpha or beta versions that are available for whatever particular version of Python

195
00:14:21.720 --> 00:14:23.730
that Heroku is using.

196
00:14:23.730 --> 00:14:30.240
So we need to do is open up our requirements our text file and change to point zero point zero to two

197
00:14:30.240 --> 00:14:35.940
point zero point zero a zero and you'll see this for any other type of library that you're trying to

198
00:14:35.940 --> 00:14:38.390
install in case you run into any issues.

199
00:14:38.400 --> 00:14:39.990
So let's open up sublime.

200
00:14:40.470 --> 00:14:48.690
So open up sublime text editor and then what I'm going to say is File Open file going to open up requirements

201
00:14:48.780 --> 00:14:57.100
file and then essentially scroll down here until we find tensor flow and here's tensor flow.

202
00:14:57.110 --> 00:15:02.870
What I'm going to do is let's go and just delete tensor flow estimate her as well as tensor board because

203
00:15:02.900 --> 00:15:05.880
we know those will be installed automatically if tensor flow.

204
00:15:05.960 --> 00:15:07.670
And here we have two point zero point zero.

205
00:15:07.670 --> 00:15:09.200
It's not able to find that.

206
00:15:09.260 --> 00:15:15.940
So we'll come back to our actual command line that was telling us what version was available.

207
00:15:15.940 --> 00:15:19.480
It looks like zero point zero a zero is available.

208
00:15:19.480 --> 00:15:30.400
So let's do that let's say 2.0 and then say a zero save those changes and then we're going to come back

209
00:15:30.400 --> 00:15:32.920
to our command prompt.

210
00:15:32.940 --> 00:15:33.190
All right.

211
00:15:33.200 --> 00:15:43.030
With those new changes we want to commit them so we say get commit dash a M and say updated requirements

212
00:15:43.030 --> 00:15:50.080
file or whatever you want to say hit enter and then it'll probably report back to you that it updated.

213
00:15:50.210 --> 00:15:54.340
I actually committed twice during the filming of this so it says nothing to commit.

214
00:15:54.370 --> 00:16:03.670
After that we'll say get push Heroku master and we're gonna try essentially pushing that command again

215
00:16:04.150 --> 00:16:08.590
now with our fixed requirements file so we'll see all this thing.

216
00:16:08.590 --> 00:16:11.490
It says app detected pushing and stalling.

217
00:16:11.650 --> 00:16:17.440
Notice it's installing Python three point six nine it's installing Pip etc. So we should now be able

218
00:16:17.440 --> 00:16:22.700
to find the particular version of tensor flow that Heroku has access to.

219
00:16:22.720 --> 00:16:27.130
So let's go ahead and fast forward until this is done installing.

220
00:16:27.130 --> 00:16:27.370
All right.

221
00:16:27.760 --> 00:16:32.660
So at the very end we should be seeing is something like this verifying deploy done.

222
00:16:32.920 --> 00:16:38.170
And if you ever want to update anything you just need to do some more commitments or more commits excuse

223
00:16:38.170 --> 00:16:40.180
me and then push those as well.

224
00:16:40.210 --> 00:16:47.260
So what's really cool here is notice it says HD CPS my flower app Heroku app dot com deployed to Heroku

225
00:16:47.710 --> 00:16:50.170
go ahead and copy that.

226
00:16:50.180 --> 00:16:53.230
Your URL and take it to your browser souls.

227
00:16:53.230 --> 00:16:54.800
Open up our browser.

228
00:16:54.820 --> 00:16:55.150
All right.

229
00:16:55.180 --> 00:17:01.480
So now our application is running live on the web which means anyone could access this from a laptop

230
00:17:01.480 --> 00:17:02.650
with Web access.

231
00:17:02.680 --> 00:17:05.770
Let's go ahead and just input the values we did last time.

232
00:17:05.770 --> 00:17:08.580
Luckily my browser remember them analyze.

233
00:17:09.520 --> 00:17:15.910
And then here we go the flower class is supposed to keep in mind if you have an extremely large model

234
00:17:16.030 --> 00:17:20.470
this won't fit within the free tier but our model is pretty simple or scaling is pretty simple.

235
00:17:20.470 --> 00:17:25.810
And there it is your tenth floor application is now live on the web.

236
00:17:25.810 --> 00:17:26.870
Congratulations.

237
00:17:26.920 --> 00:17:28.900
And I hope you enjoyed the process.
