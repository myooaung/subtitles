WEBVTT
1
00:00:01.040 --> 00:00:07.240
So now we have one more solution that we're going to integrate in with the CDK.

2
00:00:07.240 --> 00:00:07.930
So first,

3
00:00:07.930 --> 00:00:12.440
let's take a look at Globomantics and what Josh is working to implement.

4
00:00:12.440 --> 00:00:18.510
So he has successfully built the API tier for his proof of concept; however,

5
00:00:18.510 --> 00:00:20.780
he still needs to do a few things.

6
00:00:20.780 --> 00:00:21.460
First of all,

7
00:00:21.460 --> 00:00:26.600
he's going to create a custom container for a Node.js Express web server,

8
00:00:26.600 --> 00:00:32.340
and he's then going to deploy the container to AWS using Fargate.

9
00:00:32.340 --> 00:00:36.840
He then needs to implement a load balancer for the service.

10
00:00:36.840 --> 00:00:39.300
So let's quickly go back, and let's look at the sample

11
00:00:39.300 --> 00:00:42.270
architecture that we've discussed over this course.

12
00:00:42.270 --> 00:00:45.560
And right now, we have already implemented this.

13
00:00:45.560 --> 00:00:49.740
We've been able to get our documents bucket in place, we have our API,

14
00:00:49.740 --> 00:00:53.840
which connects to a Lambda function to query our S3 bucket, and

15
00:00:53.840 --> 00:00:56.210
we have a VPC setup that, really to be honest,

16
00:00:56.210 --> 00:00:57.740
we haven't used yet.

17
00:00:57.740 --> 00:01:00.130
So here within this module,

18
00:01:00.130 --> 00:01:03.340
we're going to be walking through implementing the remaining steps,

19
00:01:03.340 --> 00:01:07.470
having a web server service that's deployed behind a load balancer, and then

20
00:01:07.470 --> 00:01:11.240
storing our container image within the container registry.

21
00:01:11.240 --> 00:01:12.840
So here's what we're going to be doing.

22
00:01:12.840 --> 00:01:16.840
So first, we're going to be reviewing the container services on AWS.

23
00:01:16.840 --> 00:01:18.840
This is going to be a really quick run through.

24
00:01:18.840 --> 00:01:21.260
It's not designed to give you the full context,

25
00:01:21.260 --> 00:01:22.990
but if you're new to the container services,

26
00:01:22.990 --> 00:01:24.740
it will give you an overview.

27
00:01:24.740 --> 00:01:28.740
We're then going to be creating a TypeScript and Express Docker container.

28
00:01:28.740 --> 00:01:33.210
We'll then be deploying our Docker container using AWS Fargate, and then

29
00:01:33.210 --> 00:01:35.710
we'll be verifying our Fargate deployment.

30
00:01:35.710 --> 00:01:43.000
And once we get through all of that, I'm going to be discussing next steps that you can take with the CDK.

