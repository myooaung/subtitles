WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.545
So now that my website is working both with and without

00:00:04.545 --> 00:00:08.880
www and actually managed to see everything.

00:00:08.880 --> 00:00:11.805
And I'm quite happy that everything is working properly.

00:00:11.805 --> 00:00:15.615
I want to move to the second part and that is automated.

00:00:15.615 --> 00:00:22.800
So what I have here is essentially a project which contains HTML and JavaScript files.

00:00:22.800 --> 00:00:25.410
It is a Gatsby project that is

00:00:25.410 --> 00:00:29.370
using some JavaScript in order to dynamically build some pages.

00:00:29.370 --> 00:00:30.750
But essentially in the end,

00:00:30.750 --> 00:00:33.520
I'll have here a public folder that contains

00:00:33.520 --> 00:00:37.280
all the HTML and all the JavaScript pages that are required.

00:00:37.280 --> 00:00:39.845
Because this is a build process.

00:00:39.845 --> 00:00:41.300
I want to automate this.

00:00:41.300 --> 00:00:44.210
I don't want to go from the CLI to be able to build

00:00:44.210 --> 00:00:47.300
everything and then to to go to the website,

00:00:47.300 --> 00:00:49.775
to the server, and then to go to

00:00:49.775 --> 00:00:53.780
AWS to manually drag and drop files and things like that.

00:00:53.780 --> 00:00:55.640
What we are going to do is we're going to use

00:00:55.640 --> 00:00:59.510
GitLab CI to automate this entire build process.

00:00:59.510 --> 00:01:02.450
And I'm going to take you step-by-step and explain what I mean by that.

00:01:02.450 --> 00:01:07.430
Now the first step is to go to GitHub.com and register for an account.

00:01:07.430 --> 00:01:09.200
When you are inside your account,

00:01:09.200 --> 00:01:12.305
you should be able to see something like new project.

00:01:12.305 --> 00:01:15.950
And we're going to create a blank project.

00:01:15.950 --> 00:01:19.820
So I'm going to name my project exactly as the domain name.

00:01:19.820 --> 00:01:23.600
And of course I'm going to remove anything like HTTP and things like that.

00:01:23.600 --> 00:01:26.855
So www and my domain name.

00:01:26.855 --> 00:01:28.760
And I'm going to leave this private.

00:01:28.760 --> 00:01:34.049
And I'm not gonna initialize with a read me because I already have a Git repository.

00:01:34.300 --> 00:01:38.825
So now this is the repository that has been created for my code.

00:01:38.825 --> 00:01:42.259
And I can look here at pushing an existing Git repository.

00:01:42.259 --> 00:01:47.520
So practically the command that I'm interested in is adding a new remote.

00:01:49.540 --> 00:01:54.540
And of course what I need to do is also to push all the changes.

00:01:54.940 --> 00:01:58.220
Now in my case, everything is working with doubt in

00:01:58.220 --> 00:02:01.490
additional configuration because I have Git installed locally.

00:02:01.490 --> 00:02:06.860
I have configured my private key and my public key with gitlab.com.

00:02:06.860 --> 00:02:09.695
So in this case, everything is ultimately integrated.

00:02:09.695 --> 00:02:11.600
If you're just getting started with this,

00:02:11.600 --> 00:02:15.950
probably easier if you just make a copy of the project that you will find in

00:02:15.950 --> 00:02:21.830
the video description and use the interface from getline HCI to edit those files.

00:02:21.830 --> 00:02:23.930
So if I refresh this page,

00:02:23.930 --> 00:02:25.130
we will be able to see that.

00:02:25.130 --> 00:02:26.675
No, I see all my files.

00:02:26.675 --> 00:02:29.060
Just in case you want to do something from here,

00:02:29.060 --> 00:02:34.910
you can simply click on any file or click on the plus here to add a new file.

00:02:34.910 --> 00:02:37.415
And if you just want to edit something,

00:02:37.415 --> 00:02:40.520
you can click on it. Click on edit.

00:02:40.520 --> 00:02:46.500
And you don't have to have Git installed and everything that I'm showing you from my ID.
