1
00:00:01,110 --> 00:00:04,140
Before we're able to use the Database Migration Service to

2
00:00:04,140 --> 00:00:06,820
move our data from our databases into AWS,

3
00:00:06,820 --> 00:00:10,840
we need to understand the concept of sources and targets.

4
00:00:10,840 --> 00:00:13,370
Now these concepts are relatively straightforward.

5
00:00:13,370 --> 00:00:16,360
A database source is where you're getting the data

6
00:00:16,360 --> 00:00:18,200
from and where it is right now.

7
00:00:18,200 --> 00:00:21,990
This could be an on‑premises environment or another cloud or even another

8
00:00:21,990 --> 00:00:25,600
database inside of AWS that you're migrating between.

9
00:00:25,600 --> 00:00:27,650
There's also the concept of a target.

10
00:00:27,650 --> 00:00:30,820
Targets are where you want to move your data to.

11
00:00:30,820 --> 00:00:33,630
Now there are a lot of different sources and targets that we

12
00:00:33,630 --> 00:00:35,930
might want to use when working with DMS.

13
00:00:35,930 --> 00:00:38,260
Let's take a look at a few of them here.

14
00:00:38,260 --> 00:00:40,870
One of the first options is a source like Oracle,

15
00:00:40,870 --> 00:00:43,710
which can actually be both a source and a target.

16
00:00:43,710 --> 00:00:47,810
If you want to move data from something elsewhere inside of an Oracle database,

17
00:00:47,810 --> 00:00:51,240
you could also move it into AWS inside of an Oracle database.

18
00:00:51,240 --> 00:00:53,290
And there's a few examples of this,

19
00:00:53,290 --> 00:00:57,810
like Microsoft SQL Server, MySQL, and PostgreSQL. These

20
00:00:57,810 --> 00:01:00,520
can all be either a source or a target.

21
00:01:00,520 --> 00:01:03,370
Now let's take a look at some other options that might be different in that

22
00:01:03,370 --> 00:01:06,640
respect in that they can only be a source or a target.

23
00:01:06,640 --> 00:01:09,260
First, there's the option of MariaDB,

24
00:01:09,260 --> 00:01:11,900
and it's another popular open source database.

25
00:01:11,900 --> 00:01:17,680
But there are other options, like Db2 LUW, SAP, and MongoDB,

26
00:01:17,680 --> 00:01:20,380
which are other frequently used databases.

27
00:01:20,380 --> 00:01:23,790
Now if we wanted to move some of those into AWS,

28
00:01:23,790 --> 00:01:26,460
we need to end up picking some sort of target inside

29
00:01:26,460 --> 00:01:28,940
of AWS that isn't one of those.

30
00:01:28,940 --> 00:01:31,960
Now there's also the option to use Amazon Aurora as a source and

31
00:01:31,960 --> 00:01:35,440
migrated over into one of these targets inside of AWS.

32
00:01:35,440 --> 00:01:37,470
Now if you're using Amazon Aurora, technically,

33
00:01:37,470 --> 00:01:43,100
it's already inside of AWS, but you can migrate it between other options there.

34
00:01:43,100 --> 00:01:45,820
Now what are some of the options that can only be targets?

35
00:01:45,820 --> 00:01:48,750
Well, you might want to move things over to Amazon Redshift,

36
00:01:48,750 --> 00:01:52,450
especially if you're using some sort of data warehousing applications that you

37
00:01:52,450 --> 00:01:55,810
want to be able to run queries on large amounts of data and get some analytics

38
00:01:55,810 --> 00:02:00,350
back. Now you might also use things like SAP ASE or,

39
00:02:00,350 --> 00:02:03,550
if you want to store more data in an object‑style format,

40
00:02:03,550 --> 00:02:06,430
something like Amazon S3 can be really useful.

41
00:02:06,430 --> 00:02:09,600
You can use it with other tools like AWS Glue or Amazon Athena.

42
00:02:09,600 --> 00:02:14,330
Or you can just keep your data around in pretty cheap storage for a long time.

43
00:02:14,330 --> 00:02:16,700
Other options for more structured access to your data would

44
00:02:16,700 --> 00:02:19,310
be something like Amazon's DynamoDB tool,

45
00:02:19,310 --> 00:02:23,890
which is a NoSQL offering that gives you really low latency to access your data.

46
00:02:23,890 --> 00:02:27,070
Now if you want a full understanding of what the different sources and

47
00:02:27,070 --> 00:02:29,520
targets are and which ones of them are supported,

48
00:02:29,520 --> 00:02:32,990
I've left the link below that you can check out any time to see what the

49
00:02:32,990 --> 00:02:38,190
newest and best supported sources and targets are for DMS. Now one

50
00:02:38,190 --> 00:02:41,490
important distinction to make with these sources and targets is that

51
00:02:41,490 --> 00:02:43,430
there are two kinds of migration types,

52
00:02:43,430 --> 00:02:46,610
and this might come up in AWS exams or just when you're talking with

53
00:02:46,610 --> 00:02:50,720
other people about database migration and AWS. The first is a

54
00:02:50,720 --> 00:02:54,160
homogeneous database migration where you're moving from something like

55
00:02:54,160 --> 00:02:59,400
a MySQL database into AWS, but it's still a MySQL database. So,

56
00:02:59,400 --> 00:03:02,720
essentially, you're moving the same kind of database from one location

57
00:03:02,720 --> 00:03:04,240
to another location.

58
00:03:04,240 --> 00:03:06,220
Now there's another kind of migration that you might

59
00:03:06,220 --> 00:03:09,110
use called a heterogeneous migration.

60
00:03:09,110 --> 00:03:13,140
Now this might be something like moving a SQL database into a NoSQL tool

61
00:03:13,140 --> 00:03:17,880
like DynamoDB, or it could be moving one SQL database from one SQL database

62
00:03:17,880 --> 00:03:22,090
tool like MySQL to another SQL database tool.

63
00:03:22,090 --> 00:03:25,150
So now that you know a bit more about sources and targets,

64
00:03:25,150 --> 00:03:27,350
as well as the different types of migrations we can have

65
00:03:27,350 --> 00:03:28,880
between those sources and targets,

66
00:03:28,880 --> 00:03:36,000
meaning homogeneous or heterogeneous migrations, let's look at how the replication actually happens in the next video.

