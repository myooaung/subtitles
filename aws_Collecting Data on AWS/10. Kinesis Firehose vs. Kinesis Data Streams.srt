1
00:00:00,700 --> 00:00:03,120
The first thing we need to do before anything there can

2
00:00:03,120 --> 00:00:06,740
happen is go back to our VS Code editor here.

3
00:00:06,740 --> 00:00:11,020
Now, in this case, we're going to be running the streamer.py function,

4
00:00:11,020 --> 00:00:15,320
which is going to send data into the Kinesis Stream we created using a

5
00:00:15,320 --> 00:00:18,320
very similar format to a previous demo we looked at.

6
00:00:18,320 --> 00:00:21,230
In order to do this, I'm going to use python3.

7
00:00:21,230 --> 00:00:21,780
In this case,

8
00:00:21,780 --> 00:00:27,160
I'll start with python3 ‑m venv and venv again to create a virtual

9
00:00:27,160 --> 00:00:29,940
environment to store our Python dependencies in.

10
00:00:29,940 --> 00:00:30,080
Now,

11
00:00:30,080 --> 00:00:33,030
this will help us avoid polluting our global installation of

12
00:00:33,030 --> 00:00:35,980
Python and its dependencies by creating this virtual

13
00:00:35,980 --> 00:00:38,230
environment to do everything inside of.

14
00:00:38,230 --> 00:00:39,830
On a Windows machine,

15
00:00:39,830 --> 00:00:42,010
you might have a different command you need in order to

16
00:00:42,010 --> 00:00:44,970
turn this virtual environment on, but on Mac or Linux,

17
00:00:44,970 --> 00:00:50,040
you should be able to run the source command and then run venv/bin/activate.

18
00:00:50,040 --> 00:00:52,000
Now,

19
00:00:52,000 --> 00:00:54,940
typing that in and pressing Enter should put the parentheses

20
00:00:54,940 --> 00:00:57,030
in venv in front of your terminal here,

21
00:00:57,030 --> 00:00:59,560
and that means that you've successfully activated it.

22
00:00:59,560 --> 00:01:00,690
On a Windows machine,

23
00:01:00,690 --> 00:01:04,660
just reference the cheat sheet of commands that I have for this module.

24
00:01:04,660 --> 00:01:08,050
That explains the different options that you have for activating venv,

25
00:01:08,050 --> 00:01:11,140
either in the command prompt or in PowerShell.

26
00:01:11,140 --> 00:01:12,430
Now that I've turned this on,

27
00:01:12,430 --> 00:01:17,300
I can use pip install to create dependencies in this virtual environment.

28
00:01:17,300 --> 00:01:17,920
In this case,

29
00:01:17,920 --> 00:01:20,910
I want to install boto3 because that's one thing we'll be

30
00:01:20,910 --> 00:01:23,950
using inside of this streamer.py file.

31
00:01:23,950 --> 00:01:28,940
You can see that if you scroll to the top and see the import of boto3 on line 1.

32
00:01:28,940 --> 00:01:31,110
Now, with this all imported, let's clear the screen,

33
00:01:31,110 --> 00:01:34,040
and then let's start running this script by doing

34
00:01:34,040 --> 00:01:38,120
python and then typing in streamer.py.

35
00:01:38,120 --> 00:01:39,270
Now that I hit Enter,

36
00:01:39,270 --> 00:01:42,910
it should start streaming data into our Kinesis Data Stream.

37
00:01:42,910 --> 00:01:45,250
Now, if we're wondering if this is working or not,

38
00:01:45,250 --> 00:01:48,850
it might take up to 60 seconds for the data to go through the

39
00:01:48,850 --> 00:01:52,540
Kinesis Data Stream over to our Kinesis Firehose and get

40
00:01:52,540 --> 00:01:54,770
buffered inside of the Kinesis Firehose,

41
00:01:54,770 --> 00:01:57,220
either with the buffer size of the buffer interval,

42
00:01:57,220 --> 00:02:01,320
and then sent over to S3 after it's been processed by Lambda.

43
00:02:01,320 --> 00:02:03,790
So let's try and take a look at this now.

44
00:02:03,790 --> 00:02:05,220
Fortunately, in the Firehose section,

45
00:02:05,220 --> 00:02:08,500
it makes it pretty easy for us to look at all the different resources.

46
00:02:08,500 --> 00:02:12,390
I could look at the Lambda function that's actually processing the data.

47
00:02:12,390 --> 00:02:14,490
I could also go to the source itself to see what's

48
00:02:14,490 --> 00:02:17,090
happening in our upstream Kinesis Data Stream.

49
00:02:17,090 --> 00:02:19,960
And I can go to the destination to see whether or not

50
00:02:19,960 --> 00:02:21,840
the data has already arrived there.

51
00:02:21,840 --> 00:02:24,040
So, let's look at the Lambda function first,

52
00:02:24,040 --> 00:02:27,390
just to see if in the Monitoring section we have anything going on.

53
00:02:27,390 --> 00:02:30,580
And it looks like we haven't had anything start quite yet,

54
00:02:30,580 --> 00:02:32,040
so give it a moment,

55
00:02:32,040 --> 00:02:36,440
and we'll see how long it takes in order to send the data over.

56
00:02:36,440 --> 00:02:40,590
After refreshing the page and waiting for about 60 seconds to a few minutes,

57
00:02:40,590 --> 00:02:44,130
we should start to see some data coming into our Lambda view here.

58
00:02:44,130 --> 00:02:44,300
Now,

59
00:02:44,300 --> 00:02:47,130
this means that our Lambda function is successfully processing

60
00:02:47,130 --> 00:02:50,210
some things inside of our files that are going through the Kinesis

61
00:02:50,210 --> 00:02:52,940
Data Stream over to Kinesis Firehose.

62
00:02:52,940 --> 00:02:55,700
So we should be able to close this out and then go to the S3

63
00:02:55,700 --> 00:02:58,820
bucket that's respective to our Kinesis Firehose.

64
00:02:58,820 --> 00:02:59,970
Inside of here,

65
00:02:59,970 --> 00:03:04,100
we should be able to open up the folders that start with the year,

66
00:03:04,100 --> 00:03:08,170
month, and then day of whatever day we're processing things on.

67
00:03:08,170 --> 00:03:11,060
Then we'll have the hour in UTC time, and finally,

68
00:03:11,060 --> 00:03:14,130
a bunch of different files that have been processed by Lambda.

69
00:03:14,130 --> 00:03:17,700
Now, I've been waiting for a few minutes to make sure that some appear here,

70
00:03:17,700 --> 00:03:22,500
so we can go ahead and download the latest one.

71
00:03:22,500 --> 00:03:24,820
So now that I have this sales data downloaded,

72
00:03:24,820 --> 00:03:27,840
let's open it up in our browser to see what it looks like.

73
00:03:27,840 --> 00:03:31,200
It looks like it's correctly output into CSV format here,

74
00:03:31,200 --> 00:03:32,160
and if we wanted to,

75
00:03:32,160 --> 00:03:35,730
we could give this directly to our data analysts to start letting them

76
00:03:35,730 --> 00:03:38,790
review how many shirts have been sold in this period,

77
00:03:38,790 --> 00:03:42,790
and give them the ability to interact with it in their native CSV format,

78
00:03:42,790 --> 00:03:44,370
and the tools that they like using,

79
00:03:44,370 --> 00:03:47,890
like Excel and other spreadsheet tools like that.

80
00:03:47,890 --> 00:03:51,840
So, congratulations, you've just managed to put together a Kinesis Data Stream,

81
00:03:51,840 --> 00:03:53,110
Kinesis Firehose,

82
00:03:53,110 --> 00:03:58,720
and AWS lambda‑based application to stream data into Kinesis Data Streams,

83
00:03:58,720 --> 00:04:05,000
process it with Data Firehose in the AWS Lambda, and then deliver it to Amazon S3.

