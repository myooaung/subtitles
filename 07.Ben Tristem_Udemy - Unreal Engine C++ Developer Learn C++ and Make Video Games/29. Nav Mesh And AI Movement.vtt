WEBVTT
1
00:00:04.430 --> 00:00:05.570
Hello and welcome in this lecture.

2
00:00:05.600 --> 00:00:12.290
We're going to be getting at A.I. to follow us and navigate around the world, avoiding obstacles and

3
00:00:12.290 --> 00:00:14.900
just generally being a little bit of an annoying nuisance.

4
00:00:15.200 --> 00:00:17.330
Let's dive in and see how this is possible.

5
00:00:18.470 --> 00:00:26.150
So the next most of your obvious piece of the puzzle that we need to sort out here is getting our A.I.

6
00:00:26.270 --> 00:00:27.560
to move towards us.

7
00:00:27.720 --> 00:00:29.000
Good them just standing there.

8
00:00:29.300 --> 00:00:31.760
They also need to move and then they'll need to shoot.

9
00:00:31.760 --> 00:00:34.570
First of all, that's figure out how we can do movement.

10
00:00:35.510 --> 00:00:39.860
Now, when you're moving with A.I., A.I. needs to know about obstacles.

11
00:00:39.860 --> 00:00:44.210
It needs to do something called pathfinding because say I'm hiding down in this corridor here and it

12
00:00:44.210 --> 00:00:45.050
wants to get to me.

13
00:00:45.440 --> 00:00:48.550
It needs to know that it can't just move through the wall.

14
00:00:48.560 --> 00:00:53.690
It's going to need to plan its roots to come around the obstacles and come towards me.

15
00:00:54.380 --> 00:01:00.740
Now, the way this typically works, even games in general and specifically here in Unreal is that we

16
00:01:00.740 --> 00:01:08.240
generate a mesh which tells us where is walkable within a level and then using various algorithms,

17
00:01:08.240 --> 00:01:10.280
one of which is called a style pathfinding.

18
00:01:10.580 --> 00:01:14.990
You can navigate on this mesh and create a route plan.

19
00:01:15.290 --> 00:01:17.990
And the airline then uses this route plan to move along.

20
00:01:18.440 --> 00:01:20.350
So that's the kind of outline of the process.

21
00:01:20.360 --> 00:01:22.260
Fortunately, a lot of that is done for us.

22
00:01:22.280 --> 00:01:23.870
We don't have to code this from scratch.

23
00:01:24.260 --> 00:01:28.430
So what we need to do is, first of all, be able to see the navigation.

24
00:01:28.460 --> 00:01:32.570
At the moment, we can't see enough mesh partially because there isn't one.

25
00:01:33.050 --> 00:01:38.990
So what we need to do is look in our place, actors window here or so go to window and look for placed

26
00:01:39.290 --> 00:01:40.100
place actors.

27
00:01:40.760 --> 00:01:43.920
We need to search for a nav mesh.

28
00:01:44.510 --> 00:01:47.150
And we're looking for the nav mesh bounds of volume.

29
00:01:47.180 --> 00:01:53.240
Now, this creates a volume, a kind of box, and everything within that box is going to be checked

30
00:01:53.390 --> 00:01:58.190
for how navigable it is, basically, whether it's flats, whether it's not too steep.

31
00:01:59.000 --> 00:02:03.260
Basically at where there's a wall, you can't go through walls, you can't walk over walls because they're

32
00:02:03.260 --> 00:02:03.860
too steep.

33
00:02:04.220 --> 00:02:09.530
So if we drag in a narrow mesh bound volume and just bring it here and put it slightly through the floor

34
00:02:09.650 --> 00:02:17.180
so that this allows the floor to be part of that navigation calculation, then what we've got to do

35
00:02:17.270 --> 00:02:20.960
is enable the visibility of NAV measures.

36
00:02:21.320 --> 00:02:25.910
You can do this by clicking on the show button in the top left of your viewport and then clicking on

37
00:02:25.910 --> 00:02:28.450
navigation or using the shortcut P..

38
00:02:28.610 --> 00:02:32.330
So I'm going to use the shortcut P and selecting.

39
00:02:32.370 --> 00:02:33.890
Why don't you have to select the bounce volume?

40
00:02:33.890 --> 00:02:39.230
You can instantly see this green mesh has appeared within the bounds volume, which is telling us this

41
00:02:39.350 --> 00:02:40.730
is a walkable area.

42
00:02:40.910 --> 00:02:48.290
So if we had our enemy within this area and his target was also within the area, then it could find

43
00:02:48.290 --> 00:02:50.420
a path along this mesh.

44
00:02:50.990 --> 00:02:55.200
Now let's have a look at what happens if we move this to where there's an obstacle.

45
00:02:55.220 --> 00:02:59.900
You can see that the mesh kind of cuts out around this obstacle.

46
00:03:00.290 --> 00:03:05.720
So what we actually want to do is have this volume encompass the whole of our level.

47
00:03:06.200 --> 00:03:10.490
And you could choose not to or just do it in certain segments.

48
00:03:10.730 --> 00:03:16.280
But the easiest way is just to increase the bounds of this volume, which you can do if you give us

49
00:03:16.310 --> 00:03:17.030
the details.

50
00:03:17.030 --> 00:03:17.920
Pain on the right.

51
00:03:17.930 --> 00:03:23.210
There's the brush settings and you can change the size of the brush like so you can see we can make

52
00:03:23.210 --> 00:03:28.790
it larger, we can make it wider and it goes red when it's being recalculated.

53
00:03:28.790 --> 00:03:30.660
You can see it's doing that building nav mesh.

54
00:03:31.010 --> 00:03:35.060
And the larger it's going to be, the harder it is going to be to build the nav much longer it's going

55
00:03:35.060 --> 00:03:35.450
to take.

56
00:03:35.840 --> 00:03:37.610
But you can see that this is working.

57
00:03:37.610 --> 00:03:39.230
It's cutting out the corridors.

58
00:03:39.230 --> 00:03:42.770
It's cutting out the obstacles that we can't walk around.

59
00:03:43.250 --> 00:03:51.980
The second part of this puzzle is having an A.I. able to do its rooting algorithms on this mesh.

60
00:03:52.430 --> 00:03:56.780
Now, let's go ahead and open the BP shooter, A.I. controller, because I want to show you something

61
00:03:56.780 --> 00:03:57.860
that is in here.

62
00:03:58.070 --> 00:04:02.310
I'm going to open up the full blueprint editor here and have a look here.

63
00:04:02.390 --> 00:04:05.990
There is a component called the path following component.

64
00:04:06.560 --> 00:04:09.240
That component is responsible for finding enough mesh.

65
00:04:09.650 --> 00:04:16.240
And then basically allowing us to create paths and follow them and move along them automatically.

66
00:04:16.250 --> 00:04:22.700
So we don't have to build any of that functionality in or we have to do is use a function that's available

67
00:04:22.760 --> 00:04:24.140
on our A.I. controller.

68
00:04:24.500 --> 00:04:33.290
If you go and search for the air controller dot h and look for the move to function, then let's do

69
00:04:33.290 --> 00:04:35.480
move to with an open brackets.

70
00:04:35.540 --> 00:04:37.200
Then there's a couple of options here.

71
00:04:37.220 --> 00:04:40.130
We've got a one takes a move to request.

72
00:04:40.610 --> 00:04:45.510
There are some other options here too, but that should go by a different name.

73
00:04:45.530 --> 00:04:52.130
Now, in later versions on rail, we've got moved to actor and we've got moved to location, which have

74
00:04:52.130 --> 00:04:55.350
the same distinction as our setting focus.

75
00:04:55.370 --> 00:05:00.650
You can set focus to something that's moving like an actor, or you can set focus to a specific destination

76
00:05:00.650 --> 00:05:06.260
such as a waypoint in your patrol route, for example, might be a move to location.

77
00:05:06.620 --> 00:05:10.700
So I'd like you to have a go at attempting a move to as your challenge.

78
00:05:10.700 --> 00:05:12.500
So get and now mesh in your scene.

79
00:05:12.830 --> 00:05:17.770
Make it cover as much of the scene as you'd need to for you to be able to move around and have the.

80
00:05:17.910 --> 00:05:23.760
I follow you in all locations and then call that move to either move to act or move to location, you

81
00:05:23.760 --> 00:05:29.190
decide which in begin play to get the A.I. chasing us.

82
00:05:29.430 --> 00:05:30.900
So pulls a video and have a go.

83
00:05:32.390 --> 00:05:33.320
Okay, welcome back.

84
00:05:33.380 --> 00:05:34.340
Let's give this a shot.

85
00:05:34.670 --> 00:05:36.680
So first things first, we're going to have.

86
00:05:37.100 --> 00:05:44.600
I'm going to be using a move to actor and we're going to have to set the goal actor.

87
00:05:44.660 --> 00:05:48.620
So let's go over to our shooter, A.I. controllers, DOT, GPP.

88
00:05:48.620 --> 00:05:51.690
And in their begin play, we can do move to actor.

89
00:05:51.770 --> 00:05:55.970
And we've got an actor already play a porn, which we've got from the last lecture.

90
00:05:56.540 --> 00:05:57.590
And let's just have a look.

91
00:05:57.650 --> 00:06:00.360
Are there any other useful properties here?

92
00:06:00.380 --> 00:06:02.420
We've got an acceptance radius at the moment.

93
00:06:02.480 --> 00:06:04.030
It has no acceptance radius.

94
00:06:04.040 --> 00:06:05.930
Basically, it gets as close as it possibly can.

95
00:06:06.380 --> 00:06:08.900
I think that might be a little bit encroaching.

96
00:06:08.930 --> 00:06:11.620
I'm gonna give it an acceptance radius of two meters.

97
00:06:11.750 --> 00:06:14.630
So will try to get within two meters of us.

98
00:06:15.260 --> 00:06:16.700
So let's go ahead and build that.

99
00:06:17.860 --> 00:06:21.730
And once that's complete, go over into the engine and let's have a look.

100
00:06:21.790 --> 00:06:28.840
I'm going to not expand the bounds volume here just to give you a taste of why we need the bounce volume

101
00:06:28.840 --> 00:06:29.680
in the first place.

102
00:06:29.710 --> 00:06:31.960
So let's start off with an old P.

103
00:06:32.950 --> 00:06:34.930
And here we are, we are on the nav mesh.

104
00:06:34.960 --> 00:06:37.840
And this guy has moved towards us automatically.

105
00:06:38.200 --> 00:06:45.370
But if I leave that nav mesh, he can no longer get any closer to me because he can't find the route.

106
00:06:45.460 --> 00:06:48.790
He can't find a way of getting to me.

107
00:06:49.210 --> 00:06:55.060
So what we're going to do is we in fact, I'm not sure that was what's actually going on here, because

108
00:06:55.060 --> 00:07:00.970
probably what's happening is that he's getting within the acceptance radius of me and then not trying

109
00:07:00.970 --> 00:07:01.390
again.

110
00:07:01.750 --> 00:07:09.850
So one way to check that would be to just remove this acceptance radius and recompile and then we can

111
00:07:09.850 --> 00:07:12.610
go over and see if that's what's going on.

112
00:07:12.700 --> 00:07:14.350
So, yeah, he comes right up to me.

113
00:07:14.680 --> 00:07:16.330
Fi, move away.

114
00:07:16.360 --> 00:07:19.000
Well, he basically forgot that command.

115
00:07:19.300 --> 00:07:25.810
So what we want to do is do this in tech because basically once he reaches me, he gives up on the idea

116
00:07:25.810 --> 00:07:26.560
of chasing me.

117
00:07:26.920 --> 00:07:31.870
So let's move this over to take this isn't the ideal way to do it, but that's what we're gonna do just

118
00:07:31.870 --> 00:07:32.260
for now.

119
00:07:32.880 --> 00:07:36.490
I'm going to copy the signature of tech from our actors on H.

120
00:07:36.500 --> 00:07:40.630
And I know that it goes in the public section, so I'm going to create a public section at the top.

121
00:07:42.720 --> 00:07:43.840
Copy in the signature.

122
00:07:43.900 --> 00:07:45.130
Make it an override.

123
00:07:45.280 --> 00:07:53.420
Just safety and then implement it over in the C++ and move and move actor in to tick.

124
00:07:53.980 --> 00:07:57.220
And the acceptance radius still of two meters that's try this now.

125
00:07:57.820 --> 00:08:01.360
And obviously is complaining that we don't have a player porn over there.

126
00:08:01.360 --> 00:08:03.790
So let's go and make sure we're getting hold.

127
00:08:04.120 --> 00:08:09.010
Repeating this line that gets hold of the first player porn over in our tick as well.

128
00:08:09.460 --> 00:08:15.070
And now we should be able to test it out properly, do an LP, go into the world, comes and gets us

129
00:08:15.340 --> 00:08:16.270
within two meters.

130
00:08:16.300 --> 00:08:18.710
I move away from him and look at that.

131
00:08:18.730 --> 00:08:24.250
He's not even aiming at me properly this time, but he is trying to follow along.

132
00:08:24.940 --> 00:08:29.530
But as soon as I leave that nav mesh, he no longer knows how to find me.

133
00:08:29.770 --> 00:08:31.180
So let's fix that up, shall we?

134
00:08:31.210 --> 00:08:35.290
We're going to go to an NAF mesh bound volume.

135
00:08:36.270 --> 00:08:37.350
If I can select it.

136
00:08:37.380 --> 00:08:37.920
There we go.

137
00:08:38.130 --> 00:08:44.210
And then we wants to really zoom out here to try and encompass the whole of our level.

138
00:08:44.210 --> 00:08:46.470
It looks a bit janki on the outside this level, Pozza.

139
00:08:47.090 --> 00:08:51.930
That's just the way things often work, is that you build the level to be viewed from the inside, not

140
00:08:51.930 --> 00:08:52.800
from the outside.

141
00:08:53.190 --> 00:08:55.470
So let's make this much wider.

142
00:08:55.500 --> 00:09:01.440
Let's make it much taller so that it encompasses all of the level and just drag it out so that all the

143
00:09:01.440 --> 00:09:03.780
expense of the level here are covered.

144
00:09:04.140 --> 00:09:07.640
Just make it a little bit wider, a little bit longer, too.

145
00:09:08.340 --> 00:09:12.570
And just make sure all of this is encompassed fully.

146
00:09:13.320 --> 00:09:16.590
And you can see the green has appeared as it's calculates the NAF mesh.

147
00:09:16.920 --> 00:09:22.740
And let's just make sure that the NAV measures going down low enough that it's covering the lowest extents

148
00:09:22.830 --> 00:09:25.950
of our map seems to be covering it now.

149
00:09:26.340 --> 00:09:33.280
So if we go ahead and we can hide and now mesh now that we'd have set it all up and we can do an old

150
00:09:33.340 --> 00:09:33.620
piece.

151
00:09:33.900 --> 00:09:34.620
Go ahead and play.

152
00:09:34.620 --> 00:09:40.320
And he can find us and follow us pretty much anywhere that we go within this level.

153
00:09:40.930 --> 00:09:47.730
You can see that our trusted little servant is following along behind us wherever we choose to go.

154
00:09:48.000 --> 00:09:50.940
He is just tailing us and trailing us, which is very annoying.

155
00:09:51.150 --> 00:09:53.610
But he is able to do that.

156
00:09:54.700 --> 00:09:55.140
Awesome stuff.

157
00:09:55.180 --> 00:10:02.410
So in this lecture, we have seen how we can create at NAV measures and how we can use them to get our

158
00:10:02.410 --> 00:10:05.260
ally to follow us around the level.

159
00:10:06.630 --> 00:10:10.590
Next lecture, we're gonna loop back round to this aiming fix the bug and check.

160
00:10:10.680 --> 00:10:16.200
Line of sight so that we don't necessarily always chase the player around.

161
00:10:16.440 --> 00:10:16.890
See there.

162
00:10:18.490 --> 00:10:22.850
And I've just noticed one silly little mistake that I have made here, which is that I'm not calling

163
00:10:22.850 --> 00:10:25.490
to super kolon kolon tech.

164
00:10:25.760 --> 00:10:31.910
So that is actually why when you sometimes you get these weird, unexplained bugs, you're not calling

165
00:10:31.910 --> 00:10:32.540
to super.

166
00:10:32.920 --> 00:10:35.180
Then things don't always work as expected.

167
00:10:35.190 --> 00:10:41.240
That's why the focus had stopped working, because essentially we had disabled tick on a high controller,

168
00:10:41.240 --> 00:10:42.020
which is no good.

169
00:10:42.330 --> 00:10:43.370
Furi enable that.

170
00:10:43.400 --> 00:10:47.330
Then everything should work as normal with setting focus.
