WEBVTT
1
00:00:04.150 --> 00:00:05.740
Hello everybody and welcome back.

2
00:00:05.740 --> 00:00:12.160
In this election by the end of it what we will be able to do is pick up our objects in our scene and

3
00:00:12.160 --> 00:00:14.090
put them back down again elsewhere.

4
00:00:14.130 --> 00:00:20.530
And this is a great opportunity to then grab something move over to the corner and they don't have any

5
00:00:20.530 --> 00:00:24.850
weight yet but hopefully the doors will open and then allow us to get out.

6
00:00:25.510 --> 00:00:26.020
Awesome.

7
00:00:26.020 --> 00:00:26.890
Let's find out more.

8
00:00:27.280 --> 00:00:32.500
Hello everybody and welcome to using physics handles so this is all about picking up our objects in

9
00:00:32.500 --> 00:00:34.100
our scene and interacting with them.

10
00:00:34.180 --> 00:00:38.410
Now unreal provides a physics candle that's ideal for just this task.

11
00:00:38.450 --> 00:00:43.060
Well first of all going to read the documentation and get our head round how it's formed and we'll have

12
00:00:43.060 --> 00:00:47.590
to go backwards and forwards a couple of times to make sure we're using the right bits of information

13
00:00:48.220 --> 00:00:52.150
and then we will finally get the physics handle working so by the end as you've seen we're going to

14
00:00:52.150 --> 00:00:58.390
be able to pick up our cube and cone or whatever you've substituted them with in your game.

15
00:00:58.390 --> 00:00:58.710
Okay.

16
00:00:58.720 --> 00:01:03.760
So I figured that one of the best places to start is with the documentation itself so we can get a handle

17
00:01:03.760 --> 00:01:06.920
on how the physics handle components is going to work.

18
00:01:07.000 --> 00:01:12.590
Now there is quite a bit of information here but there are very few examples of how it's to be used.

19
00:01:12.610 --> 00:01:16.240
So we'll have a look down at the functions in a moment and see what we can do.

20
00:01:17.020 --> 00:01:20.220
So there are lots of variables that carry on going down.

21
00:01:20.220 --> 00:01:20.650
Here we go.

22
00:01:21.160 --> 00:01:27.220
So our functions that we can use all that looks like a good one look you primitive component gets grabbed

23
00:01:27.220 --> 00:01:27.710
component.

24
00:01:27.760 --> 00:01:29.920
We may have to use that.

25
00:01:29.920 --> 00:01:31.510
That's awesome.

26
00:01:31.510 --> 00:01:33.750
Grab component at a location.

27
00:01:33.790 --> 00:01:35.280
Sounds good to me.

28
00:01:35.320 --> 00:01:40.720
Grab a component a location with a rotation so we're not going to go through all of these individually

29
00:01:40.960 --> 00:01:44.410
but you can see as we go through that the names seem to be good.

30
00:01:44.410 --> 00:01:46.060
And this one here looks brilliant.

31
00:01:46.060 --> 00:01:47.640
I think we're going to end up using this one.

32
00:01:47.640 --> 00:01:50.690
Grab a specified component release component.

33
00:01:50.710 --> 00:01:54.960
I'm sure that's going to come in hand release that currently held component.

34
00:01:55.060 --> 00:01:58.510
Well we need to let it go so that's going to be useful for that.

35
00:01:58.600 --> 00:02:04.210
And and the cube or the cone or whatever we're interacting with we need to be able to move it along

36
00:02:04.210 --> 00:02:04.950
with us.

37
00:02:04.960 --> 00:02:07.720
So this is where we can set our target location.

38
00:02:07.720 --> 00:02:14.590
The thing that we've grabbed to our current the line at the end of the line the line reach variable

39
00:02:14.590 --> 00:02:19.450
that we've currently got the line trace and I think it's called which was the player viewpoint location

40
00:02:19.720 --> 00:02:26.110
plus the player point rotation dot vector and then we multiply that by the reach that we've got there.

41
00:02:26.820 --> 00:02:27.600
Okay.

42
00:02:27.640 --> 00:02:29.200
Now before we get going.

43
00:02:29.200 --> 00:02:30.310
A word of warning.

44
00:02:30.400 --> 00:02:33.490
This is going to be a bit of a mess.

45
00:02:33.610 --> 00:02:39.430
And the reason for that is we want to be able to just get our code working at the moment and then we'll

46
00:02:39.460 --> 00:02:44.610
have a real good reason to refactor again and tie the everything back up.

47
00:02:44.710 --> 00:02:45.150
Okay.

48
00:02:45.160 --> 00:02:51.550
So over in our implementation file the first thing that I spotted just as I was eyeballing it before

49
00:02:51.550 --> 00:02:56.020
I clicked record is I made a little bit of mistake in the last video.

50
00:02:56.020 --> 00:02:59.050
Some of you would have rightly spotted it.

51
00:02:59.170 --> 00:03:00.180
Line 55 here.

52
00:03:00.190 --> 00:03:01.720
Get the physics body in reach.

53
00:03:01.720 --> 00:03:08.710
So that is returning an F hit results because that is what it is but it is not being used in any way.

54
00:03:09.220 --> 00:03:11.620
So the first thing I'm going to do is correct that.

55
00:03:11.620 --> 00:03:16.580
So that's going to be I'm allowed to space there so I can go f hit results.

56
00:03:16.720 --> 00:03:19.750
I'm going to call it Hit result for the moments as well.

57
00:03:19.750 --> 00:03:21.580
I can't think of a better name for it.

58
00:03:21.580 --> 00:03:22.000
There we go.

59
00:03:22.000 --> 00:03:25.780
That's actually being used somewhere which is quite useful.

60
00:03:25.840 --> 00:03:31.570
So we've got a couple of to dos here we've got to attach the physics handle we've got to release the

61
00:03:31.570 --> 00:03:37.480
physics handle at some points and then if we go down slightly into the tic component if the physics

62
00:03:37.480 --> 00:03:38.520
handle is attached.

63
00:03:38.550 --> 00:03:42.670
So if there is one there then we're going to move the object that we're holding.

64
00:03:42.670 --> 00:03:46.390
And that's where we can set our targets location.

65
00:03:46.410 --> 00:03:46.890
Okay.

66
00:03:46.990 --> 00:03:47.940
So where to start.

67
00:03:47.980 --> 00:03:51.290
Often with things like this I seem to be searching for release for a moment there.

68
00:03:51.400 --> 00:03:58.470
So in moments like this it's up to you where you decide to stop I think starting here where we're grabbing

69
00:03:58.480 --> 00:04:02.440
that's the thing we're focused on would be a great place.

70
00:04:02.500 --> 00:04:07.840
So if we hit something then attach the physics handle so attaching the physics handle I think is the

71
00:04:07.840 --> 00:04:12.100
first thing we'll do here and then we'll create the if statement around it.

72
00:04:12.100 --> 00:04:16.500
So if we start typing in physics handle There we go hover over it.

73
00:04:16.500 --> 00:04:16.860
We use.

74
00:04:16.860 --> 00:04:20.930
We will see that it is a pointer so we'll use the arrow operator.

75
00:04:20.980 --> 00:04:26.020
Now the pink and purple ones that I think I've mentioned this yet is a pink or purple one then it means

76
00:04:26.020 --> 00:04:26.790
it's a function.

77
00:04:26.800 --> 00:04:31.060
So you know you're going to need the parentheses at the end of it and you may of course need to pass

78
00:04:31.060 --> 00:04:33.540
something into those parentheses as well.

79
00:04:33.580 --> 00:04:34.950
So what are we looking for here.

80
00:04:35.830 --> 00:04:43.420
So if we refer back to the dots here grab component at locations sounds like the appropriate one grabbing

81
00:04:43.420 --> 00:04:46.700
the specified component at a given location.

82
00:04:46.710 --> 00:04:46.920
Okay.

83
00:04:46.930 --> 00:04:50.820
And we can see that it's built up here of a few primitive star component.

84
00:04:50.980 --> 00:04:55.380
So a pointer there we've got the F name in bone name.

85
00:04:55.510 --> 00:05:00.100
Well we don't have any bones so we can just name that none and you'll see that in a moment in this grab

86
00:05:00.100 --> 00:05:05.760
location see you where you set it but I'm going to set it to the origin of the object.

87
00:05:05.790 --> 00:05:11.850
So we have a look over in Unreal and have a look at an anything in the scene that's just press F elevens

88
00:05:11.850 --> 00:05:16.140
come out full screen mode there for a moment and we say that to the transform this white dot in the

89
00:05:16.140 --> 00:05:19.310
middle that is the actor's location in the world.

90
00:05:19.320 --> 00:05:26.490
So that's what we'll end up putting at the end of our reach if you remember the green line coming out.

91
00:05:26.500 --> 00:05:30.310
That's what's going to connect with our actor's origin here.

92
00:05:30.900 --> 00:05:31.180
Okay.

93
00:05:31.210 --> 00:05:34.880
So I'm just can't just do that again so I can see what's coming along here.

94
00:05:34.900 --> 00:05:38.770
So we need to grab component at location.

95
00:05:38.770 --> 00:05:39.340
There we go.

96
00:05:39.880 --> 00:05:41.500
We don't need the rotation of it.

97
00:05:41.650 --> 00:05:50.650
So now here we open up our parentheses and we've got a primitive component f name and effector and we

98
00:05:50.650 --> 00:05:52.120
don't have two of those yet.

99
00:05:52.120 --> 00:05:58.120
Well we've got the effects and we've got the bone but we don't have the primitive component just there.

100
00:05:58.120 --> 00:06:00.040
So what should we do.

101
00:06:00.040 --> 00:06:05.820
Well I'm going to just formats my code like so so I can type these things in individually.

102
00:06:05.830 --> 00:06:11.410
Now we don't have a name for this for the first thing yet so let's you're gonna put a comma in and we'll

103
00:06:11.410 --> 00:06:12.690
come back to it in a moment.

104
00:06:12.700 --> 00:06:15.250
Go to a new line the bone nine.

105
00:06:15.250 --> 00:06:19.900
Now we're not dealing with any skeletal mesh where you typically find bones.

106
00:06:19.900 --> 00:06:25.900
So in this particular case we can go name underscore and you can see it's come up there for me none

107
00:06:26.320 --> 00:06:27.850
comma.

108
00:06:28.060 --> 00:06:34.750
This next bit is the grab location now the grab location is going to be at the end of our line trace

109
00:06:34.750 --> 00:06:39.640
that we've already got and this is the first bit where we can start to have a bit of messy code before

110
00:06:39.640 --> 00:06:40.760
we tidy up.

111
00:06:40.810 --> 00:06:43.750
So we've already got that right here.

112
00:06:43.840 --> 00:06:51.420
This set of code is how we know where the line trace ends without having to do anything else.

113
00:06:51.430 --> 00:06:55.600
We can quickly copy that and bring it up here for testing.

114
00:06:55.660 --> 00:07:01.360
So I'm going to pop it just at the top here so I'm going to place it just after we log out that the

115
00:07:01.360 --> 00:07:04.610
grabber has been pressed are still on that code there for the moment.

116
00:07:04.660 --> 00:07:11.260
We've now got a line trace end which means here we can have the line trace and now this is what I mean

117
00:07:11.260 --> 00:07:17.740
by the messy bit don't worry about it at the moment we've duplicated code but we will refactor in a

118
00:07:17.740 --> 00:07:18.170
bit.

119
00:07:18.190 --> 00:07:20.920
Taking all of that duplication out.

120
00:07:20.920 --> 00:07:25.940
So this other bit here this first bits I'm going to have to just come backwards and forwards again.

121
00:07:25.960 --> 00:07:26.350
There we go.

122
00:07:26.380 --> 00:07:28.300
So this you put this component.

123
00:07:28.300 --> 00:07:32.450
This is the component that would go to grab but we haven't declared it anywhere.

124
00:07:32.470 --> 00:07:39.140
We'll come back to giving it a name in a moment once we've declared it and initialized it with a value.

125
00:07:39.190 --> 00:07:43.810
Let's go ahead and start typing that in you primitive component obviously I've done this before so it's

126
00:07:43.810 --> 00:07:45.630
up that's up the list.

127
00:07:45.640 --> 00:07:47.770
It's a pointer so it's a star.

128
00:07:47.800 --> 00:07:48.750
What are we going to call it.

129
00:07:48.770 --> 00:07:51.950
What we're going to call it the component to grab at the moment.

130
00:07:52.140 --> 00:07:53.030
Okay.

131
00:07:53.190 --> 00:07:55.690
Now what are we going to initialize that with.

132
00:07:55.780 --> 00:08:00.220
Well if we have a look at the hit results using the dot operator.

133
00:08:00.460 --> 00:08:06.650
Now there are a couple of options here and what we want is to get the component now it is purple so

134
00:08:06.650 --> 00:08:08.080
we're going to need parentheses there.

135
00:08:08.090 --> 00:08:11.190
And we don't need to pass anything in so we can end that line.

136
00:08:11.200 --> 00:08:14.620
So now we have something that we can put in here.

137
00:08:14.630 --> 00:08:20.070
Our component I get my capitalization right component to grab.

138
00:08:20.420 --> 00:08:21.930
So that is now all complete.

139
00:08:22.000 --> 00:08:24.530
Apart from my semicolon at the end.

140
00:08:24.700 --> 00:08:24.940
OK.

141
00:08:24.980 --> 00:08:27.670
So let's talk about the if parts of this.

142
00:08:27.830 --> 00:08:29.860
We're going to have to end this lot.

143
00:08:29.870 --> 00:08:30.850
Just one last.

144
00:08:30.850 --> 00:08:36.710
So let's say if and what's the condition here could we go hit result.

145
00:08:36.710 --> 00:08:42.050
Well it's not a pointer so if hit result's not going to really make much sense.

146
00:08:42.200 --> 00:08:48.350
Expression must have a bold type or convertible to a bull as you can't say if there is a hit result.

147
00:08:48.350 --> 00:08:56.960
However there is a way of going getting the actor so we get actor on it's not component come back again

148
00:08:56.960 --> 00:09:04.560
and say you get actor or we can see that that returns a pointer she's really useful because then we

149
00:09:04.560 --> 00:09:14.060
can use this to say if an actor is hit then attach your physics handle okay.

150
00:09:14.210 --> 00:09:22.160
I think that's it for this bit of our code for the moment and must save my work and have a look down

151
00:09:22.220 --> 00:09:23.580
or up down.

152
00:09:23.630 --> 00:09:27.560
So we've got if the physics handle is attached.

153
00:09:27.560 --> 00:09:33.210
So if our physics handle now this can take a while to catch up I've noticed.

154
00:09:33.210 --> 00:09:34.270
But there we go.

155
00:09:34.280 --> 00:09:39.840
So if physics handle the same as up here.

156
00:09:40.130 --> 00:09:40.680
There we go.

157
00:09:40.940 --> 00:09:41.830
It's gone blue.

158
00:09:41.840 --> 00:09:44.510
He's our alter complete going to work which is really useful.

159
00:09:44.510 --> 00:09:47.910
Now there is a function in here.

160
00:09:48.200 --> 00:09:53.060
This is grabbed component and over in the docks if we scroll up here.

161
00:09:53.060 --> 00:09:53.800
Here we go.

162
00:09:53.840 --> 00:09:59.340
Primitive component the component we are holding sir grabbed component is what we're looking for.

163
00:09:59.480 --> 00:10:02.450
So we can just type in here grab the component.

164
00:10:02.450 --> 00:10:02.950
Excellent.

165
00:10:02.960 --> 00:10:04.220
That's what we want.

166
00:10:04.220 --> 00:10:11.420
So if if we've actually grasped something then we need to go ahead and set the target location.

167
00:10:11.510 --> 00:10:19.700
And once again physics handle target location sets target location fuzzy searches save me there it is

168
00:10:19.700 --> 00:10:20.360
a function.

169
00:10:20.360 --> 00:10:22.360
So we need our parentheses.

170
00:10:22.370 --> 00:10:24.560
Now this has too few arguments at the moment.

171
00:10:24.560 --> 00:10:26.890
We need to pass it an F vector.

172
00:10:26.930 --> 00:10:32.060
Well once again we've got an effect that's really useful is the line trace.

173
00:10:32.060 --> 00:10:38.760
And so we want the target location and we just move that up and into here to say what we're doing.

174
00:10:38.840 --> 00:10:42.030
We need to target location here to be the line trace end again.

175
00:10:42.080 --> 00:10:47.370
And I know this is messy but let's do it anyway so we can just test to make sure our code works.

176
00:10:47.420 --> 00:10:52.020
So we've got our line trace and they're going to copy that sets of code.

177
00:10:52.040 --> 00:10:57.600
I'm gonna pop it just in here on the tick component and we'll clean it up in a few moments.

178
00:10:57.620 --> 00:10:59.700
Let's save that.

179
00:10:59.720 --> 00:11:04.180
Now we should be able to have our line trace and here there it is perfect.

180
00:11:04.520 --> 00:11:09.940
I think at the moment we're going to pick up our our boxes.

181
00:11:10.020 --> 00:11:12.040
Let's let's go and find out.

182
00:11:12.130 --> 00:11:15.410
Let's give myself a bit more space and compile the code.

183
00:11:15.440 --> 00:11:17.660
Now we've done quite a bit of code changes here.

184
00:11:17.670 --> 00:11:19.330
Here we go we failed on something.

185
00:11:19.360 --> 00:11:20.530
Let's see what it is.

186
00:11:20.540 --> 00:11:21.500
Oh this is interesting.

187
00:11:21.500 --> 00:11:27.530
So we've got two things here is expecting the grabber an open door header file to be at the top.

188
00:11:27.530 --> 00:11:33.850
So we do need to move those at some point I might as well do it now whilst it's fresh in mind I'm fresh

189
00:11:33.860 --> 00:11:35.010
on the error here.

190
00:11:35.060 --> 00:11:37.830
I've not had a fail compile in a while referencing.

191
00:11:37.880 --> 00:11:40.820
Did you mean it result get actor.

192
00:11:41.120 --> 00:11:42.970
OK I might.

193
00:11:42.970 --> 00:11:44.410
Where is that grabber.

194
00:11:44.420 --> 00:11:45.710
Line sixty nine.

195
00:11:45.710 --> 00:11:46.820
Let's have a look.

196
00:11:47.160 --> 00:11:48.680
In 69.

197
00:11:48.830 --> 00:11:57.260
If we have a look at what happens when we type in get actor again get to is purple is a function call

198
00:11:57.260 --> 00:11:57.860
on that.

199
00:11:57.860 --> 00:12:01.330
So let's go ahead and make it a function call then we should be fine.

200
00:12:01.400 --> 00:12:05.720
We could break it out if necessary and put it here and we can see the way that this is structured.

201
00:12:05.720 --> 00:12:12.080
We could probably streamline the code to make it less lines but we risk making it unreadable if we do

202
00:12:12.080 --> 00:12:12.490
that.

203
00:12:12.530 --> 00:12:19.670
This is quite clear we're getting the actor that reads well regardless of whether or not we split stouts

204
00:12:19.760 --> 00:12:23.810
up here and say that the hit result get actor equals an actor.

205
00:12:23.990 --> 00:12:25.790
Well of course it does.

206
00:12:25.790 --> 00:12:26.090
OK.

207
00:12:26.450 --> 00:12:29.600
So that I think is the correction we need to make.

208
00:12:29.660 --> 00:12:36.340
Let's go up to the top here and move the grabber to the top d e Gs.

209
00:12:36.350 --> 00:12:39.750
Everything else is in alphabetical order so that's also good.

210
00:12:39.800 --> 00:12:44.590
Let's try that again and that's compiler code Excellent.

211
00:12:44.590 --> 00:12:47.980
The compiler is complete let's press play right.

212
00:12:47.980 --> 00:12:50.100
Can we pick this up.

213
00:12:50.110 --> 00:12:51.550
Would you look at that.

214
00:12:51.550 --> 00:12:52.900
Get off me.

215
00:12:52.900 --> 00:12:53.800
Get off me.

216
00:12:53.890 --> 00:13:01.660
Okay so I've done an awful lot of the coding for you so far and what I'd like you to do is your challenge

217
00:13:01.960 --> 00:13:04.270
is to go ahead and implement the release.

218
00:13:04.270 --> 00:13:08.630
It's relatively straightforward you have to refer back to the docs for the function call you're going

219
00:13:08.630 --> 00:13:13.420
to have to make Paul's video now and give us a go.

220
00:13:13.480 --> 00:13:14.620
Okay everybody Welcome back.

221
00:13:14.620 --> 00:13:19.210
Let's go ahead and we'll close down my open door implementation now let's scroll down to where we've

222
00:13:19.210 --> 00:13:20.260
got the release.

223
00:13:20.260 --> 00:13:20.770
Here we go.

224
00:13:21.190 --> 00:13:22.960
And so we're going to do.

225
00:13:22.960 --> 00:13:24.180
Remove the release hand.

226
00:13:24.190 --> 00:13:30.790
So this is going to be the physics handle again arrow operator and then release component just like

227
00:13:30.790 --> 00:13:32.020
in the documentation.

228
00:13:32.050 --> 00:13:34.290
There isn't anything to go inside this parentheses.

229
00:13:34.300 --> 00:13:36.210
If we go ahead and save that.

230
00:13:36.330 --> 00:13:36.600
Okay.

231
00:13:36.610 --> 00:13:41.800
So there's one final thing to do to this if statement here and it's about code consistency more than

232
00:13:41.800 --> 00:13:42.650
anything else.

233
00:13:42.700 --> 00:13:48.490
This will technically work at the moment even without our curly braces that we would usually put our

234
00:13:48.490 --> 00:13:49.360
if statements in.

235
00:13:49.840 --> 00:13:56.470
So even though it would work it would be best if we were consistent with how we put on or constructs

236
00:13:56.530 --> 00:13:57.940
our if statements.

237
00:13:57.940 --> 00:14:04.660
The last thing we want to do here is go ahead and have an inconsistent code style with all of our other

238
00:14:04.660 --> 00:14:05.640
if statements.

239
00:14:05.770 --> 00:14:07.390
It makes it more difficult to read.

240
00:14:07.690 --> 00:14:12.880
And it could certainly make it more error prone if you suddenly change your mind of how you're constructing

241
00:14:12.880 --> 00:14:13.470
things.

242
00:14:13.480 --> 00:14:18.810
So we want to make sure that we have our curly braces in this case and I've also removed that comment.

243
00:14:18.820 --> 00:14:27.250
The final thing here was both on the gravest TPP and the open doors TPP going in and changing the order

244
00:14:27.790 --> 00:14:29.750
of our ash includes.

245
00:14:29.970 --> 00:14:31.630
So I'm going to move grab it to the top there.

246
00:14:31.630 --> 00:14:33.750
Yes I could use the ult an up arrow.

247
00:14:33.770 --> 00:14:36.330
I like mixing it up and then alphabetically.

248
00:14:36.330 --> 00:14:37.480
That makes sense.

249
00:14:37.480 --> 00:14:44.020
Let's go over to the open door TPP double click to open it Go to the top something to move open door

250
00:14:44.020 --> 00:14:46.700
C.P. to the top as well.

251
00:14:46.710 --> 00:14:47.620
Here we go.

252
00:14:47.710 --> 00:14:48.880
And game framework.

253
00:14:48.940 --> 00:14:49.910
Player actor.

254
00:14:49.960 --> 00:14:54.860
This is where slotting things in between the Olsen up arrow does make sense and engine.

255
00:14:54.890 --> 00:14:57.060
Okay so I'm happy with the order there.

256
00:14:57.130 --> 00:14:58.230
Everything saved.

257
00:14:58.270 --> 00:15:00.450
Let's go over into unreal.

258
00:15:00.580 --> 00:15:04.810
So we're gonna compile and hopefully now we can pick things up and drop them.

259
00:15:04.840 --> 00:15:08.950
Now I think that box is probably a bit big but for testing purposes.

260
00:15:08.950 --> 00:15:09.890
Absolutely fine.

261
00:15:09.930 --> 00:15:12.780
It's just fills up a lot of our screen that so.

262
00:15:13.420 --> 00:15:17.190
Okay let's press play Let's go pick up the cone.

263
00:15:17.200 --> 00:15:22.720
I hope so if we hold down we pick you up and if we let go we drop it again.

264
00:15:22.720 --> 00:15:24.700
How awesome is that.

265
00:15:24.700 --> 00:15:27.550
Let's just come out of here and turn on the output log.

266
00:15:27.550 --> 00:15:28.010
Here we go yet.

267
00:15:28.060 --> 00:15:30.690
Grab a pressed hit the cone.

268
00:15:30.710 --> 00:15:32.660
Then we released it and it dropped.

269
00:15:32.680 --> 00:15:34.220
Let's make sure it works.

270
00:15:34.240 --> 00:15:37.660
Oh I didn't mean to escape out into press F eight again but they're mine.

271
00:15:37.750 --> 00:15:40.840
We're back in game it's pickup this throw over there.

272
00:15:41.230 --> 00:15:45.590
Awesome let's pick up this one and throw it over there while we can have a right strop.

273
00:15:45.620 --> 00:15:48.850
But how cool is this now interacting with our world.

274
00:15:48.880 --> 00:15:49.360
Excellent.

275
00:15:49.390 --> 00:15:50.430
Oh can we escape.

276
00:15:50.430 --> 00:15:52.120
Oh no not quite.

277
00:15:52.120 --> 00:15:57.700
We've not set these up yet to weigh anything so we can put them on the pressure plate but it won't be

278
00:15:57.700 --> 00:16:00.190
long before we actually have that sorted.

279
00:16:00.190 --> 00:16:01.330
Let's see if we can escape.

280
00:16:01.340 --> 00:16:03.230
Three two one.

281
00:16:03.250 --> 00:16:06.870
Go go go are so close.

282
00:16:06.940 --> 00:16:08.270
I've got the timing on that.

283
00:16:08.410 --> 00:16:09.250
Really well done.

284
00:16:09.380 --> 00:16:09.950
OK.

285
00:16:10.060 --> 00:16:11.810
So that's it for this lecture.

286
00:16:11.950 --> 00:16:16.240
I'm really excited that we're now interacting with our actors in the world.

287
00:16:16.240 --> 00:16:17.290
This is brilliant.

288
00:16:17.290 --> 00:16:19.210
I'll see you all in the next lecture.
