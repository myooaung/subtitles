1
00:00:05,080 --> 00:00:09,520
Hello everybody and welcome back in this lecture we're going to look at the increment and decrement

2
00:00:09,610 --> 00:00:15,730
operator since we're about to deprecate the lives every time we get an answer wrong.

3
00:00:15,880 --> 00:00:20,560
So a predicament like a plus plus lives or minus minus lives.

4
00:00:20,620 --> 00:00:26,650
You can see that the decrement or increment operator is before our variable.

5
00:00:27,250 --> 00:00:35,380
If we do it as a post decrement the plus plus or minus minus operator is after our variable.

6
00:00:35,380 --> 00:00:41,710
Now most of the time you probably pre decrement because it makes the most sense logically.

7
00:00:41,710 --> 00:00:47,410
However there are times when you may want to post decrement what's the main difference between the two

8
00:00:47,410 --> 00:00:48,000
then.

9
00:00:48,010 --> 00:00:52,460
Well first of all I'll show you in theory and then we'll go and do it in practice.

10
00:00:52,570 --> 00:00:57,220
Before I ask you to implement lives so pre we'll do the operation.

11
00:00:57,310 --> 00:01:04,780
So in this case adding 1 or subtracting 1 from the value of lives and reference the results.

12
00:01:04,840 --> 00:01:09,490
So if lives was one and you add one to it.

13
00:01:09,520 --> 00:01:12,760
So plus plus lives you end up with two lives.

14
00:01:12,760 --> 00:01:16,450
And that makes the most sense when you're talking about lives.

15
00:01:16,450 --> 00:01:19,850
So we'll be using the predicament when it comes to the challenge.

16
00:01:20,020 --> 00:01:28,960
However post that comment or increment takes a copy increments the value but returns the copy from before.

17
00:01:29,650 --> 00:01:37,420
So if lives was one it would return one but we'll have incremented the variable lives so that the next

18
00:01:37,420 --> 00:01:43,980
time it's used it will be to and there are cases where you might very well need to do that.

19
00:01:44,430 --> 00:01:49,760
So let's go over into the s code and start playing with increments and decrement okay.

20
00:01:49,790 --> 00:01:55,920
So over MVS code I think the first thing I will do is I will start writing some new code at the top

21
00:01:55,920 --> 00:01:56,180
here.

22
00:01:56,190 --> 00:02:01,620
But before I do anything else and get a comment out the game logic we currently have and that's so we

23
00:02:01,620 --> 00:02:04,980
can just play with increments and decrement by themselves.

24
00:02:04,980 --> 00:02:13,900
So let's say that we've got an integer that is called a and we assign it a value of 1.

25
00:02:14,100 --> 00:02:20,870
We then want to go ahead and print out to our terminal and we will need the text macro here.

26
00:02:20,880 --> 00:02:26,440
So text and then we're going to need our text and we're going to need the percentage I.

27
00:02:26,550 --> 00:02:31,130
And the argument that we're going to pass in is simply the variable a.

28
00:02:31,260 --> 00:02:34,510
And of course the semicolon on the end let's check and make sure that works.

29
00:02:34,620 --> 00:02:40,220
And then we can stop playing with a variable and see what we get.

30
00:02:40,230 --> 00:02:42,430
Okay let's go ahead and play our game.

31
00:02:42,450 --> 00:02:46,230
Now what I'm expecting is the moments that I press enter.

32
00:02:46,380 --> 00:02:49,640
We get a value which is a and nothing else.

33
00:02:49,650 --> 00:02:51,900
So that's the exact behavior that I want.

34
00:02:51,900 --> 00:02:55,230
Let's go back over to V.S. code and start playing with these operators.

35
00:02:55,230 --> 00:02:58,830
The first thing we can do here is simply go plus plus a.

36
00:02:58,890 --> 00:03:03,250
Now this is a pre increment so we should get the answer to out.

37
00:03:03,390 --> 00:03:06,390
Let's save our code and run and see what we get.

38
00:03:07,020 --> 00:03:08,700
Let's play our game press enter.

39
00:03:08,880 --> 00:03:10,280
We get the value too.

40
00:03:10,320 --> 00:03:10,710
Brilliant.

41
00:03:11,240 --> 00:03:11,540
Okay.

42
00:03:11,550 --> 00:03:14,740
So let's instead of pre incrementing it.

43
00:03:14,760 --> 00:03:16,250
How about we post increment it.

44
00:03:16,260 --> 00:03:21,010
What would we expect then when we go ahead and print this out.

45
00:03:21,050 --> 00:03:27,220
Well I'm expecting to as well says go ahead compile our game go ahead and press play.

46
00:03:27,610 --> 00:03:29,590
And then when we press center we get the value too.

47
00:03:29,890 --> 00:03:32,470
So that's expected behavior at the moment.

48
00:03:32,470 --> 00:03:40,780
Now how about if we start saying well what happens if we have a new integer called B and we assign it's

49
00:03:40,870 --> 00:03:44,720
a plus plus what are you expecting B to be.

50
00:03:44,720 --> 00:03:53,250
So let's print out a then let's printout B as well as a percentage I because it's an integer and then

51
00:03:53,250 --> 00:03:58,620
comma B let's see what that's like when we run the code.

52
00:03:58,770 --> 00:04:04,430
So when we press enter we get the value too and we get the value 1.

53
00:04:04,440 --> 00:04:05,670
Now that's interesting isn't it.

54
00:04:05,700 --> 00:04:12,180
Let's go back to our code and this is exactly what I was saying at the beginning that when we have a

55
00:04:12,180 --> 00:04:17,790
post increment it returns the original value.

56
00:04:17,790 --> 00:04:21,240
Yes it will still increment a by 1.

57
00:04:21,240 --> 00:04:24,370
Hence a becomes too but B is 1.

58
00:04:24,480 --> 00:04:26,110
So let's remove the comment there.

59
00:04:26,160 --> 00:04:37,270
How about if we have this as a pre decrement instead what will happen then give it some thought okay

60
00:04:37,460 --> 00:04:40,000
let's go ahead and see if you were right.

61
00:04:40,340 --> 00:04:46,820
Now in this particular case we'll be expecting for both the values to be the same because we have modified

62
00:04:46,850 --> 00:04:52,930
the value with the predicament so you can see straight away that if you're not careful with whether

63
00:04:52,930 --> 00:04:58,780
you're pre or post that or incrementing you can end up with code that can end up being confusing and

64
00:04:58,780 --> 00:05:02,000
giving you back undesired behavior.

65
00:05:02,220 --> 00:05:05,190
Now you can even typing code like this.

66
00:05:05,220 --> 00:05:14,760
So if we set another integer declare an integer C and we're going to go plus plus plus plus a and then

67
00:05:14,970 --> 00:05:16,370
finish off that.

68
00:05:16,380 --> 00:05:18,210
So what do you think is going to happen here.

69
00:05:18,210 --> 00:05:24,780
Well first of all let's make sure we can see the result by putting in the format specified and then

70
00:05:24,900 --> 00:05:27,080
including the variable.

71
00:05:27,150 --> 00:05:30,000
So we're going to go plus plus plus plus a.

72
00:05:30,720 --> 00:05:33,700
So what are we going to have as the value of a.

73
00:05:33,780 --> 00:05:39,100
So let's save go over into unreal compile and see what we get.

74
00:05:39,120 --> 00:05:39,940
OK.

75
00:05:39,990 --> 00:05:43,970
We get 4 2 and 4.

76
00:05:44,080 --> 00:05:46,410
Is that what you thought we would get.

77
00:05:46,450 --> 00:05:49,780
Let's have a look at our code and work out what's happened there.

78
00:05:49,780 --> 00:05:52,820
So we've initially got a value of 1.

79
00:05:52,980 --> 00:05:59,530
We then increment that to 2 and then we increment it again twice.

80
00:06:00,090 --> 00:06:01,640
So we end up with four.

81
00:06:02,070 --> 00:06:09,420
And the value of a whilst it was set to two at this point it is now set to four.

82
00:06:09,450 --> 00:06:13,250
Now in general I would say don't do this.

83
00:06:13,710 --> 00:06:16,850
And of course you may ask well what would you do instead.

84
00:06:16,860 --> 00:06:21,840
Well I would do the following if you did want to increment something by 2.

85
00:06:21,840 --> 00:06:30,370
You could say a plus equals to that would be a much better way of writing that.

86
00:06:30,440 --> 00:06:35,810
Let's just check for that evaluates to the same thing don't forget your semicolon.

87
00:06:35,810 --> 00:06:39,460
So we've got our semicolon there are almost missed.

88
00:06:39,470 --> 00:06:43,400
That's okay so we've got percentage up since.

89
00:06:43,430 --> 00:06:44,690
So what is going to happen here.

90
00:06:45,410 --> 00:06:47,630
So we initially have a value of one.

91
00:06:47,810 --> 00:06:49,400
We're going to add one to it.

92
00:06:49,400 --> 00:06:52,270
So now a is going to be two when we print it out.

93
00:06:52,400 --> 00:06:55,070
Then we add two to a again.

94
00:06:55,070 --> 00:06:59,650
So that's going to be for two and four.

95
00:06:59,810 --> 00:07:02,230
But then we go and add another two.

96
00:07:02,240 --> 00:07:06,320
This is much clearer it's a read rather than counting pluses all the time.

97
00:07:06,320 --> 00:07:09,090
So now a is going to be six.

98
00:07:09,110 --> 00:07:13,450
So we should get six two four and six.

99
00:07:13,450 --> 00:07:23,210
Let's go check that now save our work go over into unreal and compile our code careless press play 6

100
00:07:23,210 --> 00:07:25,260
2 4 and 6 perfect.

101
00:07:25,400 --> 00:07:30,010
So it's doing exactly what we think it's going to do but it is rather confusing.

102
00:07:30,080 --> 00:07:34,940
So it's important to write your code so it's readable.

103
00:07:34,940 --> 00:07:41,470
This is much better than this let's just declare a nother integer.

104
00:07:41,470 --> 00:07:50,500
We're going to call this one a and we're going to set it's a plus plus instead let's make sure we can

105
00:07:50,500 --> 00:07:54,650
see it when we go ahead and print out.

106
00:07:54,680 --> 00:07:56,170
Okay so what are we going to get here.

107
00:07:56,170 --> 00:07:59,640
Let's let's run through the codes a is set to 1.

108
00:07:59,650 --> 00:08:03,650
We're then going to increment it by 1.

109
00:08:03,680 --> 00:08:08,660
So now a is set to 2 and B is set to 2 as well.

110
00:08:08,660 --> 00:08:09,620
That's fine.

111
00:08:09,620 --> 00:08:16,820
Then C is going to increments a by 2 and return a value of 4 in this case.

112
00:08:16,820 --> 00:08:25,040
So a is now for C is also for D is going to be incremented by 2 so it's exactly the same as this line

113
00:08:25,040 --> 00:08:28,190
above but it's going to be clearer to read.

114
00:08:28,280 --> 00:08:31,010
So D will take on a value of 6.

115
00:08:31,010 --> 00:08:40,010
I will then take on a value of 6 as well and then finally we've got this and we are post incrementing.

116
00:08:40,220 --> 00:08:46,070
If you remember well that's going to do it's going to return a copy of what it was prior to being incremented

117
00:08:46,280 --> 00:08:51,020
so e will be 6 but a will now be set to 7.

118
00:08:51,110 --> 00:08:57,460
So that's a great example of perhaps when you want something incrementing every time you do something.

119
00:08:57,680 --> 00:09:01,460
But the value to be the value that was there originally.

120
00:09:01,640 --> 00:09:07,430
So let's go ahead run a code and make sure it's got that desired behavior as compile and we should get

121
00:09:07,430 --> 00:09:12,050
out 7 2 4 6 and 6.

122
00:09:12,050 --> 00:09:12,890
Let's go ahead.

123
00:09:12,890 --> 00:09:14,590
Press play when it's ready.

124
00:09:14,620 --> 00:09:15,310
Mary go.

125
00:09:15,470 --> 00:09:16,440
Perfect.

126
00:09:16,490 --> 00:09:20,090
The behavior is working as I expected.

127
00:09:20,090 --> 00:09:26,510
Okay so here is your challenge to implement lives make lives equal to the hidden word length because

128
00:09:26,570 --> 00:09:32,230
at the moment it's just set to 4 and we want it to really vary depending on the length of the hidden

129
00:09:32,240 --> 00:09:32,850
word.

130
00:09:32,920 --> 00:09:39,350
I'll add a nice level of difficulty to lives and then I'd like to show the number of lives at the beginning

131
00:09:39,350 --> 00:09:39,880
of the game.

132
00:09:39,890 --> 00:09:45,520
So when you say all you've got to get a five letter word you have five lives and take a life.

133
00:09:45,560 --> 00:09:48,020
When the player guesses incorrectly.

134
00:09:48,020 --> 00:09:53,930
So once they've made an incorrect guess then you simply take a life and let them know that they've lost

135
00:09:53,930 --> 00:09:55,530
their life as well.

136
00:09:55,580 --> 00:09:59,400
Once you've done that check if lives are greater than zero.

137
00:09:59,810 --> 00:10:02,820
If not you're going to have the end game.

138
00:10:02,840 --> 00:10:07,760
Otherwise of course you will just continue playing bowls of the year now and give that a go.

139
00:10:10,240 --> 00:10:11,500
Okay everybody Welcome back.

140
00:10:11,500 --> 00:10:13,900
Let's go ahead now and implement lives.

141
00:10:15,130 --> 00:10:16,580
OK everybody welcome back.

142
00:10:16,600 --> 00:10:20,700
Let's go ahead and nuke the code that I've just put in.

143
00:10:20,890 --> 00:10:26,050
It's not relevant to our game and let's go ahead and uncommon at all of that lots.

144
00:10:26,050 --> 00:10:26,300
Okay.

145
00:10:26,320 --> 00:10:31,330
So we've got the game running through we've got the lives let's go ahead and set them to the hidden

146
00:10:31,330 --> 00:10:33,660
word length to begin with.

147
00:10:33,850 --> 00:10:35,850
We'll use the dot operator to do that.

148
00:10:35,850 --> 00:10:38,260
So now we've got a hidden word sets a number of lives.

149
00:10:38,260 --> 00:10:39,560
That's fine.

150
00:10:39,630 --> 00:10:46,780
Okay so with our live set to the hidden word length we might as well say you have so many lives that

151
00:10:46,780 --> 00:10:48,840
we could do this in various ways.

152
00:10:48,850 --> 00:10:51,970
I'm going to show I had it here or not.

153
00:10:51,970 --> 00:10:56,440
I'm going to add it as a new line so we'll print line and then we'll go.

154
00:10:56,440 --> 00:11:02,560
Text will need to text macro and then we're going to pop in lives.

155
00:11:02,560 --> 00:11:03,930
That's important.

156
00:11:03,940 --> 00:11:13,900
So here we're going to go percentage I as the format specify and then say you have this many lives.

157
00:11:13,900 --> 00:11:14,350
There we go.

158
00:11:14,350 --> 00:11:15,010
That's good.

159
00:11:15,010 --> 00:11:19,000
Apart from I've put this in the wrong place.

160
00:11:19,030 --> 00:11:20,060
Easily done.

161
00:11:20,230 --> 00:11:21,370
Comma lives.

162
00:11:21,370 --> 00:11:23,570
Make sure we've got enough spacing in there.

163
00:11:23,590 --> 00:11:25,290
And there we go.

164
00:11:25,430 --> 00:11:27,600
Sprint you have that number of lives.

165
00:11:27,610 --> 00:11:28,650
Should test that.

166
00:11:28,750 --> 00:11:32,650
First of all I am a big fan of testing your code as you go.

167
00:11:32,680 --> 00:11:35,740
I'm obviously reading from a script it makes it a lot easier to do.

168
00:11:35,830 --> 00:11:38,310
But do check your code regularly.

169
00:11:38,350 --> 00:11:41,910
Don't just do a load of edits and find out that it doesn't work.

170
00:11:41,950 --> 00:11:46,260
So you have five lives typing your guess and press enter to continue.

171
00:11:46,270 --> 00:11:46,470
OK.

172
00:11:46,510 --> 00:11:50,320
So in this particular case I'm going to do a little bit of editing to that.

173
00:11:50,320 --> 00:11:54,690
You have five lives full stop typing your guess.

174
00:11:54,940 --> 00:12:01,070
And then on the new line I'm just going to go press and continue that will read much better.

175
00:12:01,090 --> 00:12:03,550
I don't need to go back and check that that works.

176
00:12:03,550 --> 00:12:04,270
I'll be fine.

177
00:12:04,270 --> 00:12:08,000
And I'm also going to remove my Random Capitalization.

178
00:12:08,050 --> 00:12:09,250
OK so that's fine.

179
00:12:09,250 --> 00:12:13,570
Now to implement the life being taken away.

180
00:12:13,570 --> 00:12:18,520
So if the game is over we're going to clear the screen and set up the game again that's fine.

181
00:12:18,850 --> 00:12:20,630
Otherwise we're checking the player I guess.

182
00:12:20,670 --> 00:12:27,460
So if it's correct we're going to say that you've won the game and then end the game and the end game

183
00:12:27,880 --> 00:12:33,190
is going to say it's going to set the game over to true and it's going to say press and to play again

184
00:12:33,220 --> 00:12:37,840
and that will clear down the screens will go all the way back here clear the screen that sets up a game.

185
00:12:38,020 --> 00:12:39,280
So that's good.

186
00:12:39,280 --> 00:12:43,880
Now else this is our only failure at the moment.

187
00:12:43,930 --> 00:12:51,490
So what we're going to do here is say else Okay the first thing we need to do here is lives minus minus

188
00:12:51,490 --> 00:12:53,390
or minus minus lives.

189
00:12:53,470 --> 00:12:54,340
That's important.

190
00:12:54,340 --> 00:12:58,920
So before we do anything else we need to take a life.

191
00:12:59,140 --> 00:13:01,900
And then we can make some assessments.

192
00:13:02,200 --> 00:13:10,730
And what I'm going to do here is I'm going to say give the lives themselves greater than zero.

193
00:13:10,750 --> 00:13:12,870
We shall do the following.

194
00:13:13,060 --> 00:13:18,970
But instead of all of this we can kind of say this again but instead of that we are going to go print

195
00:13:18,970 --> 00:13:27,140
line text macro and we're going to pass in lives here is the arguments and say sorry.

196
00:13:27,430 --> 00:13:29,270
Try guessing again.

197
00:13:29,380 --> 00:13:33,950
You have percentage I lives remaining.

198
00:13:34,000 --> 00:13:36,530
Now this is probably going to go off.

199
00:13:36,580 --> 00:13:36,950
Sorry.

200
00:13:36,970 --> 00:13:41,890
Try again and then say you have your lives remaining on a new line.

201
00:13:42,040 --> 00:13:43,390
OK that's good so far.

202
00:13:43,690 --> 00:13:45,610
OK put a semicolon on the end of that.

203
00:13:45,610 --> 00:13:47,420
That's all fine.

204
00:13:47,470 --> 00:13:49,380
So we've got some extra stuff here.

205
00:13:49,380 --> 00:13:55,840
I'm going to go ahead and delete this junk here for the moment because then we're talking about else.

206
00:13:55,840 --> 00:14:03,550
So if the lives are greater than zero do this check and then we come back out for the moment and we're

207
00:14:03,550 --> 00:14:11,170
going to say else we shall mean that we've run out of lives we can print out to the terminal using a

208
00:14:11,170 --> 00:14:13,970
text macro machine printout.

209
00:14:13,990 --> 00:14:17,920
You have no lives left and then we can end the game.

210
00:14:18,270 --> 00:14:18,780
OK.

211
00:14:18,790 --> 00:14:20,460
That looks good to me.

212
00:14:20,470 --> 00:14:24,130
I think we're missing one final thing just saying here.

213
00:14:24,340 --> 00:14:26,290
You've lost the life.

214
00:14:26,320 --> 00:14:30,330
So once again print line I want to put a semicolon on the end.

215
00:14:30,360 --> 00:14:34,800
Blast them that text lost a life.

216
00:14:34,820 --> 00:14:37,590
Not sure if I got too many exclamation marks in here.

217
00:14:38,080 --> 00:14:39,550
Let's go and try our code

218
00:14:42,970 --> 00:14:43,370
okay.

219
00:14:43,400 --> 00:14:44,490
Let's click play.

220
00:14:44,490 --> 00:14:47,580
Let's see what happens when we typing cakes.

221
00:14:47,600 --> 00:14:49,370
We've won one present to play again.

222
00:14:49,370 --> 00:14:50,710
That's good behavior.

223
00:14:50,720 --> 00:14:56,870
We type something else in that looks quite odd that says you have lost and I definitely have removed

224
00:14:56,900 --> 00:14:58,370
that from my code.

225
00:14:58,430 --> 00:15:04,100
I wonder what is calls that the hidden word is five characters last press Enter to play again.

226
00:15:04,130 --> 00:15:04,550
K..

227
00:15:04,580 --> 00:15:06,370
That was not desired behavior.

228
00:15:06,380 --> 00:15:07,850
Let's just check our code.

229
00:15:07,880 --> 00:15:10,440
We've lost the life if lives are greater than zero.

230
00:15:11,060 --> 00:15:14,270
So let's look for the string here you have lost.

231
00:15:14,270 --> 00:15:16,760
That doesn't seem that doesn't seem right to me.

232
00:15:16,760 --> 00:15:21,220
So if I was hoping you have lost.

233
00:15:21,620 --> 00:15:23,350
There are no results.

234
00:15:23,660 --> 00:15:30,260
So I think this is an example of a real being funny is not picking up the right thing no matter how

235
00:15:30,260 --> 00:15:32,100
many times I compile here.

236
00:15:32,270 --> 00:15:33,880
We seem to have a little bit of a bug.

237
00:15:33,890 --> 00:15:39,530
Let's just try it once more and see if it exhibits the same behavior and then we'll load up our project

238
00:15:39,530 --> 00:15:41,990
again and hopefully that will sort it out.

239
00:15:42,020 --> 00:15:42,940
So let's go ahead

240
00:15:46,080 --> 00:15:48,430
is working now odd behavior.

241
00:15:48,430 --> 00:15:54,970
Make sure if you do experience odd behavior it does exactly what you expect it to.

242
00:15:55,160 --> 00:15:57,790
Finally how confusing was that.

243
00:15:57,790 --> 00:16:00,540
It certainly was for me trying to debug that.

244
00:16:01,160 --> 00:16:03,900
It was only when I noticed it had a string in it.

245
00:16:04,000 --> 00:16:07,460
I did not recognize I hadn't type that in a while.

246
00:16:07,460 --> 00:16:08,570
So let's just play it again.

247
00:16:08,590 --> 00:16:12,560
That's typing cake's we have one.

248
00:16:12,700 --> 00:16:17,340
If I typed in something we've lost the life you have four tries remaining.

249
00:16:17,450 --> 00:16:19,360
Now he's not saying that.

250
00:16:19,370 --> 00:16:20,720
One two three four five.

251
00:16:20,720 --> 00:16:24,680
Will give lost life because that's an invalid guest.

252
00:16:24,700 --> 00:16:32,150
We've also tied up that issue where if we typed something in that was five characters it also failed.

253
00:16:32,160 --> 00:16:33,990
And I'm going to win the game because I like winning.

254
00:16:34,420 --> 00:16:35,140
Okay.

255
00:16:35,160 --> 00:16:41,050
The one thing that I notice here is we don't get our debug line on the next run through if we need to

256
00:16:41,050 --> 00:16:43,200
do it on cakes.

257
00:16:43,200 --> 00:16:45,560
We have one that's fine.

258
00:16:45,570 --> 00:16:46,770
We can lose a life.

259
00:16:46,770 --> 00:16:47,590
Sorry.

260
00:16:47,610 --> 00:16:50,100
Try guessing again you have four lives remaining.

261
00:16:50,130 --> 00:16:52,650
That's the exact behavior that I want.

262
00:16:52,650 --> 00:16:58,440
Sorry try guessing you have four lives remaining at the moment we're losing a life regardless of whether

263
00:16:58,440 --> 00:17:02,040
we type in the right number of characters or not.

264
00:17:02,160 --> 00:17:06,380
Let's just make sure that we've got the right number of tries as well.

265
00:17:06,390 --> 00:17:09,970
One two three four five.

266
00:17:09,990 --> 00:17:12,170
You have no life left Pleasants plague.

267
00:17:12,190 --> 00:17:14,800
And if I type in cakes here it doesn't do everything.

268
00:17:14,820 --> 00:17:16,950
So we've got the desired behavior that we want.

269
00:17:16,950 --> 00:17:23,560
Brilliant and one final thing to tidy up our code and 10 points to you.

270
00:17:23,560 --> 00:17:29,240
If you manage to do this if we have a look back at our code we've got minus minus lives.

271
00:17:29,240 --> 00:17:31,670
And then we go ahead and print out lives.

272
00:17:31,680 --> 00:17:36,070
Well what we can do is just deprecate the life there instead.

273
00:17:36,350 --> 00:17:37,200
Nice and neat.

274
00:17:37,200 --> 00:17:37,700
Hey.

275
00:17:37,880 --> 00:17:41,110
So then we can go ahead and delete that line entirely.

276
00:17:41,240 --> 00:17:46,140
Save our work and we should find that the same thing happens without any issue.

277
00:17:46,170 --> 00:17:48,540
Let's make sure we compile our work.

278
00:17:48,590 --> 00:17:54,460
And incidentally if you do find your compilers aren't working do shut unreal down and reopen it again

279
00:17:54,690 --> 00:18:02,390
and that's press play and what we should find now is it still does art deprecation for us and our code

280
00:18:02,810 --> 00:18:05,900
looks a lot neater much more concise.

281
00:18:06,020 --> 00:18:11,480
The only thing that I will want to change over time is that I don't want the docker life.

282
00:18:11,480 --> 00:18:16,710
If someone types in too few characters but that's for another day.

283
00:18:16,880 --> 00:18:22,630
How did you guys get on our game is really coming to life now that we've actually got some lives.

284
00:18:22,670 --> 00:18:23,600
Pun intended.

285
00:18:23,600 --> 00:18:25,820
And I'll see you all in the next lecture.
