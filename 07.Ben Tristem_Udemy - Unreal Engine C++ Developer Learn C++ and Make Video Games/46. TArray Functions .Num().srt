1
00:00:04,160 --> 00:00:05,930
Hello everybody and welcome back.

2
00:00:05,930 --> 00:00:10,550
We are going to have a look at our first function that we can use on tier res.

3
00:00:10,550 --> 00:00:16,670
Now it is very similar to the DOT early in function the length function that we've been using with our

4
00:00:16,670 --> 00:00:18,140
f strings.

5
00:00:18,140 --> 00:00:22,270
It returns the number of elements within the array itself.

6
00:00:22,340 --> 00:00:28,370
And here's an example if we were to look at our words dot num it would produce a number.

7
00:00:28,450 --> 00:00:31,900
Now be a good idea if we could go ahead and print that out.

8
00:00:31,940 --> 00:00:33,050
So let's go and do that now.

9
00:00:33,770 --> 00:00:39,360
Okay so first of all what I want to do is include something that I've missed before.

10
00:00:39,380 --> 00:00:44,360
We do need to make sure that if for some reason this is called more than once it's going to cause us

11
00:00:44,360 --> 00:00:45,290
an issue.

12
00:00:45,290 --> 00:00:50,600
So we do need to make sure that we've got pregnant once at the top of our head and word list pedophile.

13
00:00:50,630 --> 00:00:55,170
Otherwise if we were to use it in multiple places it could potentially cause us issues.

14
00:00:55,190 --> 00:00:59,480
There's also a bit here to tie the up as well in our implementation.

15
00:00:59,480 --> 00:01:03,350
I don't think we're using a lot of comments that we had before.

16
00:01:03,570 --> 00:01:10,280
Now in the hidden word less we got a series of words within this array and it would be useful to know

17
00:01:10,280 --> 00:01:14,570
when we start filtering them out whether they are Eissa grams and we don't want them to be.

18
00:01:14,900 --> 00:01:18,320
And the different length words they were actually making a difference.

19
00:01:18,350 --> 00:01:25,070
So let's go ahead and make a little bit of code using the DOT num function so we know how many words

20
00:01:25,070 --> 00:01:26,580
are actually in this list.

21
00:01:26,720 --> 00:01:29,310
Now it said a thousand when I copied and paste this.

22
00:01:29,360 --> 00:01:30,760
Let's say it's true.

23
00:01:30,760 --> 00:01:32,490
Let's go over to our implementation.

24
00:01:32,510 --> 00:01:37,660
And as I said I'm going to tidy up some of the commenting here that is just not necessary.

25
00:01:37,670 --> 00:01:42,510
And this here is another example of that's where we were playing around with characters.

26
00:01:42,580 --> 00:01:47,180
In fact that was our first reach into arrays have gone sideways slightly yet.

27
00:01:47,330 --> 00:01:48,990
So the code is all okay.

28
00:01:49,010 --> 00:01:51,410
So that's nice and tidy and to save that.

29
00:01:51,730 --> 00:01:55,460
And I think a great place is going to be at the very beginning of the game we print out what the hidden

30
00:01:55,460 --> 00:01:56,360
word is.

31
00:01:56,360 --> 00:02:01,030
Well let's also printout here the number of different words that we've got to pick from.

32
00:02:01,040 --> 00:02:03,370
So this is going to be our print line function.

33
00:02:03,380 --> 00:02:10,040
And of course we are going to need text macro once again the number of possible words is and then we're

34
00:02:10,040 --> 00:02:13,080
going to use percentage I as our format specified.

35
00:02:13,100 --> 00:02:18,800
And then we need to feed something into that now because our hidden word list is included.

36
00:02:18,800 --> 00:02:24,290
It is exactly the same as copying and pasting this or cutting and pasting this into the top of this

37
00:02:24,290 --> 00:02:25,120
code.

38
00:02:25,160 --> 00:02:31,410
And what that basically means is we are aware within our implementation file of what this words is.

39
00:02:31,420 --> 00:02:34,250
It is a constant series so we can reference it in here.

40
00:02:34,250 --> 00:02:35,360
So where are we.

41
00:02:35,420 --> 00:02:43,640
Number of possible words is so we can type in here words dot n new M and close brackets and we can see

42
00:02:43,640 --> 00:02:47,350
there fortunately it does return us the number of elements in the array.

43
00:02:47,360 --> 00:02:49,020
That's exactly what we're looking for.

44
00:02:49,040 --> 00:02:52,360
And then finally we need our semicolon on the end.

45
00:02:52,370 --> 00:02:55,390
Let's go ahead and rumble cow and see what we get.

46
00:02:55,400 --> 00:03:00,550
Hey brilliant let's compile our code excellent with the compiler complete this press play.

47
00:03:00,590 --> 00:03:01,010
Excellent.

48
00:03:01,010 --> 00:03:03,230
Now it is exactly what we were expecting.

49
00:03:03,240 --> 00:03:03,590
Okay.

50
00:03:03,720 --> 00:03:07,490
So armed with this knowledge or really quick challenge with you to test everything that we've learned

51
00:03:07,490 --> 00:03:13,460
up to this point and just making sure you can access different elements of an array because that's going

52
00:03:13,460 --> 00:03:15,140
to be really useful coming up.

53
00:03:15,740 --> 00:03:16,050
Okay.

54
00:03:16,060 --> 00:03:19,580
So this is hopefully going to be a pretty straightforward challenge for you.

55
00:03:19,580 --> 00:03:25,080
I'd like you to write a for loop that simply prints out the first five words from our words t array

56
00:03:25,380 --> 00:03:30,370
video now and give that to go Okay everybody Welcome back.

57
00:03:30,370 --> 00:03:34,770
Let's go ahead now and printout these first five words OK.

58
00:03:34,800 --> 00:03:41,210
So back over in our file Howard going to add my full stop here just for my own sake and my own sanity.

59
00:03:41,280 --> 00:03:45,410
And now the for loop that we need to do now in this particular case.

60
00:03:45,420 --> 00:03:51,990
We're not going to use words numb as the as the count two points but we do need to count up.

61
00:03:51,990 --> 00:03:54,400
So let's declare an integer called index.

62
00:03:54,510 --> 00:03:59,850
And I really do like using the word index it really helps us focus on what we're counting in this particular

63
00:03:59,850 --> 00:04:00,560
case.

64
00:04:00,590 --> 00:04:06,690
Now it's very tempting here to start typing in words but no it's not that difficult.

65
00:04:06,690 --> 00:04:08,250
We're saying it's just less than five.

66
00:04:08,250 --> 00:04:12,570
We're counting up the first five elements of the array and when we reach index five we're talking about

67
00:04:12,570 --> 00:04:12,980
the sixth.

68
00:04:12,990 --> 00:04:19,130
So as long as it's less than old or indeed here we can go not equal to five as well.

69
00:04:19,140 --> 00:04:24,720
You will see these sorts of things written in various ways and sometimes as a fundamental reason others

70
00:04:24,810 --> 00:04:26,510
it's just the style you want to do.

71
00:04:26,520 --> 00:04:27,870
And that's absolutely fine.

72
00:04:27,900 --> 00:04:29,980
It does the same thing.

73
00:04:30,030 --> 00:04:35,790
However one thing to be aware of here is if you're incrementing by more than one in a loop having not

74
00:04:35,850 --> 00:04:38,680
equal to a certain number may cause you issues.

75
00:04:38,760 --> 00:04:42,690
Think of the case where you have perhaps incrementing by two every time.

76
00:04:42,690 --> 00:04:48,660
If you're on for a new increment by two you're on six it's not equal to five so the loop will continue

77
00:04:49,140 --> 00:04:54,600
something to be aware of for future loops where you will find that the less than is probably a better

78
00:04:54,600 --> 00:05:01,990
choice so for our code down here we're going to print line and then our text macro as always.

79
00:05:02,020 --> 00:05:03,430
And what what are we going to put in there.

80
00:05:03,430 --> 00:05:07,320
Here where we're going to go percentage s as our format specifies.

81
00:05:07,900 --> 00:05:09,800
Now what are we going to put here.

82
00:05:09,850 --> 00:05:16,690
It may be tempting to type out words which is correct and then we're talking about the indices that

83
00:05:16,690 --> 00:05:17,880
we're looking at in this case.

84
00:05:17,890 --> 00:05:20,560
It's just going to be the same as the index we're on.

85
00:05:21,250 --> 00:05:25,090
But this won't work in itself it won't work with the semicolon.

86
00:05:25,090 --> 00:05:29,650
Remember we need to reference it just like the hidden word here because we're talking about a string.

87
00:05:29,740 --> 00:05:32,310
So let's make sure we're doing that.

88
00:05:32,310 --> 00:05:37,570
And when we go ahead and save our work we can hop over to the game and compile go ahead and click on

89
00:05:37,570 --> 00:05:39,820
compile wait a few moments.

90
00:05:39,830 --> 00:05:42,950
Okay with that complete here's the moment of truth for when you click play.

91
00:05:43,390 --> 00:05:43,930
Excellent.

92
00:05:43,920 --> 00:05:49,170
So we're now printing out the first five elements of our possible words.

93
00:05:49,180 --> 00:05:53,530
And I've also got my full stop on the end there just for my own sanity.

94
00:05:53,530 --> 00:05:53,830
Brilliant.

95
00:05:54,070 --> 00:06:00,310
So did you manage to print out the first five elements of our words array and did you remember to D

96
00:06:00,310 --> 00:06:01,160
reference.

97
00:06:01,180 --> 00:06:05,890
I know some of you would have forgotten that as we go through but there we go we know that we can now

98
00:06:06,160 --> 00:06:09,910
get an element of the array and print it out that's really good.

99
00:06:10,030 --> 00:06:12,090
And I'll see you all in the next lecture.
