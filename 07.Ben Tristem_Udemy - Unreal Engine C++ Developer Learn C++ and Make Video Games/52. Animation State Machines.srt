1
00:00:04,570 --> 00:00:05,290
Hello and welcome.

2
00:00:05,410 --> 00:00:10,840
In this lecture, we are going to introduce you to a new part of the animation blueprint called a state

3
00:00:10,840 --> 00:00:12,640
machine, very useful part of it.

4
00:00:12,970 --> 00:00:19,000
And what it allow us to do is if we hit a boolean switch here, it's going to allow us to transition

5
00:00:19,000 --> 00:00:22,630
into a jumping state and then back down to grounded.

6
00:00:22,900 --> 00:00:26,890
Let's see how all of this works and how we can create this for ourselves.

7
00:00:28,090 --> 00:00:32,750
OK, so we've got this really weird behavior when we jump, which just means that we end up running

8
00:00:32,810 --> 00:00:36,050
in midair, which is obviously not a very good look.

9
00:00:36,710 --> 00:00:41,780
Now, to fix this, we're gonna need to learn about a whole new animation concept called an animation

10
00:00:41,780 --> 00:00:42,440
state machine.

11
00:00:42,710 --> 00:00:44,660
So this belongs in the animation blueprint.

12
00:00:44,660 --> 00:00:48,120
So go ahead and get that fired up if you haven't got it fired up already.

13
00:00:48,770 --> 00:00:54,500
And over in the anim graph, so far, everything we've done in the UNEF graph has been through these

14
00:00:54,500 --> 00:00:55,520
nodes here.

15
00:00:56,090 --> 00:01:00,830
Now, what I want to show you is how we can add something new, something called a state machine.

16
00:01:01,340 --> 00:01:02,570
We're going to right click.

17
00:01:02,720 --> 00:01:07,070
And this is in the Annam graph and we're going to look for state machine.

18
00:01:07,220 --> 00:01:11,630
And you can see that this add new state machine is one option here.

19
00:01:11,680 --> 00:01:15,200
Now, I want to show you that there's another way of doing this as well.

20
00:01:15,590 --> 00:01:16,280
If you.

21
00:01:16,370 --> 00:01:16,700
Right.

22
00:01:16,700 --> 00:01:17,900
Click all the way back.

23
00:01:17,960 --> 00:01:18,620
So if we right.

24
00:01:18,620 --> 00:01:25,760
Click in the Annam graph and search for new state machine, then we've got this option here we click.

25
00:01:25,760 --> 00:01:31,300
It creates a new node and you can see that node has a single animation, Po's output pin.

26
00:01:32,000 --> 00:01:38,270
And over in the left hand pain in my blueprint, it's created this new state machine underneath our

27
00:01:38,360 --> 00:01:39,140
anim graph.

28
00:01:39,500 --> 00:01:45,560
So if you either double click on the new state machine or click over in the Annam graph, you see it

29
00:01:45,560 --> 00:01:47,630
takes you to this new window.

30
00:01:47,810 --> 00:01:49,290
So it's yet another thing we've got here.

31
00:01:49,360 --> 00:01:50,810
Annam graph, our event graph.

32
00:01:51,440 --> 00:01:53,690
And now we've got this state machine graph.

33
00:01:54,680 --> 00:01:59,540
We can actually rename that so we can give our state machine a better name by clicking it in the my

34
00:01:59,540 --> 00:02:01,760
blueprints and hitting F2.

35
00:02:01,850 --> 00:02:05,750
And we can call it locomotion because this is going to be all about locomotion.

36
00:02:05,780 --> 00:02:07,670
And what does a state machine do?

37
00:02:07,820 --> 00:02:10,100
Well, a state machine is at its simplest.

38
00:02:10,160 --> 00:02:11,890
It's a set of if you right click.

39
00:02:11,900 --> 00:02:14,000
In fact, you can see there's a couple of options here.

40
00:02:14,410 --> 00:02:15,050
There's a comment.

41
00:02:15,080 --> 00:02:15,710
There's a conduit.

42
00:02:15,740 --> 00:02:19,970
But the most important thing is state's is a machine full of states.

43
00:02:20,030 --> 00:02:22,890
And I can add a couple of states in here to give you an idea.

44
00:02:22,950 --> 00:02:24,830
We've got state to state, one state, too.

45
00:02:25,580 --> 00:02:30,200
And then if you drag off of this border, it creates something called a transition so we can create

46
00:02:30,230 --> 00:02:32,330
a transition between states.

47
00:02:33,050 --> 00:02:38,480
And we've got the entry pin, which basically is telling us where which state should we start in.

48
00:02:39,220 --> 00:02:39,420
Okay.

49
00:02:39,500 --> 00:02:40,820
So let's take a little step back.

50
00:02:40,850 --> 00:02:42,110
What does this all mean?

51
00:02:43,160 --> 00:02:49,100
Well, in each given state, if you double click on it, you can see that there's an output pin and

52
00:02:49,160 --> 00:02:54,770
that output pin can be used in the same way as our Annam graph can be used to build up an animation

53
00:02:54,770 --> 00:02:55,310
pose.

54
00:02:55,490 --> 00:03:00,080
So in its simplest form, we might just decide to stick an animation in here.

55
00:03:00,230 --> 00:03:03,410
So select any old animation playability, for example.

56
00:03:03,800 --> 00:03:09,350
And that's the animation that's going to be played when the state machine is in a given state.

57
00:03:10,100 --> 00:03:11,820
Now, how do we get into a given state?

58
00:03:11,910 --> 00:03:15,050
Well, we might get into a given state because our entry node points to it.

59
00:03:15,110 --> 00:03:16,710
And so that's the default state.

60
00:03:16,730 --> 00:03:17,870
That's where we start off.

61
00:03:18,440 --> 00:03:21,770
But then we might get to a state via a series of transitions as well.

62
00:03:22,490 --> 00:03:24,680
So the transitions each have properties.

63
00:03:24,680 --> 00:03:29,930
You can double click on a transition and you can see that again, we get this node editor pop up and

64
00:03:29,930 --> 00:03:32,300
we can have some sort of boolean property.

65
00:03:32,330 --> 00:03:36,350
So I don't know, we could have some thing like is dead.

66
00:03:36,740 --> 00:03:37,610
We can get is dead.

67
00:03:37,610 --> 00:03:38,870
We can pipe that into here.

68
00:03:39,260 --> 00:03:41,660
And now every time is dead is true.

69
00:03:42,080 --> 00:03:43,760
We're going to make the transition.

70
00:03:43,760 --> 00:03:50,240
If we were in this original state, if we are dead, then we'll make the transition into state one and

71
00:03:50,240 --> 00:03:52,160
we'll start playing the animation in state one.

72
00:03:52,250 --> 00:03:57,890
And then if there transitions from state one are true, for whatever reason, we might make the transition

73
00:03:57,890 --> 00:03:58,900
over to state, too.

74
00:03:59,660 --> 00:03:59,830
Okay.

75
00:03:59,930 --> 00:04:02,090
So this is all very well and good in theory.

76
00:04:02,600 --> 00:04:05,660
But how does this help us in practice with running?

77
00:04:06,500 --> 00:04:10,910
Well, for example, we might want a state that says grounded.

78
00:04:11,950 --> 00:04:16,410
And in the grounded states, we're going to play our ground locomotion.

79
00:04:16,450 --> 00:04:21,330
So if we go back up to Annam graph, what is a grounded locomotion?

80
00:04:21,640 --> 00:04:27,070
It is basically everything here before the we add our idle combat offset.

81
00:04:27,520 --> 00:04:30,690
There's this locomotion blende space is our grounded offset.

82
00:04:30,730 --> 00:04:39,310
So I'm going to cut the nodes here, go and hook up my locomotion state machine to pass in to our aim

83
00:04:39,310 --> 00:04:39,870
offset.

84
00:04:40,450 --> 00:04:45,490
Then I'm going to go into the locomotion state machine, go into the grounded state and paste in those

85
00:04:45,490 --> 00:04:48,430
nodes here and connect them up to the output pin.

86
00:04:48,970 --> 00:04:52,450
So let's follow what's going on here at the Annam graph level.

87
00:04:53,200 --> 00:04:58,120
First of all, we are running the animation locomotion state machine.

88
00:04:58,780 --> 00:05:05,170
And because I haven't hooked this up, but because the entry pin points to the grounded state, we automatically

89
00:05:05,170 --> 00:05:07,990
in the grounded state, it's gonna go into there, figure out.

90
00:05:08,020 --> 00:05:09,280
Okay, we got a blend space.

91
00:05:09,310 --> 00:05:10,990
We blend it using our variables.

92
00:05:10,990 --> 00:05:12,160
Then we output this.

93
00:05:12,610 --> 00:05:15,910
That becomes the output of our state machine as a whole.

94
00:05:16,420 --> 00:05:21,130
And then it feeds through into the combat animation, which feeds through into our death animation,

95
00:05:21,130 --> 00:05:23,290
which feeds into our final output.

96
00:05:24,010 --> 00:05:30,670
So hopefully now what we'll see when we compile it is actually nothing really has changed because there's

97
00:05:30,670 --> 00:05:32,380
only one state in our state machine.

98
00:05:33,430 --> 00:05:37,120
However, if we're jumping, then we can introduce a new state for that.

99
00:05:37,210 --> 00:05:42,280
We go add state and then we can have airborne as a state.

100
00:05:42,400 --> 00:05:44,800
Then we can have airborne as a state.

101
00:05:45,580 --> 00:05:48,760
And in this state, we won't be playing the same animations.

102
00:05:48,860 --> 00:05:53,710
We're essentially switching out those animations in the Annam graph up at this level.

103
00:05:53,980 --> 00:05:59,890
We're saying that this node is going to switch to playing different animations when in the airborn state.

104
00:06:00,370 --> 00:06:04,500
So we want to go into the Abal and state and make sure we have an animation selected here.

105
00:06:04,510 --> 00:06:10,550
So I'm going to pull off of that result, Penn, and I'm just going to look for a jump and particularly

106
00:06:10,550 --> 00:06:17,470
and look for the jump apex combat combat, because that has us aiming apex, because this will be the

107
00:06:17,470 --> 00:06:18,670
top of our jump.

108
00:06:19,810 --> 00:06:22,760
And then we're going to go out of the Annam graph.

109
00:06:22,820 --> 00:06:27,280
Then we're gonna go out to the locomotion level and we'll notice that there's a problem.

110
00:06:27,280 --> 00:06:31,960
Here was no way for us to get to the airborn state because there isn't a transition that leads us there.

111
00:06:32,650 --> 00:06:37,540
So what we want to do is drag from the border of grounded on to the airborn state.

112
00:06:38,070 --> 00:06:42,190
And we want to double click in there because we want to create a transition here.

113
00:06:42,670 --> 00:06:46,120
And I'm just going to do a transition based on a variable, which we don't currently have.

114
00:06:46,180 --> 00:06:54,490
So if I go back to my blueprints at a variable and have an is airborne as a boolean variable in here.

115
00:06:54,880 --> 00:07:01,930
Then I can pull that over in to this node editor for our grounded transition.

116
00:07:02,950 --> 00:07:09,130
And then we can put hook that up so that what we're saying is this transition is possible when we are

117
00:07:09,160 --> 00:07:15,340
airborne and then we want a converse transition that goes from airborne to grounded.

118
00:07:15,970 --> 00:07:23,470
And if we click on double click on that one, then we can put in a not node, which basically negates

119
00:07:23,470 --> 00:07:24,160
the boolean.

120
00:07:25,030 --> 00:07:29,680
And then we can put in the is airborne boolean as well.

121
00:07:30,160 --> 00:07:35,680
So that at the end, what we've got here, if we go to our anim preview ad, it's a tab over to the

122
00:07:35,680 --> 00:07:36,220
right.

123
00:07:36,430 --> 00:07:42,370
We can flip the switch and we go into that airborn state playing the airborne animation.

124
00:07:42,490 --> 00:07:47,110
And if we flip it again, we go back in to our grounded locomotion.

125
00:07:47,440 --> 00:07:50,320
And you can see that all of this is going to be working with our AIM pitches.

126
00:07:50,350 --> 00:07:54,790
Well, if I move the aim pitch pointing up, then I hit an airborne.

127
00:07:55,030 --> 00:07:58,360
You can see we keep aiming in the direction that we should be aiming.

128
00:07:58,670 --> 00:07:58,840
Okay.

129
00:07:58,930 --> 00:08:05,110
So I've got a mini challenge for you, apart from getting the state machine setup like this, if you

130
00:08:05,110 --> 00:08:07,000
haven't been following along already.

131
00:08:07,480 --> 00:08:14,080
Well, I would like you to try and do is see if you can find a way at the moment when we click is airborne.

132
00:08:14,380 --> 00:08:19,240
We get this with glitching, looping of this animation, this airborne animation.

133
00:08:19,660 --> 00:08:22,870
See if you can make it so that this animation doesn't loop.

134
00:08:22,880 --> 00:08:27,760
See if you can find your way around the anim blueprint, which can be quite hard to navigate and see

135
00:08:27,760 --> 00:08:28,870
if you can find that property.

136
00:08:28,990 --> 00:08:29,190
Okay.

137
00:08:29,230 --> 00:08:29,740
Welcome back.

138
00:08:29,770 --> 00:08:32,200
So hopefully you've gone and given this a shot.

139
00:08:32,500 --> 00:08:34,570
So where would we start to think about this?

140
00:08:34,570 --> 00:08:36,970
How would we start to navigate around this blueprint?

141
00:08:37,990 --> 00:08:43,480
Well, for a start, we know that this problem is coming from our locomotion state machine.

142
00:08:44,110 --> 00:08:49,300
So let's go in there and we can see that's the thing that is playing the state that's currently playing

143
00:08:49,300 --> 00:08:50,650
is the airborne state.

144
00:08:50,890 --> 00:08:52,030
So let's go into that.

145
00:08:52,660 --> 00:08:58,030
And you can see that the jump apex combat is just looping round and round and it's clearly creating

146
00:08:58,030 --> 00:08:59,110
this problem here.

147
00:08:59,740 --> 00:09:06,580
So if we click on that animation and look at the details, you can see that we have got this loop animation

148
00:09:06,580 --> 00:09:07,420
properties set.

149
00:09:08,200 --> 00:09:15,340
If I uncheck that and then recompile our animation blueprint, then I go and hit the is airborne.

150
00:09:16,000 --> 00:09:25,390
You can see it plays that jump apex just once and then it proceeds to hold that animation until we uncheck

151
00:09:25,390 --> 00:09:29,710
the box, at which point it transitions back to our locomotion state machine.

152
00:09:30,040 --> 00:09:33,130
Let's see all of that working if we had a bit of speed, if we were moving.

153
00:09:33,190 --> 00:09:34,150
So here we are running.

154
00:09:34,810 --> 00:09:36,520
We add is airborne.

155
00:09:36,820 --> 00:09:43,210
It goes into jump apex until we are no longer airborne, at which point we transition back to being

156
00:09:43,210 --> 00:09:44,410
running on the ground.

157
00:09:44,470 --> 00:09:45,460
So that's it for this lecture.

158
00:09:45,460 --> 00:09:50,590
We've been introduced to a whole new concept to lots taking the idea of an animation state machine.

159
00:09:50,980 --> 00:09:56,380
We've seen about the states and how we get into them via transitions and we've seen how that can be

160
00:09:56,440 --> 00:10:01,720
driven by a boolean value to allow us to have a jump state.

161
00:10:01,840 --> 00:10:06,130
In the next lecture, we're going to hook this up to gameplay and refine things further.
