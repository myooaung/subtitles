WEBVTT
1
00:00:04.410 --> 00:00:09.420
Hello everybody and welcome back in this lecture we're going to use linear interpolation in order to

2
00:00:09.420 --> 00:00:13.470
learn between a starting value and end value.

3
00:00:13.470 --> 00:00:16.400
And we're going to say how much to go each time.

4
00:00:16.440 --> 00:00:19.860
Now that will be done with the following code.

5
00:00:19.950 --> 00:00:22.070
So we good at math code and learn.

6
00:00:22.230 --> 00:00:25.950
So from now on I'm going to use the term learning between two values.

7
00:00:26.250 --> 00:00:27.720
So we're going to start with the door shut.

8
00:00:27.720 --> 00:00:33.120
We're going to end with the door open and the percentage distance we can go anywhere between zero and

9
00:00:33.120 --> 00:00:36.660
a value of 1 1 being 100 percent.

10
00:00:36.900 --> 00:00:39.410
And what we can do is just put some numbers in here.

11
00:00:39.540 --> 00:00:45.540
So if we start at zero and end 10 and have a percentage of 10 percent or nought point one we need to

12
00:00:45.540 --> 00:00:49.180
type it in or put it in as a float value.

13
00:00:49.230 --> 00:00:50.220
What would that look like.

14
00:00:50.610 --> 00:00:53.550
Well here's a table to show you roughly how it would go.

15
00:00:53.550 --> 00:00:58.780
Now these numbers are rounded as well and you can see that we start with a value of 1.

16
00:00:58.980 --> 00:01:02.370
And the door will actually slow down as the frames progressed.

17
00:01:02.370 --> 00:01:09.810
So we're gonna be sticking our code well it's being updated every frame rather than in begin play.

18
00:01:09.810 --> 00:01:15.420
And of course once we've got the door working exactly how we want we'll use a trigger to open it rather

19
00:01:15.420 --> 00:01:17.670
than just opening when we press play.

20
00:01:18.120 --> 00:01:18.480
Okay.

21
00:01:19.050 --> 00:01:24.770
Hi there Sam from the future come here to edit Mike's video and make a little bit of a correction.

22
00:01:24.810 --> 00:01:29.790
The technique that we're using here is not actually linear interpolation even though the function that

23
00:01:29.790 --> 00:01:34.520
we're using is called Love and that's what it's all about.

24
00:01:34.770 --> 00:01:39.390
But because we are passing in the current value and repeating what we're actually getting is a kind

25
00:01:39.390 --> 00:01:44.130
of exponential interpolation there will be more information about how we can get proper linear interpolation

26
00:01:44.130 --> 00:01:47.370
and how we could do this exponential interpolation even better.

27
00:01:47.370 --> 00:01:48.900
Coming up at the end of the video.

28
00:01:48.900 --> 00:01:50.660
In the meantime follow along with the instructions.

29
00:01:50.670 --> 00:01:51.630
They will work.

30
00:01:52.020 --> 00:01:54.420
So what else do we need to cover here.

31
00:01:54.420 --> 00:01:57.950
Now we only have to change the your value of the door itself.

32
00:01:57.990 --> 00:02:03.360
Not all three so we don't have to use an F rotates or as such to store all of those three values and

33
00:02:03.360 --> 00:02:04.250
only change one.

34
00:02:04.350 --> 00:02:07.290
We can just change the one we wants to do.

35
00:02:07.290 --> 00:02:12.360
And if you'd like to read up a bit more on linear interpolation there's a link there and I'll put that

36
00:02:12.360 --> 00:02:14.490
in the lecture resources as well.

37
00:02:14.520 --> 00:02:19.750
So it's five on over into the US code and start looking at Ping okay.

38
00:02:19.770 --> 00:02:22.150
Everybody welcome over into yes code.

39
00:02:22.170 --> 00:02:27.390
The first thing I want to do is just correct something that I included last time and that is an equals

40
00:02:27.390 --> 00:02:27.830
here.

41
00:02:27.820 --> 00:02:29.850
This is just not necessary.

42
00:02:29.850 --> 00:02:32.930
And we can remove four extra whitespace there.

43
00:02:32.940 --> 00:02:40.050
The other thing that you can do is you don't need those curly braces you can also use parentheses there

44
00:02:40.130 --> 00:02:41.010
like so.

45
00:02:41.170 --> 00:02:47.490
But at this point in time we can use either the parentheses or the curly braces both will work and the

46
00:02:47.490 --> 00:02:55.200
basic reason for this is initialization syntax in C++ is quite honestly a mess which I won't get into

47
00:02:55.210 --> 00:02:56.280
at the moment.

48
00:02:56.280 --> 00:03:02.610
However in general I'd recommend that you use your curly braces for containers where you want to initialize

49
00:03:02.610 --> 00:03:05.620
the elements with lists of values.

50
00:03:05.670 --> 00:03:09.030
Otherwise go ahead and use parentheses.

51
00:03:09.030 --> 00:03:14.520
Now I'm going to comment out that code for the moment a move entire lot's of code some of it's kind

52
00:03:14.520 --> 00:03:17.260
of duplicate code but we'll get back to that later on.

53
00:03:17.270 --> 00:03:22.040
English will shove it down here more for reference more than anything else.

54
00:03:22.140 --> 00:03:27.280
And that just means that we can come back to that later on and decide which way we want to go with it.

55
00:03:27.330 --> 00:03:32.310
Now let's have a look at the head of file for the moment because what we really want to do is have a

56
00:03:32.310 --> 00:03:35.520
target that would go into a target your.

57
00:03:35.520 --> 00:03:41.190
Now we don't have any private areas here so let's go ahead and create ourselves a private area where

58
00:03:41.190 --> 00:03:43.910
we can store this new member variable.

59
00:03:44.010 --> 00:03:47.580
We're going to call it the target your it's going to be a float.

60
00:03:48.000 --> 00:03:52.370
As we've talked about before I'm going to call it's my target your.

61
00:03:52.470 --> 00:03:56.130
And yes I am going to initialize it here as well.

62
00:03:56.130 --> 00:04:01.410
Otherwise I'm just going to have to add initialize it later on in my code.

63
00:04:01.680 --> 00:04:07.050
And there's no point if it's already got a value that we can just use straight here and later on what

64
00:04:07.050 --> 00:04:13.200
we'll be doing is being able to set our target your from within the editor which would be really useful.

65
00:04:13.200 --> 00:04:18.090
Now also takes out any magic numbers that we've got for instance here.

66
00:04:18.150 --> 00:04:18.900
That's really good.

67
00:04:19.980 --> 00:04:20.200
OK.

68
00:04:20.260 --> 00:04:25.640
So before I do anything else over in the implementation what I'd like you to do is go ahead and print

69
00:04:25.640 --> 00:04:31.060
out the f transform or the yaw or if you want to give it to go both.

70
00:04:31.100 --> 00:04:37.730
Now if you are printing out the yaw you need the format specified percentage f for foxtrot in order

71
00:04:37.730 --> 00:04:38.340
to do that.

72
00:04:38.360 --> 00:04:40.810
That's not one we've used before.

73
00:04:40.820 --> 00:04:45.410
So if you think you've got the skills to do that and I know you have pause a video for a few moments

74
00:04:45.500 --> 00:04:50.470
and give that a go Okay everybody Welcome back.

75
00:04:50.470 --> 00:04:51.820
So what do we want to do here.

76
00:04:51.820 --> 00:04:54.190
Well we want to log out the f rotates.

77
00:04:54.220 --> 00:04:55.920
Let's do that first.

78
00:04:56.020 --> 00:05:02.030
Say you log and then I want the log temp as always.

79
00:05:02.170 --> 00:05:03.700
And then what do we want here.

80
00:05:03.700 --> 00:05:13.470
I want it coming out in yellow and not test text and I will do the F rotator for some kind of go format

81
00:05:13.470 --> 00:05:16.850
specify s to begin with.

82
00:05:17.050 --> 00:05:22.170
And when we get to the your will need the format specify F instead.

83
00:05:22.170 --> 00:05:28.110
So here we're going to need a star because it's an F string and then we're going to need to get ona

84
00:05:28.590 --> 00:05:35.020
parentheses the our operator gets acts a rotation which is just.

85
00:05:35.850 --> 00:05:37.600
He says in the Misses hits.

86
00:05:37.680 --> 00:05:38.810
Brilliant.

87
00:05:39.210 --> 00:05:43.380
And then does this have a two string Operator Yes it does.

88
00:05:43.380 --> 00:05:44.100
Brilliant.

89
00:05:44.100 --> 00:05:48.520
And of course we need parentheses on the back and I think we need one more.

90
00:05:48.660 --> 00:05:51.850
Yes parentheses just that brilliant semicolon.

91
00:05:51.870 --> 00:05:59.390
So that's how we will go ahead and do the first one the second one which was the your let's go a log

92
00:06:01.960 --> 00:06:08.100
log temp again and again another yellow warning and then I'll text macro.

93
00:06:08.100 --> 00:06:13.330
I just realized when typing it down how forgotten our comma just there.

94
00:06:13.570 --> 00:06:20.770
Okay so this will be the your is in percentage f just there.

95
00:06:21.020 --> 00:06:25.970
Okay so what are we going to need here we're going to need to once again get the owner that doesn't

96
00:06:25.970 --> 00:06:33.260
need to be the star operator this time because it's not going to be placed into a string.

97
00:06:33.260 --> 00:06:40.780
The arrow operator and then gets active rotation once again parentheses and the dot operator.

98
00:06:41.240 --> 00:06:42.890
And finally the your.

99
00:06:43.100 --> 00:06:45.500
Hopefully that is everything in there.

100
00:06:45.500 --> 00:06:45.820
Brilliant.

101
00:06:45.830 --> 00:06:50.830
If we save this now clear up this little piece of whitespace here.

102
00:06:50.820 --> 00:06:52.220
Hey looking good.

103
00:06:52.220 --> 00:06:53.720
Let's go head over into one real

104
00:06:56.820 --> 00:07:03.360
and compile our code once that's compiled what we should do is open up our output log here and we should

105
00:07:03.360 --> 00:07:09.030
see two sets of data coming through because we've got this door here and this other door here both of

106
00:07:09.030 --> 00:07:15.000
them have the open door components on them which means when we go ahead and press play we'll get the

107
00:07:15.000 --> 00:07:23.990
position or rather the rotation the efforts data for this and this just go ahead and hit play.

108
00:07:24.000 --> 00:07:25.200
And there we go.

109
00:07:25.200 --> 00:07:26.360
I'm just going to pause it.

110
00:07:26.350 --> 00:07:33.300
So this log doesn't completely fill up so we can see here we've got four distinct values here we have

111
00:07:33.540 --> 00:07:40.260
a your value of zero and your value of 90 referring to both doors and you could see that in the effort

112
00:07:40.270 --> 00:07:42.450
data values as well.

113
00:07:42.450 --> 00:07:43.200
Perfect.

114
00:07:43.470 --> 00:07:49.220
So we are capable of locking things out which is going to be incredibly useful for testing purposes.

115
00:07:49.300 --> 00:07:52.350
And of course reusing the code that we've learnt already.

116
00:07:52.350 --> 00:07:54.190
Okay so let's go back over to the code.

117
00:07:54.320 --> 00:07:56.930
So let's go ahead and we need to learn.

118
00:07:57.060 --> 00:07:59.140
So we're going to do f math.

119
00:07:59.280 --> 00:08:03.260
Colon colon and then early P C I've already been there before.

120
00:08:03.370 --> 00:08:10.080
And we open up our parentheses and we can see here that there are five different function overloads.

121
00:08:10.080 --> 00:08:15.570
Now you may consider them how you constructing things without terms reserved for classes.

122
00:08:15.570 --> 00:08:22.320
But those are the five ways that we can put information into this function and I'll put my semicolon

123
00:08:22.350 --> 00:08:23.370
on the end.

124
00:08:23.370 --> 00:08:29.340
I'm just going to open up a comment here so we know we're looking for we're going to have a starting

125
00:08:29.340 --> 00:08:31.470
your that's important.

126
00:08:31.470 --> 00:08:37.680
And because we need to know where we're starting from we are going to need our targets.

127
00:08:37.680 --> 00:08:41.240
Your wish is something we already have useful.

128
00:08:41.250 --> 00:08:48.660
And then finally a value between 0 and 1 for the percentage increase open each time a value of one of

129
00:08:48.660 --> 00:08:52.560
course would be very much like lines 38 and 39.

130
00:08:52.560 --> 00:08:55.860
Well we just open the door instantaneously to our value.

131
00:08:56.700 --> 00:08:57.050
Okay.

132
00:08:57.060 --> 00:09:02.730
So before I go off and give you your challenge what I'd like to do is just run through how we're going

133
00:09:02.730 --> 00:09:04.120
to use this.

134
00:09:04.200 --> 00:09:09.720
So we we have a starting your and a target you're on the target you're was never going to change but

135
00:09:09.720 --> 00:09:12.210
this starting your is going to update.

136
00:09:12.240 --> 00:09:16.470
So we could really call it the current your instead.

137
00:09:16.520 --> 00:09:17.540
So that's an idea.

138
00:09:17.550 --> 00:09:24.800
And because this is being updated every frame games running if we're updating our current year then

139
00:09:24.800 --> 00:09:31.470
we'll get closer and closer each time to the target your by this percentage and what that should end

140
00:09:31.470 --> 00:09:36.760
up looking like is the door opens quickly to begin with and slows down towards the end.

141
00:09:37.470 --> 00:09:43.090
Okay so that's a little clue as to what's coming up in your challenge okay.

142
00:09:43.090 --> 00:09:47.710
So your challenge is to open the door and we're going to use alert to open the door.

143
00:09:47.710 --> 00:09:50.180
We've got the code pretty much ready to go you.

144
00:09:50.200 --> 00:09:55.870
There's gonna be a few extra things that you have to put in you will need to update the starting your

145
00:09:55.870 --> 00:10:02.860
value every frame as well so you can set starting your equal to whatever the lump happens to be.

146
00:10:02.860 --> 00:10:04.240
Now I do want to put this out here.

147
00:10:04.240 --> 00:10:09.220
This code will only have an effect if your door has a your value that isn't 90 degrees if it's anything

148
00:10:09.220 --> 00:10:14.480
else it will snap to 90 so it's close to 90 it will look like it's moving very little.

149
00:10:14.650 --> 00:10:17.050
We will solve this in the next lecture.

150
00:10:17.050 --> 00:10:21.760
Now this is something that you will come across time and time again during your coding when you start

151
00:10:21.760 --> 00:10:25.300
using an absolute value when you really need a relative one.

152
00:10:25.300 --> 00:10:30.370
And that's why we're going through the pain of having this particular issue so we can come up with a

153
00:10:30.370 --> 00:10:36.370
decent solution and we'll solve that in the next lecture an extra credit if you know how to solve it

154
00:10:36.400 --> 00:10:36.960
now.

155
00:10:37.010 --> 00:10:42.310
So if you really want to push about and gave that a go then do it after you've managed to do this first

156
00:10:42.310 --> 00:10:47.980
challenge an extra credit and then watch the next lecture in order to find out how we go ahead and do

157
00:10:47.980 --> 00:10:49.990
that or how I go ahead and do that.

158
00:10:50.350 --> 00:10:50.610
Okay.

159
00:10:50.620 --> 00:10:52.400
Both of video now and give that a go.

160
00:10:54.790 --> 00:10:55.990
Okay everybody Welcome back.

161
00:10:55.990 --> 00:11:02.980
Let's go ahead now hop on over interveners code and use the learned to open the door Okay everybody

162
00:11:02.980 --> 00:11:03.580
Welcome back.

163
00:11:03.580 --> 00:11:10.750
Let's go ahead now and start this door opening So we need somewhere for it to open from.

164
00:11:10.930 --> 00:11:16.810
Okay so the current your or starting your whatever you want to call it we need to define that so we

165
00:11:16.810 --> 00:11:18.390
can have a float.

166
00:11:18.490 --> 00:11:21.270
I'm going to call it the currency or for the moment.

167
00:11:21.580 --> 00:11:26.490
The current Your will be the starting your essentially at this particular point.

168
00:11:26.500 --> 00:11:27.130
So that's fine.

169
00:11:27.130 --> 00:11:28.600
What does that equal.

170
00:11:28.600 --> 00:11:39.090
Well let's go ahead and get Oana and then gets the actors rotation fortunately we've used these before

171
00:11:39.090 --> 00:11:44.510
to the top of the pile and then just the your value that should be absolutely fine.

172
00:11:44.790 --> 00:11:48.660
So we have its current your value which at the moment is zero.

173
00:11:49.190 --> 00:11:50.200
OK.

174
00:11:50.340 --> 00:11:53.640
The next thing we will need is an F rotator.

175
00:11:53.670 --> 00:11:57.520
That's the open door or something along those lines.

176
00:11:57.660 --> 00:12:08.400
And then we will change the yours so let's go ahead and say change your value of open door or in this

177
00:12:08.400 --> 00:12:11.340
case we know you'll probably be open door you.

178
00:12:11.470 --> 00:12:12.900
Okay.

179
00:12:12.960 --> 00:12:18.020
And that is where we're going to use this in order to change it all up.

180
00:12:18.330 --> 00:12:25.760
And then finally I'm going to cut and paste or indeed I could just use Alton shift that's up.

181
00:12:25.770 --> 00:12:30.910
This will be our final bits of code just here where we set the rotation to open door.

182
00:12:31.080 --> 00:12:34.800
Let's get rid of this other stuff down at the bottom here.

183
00:12:34.830 --> 00:12:35.540
Okay.

184
00:12:35.640 --> 00:12:43.350
Now you could do this challenge by changing the full f rotator and not just the your value.

185
00:12:43.350 --> 00:12:46.160
That's entirely fine if you've gone down that route.

186
00:12:46.560 --> 00:12:53.140
So let's go ahead and define this effort to called open door and we need to give it some values.

187
00:12:53.190 --> 00:12:56.320
So it's going to be 0.

188
00:12:56.360 --> 00:13:05.000
Now you could here get away with doing it like this because we're using the parentheses.

189
00:13:05.030 --> 00:13:09.680
That's that's a little hint it's what we can do with the parentheses.

190
00:13:09.680 --> 00:13:15.680
They will be implicitly converted but I'm just going to put zero point F in here and be explicit that

191
00:13:15.680 --> 00:13:17.650
they are floats.

192
00:13:17.720 --> 00:13:21.170
The next thing we need to do is change the open door.

193
00:13:21.200 --> 00:13:31.000
So if we change the open door dot your inset it's equal to this value here.

194
00:13:31.000 --> 00:13:37.100
So we're going to have our current your that we've already defined you can probably just remove this

195
00:13:37.100 --> 00:13:38.120
code here.

196
00:13:38.120 --> 00:13:38.310
Yeah.

197
00:13:38.510 --> 00:13:39.490
Excellent.

198
00:13:39.560 --> 00:13:44.590
And this valley Hamdan assets not points to for the moment.

199
00:13:44.690 --> 00:13:48.670
I don't know whether that's going to work as a semicolon missing there as well.

200
00:13:48.790 --> 00:13:49.890
Okay.

201
00:13:50.240 --> 00:13:56.180
In terms of the speed the lower this number the slower it should open so nought point two seems a great

202
00:13:56.180 --> 00:13:56.980
start.

203
00:13:57.260 --> 00:13:58.940
Okay that's looking good.

204
00:13:58.940 --> 00:14:03.160
I'm just eyeballing for any silly things that I may have missed.

205
00:14:03.200 --> 00:14:07.310
I think we're good let's go ahead and go over into real.

206
00:14:07.460 --> 00:14:09.110
Same here again from the future.

207
00:14:09.110 --> 00:14:13.850
It's actually worth noting here that when we're constructing this open door f rotates we're passing

208
00:14:13.850 --> 00:14:20.060
in the target your bet on the next line we are subsequently overwriting that your entirely so you might

209
00:14:20.060 --> 00:14:25.260
as well just be passing in 0 instead of the target your go ahead.

210
00:14:25.300 --> 00:14:33.460
Compiler code K let's go ahead and press play Oh look about the door open it was rather quick though.

211
00:14:33.490 --> 00:14:35.120
Let's stop that for the moment.

212
00:14:35.240 --> 00:14:38.480
Go back to our code and here where we've got nought point two.

213
00:14:38.480 --> 00:14:45.830
Let's change that's no point nought two for the moment save our code compile press play.

214
00:14:45.890 --> 00:14:48.770
There we go that opens so much better.

215
00:14:48.770 --> 00:14:54.250
Now you can see here in the numbers themselves that it starts very quickly and then slows down.

216
00:14:54.260 --> 00:14:56.930
I don't think it's ever going to reach 90.

217
00:14:56.930 --> 00:14:57.710
It may do.

218
00:14:57.740 --> 00:14:59.730
It's getting closer and closer.

219
00:14:59.780 --> 00:15:00.530
Now here we go.

220
00:15:00.530 --> 00:15:06.260
We've got some rounding errors here where it never ever gets to 90 but that's expected and it's not

221
00:15:06.260 --> 00:15:08.950
a particular issue okay.

222
00:15:08.950 --> 00:15:15.130
That's awesome and of course this other door here does nothing because it was already at 90 so the target

223
00:15:15.140 --> 00:15:19.030
you're starting your were the same so it had nowhere to go.

224
00:15:19.030 --> 00:15:21.610
Of course we all need to change that soon.

225
00:15:21.610 --> 00:15:25.000
In an upcoming lecture because at the moment it's no good.

226
00:15:25.000 --> 00:15:31.090
We can't have all of our doors facing the same way in our level and we'll talk about that more in the

227
00:15:31.090 --> 00:15:32.050
next lecture.

228
00:15:32.050 --> 00:15:38.200
See you soon so promised here's Sam again with a bit of an explanation about the difference between

229
00:15:38.200 --> 00:15:42.250
linear interpolation and exponential interpolation.

230
00:15:42.250 --> 00:15:49.360
So in linear interpolation what we've got is let's say this over here is our position and this over

231
00:15:49.360 --> 00:15:56.410
here is the time at which we are at a particular position or rotation as the case may be with our door.

232
00:15:56.860 --> 00:16:03.370
And we have to start off and say that so the initial position for our rotation is 10 and that is when

233
00:16:03.370 --> 00:16:05.410
we are at a particular time.

234
00:16:05.470 --> 00:16:07.030
0 for example.

235
00:16:07.030 --> 00:16:08.730
So this is 10 0.

236
00:16:08.740 --> 00:16:14.260
But our target is that within 30 seconds maybe if that's the amount of time and let's just make sure

237
00:16:14.260 --> 00:16:22.360
that we know that the time here is in seconds then we are saying that in 30 seconds potentially we want

238
00:16:22.420 --> 00:16:28.420
add or to be at a different position maybe it's going to be at rotation of 0 by the end of this time

239
00:16:29.590 --> 00:16:31.050
and that's where we want to end up.

240
00:16:31.330 --> 00:16:36.630
Now in linear interpolation we get there at a constant and fixed velocity.

241
00:16:36.760 --> 00:16:41.080
So our line goes straight from one to the other.

242
00:16:41.080 --> 00:16:42.880
There's no slowing down as you get there.

243
00:16:42.940 --> 00:16:47.250
So you come to a sudden stop when you hit that 30.

244
00:16:47.320 --> 00:16:49.310
However this isn't really what's happening.

245
00:16:49.330 --> 00:16:52.280
And we've seen this in the log messages.

246
00:16:52.330 --> 00:16:58.450
So what we're really getting is something that approaches but never quite fully reaches our goal it

247
00:16:58.450 --> 00:17:04.450
just plateaus out there at the end and this gives a nice kind of easing effect towards the end which

248
00:17:04.450 --> 00:17:08.250
is much more visually pleasant than the linear interpolation.

249
00:17:08.350 --> 00:17:12.700
But one problem with this is it's completely not a frame rate independent.

250
00:17:12.730 --> 00:17:18.760
So your door will close much faster if you have a faster computer that can run at more frames per second

251
00:17:19.150 --> 00:17:20.830
vs. a slow one.

252
00:17:20.830 --> 00:17:24.190
So how do we get the desired behavior.

253
00:17:24.190 --> 00:17:29.980
Well first of all how could we get a real linear interpolation we could use the math f love function.

254
00:17:30.070 --> 00:17:35.170
However we would have to pass instead of the current year we'd have to keep hold of the yaw which we

255
00:17:35.170 --> 00:17:42.280
started with go to the target yaw and then be able to interpolate this binary between 0 and 1 is what

256
00:17:42.280 --> 00:17:44.710
Alpha is supposed to go between 0 and 1.

257
00:17:45.310 --> 00:17:48.490
And you need to do that over the time period that you actually wanted.

258
00:17:48.520 --> 00:17:54.160
So it can be a bit complicated to do it this way fortunately unreal has our back and has a better function

259
00:17:54.160 --> 00:17:59.810
for doing this which is called F in TERP constant 2.

260
00:17:59.860 --> 00:18:04.540
Now you'll notice that this if you just straight up replace it will give you an error because it expects

261
00:18:04.600 --> 00:18:10.120
four arguments the first one being the current value great with set that second one being the target

262
00:18:10.190 --> 00:18:11.540
call we've got that too.

263
00:18:11.650 --> 00:18:13.710
The third one is delta time.

264
00:18:13.720 --> 00:18:19.020
We'll get back to that and the fourth one is the interpolation speed which we also can set.

265
00:18:19.030 --> 00:18:22.490
So Delta time is what is given into this tick component.

266
00:18:22.510 --> 00:18:28.570
And that's basically telling us how long it takes for unreal to calculate a particular frame and that

267
00:18:28.570 --> 00:18:34.000
allows us to have frame rate independent logic in our function here.

268
00:18:34.000 --> 00:18:38.920
So what we're going to do is we're just gonna pass in that delta time fairly straightforwardly and then

269
00:18:38.980 --> 00:18:40.930
we got to put in an internet speed.

270
00:18:40.930 --> 00:18:45.280
Now if you went with the same speed as we had then it would be crazy crazy slow.

271
00:18:45.640 --> 00:18:46.510
Well we actually want.

272
00:18:46.510 --> 00:18:49.240
This is going to be the speed at which it closes.

273
00:18:49.240 --> 00:18:54.220
So if I wanted to close in two seconds go from zero to 90 in two seconds then I want a speed of about

274
00:18:54.220 --> 00:19:01.300
45 which is 45 degrees per second and let's go ahead and try that out and you'll see that as that opens

275
00:19:01.420 --> 00:19:06.890
it doesn't slow down at all as it gets to fully open so there's no easing there whatsoever that is what

276
00:19:06.910 --> 00:19:09.620
linear interpolation should look like.

277
00:19:09.700 --> 00:19:11.340
What if we don't want linear interpolation.

278
00:19:11.350 --> 00:19:16.630
But once something a bit more smooth well there's an alternative to F in TERP constant too as you might

279
00:19:16.630 --> 00:19:20.360
have imagined called F interpret too simply that.

280
00:19:20.470 --> 00:19:24.700
Now here the speed needs to be a little bit lower otherwise it's going to close incredibly quickly and

281
00:19:24.700 --> 00:19:29.350
I think around two is good enough for that but we still need the delta time which shows us that its

282
00:19:29.350 --> 00:19:34.960
frame rate independent so let's try that out and sure enough if I hit play now you can see that it opens

283
00:19:34.960 --> 00:19:39.670
up relatively quickly but it eases at that last bit which looks just a little bit better.

284
00:19:40.130 --> 00:19:40.350
OK.

285
00:19:40.360 --> 00:19:44.590
Well Mike is going to be carrying on with the code that was in this video.

286
00:19:44.590 --> 00:19:49.210
But if you want to use either of those two options you should be fine to take them through the rest

287
00:19:49.330 --> 00:19:50.280
of the section.
