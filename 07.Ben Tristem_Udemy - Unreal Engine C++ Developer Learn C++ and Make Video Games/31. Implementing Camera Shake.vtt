WEBVTT
1
00:00:04.210 --> 00:00:08.300
In this lecture, we're going to be calling the functions to now use our camera shake.

2
00:00:08.350 --> 00:00:11.140
Classes that we've created in the previous lecture.

3
00:00:11.680 --> 00:00:16.900
So to do this, we'll need our POUM base and projectile based class open, like in any of the other

4
00:00:16.900 --> 00:00:20.420
effect, implementation topics that we've covered as a small challenge.

5
00:00:20.440 --> 00:00:25.630
Take the opportunity to recap on implementing the T subclass of process.

6
00:00:25.780 --> 00:00:30.200
Create a variable named headshake of type U camera shake.

7
00:00:30.310 --> 00:00:35.500
Provide this a new property to allow this to be edited anywhere and then place it in the category.

8
00:00:35.560 --> 00:00:36.330
Named Effect.

9
00:00:36.580 --> 00:00:39.400
So go ahead and post video and give this one to go.

10
00:00:40.520 --> 00:00:44.600
So hopefully nice and simple by this point, we're just going to use the T subclass of.

11
00:00:46.260 --> 00:00:50.280
The type of you camera shake and of course, named hit Shake.

12
00:00:51.860 --> 00:00:57.620
We can then take any of our existing affects you properties and pace that just above our new variable.

13
00:00:59.260 --> 00:01:05.500
So inside of our kofar, where we've been placing all of our other effects, we need to cool some functionality

14
00:01:05.500 --> 00:01:09.730
on the player controller so we can do this by using as the get world function.

15
00:01:11.020 --> 00:01:16.930
Finding the first plane controller and then from this reference, we can call the client play camera

16
00:01:16.930 --> 00:01:17.320
shake.

17
00:01:17.620 --> 00:01:19.060
So this takes a few overwrites.

18
00:01:19.090 --> 00:01:24.010
The only one that we're going to need is our camera shake Clarkes, which we've previously created.

19
00:01:24.400 --> 00:01:26.230
So that's going to be our hit shake.

20
00:01:26.610 --> 00:01:32.290
And we can then pass in things like a flight value for the strength of the impact to this defaults to

21
00:01:32.290 --> 00:01:35.410
one, which is the full strength, which is what we actually want to use.

22
00:01:35.620 --> 00:01:40.960
And we can do that by just letting this default, by not passing in any further arguments.

23
00:01:41.350 --> 00:01:45.550
So another thing to note here, what we're talking about, the strength of the camera shake.

24
00:01:45.760 --> 00:01:50.380
This is a really handy variable to have access to because if you're implementing settings to control

25
00:01:50.440 --> 00:01:56.020
the strength of a camera in something like an options menu, you could use this with a slider to effect

26
00:01:56.050 --> 00:01:58.090
the value being passed in here.

27
00:01:58.300 --> 00:02:03.490
I'm remembering that you can set that strength between zero and one to suit people's preferences on

28
00:02:03.520 --> 00:02:07.120
how much kind of intensity they can take with screen wobbling stuff.

29
00:02:08.060 --> 00:02:12.710
To finish up here, though, I'm just going to copy the head a declaration from the projectile base,

30
00:02:12.740 --> 00:02:16.850
including the property, and we'll paste this into our pwn head of file.

31
00:02:18.050 --> 00:02:20.410
And then change the name to death sheik.

32
00:02:21.820 --> 00:02:25.390
Then I'll also copy the implementation from the projecto code.

33
00:02:27.870 --> 00:02:34.080
We'll paste this into the handle destruction function in the PWN base and again change the hit shake

34
00:02:34.380 --> 00:02:35.430
to dust shake.

35
00:02:37.150 --> 00:02:38.950
So have those implemented back in the Ed..

36
00:02:39.060 --> 00:02:43.900
We're going to compile to check our changes and take the familiar steps to implement.

37
00:02:43.920 --> 00:02:49.830
The camera hits effects into that slot for both the turret and the tank classes.

38
00:02:49.980 --> 00:02:52.110
And then also for the projectile class.

39
00:02:52.440 --> 00:02:55.230
So in both the turret and tank classes are all set.

40
00:02:55.260 --> 00:02:59.610
The death check property to be the BP underscore camp shake explode.

41
00:02:59.640 --> 00:03:02.310
So this is gonna be the bigger, more intense explosion.

42
00:03:02.760 --> 00:03:08.610
Camera shake when something larger like the porn classes get destroyed than in the projecto class,

43
00:03:08.670 --> 00:03:13.760
offset the headshake property to be our BP underscore cam Schaik hit.

44
00:03:14.130 --> 00:03:18.720
So this will be the kind of less intense one, especially because this will be playing a lot more often

45
00:03:18.730 --> 00:03:20.670
based on the fire rates and things.

46
00:03:21.060 --> 00:03:26.010
So after a couple of playtest, we can see all of the correct camera shake effects are being played

47
00:03:26.070 --> 00:03:27.270
at the correct times.

48
00:03:27.660 --> 00:03:32.430
So another challenge for you is to just play around with the variables in the blueprint.

49
00:03:32.430 --> 00:03:37.500
Camera shake classes just get a better understanding of which properties control different aspects of

50
00:03:37.500 --> 00:03:42.300
the effects and even dive in and see what's a field of view and rotation offsets can apply as well.

51
00:03:42.610 --> 00:03:46.320
And I think you'll end up finding some pretty cool uses with this class.
