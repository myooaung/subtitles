1
00:00:04,150 --> 00:00:05,290
The end result was a lecture.

2
00:00:05,440 --> 00:00:09,790
Well we'll be able to move around our scene we'll be able to press and really saw a grabber.

3
00:00:09,790 --> 00:00:14,540
But when we actually intersects with an object we'll be able to pick up.

4
00:00:14,680 --> 00:00:19,060
We don't get a load of line traces hit filling up our log anymore.

5
00:00:19,060 --> 00:00:22,690
It only happens when we press our grabber.

6
00:00:22,690 --> 00:00:25,440
And only when it's within reach as well.

7
00:00:25,450 --> 00:00:31,150
So the cone as well is going to be quite exciting because we're getting so close and after we've done

8
00:00:31,150 --> 00:00:36,550
this we can actually attach the physics handle that we want the physics handle component sorry and actually

9
00:00:36,550 --> 00:00:38,800
pick up these objects.

10
00:00:38,800 --> 00:00:39,850
Awesome.

11
00:00:39,850 --> 00:00:45,420
See you in that Hello everybody and welcome to reducing code in hot loops.

12
00:00:45,420 --> 00:00:49,660
Now this might be a bit of a long one we're going to dive in to some refactoring.

13
00:00:49,720 --> 00:00:55,620
We're going to dive into the disciplined art of refactoring now a hot loop is code that calls often

14
00:00:55,980 --> 00:01:02,100
so our tech component is a good example that updates every single frame so any bit of code that you

15
00:01:02,100 --> 00:01:07,960
put in there is going to execute on every frame and if you're not careful that can slow your game down.

16
00:01:08,010 --> 00:01:10,840
Beware of code that you know will be called a lot.

17
00:01:10,920 --> 00:01:12,630
Does it need to be called every frame.

18
00:01:12,630 --> 00:01:16,310
These are things to think about even though the game appears to be working.

19
00:01:16,320 --> 00:01:21,720
It's good to be aware of this and you really want to make it clear what happens every take.

20
00:01:21,720 --> 00:01:27,390
So when we have a look at what's in there it should be super clear what is actually happening.

21
00:01:27,510 --> 00:01:33,540
So we're going to refactor our code not only for speed but also get it ready for the physics handle.

22
00:01:33,630 --> 00:01:39,870
So by the end of it the game will pretty much be the same as it was before just in a much better position

23
00:01:40,110 --> 00:01:41,350
ready for our physics handle.

24
00:01:41,700 --> 00:01:46,620
And that's the basis of refactoring so dive on over into the s code.

25
00:01:46,670 --> 00:01:47,010
OK.

26
00:01:47,040 --> 00:01:48,590
So let's get ready to refactor this.

27
00:01:48,600 --> 00:01:51,790
And as always I think we should start in the header file.

28
00:01:51,870 --> 00:01:57,320
Now the header file should be quite clear what's going on in the implementation when we read this.

29
00:01:57,330 --> 00:02:02,130
We may have to add additional comments but let's go through it bit by bit.

30
00:02:02,130 --> 00:02:08,010
So this public section here of our header file this bit here and this bit further down here.

31
00:02:08,070 --> 00:02:12,570
In fact we could tidy this up just a little if we have public here in public here.

32
00:02:12,600 --> 00:02:18,150
It can get a bit confusing so let's go ahead and move this protected area just beneath and I'm going

33
00:02:18,150 --> 00:02:22,500
to need a little bit of extra whitespace there just to separate them out.

34
00:02:22,590 --> 00:02:27,210
So that's nice and clear that these two items are in the public domain.

35
00:02:27,270 --> 00:02:34,710
That's how a grab and release functions would also be better put into the public area so you could consider

36
00:02:34,740 --> 00:02:37,340
that we've got an input controller somewhere else.

37
00:02:37,400 --> 00:02:37,820
That's hard.

38
00:02:37,830 --> 00:02:43,290
Grab a class registers with and then it would be the job of the player controller of the input controller

39
00:02:43,680 --> 00:02:47,470
to call the grabber and say hey grabber we need to pick something up.

40
00:02:47,580 --> 00:02:52,950
But for the moment we're going to keep it all nice and neat inside the grabber class itself.

41
00:02:52,950 --> 00:02:57,170
And it basically comes down to an ideology sometimes it's better to separate things out.

42
00:02:57,360 --> 00:03:03,600
But whilst our code is nice and simple we don't want to make it too complicated at this early stage.

43
00:03:03,600 --> 00:03:10,200
So the API itself is essentially nothing there is nothing that we can do from the outside the reach

44
00:03:10,320 --> 00:03:13,830
and the grab and release are all controlled from within the class itself.

45
00:03:14,400 --> 00:03:16,860
So I'm happy with everything here at the moment.

46
00:03:16,890 --> 00:03:22,050
Let's go over into the implementation will save up first and go over into the implementation and take

47
00:03:22,050 --> 00:03:22,470
a look here.

48
00:03:22,470 --> 00:03:24,750
Let's go all the way to the top.

49
00:03:24,930 --> 00:03:27,620
OK so let's have a look at the constructor.

50
00:03:27,620 --> 00:03:33,770
So this area at the top here we can delete lines 17 and 16 they're just dead white space.

51
00:03:33,860 --> 00:03:35,600
It does need to take every frame.

52
00:03:35,600 --> 00:03:37,310
That's absolutely fine.

53
00:03:37,430 --> 00:03:39,140
That's an extra bit of whitespace here.

54
00:03:39,140 --> 00:03:44,180
So refactoring is not only reorganizing your code but also just cleaning in SA.

55
00:03:44,190 --> 00:03:49,550
I'm sure I've forgotten something as we go down here for I know we have.

56
00:03:49,640 --> 00:03:51,890
So I need to tidy that up as well as we go.

57
00:03:52,350 --> 00:03:52,590
OK.

58
00:03:52,610 --> 00:03:58,880
So let's go down to the begin play now the moment we've gotten rid of the grabber reporting for duty.

59
00:03:58,880 --> 00:03:59,910
That's fine.

60
00:03:59,910 --> 00:04:03,720
And so the first thing we're doing here is checking for the physics handle component.

61
00:04:03,830 --> 00:04:10,190
So we have this lump of code here from line 24 or rather 23 to 32.

62
00:04:10,190 --> 00:04:13,410
That can be pulled out into its own function.

63
00:04:13,490 --> 00:04:15,350
So it's a lot easier to read.

64
00:04:15,920 --> 00:04:18,590
So what would we call this function before we go move the code.

65
00:04:18,590 --> 00:04:20,070
What would you call it.

66
00:04:20,120 --> 00:04:23,110
I would say it was to find the physics handle.

67
00:04:23,120 --> 00:04:26,620
So let's call it that find physics handle.

68
00:04:28,160 --> 00:04:32,630
So we would call that function and obviously it doesn't exist just yet.

69
00:04:32,660 --> 00:04:36,650
Now I am going to just go ahead and grab that slot there.

70
00:04:36,760 --> 00:04:42,800
Go back into our header file and this is going to be a the next function that we need to declare.

71
00:04:42,830 --> 00:04:47,770
So find physics handle it's not going to return anything it's just going to run a set of code.

72
00:04:47,830 --> 00:04:56,420
Okay then for readability down here we would have void you grabber and the scope operator find physics

73
00:04:56,420 --> 00:05:02,570
handle we don't have the semicolon on the end we open up our curly braces and that is we're going to

74
00:05:02,570 --> 00:05:08,150
put this lump of code I'm going to use ult and the down arrow to just move it to the appropriate location

75
00:05:08,670 --> 00:05:13,520
and then there's going to probably be a tiny bit of whitespace to clear up either side.

76
00:05:13,520 --> 00:05:15,150
Oh did I just move the.

77
00:05:15,200 --> 00:05:17,660
Yes I just moved the cool down there as well.

78
00:05:17,660 --> 00:05:23,360
So that's a lot easier to read find physics handle we don't really need to know what that's doing when

79
00:05:23,360 --> 00:05:27,620
we're reading the code it should just be nice and clear that Oh it goes and finds the physics handle

80
00:05:28,100 --> 00:05:33,980
how that's implemented of course you can come down and look if you want but if it does what it needs

81
00:05:33,980 --> 00:05:40,340
to do that's fine we can move on now at this point in time we've moved code around I'm confident that

82
00:05:40,340 --> 00:05:46,670
it would still work however I would strongly suggest every time you make a refactor especially when

83
00:05:46,670 --> 00:05:51,860
you go ahead and do what I've just done with creating a new function that we save the file because it

84
00:05:51,860 --> 00:05:57,200
should be working at the moment touch wood and then go over to unreal and make sure the behavior is

85
00:05:57,200 --> 00:05:59,020
still what you'd expect it to be.

86
00:05:59,040 --> 00:06:01,570
Okay so let's compile.

87
00:06:01,570 --> 00:06:01,800
Okay.

88
00:06:01,820 --> 00:06:05,810
So with the compile complete I'm going to open up the output log first of all I'm going to clear it

89
00:06:05,810 --> 00:06:12,710
so I can see what's going on and then I'm going to press play sphere.

90
00:06:12,760 --> 00:06:14,290
Old book of how.

91
00:06:14,320 --> 00:06:16,600
We've got everything working here.

92
00:06:16,750 --> 00:06:21,290
Oh but we don't have our message coming through okay.

93
00:06:21,300 --> 00:06:23,140
Let's go back into the project now.

94
00:06:23,160 --> 00:06:24,330
I think I'm being silly.

95
00:06:24,330 --> 00:06:29,970
I think I'm looking for a bit of code because we did say if the ink put component.

96
00:06:30,120 --> 00:06:31,830
Yes maybe it wasn't attached.

97
00:06:31,830 --> 00:06:37,020
I've removed the business as input component not found I forgot I did that whoops because we didn't

98
00:06:37,020 --> 00:06:37,530
need it.

99
00:06:37,530 --> 00:06:39,030
That's absolutely fine.

100
00:06:39,030 --> 00:06:44,160
As the game is working as I'd expect and the next thing to look at is this input component.

101
00:06:44,520 --> 00:06:47,150
Okay so let's have refactor this out as well.

102
00:06:47,160 --> 00:06:49,670
Let's think about what we're going to call it first.

103
00:06:49,740 --> 00:06:55,260
This is going to be something along the lines of set up the input component so set up.

104
00:06:55,320 --> 00:07:01,260
I don't need the word the setup inputs component so it's nice and clear what's going on.

105
00:07:01,260 --> 00:07:03,140
Let's go over into our head to file.

106
00:07:03,140 --> 00:07:04,430
I'm going to copy that.

107
00:07:04,440 --> 00:07:06,120
So I've got to exact.

108
00:07:06,120 --> 00:07:12,300
So here we are going to save it it's void it's not returning anything and set up input component.

109
00:07:12,330 --> 00:07:17,030
Okay so it does set up input component require a comment against it.

110
00:07:17,100 --> 00:07:19,260
I think it's quite clear as to what this is doing.

111
00:07:19,260 --> 00:07:21,490
Let's go through this just once.

112
00:07:21,630 --> 00:07:24,340
So grabbing Yep releasing.

113
00:07:24,510 --> 00:07:26,950
Yeah finding the physics handle.

114
00:07:26,940 --> 00:07:29,910
Yeah set up input component.

115
00:07:29,910 --> 00:07:32,100
I think that's very clear what they're doing.

116
00:07:32,100 --> 00:07:37,140
If there was any ambiguity or if there was a special case of something I'd certainly introduce a comment

117
00:07:37,140 --> 00:07:41,160
or two there but that is pretty much self documenting.

118
00:07:41,160 --> 00:07:44,500
Let's just save that and go back over into our implementation.

119
00:07:44,560 --> 00:07:48,410
Now's the chance that it's underneath the begin play.

120
00:07:48,510 --> 00:07:51,400
We can start defining some stuff so let's go ahead.

121
00:07:51,480 --> 00:07:54,250
Void because it's not returning anything as normal.

122
00:07:54,290 --> 00:08:03,210
Is gonna be the U grabber scope operator setup in input component and let's go ahead and grab this bits

123
00:08:03,210 --> 00:08:04,210
of code here.

124
00:08:04,230 --> 00:08:07,050
Line 26 to 31 in my case.

125
00:08:07,050 --> 00:08:09,620
Move it down to the appropriate location.

126
00:08:09,660 --> 00:08:17,640
Okay so now begin play is so simple is going to find the physics handle and set up the input component.

127
00:08:17,970 --> 00:08:20,130
That's exactly what we want to see.

128
00:08:20,430 --> 00:08:21,810
And of course now we've done that.

129
00:08:21,810 --> 00:08:23,750
Let's go over to unreal.

130
00:08:23,830 --> 00:08:26,650
I'm going to practice what I preach here.

131
00:08:26,790 --> 00:08:27,720
Hit compile.

132
00:08:27,720 --> 00:08:28,860
Make sure your game works.

133
00:08:28,860 --> 00:08:31,210
You've just moved around a chunk of code.

134
00:08:31,260 --> 00:08:36,900
Let's make sure we've not moved a semicolon somewhere or forgotten one or something.

135
00:08:36,900 --> 00:08:39,130
I am on the wrong side of some brackets.

136
00:08:39,150 --> 00:08:44,880
These are all things that if you did a load of code changes all of a sudden you won't know what the

137
00:08:44,880 --> 00:08:47,360
mistake was that you've made so that is brilliant.

138
00:08:47,360 --> 00:08:50,320
That's exactly what I want to see.

139
00:08:50,430 --> 00:08:51,600
The game is working.

140
00:08:51,660 --> 00:08:53,970
We can even bring open the output log.

141
00:08:54,090 --> 00:08:59,000
So when we press play we can see everything is still working as we would expect it to.

142
00:08:59,010 --> 00:09:01,320
Nice let us continue.

143
00:09:01,320 --> 00:09:06,630
Now some of you may have experienced this already but MVS code you have these little dropdown arrows

144
00:09:06,630 --> 00:09:12,120
that they are invisible unless you move your cursor towards the actual numbers.

145
00:09:12,120 --> 00:09:14,420
The line numbers down the left hand side.

146
00:09:14,490 --> 00:09:21,990
Now what you can do if you need to is make things a lot easier to read and you can squish them all up

147
00:09:22,050 --> 00:09:23,070
into one another.

148
00:09:23,070 --> 00:09:27,250
So you know this is going to set up the income input component we can leave it there.

149
00:09:27,270 --> 00:09:31,800
Physics handle if we're happy with the code in there we can just bring it up like that and it makes

150
00:09:31,800 --> 00:09:36,780
your code a lot easier to step through and then you just have to reveal it if you need to.

151
00:09:36,780 --> 00:09:41,790
Now currently I leave everything open because it's very easy for you guys not to notice.

152
00:09:41,820 --> 00:09:45,290
I've got one shut and wonder where the bits of code is.

153
00:09:45,390 --> 00:09:51,010
If it's all there when I'm typing through etc. You can see what else is around it.

154
00:09:52,890 --> 00:09:58,740
And one of the things that you can do here for instance as well is if this needs a bit more explaining

155
00:09:58,740 --> 00:10:01,070
like the check for physics handle component.

156
00:10:01,740 --> 00:10:05,960
I mean it is pretty self documented but it's not mentioning a component up there.

157
00:10:06,030 --> 00:10:08,550
What we can do is go ahead line 39 here.

158
00:10:08,580 --> 00:10:15,750
If we move it just above our function then when we minimize it we actually see what it's about as well.

159
00:10:15,750 --> 00:10:20,170
And of course because that's no longer in line that can come down like that.

160
00:10:20,180 --> 00:10:22,820
Okay so let's move down here to grab.

161
00:10:23,100 --> 00:10:25,980
Now grab may or may not be the right word.

162
00:10:25,980 --> 00:10:29,880
Don't be scared to change the name of things if necessary.

163
00:10:29,880 --> 00:10:32,050
In this particular case I think we'll stick with grab.

164
00:10:32,050 --> 00:10:33,890
It could be attempted grab.

165
00:10:33,930 --> 00:10:38,580
It could be or you might have a completely different name for it but I'm going to leave it as grab for

166
00:10:38,580 --> 00:10:39,540
the moment.

167
00:10:39,930 --> 00:10:44,430
However the grep function is not just going to say that we pressed the right key it's going to do something

168
00:10:44,430 --> 00:10:47,750
else so let's let's pseudocode what we need to do next.

169
00:10:47,780 --> 00:10:56,110
We go going to try and reach any actors we have a physics body collision channels set.

170
00:10:56,610 --> 00:11:00,660
That's basically what we're looking for after we've done that.

171
00:11:00,660 --> 00:11:02,010
What's the next thing we're going to do.

172
00:11:03,000 --> 00:11:13,440
Well if we hit something then attach the physics handle and then we could say to do attach a physics

173
00:11:13,440 --> 00:11:14,010
handle.

174
00:11:14,310 --> 00:11:14,610
Okay.

175
00:11:14,640 --> 00:11:17,710
And when we go down to release it's going to be very similar.

176
00:11:17,820 --> 00:11:18,800
We'll still lock out.

177
00:11:18,800 --> 00:11:22,230
That's the grabber has been released so we can see that.

178
00:11:22,260 --> 00:11:28,140
And so here another to do will be to remove.

179
00:11:28,140 --> 00:11:33,840
Release the physics handle literally letting it go which is great.

180
00:11:33,900 --> 00:11:37,910
Now we don't know how to do that yet but we'll get there okay.

181
00:11:37,920 --> 00:11:41,360
The next thing that we're getting into now is the tic component.

182
00:11:41,670 --> 00:11:46,480
So this is our hot loop everything that's within this tic component function.

183
00:11:46,680 --> 00:11:49,430
Well it's going to be run on every single frame.

184
00:11:49,440 --> 00:11:53,080
So we better make sure that is exactly what we want to do.

185
00:11:53,100 --> 00:11:55,620
So we've actually got quite a bit going on in here.

186
00:11:55,650 --> 00:12:02,010
But if we break it down to what the tic functions should really be doing what we want to do here is

187
00:12:02,010 --> 00:12:10,940
save that if the physics handle the thing that we can that we can attach to an object is attached then

188
00:12:10,940 --> 00:12:16,890
we want to basically go ahead and move the object we are holding.

189
00:12:17,210 --> 00:12:23,210
So what does the rest of this code do and can we take it out of the tech component.

190
00:12:23,210 --> 00:12:26,230
Well a redundant question because yes we can.

191
00:12:26,330 --> 00:12:27,640
Now it's entirely up to you.

192
00:12:27,640 --> 00:12:28,580
Let's go through here.

193
00:12:29,120 --> 00:12:32,240
So let's go through the code first and then decide where we're going to put things.

194
00:12:32,330 --> 00:12:35,600
So the first thing we're doing here is getting the player's viewpoint.

195
00:12:35,600 --> 00:12:38,240
Then we draw a line from the player showing the reach.

196
00:12:38,240 --> 00:12:45,530
Now this is a nice sort of debug function but I think we're happy enough now that this is not adding

197
00:12:45,530 --> 00:12:46,510
to our code.

198
00:12:46,550 --> 00:12:52,480
So now you can decide to keep it in anger and make my code simpler by removing it.

199
00:12:52,490 --> 00:12:56,780
It was a great way of visualizing what we were doing with our recast.

200
00:12:56,900 --> 00:12:59,720
However we don't actually need it currently.

201
00:12:59,720 --> 00:13:04,640
Now of course you can use that sort of thing later on to project something into your world if you need

202
00:13:04,640 --> 00:13:05,810
to.

203
00:13:05,810 --> 00:13:07,910
And then we have our raid cast out.

204
00:13:07,910 --> 00:13:11,990
This is the real meat of it rather than the projection earlier.

205
00:13:12,380 --> 00:13:14,460
And then we see what it hits.

206
00:13:14,510 --> 00:13:17,280
So can we fact refactor some of this out.

207
00:13:17,300 --> 00:13:22,090
Well if we have a look at the grab itself what happens when we grab.

208
00:13:22,100 --> 00:13:29,210
Well when we press that button that would be the time to get the player's location the rotation and

209
00:13:29,210 --> 00:13:30,650
recasting out into the world.

210
00:13:30,650 --> 00:13:32,540
We don't need to do it on every frame.

211
00:13:32,540 --> 00:13:36,260
We just need to do it when the player wants to pick something up.

212
00:13:36,260 --> 00:13:41,720
We need to see how are we close enough to pick something up so we will recast out at that point.

213
00:13:41,720 --> 00:13:50,030
So another to do up here is to only recast when he is pressed.

214
00:13:50,030 --> 00:13:56,240
I think I think that's fine for the moment and we can combine that with the line below only recast and

215
00:13:56,240 --> 00:13:59,290
see if we reach okay.

216
00:13:59,300 --> 00:14:03,790
So the next thing that we need to do is work out what's going on down here.

217
00:14:03,860 --> 00:14:07,130
Now we can break it up into small chunks into large chunks.

218
00:14:07,130 --> 00:14:12,520
It really doesn't matter but it doesn't want to be running on every single frame.

219
00:14:12,530 --> 00:14:16,240
What we need is it's a run whenever the buttons pushed which is up here.

220
00:14:16,250 --> 00:14:18,120
If a physics handle is attached move the thing.

221
00:14:18,140 --> 00:14:19,700
Get the player's viewpoint.

222
00:14:19,730 --> 00:14:21,680
So we really want here.

223
00:14:21,800 --> 00:14:24,770
The first physics body within reach.

224
00:14:24,770 --> 00:14:29,630
So when we Ray cast out what's the first one so we know that it goes and get something.

225
00:14:29,630 --> 00:14:33,470
So get first physics body because that's what we're looking at.

226
00:14:33,680 --> 00:14:39,080
And then in reach is a good enough name for me because it says exactly what we're looking for.

227
00:14:39,080 --> 00:14:43,960
And that pretty much sums up what the rest of the code down here ends up doing.

228
00:14:43,970 --> 00:14:46,460
But it does return something as well.

229
00:14:46,460 --> 00:14:48,710
So it's not going to be a void.

230
00:14:48,740 --> 00:14:53,790
Now before we go ahead and define it let's go into the header file and declare it.

231
00:14:53,810 --> 00:14:56,120
So this one's going to be explained.

232
00:14:56,120 --> 00:14:58,490
So this is going to return.

233
00:14:58,740 --> 00:15:02,630
Now what is it going to return that's bounce back over here for a second.

234
00:15:02,780 --> 00:15:03,950
See what it hits.

235
00:15:03,950 --> 00:15:08,860
Well listen I had to hit get active so that's how we're identifying it.

236
00:15:08,860 --> 00:15:12,340
So is this how we get the F hit results.

237
00:15:12,380 --> 00:15:20,210
So that's what it's going to return is going to return the first actor within reach with a physics body

238
00:15:20,780 --> 00:15:22,300
with a physics body.

239
00:15:22,310 --> 00:15:26,480
So this is going to be an F hits results.

240
00:15:26,480 --> 00:15:27,890
Is it going to come up.

241
00:15:27,890 --> 00:15:29,480
There we go to go up.

242
00:15:29,670 --> 00:15:37,940
So if it results is its type that it returns and then get first physics body in reach and we don't want

243
00:15:37,940 --> 00:15:43,940
it changing what it ends up being hit by in that one frame that we're assessing it.

244
00:15:43,940 --> 00:15:46,350
So it's going to be a contest function.

245
00:15:46,680 --> 00:15:46,960
OK.

246
00:15:46,970 --> 00:15:53,810
So let's go back over into our implementation now we can go ahead and say it's an F hit results that

247
00:15:53,810 --> 00:15:59,310
comes up of course and then we're going to go you grab it because we need to fully qualify it.

248
00:15:59,630 --> 00:16:06,720
The scope operator and then we're going to get the first physics body in reach.

249
00:16:06,800 --> 00:16:07,100
OK.

250
00:16:07,130 --> 00:16:15,970
So let's go ahead up here and copy from the player's viewpoint all the way down to locking out test.

251
00:16:16,010 --> 00:16:18,330
Well I'm going to cut that and paste it down here.

252
00:16:18,500 --> 00:16:20,990
Could also use the ult and arrow keys.

253
00:16:20,990 --> 00:16:24,370
So now the tic component reads really easily.

254
00:16:24,440 --> 00:16:27,130
Now line trace and has a red squiggle over it.

255
00:16:27,380 --> 00:16:29,990
And I've noticed that I can't see it anywhere.

256
00:16:30,020 --> 00:16:36,860
So when I was moving out the debug line trace I believe I inadvertently deleted a line of code I want.

257
00:16:36,860 --> 00:16:41,410
Now I don't want to undo everything and go all the way back.

258
00:16:41,420 --> 00:16:46,930
However because I use source control what I can do is go to get hub.

259
00:16:46,940 --> 00:16:53,090
This is having so useful thing about source control and I've gone to the commit that I made in the last

260
00:16:53,090 --> 00:16:55,220
lecture accesses a memory layout.

261
00:16:55,430 --> 00:16:58,240
And if we come down I can search for line trace.

262
00:16:58,250 --> 00:16:59,300
There it is.

263
00:16:59,420 --> 00:17:01,810
I can get line seventy one there.

264
00:17:01,820 --> 00:17:07,530
I can even click and copy the line and then I can bring it into the appropriate location again wishes

265
00:17:07,600 --> 00:17:08,400
here.

266
00:17:08,450 --> 00:17:11,260
Now if I save that that's to sort out line trace.

267
00:17:11,260 --> 00:17:14,210
And now there's another issue here.

268
00:17:14,250 --> 00:17:15,610
We've got a red squiggle under here.

269
00:17:15,630 --> 00:17:21,240
You remember if you have a contact function its signature has to be the same in both places.

270
00:17:21,240 --> 00:17:22,910
So we can sort that's out.

271
00:17:23,010 --> 00:17:31,320
And we've asked it to return an F hit results which is fine so we can return hit.

272
00:17:31,350 --> 00:17:39,060
I don't think we need logging out to test anymore so the final thing here is to return hit and cross

273
00:17:39,060 --> 00:17:44,570
our fingers because we've just moved a big chunk of code and I inadvertently deleted something.

274
00:17:45,240 --> 00:17:47,190
So both files are saved.

275
00:17:47,190 --> 00:17:48,820
Let's go over into real.

276
00:17:48,840 --> 00:17:53,800
Go ahead and hit compile cross our fingers.

277
00:17:53,810 --> 00:17:56,390
No I'm sure we'll be absolutely fine here.

278
00:17:56,430 --> 00:17:57,860
Compile is complete.

279
00:17:57,870 --> 00:17:59,860
Let's go ahead press play.

280
00:18:00,000 --> 00:18:01,670
Now we won't have our green line anymore.

281
00:18:01,670 --> 00:18:07,070
That's absolutely fine I'm going to escape after that for the moment go to the output log and press

282
00:18:07,130 --> 00:18:08,720
play again.

283
00:18:08,720 --> 00:18:14,760
Now if we look around our scene line traces hit a cube hit the cone.

284
00:18:14,760 --> 00:18:15,970
That's fine.

285
00:18:15,970 --> 00:18:19,110
And I can press and release my grabber.

286
00:18:19,110 --> 00:18:19,560
Excellent.

287
00:18:19,560 --> 00:18:24,420
And when we go over here our doors are opening and shutting so everything appears to be working exactly

288
00:18:24,420 --> 00:18:25,950
how it did before.

289
00:18:25,950 --> 00:18:27,310
Phew.

290
00:18:27,640 --> 00:18:28,010
Okay.

291
00:18:28,050 --> 00:18:33,990
So a few final things here let's go back to our code and let's go to where we are grabbing.

292
00:18:33,990 --> 00:18:35,950
So where are we grabbing up here.

293
00:18:36,090 --> 00:18:43,650
So only Ray when the key is pressed so this is where we can go ahead and call our guests first physics

294
00:18:43,650 --> 00:18:49,380
body in reach because that's exactly what we want to do and we go ahead and grab something Let's try

295
00:18:49,380 --> 00:18:52,630
that compiles complete let's press play.

296
00:18:52,720 --> 00:18:56,350
Okay grab a pressed and the line traces hit.

297
00:18:56,400 --> 00:19:02,100
Now that's happening all the time still which suggests there's still something within our tick function.

298
00:19:02,100 --> 00:19:05,720
So get first physics body and reach while it's doing that every time.

299
00:19:05,720 --> 00:19:10,560
So this time we can turn that off because we've moved up to grab.

300
00:19:10,560 --> 00:19:12,620
Which is a much better place for it.

301
00:19:12,780 --> 00:19:22,120
Now if we compile and press play what we should find is that grab a release and press and if we grab

302
00:19:22,270 --> 00:19:23,180
it's hit the cube.

303
00:19:23,190 --> 00:19:26,400
Two excellent and it's hit the cone.

304
00:19:26,390 --> 00:19:27,920
Two even better.

305
00:19:27,950 --> 00:19:30,080
That's exactly what we want it do.

306
00:19:30,080 --> 00:19:31,400
So it's hitting nothing.

307
00:19:32,150 --> 00:19:33,430
It's hitting the cube.

308
00:19:33,470 --> 00:19:34,940
It sits in the cone.

309
00:19:34,940 --> 00:19:35,750
Excellent.

310
00:19:35,750 --> 00:19:38,350
It's coming together really well now.

311
00:19:38,390 --> 00:19:38,870
Okay brilliant.

312
00:19:38,930 --> 00:19:41,690
That's the exact behavior that we want to see.

313
00:19:41,690 --> 00:19:48,140
So we've now got a much better code base here to continue working from the only real messy thing left

314
00:19:48,200 --> 00:19:50,780
is this big lump of code at the bottom.

315
00:19:50,780 --> 00:19:53,280
It's a function that seems to do multiple things.

316
00:19:53,360 --> 00:19:58,780
So we may end up breaking it up a little bit more when it comes to the physics handler components.

317
00:19:58,850 --> 00:20:00,810
So we've come to the end of this lecture.

318
00:20:00,890 --> 00:20:07,490
Now we have pretty much made no progress when it comes to functionality within the game.

319
00:20:07,520 --> 00:20:12,830
However with the optimization and the much cleaner code we can build upon this so much better than if

320
00:20:12,830 --> 00:20:14,750
we had left it how it was.

321
00:20:14,750 --> 00:20:17,210
And that's the power of doing some refactoring.

322
00:20:17,210 --> 00:20:20,300
So that's it for this lecture and I'll see you all in the next one.
