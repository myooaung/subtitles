1
00:00:04,560 --> 00:00:09,570
Hello and welcome in this lecture, we're gonna be looking at spawning a muzzle flash so that when we

2
00:00:09,570 --> 00:00:13,260
hit the trigger, we get a particle effect.

3
00:00:13,620 --> 00:00:15,790
So let's dive in and see how we can do this.

4
00:00:15,810 --> 00:00:16,650
From C++.

5
00:00:18,290 --> 00:00:22,700
K. So we want some particle effects to spawn from the muzzle of a gun.

6
00:00:23,240 --> 00:00:25,190
What's gonna be the best way to do this?

7
00:00:25,280 --> 00:00:29,600
We are going to, first of all, have a look at what particle effects we've got available here.

8
00:00:30,080 --> 00:00:31,910
I've taken the ones from the shoot a game.

9
00:00:31,910 --> 00:00:35,390
Obviously, you can use any particle effects that you want.

10
00:00:35,840 --> 00:00:37,840
You can find them on the asset store.

11
00:00:37,850 --> 00:00:43,520
You can take them from example projects like I have ones go into the effects session asset packs, shoot

12
00:00:43,520 --> 00:00:48,140
game effects and then look at particle systems, weapons, assault rifle.

13
00:00:48,590 --> 00:00:51,290
And I'm looking for the muzzle one, at least initially.

14
00:00:51,320 --> 00:00:57,590
And we want this assault rifle, M.F. and you should be able to see it's going to take a little bit

15
00:00:57,590 --> 00:01:00,200
of time to get the shaders in here compiling.

16
00:01:00,230 --> 00:01:03,470
But this is what essentially the muzzle flash looks like.

17
00:01:03,800 --> 00:01:04,830
It looks like a muzzle flash.

18
00:01:04,850 --> 00:01:11,480
So that's what we're going to be using and we're going to try and spawn this in C++ when we have the

19
00:01:11,480 --> 00:01:12,260
trigger pulled.

20
00:01:12,350 --> 00:01:15,320
So let's go over into our gun.

21
00:01:15,830 --> 00:01:20,300
I'm gonna go to the guns GPP and instead of this log message of having been shot.

22
00:01:20,330 --> 00:01:21,620
Not particularly useful.

23
00:01:21,980 --> 00:01:24,650
We want to spawn a particle effect.

24
00:01:25,270 --> 00:01:29,540
And to do this, we're going to be using a function from the gameplay static's dot h.

25
00:01:29,560 --> 00:01:33,250
So let's go over to the gameplay static's dot h and have a look in here.

26
00:01:33,260 --> 00:01:42,050
We want to spawn an emitter calling it spawner and emitter and you will see if we have a look at this.

27
00:01:42,140 --> 00:01:45,670
That's what it is taking in is a world context object.

28
00:01:46,130 --> 00:01:52,070
It's taking in a particle system which is the emitter template, as they're calling it, the location

29
00:01:52,070 --> 00:01:54,110
rotation scale, blah, blah, blah, blah, blah.

30
00:01:54,650 --> 00:02:03,920
Or alternatively, I think you can make it attached so we can do a spawn emitter attached.

31
00:02:04,250 --> 00:02:10,550
And this is going to try and attach it to a component so we can see that this takes in a scene component

32
00:02:10,550 --> 00:02:11,810
to attach to.

33
00:02:12,140 --> 00:02:14,250
Now, in this case, I think this is what we wanted.

34
00:02:14,270 --> 00:02:21,230
Depends on the particle effect in question, but some particle effects are going to keep spawning particles

35
00:02:21,230 --> 00:02:23,080
for a duration of time.

36
00:02:23,090 --> 00:02:28,240
So you want those particles to keep coming out of the muzzle of the gun as the gun moves.

37
00:02:28,250 --> 00:02:32,540
They might be creating some smoke, some stuff like that if you move your gun while you're shooting.

38
00:02:32,900 --> 00:02:35,300
You want the particle effect to move with it.

39
00:02:36,050 --> 00:02:37,250
So that's what we're going to be using.

40
00:02:37,580 --> 00:02:40,120
Is this spawn emitter attached?

41
00:02:40,700 --> 00:02:48,170
And as it says here, it's going to take in the emitter template and the scene components that we need

42
00:02:48,200 --> 00:02:49,490
to attach to.

43
00:02:49,490 --> 00:02:51,530
So those are the things that we most are going to be needing.

44
00:02:51,920 --> 00:02:56,240
It also has this attach point name that's gonna be a socket.

45
00:02:56,360 --> 00:03:02,510
So that's actually quite handy for us to know that we can attach it directly to the muzzle of a gun.

46
00:03:02,510 --> 00:03:04,120
We don't need any kind of offsets.

47
00:03:04,190 --> 00:03:08,390
So let's have a look at that if I go and open up my BP rifle.

48
00:03:08,450 --> 00:03:11,510
We already know we've mentioned that this is a skeletal mesh.

49
00:03:11,870 --> 00:03:18,350
So I'm going to go and find that rifle in the content browser and open up the rifle mesh.

50
00:03:19,340 --> 00:03:24,950
And what you'll see over in the left, if you have the skeleton tree pain visible, then you're going

51
00:03:24,950 --> 00:03:27,230
to see that we've got this rifle roots.

52
00:03:27,290 --> 00:03:32,710
We've got the rifle magazine, which presumably can be swapped out or something, but we don't particularly

53
00:03:32,720 --> 00:03:33,320
interested in that.

54
00:03:33,680 --> 00:03:35,660
And then there's this muzzle flash socket.

55
00:03:36,050 --> 00:03:40,250
So that's where we're going to spawn our muzzle flash.

56
00:03:40,280 --> 00:03:45,590
If it didn't have or your mesh doesn't have this, then you can go ahead and add one, because we can

57
00:03:45,590 --> 00:03:48,770
always add sockets in the way we've seen in previous lectures.

58
00:03:49,430 --> 00:03:51,740
So let's have a go at spawning this.

59
00:03:51,770 --> 00:03:57,530
The first thing we're going to need is one of these particle system references.

60
00:03:58,040 --> 00:04:06,050
And the best way to do that, again, the best way that I know how is to create a new property and do

61
00:04:06,050 --> 00:04:07,160
it in blueprint.

62
00:04:07,160 --> 00:04:10,130
There are other ways you can do it by named references.

63
00:04:10,430 --> 00:04:12,410
But I really don't like using named references.

64
00:04:12,410 --> 00:04:17,510
They break easily if you rename stuff so much easier to do it in Blueprint where all of that is handled

65
00:04:17,510 --> 00:04:18,020
for you.

66
00:04:18,530 --> 00:04:24,910
Gonna make this a you property edit defaults or actually this could be edit anywhere.

67
00:04:25,280 --> 00:04:25,640
Why?

68
00:04:25,670 --> 00:04:31,430
Because if we were to change this during game play, which you might want to do if you're trying to

69
00:04:31,430 --> 00:04:36,830
tweak things and say, well let's does this particle fact look better than this one, then this would

70
00:04:36,830 --> 00:04:37,310
actually work.

71
00:04:37,340 --> 00:04:40,530
The next time you shoot, a different particle effect would be created.

72
00:04:41,360 --> 00:04:46,800
And then the type of this needs to be a new particle system pointer, which we're going to call our

73
00:04:46,880 --> 00:04:49,760
muzzle flash like that.

74
00:04:50,330 --> 00:04:53,060
And that's what we're going to be setting up over in blueprint's.

75
00:04:53,150 --> 00:04:57,650
And let's go back in to our pull trigger method in the C++.

76
00:04:58,190 --> 00:05:02,420
And we want to call it that you game play static's function.

77
00:05:03,380 --> 00:05:06,730
So you game play Static's notes.

78
00:05:06,730 --> 00:05:13,490
It's Knokke auto in here because I need hash include for this by hover over that game play static's.

79
00:05:13,490 --> 00:05:17,570
You can see that it's under Engin classes kismet game play static.

80
00:05:17,630 --> 00:05:21,950
So all we need to do is kismet game play, statics, dot h.

81
00:05:22,740 --> 00:05:25,730
And we should have you game play static's to auto complete from.

82
00:05:26,210 --> 00:05:27,680
And we want to spawn.

83
00:05:27,830 --> 00:05:30,920
And this may or may not work because of the version that I'm in, in.

84
00:05:30,920 --> 00:05:31,340
Unreal.

85
00:05:31,370 --> 00:05:33,900
We want to spawn the ammeter attached.

86
00:05:34,790 --> 00:05:38,030
And we want this muzzle flash right here.

87
00:05:39,630 --> 00:05:46,380
And we want to attach it to a scene components in this case, we want to attach it to ag guns mesh and

88
00:05:46,380 --> 00:05:53,370
we want to attach it to the appropriate sockets, which, again, I'll let you fill out is the if we

89
00:05:53,370 --> 00:05:55,440
go over to the gun is the muzzle flash socket.

90
00:05:55,500 --> 00:06:02,070
I'm going to copy it from there directly and just put a semicolon on the end of the line to top it off.

91
00:06:02,580 --> 00:06:03,900
So this should work.

92
00:06:03,960 --> 00:06:07,860
Let's go over and hit compile in the engine.

93
00:06:09,220 --> 00:06:15,520
And once that's finished compiling, we can go over into our BP underscore rifle opened the full blueprint,

94
00:06:15,520 --> 00:06:15,820
Ed..

95
00:06:15,820 --> 00:06:22,690
I just prefer to deal with that and look at our let's see if we go to the root.

96
00:06:23,140 --> 00:06:26,820
In fact, the actor itself or the class defaults, go to the details.

97
00:06:26,830 --> 00:06:27,040
Pain.

98
00:06:27,070 --> 00:06:32,580
You can see we've got this muzzle flash property, the new one, and we need to find a particle effect

99
00:06:32,590 --> 00:06:33,040
in here.

100
00:06:33,070 --> 00:06:36,290
I'm going to look for the key word muzzle.

101
00:06:36,400 --> 00:06:37,030
Let's see.

102
00:06:37,990 --> 00:06:40,480
Maybe muzzle was not the one we looking for.

103
00:06:40,510 --> 00:06:42,070
It's assault rifle, M.F..

104
00:06:42,160 --> 00:06:42,910
I think so.

105
00:06:43,330 --> 00:06:44,380
Muzzle flashes that.

106
00:06:44,380 --> 00:06:45,560
What is standing for, sir?

107
00:06:45,640 --> 00:06:49,270
Assault rifle, M.F..

108
00:06:49,510 --> 00:06:50,530
That's the one we want.

109
00:06:50,940 --> 00:06:58,090
Compile and save that and we'll go over into our sandbox and play and see if shooting indeed launches

110
00:06:58,150 --> 00:07:00,420
up our muzzle flash.

111
00:07:00,430 --> 00:07:03,550
And you can see that it is continuously shooting at the moment.

112
00:07:03,850 --> 00:07:07,600
So we do want it to just be a single muzzle flash.

113
00:07:09,200 --> 00:07:12,170
So I think I'll actually choose a different muzzle flash.

114
00:07:12,200 --> 00:07:17,910
I think I'll use the one from the Wraith asset pack, which we've got sniper and primary.

115
00:07:17,930 --> 00:07:21,100
I'm going to choose the primary just because I am not wanted.

116
00:07:21,120 --> 00:07:22,640
Create a rapid fire weapon.

117
00:07:23,000 --> 00:07:25,280
That's a slightly different way of doing things.

118
00:07:25,360 --> 00:07:26,570
Not not massively different.

119
00:07:26,570 --> 00:07:31,970
Just more of a kind of once you're holding, you start the emitter and once you are finished with it,

120
00:07:31,970 --> 00:07:33,290
you you want to close it down.

121
00:07:33,620 --> 00:07:36,410
In our case, we've just won a launch that ammeter one time.

122
00:07:36,830 --> 00:07:40,190
So we're going to do l.p again and see if we.

123
00:07:40,310 --> 00:07:40,790
There we go.

124
00:07:40,790 --> 00:07:41,540
Now we shoot.

125
00:07:41,900 --> 00:07:44,240
We get a single flash of the muzzle.

126
00:07:44,690 --> 00:07:49,970
And if everything is hunky dory, it seems to be attached nicely to the end of the gun as well.

127
00:07:50,000 --> 00:07:55,430
As I move around, wherever I move around, whichever way I face the muzzle flashes in the right direction.

128
00:07:55,490 --> 00:07:55,840
Cool.

129
00:07:55,850 --> 00:08:00,350
Well, this is really starting to look more like a shooter game with particle effects.

130
00:08:00,800 --> 00:08:06,980
So in the next lecture, we're gonna look at the first steps of ray tracing, which he'll be actually

131
00:08:06,980 --> 00:08:11,990
to go and reach up to our character owner for some information.

132
00:08:12,440 --> 00:08:13,130
I will see their.
