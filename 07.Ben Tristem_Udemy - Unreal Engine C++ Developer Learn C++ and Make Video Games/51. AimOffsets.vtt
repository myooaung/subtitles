WEBVTT
1
00:00:04.570 --> 00:00:09.850
Hello and welcome this lecture we're going to be playing with AIM offsets will allow our Meche to move

2
00:00:09.850 --> 00:00:13.060
its arms up and down as we aim up and down.

3
00:00:13.210 --> 00:00:15.190
Let's dive in and see what that's all about.

4
00:00:16.300 --> 00:00:20.950
So at the moment, if we aim up and down, you can see that our characters arms aren't actually doing

5
00:00:20.950 --> 00:00:26.380
anything and the gun is not really looking like it should be pointing up and firing and hitting the

6
00:00:26.380 --> 00:00:28.270
location that we're actually hitting.

7
00:00:28.900 --> 00:00:30.880
So how do we go about changing this?

8
00:00:31.030 --> 00:00:33.460
Well, it's a change to our animation blueprint.

9
00:00:33.460 --> 00:00:38.500
So let's go ahead and open up the animation blueprint as a starting point and dock it to our main window.

10
00:00:39.310 --> 00:00:44.220
And then I want to introduce you to a new type of animation asset that we haven't seen before.

11
00:00:44.230 --> 00:00:45.430
We've seen BLENDE spaces.

12
00:00:45.460 --> 00:00:46.480
We've seen animations.

13
00:00:46.900 --> 00:00:53.110
The next thing that I want to show you is something called an animation offset and particularly an aim

14
00:00:53.170 --> 00:00:53.710
offset.

15
00:00:53.740 --> 00:00:59.830
So if we look for the keyword aiyo, in our animations, we're looking for these ones with a little

16
00:00:59.830 --> 00:01:01.960
blue underline called AIM Offsets.

17
00:01:02.380 --> 00:01:03.100
There's a couple of them.

18
00:01:03.130 --> 00:01:09.130
The one I'm interested in is AOE combat, which should be around here somewhere.

19
00:01:09.220 --> 00:01:13.330
They'll go a idle AoE combat, go an extra like that.

20
00:01:13.570 --> 00:01:16.690
Then you'll see that we've got something looking a lot like our Blende space.

21
00:01:16.930 --> 00:01:22.540
Except this time, if you move the little green nubbin, what's going on is it's changed in the direction

22
00:01:22.570 --> 00:01:25.660
that our characters mesh is pointing.

23
00:01:25.690 --> 00:01:29.350
So if we come over to the left, he points his gun to the left.

24
00:01:29.350 --> 00:01:30.220
We come over to the right.

25
00:01:30.250 --> 00:01:32.530
He points his gun to the right.

26
00:01:32.920 --> 00:01:36.870
And similarly with up and down, if you go pick up, then he looks all the way up, you pitch down,

27
00:01:36.880 --> 00:01:39.040
he looks all the way down and tries to shoot down.

28
00:01:39.730 --> 00:01:46.660
Now, the difference with this and other animations that we've seen is that this is known as an additive

29
00:01:46.750 --> 00:01:47.350
animation.

30
00:01:47.350 --> 00:01:51.580
If you go to the details pay and you can see that it's additive because it says additive settings.

31
00:01:51.610 --> 00:01:55.750
And this is animation based pose that it's basing all of this off.

32
00:01:56.440 --> 00:02:01.540
Basically what it means when it's additive is that this animation can be added on top of your other

33
00:02:01.570 --> 00:02:02.380
animation.

34
00:02:02.440 --> 00:02:06.070
So it's saying I can do this aiming while you're running.

35
00:02:06.100 --> 00:02:13.090
I can add the information about where my arms have moved relative to your run pose and add them on top.

36
00:02:13.720 --> 00:02:14.730
So how does this look?

37
00:02:14.740 --> 00:02:22.180
If we go to our animation blueprint, what we want to do is add this information after we've added all

38
00:02:22.180 --> 00:02:28.060
this information about locomotion and probably not before death, because death should be the final

39
00:02:28.060 --> 00:02:28.680
thing, huh?

40
00:02:29.230 --> 00:02:31.150
So we want to after locomotion.

41
00:02:31.180 --> 00:02:33.010
So we've got all our running animation in that.

42
00:02:33.010 --> 00:02:39.300
We want to add on top of that the little bit of information about where our arms should be moved so

43
00:02:39.300 --> 00:02:40.840
that we're aiming correctly.

44
00:02:41.350 --> 00:02:45.040
So to do this, we can right click and add in our aim offset.

45
00:02:45.040 --> 00:02:47.660
We can do it from the asset browser as well as we look for a.

46
00:02:48.370 --> 00:02:53.590
And then, as I said, we're looking for that combat version, which is a different place in this browser,

47
00:02:53.600 --> 00:02:54.110
funnily enough.

48
00:02:54.610 --> 00:03:00.980
If I drag that in, then what you get is something with an input pin which says, what's the base poet

49
00:03:01.190 --> 00:03:06.850
noticed the locomotion blends based didn't have an input pen because it's supplying you the whole animation,

50
00:03:07.360 --> 00:03:11.310
whereas this aim offset because it's an additive animation.

51
00:03:11.620 --> 00:03:14.540
It requires something to add on top of.

52
00:03:14.620 --> 00:03:18.310
So you need to give it a base pose, which is going gains come from our locomotion.

53
00:03:18.970 --> 00:03:25.600
And then we're going to go in input that's in to our false pose of the BLENDE, whether we are dead

54
00:03:25.720 --> 00:03:27.100
or not, because we're only showing this.

55
00:03:27.190 --> 00:03:28.060
We're not dead.

56
00:03:29.160 --> 00:03:36.770
And then I want to show you that if I were to change the pitch to one or maybe two 180 actually, and

57
00:03:36.780 --> 00:03:41.580
go ahead and compile, then you can see that he's fully looking upwards.

58
00:03:42.120 --> 00:03:44.580
Now, another tweak I want to do here is in the event graph.

59
00:03:44.580 --> 00:03:50.130
At the moment, we've got a rather vexing situation where we can't tweak anything in the anim preview

60
00:03:50.130 --> 00:03:54.870
because it's being overwritten with zeros by our event graph.

61
00:03:54.990 --> 00:04:01.650
An easy way to fix this is to simply put a check in here for whether the porn owner that we've got here

62
00:04:02.250 --> 00:04:04.160
is valid, namely, is it null.

63
00:04:04.950 --> 00:04:06.560
So who put in is valid here?

64
00:04:06.570 --> 00:04:10.800
And the one with the question mark automatically gives us these execution nodes.

65
00:04:11.250 --> 00:04:18.540
And if we pass through an update animation execution node and only set things, if that's valid, then

66
00:04:18.540 --> 00:04:23.970
what's going to happen is that when you are not actually playing and there isn't a pawn there to give

67
00:04:23.970 --> 00:04:28.320
us, the information is going to allow us to set it in the anim preview added to.

68
00:04:28.680 --> 00:04:36.390
So now I can change the speed and you can see that he starts running with his aim offset set up high.

69
00:04:37.080 --> 00:04:41.070
So let's set this so that our pitch is actually a variable here.

70
00:04:41.100 --> 00:04:42.420
So I'm going to right.

71
00:04:42.420 --> 00:04:48.990
Click on pitch and promotes a variable and bring that variable down here with visible and change its

72
00:04:48.990 --> 00:04:50.310
name to pitch.

73
00:04:51.300 --> 00:04:52.530
In fact, let's be more specific.

74
00:04:52.560 --> 00:04:53.480
This is the aim.

75
00:04:53.550 --> 00:04:54.440
Pitch like.

76
00:04:54.540 --> 00:04:54.870
So.

77
00:04:54.960 --> 00:05:00.270
Now, if we go ahead and compile, we set a default aim pitch by accident.

78
00:05:00.300 --> 00:05:03.210
We want to set that down to zero by default.

79
00:05:03.810 --> 00:05:04.890
Go ahead and compile that.

80
00:05:05.400 --> 00:05:11.090
And now if we go ahead and change the speed and then change the aim pitch.

81
00:05:12.250 --> 00:05:16.930
You can see we can aim up and we can aim down, which is exactly what we want.

82
00:05:17.260 --> 00:05:20.170
Now, the problem here is it's not being set in our game just yet.

83
00:05:20.200 --> 00:05:26.710
If we go up and down, none of that is coming from information from our control rotation and our aiming.

84
00:05:27.250 --> 00:05:31.060
So we need to go back to our event graph and get some of that information in here.

85
00:05:31.090 --> 00:05:35.890
Now, I'm just going to space things out a little bit here because this is getting rather long.

86
00:05:36.280 --> 00:05:41.410
And what I want to do is off this valid pin is I want to put a sequence note.

87
00:05:41.900 --> 00:05:47.730
Just gonna let me spread things out a little bit down the in the vertical direction as well.

88
00:05:47.740 --> 00:05:53.020
So the sequence node, first of all, is gonna go off to setting the speed and angle over here.

89
00:05:53.080 --> 00:05:57.070
Then I think we can move this stuff to do with cast into the shooter character.

90
00:05:57.520 --> 00:06:04.570
I think we can bring this down further vertically, looking up at that sequence pin and the object pin

91
00:06:04.630 --> 00:06:07.350
to try get porn owner node.

92
00:06:07.420 --> 00:06:09.880
Then we can add another pin into the sequence.

93
00:06:09.940 --> 00:06:13.620
And this time I want to get two pieces of information from our pawn owner.

94
00:06:14.200 --> 00:06:17.320
The first one is going to be our control rotation.

95
00:06:17.380 --> 00:06:19.870
So let's do a get control rotation.

96
00:06:20.500 --> 00:06:26.350
But this isn't going to be enough because our control rotation, if we split the pin, you can see we've

97
00:06:26.350 --> 00:06:29.560
got a pitch in here and we could try setting that pitch.

98
00:06:29.620 --> 00:06:30.670
Let's let's give that a go.

99
00:06:31.180 --> 00:06:37.990
So if I do a set pitch and connect up the execution node to the execution node from our sequence, adding

100
00:06:37.990 --> 00:06:39.160
in a bit of a redirect to that.

101
00:06:39.250 --> 00:06:44.680
What's gonna happen if we compile save hit play and then aim up?

102
00:06:44.890 --> 00:06:45.550
Works fine.

103
00:06:45.850 --> 00:06:47.980
Aim down does not turn around.

104
00:06:48.430 --> 00:06:51.520
Then things start to look even more weird.

105
00:06:52.030 --> 00:06:58.750
Now what's going on there is that this control rotation is entirely global and so it doesn't take into

106
00:06:58.750 --> 00:07:02.050
account the direction that our player is already facing.

107
00:07:02.590 --> 00:07:10.330
So to take that into account, we need to go to the pawn again and get the actor rotation.

108
00:07:10.420 --> 00:07:17.740
And then what we want to find is the rotation between the actor's rotation to the control rotation.

109
00:07:18.220 --> 00:07:21.850
And the way we do this is just going to disconnect the aim pitch.

110
00:07:22.390 --> 00:07:23.530
Break that link and right.

111
00:07:23.530 --> 00:07:26.080
Click and recombine the struck pins is.

112
00:07:26.140 --> 00:07:32.650
I want to do a delta between those two so I can take off of the control rotation and look for Delta.

113
00:07:33.780 --> 00:07:40.530
And Delta is basically a fancy way of saying subtraction between rotators.

114
00:07:40.920 --> 00:07:48.240
So what we want to do is take our control rotation and subtract the base rotation, which is going to

115
00:07:48.240 --> 00:07:50.190
be our active rotation.

116
00:07:50.310 --> 00:07:50.920
So that's B..

117
00:07:50.970 --> 00:07:52.380
So it's going to be A minus B.

118
00:07:52.670 --> 00:07:53.210
You hover over.

119
00:07:53.220 --> 00:07:55.140
That's what the Delta rotates does.

120
00:07:55.680 --> 00:08:01.080
And we basically want to be saying, yes, I want the control rotation, but take away all the information

121
00:08:01.080 --> 00:08:09.000
about our active rotation so I can just know whether we're aiming up and down relative to the direction

122
00:08:09.000 --> 00:08:10.140
that our character's facing.

123
00:08:10.770 --> 00:08:13.860
And then if I split out the return value, Payden from that.

124
00:08:14.280 --> 00:08:16.320
And use the pitch from there.

125
00:08:16.830 --> 00:08:19.590
We're going to see that everything works as expected.

126
00:08:19.620 --> 00:08:23.520
When I look up my name up, when I look down, I'm aiming down.

127
00:08:23.940 --> 00:08:28.800
And doesn't matter which way I'm facing in the world, that's always going to be the case.

128
00:08:28.920 --> 00:08:32.610
So that's almost it for our AIM rotation.

129
00:08:32.670 --> 00:08:37.740
The only problem is that at the moment our A.I. is incapable of aiming like this.

130
00:08:37.800 --> 00:08:46.050
So if I go and put a shooter character up on the stairs over here and then we go over to try and hound

131
00:08:46.050 --> 00:08:48.660
him down, try and get him to come over to us.

132
00:08:48.960 --> 00:08:49.710
Here he comes.

133
00:08:50.130 --> 00:08:52.680
You'll see that he's just shooting off into the wall.

134
00:08:52.830 --> 00:08:55.440
He's not trying to aim at all, which is a bit sad.

135
00:08:55.830 --> 00:08:56.950
So what's going on there?

136
00:08:57.050 --> 00:09:02.490
If we go through our A.I. and our behavior tree, you can see that we're setting a default focus to

137
00:09:02.520 --> 00:09:03.510
a location.

138
00:09:03.540 --> 00:09:07.780
And by default, if you set focus to a location, then unreal.

139
00:09:07.830 --> 00:09:11.370
Not going to update your control rotation in the same way.

140
00:09:11.400 --> 00:09:12.750
It's not going to do the pitch.

141
00:09:13.320 --> 00:09:14.340
So that's a bit sad.

142
00:09:14.580 --> 00:09:21.390
Okay, so what we need to do is go to the blackboard and change this player location to just be a reference

143
00:09:21.390 --> 00:09:22.860
to the player instead.

144
00:09:23.570 --> 00:09:27.180
Then we need to change this vector over to be an object.

145
00:09:27.270 --> 00:09:32.190
So now we've got as a black board key for the player, which is an object.

146
00:09:32.220 --> 00:09:35.670
We can change the base class to be actor if we want to.

147
00:09:36.180 --> 00:09:37.980
Although it's not particularly important.

148
00:09:38.520 --> 00:09:44.040
And then what that means is over in the behavior tree, we can switch things up so that we are moving

149
00:09:44.040 --> 00:09:48.720
to instead of moving to our play location, we're moving to the player actor.

150
00:09:49.200 --> 00:09:56.790
We can set the focus to be the player actor and update the player location if scene now needs to be

151
00:09:56.790 --> 00:09:59.790
pointing to a player actor as well.

152
00:09:59.850 --> 00:10:05.040
Now, this isn't going to work just yet because our update player location, if seen, is currently

153
00:10:05.040 --> 00:10:07.560
trying to set a location into this key.

154
00:10:07.830 --> 00:10:10.440
So a little mini challenge for you, see if you can update it.

155
00:10:10.470 --> 00:10:18.210
So instead of setting the location in that behaviour tree service, we're setting the actual actor pause

156
00:10:18.210 --> 00:10:18.500
video.

157
00:10:18.510 --> 00:10:18.960
Have a go.

158
00:10:19.200 --> 00:10:19.380
Okay.

159
00:10:19.410 --> 00:10:20.040
Welcome back.

160
00:10:20.160 --> 00:10:25.770
So we're going to go over in a visual studio code and look for our service, particularly it's the B.T.

161
00:10:25.770 --> 00:10:28.850
service underscore player location if seen.

162
00:10:29.430 --> 00:10:32.310
And we're going to change this to sort of set value as vector.

163
00:10:32.340 --> 00:10:35.040
It's going to be set value as object.

164
00:10:35.790 --> 00:10:36.510
Simple as that.

165
00:10:36.510 --> 00:10:39.360
We had choices of types in the blackboard.

166
00:10:39.750 --> 00:10:41.360
And that's what we're going to tell it here.

167
00:10:41.880 --> 00:10:45.570
Now, obviously is going to complain that what we're trying to say is a vector rather than an object.

168
00:10:45.990 --> 00:10:51.240
So we're going to just remove the get actor location and pass in the player pawn instead.

169
00:10:51.780 --> 00:10:54.030
Clearing the value is the same as it was before.

170
00:10:54.090 --> 00:11:00.480
So we can just go back into the ED hit compile and see if this new setup is working with aiming for

171
00:11:00.480 --> 00:11:01.050
the A.I..

172
00:11:01.140 --> 00:11:02.760
Kate, let's dive in here, play.

173
00:11:02.790 --> 00:11:05.040
Go and find our A.I. up on the stairs.

174
00:11:06.030 --> 00:11:08.110
Get them to try and come and look down as.

175
00:11:08.160 --> 00:11:15.660
Come on, I got one more thing that I've forgotten from the behavior tree to update is there can see

176
00:11:15.660 --> 00:11:20.100
player at the moment is has gone and reset the blackboard key to self actor.

177
00:11:20.580 --> 00:11:24.140
We want to that to be player basically is the player set.

178
00:11:24.340 --> 00:11:28.100
Let's go and make that change because at the moment the A.I. wasn't coming to chase.

179
00:11:28.620 --> 00:11:29.580
Now it's chasing us.

180
00:11:29.610 --> 00:11:35.610
And in fact, if you'd jumped even just about see that the aim rotation of this guy is changing, let's

181
00:11:35.610 --> 00:11:39.780
go over to the stairs and see whether he can shoot down from the stairs at us.

182
00:11:40.530 --> 00:11:41.040
Excellent.

183
00:11:41.100 --> 00:11:45.450
He's changed his rotation and indeed, he is shooting right at us.

184
00:11:45.690 --> 00:11:46.680
Both of them are when I.

185
00:11:46.710 --> 00:11:48.480
So I'm losing health and will soon die.

186
00:11:50.070 --> 00:11:51.150
Hey, that's it for this lecture.

187
00:11:51.150 --> 00:11:58.500
We have added in an AIM offset and we have updated our A.I. so that it can use that to aim as well.

188
00:11:58.590 --> 00:12:02.530
The next lecture, you're gonna be doing something about this funny running while in the air.

189
00:12:02.760 --> 00:12:03.570
I will see that.
