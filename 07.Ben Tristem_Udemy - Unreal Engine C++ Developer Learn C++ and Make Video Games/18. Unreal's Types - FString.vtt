WEBVTT
1
00:00:05.110 --> 00:00:06.790
Hello everybody and welcome back.

2
00:00:06.790 --> 00:00:10.950
In this lecture we're going to talk about how unreal has its own C++ types.

3
00:00:11.110 --> 00:00:16.510
This can be confusing if you're reaching out to resources and learning about C++ because occasionally

4
00:00:16.510 --> 00:00:21.580
you need a different type when you're using it with unreal.

5
00:00:21.580 --> 00:00:26.710
So if we cast our mind back to the last section when we were doing the triple X what we had done before

6
00:00:26.980 --> 00:00:33.070
is we would include Io stream and then we would reach into the standard namespace to use c out which

7
00:00:33.070 --> 00:00:36.940
then meant we could print something like Welcome to the console.

8
00:00:36.940 --> 00:00:42.820
Now notice that was a string so we're able to print out exactly what was within those quotation marks

9
00:00:44.360 --> 00:00:50.510
now in standard C++ what you would tend to do is you would include something called string at the very

10
00:00:50.510 --> 00:00:50.960
top.

11
00:00:50.960 --> 00:00:56.660
Much like we would include Io stream and our header files and then you'd write something like the following

12
00:00:56.690 --> 00:01:02.990
we would declare a string called word and then initialize it with the word welcome.

13
00:01:03.050 --> 00:01:10.400
However for strings in Umbria we need to use f string instead of string which is pretty straightforward.

14
00:01:10.400 --> 00:01:15.650
We can just replace that now later on you'll notice that there are other things as well some of them

15
00:01:15.650 --> 00:01:20.720
are very similar some of them will be slightly different so later on instead of using into for integer

16
00:01:20.990 --> 00:01:28.260
we'll be using int 32 and there are loads of little things throughout that we'll pick up as we go through.

17
00:01:28.670 --> 00:01:33.470
And with that we can jump straight into a challenge which I know you're fully capable of doing.

18
00:01:33.800 --> 00:01:38.690
So we're going to define our hidden word and not only define it but initialize it as well.

19
00:01:38.690 --> 00:01:44.120
So within the on input function I'd like you to do the following declare and initialize an F string

20
00:01:44.330 --> 00:01:50.870
called Hidden word and then assign it and I say gram of your choosing pulls over video now and give

21
00:01:50.870 --> 00:01:59.790
that ago Okay everybody Welcome back let's go ahead now declare and initialize Iowa hit him word okay.

22
00:01:59.810 --> 00:02:01.820
So this should be relatively straightforward.

23
00:02:01.820 --> 00:02:04.570
First of all we need an F string.

24
00:02:04.580 --> 00:02:06.050
That's the type that we're working with.

25
00:02:06.500 --> 00:02:11.630
I constantly do that fortunately I can just go down that also complete for the win.

26
00:02:11.630 --> 00:02:12.200
Excellent.

27
00:02:12.200 --> 00:02:13.600
So we've got an F string.

28
00:02:13.610 --> 00:02:15.050
We're going to call it hidden word.

29
00:02:15.080 --> 00:02:18.650
And remember your variable should have a capital to begin with.

30
00:02:18.770 --> 00:02:20.510
And let's go ahead here.

31
00:02:20.720 --> 00:02:22.820
We're going to assign it straight away.

32
00:02:22.820 --> 00:02:24.670
So there's a couple of ways that you could do this.

33
00:02:24.830 --> 00:02:30.890
I want to explore both with you now because once we've declared it we can then assign it a word perhaps

34
00:02:30.910 --> 00:02:38.710
something like cake and then you can tell I'm thinking about food and then we're done.

35
00:02:38.780 --> 00:02:40.810
Now there's a good thing about thing here.

36
00:02:40.820 --> 00:02:44.060
One this is broken up our code with declared and then we've assigned it.

37
00:02:44.060 --> 00:02:49.820
That's fine since there's no fundamental reason to have these as two separate lines of code.

38
00:02:49.880 --> 00:02:54.080
It would be better to declare and initialize these on the same line.

39
00:02:54.110 --> 00:02:56.170
There's no reason why not to do that.

40
00:02:56.180 --> 00:02:59.360
It makes our code easier to read as well.

41
00:02:59.360 --> 00:03:00.560
So I'm happy with that.

42
00:03:01.010 --> 00:03:02.960
So a nice and straightforward challenge for you.

43
00:03:03.290 --> 00:03:08.480
I hope you've conquered that and you didn't have any issues on my main issues when it comes to typing

44
00:03:08.480 --> 00:03:15.420
this is I always seem to type f Schering or FS thing instead of f string.

45
00:03:15.680 --> 00:03:20.580
So just a typo thing there also do notes the capitalization that is important.

46
00:03:20.600 --> 00:03:26.060
If you didn't type f string exactly how you see it on the screen right now it's also likely not to have

47
00:03:26.060 --> 00:03:27.000
worked.

48
00:03:27.020 --> 00:03:34.010
Now we're not quite there yet at the moment our code will run it will run fine but what it won't do

49
00:03:34.070 --> 00:03:41.310
is work on every system out there because we haven't formatted our strings in a way that allows on real

50
00:03:41.600 --> 00:03:45.560
to do that and we'll learn all about that over in the next lecture.
