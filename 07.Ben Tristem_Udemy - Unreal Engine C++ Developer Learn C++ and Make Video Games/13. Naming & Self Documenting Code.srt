0
1
00:00:00,480 --> 00:00:02,160
Hello and welcome back.
1

2
00:00:02,170 --> 00:00:07,620
So currently when we run our program we see that we print the sum and the products of our variables
2

3
00:00:07,830 --> 00:00:08,820
to the terminal.
3

4
00:00:08,820 --> 00:00:12,230
But it's not really in context at this stage.
4

5
00:00:12,330 --> 00:00:17,310
If somebody was to play our game they wouldn't have a clue what these numbers mean they certainly wouldn't
5

6
00:00:17,310 --> 00:00:22,830
know that these numbers represent the sum and the product of the code they have to enter.
6

7
00:00:22,860 --> 00:00:25,830
So we're going to clean this up a bit before moving on.
7

8
00:00:25,830 --> 00:00:31,130
We're going to start by inserting a new line above where we print the sum to the terminal.
8

9
00:00:31,350 --> 00:00:35,730
And on this line we're going to call cout from the standard namespace and we're going to print out
9

10
00:00:35,790 --> 00:00:36,960
a string.
10

11
00:00:36,960 --> 00:00:41,670
We want to make it clear to the player that there are three numbers in the code so let's print out something
11

12
00:00:41,670 --> 00:00:42,370
like that.
12

13
00:00:42,390 --> 00:00:48,810
There are three numbers in the code and then we want to end the line so we can start a new line on the
13

14
00:00:48,810 --> 00:00:49,480
terminal.
14

15
00:00:49,560 --> 00:00:53,080
So we'll call end line from the standard namespace.
15

16
00:00:53,310 --> 00:01:00,510
And on the line below where we print the sum we can insert some quotation marks before we type some
16

17
00:01:00,870 --> 00:01:06,600
so we can print a string here and then we can use a two left angled brackets to print the sum afterwards
17

18
00:01:06,900 --> 00:01:14,580
so we can now print the codes add up to and we could put a colon and a space to print some just after
18

19
00:01:14,580 --> 00:01:15,780
a little space here.
19

20
00:01:15,780 --> 00:01:22,050
So now if we compile our code and run Triple X we can see now that we have a hint that there are three
20

21
00:01:22,050 --> 00:01:25,530
numbers in the code and the codes add up to nine
21

22
00:01:25,530 --> 00:01:26,740
in my program.
22

23
00:01:26,970 --> 00:01:29,490
So now it's your turn to finish these messages off.
23

24
00:01:29,820 --> 00:01:31,570
I want you to clear up the next line.
24

25
00:01:31,710 --> 00:01:38,040
Print a message about the product just like we've done with the sum and then why not take a screenshot
25

26
00:01:38,280 --> 00:01:41,190
of your terminal and showcase your Triple X game.
26

27
00:01:41,280 --> 00:01:44,320
So far in the community so pause here.
27

28
00:01:44,400 --> 00:01:47,210
Fix up your messages and share your work in the community.
28

29
00:01:47,280 --> 00:01:51,920
And then when you're ready we can carry on.
29

30
00:01:51,930 --> 00:01:58,150
Okay, so here's my result I now print there are three numbers in the code the codes add up to and then I print
30

31
00:01:58,210 --> 00:02:05,740
the sum and on the line beneath this I print the codes multiply to give and then I print the product.
31

32
00:02:05,740 --> 00:02:09,320
I've also used this little plus symbol here just to make the hint stand out a little.
32

33
00:02:09,370 --> 00:02:11,830
But this is totally optional.
33

34
00:02:11,830 --> 00:02:17,980
And I also want to point out that I have a blank line before the hints get printed out in the terminal.
34

35
00:02:17,980 --> 00:02:24,250
This is because I've used end line from the standard namespace in my code twice before we see out to
35

36
00:02:24,250 --> 00:02:26,000
print the hints.
36

37
00:02:26,020 --> 00:02:26,470
Okay great.
37

38
00:02:26,470 --> 00:02:29,390
So this is much clearer for the player to understand.
38

39
00:02:29,440 --> 00:02:34,720
Now before we move on we're going to be taking a look at how we've been naming our variables.
39

40
00:02:34,720 --> 00:02:38,920
It's really important to give your variables good names in C++.
40

41
00:02:38,920 --> 00:02:45,670
Variable names must begin with a letter or an underscore meaning variable names cannot start with a
41

42
00:02:45,670 --> 00:02:46,750
number.
42

43
00:02:46,750 --> 00:02:52,320
And in C++ we cannot use a reserved keyword for a variable name.
43

44
00:02:52,320 --> 00:02:56,590
Key words are reserved to be used only by the C++ language.
44

45
00:02:56,680 --> 00:03:01,150
And there's over 90 keywords in C++ that are reserved.
45

46
00:03:01,150 --> 00:03:02,550
We've seen some of them already.
46

47
00:03:02,560 --> 00:03:08,870
For example we can't name a variable const or int because they are reserved by the language.
47

48
00:03:08,950 --> 00:03:15,790
Now I said it's important to give your variables good names. By doing this we can self documents our
48

49
00:03:15,790 --> 00:03:22,990
code, self documenting code makes our code easier to read and understand by anybody who views it.
49

50
00:03:23,080 --> 00:03:29,440
If we give a variable a good name we don't have to use a comment to describe and explain what it does.
50

51
00:03:29,440 --> 00:03:34,600
And we always want to have this in mind when we name our variables and there's something else we should
51

52
00:03:34,600 --> 00:03:37,530
point out here that relates to Unreal Engine 4.
52

53
00:03:37,630 --> 00:03:44,020
We want to be conforming to Unreal's coding standard. In the coding standard documentation for Unreal
53

54
00:03:44,260 --> 00:03:46,560
the naming conventions are listed.
54

55
00:03:46,570 --> 00:03:52,420
It says that the first letter of each word in a name should be capitalized and we should avoid using
55

56
00:03:52,450 --> 00:03:54,700
underscores between words.
56

57
00:03:54,700 --> 00:03:56,520
So this is quite important.
57

58
00:03:56,530 --> 00:04:02,920
We should start following these guidelines to prepare ourselves for Unreal. Unreal Engine 4 uses an upper
58

59
00:04:02,920 --> 00:04:09,040
CamelCase naming convention meaning that the start of each word is capitalized which is different in
59

60
00:04:09,040 --> 00:04:11,520
comparison to working with other game engines.
60

61
00:04:11,530 --> 00:04:17,500
So we want to follow these guidelines when we name our variables. So we can be honest with ourselves
61

62
00:04:17,500 --> 00:04:24,280
here A B and C aren't very good variable names and we've even had to add a comment to describe them
62

63
00:04:24,790 --> 00:04:29,850
but we understand the pain now of having a bad variable names we've had to describe them with a comment.
63

64
00:04:29,860 --> 00:04:36,280
But right now I want you to rename these variables to something more suitable. Rename your A, B, and C
64

65
00:04:36,280 --> 00:04:44,980
variables to CodeA, CodeB, and CodeC then rename the sum and the product to CodeSum
65

66
00:04:45,130 --> 00:04:52,120
And CodeProduct and make sure your CodeSum and CodeProduct variables are initialized with your new variable
66

67
00:04:52,120 --> 00:04:56,130
names not just a, b, and c and make sure to follow
67

68
00:04:56,140 --> 00:05:02,230
Unreal Engine 4's preferred naming convention use UpperCamelCase where you capitalize the first
68

69
00:05:02,230 --> 00:05:04,230
letter of each word.
69

70
00:05:04,300 --> 00:05:07,920
So by doing all of this is really going to help clear things up as we move forward.
70

71
00:05:07,930 --> 00:05:11,650
So pause here to rename your variables and then we can wrap up this lesson.
71

72
00:05:15,460 --> 00:05:24,130
Okay, so I've gone ahead and renamed my a, b, and c variables to CodeA, CodeB, and CodeC and I've renamed
72

73
00:05:24,130 --> 00:05:31,420
the sum and the product variables to CodeSum and CodeProduct and we are initializing them with expressions
73

74
00:05:31,600 --> 00:05:38,260
that add and multiply our CodeA,B, and C variables together and a more so now following Unreal Engine
74

75
00:05:38,260 --> 00:05:44,050
4's naming convention where we capitalized the start of each words we're using the upper camel
75

76
00:05:44,080 --> 00:05:46,260
case naming convention here.
76

77
00:05:46,300 --> 00:05:51,160
Now there's a slight issue here because we've changed the name of the sum and the product variables
77

78
00:05:51,190 --> 00:05:56,480
but we're still using them later on in our code and we haven't changed the name for them here yet.
78

79
00:05:56,560 --> 00:06:02,110
So I'm going to back up the steps to my CodeSum and CodeProduct variables are just named sum and product.
79

80
00:06:02,260 --> 00:06:07,480
And notice when we click on them it highlights and shows where they are used in our code and we can
80

81
00:06:07,480 --> 00:06:12,070
right click on the variable and we can select change all occurrences.
81

82
00:06:12,070 --> 00:06:16,900
And now if we start typing notice it's highlighted where our variables are and when we start typing
82

83
00:06:16,900 --> 00:06:20,640
now it's going to rename the variable everywhere it is now file.
83

84
00:06:20,650 --> 00:06:25,990
So sum is going to be CodeSum for me and we can do the same with product we can right click on it
84

85
00:06:26,230 --> 00:06:30,410
and change all the occurrences for it and change it to CodeProduct.
85

86
00:06:31,150 --> 00:06:31,630
Okay great.
86

87
00:06:31,630 --> 00:06:32,510
So we're almost there.
87

88
00:06:32,530 --> 00:06:37,960
We're going to wrap up this lesson by declaring a new variable towards the end of our main function.
88

89
00:06:37,960 --> 00:06:44,650
We're going to declare an integer and it's going to be called PlayerGuess and we're not going to initialize
89

90
00:06:44,650 --> 00:06:44,890
it here.
90

91
00:06:44,890 --> 00:06:50,290
We're going to use a semicolon to end the line and in the next lesson we're going to use this variable
91

92
00:06:50,410 --> 00:06:53,920
to store the player's guess that they enter into the terminal.
92

93
00:06:53,920 --> 00:06:56,680
So we'll wrap this lesson up here and I'll see you in the next one.
