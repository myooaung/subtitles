WEBVTT
1
00:00:04.220 --> 00:00:07.530
Hello everybody and welcome to refactoring rules.

2
00:00:07.550 --> 00:00:14.150
One of the big things about refactoring that I found is that people often ask the question why is my

3
00:00:14.150 --> 00:00:17.090
code works why do I need to do anything with it.

4
00:00:17.090 --> 00:00:22.640
Well if you to build your code what often happens is it ends up messy to begin with.

5
00:00:23.030 --> 00:00:27.080
Then tidying it up gives you a great foundation to build upon it.

6
00:00:27.080 --> 00:00:32.210
If you leave it messy it becomes unwieldy and impossible to manage.

7
00:00:32.210 --> 00:00:39.140
So we're going to be using multiple getters for multiple return values in this lecture.

8
00:00:39.140 --> 00:00:45.300
Now you could go about creating a struct and putting the values in there or even our parameters.

9
00:00:45.350 --> 00:00:50.260
But for this particular case we're going to use multiple guesses for multiple return values.

10
00:00:50.270 --> 00:00:57.210
Now in general less lines of clear code that's important it has to be clear and readable is better.

11
00:00:57.770 --> 00:00:59.990
Naming is really really important.

12
00:01:00.260 --> 00:01:03.680
So take the time to name your things Don't be scared of renaming them.

13
00:01:03.680 --> 00:01:07.290
We've got tools that enable you to rename everything with it.

14
00:01:07.370 --> 00:01:12.330
Try and make your names unique as well if you've got two names in different functions.

15
00:01:12.410 --> 00:01:19.970
It's very easy to accidentally rename the wrong one and comment the Why don't assume that it's obvious

16
00:01:20.000 --> 00:01:22.300
when it comes to your code.

17
00:01:22.570 --> 00:01:27.310
The what should be obvious so when you're looking at your code it should be clear as to what it's doing.

18
00:01:27.410 --> 00:01:31.990
But sometimes you need to comment the why are you doing it.

19
00:01:32.000 --> 00:01:39.290
It can be helpful to add that level of clarification especially when you're fresh coding or you're planning

20
00:01:39.290 --> 00:01:41.250
on taking a break from it as well.

21
00:01:41.360 --> 00:01:45.230
It's always about this scratch actually planning to take a break.

22
00:01:45.260 --> 00:01:48.650
You may have to do something else for a week when you come back.

23
00:01:48.680 --> 00:01:53.400
It needs to be clear in your mind haven't helped anybody else when they look at your code.

24
00:01:53.480 --> 00:02:01.580
If you don't have some nice comments nice clear obvious what the code is doing and refactoring can really

25
00:02:01.580 --> 00:02:03.260
help hone that in.

26
00:02:03.260 --> 00:02:08.690
So you've really got three stages of coding red green and refactor what are they.

27
00:02:08.690 --> 00:02:10.760
Well red is it's not working.

28
00:02:10.760 --> 00:02:12.360
Our test is failing there.

29
00:02:12.390 --> 00:02:17.360
This is the state that your code starts in not working doesn't mean that it's wrong it just means that

30
00:02:17.360 --> 00:02:24.720
it's in development and eventually you put it altogether like we did in the last lecture and it's working.

31
00:02:24.740 --> 00:02:27.770
This is the green stage but it's kind of ugly.

32
00:02:27.770 --> 00:02:34.130
We're using this line trace and multiple times that should be refracted out and sorted out.

33
00:02:34.220 --> 00:02:36.580
And that's what we're going to work on in this lecture.

34
00:02:36.590 --> 00:02:40.040
And we'll also have a look at anything else that we need to do.

35
00:02:40.040 --> 00:02:43.040
So the refactor bit is all about making it pretty.

36
00:02:43.130 --> 00:02:46.250
And of course it must still work and it's not pretty.

37
00:02:46.340 --> 00:02:52.370
Just because it looks good it also will be much better for its as well giving you that strong foundation

38
00:02:52.940 --> 00:02:55.700
to work on and build your code upon.

39
00:02:55.700 --> 00:02:58.550
And then of course you repeat the sequence.

40
00:02:58.580 --> 00:03:03.060
This is something that we'll just have to be done time and time again.

41
00:03:03.110 --> 00:03:08.270
Of course you always do have to be careful of going over the top with your refactoring make sure your

42
00:03:08.270 --> 00:03:16.160
code is clear Don't take out a line of code and put it in its own function because doing that is actually

43
00:03:16.160 --> 00:03:17.900
going to make your code more complex.

44
00:03:17.900 --> 00:03:21.850
There is a balance to be had and it just comes with experience.

45
00:03:21.860 --> 00:03:22.130
OK.

46
00:03:22.130 --> 00:03:24.760
I think you're ready for this challenge.

47
00:03:24.950 --> 00:03:32.330
And I'd like you to before you even start make a backup of your project or commit your changes so far

48
00:03:32.780 --> 00:03:38.870
I know it's easy to forget doing it every lecture but this is the time where you need to do it because

49
00:03:38.870 --> 00:03:43.520
if you do make a mistake we're moving a lot of code around it's quite an intensive process this time

50
00:03:43.850 --> 00:03:48.560
and we want to make sure that you can roll back if necessary or so you can just give it a go you can

51
00:03:48.560 --> 00:03:54.740
get in there get messy see if you can get it working if you can't you can start again and just practice

52
00:03:55.040 --> 00:04:00.560
and then of course if you find your own way and you'd like the code to more reflect what I'm doing then

53
00:04:00.560 --> 00:04:05.850
of course you can revert back having had that experience and knowledge gained.

54
00:04:06.020 --> 00:04:10.030
And of course then you can follow along with me if you need to.

55
00:04:10.070 --> 00:04:11.300
So refactor your code.

56
00:04:11.330 --> 00:04:12.610
That's the big thing here.

57
00:04:12.800 --> 00:04:14.000
And yes it is soon.

58
00:04:14.000 --> 00:04:19.700
It's only a couple of lectures ago that we did a little bit more refactoring but clarity is worth fighting

59
00:04:19.700 --> 00:04:20.150
for.

60
00:04:20.270 --> 00:04:26.780
If you leave it too long it just becomes too unwieldy to manage and make it so clear that you'll remember

61
00:04:26.960 --> 00:04:32.950
in a year pulls with you now and give that a go Hello everybody welcome back.

62
00:04:32.950 --> 00:04:35.980
Let's jump over to V.S. code and start our refactor.

63
00:04:36.740 --> 00:04:37.060
OK.

64
00:04:37.090 --> 00:04:40.380
So let's go ahead and restart this refactor now.

65
00:04:40.420 --> 00:04:45.570
I'm going to blow up my code a little on the screen so we can really focus and make it nice and clear

66
00:04:45.610 --> 00:04:50.480
so you can do that by the way with control plus and minus obviously I'm not gonna make it super big

67
00:04:50.480 --> 00:04:55.680
like that but a little bit bigger so I can really focus on one area at a time.

68
00:04:55.690 --> 00:05:00.640
Now most ideas do allow you to collapse blocks of code which is really really useful.

69
00:05:00.640 --> 00:05:07.330
So as I go through this what I'll do is in this code if we go towards the numbers the line numbers on

70
00:05:07.330 --> 00:05:13.750
the side we have here this little down arrow click that it will hide that particular block of code which

71
00:05:13.770 --> 00:05:14.710
is going to be really useful.

72
00:05:14.710 --> 00:05:18.970
I'm going to use in this case to say yep I'm happy with that area of code.

73
00:05:18.970 --> 00:05:22.390
Now before we start let's have a look at the number of lines we have.

74
00:05:22.390 --> 00:05:27.600
So we basically got 142 lines of code okay.

75
00:05:27.620 --> 00:05:32.290
So let's go up to the top and just go down and I know when we reach this area here where we get to the

76
00:05:32.290 --> 00:05:35.860
grab component this is going to be one of the major parts that we need to focus on.

77
00:05:35.890 --> 00:05:40.660
I'm going to start at the top so I'm not bouncing around all over the place or at least not too much.

78
00:05:40.660 --> 00:05:43.140
OK so let's have a look at our first function.

79
00:05:43.150 --> 00:05:44.230
That's absolutely fine.

80
00:05:44.230 --> 00:05:48.520
There's nothing more we can do to tie this up with except to removing the comments and that's just not

81
00:05:48.880 --> 00:05:50.010
worth it.

82
00:05:50.170 --> 00:05:54.150
Begin play again that's nice and simple so we can get rid of that.

83
00:05:54.350 --> 00:05:56.050
The setup put component.

84
00:05:56.050 --> 00:06:02.800
Again nice and straightforward though that's all set up to receive input from our player OK.

85
00:06:02.820 --> 00:06:06.570
This is the first area that we can to sort out on online 38.

86
00:06:06.580 --> 00:06:10.510
The fine physics handle now because every actor has one of these on them.

87
00:06:11.040 --> 00:06:16.230
You may think that this code is a bit redundant but because we're using it later on we need to make

88
00:06:16.230 --> 00:06:22.980
sure that we protect ourselves when we go ahead and try and grab and use the physics handled down here

89
00:06:23.320 --> 00:06:27.700
if it doesn't have a physics handle on it or receive a null pointer and it will crash.

90
00:06:27.720 --> 00:06:33.690
So we should give it a condition by which if it does for some reason not point to anything at that moment

91
00:06:33.690 --> 00:06:36.300
in time it doesn't crash our game.

92
00:06:36.470 --> 00:06:38.100
I'm going to move the log back up here.

93
00:06:38.130 --> 00:06:42.010
I don't think we're ever going to see this printed out but it's there in case.

94
00:06:42.310 --> 00:06:42.700
OK.

95
00:06:42.710 --> 00:06:44.450
So that's their area all done.

96
00:06:44.460 --> 00:06:45.820
Let's hide that chunk.

97
00:06:45.900 --> 00:06:47.010
So let's have a look at the.

98
00:06:47.030 --> 00:06:48.210
Grab function.

99
00:06:48.270 --> 00:06:54.140
Now this is the chunk of code here from line 51 to line 59 that we're repeating several times.

100
00:06:54.140 --> 00:06:58.590
That's a great idea to refactor that's out now now what we would call that.

101
00:06:58.590 --> 00:07:02.490
I'm not quite sure at the moment well we'll think about that but let's start at the very top.

102
00:07:02.490 --> 00:07:07.920
Do we still want the grabber pressed to come into the log whenever we click the key.

103
00:07:08.430 --> 00:07:10.830
Well we know it's working now and we put that there.

104
00:07:10.830 --> 00:07:14.960
So we knew it was working before we had any implementation at all.

105
00:07:14.970 --> 00:07:19.190
So I'm quite happy to get rid of those lines and just starts here.

106
00:07:19.350 --> 00:07:19.590
Okay.

107
00:07:19.620 --> 00:07:23.330
So how do we go ahead and approach this in this particular case.

108
00:07:23.340 --> 00:07:28.440
What we're looking to be returned from the function is this line trace and that's ultimately what all

109
00:07:28.440 --> 00:07:30.210
of this is to calculate.

110
00:07:30.210 --> 00:07:34.160
So we can use it down here on line 69.

111
00:07:34.320 --> 00:07:34.680
Okay.

112
00:07:34.680 --> 00:07:40.830
And I think later on we need the player viewpoint location as well so we may have to create two functions.

113
00:07:40.890 --> 00:07:46.350
And I think there's another way that we can approach it as well but I'll leave that to another time.

114
00:07:46.350 --> 00:07:46.650
Okay.

115
00:07:46.680 --> 00:07:52.460
So the line trace end is going to equal the player viewpoint location plus the player viewpoint rotations

116
00:07:52.470 --> 00:07:52.740
of it.

117
00:07:52.800 --> 00:07:53.030
Okay.

118
00:07:53.460 --> 00:07:53.670
Okay.

119
00:07:53.680 --> 00:07:56.910
So before we go ahead and create the function what is it returning.

120
00:07:56.910 --> 00:08:01.290
Well it's returning an effector line trace and that will be the ultimate goal here.

121
00:08:01.290 --> 00:08:03.010
So we'll go to the header file.

122
00:08:03.060 --> 00:08:03.260
Okay.

123
00:08:03.270 --> 00:08:09.570
So what are we doing here we are going to return the line trace and.

124
00:08:09.600 --> 00:08:11.850
And once we've done that.

125
00:08:11.850 --> 00:08:16.920
So what are we returning where we're returning an F vector and we could call it many things.

126
00:08:16.920 --> 00:08:22.110
Naming is important but what I come up with now is probably not what you came up with during the challenge

127
00:08:22.260 --> 00:08:24.840
but it's absolutely fine if you've named it differently.

128
00:08:24.870 --> 00:08:30.630
So this is going to going gets for us the players reach or something along those lines.

129
00:08:30.810 --> 00:08:34.650
And it is actually going to be com Steven though we use reach.

130
00:08:34.650 --> 00:08:39.240
We're not modifying its tool so I think that would be fine to have it as a console function.

131
00:08:39.360 --> 00:08:41.420
Let's go back over to the implementation.

132
00:08:41.430 --> 00:08:44.190
I'm going to copy the get player reach.

133
00:08:44.340 --> 00:08:46.480
Otherwise I'll probably mis type it.

134
00:08:46.480 --> 00:08:49.260
That just makes it a bit easier when we come down here.

135
00:08:49.350 --> 00:08:53.610
I'm just going to keep it in line at the moment and then I'm just going to keep it close at the moment

136
00:08:53.610 --> 00:08:56.310
and then later on I can shift it around if necessary.

137
00:08:56.310 --> 00:08:59.660
So this is returning and Effexor as we already know.

138
00:08:59.880 --> 00:09:05.760
And then we need are you grabber a long column for the scope operator and then get the players reach

139
00:09:06.360 --> 00:09:07.330
now.

140
00:09:07.800 --> 00:09:09.630
Why is there a red squiggle under here.

141
00:09:09.630 --> 00:09:15.240
Well remember that this is a contest function so we need to make sure that the declaration and the definition

142
00:09:15.570 --> 00:09:20.280
of the same thing because you can have both types of functions next to one another depending on what

143
00:09:20.280 --> 00:09:21.300
code you're writing.

144
00:09:21.860 --> 00:09:22.130
OK.

145
00:09:22.140 --> 00:09:23.610
So what are we dumping in here.

146
00:09:23.610 --> 00:09:29.100
Well we're going to go ahead and grab line 49 to 57 and pop it down here.

147
00:09:29.100 --> 00:09:34.860
There are a couple of things that we could do in order to store the line trace and what we need to return

148
00:09:34.860 --> 00:09:35.040
it.

149
00:09:35.090 --> 00:09:39.510
Let's let's focus on just finishing off this function first and then we'll come back up and make sure

150
00:09:39.510 --> 00:09:43.140
it's working and running up in the grab function.

151
00:09:43.140 --> 00:09:48.660
So at this point in time you may be tempted to go return the line trace end because that's what we've

152
00:09:48.840 --> 00:09:57.840
gone and gotten but we're storing it temporarily and then returning it seems like a waste of a line

153
00:09:57.840 --> 00:10:03.830
of code where we could just return this result which is essentially the line trace.

154
00:10:03.840 --> 00:10:11.490
And so instead of effective line trace and equaling that we can simply return the results and the return

155
00:10:11.490 --> 00:10:13.300
itself will be of type effect.

156
00:10:13.300 --> 00:10:14.630
So we've already decided that.

157
00:10:15.100 --> 00:10:15.370
Okay.

158
00:10:15.390 --> 00:10:17.760
So how do we go ahead and use that's up here.

159
00:10:17.760 --> 00:10:22.590
Well first of all I'm going to remove a couple of those lines and the line trace end will the line trace

160
00:10:22.620 --> 00:10:25.010
end is what this is being returned.

161
00:10:25.020 --> 00:10:30.240
So we can literally put the gets players reach in here and that is essentially the effect that it's

162
00:10:30.240 --> 00:10:30.930
asking for.

163
00:10:31.700 --> 00:10:32.540
Okay.

164
00:10:32.610 --> 00:10:34.060
I think that's good.

165
00:10:34.080 --> 00:10:38.080
Let's go ahead and hide that's out the way get the players reach.

166
00:10:38.160 --> 00:10:44.010
Now we may have to also get the players location as well there may be a couple of ways of doing that

167
00:10:44.790 --> 00:10:48.840
but I'm happy with this for the moment let's go down to the next release.

168
00:10:48.840 --> 00:10:53.520
Well we don't want it locking out any more that the grabbers not no longer being pressed that key we

169
00:10:53.520 --> 00:10:57.660
know it's working and we know this base is working so we just type out the way that was the easiest

170
00:10:57.660 --> 00:11:02.710
bit ever and there's an extra whitespace just here okay.

171
00:11:02.940 --> 00:11:03.810
The Tick component.

172
00:11:03.810 --> 00:11:07.320
So we've got our funky code in here again.

173
00:11:07.320 --> 00:11:09.210
So where are we using this.

174
00:11:09.210 --> 00:11:10.490
Let's have a look through our code.

175
00:11:10.500 --> 00:11:15.060
So all of this bits of code here from 86 to 95.

176
00:11:15.060 --> 00:11:17.550
So all of that is being used.

177
00:11:17.550 --> 00:11:20.290
So we could use line trace and here at 100.

178
00:11:20.810 --> 00:11:23.930
Now we're not having to use the player viewpoint location.

179
00:11:23.940 --> 00:11:25.320
I think that's further down here.

180
00:11:25.860 --> 00:11:32.400
So at this point we can just get players reach through that function call in there and then all of this

181
00:11:32.400 --> 00:11:38.880
code from 86 down to 96 will not 96 or 95 can be deleted.

182
00:11:38.880 --> 00:11:43.960
I'm going to add a little space in there OK that looks pretty good so far.

183
00:11:44.380 --> 00:11:47.950
And yeah I think that's absolutely fine.

184
00:11:47.950 --> 00:11:52.610
Of course the proof of the pudding will be when we come to run our code making sure it works.

185
00:11:52.690 --> 00:11:56.260
Next bits get the first physics body in reach.

186
00:11:56.260 --> 00:11:59.090
So this is where we're using our code again.

187
00:11:59.200 --> 00:12:00.550
But what are we doing with it.

188
00:12:00.550 --> 00:12:03.320
Well further down here we're using the line trace end.

189
00:12:03.460 --> 00:12:08.870
But we're also using the player viewpoint location which can we get any other way.

190
00:12:08.930 --> 00:12:15.730
Maybe if we choose to go and get the player's viewpoint location using this get well get first player

191
00:12:15.730 --> 00:12:21.790
controller get viewpoint then we're not going to be able to reduce our code as much.

192
00:12:22.270 --> 00:12:29.050
So I think we can still refactor this out and in stead of having our get players reach it we can just

193
00:12:29.050 --> 00:12:31.890
have a get to play a position function instead.

194
00:12:31.990 --> 00:12:35.530
And then we can call that function here instead.

195
00:12:35.530 --> 00:12:36.270
So let's go ahead.

196
00:12:36.280 --> 00:12:40.010
I'm going to do that just underneath and then I'll probably bring the two bits of code together just

197
00:12:40.100 --> 00:12:43.560
so I can keep everything on the screen at the same time.

198
00:12:43.600 --> 00:12:44.780
So what is this going to return.

199
00:12:44.770 --> 00:12:46.210
It's going to return an effector.

200
00:12:46.630 --> 00:12:53.770
So this is going to get player's location or rather let's be specific here.

201
00:12:53.770 --> 00:12:56.910
It's going to be the position in the world.

202
00:12:56.920 --> 00:12:57.870
That's the important thing.

203
00:12:57.870 --> 00:13:01.020
Being specific with your comments always fine.

204
00:13:01.300 --> 00:13:01.710
Okay.

205
00:13:02.290 --> 00:13:03.310
So what do we need.

206
00:13:03.310 --> 00:13:06.610
Well it's going to return an F factor as always.

207
00:13:06.640 --> 00:13:07.840
And what are we going to call it.

208
00:13:07.840 --> 00:13:10.340
We were going to call it gets.

209
00:13:10.420 --> 00:13:13.980
So let's get the player's world position instead of world polls.

210
00:13:14.080 --> 00:13:16.150
I'm going to keep it short like that.

211
00:13:16.150 --> 00:13:20.390
Once again it's going to be a contest function in this particular case and do that.

212
00:13:20.470 --> 00:13:20.700
Okay.

213
00:13:20.740 --> 00:13:22.280
So that is it declared.

214
00:13:22.300 --> 00:13:24.590
Let's go ahead and define it down here.

215
00:13:24.610 --> 00:13:26.690
So once again it's a effector.

216
00:13:27.350 --> 00:13:30.450
Okay so let's go ahead and define it down here.

217
00:13:30.460 --> 00:13:37.010
So F vector and then it's going to be you Grandpa colon colon and whatever we just called it.

218
00:13:37.030 --> 00:13:39.980
So I'm gonna go ahead and grab that.

219
00:13:40.000 --> 00:13:40.910
Bring it down.

220
00:13:41.050 --> 00:13:45.750
Pop it in and that's before it's gonna be a contest function.

221
00:13:45.790 --> 00:13:48.020
Let's open up our curly braces.

222
00:13:48.100 --> 00:13:48.960
Bring it down.

223
00:13:48.970 --> 00:13:49.230
Okay.

224
00:13:49.240 --> 00:13:50.780
So what is going in here.

225
00:13:50.800 --> 00:13:54.750
Well it is just going to be this for the moment to keep our refactor simple.

226
00:13:54.910 --> 00:14:00.850
And of course if you've gone off and explored other ways of getting the position of the player in the

227
00:14:00.850 --> 00:14:02.880
world then you could use that instead.

228
00:14:02.890 --> 00:14:08.140
I know of a few ways we can go and get the players location or position in the world.

229
00:14:08.440 --> 00:14:10.680
And there's no right or wrong for this.

230
00:14:10.690 --> 00:14:13.380
It would just depend what you're trying to do at the time.

231
00:14:13.690 --> 00:14:15.400
So let's delete the extra line we've got there.

232
00:14:15.400 --> 00:14:18.170
So we're really just moving things around a little at the moment.

233
00:14:18.340 --> 00:14:23.410
But this should mean after a bit of tidy up every hit result hits.

234
00:14:23.410 --> 00:14:23.860
Okay.

235
00:14:23.880 --> 00:14:24.340
Get well.

236
00:14:24.340 --> 00:14:26.200
So this is where we were using it.

237
00:14:26.200 --> 00:14:29.920
So this is where we can get the players reach.

238
00:14:29.980 --> 00:14:31.460
And it's world position.

239
00:14:31.480 --> 00:14:35.420
So remember they are function calls seeking to require your parentheses.

240
00:14:35.530 --> 00:14:36.940
Okay.

241
00:14:37.360 --> 00:14:42.280
I think that's that's area done there now I can't collapse that because there's this other thing at

242
00:14:42.280 --> 00:14:46.120
the bottom here and this is all about printing out to the count.

243
00:14:46.120 --> 00:14:52.390
So what actual objects we've hit in game and just like the whether or not the grab a button has been

244
00:14:52.390 --> 00:14:58.810
pressed I'm quite happy that we don't need any of this code any more so we can go ahead here and just

245
00:14:58.810 --> 00:15:00.540
remove that bit.

246
00:15:01.410 --> 00:15:03.490
Hey that's looking good.

247
00:15:03.490 --> 00:15:11.080
And this chunk of code here I do want to keep it with the other getter so I can move the other get it

248
00:15:11.080 --> 00:15:13.250
down or bring this one up.

249
00:15:13.260 --> 00:15:15.910
It's entirely up to me.

250
00:15:15.910 --> 00:15:18.090
So where is the other guests get players reach.

251
00:15:18.100 --> 00:15:22.710
I'm going to move that down in this particular case with the old key and arrows.

252
00:15:22.720 --> 00:15:27.670
So get first you grab I should a collapse that could have been a lot easier to move around so get the

253
00:15:27.670 --> 00:15:30.450
location get the players reach.

254
00:15:30.490 --> 00:15:38.010
I think that's absolutely fine we go and I've messed up my curly braces when I was moving.

255
00:15:38.070 --> 00:15:43.230
So that's one thing to just watch out for when you're moving things around it's very easy to inadvertently

256
00:15:43.230 --> 00:15:47.560
delete something that's going to cause you a bit of a headache with the syntax of your code.

257
00:15:47.610 --> 00:15:51.300
Okay that's fine that's fine.

258
00:15:51.300 --> 00:15:53.420
And this bit here isn't final yet.

259
00:15:53.430 --> 00:16:00.240
So they get world position isn't fully done because we just need the player viewpoint location and that

260
00:16:00.240 --> 00:16:02.070
is what we're returning.

261
00:16:02.070 --> 00:16:06.040
So let's go ahead and return the player viewpoint location.

262
00:16:06.120 --> 00:16:13.360
If we go ahead and and that's the distinct difference between the gets players well position and get

263
00:16:13.360 --> 00:16:16.770
the players reach Okay that looks good to me.

264
00:16:16.770 --> 00:16:22.350
Famous last words I know but let's go ahead save our file and go over into unreal.

265
00:16:22.400 --> 00:16:24.580
OK let's go ahead and press compile.

266
00:16:24.660 --> 00:16:27.480
Now I am expecting that to be at least one error.

267
00:16:27.540 --> 00:16:28.520
Always is one error.

268
00:16:28.530 --> 00:16:29.100
But that's good.

269
00:16:29.100 --> 00:16:34.640
That gives us practice making sure we recognize these errors as we're typing them.

270
00:16:34.680 --> 00:16:35.020
Yes.

271
00:16:35.040 --> 00:16:35.300
OK.

272
00:16:35.310 --> 00:16:38.120
We have got a problem let's go ahead and show the log.

273
00:16:38.190 --> 00:16:40.340
I'm glad it just.

274
00:16:40.380 --> 00:16:41.250
Here we go.

275
00:16:41.310 --> 00:16:46.040
So control reaches end of a non void function what line are we talking about.

276
00:16:46.110 --> 00:16:48.720
Grab a 95 line 95.

277
00:16:48.720 --> 00:16:54.090
Let's go have a look and I'm looking at this saying should this be returning something.

278
00:16:54.090 --> 00:16:56.120
The answer is yes.

279
00:16:56.160 --> 00:17:02.190
How I miss that I don't know so we were returning here and F hit results or supposed to be at least.

280
00:17:02.190 --> 00:17:03.500
And it's not returning anything.

281
00:17:03.900 --> 00:17:06.910
So let's go ahead and return.

282
00:17:07.140 --> 00:17:09.770
In this case we can just return hits.

283
00:17:09.780 --> 00:17:10.170
OK.

284
00:17:10.200 --> 00:17:11.420
I think that's all sorted.

285
00:17:11.430 --> 00:17:18.900
Let's go ahead save our work and go back over into one real okay so let's compile for compilers complete.

286
00:17:18.900 --> 00:17:20.500
Fingers crossed when we press play.

287
00:17:20.650 --> 00:17:26.020
You know crashing and we can throw the cube across the room and let's pick up the cone.

288
00:17:26.220 --> 00:17:26.620
There we go.

289
00:17:26.640 --> 00:17:32.160
And we can spot pop it over here in the corner and in a bit we'll give these objects mass and us for

290
00:17:32.160 --> 00:17:35.520
that matter and then we'll be able to escape the room.

291
00:17:35.520 --> 00:17:36.560
Awesome.

292
00:17:36.630 --> 00:17:37.830
How are you guys getting on.

293
00:17:37.830 --> 00:17:40.980
That was quite a big lots of refactoring to do.

294
00:17:41.340 --> 00:17:44.870
I found the challenge of it quite fun and I hope you do as well.

295
00:17:44.880 --> 00:17:49.980
Now if you came up with any other solutions other than the ones that I've come up with then I'd love

296
00:17:49.980 --> 00:17:53.850
to see your full process and the way that you approach this challenge.

297
00:17:53.850 --> 00:17:59.560
There won't be any right or wrong answer persay as long as everything is working at the end of it.

298
00:17:59.580 --> 00:18:02.490
So that's it for this lecture and I'll see you all in the next one.
