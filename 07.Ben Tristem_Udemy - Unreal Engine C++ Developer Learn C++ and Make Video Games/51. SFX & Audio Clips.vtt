WEBVTT
1
00:00:04.810 --> 00:00:07.150
Hello everybody and welcome in this lecture.

2
00:00:07.150 --> 00:00:09.220
We're going to throw this out the way.

3
00:00:09.240 --> 00:00:09.630
There we go.

4
00:00:10.150 --> 00:00:14.950
So in this lecture we are going to add a sound to our doors at the moment is going to play the same

5
00:00:14.950 --> 00:00:15.310
sounds.

6
00:00:15.310 --> 00:00:16.990
You can change it out if you want.

7
00:00:16.990 --> 00:00:19.750
And I think I'm a bit short actually at the moment.

8
00:00:19.750 --> 00:00:21.970
I do look tiny compared to this door.

9
00:00:22.000 --> 00:00:25.150
I can't see out so I'm going to adjust the height of the eyes as well.

10
00:00:25.150 --> 00:00:33.050
But we've got a sound playing when the doors open and a sound playing when the doors shut.

11
00:00:33.050 --> 00:00:35.830
Let's go do this okay everybody.

12
00:00:35.910 --> 00:00:37.450
So let's get started with this.

13
00:00:37.450 --> 00:00:42.700
The first thing we want to do is select the doors and go ahead and add a new component much like we

14
00:00:42.700 --> 00:00:43.780
would normally do.

15
00:00:43.900 --> 00:00:49.480
And we're going to add an audio component and we can see there if we hover over it's an audio component

16
00:00:49.510 --> 00:00:54.100
is used to play sound and we hold down control and also at the same time we can go down to the full

17
00:00:54.100 --> 00:00:58.140
documentation and that will open up and give us lots of information about it.

18
00:00:58.270 --> 00:01:02.720
Which of course you can go through and read and familiarize yourself with the details.

19
00:01:02.770 --> 00:01:07.990
However much like the open door component we're going to have to make sure we protect ourselves because

20
00:01:08.020 --> 00:01:16.390
if we go ahead and add to that audio component and let's just call it door sound if we go ahead and

21
00:01:16.480 --> 00:01:22.180
add that's to our mesh like we've done we're going to have to make sure we protect ourselves as well.

22
00:01:22.180 --> 00:01:28.080
Because if for some reason a door doesn't have that on we will end up with a crash.

23
00:01:28.090 --> 00:01:31.470
Again as we've seen before now we've got another door here.

24
00:01:31.480 --> 00:01:35.350
I'm going to go ahead and make sure that they both got an audio source on them.

25
00:01:35.350 --> 00:01:38.280
And here we go audio one again I'm just going to call this door.

26
00:01:38.330 --> 00:01:43.020
I call this one door sound Door door sound is absolutely fine.

27
00:01:43.020 --> 00:01:43.290
Okay.

28
00:01:43.300 --> 00:01:48.270
So with those named appropriately let's go over into the code and start having a look.

29
00:01:48.280 --> 00:01:53.790
So the first thing to do is work out how we go into going get that particular door sound.

30
00:01:53.950 --> 00:01:56.110
And we've already done something similar in the past.

31
00:01:56.110 --> 00:02:02.530
If we go and find in our grab a component we the input component we go and get the owner and then we

32
00:02:02.530 --> 00:02:09.810
find a component by class to go back up the hierarchy and then we look for a specific type of component.

33
00:02:09.820 --> 00:02:14.560
Now this point you might not be sure what you're looking for which can be a bit of a disadvantage but

34
00:02:14.560 --> 00:02:16.920
we know it's going to be a component.

35
00:02:16.930 --> 00:02:23.130
We know it's going to be perhaps sound perhaps audio and it's likely to have you on the front as well

36
00:02:24.260 --> 00:02:24.560
okay.

37
00:02:24.560 --> 00:02:30.440
So after a tiny bit of googling you can very quickly find the fact that that you audio component is

38
00:02:30.440 --> 00:02:34.490
likely what you're looking for is used to play a sound that's exactly what we want.

39
00:02:35.360 --> 00:02:39.630
Now if we go down here we can see that there's a hash include.

40
00:02:39.770 --> 00:02:42.470
So we're going to include that because that's what we're using.

41
00:02:42.470 --> 00:02:46.220
There are plenty of variables down here and of course when we get to the functions we can see the other

42
00:02:46.220 --> 00:02:47.580
things that we can do.

43
00:02:47.610 --> 00:02:52.280
So there's quite a lot here and it will vary how you use this depending on whether it's an instance

44
00:02:52.280 --> 00:02:56.300
of a sound where a door is opening or perhaps music playing in the background.

45
00:02:56.300 --> 00:03:01.630
You're going to play those slightly differently and play is probably what we're looking for here.

46
00:03:01.630 --> 00:03:07.310
Here we go start a sound playing on an audio component so we know what function we're going to call

47
00:03:07.690 --> 00:03:09.550
and we can actually change the start time.

48
00:03:09.620 --> 00:03:15.140
Now the audio sound that we are going to use is attached in the resources against this lecture.

49
00:03:15.200 --> 00:03:22.010
So if you go ahead and download that now within the content folder I'm going to make a new folder called

50
00:03:22.010 --> 00:03:28.120
sounds and then within there I can import and you should also have.

51
00:03:28.130 --> 00:03:30.310
Let's go to my downloads.

52
00:03:30.320 --> 00:03:30.680
Here we go.

53
00:03:30.680 --> 00:03:34.830
The door locks sound it's a very short sound if we press play.

54
00:03:35.360 --> 00:03:37.290
We will get a preview of it.

55
00:03:37.340 --> 00:03:44.030
Now there are a couple of ways of attaching sound components to objects or actors in our scene with

56
00:03:44.030 --> 00:03:47.300
the objects selected and the door sound component.

57
00:03:47.300 --> 00:03:51.190
There we can just click and drag the door lock across.

58
00:03:51.200 --> 00:03:53.710
That's one way of popping it in there.

59
00:03:53.720 --> 00:03:55.690
Then the details tab itself.

60
00:03:55.800 --> 00:03:58.990
Let's just make this area a bit bigger so we can focus on it.

61
00:03:59.090 --> 00:04:04.430
The other door here for instance if we go to the door sound we can use this dropdown to select it or

62
00:04:04.430 --> 00:04:05.840
search assets.

63
00:04:05.840 --> 00:04:08.110
So there you go two ways of doing that.

64
00:04:08.120 --> 00:04:12.320
So we have a door lock sound on the how are we going to go ahead and actually play it.

65
00:04:12.590 --> 00:04:19.970
Well we're going to go ahead and find the owner and then look back up the hierarchy for our sound and

66
00:04:19.970 --> 00:04:25.250
if we just bring our documentation back up we can go and grab the include file that we need.

67
00:04:25.250 --> 00:04:32.810
So this is components audio so let's copy that over and our code at the top of the Open Door implementation.

68
00:04:32.810 --> 00:04:34.840
We can pop it in there.

69
00:04:35.970 --> 00:04:38.320
Making sure we're only including the bits that we need to.

70
00:04:38.770 --> 00:04:39.110
OK.

71
00:04:39.120 --> 00:04:40.640
So now we have the hash include there.

72
00:04:40.670 --> 00:04:45.890
Let's go ahead and look at the rest of our code how we go going to go ahead and grab that will we need

73
00:04:45.890 --> 00:04:48.230
to store it somewhere as well.

74
00:04:48.230 --> 00:04:52.230
So let's draw inspiration for from what we've done before.

75
00:04:52.280 --> 00:04:55.040
So here we've got the input component.

76
00:04:55.310 --> 00:05:01.550
And if we have a look at the header file that input component was declared like so and then initialized

77
00:05:01.550 --> 00:05:04.780
with a null pointer and we're going to have to do a similar thing here.

78
00:05:05.030 --> 00:05:09.070
But for our audio component and we can keep the naming very similar.

79
00:05:09.890 --> 00:05:10.900
So let's go ahead.

80
00:05:10.940 --> 00:05:12.790
We've got a new property here.

81
00:05:13.070 --> 00:05:17.910
And one thing that we should probably do whilst we're here we haven't really talked about it.

82
00:05:17.930 --> 00:05:23.180
If we go to the open door had a file we were using new property and edit anywhere for anything that

83
00:05:23.180 --> 00:05:24.970
we wanted to expose.

84
00:05:24.980 --> 00:05:31.490
Now ideally according to the unreal documentation anything that's got you preceding it should also have

85
00:05:31.490 --> 00:05:33.480
the property there.

86
00:05:33.560 --> 00:05:38.360
Otherwise that macro won't be able to tidy and clean things up for us.

87
00:05:38.420 --> 00:05:40.400
That's kind of the basis of what's going on there.

88
00:05:40.430 --> 00:05:48.260
So this should really read you property and then we've just got our empty brackets there and the same

89
00:05:48.260 --> 00:05:49.430
for the one above.

90
00:05:49.970 --> 00:05:52.270
And let's give ourselves with the space there.

91
00:05:52.730 --> 00:05:52.990
OK.

92
00:05:53.030 --> 00:05:57.040
So with that in mind are there any others that we need to change with that.

93
00:05:57.040 --> 00:05:58.200
I don't think so.

94
00:05:58.220 --> 00:06:05.660
Sit down here we're going to have a new property again and it's going to be a new audio component and

95
00:06:05.660 --> 00:06:10.160
we can see it's come up there and it's going to be a pointer just like before and I'm going to call

96
00:06:10.160 --> 00:06:17.930
this audio components and of course we need to initialize it as a null pointer otherwise we could have

97
00:06:17.940 --> 00:06:19.220
an undefined behavior.

98
00:06:19.730 --> 00:06:20.210
Okay.

99
00:06:20.210 --> 00:06:22.340
So that's that bits of it done.

100
00:06:22.370 --> 00:06:26.540
The next thing we need to do in the implementation is actually go ahead and get it.

101
00:06:26.540 --> 00:06:32.420
So once again if we refer back to the grabber what we set up the income input component and we find

102
00:06:32.420 --> 00:06:33.780
the physics handle.

103
00:06:33.800 --> 00:06:40.340
So what we were doing at this stage here well in this particular case we need to find the audio component

104
00:06:40.550 --> 00:06:46.820
so let's go back to I had a file before we do this and let's go to our function set of functions up

105
00:06:46.820 --> 00:06:47.550
here.

106
00:06:47.630 --> 00:06:50.820
Now what is it returning it's not returning anything.

107
00:06:51.370 --> 00:06:58.060
And we're going to call it find audio component and it certainly isn't changing any of our other values

108
00:06:58.060 --> 00:07:03.260
so can be a concert over in the implementation and added in here for the moment.

109
00:07:03.260 --> 00:07:09.560
So we've got a void you open door Columbo on find audio component.

110
00:07:09.560 --> 00:07:10.580
Excellent.

111
00:07:10.580 --> 00:07:12.960
It's a constant function.

112
00:07:13.040 --> 00:07:15.250
Let's go ahead and define it.

113
00:07:15.980 --> 00:07:22.400
Now this is the parts where we can also pop in an error log if necessary.

114
00:07:22.400 --> 00:07:30.020
So here is where we take our audio component variable that we've made and we Satyarthi could too.

115
00:07:30.070 --> 00:07:35.450
Now if you feel brave enough to copy essentially what we've done before have you want a mini challenge

116
00:07:35.450 --> 00:07:39.690
here you can try and complete this and for the rest of us.

117
00:07:39.720 --> 00:07:42.420
Well this is going to be gets owner.

118
00:07:42.570 --> 00:07:48.250
So we've gone up the hierarchy now we need to go back down and one of the ways of doing that is to find

119
00:07:48.270 --> 00:07:50.920
component by class we open up our Chevron.

120
00:07:51.180 --> 00:07:57.880
Now what we looking for we're looking for a new audio component that looks pretty good to me.

121
00:07:57.950 --> 00:08:04.610
Now if there's not one of these this would be a great place to actually alert us to that fact.

122
00:08:04.620 --> 00:08:07.080
Now why has this got a squiggle on it.

123
00:08:07.080 --> 00:08:09.640
It turns out that this can't be const.

124
00:08:09.780 --> 00:08:14.760
That's absolutely fine let's remove that from a function.

125
00:08:14.760 --> 00:08:15.850
Perfect.

126
00:08:15.900 --> 00:08:18.710
So this is where we can go ahead and protect ourselves.

127
00:08:18.710 --> 00:08:28.680
So here we can say if we could say not audio components we can log out say you a log log temp comma.

128
00:08:28.680 --> 00:08:31.080
This is the severity of an error.

129
00:08:31.100 --> 00:08:37.590
Because if we didn't catch it it could potentially cause a crash as an error and then our text.

130
00:08:38.160 --> 00:08:45.240
What are we going to say here we're going to say percentage s missing audio component or something along

131
00:08:45.240 --> 00:08:46.530
those lines.

132
00:08:46.770 --> 00:08:52.980
And then of course we need to we need to d reference for the F string we get home now and then we get

133
00:08:53.010 --> 00:08:54.370
name I believe.

134
00:08:54.390 --> 00:08:54.600
Yeah.

135
00:08:54.630 --> 00:08:55.920
There we go.

136
00:08:55.950 --> 00:08:59.160
And finally the semicolon on the end.

137
00:08:59.190 --> 00:09:05.550
Now if we go down to where the door opens Here we go and we want to play that sound how are we going

138
00:09:05.550 --> 00:09:06.030
to do it.

139
00:09:06.060 --> 00:09:13.350
Well we can simply go audio component and then we can call that play function on it.

140
00:09:13.500 --> 00:09:19.500
Now there will be a potential issue with this but that will be part of your challenge to solve because

141
00:09:19.500 --> 00:09:25.920
we're also going to play it when the door shuts and if we do that we're going to end up with a little

142
00:09:25.920 --> 00:09:26.490
bit of an issue.

143
00:09:26.520 --> 00:09:28.240
Let's find out what it is.

144
00:09:28.290 --> 00:09:35.830
Let's compile our code now apparently there's a problem with line 42 and I've been staring at it for

145
00:09:35.830 --> 00:09:41.560
about 30 seconds and I realize that I tried to do an error operator and failed and that was the problem

146
00:09:41.560 --> 00:09:41.880
there.

147
00:09:42.040 --> 00:09:45.190
Even though the red squiggle was all the way over here talk about misdirection.

148
00:09:45.220 --> 00:09:52.050
Okay let's check our code I'm going to press play and I'm going to stop pressing play quite quickly.

149
00:09:52.060 --> 00:09:52.470
You ready

150
00:09:56.940 --> 00:09:57.490
okay.

151
00:09:57.580 --> 00:10:03.700
So that's the sound playing over and over and over and over again and we don't want that and that will

152
00:10:03.700 --> 00:10:05.700
be part of your challenge to sort out.

153
00:10:06.040 --> 00:10:11.500
However the other thing that I want to show you before then is on the sound itself if you go to your

154
00:10:11.500 --> 00:10:15.550
door sound component and scroll all the way down in the details.

155
00:10:15.790 --> 00:10:20.830
This will catch you out under activation there's an auto activates that will play the sound.

156
00:10:20.860 --> 00:10:23.390
The moment that you press play.

157
00:10:23.740 --> 00:10:24.970
We don't want that on.

158
00:10:24.970 --> 00:10:32.150
Otherwise you'll be confused as to why a sound is playing when you've not asked for it in code.

159
00:10:32.150 --> 00:10:32.620
Okay.

160
00:10:32.650 --> 00:10:37.040
So that leads us onto our challenge okay.

161
00:10:37.060 --> 00:10:38.150
So we're almost there.

162
00:10:38.160 --> 00:10:40.800
And your challenge is fuck the system.

163
00:10:40.800 --> 00:10:41.190
Okay.

164
00:10:41.220 --> 00:10:44.110
So your challenge is for consistency and readability.

165
00:10:44.280 --> 00:10:47.520
But the pressure plate log in it's own function.

166
00:10:47.520 --> 00:10:53.720
So then the begin play reads really well then the big one here makes the sound play once on open door

167
00:10:53.760 --> 00:10:55.850
and once on closed door.

168
00:10:55.860 --> 00:11:01.650
Now if you don't want a hint pause the video now and give that a go for the rest of us.

169
00:11:01.690 --> 00:11:06.160
Well the possible hints here because you could approach it in a few different ways.

170
00:11:06.280 --> 00:11:13.950
Use at least one binary switch as in a two to track if the sound has been played.

171
00:11:13.950 --> 00:11:18.640
So in that particular example you would have a boolean has the sound been played and you can set it

172
00:11:18.640 --> 00:11:22.340
to one if it has zero.

173
00:11:22.390 --> 00:11:28.730
If it hasn't played video now and give that a go Okay everybody Welcome back.

174
00:11:28.760 --> 00:11:35.090
Let's go ahead make our code a little bit more consistent and make the sound only play the ones.

175
00:11:35.180 --> 00:11:41.090
Okay so the first thing here is I'm going to tidy up this if pressure plate that's going on here so

176
00:11:41.090 --> 00:11:44.330
that's going to be very similar to the find audio component.

177
00:11:44.360 --> 00:11:47.600
So we're going to find the pressure plates.

178
00:11:47.780 --> 00:11:52.460
Now again it is up to you which way round you do these sorts of things.

179
00:11:52.460 --> 00:11:59.510
I'm going to start here with find pressure plate so that's a call to a function that doesn't exist yet.

180
00:11:59.510 --> 00:12:03.590
Let's go ahead and create that function doesn't return anything.

181
00:12:03.620 --> 00:12:04.280
There we go.

182
00:12:04.340 --> 00:12:07.270
Let's go back into the implementation and right.

183
00:12:07.280 --> 00:12:14.630
That's who we got off find audio and then we're going to find pressure plates a void you open door.

184
00:12:14.690 --> 00:12:16.350
Caroline along fine pressure plates.

185
00:12:16.360 --> 00:12:17.740
Thirdly the semicolon there.

186
00:12:18.200 --> 00:12:25.840
Open up are curly braces and grab this bit of code here and pop it down here out of the way with the

187
00:12:25.840 --> 00:12:28.420
correct indentation for readability.

188
00:12:28.420 --> 00:12:30.370
OK so that looks good to me.

189
00:12:30.370 --> 00:12:34.750
I'm going to bring these two things together it's going to find the pressure plate.

190
00:12:34.870 --> 00:12:36.140
Find the audio component.

191
00:12:36.280 --> 00:12:41.860
If those don't exist it'll log out an error message which is really useful would check that in the moments

192
00:12:41.860 --> 00:12:45.490
as well and make sure it is working as expected.

193
00:12:45.490 --> 00:12:48.140
Now comes the the meat of it.

194
00:12:48.190 --> 00:12:51.320
We are going to be playing back the sound at the moment.

195
00:12:51.370 --> 00:12:54.350
Let's run through the code as the computer would.

196
00:12:54.450 --> 00:12:56.470
So we have a look at the Tick component.

197
00:12:56.470 --> 00:13:02.260
We're saying if the total mass of the actors is greater than the mass open the doors then we're going

198
00:13:02.260 --> 00:13:03.760
to open the door.

199
00:13:03.760 --> 00:13:07.240
So when we start the game open door won't be running but closed door well.

200
00:13:07.260 --> 00:13:08.960
And what does closed door do.

201
00:13:08.980 --> 00:13:15.400
Well every single frame it is playing the audio so we all need a binary switch to say stop playing the

202
00:13:15.400 --> 00:13:18.340
audio as entirely up to you how you manage this.

203
00:13:18.340 --> 00:13:22.610
I'm going to pop in the header file here.

204
00:13:22.730 --> 00:13:23.470
Billions.

205
00:13:23.470 --> 00:13:31.340
So I'm gonna have a boolean for Open Door sound and a boolean for closed door sound.

206
00:13:31.450 --> 00:13:33.900
Now I am going to set them some initial values.

207
00:13:33.970 --> 00:13:40.360
So thinking about the open door sound it will have not been played so we can set that equal to False

208
00:13:41.250 --> 00:13:43.410
the boolean for the closed door sound.

209
00:13:43.480 --> 00:13:45.530
Well it has already been closed.

210
00:13:45.640 --> 00:13:48.320
When we start the game they all start closed.

211
00:13:48.340 --> 00:13:50.190
So this is going to be true.

212
00:13:50.260 --> 00:13:53.160
I think that may come back to bite me.

213
00:13:53.170 --> 00:13:56.890
I'm not shocked by think that's the case that we need it right.

214
00:13:56.890 --> 00:14:06.740
The next thing we need to do here is once we played that sound we can say close door sound equals true.

215
00:14:07.120 --> 00:14:09.730
So it has actually happened now we played the sound.

216
00:14:09.730 --> 00:14:12.940
So now we can encapsulate that in a little if statement.

217
00:14:12.940 --> 00:14:16.720
So if closed door sound is not true.

218
00:14:16.750 --> 00:14:22.020
So if not closed or sound I mean would a better name for that be closed or sound played.

219
00:14:22.030 --> 00:14:29.050
I'm not sure but if not the closed door sound then what we want to do is play back the audio and set

220
00:14:29.050 --> 00:14:35.180
the closed door sound to true which means that if this continues to loop it won't play it anymore.

221
00:14:35.230 --> 00:14:36.610
So is that enough.

222
00:14:36.610 --> 00:14:37.660
No not quite.

223
00:14:37.660 --> 00:14:39.930
We need another layer of protection in here.

224
00:14:40.000 --> 00:14:45.320
We need to say Yves because we are using the audio component there.

225
00:14:45.400 --> 00:14:51.760
So if there isn't one for whatever reason if the code gets this far we say if not audio component return

226
00:14:52.170 --> 00:14:55.800
thus taking us all the way out of the closed door function.

227
00:14:55.850 --> 00:15:03.010
Okay I will add a bit whitespace in there so these things are conceptually separate and we could pop

228
00:15:03.010 --> 00:15:04.870
this in its own function as well.

229
00:15:04.870 --> 00:15:11.050
I'm going to leave it there for the moment for testing as compiler code cross fingers we've not made

230
00:15:11.050 --> 00:15:16.630
any mistakes okay with the compile complete when I press play I'm expecting no sound which is fine but

231
00:15:16.630 --> 00:15:21.720
when I now go into the trigger volume over here I'm expecting a continuous sound.

232
00:15:24.380 --> 00:15:27.800
And they you go the door shuts.

233
00:15:27.960 --> 00:15:28.440
Perfect.

234
00:15:28.470 --> 00:15:30.950
So that's what I want to happen.

235
00:15:30.950 --> 00:15:31.880
That looks good to me.

236
00:15:32.190 --> 00:15:35.050
Let's go and work on the open door side of things.

237
00:15:35.070 --> 00:15:39.570
Okay so we're going to have a very similar thing going on over here.

238
00:15:39.570 --> 00:15:41.910
So first of all let's protect ourselves.

239
00:15:41.910 --> 00:15:43.580
We know we're going to need to do that first.

240
00:15:43.610 --> 00:15:48.320
So if not audio component then we are going to return.

241
00:15:48.990 --> 00:15:56.380
Let's get rid of the extra characters appeared there and then we're going to say if so if not open doors

242
00:15:56.400 --> 00:15:57.000
sound.

243
00:15:57.020 --> 00:15:58.450
There we go.

244
00:15:58.560 --> 00:16:02.760
So saying if it hasn't played then we can go ahead and play it.

245
00:16:02.970 --> 00:16:09.090
And then finally we need to set the open door sound equal to true because it's played.

246
00:16:09.090 --> 00:16:10.820
Okay that looks good.

247
00:16:11.010 --> 00:16:11.510
I hope.

248
00:16:12.120 --> 00:16:19.090
Let's give it a little bit of separation that go over into one real and compile with a compile complete

249
00:16:19.250 --> 00:16:20.830
compress play.

250
00:16:20.830 --> 00:16:27.060
Now hopefully we will now trigger it and we're not quite there yet.

251
00:16:27.060 --> 00:16:28.150
Something's missing.

252
00:16:28.200 --> 00:16:29.820
So let's run through it logically.

253
00:16:29.850 --> 00:16:31.250
What is going on.

254
00:16:31.290 --> 00:16:35.430
So what is open door set to false.

255
00:16:35.430 --> 00:16:43.530
So we're saying if this is false play the sound and then set the open sound to true but nothing is setting

256
00:16:43.530 --> 00:16:47.480
it back to FALSE again so that it doesn't run.

257
00:16:47.570 --> 00:16:50.400
Let's sort out this indentation here as well.

258
00:16:51.420 --> 00:16:54.600
So think to prevent these bouncing backwards and forwards.

259
00:16:54.600 --> 00:16:59.850
What we need to do is just before this say that the open door.

260
00:16:59.880 --> 00:17:11.160
No the closed door sound sets to false and then at this point here on line 93 the open door sound is

261
00:17:11.160 --> 00:17:13.330
set to false.

262
00:17:13.410 --> 00:17:20.630
Let's save our code I believe that will fix the horrible noise compile our code with a compile complete

263
00:17:20.630 --> 00:17:22.430
let's press play.

264
00:17:22.430 --> 00:17:23.480
Excellent.

265
00:17:23.480 --> 00:17:24.630
Let's go back.

266
00:17:25.190 --> 00:17:27.860
It's open perfect.

267
00:17:28.010 --> 00:17:28.910
And it's closed.

268
00:17:29.030 --> 00:17:29.900
Excellent.

269
00:17:29.900 --> 00:17:32.900
Now let's test it and make sure it's working.

270
00:17:32.900 --> 00:17:35.630
So in the log here I'm just going to clear the log down.

271
00:17:35.630 --> 00:17:39.590
I'm going to go to one of my doors and remove the door sound component.

272
00:17:39.680 --> 00:17:42.030
I'm going to save my scene so that's it.

273
00:17:42.050 --> 00:17:46.250
If it does crash we won't have any show going to clear the log again and I'm going to press clock.

274
00:17:47.570 --> 00:17:53.300
Look at that we've got an error that the door itself over here is missing an audio component and all

275
00:17:53.300 --> 00:17:58.280
being well it should also mean we don't get any crashing.

276
00:17:58.310 --> 00:17:59.270
That's really awesome.

277
00:17:59.270 --> 00:18:05.840
So at the moment we can we can hear the door still working like that because while one of the doors

278
00:18:05.870 --> 00:18:07.150
does have it on.

279
00:18:07.220 --> 00:18:11.160
Okay so I'm gonna add the audio component back again.

280
00:18:11.170 --> 00:18:12.450
There we go.

281
00:18:12.450 --> 00:18:19.350
As useful as pick that up save it and the final thing I want to do there is we don't need to log out

282
00:18:19.350 --> 00:18:27.200
anymore what is on the pressure plate which is this bit down here so let's get rid of that and that's

283
00:18:27.230 --> 00:18:29.530
nice and clean.

284
00:18:29.680 --> 00:18:32.740
Okay so one final sweep through on the header file itself.

285
00:18:32.740 --> 00:18:39.630
I do want to say here that this tracks whether the sound has been played.

286
00:18:40.440 --> 00:18:40.830
OK.

287
00:18:40.840 --> 00:18:44.410
That I like and everything else here is fine.

288
00:18:44.410 --> 00:18:45.210
Brilliant.

289
00:18:45.250 --> 00:18:46.320
How did you guys get on.

290
00:18:46.920 --> 00:18:50.590
And that pretty much brings us to the end of this tech demo.

291
00:18:51.100 --> 00:18:57.730
So what we can do now is make our level a bit more exciting and make it more of a game and we'll be

292
00:18:57.730 --> 00:18:59.910
doing that over in the next lecture.
