0
1
00:00:01,130 --> 00:00:06,500
Hey and welcome to this lesson where we're going to check to see if the sum and the product of the player's
1

2
00:00:06,500 --> 00:00:12,160
guesses is equal to the CodeSum and CodeProduct variables we declared.
2

3
00:00:12,230 --> 00:00:19,310
So to do this we're going to be writing an if statement. We can use if statement to execute parts of
3

4
00:00:19,310 --> 00:00:20,010
our code.
4

5
00:00:20,090 --> 00:00:22,400
Only if a condition is met.
5

6
00:00:22,640 --> 00:00:26,270
And this is what an if statement looks like in C++.
6

7
00:00:26,300 --> 00:00:32,210
We start off by writing "if" and then we have these parentheses that contain the condition.
7

8
00:00:32,210 --> 00:00:38,720
We then have some curly braces that will contain the code that will be executed only if the condition
8

9
00:00:38,750 --> 00:00:39,680
is met.
9

10
00:00:39,680 --> 00:00:46,670
So for example our braces could contain a line to print a string to the terminal that says "you win" any
10

11
00:00:46,670 --> 00:00:52,630
code within these braces is known as a compound statement or a code block.
11

12
00:00:53,000 --> 00:00:57,240
So a condition is required in order for this code block to execute.
12

13
00:00:57,290 --> 00:01:02,690
We put the condition within these parentheses and we'll start off simple. In order for this code block
13

14
00:01:02,690 --> 00:01:06,290
to execute the condition will need to be true.
14

15
00:01:06,290 --> 00:01:12,350
If we didn't want this code block to execute we would want the condition to be false and right now I
15

16
00:01:12,350 --> 00:01:15,860
want you to implement your own if statement in your code.
16

17
00:01:15,860 --> 00:01:22,640
So underneath where you declare the GuessSume and GuessProduct implement your if statement. Hard code
17

18
00:01:22,730 --> 00:01:29,150
the condition as true then add a compound statement also known as a code block that will print a game
18

19
00:01:29,150 --> 00:01:35,210
winning message to the terminal. Then save your work compile your code and run your program and see what
19

20
00:01:35,210 --> 00:01:40,730
happens if you make the correct guess then run your program again and see what happens if you make the
20

21
00:01:40,730 --> 00:01:42,020
wrong guess.
21

22
00:01:42,080 --> 00:01:46,940
So pause here and have a go at implementing this if statement yourself and then we'll continue in a few
22

23
00:01:46,940 --> 00:01:47,540
moments
23

24
00:01:50,780 --> 00:01:55,880
Okay, so let's take a look at this together underneath where we declare our GuessSum and GuessProduct
24

25
00:01:55,880 --> 00:02:02,180
variables we can add a new line and we can start by typing if then we can add a space and we can open
25

26
00:02:02,180 --> 00:02:09,020
our parentheses that will contain the condition and we're gonna hard code in the condition as true for
26

27
00:02:09,020 --> 00:02:09,620
now.
27

28
00:02:09,860 --> 00:02:16,010
Then on a new line below this we can add our curly braces so we can start our compound statement.
28

29
00:02:16,010 --> 00:02:21,130
We're simply going to call cout to print a game winning message.
29

30
00:02:21,140 --> 00:02:25,660
We can just print something like "you win" to the terminal for now.
30

31
00:02:25,670 --> 00:02:33,650
Now let's check out what happens if we save our work and compile our code and then run Triple X.
31

32
00:02:33,950 --> 00:02:41,030
So if I enter the correct answer in which is 2 3 4 notice it displays our game winning message.
32

33
00:02:41,030 --> 00:02:49,180
But if we run the program again and enter 2 6 7 which is the wrong answer it still says you win.
33

34
00:02:49,190 --> 00:02:52,940
So this is because the if statement is hardcoded as true.
34

35
00:02:52,940 --> 00:03:01,490
If we set this to false and save our work and compile our code again and then run the program we can
35

36
00:03:01,490 --> 00:03:04,030
see that it doesn't print the game winning message.
36

37
00:03:04,040 --> 00:03:08,630
If we enter the wrong answer and if we run the program again it doesn't print the message even if we
37

38
00:03:08,630 --> 00:03:10,340
enter the correct answer.
38

39
00:03:10,340 --> 00:03:13,790
Again this is because the condition is hard coded in.
39

40
00:03:13,820 --> 00:03:18,220
So we need to create our own condition that is linked to our gameplay.
40

41
00:03:18,230 --> 00:03:20,560
We only want to print our game winning message.
41

42
00:03:20,810 --> 00:03:24,300
If the player has entered the correct answer.
42

43
00:03:24,530 --> 00:03:26,180
So we need a new condition.
43

44
00:03:26,180 --> 00:03:28,870
We can't hard code in true or false.
44

45
00:03:28,880 --> 00:03:34,580
But we can enter an expression that will return true or false. By the end of this lesson
45

46
00:03:34,610 --> 00:03:36,510
we want to print our game winning message
46

47
00:03:36,530 --> 00:03:43,610
if our GuessSum is equal to the CodeSum and if the GuessProduct is equal to the CodeProduct.
47

48
00:03:43,610 --> 00:03:47,020
But let's focus for now on the GuessSum.
48

49
00:03:47,060 --> 00:03:50,720
So how can we say if the GuessSum is equal to the CodeSum.
49

50
00:03:51,050 --> 00:03:52,470
Well it's quite easy to do.
50

51
00:03:52,490 --> 00:03:59,090
We start off with the variable GuessSum inside our condition and then after a space we can use a comparison
51

52
00:03:59,330 --> 00:04:02,300
operator to compare it with the CodeSum.
52

53
00:04:02,330 --> 00:04:09,440
This is the equality operator or the "equal to" operator which is symbolized by two equal signs.
53

54
00:04:09,560 --> 00:04:14,130
And we can use this to check to see if GuessSum is equal to CodeSum.
54

55
00:04:14,180 --> 00:04:18,930
And this will return true or false depending on this expression.
55

56
00:04:19,220 --> 00:04:25,610
And we must remember that this is two equal signs to do this comparison if we used one we would be trying
56

57
00:04:25,610 --> 00:04:29,590
to assign the value of CodeSum to GuessSum which isn't
57

58
00:04:29,600 --> 00:04:31,900
our goal here we just want to do a comparison.
58

59
00:04:31,910 --> 00:04:34,880
So always be aware of your equal signs in your code.
59

60
00:04:35,240 --> 00:04:37,830
So let's try this now let's change our condition.
60

61
00:04:37,850 --> 00:04:46,470
So it says if GuessSum is equal to CodeSum then go ahead and execute this code block.
61

62
00:04:46,640 --> 00:04:52,460
So let's save our work and compile our code and let's run at Triple X again.
62

63
00:04:52,460 --> 00:04:59,810
And now let's start by entering the wrong answer so let's just put 5 8 9 so no message comes
63

64
00:04:59,810 --> 00:05:00,040
up.
64

65
00:05:00,050 --> 00:05:06,560
If I run the program again and enter the correct answer which is 2 3 4 we can see we now get
65

66
00:05:06,560 --> 00:05:08,150
the winning message.
66

67
00:05:08,150 --> 00:05:08,390
Okay.
67

68
00:05:08,420 --> 00:05:10,440
Awesome so we're getting somewhere here.
68

69
00:05:10,440 --> 00:05:15,980
Now how can we change our condition to say if the GuessSum is equal to the CodeSum and if the GuessProduct
69

70
00:05:15,980 --> 00:05:19,160
GuessProduct is equal to the CodeProduct.
70

71
00:05:19,160 --> 00:05:25,760
Well this is also quite easy to do we just need to use the "and operator" which is symbolized by two
71

72
00:05:26,270 --> 00:05:35,060
ampersands. So we can say if the GuessSum is equal to the CodeSum *and* if the GuessProduct is equal to
72

73
00:05:35,120 --> 00:05:41,020
the CodeProduct then go ahead and execute our code block below.
73

74
00:05:41,030 --> 00:05:41,240
Okay.
74

75
00:05:41,260 --> 00:05:41,780
Awesome.
75

76
00:05:41,820 --> 00:05:47,690
By the way if this condition returns false it doesn't exit your program or anything it just simply skips
76

77
00:05:47,690 --> 00:05:51,230
this code block and moves on to the next line of code.
77

78
00:05:51,230 --> 00:05:55,520
This code block will only execute if the condition is true.
78

79
00:05:55,520 --> 00:05:57,200
But what if the condition is false.
79

80
00:05:57,200 --> 00:06:01,140
How do we print a message that says to the player they've lost the game.
80

81
00:06:01,190 --> 00:06:05,780
Well we can extend our if statement to an if else statement.
81

82
00:06:05,930 --> 00:06:12,260
We can add else underneath our if statement and add a code block that will execute if our condition
82

83
00:06:12,560 --> 00:06:13,700
is false.
83

84
00:06:13,790 --> 00:06:16,340
And I want you to implement this yourself.
84

85
00:06:16,340 --> 00:06:20,910
Now think of the theme of your game and print a winning message.
85

86
00:06:20,990 --> 00:06:27,530
If the player has entered the correct code and then print a lose game message if the player has entered
86

87
00:06:27,650 --> 00:06:34,520
the incorrect code. Then share your work so far in the community either post your code or post screenshots
87

88
00:06:34,670 --> 00:06:39,680
from your terminal to our community forum so other students can see what you've been up to.
88

89
00:06:39,680 --> 00:06:40,200
Okay.
89

90
00:06:40,220 --> 00:06:44,890
So pause here for this final challenge.
90

91
00:06:44,900 --> 00:06:51,680
Okay, so I'm going to type in else and when we hit enter Visual Studio Code already adds in the code block
91

92
00:06:51,680 --> 00:06:54,620
for us  ready for us to start typing out our code.
92

93
00:06:54,620 --> 00:07:00,280
So I'm going to print "you lose" to the terminal.
93

94
00:07:00,500 --> 00:07:01,740
We can save our work.
94

95
00:07:01,760 --> 00:07:06,490
We can compile our code and we can run Triple X.
95

96
00:07:06,800 --> 00:07:13,520
So now if we enter the correct answer it prints you win and if we run the program again and end to the
96

97
00:07:13,520 --> 00:07:17,750
wrong answer it will print you lose.
97

98
00:07:17,750 --> 00:07:18,500
Okay awesome.
98

99
00:07:18,500 --> 00:07:22,720
So we now know how we can execute different lines of code based on conditions.
99

100
00:07:22,760 --> 00:07:27,340
So great work our full game loop is pretty much there. In the next lesson
100

101
00:07:27,440 --> 00:07:31,760
we're going to move on to cleaning up some of our code and we're also going to be taking a look how
101

102
00:07:31,760 --> 00:07:34,340
we can create our own function.
102

103
00:07:34,340 --> 00:07:36,800
So when you're ready I'll see you in the next lesson.
