1
00:00:04,850 --> 00:00:06,350
Hello and welcome to this lecture.

2
00:00:06,380 --> 00:00:12,670
We are going to be making the wind condition work so I can kill all of the enemies in my level and it

3
00:00:12,670 --> 00:00:14,200
will show me this windscreen.

4
00:00:14,240 --> 00:00:14,720
Hurrah!

5
00:00:14,810 --> 00:00:16,370
Let's dive in and see how it's done.

6
00:00:17,940 --> 00:00:22,710
So we'd like it to be possible for our player to actually win this game at the moment.

7
00:00:22,740 --> 00:00:23,550
They cannot.

8
00:00:24,120 --> 00:00:25,110
So how are we going to do that?

9
00:00:25,140 --> 00:00:27,080
Well, you could do it in a number of ways.

10
00:00:27,090 --> 00:00:33,420
One of them would be when porn killed is called and the porn is not the play controller, but an A.I.

11
00:00:33,450 --> 00:00:39,540
We could subtract from a variable which says how many A.I. there are in the world, how many we have

12
00:00:39,540 --> 00:00:39,990
to kill.

13
00:00:40,290 --> 00:00:43,770
And then when that goes down to zero, we can end the game in favor of the player.

14
00:00:43,980 --> 00:00:49,530
However, I think that's a little bit fragile because it requires us to put how many enemies there are

15
00:00:49,530 --> 00:00:52,590
in the world in two places essentially needs to be in the game mode.

16
00:00:52,950 --> 00:00:57,060
But also, it needs to be in the world when you placing the enemy's down and those two can get out of

17
00:00:57,060 --> 00:00:57,450
sync.

18
00:00:58,110 --> 00:00:59,370
And that's going to cause some problems.

19
00:00:59,910 --> 00:01:05,760
So the way I would prefer to do this is to simply say, let's count all of the enemies in the world

20
00:01:05,760 --> 00:01:06,870
every time a pawn is killed.

21
00:01:06,920 --> 00:01:12,960
Let's do a recount, a head count of all of the A.I. and see which ones are still alive.

22
00:01:13,170 --> 00:01:16,470
If any of them are still alive, then we get not going to end the game yet.

23
00:01:16,910 --> 00:01:17,640
The game's not over.

24
00:01:17,970 --> 00:01:22,890
But if they are all dead and the play controller is not, then the player has won.

25
00:01:23,730 --> 00:01:29,220
So in order for us to do this, we need to have a way to query a player controller as to whether it's

26
00:01:29,220 --> 00:01:30,000
dead or not.

27
00:01:30,180 --> 00:01:30,420
Sorry.

28
00:01:30,450 --> 00:01:31,950
I mean, the A.I. controller.

29
00:01:32,520 --> 00:01:35,850
So let's look for our shooter, A.I. controller Dot H.

30
00:01:36,630 --> 00:01:41,790
And what we want to do here is create a new public method that allows us to query whether it is dead

31
00:01:41,820 --> 00:01:42,360
or not.

32
00:01:42,510 --> 00:01:46,980
So we're going to do a pool is basically is dead.

33
00:01:47,220 --> 00:01:52,080
And it's going to be a contest because it shouldn't change what's actually happening in the controller

34
00:01:52,080 --> 00:01:52,710
when it's called.

35
00:01:53,670 --> 00:01:55,590
And we can go ahead and create an implementation.

36
00:01:56,680 --> 00:02:01,780
Now, we should be controlling a porn that can tell us whether or not it is dead.

37
00:02:01,870 --> 00:02:07,780
If we go and have a look at that again, we have a look at the shooter character, which is a porn,

38
00:02:07,780 --> 00:02:08,290
remember?

39
00:02:08,650 --> 00:02:12,070
We have already this is dead concert function there.

40
00:02:12,340 --> 00:02:16,450
So essentially what we want to do is just pass on the request to the shooter.

41
00:02:16,480 --> 00:02:17,220
I control now.

42
00:02:17,580 --> 00:02:17,990
Yes.

43
00:02:18,100 --> 00:02:23,770
One thing is you could say in the KMEL game mode, you could get hold of the controller, get hold of

44
00:02:23,770 --> 00:02:26,030
the porn that the that that's controlling.

45
00:02:26,050 --> 00:02:30,160
Do a cast and then check whether that porn is dead.

46
00:02:30,640 --> 00:02:36,430
However, that's generally not best practice because it means that if suddenly something changes about

47
00:02:36,430 --> 00:02:43,510
how we calculate death and or the A.I. controller is going to control different types of porn, suddenly

48
00:02:43,510 --> 00:02:46,870
we need to go and change the game mode, which doesn't make sense.

49
00:02:46,960 --> 00:02:52,390
So it's better to do this and do the passing on inside the A.I. controllers more robust.

50
00:02:52,810 --> 00:02:58,810
It stops us from fiddling around inside the internals of somebody else's class, which generally means

51
00:02:58,810 --> 00:03:04,360
that we can restrict when things change, we can restrict how many classes we have to go and touch and

52
00:03:04,360 --> 00:03:06,700
update and change, which is always a good thing.

53
00:03:07,570 --> 00:03:13,180
So what we're going to want to do is get the porn and cast the porn to make sure it is a shooter character.

54
00:03:13,180 --> 00:03:14,260
Say, let's do a cast.

55
00:03:14,770 --> 00:03:17,070
It's going to be to a shooter.

56
00:03:18,090 --> 00:03:20,650
Character, and I think we're gonna need to do it.

57
00:03:20,700 --> 00:03:25,800
Hasher include at the top of our eye control to make sure we know about the shooter character like so

58
00:03:26,370 --> 00:03:30,120
and then against the cast during a get porn.

59
00:03:31,410 --> 00:03:34,200
And we're going to want to store this in a variable.

60
00:03:34,500 --> 00:03:42,470
So it's going to be a shooter character pointer called let's call it controlled.

61
00:03:43,870 --> 00:03:44,530
Character.

62
00:03:46,050 --> 00:03:50,150
I can't just call it character, because that's already a variable on the A.I. controller.

63
00:03:51,240 --> 00:03:53,790
And put a semicolon at the end of the line.

64
00:03:53,820 --> 00:03:56,520
And we're going to check whether this is null or not.

65
00:03:57,180 --> 00:04:00,540
So control character is not equal to null pointer.

66
00:04:00,660 --> 00:04:04,770
Then we should be able to query it for its status as to whether it's dead or not.

67
00:04:05,220 --> 00:04:09,960
So we should be able to return that the controlled character.

68
00:04:11,200 --> 00:04:12,190
Is dead.

69
00:04:12,910 --> 00:04:16,210
Basically, we forward on the request to our controlled character.

70
00:04:16,630 --> 00:04:22,330
If that control character is a shooter character, however, notice here we don't have a return statement

71
00:04:22,360 --> 00:04:23,500
in the other case.

72
00:04:23,560 --> 00:04:24,890
We do need to have a return, Sam.

73
00:04:25,030 --> 00:04:26,620
There always needs to be a return.

74
00:04:26,980 --> 00:04:28,930
If the return value isn't void.

75
00:04:29,350 --> 00:04:35,860
So we need to put a return statement out here outside of the statement to catch the case where we haven't

76
00:04:35,860 --> 00:04:37,750
already returned inside the statement.

77
00:04:38,320 --> 00:04:40,960
And here we're just going to say, is this character dead?

78
00:04:41,020 --> 00:04:42,340
Well, yes, essentially.

79
00:04:42,490 --> 00:04:46,300
If it isn't so true, basically it is dead.

80
00:04:46,810 --> 00:04:52,270
If we don't have a pawn, if we're not controlling a pawn, then essentially this A.I. controller is

81
00:04:52,270 --> 00:04:53,680
as good as dead to us.

82
00:04:54,250 --> 00:05:00,160
And that could happen because remember, the pawn detaches from its A.I. controller when it dies.

83
00:05:01,210 --> 00:05:04,090
So we're gonna go back over into the game mode.

84
00:05:04,150 --> 00:05:06,430
And what are we going to want to do here?

85
00:05:07,210 --> 00:05:16,450
Essentially, what we want to do is a for loop over all of the A.I., the shooter A.I..

86
00:05:17,870 --> 00:05:19,130
In world.

87
00:05:20,400 --> 00:05:23,580
And with that full loop, what do we want to do?

88
00:05:23,830 --> 00:05:25,770
We want to see is dead.

89
00:05:27,470 --> 00:05:32,170
Basically and or basically is not dead.

90
00:05:33,260 --> 00:05:39,380
And if any of them are not dead, then we instantly know we don't have to check all of the A.I. at all,

91
00:05:39,380 --> 00:05:42,380
if even just one A.I. reminded Raines alive.

92
00:05:42,710 --> 00:05:44,090
Then the game is not over.

93
00:05:44,120 --> 00:05:49,190
So we can do what's known as an early return, which you've probably seen before, which is going to

94
00:05:49,190 --> 00:05:54,230
just exit from this function without executing any more of the code in it.

95
00:05:54,260 --> 00:05:58,580
So everything after this early return will stop executing the full loop, will stop executing anything

96
00:05:58,580 --> 00:05:59,810
after it will stop executing.

97
00:06:00,710 --> 00:06:07,190
But then we can say if we manage to successfully get through this full loop without it early returning,

98
00:06:07,310 --> 00:06:14,300
meaning that there are no living A.I. in the world, then we need to go ahead and end the game.

99
00:06:15,170 --> 00:06:15,920
Simple as that.

100
00:06:16,280 --> 00:06:24,200
Now, one part of the puzzle that we need to look at here is the end game calls at game has ended on

101
00:06:24,290 --> 00:06:25,790
the player controller.

102
00:06:25,940 --> 00:06:29,240
Let's have a look at how the shooter play controller currently deals with this.

103
00:06:29,300 --> 00:06:35,120
If we go over to it, C.p, what we currently see is that it's currently totally ignoring the B.

104
00:06:35,150 --> 00:06:38,360
Is Wynans currently ignoring whether or not it is the winner?

105
00:06:39,410 --> 00:06:43,940
So what we need to do is say if B is winner.

106
00:06:45,130 --> 00:06:51,910
Then we're going to do something otherwise, else we are going to display our lose screen.

107
00:06:52,210 --> 00:06:57,100
So cut these lines here that are responsible for displaying the loose screen, put that in the out statement,

108
00:06:57,580 --> 00:06:59,910
and we'll restart in both cases anyway.

109
00:07:00,880 --> 00:07:02,610
So currently, the B is winner.

110
00:07:02,620 --> 00:07:03,480
What we going do?

111
00:07:03,580 --> 00:07:11,980
Well, we're just gonna go ahead and probably create a screen as well, which is going to be fairly

112
00:07:11,980 --> 00:07:12,460
straightforward.

113
00:07:12,490 --> 00:07:16,240
We go over to our header file for the shoot to play a controller.

114
00:07:16,630 --> 00:07:22,210
We can duplicate our loose screen class and make a win screen class in here.

115
00:07:23,080 --> 00:07:25,270
We can also go ahead and fight this.

116
00:07:25,270 --> 00:07:26,140
A mini challenge for you.

117
00:07:26,170 --> 00:07:29,500
Maybe go ahead and set it up so that it can do a screen.

118
00:07:30,130 --> 00:07:30,670
Kay, welcome back.

119
00:07:30,700 --> 00:07:33,160
So hopefully you've given that a shot.

120
00:07:33,190 --> 00:07:40,360
We're going to just go in and put windscreen here instead of all of the losers and copy essentially

121
00:07:40,390 --> 00:07:41,380
everything else.

122
00:07:42,960 --> 00:07:43,580
Like so.

123
00:07:44,970 --> 00:07:52,890
Gonna go ahead and compile this, then head on over into the ed and find ourselves the player controller

124
00:07:52,890 --> 00:07:56,760
class, and we should now see there is an empty windscreen class.

125
00:07:57,150 --> 00:08:02,760
And what we're gonna do is go over into the UI and I'm gonna duplicate the loose screen to call the

126
00:08:02,820 --> 00:08:03,480
windscreen.

127
00:08:03,780 --> 00:08:08,640
And you could create yours from scratch if you wanted to, but I'm just going to be using it very similarly,

128
00:08:09,210 --> 00:08:11,760
except I'm going to change out the colour for green.

129
00:08:12,850 --> 00:08:16,960
And make it into a you win instead of a you lose.

130
00:08:18,170 --> 00:08:23,410
Because the restart logic is effectively just going to be the same, some reason it reset my color that

131
00:08:23,410 --> 00:08:25,610
I'm just going to go and set the color screen again.

132
00:08:25,760 --> 00:08:26,450
OK, so that's great.

133
00:08:26,480 --> 00:08:31,730
But we still have this lump of pseudocode over in the KMEL game mode that has not been filled out.

134
00:08:31,880 --> 00:08:34,670
That's because it is your challenge to calculate the win.

135
00:08:35,060 --> 00:08:36,260
Fill out the pseudocode.

136
00:08:36,680 --> 00:08:40,520
Use the T Act to range from below in that class to help you out.

137
00:08:40,940 --> 00:08:45,430
Use the new is dead function that we created on the controller and test it out.

138
00:08:45,440 --> 00:08:49,460
See if your windscreen shows up when you kill all the A.I. in the world.

139
00:08:49,580 --> 00:08:53,450
So just gonna leave it with the pseudocode on your screen for you to have a look at.

140
00:08:54,150 --> 00:08:55,010
Kay, welcome back.

141
00:08:55,070 --> 00:08:56,200
So let's start with the flip.

142
00:08:56,840 --> 00:08:59,090
So I can do for what are we for looping over?

143
00:08:59,090 --> 00:09:00,680
It's not a controller this time.

144
00:09:00,710 --> 00:09:03,530
It's going to be the shooter A.I. control.

145
00:09:03,680 --> 00:09:09,350
So we need to hash include that it's going to be the shooter.

146
00:09:10,400 --> 00:09:12,110
A.I. Controller H.

147
00:09:13,260 --> 00:09:19,930
And that's means that we're going to be looping over a shooter, A.I. controller, star, Star Trek

148
00:09:19,960 --> 00:09:29,430
of Just call the controller for shorts and then we're gonna do a T actor range over again that a shooter

149
00:09:29,460 --> 00:09:30,120
A.I. control.

150
00:09:30,130 --> 00:09:33,900
We need to get these two types to match, then get world.

151
00:09:34,380 --> 00:09:36,360
So we're doing it in this level.

152
00:09:37,950 --> 00:09:42,480
And then we've got the body of the full loop here where we're gonna be asking if it's not dead.

153
00:09:42,540 --> 00:09:47,910
So if not control, the arrow is dead.

154
00:09:49,820 --> 00:09:52,320
So we're saying make sure that we aren't dead.

155
00:09:52,860 --> 00:09:58,290
And if it's not dead, then we'll just go ahead and return to this early return because we know that

156
00:09:58,290 --> 00:09:59,940
the game can't be over just yet.

157
00:10:00,450 --> 00:10:05,910
And otherwise, if we got through the whole full loop without returning, we do need to end the game

158
00:10:06,120 --> 00:10:10,170
because the player must have one killed all of the A.I. in the level.

159
00:10:10,680 --> 00:10:13,050
So in this case, we could do an end game.

160
00:10:13,320 --> 00:10:15,070
True, because the player has won.

161
00:10:15,570 --> 00:10:20,220
And that should notify all of the player controllers and A.I. controllers around.

162
00:10:20,970 --> 00:10:21,420
Cool.

163
00:10:21,540 --> 00:10:24,030
So let's go over and compile that.

164
00:10:24,030 --> 00:10:27,810
First of all, then I'm gonna go over into one real and have a play.

165
00:10:27,870 --> 00:10:32,730
Some reason my editor thinks that I'm in this edit specified color operation, so I'm just gonna close

166
00:10:32,730 --> 00:10:34,880
it down and restart it now that it's reboost.

167
00:10:35,070 --> 00:10:38,670
I'm going to go ahead and hit play and I'm going to get killed.

168
00:10:38,670 --> 00:10:40,440
First of all, yes, I still lose.

169
00:10:40,500 --> 00:10:41,130
That's great.

170
00:10:41,160 --> 00:10:43,830
Now let's see if I can kill this guy before he kills me.

171
00:10:44,780 --> 00:10:46,910
Let's go, boom, boom, boom, boom, boom, boom, boom.

172
00:10:47,360 --> 00:10:48,140
I lose too quickly.

173
00:10:48,170 --> 00:10:52,160
Let's go and find the gun again and set.

174
00:10:52,250 --> 00:10:56,480
We have that damage from the gun really high for testing purposes.

175
00:10:56,570 --> 00:10:58,460
I'm gonna go and set the damage down.

176
00:10:58,490 --> 00:11:00,530
Back to maybe 20 this time.

177
00:11:00,950 --> 00:11:03,020
So it's still fast, but not as fast.

178
00:11:03,440 --> 00:11:06,320
Go and play and hit this guy a few times.

179
00:11:06,590 --> 00:11:12,200
And what we saw there was that actually I did win because the level restarted.

180
00:11:12,250 --> 00:11:15,680
So if I go and kill this guy again, you see nothing's happening.

181
00:11:15,680 --> 00:11:19,880
It's saying in the message log that create which it was called with a null class.

182
00:11:19,910 --> 00:11:25,880
And the reason for that, if we go over to a BP shooter, plac troller again, you can see we haven't

183
00:11:25,880 --> 00:11:27,350
hooked up our windscreen.

184
00:11:27,440 --> 00:11:31,370
One thing that I forgot to do so you can go and compile, save and play.

185
00:11:31,370 --> 00:11:37,820
And now hopefully if I kill this guy through new doom, I win and I'm going to restart in five seconds.

186
00:11:38,240 --> 00:11:40,910
And I want to show you that the same is true.

187
00:11:41,210 --> 00:11:46,130
If I put more play controllers in the world, it's going to require me to kill both of them.

188
00:11:46,520 --> 00:11:49,940
So let's go and bring in the shooter character over here.

189
00:11:50,810 --> 00:11:52,940
And this is gonna be my second enemy to kill.

190
00:11:52,940 --> 00:11:53,780
So kill this guy.

191
00:11:53,900 --> 00:11:54,290
Boom.

192
00:11:55,520 --> 00:11:56,650
And it hasn't won.

193
00:11:56,990 --> 00:11:58,520
Then I go over to the second guy.

194
00:11:58,820 --> 00:11:59,150
Boom.

195
00:11:59,570 --> 00:12:04,400
And now I have one because I've killed all of the A.I. and we didn't have to go and change any variables

196
00:12:04,460 --> 00:12:06,830
to do that because our for loop counts.

197
00:12:06,920 --> 00:12:07,930
All of the living a lie.

198
00:12:08,030 --> 00:12:08,600
Every time.

199
00:12:08,660 --> 00:12:09,410
From scratch.

200
00:12:09,530 --> 00:12:12,260
So currently we're now living in quite a silent world.

201
00:12:12,320 --> 00:12:18,230
So in the next lecture, I want to start looking a little bit at how we can do some audio.

202
00:12:18,440 --> 00:12:19,040
I'll see there.
