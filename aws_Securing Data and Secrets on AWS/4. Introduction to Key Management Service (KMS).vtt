WEBVTT
1
00:00:00.840 --> 00:00:03.660
AWS gives us the Key Management Service,

2
00:00:03.660 --> 00:00:10.650
or KMS, to enable us to create and manage customer master keys, or CMKs.

3
00:00:10.650 --> 00:00:13.370
And we've already seen KMS a little bit in the context of

4
00:00:13.370 --> 00:00:17.870
specifying the encryption keys to be used by S3 and EBS,

5
00:00:17.870 --> 00:00:22.140
for example. And KMS integrates with almost every other

6
00:00:22.140 --> 00:00:25.280
service in AWS that can encrypt data.

7
00:00:25.280 --> 00:00:27.320
And as we'll see in the upcoming demo,

8
00:00:27.320 --> 00:00:33.790
we can use KMS to not just create keys, but also enable and disable them,

9
00:00:33.790 --> 00:00:38.400
schedule them for deletion, and set up what are known as key policies and

10
00:00:38.400 --> 00:00:44.310
grants to control access to our CMKs within and across accounts and down to

11
00:00:44.310 --> 00:00:48.810
the service and API level. And later on in this module, we'll take a look at

12
00:00:48.810 --> 00:00:51.330
key policies and grants in more detail,

13
00:00:51.330 --> 00:00:54.320
specifically when it comes to reading and interpreting them,

14
00:00:54.320 --> 00:00:56.710
which is something the exam will expect you to be able

15
00:00:56.710 --> 00:01:01.230
to do. Now when we talk about CMKs,

16
00:01:01.230 --> 00:01:04.180
what we really care about is the key material or the

17
00:01:04.180 --> 00:01:07.690
cryptographic material that consists of the actual bits

18
00:01:07.690 --> 00:01:10.210
that make your key uniquely yours.

19
00:01:10.210 --> 00:01:14.050
It's this material that performs the actual encryption and decryption

20
00:01:14.050 --> 00:01:19.930
operations on your data. And by default, when you create a CMK, AWS

21
00:01:19.930 --> 00:01:22.540
will generate the key material for it.

22
00:01:22.540 --> 00:01:23.910
As you might expect,

23
00:01:23.910 --> 00:01:28.240
this is called AWSâ€‘generated key material. But you may

24
00:01:28.240 --> 00:01:30.940
have compliance requirements that dictate how you must

25
00:01:30.940 --> 00:01:33.040
generate your own key material.

26
00:01:33.040 --> 00:01:35.250
Or maybe you'd like to maintain your key material

27
00:01:35.250 --> 00:01:38.740
outside of AWS for additional redundancy.

28
00:01:38.740 --> 00:01:42.720
KMS allows you to do this. But keep in mind, the decision you make

29
00:01:42.720 --> 00:01:45.900
will impact how and when you can rotate your keys,

30
00:01:45.900 --> 00:01:48.920
which is really just changing out the backing key material for

31
00:01:48.920 --> 00:01:53.310
your CMK. And rotating your keys is important because you always

32
00:01:53.310 --> 00:01:56.590
want to minimize the scope of damage that can be done if a key

33
00:01:56.590 --> 00:01:58.580
somehow gets compromised.

34
00:01:58.580 --> 00:02:02.950
So if I use the same key to encrypt data for years and years without ever

35
00:02:02.950 --> 00:02:06.580
rotating it and then one day that key becomes compromised,

36
00:02:06.580 --> 00:02:09.550
I have now potentially exposed years' worth of data.

37
00:02:09.550 --> 00:02:12.680
On the other hand, if I rotate my keys frequently,

38
00:02:12.680 --> 00:02:21.000
the only data at risk is the data that was encrypted using that particular key, and hopefully that's a much smaller subset of my data.

