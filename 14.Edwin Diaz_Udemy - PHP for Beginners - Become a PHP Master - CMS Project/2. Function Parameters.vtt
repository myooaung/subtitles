WEBVTT
1
00:00:00.750 --> 00:00:07.220
Hi welcome back on this video here we are going to be learning how to pass parameters into our functions.

2
00:00:07.260 --> 00:00:13.440
When the last video I almost told you how to do this but we didn't go into more details about it on

3
00:00:13.470 --> 00:00:16.030
this we are going to show you exactly how it's done.

4
00:00:16.040 --> 00:00:16.480
Right.

5
00:00:16.650 --> 00:00:18.780
So we know how to define functions.

6
00:00:18.780 --> 00:00:25.570
Now we're going to find out how to pass parameters This will make our functions a lot more flexible.

7
00:00:25.590 --> 00:00:26.970
We can do a lot more things with it.

8
00:00:26.970 --> 00:00:31.560
So this is what we had in the last video here we had a function.

9
00:00:31.560 --> 00:00:34.600
And I said to you that is programmers I use for Sunday.

10
00:00:34.620 --> 00:00:39.240
But we were willing didn't do anything with them and now we are going to use it on this video.

11
00:00:39.240 --> 00:00:46.800
Here are the last video we show you how to make a function how to call multiple multiple functions with

12
00:00:46.800 --> 00:00:47.820
the same function.

13
00:00:47.820 --> 00:00:53.850
So we call something say something right here and then we call calculate and they both did something

14
00:00:53.850 --> 00:00:56.910
different the right one printed out some text on the screen.

15
00:00:57.110 --> 00:00:59.080
The other one made some calculations.

16
00:00:59.080 --> 00:01:03.600
Now even though this is good this is still now very flexible.

17
00:01:03.600 --> 00:01:09.300
All right so I want to show you how to make these actually a lot more flexible and a lot more useful.

18
00:01:09.300 --> 00:01:09.950
Right.

19
00:01:09.990 --> 00:01:19.200
So first of all let's go ahead and open up blank that HP and let's do a Save As and I'm just going to

20
00:01:19.200 --> 00:01:21.450
say passing

21
00:01:25.250 --> 00:01:35.010
programs for parameters and then he's going to call it I'm going to call it functions the BHB right.

22
00:01:35.040 --> 00:01:37.010
That's how we need for a fire right.

23
00:01:37.320 --> 00:01:40.480
But anyways let's go ahead.

24
00:01:40.560 --> 00:01:45.570
Bernard BHB tags here.

25
00:01:45.570 --> 00:01:45.850
All right.

26
00:01:45.870 --> 00:01:47.460
Perfect.

27
00:01:47.460 --> 00:01:51.990
And another thing that we got to do is open this in a browser so that way we can see what in the world

28
00:01:52.110 --> 00:01:53.140
we are doing right.

29
00:01:53.160 --> 00:02:00.090
The magic that we will be creating soon so hopefully you're not sleeping in the other side and you are

30
00:02:00.090 --> 00:02:02.930
paying very close attention because this is very important.

31
00:02:03.240 --> 00:02:11.070
So we know that we define a function just by you know using the keyword function and then we write the

32
00:02:11.070 --> 00:02:12.750
name the function whatever name we want.

33
00:02:12.750 --> 00:02:17.890
So in this case I'm just going to say you know what I'm going to call this function reading.

34
00:02:18.060 --> 00:02:19.030
That's what we're going to do.

35
00:02:19.200 --> 00:02:23.750
We're going to be doing something to put a parenthesis there and then the curly brackets right.

36
00:02:23.790 --> 00:02:25.080
So we know how to do this.

37
00:02:25.080 --> 00:02:26.910
Let me just cover this.

38
00:02:26.910 --> 00:02:29.820
We don't need it right now.

39
00:02:29.820 --> 00:02:31.590
All right.

40
00:02:33.540 --> 00:02:36.620
So what can we do here.

41
00:02:36.750 --> 00:02:42.760
So what I'm going to do is when I call this function and I'm just going to put this here because we

42
00:02:42.760 --> 00:02:47.880
got it just this is what we need to call the function right we need to use the name of the function.

43
00:02:48.540 --> 00:02:51.180
By following by a semi-colon right.

44
00:02:51.680 --> 00:02:53.850
The first is is followed by semi-colon.

45
00:02:53.850 --> 00:02:58.370
And this is how you call it the name parentheses in the semi-colon and this is how you make this work

46
00:02:58.380 --> 00:03:00.170
whatever's inside here right.

47
00:03:00.420 --> 00:03:06.780
So what I want to do is I want to create I want to pass a parameter to the function from here when I

48
00:03:06.780 --> 00:03:07.420
call it.

49
00:03:07.560 --> 00:03:15.060
I want to pass some values here that will go inside these parameters and then we can use it inside a

50
00:03:15.060 --> 00:03:16.250
function.

51
00:03:16.260 --> 00:03:20.460
I hope you understand this so I'm going to put some parameters when I call the function right here going

52
00:03:20.460 --> 00:03:22.210
to put some something here right.

53
00:03:22.290 --> 00:03:27.620
It's going to be a variable or syntax a string whatever I want to pass are numbers and then I'm going

54
00:03:27.630 --> 00:03:28.740
to put something else here.

55
00:03:28.760 --> 00:03:32.940
And this is going to be the same information that I'm passing right here and I'll be right here.

56
00:03:32.940 --> 00:03:40.230
The function is going to think it is and then that information that's here is going to be available

57
00:03:40.290 --> 00:03:41.870
inside the function.

58
00:03:42.330 --> 00:03:42.660
Right.

59
00:03:42.660 --> 00:03:45.970
So that's what passing parameter is and that's how we're going to do it.

60
00:03:45.990 --> 00:03:52.730
So I'm going to pass a variable called message into the function.

61
00:03:52.770 --> 00:03:56.080
Right now I was going to say that because it's missing an argument right here.

62
00:03:56.220 --> 00:03:58.880
Of course we know that.

63
00:03:59.040 --> 00:04:04.140
Well we haven't used this so that's why he's giving us problem.

64
00:04:04.140 --> 00:04:07.640
But anyways so we create a variable right here.

65
00:04:07.860 --> 00:04:09.970
OK now we can use an inside function.

66
00:04:10.050 --> 00:04:13.070
This might look weird but that's that's the way it is.

67
00:04:13.350 --> 00:04:14.760
So I was going to say Echo

68
00:04:17.520 --> 00:04:23.750
message actually as a matter of fact and I to put it there because we have the variable right here.

69
00:04:23.760 --> 00:04:25.950
So I'm just going to use it inside the function.

70
00:04:26.130 --> 00:04:31.500
And now we have a big problem right here it's like we have another line that is you know giving us error

71
00:04:31.560 --> 00:04:32.300
there.

72
00:04:32.310 --> 00:04:37.020
So what I'm going to do is I'm going to pass what I want to say here because I want to pass a parameter

73
00:04:37.020 --> 00:04:41.780
I want remember this value that's going to be here is going to be the same as here.

74
00:04:41.970 --> 00:04:47.130
So whatever I write here is going to get translating here and then is going to get we going to be able

75
00:04:47.130 --> 00:04:52.580
to use an entire function and whatever we pass through here we are going to Agway out.

76
00:04:52.590 --> 00:04:56.570
So what I want to do is I want to pass some parameters are going to say hello.

77
00:04:56.900 --> 00:05:01.470
Student look at that.

78
00:05:02.010 --> 00:05:02.350
Right.

79
00:05:02.370 --> 00:05:04.860
Isn't that magic beautiful.

80
00:05:04.860 --> 00:05:07.320
So now we need a function a lot more flexible.

81
00:05:07.320 --> 00:05:07.820
Look at this.

82
00:05:07.820 --> 00:05:13.740
Now every time I want to do anything I could just change every time I want to use this function and

83
00:05:13.740 --> 00:05:20.670
the major job of this function is just to greet this function is going to do a message so we can have

84
00:05:20.670 --> 00:05:27.780
this function here for a let's say for example you have a Web site and you have a customer and you want

85
00:05:27.780 --> 00:05:29.060
to execute this function.

86
00:05:29.070 --> 00:05:32.390
Every time the customer goes to your website.

87
00:05:32.720 --> 00:05:37.770
All right so you're going to maybe use an if statement say if the customer is on a home page.

88
00:05:37.770 --> 00:05:43.470
I want you to I want you to greet him right so you'll use an if statement and then you will put this

89
00:05:43.470 --> 00:05:49.420
function there and then you will say whatever you want to say to the customer like this for example

90
00:05:49.440 --> 00:05:51.550
hi customer.

91
00:05:52.140 --> 00:05:55.020
How are you.

92
00:05:55.230 --> 00:05:56.520
She then.

93
00:05:57.030 --> 00:06:00.350
So you could do that you can't even make this a variable also.

94
00:06:00.360 --> 00:06:03.600
And you know it that way too.

95
00:06:03.600 --> 00:06:05.990
I mean there are multiple things that you can do with it.

96
00:06:06.000 --> 00:06:08.270
Now let me show you another way of doing this.

97
00:06:08.310 --> 00:06:13.250
So for example let's say let me put this in.

98
00:06:13.830 --> 00:06:20.430
Let me just comment this out so what you can have in your cores exercise files and this make a new function

99
00:06:20.430 --> 00:06:27.510
here real quick and it's open or BHP tax again.

100
00:06:29.550 --> 00:06:35.670
I'm going to show you another simple function here we're going to make another one and we're going to

101
00:06:35.670 --> 00:06:38.190
call this calculator.

102
00:06:39.110 --> 00:06:39.420
All right.

103
00:06:39.420 --> 00:06:42.670
Very simple from one very similar to another one we made.

104
00:06:42.690 --> 00:06:46.570
But this is going to be a lot more fun to do.

105
00:06:46.610 --> 00:06:47.290
All right.

106
00:06:47.370 --> 00:06:49.460
So what I want to calculate.

107
00:06:49.980 --> 00:06:56.290
So what I'm going to do is I'm going to create a variable as a matter of fact.

108
00:06:56.310 --> 00:06:57.700
Let's do it like this.

109
00:06:57.840 --> 00:07:03.830
I want to create a variable right here called number one and then divide it with a call month.

110
00:07:03.840 --> 00:07:06.560
That's how you put multiple values in here.

111
00:07:06.570 --> 00:07:07.020
Right.

112
00:07:07.030 --> 00:07:09.260
The variable I call my old ways.

113
00:07:09.690 --> 00:07:11.360
And number two.

114
00:07:11.400 --> 00:07:20.460
So now every time I call this function calculate watch this I have to pass it to parameters because

115
00:07:20.460 --> 00:07:22.140
I got two parameters right here.

116
00:07:22.380 --> 00:07:31.350
So if this first parameter here has to be for example has to be the same it will be the same as the

117
00:07:31.350 --> 00:07:34.410
first parameter right here is the order.

118
00:07:34.500 --> 00:07:36.990
So this 12 is going to be number one.

119
00:07:37.050 --> 00:07:39.540
This 24 is going to be number two.

120
00:07:39.540 --> 00:07:47.430
So if 5 passes 12 days variable is going to have is going to contain the value of 12.

121
00:07:47.650 --> 00:07:48.120
Right.

122
00:07:48.120 --> 00:07:49.580
Just make sure that you know that.

123
00:07:49.680 --> 00:07:51.180
Now we can do something like this.

124
00:07:51.180 --> 00:07:59.840
Let me just take this off the right we can do something like maybe I don't know some make another variable

125
00:08:00.520 --> 00:08:08.610
and let's just make sure that we put a dollar sign there and let's just make a function that does a

126
00:08:08.610 --> 00:08:17.120
calculation let's say as it's number one and number two used to make it simple right there.

127
00:08:17.130 --> 00:08:20.070
Now we have a problem here because we haven't passed any parameters.

128
00:08:20.190 --> 00:08:26.190
But look at this now and I want to echo that some out right.

129
00:08:26.210 --> 00:08:31.670
I'm going to explain to you right now if for some reason you don't understand what's going on.

130
00:08:31.670 --> 00:08:32.390
All right.

131
00:08:32.730 --> 00:08:39.330
And what I want to do is I want to add 40 a and eight

132
00:08:41.940 --> 00:08:45.200
safe 48 48 is 96.

133
00:08:45.210 --> 00:08:48.000
All right so hopefully you understood what happened here.

134
00:08:48.000 --> 00:08:50.940
If not don't worry about it I'm going to explain it to you right now.

135
00:08:51.120 --> 00:08:56.840
So we make of it we made a function call calculate and we're past into parameters here.

136
00:08:57.270 --> 00:09:03.930
All right these variables here are empty right now unless I put some type of value in there and I put

137
00:09:03.930 --> 00:09:06.240
the value when I call the function.

138
00:09:06.840 --> 00:09:12.710
So right now I'm verbal one I put 48 and on variable to put another value of 48.

139
00:09:12.750 --> 00:09:16.850
When I call that function right now if I have this like this is not doing anything.

140
00:09:17.340 --> 00:09:22.820
It's not even working right now work until I call the function.

141
00:09:22.830 --> 00:09:27.000
So everything here right now is just not doing anything.

142
00:09:27.000 --> 00:09:32.700
They're are all variables so you don't even have any values to create the values right here.

143
00:09:33.300 --> 00:09:35.820
OK.

144
00:09:35.820 --> 00:09:43.850
So when I call the function pad number one 345 and that part number two three thousand five hundred

145
00:09:43.850 --> 00:09:44.840
sixty two.

146
00:09:44.850 --> 00:09:51.080
Then I make another variable because I want to have the calculation of number one added to number two

147
00:09:51.830 --> 00:09:55.230
right contained into another variable.

148
00:09:55.230 --> 00:09:58.470
I wonder some one the whole calculation somewhere.

149
00:09:58.740 --> 00:10:04.910
So I assigned the calculation number one over to to this very we'll call this variable called sum.

150
00:10:05.370 --> 00:10:11.460
And here what I'm doing with some is I'm echoing out on the screen the calculation and these two numbers

151
00:10:11.460 --> 00:10:11.790
together.

152
00:10:11.790 --> 00:10:17.850
And why are these two numbers together these two parameters that I'm given right here or whatever parameter

153
00:10:17.850 --> 00:10:19.350
I give it here.

154
00:10:19.350 --> 00:10:25.710
So now you see this function is actually very flexible because we can actually call this function.

155
00:10:26.010 --> 00:10:31.220
Let's be a little more descriptive and we can call this function add numbers.

156
00:10:31.370 --> 00:10:32.630
Look at that.

157
00:10:33.190 --> 00:10:33.500
Right.

158
00:10:33.510 --> 00:10:39.710
And of course we got to change the name here because now we are we were calling a function that did

159
00:10:39.710 --> 00:10:40.920
not exist.

160
00:10:40.920 --> 00:10:45.840
So now this function of numbers is gonna add whatever I pass it through here.

161
00:10:45.990 --> 00:10:50.060
So you can make functions like subtract multiply divide.

162
00:10:50.070 --> 00:10:55.740
Calculate the perimeter of the square calculate the you know the area.

163
00:10:55.990 --> 00:11:01.890
Oh I don't know a square circle or rectangle whatever you can make functions like that.

164
00:11:01.890 --> 00:11:02.780
Very cool.

165
00:11:02.780 --> 00:11:06.600
Right so this is where this is how you pass parameters into a function.

166
00:11:06.750 --> 00:11:10.280
And then you you know you take the data and do something nice with it.

167
00:11:10.440 --> 00:11:13.550
You make you make your function a lot more flexible portable.

168
00:11:13.800 --> 00:11:16.950
And I mean you can do wonders with this little trick here.

169
00:11:16.950 --> 00:11:20.220
So anyways I hope you learn a lot on this lesson here.

170
00:11:20.430 --> 00:11:24.720
And I'm just excited that you're going to learn a lot more than the next one so let's go to the next

171
00:11:24.720 --> 00:11:25.150
lecture.

172
00:11:25.170 --> 00:11:25.980
Take care.
