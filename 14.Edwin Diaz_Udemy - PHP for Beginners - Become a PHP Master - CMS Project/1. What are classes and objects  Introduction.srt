1
00:00:00,390 --> 00:00:05,310
Hi welcome back and congratulations for making it this far I'm so happy that you made it.

2
00:00:05,310 --> 00:00:08,850
Now before we go any further you need to understand a couple of things.

3
00:00:08,850 --> 00:00:16,700
First is what is a class in O.P. and what is Olby will all be means object oriented programming and

4
00:00:16,760 --> 00:00:23,010
a class is just a blueprint or definition or description of something inside your program.

5
00:00:23,020 --> 00:00:25,600
Now classifies two things for this something.

6
00:00:25,650 --> 00:00:30,150
It defines the properties of this something and it finds the methods that properties can be variables

7
00:00:30,170 --> 00:00:37,170
arrays or any type of data for the methods we have functions that create behaviors for this thing that

8
00:00:37,170 --> 00:00:40,030
is that the class is describing now.

9
00:00:40,110 --> 00:00:45,600
So I can't describe what exactly what is this thing that you were talking about when you're not telling

10
00:00:45,600 --> 00:00:54,090
me a knob just right and I know it is just a group of data put together by a common theme an object

11
00:00:54,090 --> 00:00:55,580
can be a variable.

12
00:00:55,740 --> 00:00:59,850
It can be a function the could be any data structure inside your program.

13
00:00:59,850 --> 00:01:04,170
I know it could be a little confusing right but let me just give you a couple of examples.

14
00:01:04,170 --> 00:01:06,640
Actually one example of an object.

15
00:01:06,780 --> 00:01:11,290
Let's say for example we have a car object right for this car.

16
00:01:11,400 --> 00:01:17,760
Now keep in mind that the objects in programming are very similar to the objects that we have outside

17
00:01:18,470 --> 00:01:19,860
on the real world.

18
00:01:19,860 --> 00:01:25,510
So for this car object we are going to define some properties let's say methods.

19
00:01:25,620 --> 00:01:31,170
Let's say we have for this car my property could be wheels the wheels of the car right.

20
00:01:31,230 --> 00:01:33,990
It could be the seats that could be a prop..

21
00:01:33,990 --> 00:01:38,460
What about the radio that could be a prop. I mean the car has thousands of pieces right we have a lot

22
00:01:38,460 --> 00:01:39,740
of properties for the car.

23
00:01:40,020 --> 00:01:46,200
And just to give an example of the methods or the functions or the behaviors or I don't mean the same.

24
00:01:46,200 --> 00:01:47,160
We have the wheels.

25
00:01:47,160 --> 00:01:54,030
Let's say we moved a wheel that could be a method of this object move the seats.

26
00:01:54,330 --> 00:01:54,770
Right.

27
00:01:54,780 --> 00:01:59,370
That could be wanting if you have one of those cars that have electric seats that could be one what

28
00:01:59,370 --> 00:02:01,030
about turn on the radio.

29
00:02:01,140 --> 00:02:06,260
That also could be a method function behavior of our car.

30
00:02:06,260 --> 00:02:06,900
All right.

31
00:02:06,900 --> 00:02:12,480
The Bennet's of the benefits of using O.P. or object oriented programming are many.

32
00:02:12,570 --> 00:02:18,960
It provides code organization they provide less complex you know functionality well not functionality

33
00:02:18,960 --> 00:02:22,950
more complex functionality with less complex code.

34
00:02:23,190 --> 00:02:28,920
All right we have more interaction within our code easily if we wanted to we were methods you know and

35
00:02:28,920 --> 00:02:35,070
properties you know our code would be more muscular meaning we can change objects or groups you know

36
00:02:35,070 --> 00:02:40,030
within our code without affecting other pieces of code in our program.

37
00:02:40,050 --> 00:02:40,650
Right.

38
00:02:40,920 --> 00:02:47,220
I mean the benefits are many if let's say for example we have we have a company right in this company

39
00:02:47,220 --> 00:02:50,140
we have a lot of programmers working in a project.

40
00:02:50,280 --> 00:02:58,170
We could have each programmer work in a different object of that program and none of the programs are

41
00:02:58,170 --> 00:03:02,010
not the objects will conflict with the main program you see.

42
00:03:02,010 --> 00:03:08,070
I mean we can separate our program into little objects we have that have the form object we can have

43
00:03:08,070 --> 00:03:13,950
the navigation object we can have the header object that food or object and we can many different people

44
00:03:13,950 --> 00:03:22,410
working on those modular pieces or objects and you know they would never affect each other annoying

45
00:03:22,710 --> 00:03:25,500
object oriented programming is a benefit.

46
00:03:25,740 --> 00:03:30,210
And on this course here I'm going to introduce you to it and I'm going to explain a couple of things

47
00:03:30,210 --> 00:03:30,420
to it.

48
00:03:30,420 --> 00:03:35,760
We're going to be using it a little bit on this section here but I want you to grab the major idea on

49
00:03:35,760 --> 00:03:36,650
what it is.

50
00:03:36,810 --> 00:03:41,290
So that way you are more prepare to start coding in object oriented programming.

51
00:03:41,320 --> 00:03:41,860
Right.

52
00:03:41,910 --> 00:03:44,390
It's going to be super easy the way I explain it.

53
00:03:44,520 --> 00:03:48,500
And then hopefully you understand it if not for some reason you have a question.

54
00:03:48,510 --> 00:03:49,800
I'm here 24/7.

55
00:03:49,800 --> 00:03:50,580
You can e-mail me.

56
00:03:50,580 --> 00:03:54,160
You can contact me and I can show you the way Jorge.

57
00:03:54,180 --> 00:03:58,110
But anyway I want to thank you and again congratulations for making it as far as you and I love this

58
00:03:58,110 --> 00:03:58,860
section.

59
00:03:59,010 --> 00:04:00,840
And I'll see you in the next lecture.

60
00:04:00,840 --> 00:04:01,700
Take care.
