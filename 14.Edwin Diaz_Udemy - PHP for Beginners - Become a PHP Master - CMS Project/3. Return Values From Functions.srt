1
00:00:00,750 --> 00:00:06,090
I will come back on this video we are going to be learning how to make a functions even way better than

2
00:00:06,090 --> 00:00:12,690
the last video the last video we were passing parameters into the functions and we were you know displaying

3
00:00:12,690 --> 00:00:19,350
some good information now but we want to do more thing echoing stuff out of the function more than printing

4
00:00:19,350 --> 00:00:20,310
stuff out of the function.

5
00:00:20,310 --> 00:00:23,260
Let me just show you on the last video here.

6
00:00:23,730 --> 00:00:31,890
The Last Lecture we talked about show you defining functions let me just call the passing parameters

7
00:00:31,890 --> 00:00:32,280
right.

8
00:00:32,400 --> 00:00:38,190
So we have functions here that when we pass a parameter tets string we display something out of the

9
00:00:38,190 --> 00:00:38,640
function.

10
00:00:38,640 --> 00:00:44,230
Well this is really nice you know because we can use a function to pass parameters.

11
00:00:44,230 --> 00:00:46,870
But what if I don't want to just echo the message.

12
00:00:46,920 --> 00:00:49,260
What if I want to just add it to something else.

13
00:00:49,260 --> 00:00:54,020
What if I want to use that message in another function I can do it with this function because all the

14
00:00:54,020 --> 00:00:57,940
function is doing is printing out the message on the screen.

15
00:00:58,080 --> 00:00:59,020
That's what he's doing.

16
00:00:59,120 --> 00:01:01,010
I can do anything with this.

17
00:01:01,260 --> 00:01:08,130
We can do anything with what how the function works outs inside unless we come physically here manually

18
00:01:08,190 --> 00:01:09,400
and change it.

19
00:01:09,420 --> 00:01:15,630
I want to be able to grab the value out of it whatever is inside function and then take it outside and

20
00:01:15,630 --> 00:01:17,680
do whatever I want with it.

21
00:01:17,700 --> 00:01:24,570
This is how you make functions really really really useful and flexible and portable and extendable

22
00:01:24,930 --> 00:01:25,620
really nice.

23
00:01:25,620 --> 00:01:30,180
So let's learn how to do that let's learn how to take values are solid function and then we can do other

24
00:01:30,180 --> 00:01:30,670
things with it.

25
00:01:30,670 --> 00:01:35,540
So just in case we wanted to echo it later on we can outside the function.

26
00:01:35,700 --> 00:01:41,240
We don't have to just rely on this echo from inside the function because this is not very flexible.

27
00:01:41,240 --> 00:01:41,710
All right.

28
00:01:41,720 --> 00:01:44,300
As flexor was well we are going to be doing.

29
00:01:44,970 --> 00:01:54,240
So let's grab the blank that BHB and say this and this code is returning values return actually return

30
00:01:54,240 --> 00:01:56,640
values and then functions.

31
00:01:56,640 --> 00:01:58,150
We're not going to make it bigger than that.

32
00:01:58,200 --> 00:02:01,870
Ready's long enough that BHB All right.

33
00:02:01,890 --> 00:02:04,490
So we're going to open them closes a little bit.

34
00:02:04,550 --> 00:02:13,440
The way it doesn't get in the way we're going to open our BHB tags and then close and bring it down.

35
00:02:14,330 --> 00:02:15,210
Right.

36
00:02:15,720 --> 00:02:19,940
So we already know how our how to define a function that we're going to do that right now.

37
00:02:20,010 --> 00:02:24,750
So I'm going to call this function I'm going to do the same function we did on the last video.

38
00:02:25,010 --> 00:02:29,860
All right when we pass some parameters and I believe it was call at numbers.

39
00:02:30,360 --> 00:02:37,330
If it's not then disregard that don't worry we will make a new one here but should be the same.

40
00:02:37,380 --> 00:02:42,030
So this function here is in a sense thing as the other one but it's going to be a lot more flexible

41
00:02:42,030 --> 00:02:43,130
and when to show you.

42
00:02:43,290 --> 00:02:49,950
So we know that we can call this function whatever's inside by calling the function name right here.

43
00:02:49,950 --> 00:02:54,660
And then what we did in the last video is we passed some parameters and going into the center right

44
00:02:54,660 --> 00:03:02,920
here and going to say number one and number two right.

45
00:03:03,570 --> 00:03:07,670
And we're going to pass some parameters here and the function is going to add some stuff out for us

46
00:03:07,680 --> 00:03:08,120
right.

47
00:03:08,280 --> 00:03:14,810
So we're going to have another variable here that's going to hold some of these two numbers added together.

48
00:03:15,240 --> 00:03:27,430
So 1 and plus number two perfect right now I said that I didn't want to use the echo again.

49
00:03:27,480 --> 00:03:30,950
I don't want to just call these functions just equities out on the screen.

50
00:03:30,960 --> 00:03:34,260
I want to be able to decide what I want to do with the data once I have it.

51
00:03:34,290 --> 00:03:36,070
So how do we get this data out.

52
00:03:36,090 --> 00:03:37,630
Here we can.

53
00:03:37,950 --> 00:03:42,060
The only way we can do it right is usually right is echoing in our right.

54
00:03:42,060 --> 00:03:42,770
Print it out.

55
00:03:42,780 --> 00:03:47,780
But there is another way of actually returning that calculation so you can do other things with it and

56
00:03:47,780 --> 00:03:50,850
call the return statement right here.

57
00:03:50,930 --> 00:03:56,890
You put a return key word there is a reserve keyword ph B and you just take the data out.

58
00:03:57,120 --> 00:04:03,030
We're going to take the sum of these two numbers when I take it out of the function and then use it

59
00:04:03,030 --> 00:04:04,020
here.

60
00:04:04,020 --> 00:04:12,210
Now let's let's go ahead and open our browser there so that we can see the error is there don't worry

61
00:04:12,210 --> 00:04:12,690
about that.

62
00:04:12,720 --> 00:04:18,070
Right now we have to pass some parameters and then you're going to pass this on numbers here.

63
00:04:18,120 --> 00:04:19,120
That's going to go away.

64
00:04:19,140 --> 00:04:21,010
But now we don't have anything here.

65
00:04:21,050 --> 00:04:21,850
Why.

66
00:04:21,860 --> 00:04:23,540
Why don't we have anything happening here.

67
00:04:23,550 --> 00:04:26,580
Well first of all we have no errors so that's good.

68
00:04:26,580 --> 00:04:29,160
Second of all we're not doing anything with the data.

69
00:04:29,430 --> 00:04:32,960
We have the calculation right here on this function.

70
00:04:33,270 --> 00:04:34,290
What do we want to do with it.

71
00:04:34,290 --> 00:04:39,360
Because right now we are returning to some back to this function here.

72
00:04:39,360 --> 00:04:44,900
So what I'm going to do is I want I want to hold this some somewhere.

73
00:04:44,940 --> 00:04:50,640
So what I'm willing to do is just because the sum is here and now could be a little confusing for you.

74
00:04:50,660 --> 00:04:51,380
Right.

75
00:04:51,810 --> 00:04:56,190
Just because it's here I want to save it into a variable.

76
00:04:56,250 --> 00:04:59,490
I'm going to call it very will result.

77
00:04:59,910 --> 00:05:00,750
Right.

78
00:05:00,780 --> 00:05:01,320
That's fine.

79
00:05:01,320 --> 00:05:02,130
That should be more.

80
00:05:02,140 --> 00:05:09,180
Now this whole functionality these two numbers added up because it's already being added up here and

81
00:05:09,180 --> 00:05:11,100
then return back to us.

82
00:05:11,290 --> 00:05:13,980
The sum of this whatever this is.

83
00:05:13,980 --> 00:05:15,040
All right.

84
00:05:15,450 --> 00:05:17,300
Ninety of the fray here.

85
00:05:17,490 --> 00:05:19,770
The sum is trapped in here.

86
00:05:19,980 --> 00:05:23,040
But right now we are assigning this calculation.

87
00:05:23,040 --> 00:05:28,480
This this sum right here to this variable right here and we can go ahead and go like this.

88
00:05:28,500 --> 00:05:36,460
Echo resoled and of course you're not going to do anything because these are so variable.

89
00:05:36,940 --> 00:05:41,260
And then we have a problem here and I want to show you right now what the problem is.

90
00:05:41,260 --> 00:05:47,690
So is saying right now user of undefined constant we don't have the dollar sign right here so we confused

91
00:05:47,690 --> 00:05:50,030
this with a constant save.

92
00:05:50,200 --> 00:05:52,060
We have 98 as you can see here.

93
00:05:52,060 --> 00:05:58,520
So now we can do whatever we won with this resort with his 98 right now this has a value of ninety eight.

94
00:05:58,780 --> 00:05:59,900
So look at this.

95
00:06:00,130 --> 00:06:06,680
Let's say for example that I want to do something else with this result right.

96
00:06:06,910 --> 00:06:12,310
I want to go ahead and see if I can get this right.

97
00:06:12,910 --> 00:06:18,010
All right so what I want to do is I want to grab the same function again.

98
00:06:18,310 --> 00:06:20,170
Numbers right.

99
00:06:20,170 --> 00:06:25,300
Because this function now is a function that we can add any two values to it.

100
00:06:25,570 --> 00:06:31,830
So I can pass it any parameters I want here any way it up for me so I can reuse that function then save

101
00:06:31,830 --> 00:06:34,380
it in the variable result again.

102
00:06:34,380 --> 00:06:34,940
All right.

103
00:06:35,110 --> 00:06:39,910
And I'd say you know what I want to add a hundred to 98 in this debate.

104
00:06:39,940 --> 00:06:45,160
This could get very confusing right now but don't worry I'm here to help you out.

105
00:06:46,030 --> 00:06:46,920
All right.

106
00:06:47,620 --> 00:06:50,040
So I hope you've seen what we're doing now.

107
00:06:50,090 --> 00:06:53,000
We're going to go over it right now.

108
00:06:54,070 --> 00:06:56,900
So we saw it.

109
00:06:57,520 --> 00:06:58,450
Look at that.

110
00:06:58,450 --> 00:06:59,840
We've got 188.

111
00:07:00,070 --> 00:07:00,880
All right.

112
00:07:00,940 --> 00:07:02,610
All right so let me explain what happened here.

113
00:07:02,620 --> 00:07:05,410
Before you get to confuse.

114
00:07:05,820 --> 00:07:06,310
All right.

115
00:07:06,310 --> 00:07:09,950
So this function here we know that it is function we made it so.

116
00:07:10,050 --> 00:07:15,240
The last two numbers and he's going to add whatever numbers we pass it through here.

117
00:07:15,260 --> 00:07:16,780
All right.

118
00:07:16,870 --> 00:07:22,990
With this key we're returned some means that we are returning the calculation of whatever numbers we

119
00:07:22,990 --> 00:07:24,140
pass through here.

120
00:07:24,160 --> 00:07:30,520
So if these numbers are 90 the calculation of this the first number the second number calculate is 90

121
00:07:30,710 --> 00:07:34,360
we get to return that calculation back here.

122
00:07:34,360 --> 00:07:40,450
So now this is not going to work it's not going to be worth 64 and 38 is going to be worth 98 this whole

123
00:07:40,450 --> 00:07:44,260
thing is worth 98 now because we are returning that calculation back.

124
00:07:44,500 --> 00:07:49,660
And then what we do with the 98 with a value that is we all say we are saving it right here in this

125
00:07:49,660 --> 00:07:51,010
variable here.

126
00:07:51,010 --> 00:07:52,090
Right.

127
00:07:52,300 --> 00:07:54,360
To do all the things with it.

128
00:07:54,380 --> 00:07:55,530
All right.

129
00:07:56,050 --> 00:08:00,340
So what we did with is is that we came the right.

130
00:08:00,400 --> 00:08:05,920
We use remember we can reuse the same variable over again and we can assign the same value or even different

131
00:08:05,920 --> 00:08:06,730
values.

132
00:08:06,730 --> 00:08:14,340
So I re-uses very well again right here to assign it to and to use the same function again to add a

133
00:08:14,630 --> 00:08:19,180
100 plus the resoled plus ninety eight.

134
00:08:19,210 --> 00:08:21,270
Don't worry about what you see here.

135
00:08:21,310 --> 00:08:30,600
Just know that this resoled right now right here is worth 98 you just know that this is not a yea in

136
00:08:30,600 --> 00:08:34,030
this is not here because we already had this speculation right here.

137
00:08:34,360 --> 00:08:35,480
As you can see there.

138
00:08:35,740 --> 00:08:37,850
So remember this is from right to left.

139
00:08:37,870 --> 00:08:41,270
We assign values from right to left in programming OK.

140
00:08:41,350 --> 00:08:45,180
So we got 98 here and a hundred here.

141
00:08:45,580 --> 00:08:51,150
And then when we call this function add two numbers and numbers is going to go over here with the 90

142
00:08:51,370 --> 00:08:52,680
that I got right here.

143
00:08:52,960 --> 00:08:55,310
And there are hundreds going to go here.

144
00:08:55,330 --> 00:08:59,530
There are hundreds going to go here and then is going to go here is going to add it up and there is

145
00:08:59,530 --> 00:09:03,070
going to return it back to us again here.

146
00:09:03,070 --> 00:09:10,240
So that one return back to us and then we are we using this variable again called the resoled which

147
00:09:10,240 --> 00:09:11,720
is the same as is.

148
00:09:11,930 --> 00:09:18,960
And right now this variable is gets assigned to a different value of 188 and then we are echoing de-value

149
00:09:18,960 --> 00:09:21,490
value out right here.

150
00:09:21,490 --> 00:09:21,730
Right.

151
00:09:21,730 --> 00:09:23,620
Don't let that trip you off.

152
00:09:23,620 --> 00:09:27,630
We are actually using the same variable in assigning a different value.

153
00:09:27,650 --> 00:09:31,330
So I come here and I say you know what.

154
00:09:33,680 --> 00:09:36,480
And I'm just going to do an echo for a break.

155
00:09:36,550 --> 00:09:38,640
So that way you can see the difference.

156
00:09:38,680 --> 00:09:45,490
What I'm going to do here is it's simply a matter of fact I don't need this.

157
00:09:45,490 --> 00:09:48,870
What am I doing let's just do a break here.

158
00:09:48,870 --> 00:09:50,150
All right.

159
00:09:50,380 --> 00:09:54,450
Just to let you know that this result here is different from this resort.

160
00:09:54,480 --> 00:09:55,050
Right.

161
00:09:55,120 --> 00:09:57,780
Remember the variables they go from the top to bottom.

162
00:09:57,790 --> 00:10:03,460
So right now this is worth 98 right here and going to echo it out on the screen so you can see it.

163
00:10:03,670 --> 00:10:06,700
And then when he goes to the second one is worth 198.

164
00:10:06,850 --> 00:10:08,150
So watch this.

165
00:10:08,230 --> 00:10:09,330
See that.

166
00:10:09,970 --> 00:10:11,810
So right now this is worth 90 there.

167
00:10:11,820 --> 00:10:17,730
But then I go down again they use the same function to add a hundred more to it to that 98 and we get

168
00:10:17,740 --> 00:10:22,480
100 190 and we keep keep doing this over and over again.

169
00:10:22,600 --> 00:10:27,780
It's a matter of fact let's do it again one more time so you can see what I'm talking about here.

170
00:10:28,600 --> 00:10:33,030
And that's going to add 300 to it.

171
00:10:33,070 --> 00:10:33,590
All right.

172
00:10:33,670 --> 00:10:37,330
And of course we need the echo for this here.

173
00:10:37,660 --> 00:10:45,270
So that way he does not look at that I can't we use that over and over again.

174
00:10:45,340 --> 00:10:47,660
Let's not confuse you.

175
00:10:48,140 --> 00:10:53,710
This this can add anything I can add a thousand here and look at the number right here.

176
00:10:53,740 --> 00:11:00,370
Remember this function just adds up even if it does have to add up even if it does add up to the same

177
00:11:00,370 --> 00:11:06,720
resoled variable here on top he added up to whatever we put it here.

178
00:11:06,730 --> 00:11:07,060
All right.

179
00:11:07,060 --> 00:11:08,380
Just know that.

180
00:11:08,470 --> 00:11:14,770
So you see how flexible we can make or function functions how much more extendible we can make it right

181
00:11:14,890 --> 00:11:21,280
just by returning it to some calculation returning the value out of the function we can do many things

182
00:11:21,280 --> 00:11:21,970
to it.

183
00:11:22,200 --> 00:11:22,500
Right.

184
00:11:22,510 --> 00:11:27,520
And the imagination is the limit to what you can do with this type of information.

185
00:11:27,520 --> 00:11:28,880
With this type of functionality.

186
00:11:28,930 --> 00:11:29,530
Right.

187
00:11:29,620 --> 00:11:31,480
So anyway thank you for watching this lecture.

188
00:11:31,480 --> 00:11:37,390
Hopefully that gave you a really really good idea on what you can do with functions when you are returning

189
00:11:37,390 --> 00:11:39,660
data to do whatever you want outside the function.

190
00:11:39,660 --> 00:11:40,190
All right.

191
00:11:40,360 --> 00:11:46,180
So anyway hopefully you've got some valuable knowledge and you are happy and you will fall asleep just

192
00:11:46,180 --> 00:11:47,910
thinking about BHP today.

193
00:11:48,110 --> 00:11:50,500
Anyways I was in the next lecture take care
