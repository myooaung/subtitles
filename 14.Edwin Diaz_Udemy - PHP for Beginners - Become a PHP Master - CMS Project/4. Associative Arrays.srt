1
00:00:00,630 --> 00:00:07,440
High on this video we are going to be learning about a different kind overrates associative arrays.

2
00:00:07,470 --> 00:00:14,550
This arrays are arrays that don't need to be ordered like the ones that we already did.

3
00:00:14,550 --> 00:00:20,290
These arrays can be called by name we can refer to where by Nene's by labels.

4
00:00:20,460 --> 00:00:25,560
And if you don't know what I'm talking about don't worry I'm going to show you right now immediately

5
00:00:25,560 --> 00:00:29,970
how we do this so let's go ahead and open our co-editors.

6
00:00:30,630 --> 00:00:38,730
And for those of you that don't know where we are remember that we are in localhost demo and here on

7
00:00:38,730 --> 00:00:45,420
this directory OK this is what we are doing right here and this is right here in my coeditor.

8
00:00:45,420 --> 00:00:51,400
All right so you're going to minimize this and let's do a Save As like we always do on a blank page

9
00:00:51,480 --> 00:00:58,290
the mail now blank that the email blank dot BHB.

10
00:00:59,160 --> 00:01:01,060
I don't know why I don't get used to it.

11
00:01:01,080 --> 00:01:03,010
I don't even use a C mail.

12
00:01:03,020 --> 00:01:04,500
But anyways.

13
00:01:04,500 --> 00:01:09,710
So we're going to call this race a as a as all C for associative.

14
00:01:09,720 --> 00:01:11,950
I don't want to write the whole thing.

15
00:01:12,990 --> 00:01:21,690
So let's open up our BHB tags and let's go ahead and jump right to it.

16
00:01:21,750 --> 00:01:24,630
We know that the regular arrays are defined like this.

17
00:01:24,630 --> 00:01:27,710
We have a variable right here.

18
00:01:28,050 --> 00:01:31,430
And then we can go ahead and write an array like this here.

19
00:01:31,440 --> 00:01:32,880
Right.

20
00:01:32,910 --> 00:01:37,240
We know that and this becomes an array regularly.

21
00:01:37,850 --> 00:01:44,100
We can put our values in here say something like maybe let's just put some numbers in here.

22
00:01:44,100 --> 00:01:49,420
Ten twenty forty five.

23
00:01:49,530 --> 00:01:51,300
Well actually that's nine.

24
00:01:51,540 --> 00:01:55,020
And then we can go heading actually like this.

25
00:01:55,860 --> 00:02:01,910
We refer to it like this number with square brackets here.

26
00:02:02,130 --> 00:02:06,310
And if I want to print out this number here you say 20 right.

27
00:02:06,780 --> 00:02:12,930
And we go and we see this on the browser and see are actually a mistake right here.

28
00:02:13,230 --> 00:02:19,430
Make sure we fix that all right on the find 20 of set.

29
00:02:19,680 --> 00:02:23,600
Of course we need to.

30
00:02:23,730 --> 00:02:24,690
There we go.

31
00:02:24,690 --> 00:02:25,290
All right.

32
00:02:25,290 --> 00:02:29,210
So we know that we can print out the values of an array like this.

33
00:02:29,220 --> 00:02:30,640
Right.

34
00:02:30,710 --> 00:02:31,020
All right.

35
00:02:31,020 --> 00:02:33,570
This is a normal way.

36
00:02:33,840 --> 00:02:37,770
Let's make an associate of array and you're going to see the difference immediately.

37
00:02:37,770 --> 00:02:40,610
Let me just put a brake tag right here.

38
00:02:41,070 --> 00:02:46,730
So that way when I when we call and that's the way it will be on the next line.

39
00:02:47,100 --> 00:02:49,900
So let me show you what an associate of a is.

40
00:02:50,010 --> 00:02:52,620
Let's call this names.

41
00:02:53,490 --> 00:02:53,960
All right.

42
00:02:54,000 --> 00:02:57,090
And very simple.

43
00:02:57,090 --> 00:03:03,120
I'm going to create the same key we're here and we use an old version of writing this.

44
00:03:03,170 --> 00:03:03,600
All right.

45
00:03:03,600 --> 00:03:05,700
We can use a shorthand version like this.

46
00:03:05,700 --> 00:03:08,220
Remember that it is.

47
00:03:09,000 --> 00:03:11,450
But just for illustration purposes only.

48
00:03:11,490 --> 00:03:12,990
I want to write it like this.

49
00:03:12,990 --> 00:03:15,360
That way you know this is this is an array.

50
00:03:15,450 --> 00:03:16,070
Right.

51
00:03:16,250 --> 00:03:16,570
So

52
00:03:19,940 --> 00:03:21,540
the array has labels.

53
00:03:21,570 --> 00:03:26,340
We know that the first value here is in something called an index.

54
00:03:26,340 --> 00:03:28,020
This index is zero.

55
00:03:28,020 --> 00:03:32,580
This only is one and there's only two depending on the values that you got here.

56
00:03:32,730 --> 00:03:38,640
We start from zero and we end on whatever amount or whatever values we got here.

57
00:03:38,650 --> 00:03:42,360
Right we've got 20 values were and are not 20 values.

58
00:03:42,750 --> 00:03:43,680
And this is called.

59
00:03:43,800 --> 00:03:48,940
We know that this is called Zero so this needs to be in order in order for me to print this on the screen.

60
00:03:49,050 --> 00:03:54,470
I need to remember way where this is and was bodices.

61
00:03:54,500 --> 00:04:00,630
And right now we're printing out the third value 0 1 and 2 right here.

62
00:04:00,630 --> 00:04:08,120
So I need to remember that this is in that spot right there for me to print to imagine if I have a thousand

63
00:04:08,120 --> 00:04:14,490
dollars inside these array How am I going to remember where that specific value is.

64
00:04:14,640 --> 00:04:15,080
Right.

65
00:04:15,150 --> 00:04:17,540
And let's say for example these were names.

66
00:04:17,910 --> 00:04:25,800
So if let's say this was Jose here and this was I don't know Maria.

67
00:04:27,470 --> 00:04:29,670
And this was Juanita.

68
00:04:29,700 --> 00:04:31,730
I don't know where I got all these names.

69
00:04:31,740 --> 00:04:34,370
I think a magic or something.

70
00:04:34,380 --> 00:04:41,400
All right so if I have all these names here imagine if I got a thousand names I want to go ahead and

71
00:04:41,400 --> 00:04:43,190
print print out one of them.

72
00:04:43,230 --> 00:04:49,390
And I said OK Jose I think he's in spy number 1000 on this one thousand.

73
00:04:49,500 --> 00:04:50,430
That would be crazy.

74
00:04:50,430 --> 00:04:53,250
Right well associative arrays are going to help us out.

75
00:04:53,370 --> 00:04:57,120
You see we need is a raise in certain occasions.

76
00:04:57,300 --> 00:05:03,310
But for when when labeling your data inside an array is important.

77
00:05:03,480 --> 00:05:08,910
You need associative arrays where you don't care about the order of your data inside the array.

78
00:05:09,000 --> 00:05:12,090
Then you can use a no more raise right.

79
00:05:12,150 --> 00:05:13,670
But right now we care about the data.

80
00:05:13,680 --> 00:05:18,030
I want to be able to find data inside my arrays by label.

81
00:05:18,150 --> 00:05:22,010
For example if I have a list of names I want to be able to find it in here.

82
00:05:22,110 --> 00:05:28,190
So I'm going to call this first name look at that.

83
00:05:28,220 --> 00:05:30,920
So this is going to be the end in 0.

84
00:05:30,950 --> 00:05:32,770
Compared to zero right here.

85
00:05:32,780 --> 00:05:36,330
But the only thing is that that zero we're not showing it right here.

86
00:05:36,490 --> 00:05:41,390
To show it to you right now in the browser and in the print are structured so that way you can get the

87
00:05:41,380 --> 00:05:42,370
better idea.

88
00:05:42,510 --> 00:05:46,590
But right here we are replacing ended at zero by this label.

89
00:05:46,610 --> 00:05:52,720
This is called the key first name and then we assign a value like this.

90
00:05:52,940 --> 00:05:58,190
We use this equal and the greater than symbol and we assign it whatever value we want.

91
00:05:58,190 --> 00:06:03,830
For example I wanted this value to be name Edwin Right.

92
00:06:04,010 --> 00:06:09,590
So if I show you this on the screen right now I'm not going to do a neck or what I'm going to do is

93
00:06:09,590 --> 00:06:15,940
I want to print are just to show you array

94
00:06:18,530 --> 00:06:20,660
and see right here.

95
00:06:21,020 --> 00:06:21,590
All right.

96
00:06:21,830 --> 00:06:23,750
Let me show you the top one too.

97
00:06:24,340 --> 00:06:28,780
Let me just comment this out and this is the print are also in here.

98
00:06:29,360 --> 00:06:29,810
Print

99
00:06:34,190 --> 00:06:42,830
this is a really good thing because now we can refer to our data inside by name instead of by numbers.

100
00:06:42,830 --> 00:06:46,140
All right so I have this array here on top.

101
00:06:46,160 --> 00:06:47,270
This is a regular array.

102
00:06:47,270 --> 00:06:50,500
By the way an array.

103
00:06:51,260 --> 00:06:52,950
Let me put that break.

104
00:06:53,270 --> 00:06:59,620
So that where you can see the difference right here.

105
00:07:00,230 --> 00:07:03,530
All right so now we have two arrays on one on each line.

106
00:07:03,530 --> 00:07:04,120
Right.

107
00:07:04,160 --> 00:07:09,650
So this zero that you see here is the key of the normal way.

108
00:07:10,100 --> 00:07:13,610
And right now what we did would associate array.

109
00:07:13,610 --> 00:07:15,840
This is their Sosia array This is the second one.

110
00:07:15,980 --> 00:07:17,790
We changed this key of 0.

111
00:07:17,810 --> 00:07:21,700
We change it to first name.

112
00:07:21,990 --> 00:07:24,020
You can see they are basically the same.

113
00:07:24,020 --> 00:07:30,430
We get a little arrow here and we got a little arrow here but this there were all in there no more way

114
00:07:30,440 --> 00:07:33,300
we can see it through here.

115
00:07:33,300 --> 00:07:33,930
All right.

116
00:07:34,010 --> 00:07:40,250
We can see it but if we use a print art function we can see that they both are the same.

117
00:07:40,250 --> 00:07:45,680
The only difference is that we are doing the only different thing that we're doing is changing the name

118
00:07:46,010 --> 00:07:48,220
of this key right here this is called the key.

119
00:07:48,380 --> 00:07:50,000
And this is called a value.

120
00:07:50,390 --> 00:07:54,230
So we are changing the name of the key the value of the key right.

121
00:07:54,230 --> 00:08:02,590
Right here this is 0 for a word first name and then we are referring to the value right here.

122
00:08:02,720 --> 00:08:08,400
And we use using this whole structure just like you see here in the back.

123
00:08:08,420 --> 00:08:12,890
Right because this is this is something that is not available for regular people.

124
00:08:12,890 --> 00:08:16,920
If I don't use the print function if I use X which you won't be able to see that.

125
00:08:17,330 --> 00:08:19,860
So we are using the whole structure here.

126
00:08:20,110 --> 00:08:24,230
We change in the end it's 0 for the first name the label.

127
00:08:24,230 --> 00:08:27,590
So now we can refer to this by label.

128
00:08:27,830 --> 00:08:35,020
For example if I want to encode this now for say Echo I just use names.

129
00:08:35,610 --> 00:08:46,400
And in between brackets here I just say first name right here look at this first name and I can refer

130
00:08:46,400 --> 00:08:49,530
to that value immediately you see right here says Edwyn.

131
00:08:49,760 --> 00:08:58,010
Let me just take care of the print our function out and you can see that we can refer to the value in

132
00:08:58,010 --> 00:08:58,300
this.

133
00:08:58,310 --> 00:09:01,240
Inside this will see the array by label.

134
00:09:01,250 --> 00:09:11,750
So if I have a thousand lines of data inside here I could say you know why I need the first name and

135
00:09:12,230 --> 00:09:16,140
you could get the first name of that specific person.

136
00:09:16,400 --> 00:09:17,680
Right.

137
00:09:17,780 --> 00:09:19,010
You can get the last name.

138
00:09:19,010 --> 00:09:21,640
We can also make another one here.

139
00:09:21,710 --> 00:09:25,390
You know what we have to do is remember we separated by a coma.

140
00:09:25,430 --> 00:09:31,040
This is the same thing as a regular way we separate by a coma.

141
00:09:31,070 --> 00:09:31,660
Right.

142
00:09:31,910 --> 00:09:34,100
And then we go ahead and write down again.

143
00:09:34,100 --> 00:09:46,970
For example last name here let's just do on the score and then we use a little equal and a greater than

144
00:09:46,970 --> 00:09:54,200
symbol and we put the name the value here and say yes right.

145
00:09:56,450 --> 00:10:03,110
And I have to do here if I want to print that out is that I go ahead and write this down here and names

146
00:10:06,170 --> 00:10:06,860
and then

147
00:10:10,210 --> 00:10:16,310
the last name right.

148
00:10:16,310 --> 00:10:18,080
Let's put a little space right here

149
00:10:21,080 --> 00:10:26,450
and we are concatenating and remember that we put things together with this dot and this is a string.

150
00:10:26,450 --> 00:10:33,680
This is a space that I'm putting right here as you can see here we were able to use labels to get our

151
00:10:33,680 --> 00:10:35,520
data out of this array.

152
00:10:35,720 --> 00:10:45,120
A lot simpler than using indexes using numbers using little as you can see here using this numbers.

153
00:10:45,140 --> 00:10:52,160
If I want to refer to a regular data inside an array I would have to use numbers like numbers 0 and

154
00:10:52,220 --> 00:10:57,290
you can see here for that for when I get Juanita when I put 0.

155
00:10:57,650 --> 00:11:01,470
And again if you imagine if I have a thousand lines like this I would have to write.

156
00:11:01,640 --> 00:11:04,400
Oh yeah I remember nine seven hundred.

157
00:11:04,730 --> 00:11:08,030
I had a name John was Zale.

158
00:11:08,060 --> 00:11:10,160
Peter was in 701.

159
00:11:10,370 --> 00:11:12,020
That would be very confusing of course.

160
00:11:12,020 --> 00:11:19,220
This is going to give me a arrow here because I don't have a number in that seven hundred one but if

161
00:11:19,220 --> 00:11:23,150
I did it would print it out.

162
00:11:23,570 --> 00:11:25,820
But you could see where we can use a associative of array.

163
00:11:25,820 --> 00:11:31,940
Now we can refer to a data by labels instead of by numbers and so that we are going to be a lot easier

164
00:11:31,940 --> 00:11:34,620
to remember if we got more uses for this.

165
00:11:34,820 --> 00:11:39,400
But anyways I just wanted to give you a little introduction on associate of arrays here.

166
00:11:39,410 --> 00:11:43,520
That way you don't mess around them because they are very important and you're going to be learning

167
00:11:43,520 --> 00:11:46,390
about them throughout your programming career.

168
00:11:46,760 --> 00:11:51,090
Thank you again for watching this lecture and hopefully you were able to get some valuable information.

169
00:11:51,090 --> 00:11:52,130
And I see you in the next one.

170
00:11:52,130 --> 00:11:52,520
Take care
