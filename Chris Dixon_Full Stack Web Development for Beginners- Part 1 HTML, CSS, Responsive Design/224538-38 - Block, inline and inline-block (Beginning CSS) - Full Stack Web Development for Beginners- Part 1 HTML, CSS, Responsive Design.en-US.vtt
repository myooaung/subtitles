WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.050 --> 00:00:03.870
We already briefly discussed the most elements

00:00:03.870 --> 00:00:07.560
falling to either being inline or block level elements.

00:00:07.560 --> 00:00:11.310
We see on the screen here some inline image elements.

00:00:11.310 --> 00:00:16.500
This has the effect of each element being on the same line if it will fit.

00:00:16.500 --> 00:00:21.510
There's one thing though to be aware of when using inline elements,

00:00:21.510 --> 00:00:25.635
we can add margin and padding to the left and right,

00:00:25.635 --> 00:00:30.510
like we see here, but we cannot add it to the top and bottom.

00:00:30.510 --> 00:00:34.425
This is because content added with inline elements

00:00:34.425 --> 00:00:39.075
are intended to flow across the page and then onto the next line.

00:00:39.075 --> 00:00:42.855
Adding any extra height would disrupt this flow.

00:00:42.855 --> 00:00:47.445
Also, we are enabled to set the width and height too.

00:00:47.445 --> 00:00:49.685
Block-level elements, on the other hand,

00:00:49.685 --> 00:00:53.960
begin on new line and take up the full available width,

00:00:53.960 --> 00:00:58.630
such as a div or text when using the p element.

00:00:58.630 --> 00:01:03.885
They also allow us to set any margin and padding too without any restrictions,

00:01:03.885 --> 00:01:07.245
unlike what we've just seen with inline elements.

00:01:07.245 --> 00:01:12.860
There is a way though to have this inline behavior while also being able to set

00:01:12.860 --> 00:01:18.535
the margin and padding and this is to set the element to be inline-block.

00:01:18.535 --> 00:01:22.185
Inline-block is commonly used in navigations.

00:01:22.185 --> 00:01:26.310
By default, list items or block-level elements.

00:01:26.310 --> 00:01:29.955
Someone will make a list that will stack on top of each other.

00:01:29.955 --> 00:01:35.970
We commonly see nav links as inline or inline-block, like we see here.

00:01:35.970 --> 00:01:40.230
Inline-block allows items to flow across the page,

00:01:40.230 --> 00:01:45.484
but it still gives us the flexibility to control the padding and margin values.

00:01:45.484 --> 00:01:49.205
We can't change any elements default display type

00:01:49.205 --> 00:01:53.680
by using the CSS display property to override it.

00:01:53.680 --> 00:01:56.770
Let's go and give this a go now.

00:01:56.960 --> 00:02:01.305
Over in the CSS starting with the li element.

00:02:01.305 --> 00:02:03.900
Just blow this unordered list inside of

00:02:03.900 --> 00:02:09.960
the li and then set the display type to be inline.

00:02:09.960 --> 00:02:14.295
Give that a save and back over to our project,

00:02:14.295 --> 00:02:19.800
refresh, and now our links appear inline across the page.

00:02:19.800 --> 00:02:22.260
This works as intended,

00:02:22.260 --> 00:02:24.405
the header list items are inline,

00:02:24.405 --> 00:02:27.735
put target in all of the li elements like this,

00:02:27.735 --> 00:02:31.315
also include this sidebar list items too.

00:02:31.315 --> 00:02:35.060
If you only want to target these header list items,

00:02:35.060 --> 00:02:37.340
we can be more specific.

00:02:37.340 --> 00:02:39.395
If we go to over to the CSS,

00:02:39.395 --> 00:02:41.555
rather than just targeting the li,

00:02:41.555 --> 00:02:45.175
we can add header, li,

00:02:45.175 --> 00:02:49.545
give that a save, and onto the browser and refresh.

00:02:49.545 --> 00:02:54.890
Now we can see that this only selects any list items which are inside the header,

00:02:54.890 --> 00:02:57.560
the sidebar ones are untouched.

00:02:57.560 --> 00:03:00.875
We can go even further with this header section too,

00:03:00.875 --> 00:03:05.405
by making the site title and also these nav links inline too.

00:03:05.405 --> 00:03:08.090
In fact, we can make these inline-block,

00:03:08.090 --> 00:03:10.480
so we can still control the height too.

00:03:10.480 --> 00:03:15.710
Setting these as inline-block will make sure this title appears on the left-hand side.

00:03:15.710 --> 00:03:17.765
Then over on the right-hand side,

00:03:17.765 --> 00:03:19.700
we'll get the navigation links,

00:03:19.700 --> 00:03:22.570
which is surrounded in the nav element,

00:03:22.570 --> 00:03:25.920
so back over to the CSS.

00:03:25.920 --> 00:03:28.530
We can target this site title.

00:03:28.530 --> 00:03:30.970
We have header, h1,

00:03:30.970 --> 00:03:32.480
then separated by comma.

00:03:32.480 --> 00:03:35.485
We can also target the nav element too.

00:03:35.485 --> 00:03:43.060
Set the display, this time to be inline-block, and then refresh.

00:03:43.370 --> 00:03:48.880
Now I have the navigation and the site title lining up across the header.

00:03:48.880 --> 00:03:53.450
Inline-block is also a good way of lining up the products too.

00:03:53.450 --> 00:03:57.020
Let's give this a go inside the product div here.

00:03:57.020 --> 00:04:02.245
Let's change the display type again to be inline-block,

00:04:02.245 --> 00:04:08.055
onto the browser, and inside the index page, let's scroll down.

00:04:08.055 --> 00:04:11.985
Now we have our products lining up across page 2.

00:04:11.985 --> 00:04:16.669
This inline-block property can even be used to have the sidebar,

00:04:16.669 --> 00:04:18.500
which is currently here,

00:04:18.500 --> 00:04:21.650
and also these products side-by-side.

00:04:21.650 --> 00:04:23.750
Remember the sidebar was in

00:04:23.750 --> 00:04:28.310
the aside elements and all these products were contained in the main section.

00:04:28.310 --> 00:04:31.460
Let's first go over to the CSS and we can set

00:04:31.460 --> 00:04:35.065
the width of the main and the aside section.

00:04:35.065 --> 00:04:37.815
I'm going to add this just underneath the header,

00:04:37.815 --> 00:04:40.405
h1, and nav section.

00:04:40.405 --> 00:04:47.525
Let's first begin with the main section and set the width to be 680 pixels.

00:04:47.525 --> 00:04:51.800
Then we can make sure the sidebar also fits across the row

00:04:51.800 --> 00:04:57.210
by setting the aside width to be 270 pixels.

00:05:01.370 --> 00:05:04.665
I've selected these two values here.

00:05:04.665 --> 00:05:09.345
When combined, these are both less than the 1,000 pixels body width,

00:05:09.345 --> 00:05:10.965
which we had earlier.

00:05:10.965 --> 00:05:16.130
Therefore, setting the aside and main to these sizes will make sure that they

00:05:16.130 --> 00:05:21.695
both fit across the page and also allow some margin and padding too.

00:05:21.695 --> 00:05:23.930
Let's see how this is looking,

00:05:23.930 --> 00:05:28.775
reload and we can now see the sidebar is a little bit wider.

00:05:28.775 --> 00:05:31.850
If we take a look at the width of this line here and

00:05:31.850 --> 00:05:35.545
also the products section has been restricted to this part here.

00:05:35.545 --> 00:05:39.800
Now let's go over and set the display type to be inline-block.

00:05:39.800 --> 00:05:44.465
First the main, display type of inline-block,

00:05:44.465 --> 00:05:47.400
and then also for the sidebar.

00:05:49.730 --> 00:05:53.135
Then hopefully, if we save this and now go over,

00:05:53.135 --> 00:05:54.560
we can now see this

00:05:54.560 --> 00:06:01.485
side-by-side since the aside and the main section are both inline-block.

00:06:01.485 --> 00:06:03.560
Things are starting to look better now,

00:06:03.560 --> 00:06:07.810
but the sidebar items down here are at the very bottom.

00:06:07.810 --> 00:06:12.605
To fix this when working with inline elements, or even inline-block,

00:06:12.605 --> 00:06:14.495
which acts a lot like inline,

00:06:14.495 --> 00:06:18.970
we have access to a CSS property called vertical align.

00:06:18.970 --> 00:06:23.690
If we go over to the sidebar, just under display,

00:06:23.690 --> 00:06:30.000
we can also set the vertical align and place the text at the top.

00:06:30.940 --> 00:06:37.010
Hopefully it should now push our text to the top of the sidebar, which it does.

00:06:37.010 --> 00:06:40.250
This vertical align property can be used to align

00:06:40.250 --> 00:06:44.510
inline items or items inside of table cells.

00:06:44.510 --> 00:06:48.905
We mentioned in the slides earlier that when using inline elements,

00:06:48.905 --> 00:06:51.905
we can't add margin and padding to the left and right,

00:06:51.905 --> 00:06:54.820
but we can send it to the top and bottom.

00:06:54.820 --> 00:07:00.005
This can be seen with our product links of More Info and Add To Cart.

00:07:00.005 --> 00:07:03.910
Let's go ahead and add some padding to see what happens.

00:07:03.910 --> 00:07:08.240
First, we need to give them a class over in the index page.

00:07:08.240 --> 00:07:11.015
I'm going to give this a class of button.

00:07:11.015 --> 00:07:16.010
First, let's go to the very top product and look for these two links.

00:07:16.010 --> 00:07:20.345
Then we can go ahead and add a class name of button,

00:07:20.345 --> 00:07:22.910
so class equals button.

00:07:22.910 --> 00:07:25.130
Then we need to add this to all of our product,

00:07:25.130 --> 00:07:30.030
so I'm going to copy this and add it to the second link too.

00:07:30.030 --> 00:07:33.480
Then go down to our second product and we can add

00:07:33.480 --> 00:07:37.365
it to all these to keep this styling consistent.

00:07:37.365 --> 00:07:40.630
That's our four products.

00:07:40.850 --> 00:07:49.240
The four products and the last one too.

00:07:52.700 --> 00:07:56.940
We can use this button class over in the style sheet.

00:07:56.940 --> 00:07:58.965
Down at the very bottom,

00:07:58.965 --> 00:08:01.245
number of classes use a dot,

00:08:01.245 --> 00:08:03.495
put in the name of a button,

00:08:03.495 --> 00:08:07.515
some padding of 10 pixels of the font,

00:08:07.515 --> 00:08:11.700
save that, and now onto the index page and refresh.

00:08:11.700 --> 00:08:15.635
We can see the padding has added some space in between the buttons,

00:08:15.635 --> 00:08:17.915
but there is no extra height.

00:08:17.915 --> 00:08:21.710
Remember we only added one value of 10 pixels.

00:08:21.710 --> 00:08:25.135
Usually this would apply to all four sides,

00:08:25.135 --> 00:08:28.085
but we only see this on the left and right.

00:08:28.085 --> 00:08:30.830
This is because as we already know,

00:08:30.830 --> 00:08:35.335
we can't effect the height with margin and padding on inline elements,

00:08:35.335 --> 00:08:38.555
but we can unblock and inline-block.

00:08:38.555 --> 00:08:41.600
Therefore, if we go over to the CSS and change

00:08:41.600 --> 00:08:46.280
the display type of the button to be inline-block,

00:08:46.280 --> 00:08:50.165
we can see what effect this has in the browser.

00:08:50.165 --> 00:08:56.000
As soon as we refresh, we now see some extra height added to each one of these buttons.

00:08:56.000 --> 00:08:59.465
Here we've looked at the display property.

00:08:59.465 --> 00:09:03.910
As you can see, it's really important when laying out our website.

00:09:03.910 --> 00:09:07.175
It may seem a little tricky to understand at first,

00:09:07.175 --> 00:09:10.460
but you can see with this example how effective it is,

00:09:10.460 --> 00:09:15.300
even by just adding a few lines of code into our CSS.
