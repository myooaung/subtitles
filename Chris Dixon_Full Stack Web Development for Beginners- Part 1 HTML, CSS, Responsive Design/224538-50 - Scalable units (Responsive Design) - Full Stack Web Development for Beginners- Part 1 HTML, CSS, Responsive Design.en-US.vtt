WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.120 --> 00:00:05.240
We discovered the problem of using fixed sizes in the previous video.

00:00:05.240 --> 00:00:08.515
Here we see the products have a fixed width in pixels,

00:00:08.515 --> 00:00:10.870
which will not fit onto this preview device,

00:00:10.870 --> 00:00:12.905
which is an iPhone eight.

00:00:12.905 --> 00:00:18.325
Pixels do have their place and there are lots of good use cases for them.

00:00:18.325 --> 00:00:21.115
But when working with responsive layouts,

00:00:21.115 --> 00:00:23.830
we want to use a different unit of measure,

00:00:23.830 --> 00:00:25.895
which is more flexible.

00:00:25.895 --> 00:00:29.560
I. e, we want the size to be able to stretch when there is

00:00:29.560 --> 00:00:34.014
more space or shrink on smaller screen devices.

00:00:34.014 --> 00:00:39.100
This is where relative or scalable units come into play.

00:00:39.100 --> 00:00:46.990
If we go over to our style dot css and just scroll up a little to our image,

00:00:46.990 --> 00:00:49.215
which you can see here.

00:00:49.215 --> 00:00:52.500
We've already taken a little look at these already.

00:00:52.500 --> 00:00:56.065
When we set this image width to be 50 percent.

00:00:56.065 --> 00:01:01.655
Here the image will shrink or stretch to 50 percent of the available space.

00:01:01.655 --> 00:01:05.434
Rather than being a fixed size like the products.

00:01:05.434 --> 00:01:11.405
We can also use percentage for over elements to starting with the body.

00:01:11.405 --> 00:01:16.000
Let's scroll up to the body section at the top of the page.

00:01:16.000 --> 00:01:20.205
Currently, we have the set to 1000 pixels.

00:01:20.205 --> 00:01:22.055
The value was up to you.

00:01:22.055 --> 00:01:26.720
Now if we set this to be 80 percent and give us save,

00:01:26.720 --> 00:01:30.260
we can now go to the browser and refresh.

00:01:30.260 --> 00:01:32.750
Let's close this down.

00:01:32.750 --> 00:01:35.765
Now if we make the browser even smaller,

00:01:35.765 --> 00:01:39.110
we can see that the content by these lines on the outside

00:01:39.110 --> 00:01:43.450
here is always 80 percent of the browser width.

00:01:44.320 --> 00:01:49.100
Also, there are relative sizes which can be based on the viewports.

00:01:49.100 --> 00:01:53.260
The viewport is a user's visible area of the screen.

00:01:53.260 --> 00:01:56.055
We can target the viewport width,

00:01:56.055 --> 00:02:00.630
with vw, all the viewport height with, vh.

00:02:00.630 --> 00:02:04.905
If we wanted 50 percent or half of the screen width,

00:02:04.905 --> 00:02:07.300
it will be 50 vw.

00:02:07.300 --> 00:02:09.995
Let's add this in the body.

00:02:09.995 --> 00:02:13.355
Save that, refresh.

00:02:13.355 --> 00:02:17.514
Now this takes up half the width of the user's viewport,

00:02:17.514 --> 00:02:20.100
or for 80 percent.

00:02:20.100 --> 00:02:25.545
We could change this back to 80 vw and then save that.

00:02:25.545 --> 00:02:29.270
Now we have the same effect as 80 percent.

00:02:29.270 --> 00:02:31.815
The same goes for the height too.

00:02:31.815 --> 00:02:34.280
If we wanted the header to be 50 percent of

00:02:34.280 --> 00:02:38.530
the available viewport height we do it just like this.

00:02:38.530 --> 00:02:40.880
The header and the footer,

00:02:40.880 --> 00:02:46.520
we can add the height to be 50 vh.

00:02:46.520 --> 00:02:51.940
Reload and now this header that takes up half the available height.

00:02:51.940 --> 00:02:54.830
I'm just going to remove this because it looks a little bit silly

00:02:54.830 --> 00:02:57.650
so remove that from the header section.

00:02:57.650 --> 00:03:01.520
Popular relative units include em and rem,

00:03:01.520 --> 00:03:04.330
especially for font sizing.

00:03:04.330 --> 00:03:06.195
To see this in action,

00:03:06.195 --> 00:03:13.660
I'm going to set the base font size in HTML at the very top to be 16 pixels.

00:03:13.660 --> 00:03:17.820
Font size, 16 pixels.

00:03:17.820 --> 00:03:22.460
This value of 16 pixels is often the browser default anyway.

00:03:22.460 --> 00:03:25.345
But we know for sure by setting here.

00:03:25.345 --> 00:03:30.325
Then I'm going to set the font size to be different for the main section.

00:03:30.325 --> 00:03:33.675
I'll scroll down to the main selector,

00:03:33.675 --> 00:03:37.275
and also at the font size into here.

00:03:37.275 --> 00:03:41.245
Let's say 12 pixels for this example.

00:03:41.245 --> 00:03:44.150
If we go over to the browser and refresh,

00:03:44.150 --> 00:03:48.500
we now see the products have a smaller font size of 12 pixels.

00:03:48.500 --> 00:03:51.905
Then all the rest is set to be 16 pixels.

00:03:51.905 --> 00:03:55.475
There is nothing here on the screen which is unexpected.

00:03:55.475 --> 00:04:01.510
We see the text size all looks the same except for the smaller font in his main section.

00:04:01.510 --> 00:04:07.075
Now let's change the font size for the products using the em units of measure.

00:04:07.075 --> 00:04:09.765
Let's go down to the products,

00:04:09.765 --> 00:04:11.840
and down the bottom.

00:04:11.840 --> 00:04:16.310
Let's set the font size this time to be one em.

00:04:16.310 --> 00:04:21.095
If we save and then go to the browser and refresh,

00:04:21.095 --> 00:04:24.185
we don't see any changes on the screen.

00:04:24.185 --> 00:04:28.445
This is because em relates to the parent font size,

00:04:28.445 --> 00:04:30.425
which is the main section.

00:04:30.425 --> 00:04:34.700
Basically one em is one times the size it would normally be,

00:04:34.700 --> 00:04:37.335
which keeps at 12 pixels.

00:04:37.335 --> 00:04:41.445
We can confirm this if we open up the developer tools.

00:04:41.445 --> 00:04:46.325
Then if we toggle the device toolbar back to the desktop size.

00:04:46.325 --> 00:04:49.880
Then if we select one of our div sections,

00:04:49.880 --> 00:04:52.505
so div with the class of products,

00:04:52.505 --> 00:04:55.015
and then lift this up a little bit.

00:04:55.015 --> 00:05:00.380
If we then open up this computed tab on the right-hand side and then scroll down.

00:05:00.380 --> 00:05:04.100
We can see here if we look for the font size.

00:05:04.100 --> 00:05:06.095
Look at the font size here,

00:05:06.095 --> 00:05:08.870
now it's set to be 12 pixels.

00:05:08.870 --> 00:05:13.885
Therefore, if we go to over to our css and change this to be two em's.

00:05:13.885 --> 00:05:17.255
This would be twice as big as it would normally be.

00:05:17.255 --> 00:05:24.559
Refresh, scroll down to the font size and now have a value of 24 pixels.

00:05:24.559 --> 00:05:27.620
We could keep going above two if we wanted to,

00:05:27.620 --> 00:05:30.335
but we're now going to take a look at rem.

00:05:30.335 --> 00:05:32.600
This is the em value.

00:05:32.600 --> 00:05:35.305
This is based on the parent container.

00:05:35.305 --> 00:05:38.885
Basically, setting this to two em's is twice the size

00:05:38.885 --> 00:05:42.635
of the 12 pixels container for the main section.

00:05:42.635 --> 00:05:45.320
Now let's take a look at rem.

00:05:45.320 --> 00:05:48.245
Rather than the size being based on the parents,

00:05:48.245 --> 00:05:52.160
like em, rem is based on the root font-size.

00:05:52.160 --> 00:05:53.570
Root font size is,

00:05:53.570 --> 00:05:57.890
is HTML value of 16 pixels in the top section.

00:05:57.890 --> 00:05:59.794
Back to our products,

00:05:59.794 --> 00:06:02.710
rather than set this to be one em.

00:06:02.710 --> 00:06:05.835
Just here we can set this to be one rem,

00:06:05.835 --> 00:06:11.825
which is R-E-M. Back over to the developer tools.

00:06:11.825 --> 00:06:16.565
We can see straight away that this text is the same size as the cyber.

00:06:16.565 --> 00:06:20.855
If we scroll down to the font size in the computed section,

00:06:20.855 --> 00:06:27.280
this font size is now 16 pixels rather than the 12 pixels we seen before.

00:06:27.280 --> 00:06:30.875
We can also scale to be larger or smaller.

00:06:30.875 --> 00:06:35.645
For example, if we wanted it to be three times the size of the root elements,

00:06:35.645 --> 00:06:38.180
we can set it to be three rem.

00:06:38.180 --> 00:06:42.185
Refresh and now the font size is really big,

00:06:42.185 --> 00:06:43.715
just like you can see here,

00:06:43.715 --> 00:06:47.785
and it's computed size is 48 pixels.

00:06:47.785 --> 00:06:50.430
Let's close this down.

00:06:50.430 --> 00:06:54.455
Just to recap, if we set the font size to be em,

00:06:54.455 --> 00:06:57.725
this is based on the element's parents.

00:06:57.725 --> 00:07:02.005
The element's parents for the product is the main section here.

00:07:02.005 --> 00:07:04.440
If we set this to be rem,

00:07:04.440 --> 00:07:05.820
just like we'd have seen,

00:07:05.820 --> 00:07:09.225
this is based on the root HTML element.

00:07:09.225 --> 00:07:12.300
In our case, 16 pixels.

00:07:12.300 --> 00:07:16.490
Great, I'm going to now remove the sections we just added in.

00:07:16.490 --> 00:07:22.670
We could remove the 16 pixel root elements down to the main section.

00:07:22.670 --> 00:07:25.780
We can remove the 12 pixels value here.

00:07:25.780 --> 00:07:29.840
Then finally, for the product we can also remove this line.

00:07:29.840 --> 00:07:33.395
Now we have a better idea of scalable or relative units.

00:07:33.395 --> 00:07:36.410
Now let's put this into practice with our projects.

00:07:36.410 --> 00:07:40.550
In the next video, we will apply the relative units to our projects,

00:07:40.550 --> 00:07:45.960
and this will allow our website's been more fluid as the screen size changes.
