WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.035
We now have some content on the screen inside the browser.

00:00:04.035 --> 00:00:07.425
But at the moment it's not really organized.

00:00:07.425 --> 00:00:11.685
We've just added some content basically from the top to the bottom,

00:00:11.685 --> 00:00:15.480
while can't do much styling and position of these headings,

00:00:15.480 --> 00:00:17.940
until we reach the CSS section,

00:00:17.940 --> 00:00:22.185
we can begin to group our related content together.

00:00:22.185 --> 00:00:26.010
If we take a look again at the finished site,

00:00:26.010 --> 00:00:28.770
looking here at the homepage,

00:00:28.770 --> 00:00:32.160
even somebody completely new to building websites could

00:00:32.160 --> 00:00:36.775
probably figure out which sections should probably be grouped together.

00:00:36.775 --> 00:00:39.840
We have a header at the very top,

00:00:39.840 --> 00:00:41.770
which would be one area.

00:00:41.770 --> 00:00:45.140
On the left-hand side, we have the sidebar.

00:00:45.140 --> 00:00:50.615
We also have a product area displaying all our products from our store.

00:00:50.615 --> 00:00:58.760
We have individual product information such as this section here and down at the bottom,

00:00:58.760 --> 00:01:01.565
we also have a footer area.

00:01:01.565 --> 00:01:05.590
Grouping content together is fairly straight forward.

00:01:05.590 --> 00:01:11.255
We just need to surround the content in a container called a div.

00:01:11.255 --> 00:01:15.960
A div is an elements and has a opening and closing tag.

00:01:15.960 --> 00:01:18.695
It's short for a division.

00:01:18.695 --> 00:01:21.785
Back over in the index html file,

00:01:21.785 --> 00:01:25.085
we can add some div elements to our website.

00:01:25.085 --> 00:01:29.170
Let's close this down and go back over to our index page.

00:01:29.170 --> 00:01:31.135
The text that are at the top,

00:01:31.135 --> 00:01:32.555
which was the header,

00:01:32.555 --> 00:01:35.510
is going to be inside the header group.

00:01:35.510 --> 00:01:38.375
Let's create our div tag.

00:01:38.375 --> 00:01:42.190
An opening tag and the closing tag too.

00:01:42.190 --> 00:01:46.260
Keep this organized and go on to add them on their own line.

00:01:46.260 --> 00:01:51.000
Then I'm going to cut the h1 from before.

00:01:51.000 --> 00:01:55.050
Now place this inside of this div section.

00:01:55.050 --> 00:01:57.220
Now have a header section.

00:01:57.220 --> 00:02:00.025
If we give that a save and then reload the browser,

00:02:00.025 --> 00:02:02.435
we don't see any changes.

00:02:02.435 --> 00:02:06.325
This is because a div is just a general container.

00:02:06.325 --> 00:02:09.880
However, they are really important, and used a lot.

00:02:09.880 --> 00:02:12.310
We will see the importance more later,

00:02:12.310 --> 00:02:15.010
when we get into the CSS section.

00:02:15.010 --> 00:02:18.100
Because for example, we could group together all of

00:02:18.100 --> 00:02:21.070
the header content and apply a certain font color,

00:02:21.070 --> 00:02:23.920
or background color to the full section.

00:02:23.920 --> 00:02:28.330
Or we could set one div to be positioned on the left of the page,

00:02:28.330 --> 00:02:30.890
and another div on the right-hand side.

00:02:30.890 --> 00:02:34.555
Let's go back over and add two more containers.

00:02:34.555 --> 00:02:37.395
The first container is going to be for the sidebar,

00:02:37.395 --> 00:02:41.930
which has the three headings just here. Blow the div.

00:02:41.930 --> 00:02:44.520
Let's add a second div,

00:02:44.900 --> 00:02:51.960
and then we can cut all three of these headings and paste them inside here.

00:02:53.960 --> 00:02:59.925
Finally our third and final div just below these two.

00:02:59.925 --> 00:03:05.240
Close that off and then we can paste in the h2 of all items.

00:03:05.240 --> 00:03:08.210
As you progress through this section will also add

00:03:08.210 --> 00:03:11.795
more content to this main section, such as the products.

00:03:11.795 --> 00:03:14.989
But for now we just have the heading of all items,

00:03:14.989 --> 00:03:17.910
give that save, and then reload.

00:03:17.910 --> 00:03:19.805
Still we see no changes,

00:03:19.805 --> 00:03:21.590
but this is fine for now.

00:03:21.590 --> 00:03:25.595
There's also another element used too as a container.

00:03:25.595 --> 00:03:28.415
This is called the span elements.

00:03:28.415 --> 00:03:31.280
To show the difference between div and span.

00:03:31.280 --> 00:03:37.160
First, let's imagine we wanted to apply some special styling to the $ sign symbol,

00:03:37.160 --> 00:03:40.300
which we have just here. But not the price.

00:03:40.300 --> 00:03:47.100
We could surround this $ symbol with a div type. Let's do that now.

00:03:47.100 --> 00:03:51.415
Cut out this section and paste it in.

00:03:51.415 --> 00:03:54.785
If we save that and then reload the browser,

00:03:54.785 --> 00:03:57.595
we see something strange happens.

00:03:57.595 --> 00:04:02.425
The div pushes the $ symbol onto a new line.

00:04:02.425 --> 00:04:07.220
This is because a div is called a block level element.

00:04:07.220 --> 00:04:13.370
Elements are mostly grouped into either being a block level or an inline elements.

00:04:13.370 --> 00:04:17.180
Block-level elements occupy the full available width of

00:04:17.180 --> 00:04:21.505
the browser and also it starts on a new line.

00:04:21.505 --> 00:04:24.980
Also, all headings which we've used so far,

00:04:24.980 --> 00:04:28.715
just above and below are also block level two.

00:04:28.715 --> 00:04:31.655
This is why we see them stacked on top of each other,

00:04:31.655 --> 00:04:34.280
each starting on a new line.

00:04:34.280 --> 00:04:37.730
Inline elements, however, as they may sound,

00:04:37.730 --> 00:04:39.710
do not start on their own line.

00:04:39.710 --> 00:04:41.345
If space is available,

00:04:41.345 --> 00:04:43.660
they will line up across the page.

00:04:43.660 --> 00:04:46.380
A span elements which we mentioned before.

00:04:46.380 --> 00:04:50.770
Has an alternative container to div is an inline elements.

00:04:50.770 --> 00:04:56.065
This means we can go back over and change div to be span.

00:04:56.065 --> 00:05:02.280
Change the opening and closing tag give that a save and if we refresh,

00:05:02.280 --> 00:05:08.080
the browser we now see the brackets and $ symbol inline with the price text.

00:05:08.080 --> 00:05:14.885
This is how we could use div and span elements to contain or target a part of our code.

00:05:14.885 --> 00:05:18.080
They'll become even more useful later on the group

00:05:18.080 --> 00:05:22.140
together sections to apply styling and layout.
