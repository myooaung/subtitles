WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:06.315
We now know about how to use floats to float our elements to the left or to the right.

00:00:06.315 --> 00:00:09.840
Another important CSS property we can use to

00:00:09.840 --> 00:00:13.470
position our elements is the position property.

00:00:13.470 --> 00:00:16.710
This gives us various methods of placing or

00:00:16.710 --> 00:00:20.355
adjusting where we want an element to appear on the page.

00:00:20.355 --> 00:00:23.730
There are five position values we can use called;

00:00:23.730 --> 00:00:28.875
static, relative, absolute, fixed, and sticky.

00:00:28.875 --> 00:00:32.630
To demonstrate this, we need an element to work with.

00:00:32.630 --> 00:00:35.405
Any element in our HTML will be fine,

00:00:35.405 --> 00:00:38.420
so I'm going to go over to our product detail,

00:00:38.420 --> 00:00:41.335
and then select an element.

00:00:41.335 --> 00:00:45.109
In fact, let's go to the index where there's more products,

00:00:45.109 --> 00:00:50.035
and then let's selected elements such as this button at the very bottom.

00:00:50.035 --> 00:00:53.425
Let's go over here and add an ID to this button,

00:00:53.425 --> 00:00:55.160
and any name is fine.

00:00:55.160 --> 00:00:57.325
I'm going to call this position,

00:00:57.325 --> 00:00:59.505
and then save that.

00:00:59.505 --> 00:01:02.225
Then if we go to the CSS as usual,

00:01:02.225 --> 00:01:06.360
we can go down to the bottom and target this with the hash,

00:01:07.750 --> 00:01:11.790
and then the name which we will position.

00:01:12.640 --> 00:01:16.610
The default value for position is static.

00:01:16.610 --> 00:01:18.950
This simply means the elements will be placed

00:01:18.950 --> 00:01:21.950
where they would normally be in the flow, or the documents.

00:01:21.950 --> 00:01:24.860
This could be in the top left, like we've seen earlier,

00:01:24.860 --> 00:01:30.305
with blocked elements, or the next position in the row if it's an Inline element.

00:01:30.305 --> 00:01:35.810
Setting CSS properties such as top, bottom, right,

00:01:35.810 --> 00:01:41.045
or left have no effect in offsetting these elements. Let's give this a go.

00:01:41.045 --> 00:01:44.260
Let's add 10 pixels to the top,

00:01:44.260 --> 00:01:46.860
and also the index page.

00:01:46.860 --> 00:01:50.820
We can see this Add To Cart button has not moved at all,

00:01:50.820 --> 00:01:54.550
because it only takes up the position it would normally be in.

00:01:54.550 --> 00:01:57.575
If we did want this offsets to apply,

00:01:57.575 --> 00:02:00.050
we could change the position to be relative.

00:02:00.050 --> 00:02:05.520
That's our opposition of relative just above this.

00:02:07.130 --> 00:02:11.870
Now, we save and go back over to the browser and then refresh.

00:02:11.870 --> 00:02:16.300
Now, the button has been pushed down from the top by 10 pixels.

00:02:16.300 --> 00:02:20.930
Relative positioning places the elements where they would normally be,

00:02:20.930 --> 00:02:22.880
just like it was before.

00:02:22.880 --> 00:02:26.285
But also takes into account any top, bottom,

00:02:26.285 --> 00:02:30.115
right, or left values to offset the elements.

00:02:30.115 --> 00:02:33.530
You can also see that moving these elements will not

00:02:33.530 --> 00:02:36.875
affect the position of any of our surrounding elements.

00:02:36.875 --> 00:02:38.869
Next up we have absolutes,

00:02:38.869 --> 00:02:43.620
so change relative to be absolute.

00:02:45.710 --> 00:02:48.730
Then over to the browser,

00:02:48.740 --> 00:02:51.185
we'll see it jumps to our place.

00:02:51.185 --> 00:02:54.320
It's now up at the top of the webpage,

00:02:54.320 --> 00:02:58.040
absolute will make the last two values we've looked at.

00:02:58.040 --> 00:03:02.225
We'll take the elements out of the normal flow of the document.

00:03:02.225 --> 00:03:06.485
This means you will not be placed in the next available space.

00:03:06.485 --> 00:03:09.215
There is actually no space created for it.

00:03:09.215 --> 00:03:12.650
This is why it's in at the top above other elements.

00:03:12.650 --> 00:03:16.280
Currently, the top value of ten pixels is taken effect,

00:03:16.280 --> 00:03:19.160
if were to go over and add a new value,

00:03:19.160 --> 00:03:21.035
so let's add the left,

00:03:21.035 --> 00:03:24.870
also 10 pixels, refresh.

00:03:24.870 --> 00:03:29.345
Now, it's just placed ten pixels from the top and ten pixels from the left.

00:03:29.345 --> 00:03:35.150
This position has defaulted to be referenced in the very outside of the web page,

00:03:35.150 --> 00:03:36.780
or to the more precise,

00:03:36.780 --> 00:03:39.315
the HTML container elements.

00:03:39.315 --> 00:03:43.050
We can also change the elements it is referenced from,

00:03:43.050 --> 00:03:45.945
if we don't want to use the HTML elements.

00:03:45.945 --> 00:03:52.255
All we need to do is set the position of another parent elements to be relative.

00:03:52.255 --> 00:03:56.360
If we wanted the button to be referenced from this main container,

00:03:56.360 --> 00:03:58.684
for example, surrounding the products,

00:03:58.684 --> 00:04:02.470
we could go over to the main tank in the index page,

00:04:02.470 --> 00:04:06.240
and then we could add a CSS style property.

00:04:06.240 --> 00:04:11.230
Here, we could set the position to be relative,

00:04:12.500 --> 00:04:16.470
and see how this affect it with a refresh.

00:04:16.470 --> 00:04:22.895
Now, this is referenced 10 pixels from the top and left of the main relative container,

00:04:22.895 --> 00:04:27.400
or if we wanted it to be referenced from this first productive,

00:04:27.400 --> 00:04:29.650
we could do exactly the same here.

00:04:29.650 --> 00:04:31.915
Instead of administer domain,

00:04:31.915 --> 00:04:40.040
we could remove this and then add it to the div with the class of products, refresh.

00:04:40.040 --> 00:04:45.100
Now, this is reference to the top left corner of this first productive.

00:04:45.100 --> 00:04:49.720
I'm just going to remove this inline style and then save up.

00:04:49.720 --> 00:04:53.585
This absolute value gives us a lot of flexibility,

00:04:53.585 --> 00:04:55.330
but we do need to be careful too,

00:04:55.330 --> 00:04:58.865
as things can also move as the browser is stretched.

00:04:58.865 --> 00:05:02.770
This means we need to be really careful when using absolute.

00:05:02.770 --> 00:05:05.735
Now, let's move on to the fixed position.

00:05:05.735 --> 00:05:08.990
Rather than absolute, change this to be fixed.

00:05:08.990 --> 00:05:12.365
Now, we can oscillate the top left, that's five now.

00:05:12.365 --> 00:05:15.350
If we save and go over to the browser,

00:05:15.350 --> 00:05:18.470
we see nothing looks any different at first.

00:05:18.470 --> 00:05:21.695
When this button was referenced from the HTML,

00:05:21.695 --> 00:05:25.595
we see the element is also removed from the flow of the documents,

00:05:25.595 --> 00:05:27.695
just like it was with absolute.

00:05:27.695 --> 00:05:32.660
Also, we can see the top and left values still take effect.

00:05:32.660 --> 00:05:34.340
To see exactly what it does,

00:05:34.340 --> 00:05:36.860
we may need a bit more content on the page.

00:05:36.860 --> 00:05:40.745
I'm going to copy our six products.

00:05:40.745 --> 00:05:43.930
The first div of the class of products,

00:05:43.930 --> 00:05:47.535
and then scroll right down to the last one,

00:05:47.535 --> 00:05:50.580
which is just before the main tag here.

00:05:50.580 --> 00:05:54.450
Copy that, and then paste these in once more.

00:05:54.450 --> 00:05:59.220
We now have 12 products, and then refresh.

00:05:59.220 --> 00:06:02.585
Then if we go ahead and scroll down the page,

00:06:02.585 --> 00:06:06.980
the button stays in its fixed position in the top corner.

00:06:06.980 --> 00:06:11.480
You may often come across this for things such as an e-mail sign-up box,

00:06:11.480 --> 00:06:14.230
which you often see in the bottom corner.

00:06:14.230 --> 00:06:17.910
Finally, we also have the sticky option.

00:06:17.910 --> 00:06:24.120
We can change the position to be sticky, or any style.css.

00:06:24.760 --> 00:06:28.770
But this time we're going to target the aside,

00:06:29.020 --> 00:06:32.240
save, and then over to the browser and refresh.

00:06:32.240 --> 00:06:33.890
Now at first glance,

00:06:33.890 --> 00:06:35.840
our page looks back to normal.

00:06:35.840 --> 00:06:39.040
It seems to be nothing different than originally was.

00:06:39.040 --> 00:06:41.615
But if we go ahead and scroll down,

00:06:41.615 --> 00:06:45.680
rather than the sidebar being moved up with the rest of the products,

00:06:45.680 --> 00:06:48.590
it stays in place on the left of the screen.

00:06:48.590 --> 00:06:52.010
You will often see these four navigations or menus.

00:06:52.010 --> 00:06:55.060
They're always visible to the user.

00:06:55.060 --> 00:06:57.825
I'm going to remove this aside section,

00:06:57.825 --> 00:06:59.715
and then give a save.

00:06:59.715 --> 00:07:04.210
We can also remove the rest of these products which you added.

00:07:04.210 --> 00:07:06.455
I'm just going to undo that,

00:07:06.455 --> 00:07:10.080
just leaving the original six products.

00:07:11.540 --> 00:07:15.395
Good. This is how we use the position property to have

00:07:15.395 --> 00:07:19.680
better control of placing our elements on the screen.
