WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.085
We made a big step towards creating a responsive site already,

00:00:05.085 --> 00:00:09.165
by adding relative sizes to achieve a fluid layout.

00:00:09.165 --> 00:00:12.510
Also, we discovered some of the drawbacks too,

00:00:12.510 --> 00:00:17.475
such as the contents squashing up and causing layout changes.

00:00:17.475 --> 00:00:20.355
This also works over way too,

00:00:20.355 --> 00:00:22.800
if content is stretched too far.

00:00:22.800 --> 00:00:28.125
On larger monitors, the content will become distorted and it won't look great.

00:00:28.125 --> 00:00:31.440
This is where media queries come into play.

00:00:31.440 --> 00:00:36.990
Media queries allow us to change layout based on the user's device size,

00:00:36.990 --> 00:00:41.080
orientation, or resolution, to name just a few.

00:00:41.080 --> 00:00:44.180
For example, we could have CSS rules,

00:00:44.180 --> 00:00:47.050
the screens on the 600 pixels wide.

00:00:47.050 --> 00:00:53.480
Then another set of CSS rules for anything over 600 pixels. Just like we see here.

00:00:53.480 --> 00:00:55.195
If we take a look at this slide,

00:00:55.195 --> 00:01:00.815
we could set the product to be the full width of the container for one screen size,

00:01:00.815 --> 00:01:02.780
and then under a certain screen size,

00:01:02.780 --> 00:01:05.210
we could also set the containers to be

00:01:05.210 --> 00:01:08.995
full width too and then stacked on top of each other.

00:01:08.995 --> 00:01:14.165
If we go back over to our style sheet and then go down to the very bottom.

00:01:14.165 --> 00:01:18.475
We can use media query with the @media rule.

00:01:18.475 --> 00:01:20.900
Just under the table row,

00:01:20.900 --> 00:01:22.820
we can add @media,

00:01:22.820 --> 00:01:25.550
then open up a set of brackets,

00:01:25.550 --> 00:01:27.365
and then the curly braces,

00:01:27.365 --> 00:01:30.665
just like we did with the over CSS values.

00:01:30.665 --> 00:01:32.450
Here we can also declare,

00:01:32.450 --> 00:01:34.775
but we want this media query to apply,

00:01:34.775 --> 00:01:37.145
such as a minimum width.

00:01:37.145 --> 00:01:40.835
So let's set the minimum width to be 600 pixels.

00:01:40.835 --> 00:01:43.025
Then inside these curly braces,

00:01:43.025 --> 00:01:45.800
we can go ahead and add CSS rules,

00:01:45.800 --> 00:01:47.480
just like we did before.

00:01:47.480 --> 00:01:49.710
So let's say a list item.

00:01:49.710 --> 00:01:53.380
Let's set the color to be red.

00:01:53.380 --> 00:01:55.865
Once a minimum width of the screen,

00:01:55.865 --> 00:01:58.220
which is 600 pixels and above,

00:01:58.220 --> 00:02:01.205
the list items will then change to red.

00:02:01.205 --> 00:02:05.365
Let's save that, and over to the browser.

00:02:05.365 --> 00:02:07.830
These are our list items here.

00:02:07.830 --> 00:02:10.190
If we go down to the smallest screen size,

00:02:10.190 --> 00:02:13.015
we have the normal dark color.

00:02:13.015 --> 00:02:15.405
Once we get over 600 pixels,

00:02:15.405 --> 00:02:17.235
they all changed red.

00:02:17.235 --> 00:02:20.810
There is some available browser plugins to show the width of

00:02:20.810 --> 00:02:26.320
the browser when we stretch it or in Chrome we can go to right-click and inspect.

00:02:26.320 --> 00:02:29.415
If we just drop this down here,

00:02:29.415 --> 00:02:31.100
once we start stretching the browser,

00:02:31.100 --> 00:02:33.470
we can see in the top right-hand corner,

00:02:33.470 --> 00:02:35.660
we have the view port size.

00:02:35.660 --> 00:02:39.805
So again, if we go down to below 600 pixels,

00:02:39.805 --> 00:02:41.955
the color goes back to normal,

00:02:41.955 --> 00:02:46.505
and then over 600 we have the red color inside the media query.

00:02:46.505 --> 00:02:50.720
There's also some different media types too which we can target.

00:02:50.720 --> 00:02:53.285
Let's close down this developer tools.

00:02:53.285 --> 00:02:58.360
For example, we can add the print type to only apply styles when printing.

00:02:58.360 --> 00:03:02.150
If we wanted the text to be green when printing for whatever reason,

00:03:02.150 --> 00:03:03.905
we would do it like this.

00:03:03.905 --> 00:03:08.655
So @media, just like we did before,

00:03:08.655 --> 00:03:11.415
then we say print,

00:03:11.415 --> 00:03:14.355
and then open up the braces.

00:03:14.355 --> 00:03:20.680
Let's target the body section and set the color of the fonts to be green.

00:03:20.680 --> 00:03:23.580
Save, and then over to the browser.

00:03:23.580 --> 00:03:26.495
To save this we need to go into the print view,

00:03:26.495 --> 00:03:34.950
press command or "Control P" to open up the print preview, and then scroll down.

00:03:34.950 --> 00:03:38.000
We can see in this print preview that all the text has been

00:03:38.000 --> 00:03:41.105
changed to green because we targeted prints.

00:03:41.105 --> 00:03:45.120
Instead of this we could change print to be screen.

00:03:46.040 --> 00:03:53.155
Just like that. This will only target screens such as phones, tablets, and computers.

00:03:53.155 --> 00:03:56.190
If we save and now refresh,

00:03:56.190 --> 00:03:59.810
close this down, refresh.

00:03:59.810 --> 00:04:03.485
Now the green body color only applies to the screens.

00:04:03.485 --> 00:04:08.070
We can test this by opening up the print preview once again,

00:04:08.120 --> 00:04:10.335
and then scroll down.

00:04:10.335 --> 00:04:15.230
Now we don't see any of the green colors because this is only applying to the screen.

00:04:15.230 --> 00:04:17.340
There are other types too.

00:04:17.340 --> 00:04:21.890
So let's close this down and do a quick Google search.

00:04:21.890 --> 00:04:25.590
CSS media queries.

00:04:26.630 --> 00:04:30.270
Then we're going to go to the W3 schools version.

00:04:30.270 --> 00:04:32.985
So the @media rule.

00:04:32.985 --> 00:04:36.660
If we scroll down to the media types,

00:04:36.660 --> 00:04:38.880
which is just here.

00:04:38.880 --> 00:04:42.340
Here we see all the different media types which we can target.

00:04:42.340 --> 00:04:46.180
We've already used print and screen already,

00:04:46.180 --> 00:04:48.645
but as you can see, there is a few more.

00:04:48.645 --> 00:04:53.125
The type can also be changed for speech or screen readers,

00:04:53.125 --> 00:04:58.075
which reads out the screen and this often use for visually impaired people

00:04:58.075 --> 00:05:04.540
or we can set all to always apply the same CSS style rules for all types of media.

00:05:04.540 --> 00:05:07.420
Scrolling further down to the media features.

00:05:07.420 --> 00:05:12.240
Here is list of features which will also trigger the media query.

00:05:12.240 --> 00:05:17.350
We've already looked at the minimum width and if we scroll down,

00:05:17.350 --> 00:05:19.345
we can see that just here.

00:05:19.345 --> 00:05:22.055
But as you can see here, there are lots more,

00:05:22.055 --> 00:05:24.320
such as the device resolution,

00:05:24.320 --> 00:05:26.825
the device heights, and many more.

00:05:26.825 --> 00:05:33.050
These can also be combined to make even more complex media queries using and.

00:05:33.050 --> 00:05:35.690
So back over to our CSS file.

00:05:35.690 --> 00:05:38.965
Let's remove this second media query.

00:05:38.965 --> 00:05:43.345
Then we can use and to combine two or more queries.

00:05:43.345 --> 00:05:46.425
Let's go for the maximum width,

00:05:46.425 --> 00:05:49.380
and let's say 700 pixels.

00:05:49.380 --> 00:05:52.700
Now the styles will only apply between the minimum width of

00:05:52.700 --> 00:05:57.085
600 and the maximum width of 700 pixels.

00:05:57.085 --> 00:06:00.945
Anything else will go back to the default styles above.

00:06:00.945 --> 00:06:03.225
Back over to our Tech store,

00:06:03.225 --> 00:06:06.855
and then refresh, we're currently above 700 pixels,

00:06:06.855 --> 00:06:08.520
so we get the default color.

00:06:08.520 --> 00:06:13.720
Now if we scroll down and once we get to 700 pixels,

00:06:14.690 --> 00:06:19.080
which is just here, we see the color of red apply.

00:06:19.080 --> 00:06:23.390
Then if we go down even further to below 600 pixels,

00:06:23.390 --> 00:06:25.670
we are then back to the default colors.

00:06:25.670 --> 00:06:29.465
When this change of styling occurs using a media query,

00:06:29.465 --> 00:06:32.330
this is what is called a Breakpoints.

00:06:32.330 --> 00:06:36.800
You may frequently hear this word when dealing with responsive layouts.

00:06:36.800 --> 00:06:40.550
It may be tempting to design these breakpoints to occur,

00:06:40.550 --> 00:06:43.300
to suit popular phone or tablet sizes.

00:06:43.300 --> 00:06:47.974
However, because we need our design look good on all size devices,

00:06:47.974 --> 00:06:51.140
it's often a good idea to start with the browser really

00:06:51.140 --> 00:06:55.345
narrow and then apply our general CSS styling,

00:06:55.345 --> 00:07:00.290
then stretch the browser even wider and only apply a media query to

00:07:00.290 --> 00:07:04.895
change layouts when our design begins to look stretched or not quite right.

00:07:04.895 --> 00:07:06.845
Again, like we mentioned before,

00:07:06.845 --> 00:07:11.325
the in some browser plugins which we can search for to show the screen size,

00:07:11.325 --> 00:07:13.770
or we can go into the developer tools.

00:07:13.770 --> 00:07:18.950
Now we can begin to see the width of the screen when our design starts to look stretched.

00:07:18.950 --> 00:07:22.900
We can then take the sizes and apply these to all media query.

00:07:22.900 --> 00:07:25.220
Finally along with and,

00:07:25.220 --> 00:07:26.555
which we've used just here,

00:07:26.555 --> 00:07:30.575
it is also not and only which are known as

00:07:30.575 --> 00:07:35.350
logical operators to make even more complex media queries.

00:07:35.350 --> 00:07:37.530
So as well as the size here.

00:07:37.530 --> 00:07:40.310
If we only wanted this to apply to screens,

00:07:40.310 --> 00:07:43.565
we could say only screen.

00:07:43.565 --> 00:07:47.005
Then also target the sizes too.

00:07:47.005 --> 00:07:50.735
This just leaves us with the not keyword.

00:07:50.735 --> 00:07:55.100
Let's simplify this by cutting out the minimum and maximum widths.

00:07:55.100 --> 00:07:58.229
Let's take out this from before,

00:07:58.250 --> 00:08:02.200
and now making changes to be not screen.

00:08:02.240 --> 00:08:04.920
Changing its value to not,

00:08:04.920 --> 00:08:09.370
means the styles will apply to media queries except the screen.

00:08:09.370 --> 00:08:13.350
So save and then refresh.

00:08:13.350 --> 00:08:15.530
Now we're viewing this on the screen,

00:08:15.530 --> 00:08:18.880
the media query color of red does not apply.

00:08:18.880 --> 00:08:21.165
But if we go into the print preview,

00:08:21.165 --> 00:08:23.195
which of course is not screen,

00:08:23.195 --> 00:08:25.880
we now see this red color is applied.

00:08:25.880 --> 00:08:29.425
There we go, this is the first look at media queries.

00:08:29.425 --> 00:08:32.105
As we've seen on the W3 Schools website,

00:08:32.105 --> 00:08:35.090
there are lots of options and variants we can use,

00:08:35.090 --> 00:08:38.360
but a lot of them we may never have to use too often.

00:08:38.360 --> 00:08:43.970
I'm now going to delete this demo media query, which we just added in.

00:08:43.970 --> 00:08:46.940
But we'll come back to them in the next video to

00:08:46.940 --> 00:08:50.520
change layouts for different size devices.
