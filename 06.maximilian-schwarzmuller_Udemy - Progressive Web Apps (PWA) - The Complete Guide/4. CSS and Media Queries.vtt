WEBVTT

00:02.170 --> 00:07.070
So the goal is to change the style of this card depending on which screen we have,

00:07.210 --> 00:10.250
I actually want adjust both the image here,

00:10.270 --> 00:14.450
so from a height perspective, how high this image is

00:14.590 --> 00:18.010
but also the overall card from a width perspective.

00:18.010 --> 00:24.970
So back in our application, I can simply dive into the CSS file and there, into the feed.css

00:24.970 --> 00:25.330
file

00:25.360 --> 00:30.610
which is the file getting loaded on that index.html file in the public folder, which is responsible

00:30.610 --> 00:32.490
for rendering the feed.

00:32.500 --> 00:37.750
Now if we have a look at the index.html file, there we actually append our cards to the shared

00:37.750 --> 00:38.840
moments area.

00:39.100 --> 00:40.030
We do this in the 

00:40.060 --> 00:41.720
feed.js file

00:41.770 --> 00:46.140
and here we actually see that we use the shared moment card class,

00:46.180 --> 00:53.580
we add this to every card we add to the DOM. So we can start by styling the shared moment card. Back in

00:53.600 --> 00:59.590
feed.css, we actually see it is already getting styled because we add a margin.

00:59.590 --> 01:06.250
Now let's also add a width, the card already has a default width applied by the modal lite library

01:06.400 --> 01:08.190
but we can overwrite this,

01:08.200 --> 01:12.500
so let's maybe set the width to 400 pixels here.

01:12.760 --> 01:17.900
Let's save this and let's reload and we won't see a change.

01:18.030 --> 01:19.020
This is a little gotcha

01:19.020 --> 01:20.000
I showed you earlier,

01:20.110 --> 01:24.800
if you changed one of your files which are getting precached, you also have to make sure that you update

01:24.800 --> 01:26.400
the cache in your service worker.

01:26.530 --> 01:34.110
So bump up that static version number, reload and then simply close the tab and reopen it to activate the

01:34.100 --> 01:35.230
new service worker

01:35.230 --> 01:37.680
and now you see we have a broader image.

01:37.780 --> 01:42.990
Now it's always 400 pixels and that of course becomes an issue on smaller devices.

01:43.000 --> 01:48.120
If I open my mobile device here, you see it's now stretching across the boundaries,

01:48.250 --> 01:50.350
so that's not really how I want it.

01:50.380 --> 01:52.420
Now there are two ways of fixing this,

01:52.510 --> 01:55.150
one is that we use a percentage value

01:55.510 --> 01:57.780
and I'm going to not change this here,

01:57.820 --> 02:00.050
I'll do this later once we decided what to do.

02:00.220 --> 02:02.100
I'll work in the elements tab here instead

02:02.140 --> 02:07.000
so that I don't have to reload and change the service worker all the time.

02:07.030 --> 02:11.490
So on this class here, this is the style we just attached, the width here.

02:11.920 --> 02:17.230
Now we can actually also change this to a percentage value, like 33%.

02:17.230 --> 02:23.660
The good thing is that this now will scale dynamically, it's never more than that,

02:23.740 --> 02:27.910
of course this can still look strange though because whilst on big screens, 

02:27.950 --> 02:31.040
this looks relatively fine, on small screens,

02:31.210 --> 02:35.660
well this is totally squeezed, not really what I want.

02:35.710 --> 02:40.740
So percentage values can be a great tool but that can also lead to effect like this one,

02:40.990 --> 02:45.010
so this is probably not the solution we want here or at least not the solution

02:45.010 --> 02:52.880
I want to implement here. Instead, I'll go with a default width which works great on mobile devices too.

02:53.110 --> 02:59.680
Now if we inspect the mobile device like the iPhone, we see that we have a width of 375 pixels and there

02:59.680 --> 03:02.500
are even devices which are smaller than that.

03:02.830 --> 03:07.980
So to make it look good on there, I will choose a width of 270 pixels,

03:08.020 --> 03:10.640
this should look good on most mobile devices.

03:10.690 --> 03:14.950
Now we won't see it here so I'll update it here for now so that we can see it here too.

03:15.070 --> 03:17.050
If we now go into mobile mode,

03:17.140 --> 03:18.150
this looks good

03:18.340 --> 03:22.510
and if we switch to an older iPhone 4, this still looks OK.

03:22.810 --> 03:24.830
So this is now a good width.

03:25.000 --> 03:27.580
Of course we still have the issue that on bigger screens,

03:27.610 --> 03:29.950
this looks suboptimal,

03:30.250 --> 03:32.310
so let's add a media query.

03:32.710 --> 03:39.730
I will add a media query by using @media, this is a CSS command which allows us to simply write

03:39.730 --> 03:44.830
a conditional CSS statement so to say and the condition goes between the parentheses.

03:45.130 --> 03:51.910
Now we mostly work with min-width or height or max-width or height there,

03:51.910 --> 04:00.100
so I will go with min-width, this enforces a mobile first layout because my default style which is

04:00.100 --> 04:04.540
not checked with any media query is the style that works on mobile,

04:04.570 --> 04:08.460
mobile first. I then check if we have more space,

04:08.620 --> 04:16.960
so maybe if we have 600 pixels at least, we can go up to set the width to 400 pixels so that the card

04:16.990 --> 04:23.080
is much wider and of course it makes sense to first of all copy that style

04:24.320 --> 04:30.830
and now set the width to 400 pixels. So inside of that media query, we just add our selectors and their styles and

04:30.830 --> 04:35.230
we can of course add multiple selectors, as many as you want,

04:35.250 --> 04:42.200
now here I just reuse that and now this width will overwrite this width if this condition is true.

04:42.500 --> 04:46.490
Side note, the margin here will not be overwritten with nothing,

04:46.610 --> 04:49.160
so we only overwrite what we have set up here,

04:49.280 --> 04:52.910
the other properties will be taken from the default setup.

04:53.060 --> 04:58.490
So now with width 400 in this case here, let's see how that looks like.

04:58.530 --> 05:01.130
Now for that, I will bump up that version number again

05:01.250 --> 05:07.020
and I will reload the application, close it and open it in a new tab

05:07.280 --> 05:10.440
and now we see it's wider on bigger devices

05:10.910 --> 05:18.130
and if we shrink this though, it also shrinks.

05:18.160 --> 05:23.850
So this is something which already shows us how we can use media queries to get the design we want.

05:23.860 --> 05:26.960
Now of course, we could mix media queries with percentages,

05:27.160 --> 05:32.860
we could say that on smaller devices we want a width of 80%,

05:32.860 --> 05:36.330
so let me comment out the old width and on bigger devices,

05:36.400 --> 05:39.820
we want to go to let's say 50%

05:40.090 --> 05:47.080
and if we have an even bigger device, let's say we have or maybe go to 60% here and on even bigger

05:47.080 --> 05:54.460
devices here, let's say from 1000 pixels on, we shrink that to 45%, something like that.

05:54.460 --> 05:58.830
Now again let me set this version number

05:59.110 --> 06:06.850
and let's go back, reload and simply open it in a new tab and of course, you could always go to applications

06:06.850 --> 06:09.990
and clear your storage to not have to open this new tab.

06:10.360 --> 06:14.490
Now you see on bigger screens, it's pretty wide,

06:14.500 --> 06:21.180
then as we shrink this, we have this tiny point where it snaps to a different size here,

06:21.400 --> 06:23.150
so there it gets wider again

06:23.290 --> 06:25.950
and on smaller devices, we also stay at 80%.

06:26.110 --> 06:31.600
So that's another option, you can use percentages combined with media queries and this is generally how

06:31.600 --> 06:40.200
you can control the width or in general, the styles of your elements with CSS with media queries.

06:40.360 --> 06:45.880
Now we cannot only control the width here, we can also control the image height. Now right now I'm setting

06:45.880 --> 06:54.640
the height here in the feed.js for the background image, for the card title, I'm setting height to 180 pixels.

06:54.670 --> 07:00.480
Now I'm going to remove this and go back to feed.css, I want to set this here,

07:00.760 --> 07:05.110
so the class we're looking for is mdl-card_title.

07:05.410 --> 07:12.550
Now I will use this class and I only want to use it on my own cards which will have the shared moment

07:12.550 --> 07:19.480
card class. In there if I find a nested modal card title and make sure that you have a whitespace between

07:19.480 --> 07:23.100
the two selectors here so that it's a nested selector,

07:23.350 --> 07:31.420
here I want to set the height to let's say 100 pixels or maybe 120 pixels by default so that it's

07:31.420 --> 07:34.560
not that big on smaller devices

07:35.110 --> 07:41.850
but then I want to copy my media queries here and also adjust the height but now I'll check the height

07:41.860 --> 07:47.890
I have available. If we have a minimum height of let's say 800 pixels available,

07:48.100 --> 07:52.360
I want to set the height of this element here

07:52.420 --> 07:57.030
and of course for that I should copy the selector, replace the old one,

07:58.190 --> 08:02.690
I want to set the height here to let's say 160 pixels

08:03.010 --> 08:09.090
and if we have a min-height of 1200 pixels available,

08:09.250 --> 08:13.840
well maybe I then want to copy that and set the height to 200,

08:13.930 --> 08:15.550
we'll have to play around with that.

08:15.550 --> 08:18.260
Now let's go back and let's bump this up to

08:18.280 --> 08:19.730
version 22

08:19.930 --> 08:25.730
and of course as always, you can just clear the storage, I'll reopen the tab here to mix it up.

08:25.720 --> 08:27.780
Now you see we have a new height here,

08:28.070 --> 08:35.830
if we inspect this, we see the height is now 120 and this would change if we have a device where we have

08:35.830 --> 08:37.520
more height available.

08:37.600 --> 08:45.000
So maybe if I change this to responsive and I increase this, so let's see what's the next breakpoint,

08:45.230 --> 08:48.830
800 pixels, there it should get a bit higher,

08:50.550 --> 08:56.640
now you see here that the image gets bigger and it gets even bigger if I reach 1200 which I unfortunately

08:56.640 --> 08:57.670
can't here.

08:57.750 --> 09:02.670
Now of course we can fine tune because here we really have to have a huge device to increase this in

09:02.670 --> 09:03.260
size,

09:03.270 --> 09:05.580
so maybe we start at 140,

09:05.580 --> 09:13.330
we change it at 700 to 160 and we change it at 1000 to 200, something like that.

09:13.710 --> 09:17.490
So this is how we can set up a responsive design here,

09:17.690 --> 09:22.190
again make sure that you not set it here in your Javascript code but only in CSS now.

09:22.200 --> 09:25.120
These are media queries

09:25.290 --> 09:29.580
and obviously as with all these CSS things, you can dive much deeper,

09:29.580 --> 09:35.940
this is not a CSS course though. It's important to be aware of these tools though, media queries are one

09:35.940 --> 09:42.570
of the core building blocks of creating a reusable and flexible responsive design which looks great

09:42.990 --> 09:44.280
on all devices.
