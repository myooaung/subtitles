WEBVTT

00:02.230 --> 00:06.560
The opposite of cache only of course network only, there

00:06.580 --> 00:08.320
we don't use the service worker at all,

00:08.320 --> 00:15.040
instead the page sends a request to the network and we return that and we could funnel this through the fetch

00:15.070 --> 00:20.770
event of a service worker. We had this at the very beginning of the course where all we did in the service

00:20.770 --> 00:25.350
worker was basically respond with a fetch request,

00:25.360 --> 00:30.790
you remember? I will show you how to implement it in the service worker because without the service worker,

00:30.880 --> 00:32.220
it's your normal behavior,

00:32.230 --> 00:35.600
just don't use service workers if that is the only thing you want to do.

00:35.770 --> 00:40.060
Let's have a look at how we would implement it in a service worker though. In a service worker,

00:40.120 --> 00:45.640
I'll just copy the cache only strategy here and I will disable it

00:46.430 --> 00:53.840
by commenting it out and implement the network only strategy. Here we don't use the cache storage API,

00:53.960 --> 00:59.280
instead we make a fetch request where we simply pass event request and then we return that.

00:59.420 --> 01:05.900
Now when we do this, let's save this and go back to the application, reload to install the new service worker

01:06.350 --> 01:10.700
and then close the tab and open a new one to see it in action.

01:10.700 --> 01:14.270
Now the application is working again just as before,

01:14.300 --> 01:17.840
of course now this has nothing to do with service workers.

01:17.840 --> 01:19.340
We do have a cache,

01:19.760 --> 01:22.370
you can see it if I refresh here, we do do

01:22.500 --> 01:24.540
pre-cache but we don't use that,

01:24.560 --> 01:29.300
if I go offline, nothing is going to work because we never reach out to the cache,

01:29.330 --> 01:31.610
we only use the network first.

01:31.820 --> 01:34.140
Now does this strategy make sense?

01:34.190 --> 01:35.020
Not really,

01:35.030 --> 01:38.240
just don't use any event listener at all

01:38.240 --> 01:44.630
if all you want to do is make a network request. Again, this could make sense for some resources which

01:44.630 --> 01:51.800
you split up later when you do parse the incoming request to funnel some through to just return the

01:51.800 --> 01:55.890
network result but standalone, this doesn't make much sense.
