WEBVTT

00:02.140 --> 00:07.900
In the last lectures, we not only had a look at some caching strategies and how they work and when

00:07.900 --> 00:15.050
you might want to use them, we also had a look at how you can parse the URL of the incoming requests

00:15.290 --> 00:20.380
in the service worker to decide which strategy you want to use for which kind of request.

00:20.710 --> 00:23.660
So what I want to do now is I want to enhance this even more.

00:23.710 --> 00:29.770
Right now, I'm just differentiating between the cache then network strategy for this URL and cache with

00:29.770 --> 00:32.260
network fallback for this.

00:32.260 --> 00:37.070
There are other strategies I can use though and feel free to play around with that,

00:37.120 --> 00:45.670
what I want to do is, I want to see if the request I'm sending is actually targeting the help page or

00:45.760 --> 00:53.240
our root page because in these cases, I'd like to present the offline.html file if we can't load it,

00:53.710 --> 01:00.070
in other cases, returning this doesn't make a lot of sense because if we fail to fetch a CSS file, this

01:00.070 --> 01:03.060
offline.html file isn't that big of a help.

01:03.490 --> 01:11.680
So what I can simply do is here in the catch block where I return offline.html, I can also still have

01:11.680 --> 01:14.000
a look at the request we got,

01:14.200 --> 01:22.160
so I can check if event request URL is one of the given URLs I want to check.

01:22.240 --> 01:28.260
Now you could write regex expressions here, I'll do a very simple yet easy to understand check,

01:28.390 --> 01:34.040
I want to see if the request URL contains /help.

01:34.360 --> 01:40.420
If it does, then I know this is my help page and there it makes sense for me

01:40.420 --> 01:47.080
to return the offline page because that's the only URL which has help in it,

01:47.080 --> 01:51.900
so that's only my help page, I don't load any other files from that folder,

01:52.000 --> 01:56.130
so I know for sure that any requests going there try to load the page.

01:56.140 --> 02:02.440
So there, I return the offline.html file if the request which fails is something else, I don't

02:02.440 --> 02:04.470
return that because there, it doesn't make sense,

02:04.510 --> 02:07.910
again it doesn't make sense to replace a CSS file with that.

02:08.380 --> 02:10.060
So let's save this

02:10.330 --> 02:14.370
and let's reload the application, again to install the new service worker

02:14.470 --> 02:18.190
and once it's done, let's reopen the tab here

02:18.490 --> 02:26.710
and what we should see now is that if I for one clear my cache here, please delete the dynamic cache

02:26.980 --> 02:32.000
and I reload this again, refresh, here

02:32.190 --> 02:35.700
it's a little bit emptier and the help isn't cached.

02:35.980 --> 02:43.360
So now if I go offline, the main page works and for the help page, I still get this offline page just as

02:43.360 --> 02:44.130
before

02:44.200 --> 02:47.110
which proves that the if check is successful.

02:47.110 --> 02:50.020
I don't get it for any other request which failed though

02:50.110 --> 02:51.150
which makes sense.

02:51.160 --> 02:52.700
So that's a tiny improvement

02:52.780 --> 02:57.780
which also makes sense where we also take advantage of being able to look into that request

02:57.780 --> 03:01.870
URL in deciding what the best strategy is. In this case,

03:01.870 --> 03:05.960
it's a good strategy to return this fallback page, for other requests

03:06.010 --> 03:07.850
it just isn't a good strategy.
