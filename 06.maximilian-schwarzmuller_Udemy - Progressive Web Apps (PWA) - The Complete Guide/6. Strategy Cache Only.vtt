WEBVTT

00:02.320 --> 00:05.170
The next strategy I want to show you is cache only,

00:05.170 --> 00:07.270
cache only is super simple.

00:07.540 --> 00:14.620
We reach out to the service worker or again put in other words, the service worker intercepts the request.

00:14.620 --> 00:19.310
We then have a look at the cache and if we find a resource there, we return it to the page,

00:19.390 --> 00:21.420
we totally ignore the network.

00:21.460 --> 00:24.110
Let me show you how we would implement such a strategy.

00:24.250 --> 00:30.010
Back in our code here in the service worker in the fetch method, fetch event listener, we want to

00:30.070 --> 00:39.940
implement a cache only strategy. For that, I'll duplicate the event listener and simply comment out the old one

00:39.940 --> 00:43.690
temporarily which has the strategy we actually want to use.

00:43.690 --> 00:46.480
So let's now implement a cache only strategy,

00:46.480 --> 00:48.160
it's really simple.

00:48.280 --> 00:51.060
You don't care about anything related to the network,

00:51.310 --> 00:57.430
so you can delete all that code and you can even delete that if check, you simply return the

00:57.430 --> 00:59.680
response you find in the cache.

00:59.680 --> 01:02.730
And with that, you can even shorten this, remove that too,

01:02.800 --> 01:06.760
so now you respond with whatever you find in the cache and if that is nothing,

01:06.760 --> 01:07.600
so be it,

01:07.720 --> 01:10.050
this is simply what you're going to go with.

01:10.060 --> 01:12.100
Let me show you how this looks like.

01:12.100 --> 01:15.990
Now we changed the service worker, so as before,

01:16.150 --> 01:21.240
reload the page to load the new service worker and then reload the tab to activate it

01:21.250 --> 01:26.590
as always and now what you see is, it works fine here

01:26.640 --> 01:30.020
of course when we have internet, it works good

01:30.510 --> 01:35.610
but if we ever remove Internet access here,

01:35.870 --> 01:40.910
oh and also remove the dynamic caching because we're not doing that anymore,

01:41.340 --> 01:43.980
so if we ever remove that and we reload

01:43.980 --> 01:49.110
here, you see of course that's all not working.

01:49.310 --> 01:55.430
So everything we pre-cached still works because we get it from the cache but we get no dynamic caching

01:55.430 --> 01:56.210
going on.

01:56.450 --> 02:03.350
If I reload this, the dynamic cache we had before is not going to get re-established and even worse

02:03.350 --> 02:04.200
than that,

02:04.340 --> 02:06.980
now we don't even get the icons anymore.

02:07.190 --> 02:13.520
The reason for that is that we don't let any request pass to the Internet because we had a look

02:13.520 --> 02:17.310
at every request and we stored some things in our cache here,

02:17.360 --> 02:22.070
we're not doing dynamic caching but we're blocking every request because we simply return what you

02:22.070 --> 02:23.810
find in the cache.

02:23.810 --> 02:25.350
There is no plan B,

02:25.400 --> 02:29.230
so even with internet connection, our page doesn't work as it should.

02:29.240 --> 02:33.210
We do have connection here and still, this is all not working as it should,

02:33.350 --> 02:38.430
we have huge problems here because we try to solve everything through the cache.

02:38.630 --> 02:40.010
So cache only,

02:40.010 --> 02:46.670
probably not a strategy you're going to use, though for selected assets and I will come back to

02:46.670 --> 02:53.660
how you can actually parse the request and return different strategies for different requests later.

02:53.780 --> 02:57.350
So for special assets, this might be worth a try

02:57.500 --> 03:01.990
but in general, cache only might not be what you're looking for.

03:02.390 --> 03:04.640
Let's go back to other strategies we could use.
