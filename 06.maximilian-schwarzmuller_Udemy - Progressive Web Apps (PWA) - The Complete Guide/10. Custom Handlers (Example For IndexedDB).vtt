WEBVTT

00:02.190 --> 00:08.160
Over the last lectures, we used a lot of features of workbox already, not only the precaching and the routing

00:08.190 --> 00:11.400
but also the options for the routes.

00:11.400 --> 00:15.240
Now we also got some routes we're not covering yet,

00:15.330 --> 00:17.660
if we have a look at our old service worker,

00:17.820 --> 00:24.670
we're not managing posts with indexedDB and we don't have that offline.html fallback.

00:24.710 --> 00:26.140
Now I want to implement both

00:26.130 --> 00:27.690
over the next lectures.

00:28.020 --> 00:33.210
So let's go back to our base.js file and let's maybe start with indexedDB.

00:33.240 --> 00:39.450
The cool thing is, since we build up on this file, we can of course write any normal service worker code

00:39.480 --> 00:40.240
in there.

00:40.410 --> 00:46.440
So first of all from our old file, I'll import idb and the utility.js package,

00:46.440 --> 00:52.400
so I'll add these imports in this file too, so that we can use it here because I want to start using the indexedDB

00:52.490 --> 00:53.490
here.

00:53.730 --> 00:55.490
I want to start in a new route

00:55.500 --> 00:59.460
and here I will now show you how we can configure our own handler.

00:59.580 --> 01:06.330
First of all, let's match the URL and then we can basically take the URL from our old service worker,

01:06.780 --> 01:14.110
here to our posts, I'll grab it and I'll match it in this new route as a string, so as an Express-like route

01:14.370 --> 01:17.100
with .json at the end to have a full match

01:17.340 --> 01:20.960
and now none of the default strategies fits my needs.

01:20.970 --> 01:25.990
There is no indexedDB strategy, at least not at the point of time I'm recording this.

01:26.010 --> 01:28.450
The cool thing is, we can write our own handler.

01:28.710 --> 01:35.610
We can simply pass a function here which will receive some args passed in automatically by workbox and

01:35.610 --> 01:41.080
now args gives us access to the underlying requests or to the fetch event to be precise, which

01:41.130 --> 01:43.930
then of course also holds the request as you learned it.

01:44.130 --> 01:49.660
So we get access to this event, even though we haven't registered our own fetch listener.

01:50.160 --> 01:54.170
So in there, in this function, there's one thing we have to do,

01:54.480 --> 01:59.770
we have to return a response or a promise which eventually yields a response.

02:00.120 --> 02:10.200
So I will return and I will basically copy my code from here, where I respond with fetch.

02:10.200 --> 02:18.320
Now I will just grab that, go to my base file and return that here too.

02:18.330 --> 02:22.500
So now I'm returning a promise, event like that won't work,

02:22.500 --> 02:30.030
I have to access args.event because event is wrapped in this args argument here and this args.event

02:30.420 --> 02:38.400
now has the normal request property and now I do what I did before, I make a fetch request to it and store

02:38.400 --> 02:39.160
it

02:39.240 --> 02:45.390
if I get it back by first clearing my indexedDB and then writing my data and that is actually all

02:45.390 --> 02:47.660
and then of course I return it as before.

02:47.670 --> 02:53.760
This is now my own handler using the same logic as in our old servers worker file but now taking advantage

02:53.760 --> 02:58.060
of workbox routing and nicely fitting in with the other routes here.

02:58.530 --> 02:59.870
Let's see if that works, 

02:59.880 --> 03:07.260
so I'll quickly rebuild it with generate-sw to generate the updated service worker here and now with

03:07.260 --> 03:08.870
npm start still running,

03:09.010 --> 03:15.260
I'll again clear my storage to start fresh again, reload this page and reload again

03:15.750 --> 03:19.010
and now let's inspect indexedDB by refreshing it,

03:19.080 --> 03:24.420
have a look at the post store and add the posts there and you see all the posts are stored.

03:24.780 --> 03:31.470
And now if we go offline, we actually have a fully functional application on this page.

03:31.500 --> 03:37.420
Now background syncing won't work and so on but from a style perspective, this is all working.

03:37.680 --> 03:39.330
Now the help page won't work

03:39.450 --> 03:41.490
and we don't have our fallback page,

03:41.490 --> 03:44.060
so let's work on the fallback page next.
