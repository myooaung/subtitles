WEBVTT

00:02.300 --> 00:05.870
Over the last lectures, you learned a lot about the basics of service workers,

00:05.870 --> 00:09.440
what they basically are, how you activate and then install them,

00:09.440 --> 00:16.280
now let's go back to that web app manifest and the web installed banners Chrome for example automatically

00:16.280 --> 00:19.260
shows us after some criteria is met.

00:19.730 --> 00:24.800
So we learned about this in the last course module, we added the manifest.json file and that allows

00:24.800 --> 00:28.930
us to add the application to the home screen with our own icon and so on,

00:28.970 --> 00:34.560
now since we added service workers, we also fulfill the other criteria here.

00:34.560 --> 00:38.300
We have a web app manifest files with these properties

00:38.600 --> 00:44.760
and now we also have a service worker, we're serving it over https or localhost, that's also

00:44.800 --> 00:46.330
OK as explained.

00:46.550 --> 00:52.670
Now the only thing we have to do is this, visit the page at least twice with at least five minutes between

00:52.670 --> 00:53.720
visits.

00:53.720 --> 00:59.660
This is how it would work if we were to deploy the application, if a user would come back after at least

00:59.660 --> 01:00.720
five minutes,

01:00.800 --> 01:02.230
Chrome would show him this

01:02.290 --> 01:07.370
do you want to add this app to the home screen banner and that's of course nice.

01:07.460 --> 01:10.040
Now we can also test this and simulate this.

01:10.070 --> 01:13.930
In theory, it should also work here in the browser developer tools,

01:13.970 --> 01:15.860
however it never did for me,

01:15.860 --> 01:19.900
you should also be able to test it with an emulated device,

01:19.940 --> 01:24.330
so your application running on an Android emulator for example.

01:24.710 --> 01:30.710
This also didn't work for me but I'll still show you how you connect your Chrome developer tools here

01:31.100 --> 01:36.740
with a remote device, be that a real Android device or an emulated one.

01:36.740 --> 01:39.750
It has to be an Android device though, you can't test it on

01:39.760 --> 01:46.910
iOS like this, later in the course though, I'll also show you how we can easily deploy the app on a host

01:46.910 --> 01:52.990
for free which then allows us to access it from any device since it's just living in the Internet then.

01:53.090 --> 01:59.870
So for now, let me show you how you can debug this on Android devices and Chrome on Android devices easily.

02:00.310 --> 02:01.990
If you are using an emulator,

02:02.030 --> 02:04.930
follow the steps outlined in the article

02:04.970 --> 02:11.690
after this lecture where I do explain how to update the Chrome version on that emulator and how to configure

02:11.690 --> 02:15.870
it to be able to access the Chrome developer tools here.

02:16.040 --> 02:18.210
If you're using a real device, I'll

02:18.270 --> 02:19.750
also show you how this works

02:19.790 --> 02:21.680
in this article on how to prepare it,

02:21.710 --> 02:27.350
you basically have to enable USB debugging in the developer mode, that's super simple and if you already

02:27.350 --> 02:33.560
have the developer mode enabled, we'll do this together, we'll connect the Chrome default developer tools to

02:33.740 --> 02:36.230
our real device in the lecture

02:36.270 --> 02:37.910
after this article I just mentioned.
