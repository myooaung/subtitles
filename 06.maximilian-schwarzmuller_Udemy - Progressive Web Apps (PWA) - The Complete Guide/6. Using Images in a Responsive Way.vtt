WEBVTT

00:02.170 --> 00:07.810
So in the last lecture, we had a look at media queries and how they can help you style the things, the

00:07.810 --> 00:13.080
elements of your application in a way they look good on all kinds of devices.

00:13.090 --> 00:16.920
Now another thing I want to have a look at is images.

00:16.930 --> 00:23.260
Now we have an image here and on a mobile device, that looks good, on a bigger screen though you see it

00:23.260 --> 00:24.550
doesn't look as good,

00:24.550 --> 00:27.310
we could use a bigger image here.

00:27.310 --> 00:32.590
Now that is something we can also fix with responsive design,

00:32.590 --> 00:38.020
however not mainly with CSS but instead by picking the right image for the right job.

00:38.290 --> 00:43.780
For that, let's inspect our images folder, you might have noticed that we have more than one image. Right

00:43.810 --> 00:50.110
now in our main index.html file, we use the main image here which is this file.

00:50.200 --> 00:52.090
We do have two other files too,

00:52.180 --> 00:57.490
we have a large version which is 1200x457,

00:57.490 --> 01:02.740
the main image itself is 900x343 and we have a small version.

01:02.800 --> 01:06.550
Now maybe we could fetch the small version on small devices,

01:06.550 --> 01:12.430
the other one are medium sized ones and the big one on very big devices, big screens, so that we not only

01:12.430 --> 01:14.320
display a big and good looking

01:14.320 --> 01:19.700
image on all device screens but that we also have to download less on smaller devices because there's

01:19.720 --> 01:21.670
no reason to serve a big image

01:21.760 --> 01:27.940
if we only have a small device. We can do this and there actually are two tools which allow you to do

01:27.940 --> 01:28.150
this

01:28.150 --> 01:35.110
when it comes to responsive images. You have the picture element and I won't dive into this in this course,

01:35.140 --> 01:40.240
you'll find a link to a detailed article at the end of this course module

01:40.260 --> 01:45.070
though. The picture element is mostly for choosing different images,

01:45.070 --> 01:51.760
so basically images showing different things depending on device sizes, so that you have one image focusing

01:51.760 --> 01:57.190
on a head, on a small device, whereas on a big device you show a whole group of people for example.

01:57.280 --> 01:59.120
Now that's not what I want to do here,

01:59.170 --> 02:03.360
I want to use one and the same image but I want to use a different version

02:03.520 --> 02:09.890
file size density of that image for different screen resolutions.

02:09.910 --> 02:19.100
Now for that on the normal image tag, we can add a special attribute and that is the source set attribute.

02:19.380 --> 02:21.280
Now this is not supported by all browsers

02:21.310 --> 02:27.250
but the good thing is browsers which don't support it just fallback to the normal source. Regarding

02:27.250 --> 02:28.300
browser support,

02:28.300 --> 02:30.560
it's not that bad though. If we check

02:30.580 --> 02:31.380
caniuse,

02:31.420 --> 02:37.500
you'll see that 86% of browsers support source set, it's only the Internet Explorer and Edge

02:37.540 --> 02:40.150
which is not supporting it which of course is an issue

02:40.240 --> 02:46.600
but again it will fallback to the normal source attribute then, so it will still work, your page will

02:46.600 --> 02:47.180
still work,

02:47.230 --> 02:49.320
it's just not as optimized as possible

02:49.330 --> 02:50.690
but what can you do?

02:50.720 --> 02:55.930
This is also bound to become better though, in the next version of Edge this will be supported for example.

02:55.930 --> 02:59.570
So let's go back to our application and let's add something to source set,

02:59.680 --> 03:01.220
what do we add here?

03:01.630 --> 03:07.750
Well we add a set of images we want to provide to the browser and we'll add a hint about the size of

03:07.750 --> 03:12.700
the image so that the browser knows which one to pick because of course it doesn't download all the

03:12.700 --> 03:18.210
images and look at them because that would kind of defeat the purpose of using an attributes which makes

03:18.210 --> 03:21.290
sure the browser only downloads what it needs.

03:21.370 --> 03:25.600
So let's specify a path, maybe to the big image,

03:25.600 --> 03:32.650
so src/images and then main-image/lg.jpg is my big image.

03:32.650 --> 03:36.010
Now this is one possible image we present to the browser

03:36.010 --> 03:42.940
now, we also need to inform him when to use this image and for that, you provide a second argument simply

03:42.940 --> 03:46.820
separated by a whitespace which should be the width of that image.

03:46.840 --> 03:51.300
So if we inspect that large image, we see it's 1200,

03:51.550 --> 03:59.550
so let's use that as a value, 1200 and you add a w for width. So this gives the browser

03:59.580 --> 04:03.030
the hint that you have an image which has a width of 1200

04:03.070 --> 04:08.550
and if we have a screen which would take user or would take advantage of such an image,

04:08.650 --> 04:10.180
we'll use that.

04:10.180 --> 04:12.190
Now I'll also add a second image,

04:12.190 --> 04:16.700
you separate them with commas and you can even put it into a new line here.

04:17.020 --> 04:23.620
So you can put the next image into a new line and say OK, we also have source images and then we have

04:23.620 --> 04:25.290
the main-image.jpg,

04:25.330 --> 04:28.910
so the one we're already pointing to, you still have to add it here

04:29.260 --> 04:31.340
and this is mostly good for,

04:31.480 --> 04:32.410
let's have a look,

04:33.130 --> 04:34.830
has a width of 900,

04:34.880 --> 04:39.690
so for the device screens which are around this area.

04:39.980 --> 04:41.690
So let's add this too.

04:41.720 --> 04:44.200
Now finally let's add the last one,

04:44.250 --> 04:54.780
let's also add src/images/main-image-sm for small and this has a width of 480,

04:55.160 --> 04:59.960
so let's use that whitespace 480w.

05:00.140 --> 05:06.980
So if we go back to the application, clear the storage and reload our page here, we should already see that

05:06.980 --> 05:11.620
if we visit the network, we have the main image still

05:11.660 --> 05:20.150
but if I increase this so that we have a bigger screen, you'll see that down there, the main image large

05:20.150 --> 05:21.060
was downloaded

05:21.080 --> 05:25.430
and indeed, this looks much better than before now, it's sharper,

05:25.460 --> 05:28.130
it takes up more width, it's a better image.

05:28.220 --> 05:35.300
On the other end if I shrink this and make it really small, you will see that we indeed will download a different

05:35.300 --> 05:40.870
image if I refresh the page now and fetch the main-image-small here,

05:40.940 --> 05:46.690
so we're downloading this on a small screen initially which of course is also smaller from a file size

05:46.880 --> 05:48.660
perspective.

05:48.710 --> 05:51.420
So this is using responsive images now.

05:51.620 --> 05:55.100
Now how do responsive images work together with caching?

05:55.280 --> 06:01.370
I want a mobile device here and on the iPhone, it actually picks the main image due to the density

06:01.370 --> 06:02.300
of the screen.

06:02.510 --> 06:09.070
So let me switch to an older phone so that we take the small image here, now we download main image small

06:09.830 --> 06:12.190
and let's go in offline mode.

06:12.500 --> 06:17.630
So I'll tick offline here and reload this page.

06:17.670 --> 06:25.020
Now you see this still works here because obviously if we have a look at the network there, we still load

06:25.080 --> 06:29.560
the small image but we can load this because it's in our cache.

06:29.580 --> 06:34.330
If we have a our look at our cache in the application, at the dynamic cache,

06:34.710 --> 06:36.090
it was added there,

06:36.140 --> 06:40.350
here are the different images large and small.

06:40.620 --> 06:50.260
The thing just is, if I clear the storage and I somehow go into a screen where I don't pre-fetch this,

06:50.350 --> 06:56.350
so now I reload this and go online again, reload this,

06:56.350 --> 07:03.210
now if I inspect my cache, you will see that in the dynamic cache which exists

07:03.230 --> 07:10.790
once I reload again, that we don't have the small image in there, we have the large one because we have a large

07:10.790 --> 07:13.040
screen but not the small one.

07:13.040 --> 07:21.210
Now if I go offline and I switch to a smaller screen and I reload, you'll see the image is missing.

07:21.440 --> 07:25.970
Now that's a tradeoff we kind of have to accept, it is cached dynamically if

07:25.970 --> 07:26.880
we've been there,

07:26.900 --> 07:28.100
so that's a good thing.

07:28.220 --> 07:34.670
If we visit this for the first time and it wasn't cached before, we don't have it in the cache. Now we

07:34.670 --> 07:40.480
could add all these images to our initial cache here, to the cache we precache

07:40.670 --> 07:42.550
but you have to be careful with that.

07:42.560 --> 07:47.590
We do have one image in there for medium sized screens which should do for a lot of devices,

07:47.600 --> 07:52.200
this is why I chose this, for the Edge cases and the same is true for large screens

07:52.220 --> 07:54.760
obviously, we don't have it precached.

07:54.800 --> 08:00.440
Again you could add it here but you probably don't want to load your cache with a lot of images because

08:00.440 --> 08:05.840
you might use more than one in your application and then you shouldn't cache all versions of all images

08:06.050 --> 08:08.780
here, that will quickly bloat your cache.

08:08.780 --> 08:14.670
We have to live with not having a image for this size then, not having an image there,

08:14.720 --> 08:18.580
unfortunately it doesn't fallback to the default source which would be there,

08:18.620 --> 08:24.700
that would be the best case. We have to live with that but it is added dynamically in our solution, in solutions

08:24.710 --> 08:26.260
where you don't even do that,

08:26.360 --> 08:30.330
you will not have the image available, you might use some Javascript

08:30.320 --> 08:36.210
then of course to replace it if you know you are offline to then set the source to an image you have

08:36.210 --> 08:38.840
in cache, that would be a workaround.

08:39.030 --> 08:46.160
This in general, using source set is a nice workaround or a nice way of using images in a responsive

08:46.160 --> 08:50.140
way so that you load the right image for the right device size.
