WEBVTT

00:02.170 --> 00:05.200
In the last lecture, we added the button and attached the click listener,

00:05.200 --> 00:10.360
now I want to make sure that upon clicking the button, we do actually save everything we need to display

00:10.360 --> 00:14.800
this card. Now that everything is in the end

00:14.840 --> 00:19.750
this URL here where we reach out, where we fetch the data

00:19.750 --> 00:22.070
we're not using but we fake to be using

00:22.180 --> 00:26.490
and if that fails, the whole card is not rendered because we never reach this code

00:26.500 --> 00:31.980
then if we fail to fetch this. So we need to store this in our cache

00:31.990 --> 00:38.610
and another thing we also need to store is the image we use in that card, this is this sf-boat.jpg

00:38.640 --> 00:39.290
file.

00:39.490 --> 00:43.300
So these are the two things we need to save because the image is getting used there

00:43.480 --> 00:46.900
and without the link here, nothing is going to get rendered.

00:46.930 --> 00:49.610
We do have that click listener here in the feed.js

00:49.690 --> 00:55.210
file and this is where I will continue working on to make sure that we catch something upon

00:55.210 --> 00:56.500
user input.

00:56.500 --> 01:03.280
The cool thing is, we can access the cache storage, so this caches object we also use in the service worker

01:03.460 --> 01:08.290
also from the front-end, so also from our normal Javascript files I should say

01:08.290 --> 01:11.530
and there we can call the same methods as in the service worker,

01:11.650 --> 01:14.510
so of course, we can open a cache there too.

01:14.620 --> 01:20.440
Now we could open any cache we also use in the service worker, we can't access the variables there though

01:20.470 --> 01:26.560
but of course we can use the same names and that will then use the same cache storage because our application

01:26.560 --> 01:28.240
shares have one single cache,

01:28.270 --> 01:34.190
there is no separated cache for front-end Javascript code and service worker code

01:34.480 --> 01:38.660
but for the user prompted stuff, I want to set up my own cache.

01:38.890 --> 01:44.950
So here, I will simply add user requested or whatever you like.

01:44.950 --> 01:48.260
So I open this cache and then here, this user promise,

01:48.280 --> 01:50.500
so I chain then.

01:50.620 --> 01:58.360
Now of course the thing is, what do we do if this runs in a browser where caching is not supported or

01:58.360 --> 02:00.730
where the service workers are not supported?

02:00.760 --> 02:03.680
We should probably check this first.

02:03.760 --> 02:11.740
We can do this by adding if the caches object exists in the window object because if that's not

02:11.740 --> 02:17.820
present, then we know we don't have that API at our disposal and we just can't offer that service.

02:17.830 --> 02:22.570
Now of course you might want to enhance the app by simply removing the button then or disabling it because

02:22.570 --> 02:25.180
it won't do anything, here I'll just stick to that

02:25.180 --> 02:26.340
we don't do anything,

02:26.380 --> 02:27.980
so at least we don't throw an error,

02:28.030 --> 02:30.600
so the button will be there but it's not doing anything.

02:30.910 --> 02:36.640
So here I'm checking if we do have caches in the window and if we do have it, we try to open the user requested

02:36.780 --> 02:38.010
cache we created

02:38.020 --> 02:43.570
if it doesn't exist yet. In the function which gets executed thereafter, we therefore have access to

02:43.570 --> 02:49.060
that cache and there, I simply want to store the assets I just mentioned.

02:49.060 --> 02:52.410
Now we can simply use the add method here,

02:52.450 --> 02:54.970
we could of course also send a fetch request

02:54.970 --> 03:02.650
and then on the response call cache put but cache add does all that for us automatically and stores

03:02.680 --> 03:04.250
that in the cache.

03:04.570 --> 03:10.700
So what we can do is we can then cache the two things we want to cache - the boat image and that URL,

03:10.700 --> 03:12.290
let's start with that URL.

03:12.340 --> 03:17.560
I'll simply grab it here because this is the URL the request will be sent to and store it like

03:17.560 --> 03:19.930
that and the same for the boat

03:20.140 --> 03:25.350
and of course we could use add all and pass an array with the two strings. So the boat will be found under

03:25.350 --> 03:33.190
/src/images/sf-boat.jpg

03:33.230 --> 03:34.120
.

03:34.270 --> 03:40.120
This is where we find the boat. Simply in this case the path to that but only because it's running

03:40.120 --> 03:41.450
on our own server,

03:41.500 --> 03:46.390
so the URL of our server will be prepended automatically.

03:46.450 --> 03:50.790
Now with that, we got a functionality to manually add this to the cache,

03:50.800 --> 03:52.460
let's see if that works.

03:52.540 --> 03:58.090
Now we changed something in the feed.js file, so we need to make sure our cache fetches the latest

03:58.090 --> 04:01.100
version by bumping up the static caching to pre-cache

04:01.110 --> 04:08.590
the assets again. With that, let's reload the page and thereafter, let's reopen it to activate the new service

04:08.590 --> 04:09.490
worker

04:09.970 --> 04:17.050
and now let's see, if we visit our application, the cache storage, the dynamic cache is empty because we disabled

04:17.050 --> 04:20.920
dynamic caching, the static cache does have a couple of things.

04:20.950 --> 04:22.970
We get no user requested cache,

04:23.260 --> 04:28.510
now let's click save here. If we click this, console doesn't throw an error,

04:28.710 --> 04:30.550
let's refresh the cache here

04:30.930 --> 04:36.970
and now we see the user requested cache storage and there we get the two requests I was mentioning.

04:37.020 --> 04:42.930
Now with that, let's go offline and reload that page and the card is there.

04:43.080 --> 04:46.570
Now just to demonstrate again that this is due to this button click,

04:46.710 --> 04:50.870
if we delete the user requested cache and reload, it's not there,

04:50.940 --> 04:58.530
so we really have to request this, let me do this one more time, request it, go offline, reload,

04:58.620 --> 04:59.940
it's there.

04:59.940 --> 05:05.320
This is another useful tool in your toolbox, being able to cache on demand,

05:05.490 --> 05:12.180
of course this is mostly useful if you have a resource which the user should request to be cached, like

05:12.180 --> 05:15.300
an article he wants to store for reading it later.

05:15.300 --> 05:20.550
So this is something I definitely want to add because it's a crucial tool and definitely something you

05:20.550 --> 05:21.790
should know.

05:21.810 --> 05:28.380
Now with that, the last thing I want to do for now is I will disable this code again, I'll

05:28.430 --> 05:29.960
leave it in there for reference

05:30.030 --> 05:31.450
but I don't want to use it anymore,

05:31.500 --> 05:33.910
I'll go back to dynamic fetching for now,

05:34.020 --> 05:40.110
I found it important to share this with you though. Now to disable it, all I'll do is I'll simply comment

05:40.110 --> 05:44.420
out the lines where I set up the card save button and I'll comment

05:44.610 --> 05:56.420
this function here that it's currently not in use, allows to save assets in cache on demand otherwise.

05:56.430 --> 05:58.280
So this is commented down here,

05:58.380 --> 06:01.660
I'll make sure to also comment this out here,

06:01.740 --> 06:05.240
we don't want to append the button anymore because we don't have it anymore,

06:05.250 --> 06:08.260
so make sure to comment this out too

06:08.730 --> 06:17.280
and with that in place here, we disabled everything about this dynamic fetching here. Now in the service

06:17.340 --> 06:20.560
worker, you should enable dynamic caching again,

06:20.610 --> 06:26.760
so comment this line in again and bump up the static version number here because we changed something in the

06:26.760 --> 06:28.750
feed.js file.

06:28.800 --> 06:37.010
Now with that, let's reload the page and let's then simply reopen it in a new tab and close the old tab

06:37.290 --> 06:43.110
and with that, you should be back to the old state and in your cache, you have the dynamic cache again

06:43.110 --> 06:46.590
which gets populated, the static one but not the user requested one.

06:46.590 --> 06:49.440
This is the setup with which I want to continue in the next video.
