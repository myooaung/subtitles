WEBVTT

00:02.670 --> 00:05.530
Now that we learned about the core building blocks, 

00:05.580 --> 00:09.600
let me make one comparison which is sometimes made and which is kind of wrong,

00:09.750 --> 00:13.040
single page applications and progressive web apps.

00:13.260 --> 00:19.200
Now in case you don't know, single page applications are applications, web applications powered by Javascript,

00:19.320 --> 00:26.220
typically created with a framework like React, Angular or Vue where the framework re-renders the

00:26.220 --> 00:31.410
DOM all the time to react to user input, to display different pages whilst

00:31.470 --> 00:36.930
you only have one single page, one HTML file. Single page applications are not the same as progressive

00:36.930 --> 00:39.390
web apps and actually, progressive web apps

00:39.420 --> 00:44.760
as I mentioned is just a collection of technologies and techniques and it runs totally independent

00:44.850 --> 00:48.480
of your app being a single page application or not.

00:48.540 --> 00:54.270
You can turn any single page application into a progressive web app and the same is true for any traditional

00:54.270 --> 00:58.720
multi-page application where you render your views from your server

00:58.740 --> 00:59.700
via Node,

00:59.760 --> 01:01.560
PHP, whatever it is.

01:01.560 --> 01:03.350
So this is the wrong comparison,

01:03.390 --> 01:05.780
a single page application is powered by Javascript,

01:05.820 --> 01:08.050
as I said typically using a framework,

01:08.430 --> 01:13.710
it is highly reactive because things happen instantly because we don't send a request to the server

01:13.770 --> 01:15.600
and wait for a new page

01:15.630 --> 01:18.010
and as I said, we only have that single page.

01:18.330 --> 01:22.280
A progressive web app is just a collection of technologies, can be used anywhere,

01:22.320 --> 01:27.780
it typically also uses a lot of Javascript because the service worker for example uses Javascript and

01:27.810 --> 01:29.870
the service worker is very important

01:30.120 --> 01:35.990
but the service worker isn't controlled by any framework anyways, so the Javascript used here can be vanilla

01:36.010 --> 01:38.680
Javascript without a framework. And actually

01:38.700 --> 01:45.150
in the course project, we'll use a project which just uses vanilla Javascript and multiple pages because

01:45.150 --> 01:50.910
I wanted to show the most flexible project I can to really show you that what you learn in this course

01:51.240 --> 01:55.430
can be used in any project, no matter if that's a single page app or not.

01:55.680 --> 02:01.380
Towards the end of the course, I have a module where I show you how to turn your React, Angular or Vue

02:01.380 --> 02:03.330
app into a progressive web app

02:03.420 --> 02:09.210
but for the majority of the course, I just show you code which just works in any project, no matter if

02:09.210 --> 02:15.360
single page or a multi-page. Now progressive web app still also aims to be highly reactive

02:15.360 --> 02:20.250
you could say but here, we're focusing more on the initial loading time.

02:20.370 --> 02:25.970
We want to get something onto the screen fast, for example by caching it, by even making it available

02:25.970 --> 02:27.040
offline.

02:27.090 --> 02:30.100
It's not so much about what happens thereafter, of course

02:30.150 --> 02:35.520
there are some things we want to use like animations to provide a nice user experience but we don't

02:35.520 --> 02:43.440
care if you load new pages for every request or if you use Javascript to re-render the page. Oftentimes

02:43.440 --> 02:47.590
you will see single page applications being progressive web apps as well

02:47.610 --> 02:50.250
but as I mentioned, that's no hard requirement.

02:50.700 --> 02:55.640
And finally as I just said, progressive web apps can work with multiple files too

02:55.660 --> 02:57.450
and actually that's not that uncommon,

02:57.450 --> 03:03.900
you can absolutely use a progressive web app anywhere, you can turn any web page into a progressive web

03:03.900 --> 03:05.110
app if you want to.

03:05.340 --> 03:13.170
So that's the wrong comparison, we can use the progressive web app concept on a single page application but

03:13.170 --> 03:15.500
we can also use it on any other application.
