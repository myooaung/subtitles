WEBVTT
1
1

00:00:00.000  -->  00:00:01.370
<v Jose>Hi, and welcome back.</v>
2

2

00:00:01.370  -->  00:00:04.540
In this video, we're going to get the page count
3

3

00:00:04.540  -->  00:00:09.040
from the page itself as opposed to hard-coding it to 50.
4

4

00:00:09.040  -->  00:00:14.040
So instead of 50, we want page.page_count, for example.
5

5

00:00:15.510  -->  00:00:19.540
Now this is going to be a property of our AllBooksPage.
6

6

00:00:19.540  -->  00:00:22.720
So let's go into there and add it in.
7

7

00:00:22.720  -->  00:00:27.030
What we'll wanna do is, of course, have some property here
8

8

00:00:27.030  -->  00:00:31.970
that says page_count and it'll return.
9

9

00:00:31.970  -->  00:00:33.770
We're gonna start with 50, but of course,
10

10

00:00:33.770  -->  00:00:37.280
it's going to return something coming from the page.
11

11

00:00:37.280  -->  00:00:40.583
Let's go over to Chrome and find out what that might be.
12

12

00:00:42.640  -->  00:00:45.100
Here we have now moved over to Chrome.
13

13

00:00:45.100  -->  00:00:47.460
We've got the page, and we're
14

14

00:00:47.460  -->  00:00:50.160
gonna right-click, and inspect.
15

15

00:00:50.160  -->  00:00:51.910
This is gonna bring us over to the inspector,
16

16

00:00:51.910  -->  00:00:54.120
and it's gonna highlight the thing we've inspected,
17

17

00:00:54.120  -->  00:00:56.750
in this case it's an li, not too interesting.
18

18

00:00:56.750  -->  00:00:58.270
If we go down to the very bottom
19

19

00:00:58.270  -->  00:01:01.170
and we right-click and inspect the 50,
20

20

00:01:01.170  -->  00:01:04.130
we will now get something a bit more interesting
21

21

00:01:04.130  -->  00:01:05.780
which is this pager here.
22

22

00:01:05.780  -->  00:01:07.330
And I'm just gonna expand this.
23

23

00:01:08.430  -->  00:01:09.740
And notice how the website changes,
24

24

00:01:09.740  -->  00:01:12.240
but the HTML is not gonna change, so this is fine.
25

25

00:01:13.310  -->  00:01:15.793
Then we have a bunch of things in here.
26

26

00:01:16.660  -->  00:01:20.370
We have a li which has a class of current
27

27

00:01:21.720  -->  00:01:24.323
and that contains Page 1 of 50.
28

28

00:01:25.640  -->  00:01:28.840
In there, we have a ul, which is a pager.
29

29

00:01:28.840  -->  00:01:31.700
By the way, I know that I'm scrolled too high up there.
30

30

00:01:31.700  -->  00:01:33.980
So this is a pager there,
31

31

00:01:33.980  -->  00:01:37.433
that's inside a div which is inside another div,
32

32

00:01:39.680  -->  00:01:41.790
which is inside the section.
33

33

00:01:41.790  -->  00:01:46.790
So as you can see, fairly similar to where the different,
34

34

00:01:48.120  -->  00:01:50.500
here, different books are,
35

35

00:01:50.500  -->  00:01:53.400
we've got instead of inside that row class,
36

36

00:01:53.400  -->  00:01:57.690
we've got a pager, and inside that pager class, that ul,
37

37

00:01:57.690  -->  00:02:00.580
we have a list item which is the current class
38

38

00:02:00.580  -->  00:02:02.273
that has the Page 1 of 50.
39

39

00:02:03.660  -->  00:02:07.720
So what we're gonna do is extract this class here,
40

40

00:02:07.720  -->  00:02:10.700
and what we're gonna do is go over to the top div,
41

41

00:02:10.700  -->  00:02:14.960
page_inner, then we're gonna get the section,
42

42

00:02:14.960  -->  00:02:17.680
then we're gonna get the pager and then we're gonna get
43

43

00:02:17.680  -->  00:02:19.770
the li current.
44

44

00:02:19.770  -->  00:02:22.360
And that's gonna give us the Page 1 of 50.
45

45

00:02:22.360  -->  00:02:25.913
So, let's go over back to PyCharm and set this up.
46

46

00:02:29.700  -->  00:02:34.050
Let's open the all_books_page locators.
47

47

00:02:34.050  -->  00:02:37.420
And here we're going to add a new locator.
48

48

00:02:37.420  -->  00:02:39.980
This locator is going to be the pager locator
49

49

00:02:40.960  -->  00:02:45.650
and it's going to be div.page_inner, section ul.pager,
50

50

00:02:45.650  -->  00:02:46.860
li.current.
51

51

00:02:46.860  -->  00:02:50.060
And that's going to give us that element we just found
52

52

00:02:50.060  -->  00:02:52.393
that contains Page 1 of 50.
53

53

00:02:53.690  -->  00:02:57.450
Going back to the all_books_page, instead of returning 50
54

54

00:02:57.450  -->  00:03:01.360
we are going to get the content from that tag.
55

55

00:03:01.360  -->  00:03:06.360
So we're going to do content equals self.soup.find,
56

56

00:03:06.420  -->  00:03:11.360
sorry, select_one(AllBooksPageLocators.PAGER)
57

57

00:03:13.047  -->  00:03:17.320
.string and that's gonna give us Page 1 of 50
58

58

00:03:17.320  -->  00:03:19.770
and then we're gonna use regular expressions to extract
59

59

00:03:19.770  -->  00:03:22.100
the 50 and I think you can do that.
60

60

00:03:22.100  -->  00:03:25.490
Looking at the currency we looked at earlier
61

61

00:03:25.490  -->  00:03:28.530
in the book parser, you can do the same thing
62

62

00:03:28.530  -->  00:03:30.220
for Page 1 of 50.
63

63

00:03:30.220  -->  00:03:31.910
And what we're interested, in this case,
64

64

00:03:31.910  -->  00:03:34.480
is the 50 that comes at the end.
65

65

00:03:34.480  -->  00:03:36.890
So using the regular expression module
66

66

00:03:36.890  -->  00:03:39.190
and the search function inside it
67

67

00:03:39.190  -->  00:03:40.750
I think you can find this.
68

68

00:03:40.750  -->  00:03:42.580
Give this a go and then come back to the video
69

69

00:03:42.580  -->  00:03:44.310
and we will continue.
70

70

00:03:45.830  -->  00:03:47.200
I hope you managed.
71

71

00:03:47.200  -->  00:03:50.520
All that we have to do is, of course, first of all define
72

72

00:03:50.520  -->  00:03:54.453
our pattern, which is going to be page, 0 to 9,
73

73

00:03:55.540  -->  00:03:59.573
plus of and then inside brackets 0 to 9 plus,
74

74

00:04:01.040  -->  00:04:04.500
because this gonna be page one or page 10 or 20,
75

75

00:04:04.500  -->  00:04:08.230
or whatever, of 50, for example.
76

76

00:04:08.230  -->  00:04:10.960
And inside the brackets, remember, we're going to get
77

77

00:04:10.960  -->  00:04:12.883
our group when we do search.
78

78

00:04:14.130  -->  00:04:16.110
So then we're gonna create our matcher,
79

79

00:04:16.110  -->  00:04:20.983
which is gonna be re.search of pattern in content.
80

80

00:04:21.990  -->  00:04:25.200
We have to import re and another tidbit
81

81

00:04:25.200  -->  00:04:28.700
of Python convention: when you import a module,
82

82

00:04:28.700  -->  00:04:30.430
I think I may have said this earlier, when you import
83

83

00:04:30.430  -->  00:04:33.130
a module make sure that it's at the top.
84

84

00:04:33.130  -->  00:04:35.610
Other module imports that you don't import
85

85

00:04:35.610  -->  00:04:39.480
from your own code go underneath it and finally,
86

86

00:04:39.480  -->  00:04:41.600
your own code imports go below that.
87

87

00:04:41.600  -->  00:04:44.593
So this style of imports go at the very top.
88

88

00:04:46.190  -->  00:04:48.930
And then we've got the number of pages with is an int
89

89

00:04:48.930  -->  00:04:51.700
of matcher.group one.
90

90

00:04:51.700  -->  00:04:54.940
Remember, matcher group zero is going to be the entire
91

91

00:04:54.940  -->  00:04:58.680
Page 1 of 50, the first group, one, is going to be
92

92

00:04:58.680  -->  00:05:00.520
whatever's inside the brackets.
93

93

00:05:00.520  -->  00:05:02.870
And if you have multiple sets of brackets that will be then
94

94

00:05:02.870  -->  00:05:04.820
group two and group three and so forth.
95

95

00:05:07.270  -->  00:05:09.640
And that's it, we then return pages and that will give us
96

96

00:05:09.640  -->  00:05:14.310
the number of pages in the whole site.
97

97

00:05:14.310  -->  00:05:16.960
Let's go back to app and instead, now we can see
98

98

00:05:16.960  -->  00:05:20.830
that this has not gone yellow anymore, which was an error
99

99

00:05:20.830  -->  00:05:24.820
before, now it is page.page_count it seems valid.
100

100

00:05:24.820  -->  00:05:27.113
We can run the menu again, let me close that,
101

101

00:05:29.020  -->  00:05:33.333
and we shouldn't get any errors but it should take a while.
102

102

00:05:36.950  -->  00:05:40.040
And there we have it, it seems to be loaded, we can get
103

103

00:05:40.040  -->  00:05:43.463
the best books and we can see that they are there.
104

104

00:05:44.571  -->  00:05:46.280
And so that's pretty awesome.
105

105

00:05:46.280  -->  00:05:48.940
We now have successfully extracted some more information
106

106

00:05:48.940  -->  00:05:52.740
from the page and as you can see there's really nothing
107

107

00:05:52.740  -->  00:05:54.850
too magical going on here.
108

108

00:05:54.850  -->  00:05:58.310
All that we're doing is selecting or finding
109

109

00:05:58.310  -->  00:06:01.570
the locator that we want to use in your browser
110

110

00:06:02.520  -->  00:06:05.140
and then just getting it or maybe doing
111

111

00:06:05.140  -->  00:06:08.030
some regular expression to extract something from it.
112

112

00:06:08.030  -->  00:06:11.870
Regular expressions, very powerful, can be a bit confusing,
113

113

00:06:11.870  -->  00:06:14.560
so I'd recommend you study them in more depth
114

114

00:06:14.560  -->  00:06:17.510
as you advance your knowledge of programming.
115

115

00:06:17.510  -->  00:06:18.710
It can be really useful.
116

116

00:06:20.170  -->  00:06:21.190
But that's it for this video.
117

117

00:06:21.190  -->  00:06:23.800
I just wanted to show you another example of extracting
118

118

00:06:23.800  -->  00:06:27.330
some data from the site and how straightforward it is.
119

119

00:06:27.330  -->  00:06:29.320
All you're looking for are patterns.
120

120

00:06:29.320  -->  00:06:32.253
So, with that said, I'll see you on the next video.
