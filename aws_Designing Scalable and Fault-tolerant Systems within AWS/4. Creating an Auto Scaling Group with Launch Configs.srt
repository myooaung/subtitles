1
00:00:01,180 --> 00:00:03,760
[Autogenerated] Let's go ahead and pick up where we left off.

2
00:00:03,760 --> 00:00:09,190
Now we just looked at executing user data in our E C two instances,

3
00:00:09,190 --> 00:00:13,000
and now let's dive into auto scaling groups themselves.

4
00:00:13,000 --> 00:00:13,580
Now auto.

5
00:00:13,580 --> 00:00:15,850
Skilling, which I have selected here,

6
00:00:15,850 --> 00:00:22,410
is a free service to automatically manage E C to capacity on a per

7
00:00:22,410 --> 00:00:26,650
need basis so we can automatically scale as needed.

8
00:00:26,650 --> 00:00:29,200
Now there's two components to an auto Skilling group,

9
00:00:29,200 --> 00:00:31,490
so let's walk through this.

10
00:00:31,490 --> 00:00:35,840
The first is we have to create our launch configuration

11
00:00:35,840 --> 00:00:37,610
and then using that launch config,

12
00:00:37,610 --> 00:00:41,160
we create an auto Skilling group that references it

13
00:00:41,160 --> 00:00:43,740
and we specify some other settings.

14
00:00:43,740 --> 00:00:46,260
So let's go ahead and get started now.

15
00:00:46,260 --> 00:00:49,430
The first thing we do creating the launch config is

16
00:00:49,430 --> 00:00:51,770
similar to a normal instance launch.

17
00:00:51,770 --> 00:00:56,280
So I'll click on select Let me go to configure details.

18
00:00:56,280 --> 00:00:59,770
I'll give the launch configuration a name you can see.

19
00:00:59,770 --> 00:01:03,740
We can specify spot instances if we wanted to,

20
00:01:03,740 --> 00:01:08,490
we can give it a role, so I'll give it my s3 role that I use previously.

21
00:01:08,490 --> 00:01:13,920
I'll go to advanced details and we get this same option here for user data.

22
00:01:13,920 --> 00:01:16,840
So let's go ahead and input that same script,

23
00:01:16,840 --> 00:01:22,530
and I'm using the one that pulls in our script from S3 and executes it.

24
00:01:22,530 --> 00:01:25,930
And then we have the option to specify our I p address

25
00:01:25,930 --> 00:01:30,500
type so it can be public or private, depending on their needs.

26
00:01:30,500 --> 00:01:37,590
We can add our storage, configure our security group again,

27
00:01:37,590 --> 00:01:40,940
and then we create our launch config.

28
00:01:40,940 --> 00:01:47,140
Now the last thing is our key pair, which is normal.

29
00:01:47,140 --> 00:01:47,870
And there we go.

30
00:01:47,870 --> 00:01:51,810
We have now created a launch config for our auto Skilling Group.

31
00:01:51,810 --> 00:01:53,610
So that's part one done.

32
00:01:53,610 --> 00:01:57,340
And now we need to do Part two, which is create the group itself,

33
00:01:57,340 --> 00:01:59,110
so I'll give it a group name.

34
00:01:59,110 --> 00:02:05,020
We can specify our group size so we can start with one or however many we need.

35
00:02:05,020 --> 00:02:08,640
We specify R V P C and then our sub nets,

36
00:02:08,640 --> 00:02:14,460
so I'll just go ahead and spin this up in East to a an East to be just a demo.

37
00:02:14,460 --> 00:02:19,830
This we can look at advanced details and what this is doing,

38
00:02:19,830 --> 00:02:22,760
which will dig in later in the other clips,

39
00:02:22,760 --> 00:02:28,380
is we can configure specific advanced networking information if needed,

40
00:02:28,380 --> 00:02:30,690
as well as instance protection.

41
00:02:30,690 --> 00:02:34,960
We won't talk about the top part yet because I'm going to go over that soon.

42
00:02:34,960 --> 00:02:35,770
But instance,

43
00:02:35,770 --> 00:02:39,440
protection is something we can set to protect our

44
00:02:39,440 --> 00:02:42,150
instances from scaling back in.

45
00:02:42,150 --> 00:02:44,240
Now I'm not going to select that.

46
00:02:44,240 --> 00:02:48,810
I'll click on next, and now we can come up with are scaling Policy.

47
00:02:48,810 --> 00:02:53,550
So the scaling policy is how we want our group to react upon

48
00:02:53,550 --> 00:02:56,570
load so we can keep it at its initial size.

49
00:02:56,570 --> 00:02:59,540
So it's always maintaining one instance,

50
00:02:59,540 --> 00:03:04,640
or I can use scaling policies to adjust the capacity.

51
00:03:04,640 --> 00:03:06,330
So we set a men in the max.

52
00:03:06,330 --> 00:03:10,440
So let me do one into we give our group size and name,

53
00:03:10,440 --> 00:03:15,040
and then we pick a cloudwatch metric type that we want to measure.

54
00:03:15,040 --> 00:03:18,560
So what I can do is I can look at average CPU,

55
00:03:18,560 --> 00:03:22,200
and when I hit 50 I can scale out.

56
00:03:22,200 --> 00:03:25,450
So this is going to scale up to two instances now I can

57
00:03:25,450 --> 00:03:29,820
give it a grace period for warming up, and I can disable scale in.

58
00:03:29,820 --> 00:03:32,850
So if I wanted to scale out in stay, I can do that.

59
00:03:32,850 --> 00:03:36,800
Here is well, now let me configure notifications,

60
00:03:36,800 --> 00:03:40,830
and this is where we can add an s and s topic to send a

61
00:03:40,830 --> 00:03:46,380
notification to Maybe a team of cloud admin is that need to know

62
00:03:46,380 --> 00:03:49,200
when stuff is getting skilled in and skilled out.

63
00:03:49,200 --> 00:03:50,710
Now, I'm not going to do this here,

64
00:03:50,710 --> 00:03:54,390
but it's important to know that you can configure this

65
00:03:54,390 --> 00:03:56,640
and then we'll configure our tags.

66
00:03:56,640 --> 00:04:03,040
I'll leave those blank will review and then we'll go ahead and create.

67
00:04:03,040 --> 00:04:04,080
And there we go.

68
00:04:04,080 --> 00:04:06,240
It's created successfully.

69
00:04:06,240 --> 00:04:08,060
So now, under auto Skilling groups,

70
00:04:08,060 --> 00:04:13,270
we see we have our auto Skilling group name our launch config that

71
00:04:13,270 --> 00:04:17,320
we used the number of current instances and then our desired

72
00:04:17,320 --> 00:04:20,380
minimum and maximum so on the bottom here.

73
00:04:20,380 --> 00:04:23,430
If I pull this up, we can see those details.

74
00:04:23,430 --> 00:04:28,980
We can look at history we can look at scaling policies are instances that

75
00:04:28,980 --> 00:04:34,600
are a part of this group are monitoring and then on important thing to

76
00:04:34,600 --> 00:04:38,500
know is scheduled actions in life cycle hooks.

77
00:04:38,500 --> 00:04:44,820
Now scheduled actions allow us to create a scheduled action to perform some

78
00:04:44,820 --> 00:04:48,610
type of auto scaling action depending on what we need,

79
00:04:48,610 --> 00:04:52,680
so we can scale down to a certain size or scale up,

80
00:04:52,680 --> 00:04:56,660
and we can set the recurrence on how we want this to work.

81
00:04:56,660 --> 00:04:58,650
So you see the options here.

82
00:04:58,650 --> 00:05:02,250
So this is good if you have maybe a production workload that you

83
00:05:02,250 --> 00:05:05,530
know receives a ton of traffic on certain days,

84
00:05:05,530 --> 00:05:09,320
like maybe an e commerce site that receives an abundant

85
00:05:09,320 --> 00:05:12,220
amount of requests during certain times,

86
00:05:12,220 --> 00:05:13,820
like maybe black Friday.

87
00:05:13,820 --> 00:05:19,430
So you can scale this as needed, depending on your needs.

88
00:05:19,430 --> 00:05:22,140
And then we have our life cycle hooks.

89
00:05:22,140 --> 00:05:22,370
Now,

90
00:05:22,370 --> 00:05:27,430
life cycle hooks allow us to perform custom actions on

91
00:05:27,430 --> 00:05:29,940
our auto scaling group Instances.

92
00:05:29,940 --> 00:05:34,710
So a popular example that pops up on exams is that on

93
00:05:34,710 --> 00:05:36,630
instances that are terminating,

94
00:05:36,630 --> 00:05:40,190
you might have a life cycle hook that allows us to pull down our

95
00:05:40,190 --> 00:05:44,100
data in our log files so they're not lost now.

96
00:05:44,100 --> 00:05:46,930
Lifecycle hooks usually are tested over on the

97
00:05:46,930 --> 00:05:49,400
solutions architect professional exam,

98
00:05:49,400 --> 00:05:51,640
so you might want to get comfortable with him.

99
00:05:51,640 --> 00:05:54,040
I'll go ahead and cancel.

100
00:05:54,040 --> 00:05:57,140
Now let's say we want to change our launch config.

101
00:05:57,140 --> 00:05:58,060
What can we do it?

102
00:05:58,060 --> 00:06:04,110
Let's go to launch configurations and you'll see we don't have an edit button.

103
00:06:04,110 --> 00:06:07,500
We can either delete or copy the existing one.

104
00:06:07,500 --> 00:06:07,900
Now.

105
00:06:07,900 --> 00:06:10,730
A W s does usually test on this.

106
00:06:10,730 --> 00:06:16,260
So it's important to know that you cannot edit an existing launch configuration.

107
00:06:16,260 --> 00:06:20,320
You can on Lee Copy or delete one and then use a

108
00:06:20,320 --> 00:06:22,500
new one for Auto Skilling Group.

109
00:06:22,500 --> 00:06:28,640
So if I copy this, you'll see we have the copy, so I will goto details.

110
00:06:28,640 --> 00:06:29,800
I'll give it a new name.

111
00:06:29,800 --> 00:06:31,570
Let's call this version two.

112
00:06:31,570 --> 00:06:33,570
We'll go ahead and go to advanced.

113
00:06:33,570 --> 00:06:39,040
I'll get rid of all of this all paste in our original script.

114
00:06:39,040 --> 00:06:43,370
I'll skip to review because I want everything else the same and

115
00:06:43,370 --> 00:06:48,380
then I'll create our launch config again.

116
00:06:48,380 --> 00:06:53,940
So now I just created Version two of that existing launch config.

117
00:06:53,940 --> 00:06:57,880
So let's go ahead and put that into place in our auto Skilling group.

118
00:06:57,880 --> 00:07:05,570
So I'll goto actions at it and we specify our launch config.

119
00:07:05,570 --> 00:07:07,280
Let me select version, too.

120
00:07:07,280 --> 00:07:09,890
I'll click on save.

121
00:07:09,890 --> 00:07:11,760
Let me go ahead and refresh,

122
00:07:11,760 --> 00:07:15,890
and we can see our new launch config that we just created

123
00:07:15,890 --> 00:07:18,600
and selected for our Auto Skilling group.

124
00:07:18,600 --> 00:07:23,660
So what this is going to do is any new servers that spin up will

125
00:07:23,660 --> 00:07:27,640
have this launch config as their config template,

126
00:07:27,640 --> 00:07:30,540
so it's going to follow that particular script and user

127
00:07:30,540 --> 00:07:34,090
data as opposed to the original one.

128
00:07:34,090 --> 00:07:36,680
Now one last thing before we wrap up,

129
00:07:36,680 --> 00:07:40,110
Let's go ahead and demo how auto Skilling Group can

130
00:07:40,110 --> 00:07:43,040
help us recover automatically.

131
00:07:43,040 --> 00:07:49,440
So if I go to my instances, I'll follow this shortcut here,

132
00:07:49,440 --> 00:07:55,030
and I'm gonna go ahead and I'm gonna terminate this instance.

133
00:07:55,030 --> 00:07:56,240
So now it's shutting down.

134
00:07:56,240 --> 00:07:57,990
Let me go back.

135
00:07:57,990 --> 00:07:59,540
All were fresh,

136
00:07:59,540 --> 00:08:02,600
and what I'll do here is all pause the clip and then I'll

137
00:08:02,600 --> 00:08:05,610
resume when this updates in the Consul.

138
00:08:05,610 --> 00:08:06,810
Okay, here we go.

139
00:08:06,810 --> 00:08:10,200
So now we can see are instances are set to zero.

140
00:08:10,200 --> 00:08:13,840
And that's because we terminated our previous instance.

141
00:08:13,840 --> 00:08:16,320
Now we have our desired set toe one.

142
00:08:16,320 --> 00:08:22,140
So what this should do is spin up a new instance and recover automatically.

143
00:08:22,140 --> 00:08:25,950
I'll pause the clip again, let this instance spin up,

144
00:08:25,950 --> 00:08:27,690
and then we'll view it all right,

145
00:08:27,690 --> 00:08:30,340
so I didn't even really have to pause the clip very long.

146
00:08:30,340 --> 00:08:34,900
It's spinning up a new server and you can see down here it's using our

147
00:08:34,900 --> 00:08:39,640
newer Apache Web server version to launch configuration,

148
00:08:39,640 --> 00:08:44,390
so this automatically recovered our instance when it shut

149
00:08:44,390 --> 00:08:47,140
down in the desired state was not met.

150
00:08:47,140 --> 00:08:51,530
So a use case for this could be creating an auto scaling group,

151
00:08:51,530 --> 00:08:55,730
even if it's just for one instance so that it automatically

152
00:08:55,730 --> 00:09:00,040
recovers without having to have human intervention.

153
00:09:00,040 --> 00:09:05,610
This is a super powerful service, and it's offered for free from a W S.

154
00:09:05,610 --> 00:09:11,010
So be sure to study it and use it if you use E C two instances and

155
00:09:11,010 --> 00:09:14,290
that brings us to a pretty good breaking point.

156
00:09:14,290 --> 00:09:15,860
Let's take a pause here.

157
00:09:15,860 --> 00:09:23,000
And in the next clip, I'm gonna talk about launch templates versus launch configurations.

