WEBVTT
1
00:00:01.040 --> 00:00:04.550
[Autogenerated] Okay, let's dive into the consul and exploring E.

2
00:00:04.550 --> 00:00:04.760
C.

3
00:00:04.760 --> 00:00:05.660
Two instance.

4
00:00:05.660 --> 00:00:11.140
Types now want to cover the instance types before we move on to Lambda.

5
00:00:11.140 --> 00:00:14.210
So let's just go ahead and take a look at that here.

6
00:00:14.210 --> 00:00:18.570
If I go to a launch instance, it brings us to our default.

7
00:00:18.570 --> 00:00:20.680
Am I choice screen solid.

8
00:00:20.680 --> 00:00:23.040
Choose Amazon Lennox, too.

9
00:00:23.040 --> 00:00:28.090
I'll go ahead and accept the defaults all the way up to the key.

10
00:00:28.090 --> 00:00:28.400
Really?

11
00:00:28.400 --> 00:00:30.830
Just to speed this up, I'll launch it.

12
00:00:30.830 --> 00:00:30.980
Aah!

13
00:00:30.980 --> 00:00:36.300
Select that I acknowledge this and I'll launch my instance.

14
00:00:36.300 --> 00:00:36.560
Now,

15
00:00:36.560 --> 00:00:41.460
this instance that I just create a year that's pending is

16
00:00:41.460 --> 00:00:47.750
considered an on demand instance I could theoretically spin up

17
00:00:47.750 --> 00:00:51.440
as many on demand instances as I want,

18
00:00:51.440 --> 00:00:57.210
and this is the typical instance type that you get from most architectures.

19
00:00:57.210 --> 00:01:03.940
So with that one pending, let's just launch another one like it.

20
00:01:03.940 --> 00:01:07.510
But this time under instance configuration.

21
00:01:07.510 --> 00:01:12.140
If we scroll down here, we can request spot instances.

22
00:01:12.140 --> 00:01:17.670
So this is where we can essentially bid on spare compute tow launch for

23
00:01:17.670 --> 00:01:24.100
AWS workloads so you can see the current pricing per availability zone

24
00:01:24.100 --> 00:01:28.440
and I'll go ahead in a match that exact price.

25
00:01:28.440 --> 00:01:30.920
We can make this a persistent request,

26
00:01:30.920 --> 00:01:36.740
which means that it will always try and restart upon interruption.

27
00:01:36.740 --> 00:01:39.270
Or we can say that, Hey, it's not a big deal.

28
00:01:39.270 --> 00:01:42.100
Let's just go ahead and let the instance die.

29
00:01:42.100 --> 00:01:46.840
We can specify our validity period so we can specify a time

30
00:01:46.840 --> 00:01:52.210
period that it's valid from and valid, too.

31
00:01:52.210 --> 00:01:55.440
I'll click on review and launch.

32
00:01:55.440 --> 00:02:00.140
I'll launch it and let's click Acknowledge.

33
00:02:00.140 --> 00:02:06.140
Now when we go to spot requests, which is underneath instances here on the left,

34
00:02:06.140 --> 00:02:11.120
you'll see that we have an instance type for a spot instance request,

35
00:02:11.120 --> 00:02:13.140
and it's been fulfilled.

36
00:02:13.140 --> 00:02:17.290
So this means that our spot request is available

37
00:02:17.290 --> 00:02:19.300
and they're going to fulfill it.

38
00:02:19.300 --> 00:02:22.380
And hey, here's your new instance right here.

39
00:02:22.380 --> 00:02:24.510
That's a spot Instance.

40
00:02:24.510 --> 00:02:31.340
So what's nice is we have created an on demand instance,

41
00:02:31.340 --> 00:02:34.080
and you can see that here on the life cycle,

42
00:02:34.080 --> 00:02:39.500
it says normal, which is on demand, and we've spun up a spot instance.

43
00:02:39.500 --> 00:02:43.880
Now the two key differences here are costs where spot is

44
00:02:43.880 --> 00:02:49.060
significantly cheaper than on demand and the fact that spot

45
00:02:49.060 --> 00:02:52.140
can terminate at any given moment.

46
00:02:52.140 --> 00:02:58.770
AWS does its best to provide a two minute notice, which is classified as a spot.

47
00:02:58.770 --> 00:03:00.600
Instance interruption.

48
00:03:00.600 --> 00:03:04.830
But it's not a guarantee that you'll get a full two minutes to

49
00:03:04.830 --> 00:03:08.440
perform whatever actions which may be needed.

50
00:03:08.440 --> 00:03:11.860
So essentially, what that means is, when you're running,

51
00:03:11.860 --> 00:03:15.950
compute or workloads on spot instances,

52
00:03:15.950 --> 00:03:19.440
you need to keep in mind that they can terminate at any point

53
00:03:19.440 --> 00:03:22.990
in time and your work progress maybe lost.

54
00:03:22.990 --> 00:03:27.540
So a common scenario is that people will go ahead and spin up a

55
00:03:27.540 --> 00:03:33.720
spot instance for extra work that can be resumed later on and

56
00:03:33.720 --> 00:03:37.900
then reserve on demand in reserved instances for the critical

57
00:03:37.900 --> 00:03:39.940
components of the workload.

58
00:03:39.940 --> 00:03:44.660
So let me go ahead and clean this up, and this is a pretty good breaking point.

59
00:03:44.660 --> 00:03:54.000
So let's take a quick break and then we'll pick back up in the next clip, where we're going to start looking at the reserved instance purchase process

