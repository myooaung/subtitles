1

00:00:01,290  -->  00:00:07,800
Now I'll clear this and I want to show you something else. I already showed how you can loop through an array

2

00:00:07,800  -->  00:00:08,810
with a for loop

3

00:00:08,850  -->  00:00:16,920
earlier when I was talking about loops. Now on this array object, I can also use another method, I'll access

4

00:00:16,920  -->  00:00:24,000
my array here, so this array variable and then I can call the forEach method on it.

5

00:00:24,000  -->  00:00:29,700
Now this method takes an argument and this argument might look confusing right now but I'll come back

6

00:00:29,700  -->  00:00:32,200
to this kind of function,

7

00:00:32,200  -->  00:00:34,240
what it will be later.

8

00:00:34,560  -->  00:00:39,050
So I pass a function here but this function has no name,

9

00:00:39,090  -->  00:00:43,050
I just create a function without any name.

10

00:00:43,050  -->  00:00:45,140
That's an anonymous function

11

00:00:45,180  -->  00:00:46,840
and as I said, I'll come back to this

12

00:00:46,980  -->  00:00:53,700
but generally, this is something you'll often see if you have a method which expects a function as an

13

00:00:53,760  -->  00:00:59,700
argument, like this method does, that you don't create a new function and then pass a reference to that

14

00:00:59,700  -->  00:01:01,590
function which would be possible too

15

00:01:01,740  -->  00:01:04,630
but instead you create this function on the fly.

16

00:01:04,740  -->  00:01:08,860
You don't need a name because you are only passing it for this argument here anyways,

17

00:01:08,860  -->  00:01:15,000
you're not using it anywhere else in your code and therefore you just generate this function like this

18

00:01:15,000  -->  00:01:15,470
.

19

00:01:15,480  -->  00:01:21,810
Now this function takes an argument, I'll name it element and the name is purely up to you because this

20

00:01:21,900  -->  00:01:29,670
forEach function expect an argument of type function, which in turn also takes an argument and the name

21

00:01:29,700  -->  00:01:33,090
as I just said is up to you. Inside this function,

22

00:01:33,090  -->  00:01:38,800
I can then log element and now this might look confusing, let's just see what it does.

23

00:01:38,910  -->  00:01:41,180
So what could it do if I hit run?

24

00:01:41,850  -->  00:01:43,610
Well you see 1, 2, 3,

25

00:01:43,950  -->  00:01:50,730
so what this basically does is forEach, make sure that for is array, for each element, that's where the

26

00:01:50,730  -->  00:01:57,210
name comes from, this function here is executed and this function only takes the element,

27

00:01:57,480  -->  00:02:01,120
so one then two, then three and prints it to the console.

28

00:02:01,260  -->  00:02:06,900
So that's a convenient way to loop through an array and do something with the individual elements,

29

00:02:06,900  -->  00:02:06,930
of

30

00:02:06,930  -->  00:02:08,460
course you can not only print them,

31

00:02:08,460  -->  00:02:13,590
you can do everything, what you could do in normal Javascript code as well.

32

00:02:13,590  -->  00:02:15,780
Very very convenient to access this.
