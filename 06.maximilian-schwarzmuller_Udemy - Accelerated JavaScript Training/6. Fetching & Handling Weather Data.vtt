WEBVTT
1

00:00:01.350  -->  00:00:07.560
So back in the app.js file, we are currently only parsing the data to be a Javascript object

2

00:00:07.560  -->  00:00:07.610
and

3

00:00:07.620  -->  00:00:10.880
remember this will be the data format we get back.

4

00:00:11.100  -->  00:00:15.700
Now as I said, I want to retrieve this description here and the temperature.

5

00:00:15.780  -->  00:00:17.910
Now if I start with the description,

6

00:00:17.910  -->  00:00:25.510
we see that our object we get back has some kind of weather node or a weather key here

7

00:00:25.620  -->  00:00:33.840
and this again is an array then and this array also has as a first item in it, this Javascript object

8

00:00:33.840  -->  00:00:39.450
which then has a property named description, which is the one I'm interested in.

9

00:00:39.490  -->  00:00:40.420
Sounds difficult?

10

00:00:40.440  -->  00:00:42.050
It really isn't.

11

00:00:42.120  -->  00:00:50.020
I'll create a new variable called weatherData and this should be a new weather object, so this uses

12

00:00:50.020  -->  00:00:51.570
this constructor

13

00:00:51.710  -->  00:00:56.970
I set up here in the weather-data.js file and that's why the ordering is important and I need to import

14

00:00:56.970  -->  00:00:58.910
to weather data before 

15

00:00:59.010  -->  00:01:00.110
app.js.

16

00:01:00.120  -->  00:01:06.630
So I'm creating a new weather object and I want to pass the city name of course, the city name is something

17

00:01:06.630  -->  00:01:12.390
I already extracted and then I want to access the data I get back and I'm just making this

18

00:01:12.390  -->  00:01:16.370
a little bit wider so that I can see this better.

19

00:01:16.650  -->  00:01:17.940
So the data here

20

00:01:18.150  -->  00:01:25.620
and then as mentioned, I do have this weather key, this one here which is an array, so I need here in this

21

00:01:25.620  -->  00:01:29.540
array, I need the first and only object in this case

22

00:01:29.730  -->  00:01:31.790
and then I'm interested in the description.

23

00:01:31.860  -->  00:01:37.610
So weather is an array and I want the first object which I access through the index 0 of course,

24

00:01:37.950  -->  00:01:41.320
then I'm interested in the description of that object,

25

00:01:41.760  -->  00:01:43.800
again this key here

26

00:01:43.950  -->  00:01:53.190
and since this is all lowercase, I want to make it all uppercase, so I will run toUppercase on that

27

00:01:53.200  -->  00:01:53.250
.

28

00:01:53.280  -->  00:01:57.200
That's a function you learned throughout this course, right? With that,

29

00:01:57.240  -->  00:01:59.390
I'm creating my weatherData

30

00:01:59.760  -->  00:02:02.410
but of course I also need to set the temperature.

31

00:02:02.550  -->  00:02:08.910
I do just by accessing the temperature field, that's the field I added to my prototype here,

32

00:02:09.330  -->  00:02:13.330
it's not the _temperature, it's this temperature here

33

00:02:14.520  -->  00:02:21.840
and I will set this equal to data and then the temperature is stored in the main field here and then

34

00:02:21.840  -->  00:02:26.730
in the temp field, so data.main.temp.

35

00:02:26.730  -->  00:02:32.790
Now in order to get it in Celsius which is the unit I want to get in order for my conversion formula

36

00:02:32.850  -->  00:02:33.830
to be right,

37

00:02:34.050  -->  00:02:40.340
I need to add something to this call here, to this URL, I need to add something to that

38

00:02:40.350  -->  00:02:43.150
anyway since I was need to add my API key,

39

00:02:43.380  -->  00:02:55.580
so let's do both. I'll first add and units equals metric and then I'll add another and sign and set app

40

00:02:55.650  -->  00:02:56.580
ID, 

41

00:02:56.580  -->  00:02:59.770
now that's important to get this key right, app ID equals

42

00:02:59.850  -->  00:03:06.150
and now your API key should be pasted into here, that's the key you get in your dashboard on

43

00:03:06.150  -->  00:03:07.920
openweathermap.org.

44

00:03:08.310  -->  00:03:15.520
So you paste it in here or specifically of course, I refer to the API key variable and then you paste it

45

00:03:15.510  -->  00:03:20.360
in here just to have this a bit more split up and not that single long string.

46

00:03:20.550  -->  00:03:26.200
So paste in your key here and with that, you should be good to go and actually retrieve the data.

47

00:03:26.370  -->  00:03:32.340
With that, I can send my request and now in order to see something since we're not displaying it yet on

48

00:03:32.340  -->  00:03:38.310
the page, I'll simply log the weatherData for now.

49

00:03:38.310  -->  00:03:41.670
Logging is something you saw quite a bit throughout the course, didn't you,

50

00:03:41.670  -->  00:03:52.350
so why not do it here. With all of that, if search for London and I open up, not that but my developer tools,

51

00:03:52.350  -->  00:03:55.540
clear the console and I search for London,

52

00:03:55.690  -->  00:04:00.870
you see we get back this weather object, this is not what we get back, this is what we make of the data we

53

00:04:00.870  -->  00:04:09.650
get back, with the London city name, Light Rain, all uppercase and temperature being 61.66 Fahrenheit

54

00:04:09.690  -->  00:04:11.760
which might be

55

00:04:11.880  -->  00:04:12.730
correct.

56

00:04:12.740  -->  00:04:15.360
It doesn't sound too bad at least, right?

57

00:04:15.420  -->  00:04:16.800
So that's great

58

00:04:16.820  -->  00:04:21.510
and now if I close this, seeing it in the console is perfect and 

59

00:04:21.560  -->  00:04:26.040
you did this a lot throughout this course but we actually don't want to see it in a console,

60

00:04:26.040  -->  00:04:31.060
we want to change something here on our index.html page, right?

61

00:04:31.110  -->  00:04:34.640
So we'll do this in the next lecture.
