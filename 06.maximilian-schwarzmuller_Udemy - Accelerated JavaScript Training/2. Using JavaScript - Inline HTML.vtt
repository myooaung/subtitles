WEBVTT
1

00:00:01.710  -->  00:00:05.070
So let's start with the very first important step,

2

00:00:05.070  -->  00:00:09.780
even though we're able to execute it here simply while typing code on the left and seeing it in the

3

00:00:09.780  -->  00:00:11.040
console on the right,

4

00:00:11.190  -->  00:00:16.740
technically you would need to implement your code in your HTML document to have anything to

5

00:00:16.740  -->  00:00:17.450
run.

6

00:00:17.820  -->  00:00:24.630
So if I open up my HTML document here, you'll see this is a normal HTML5 skeleton and

7

00:00:24.630  -->  00:00:28.490
I won't go into HTML basics in this course.

8

00:00:28.720  -->  00:00:34.230
I will create a new header here and you can quickly do this by simply typing h1 and then hitting

9

00:00:34.230  -->  00:00:43.290
tab where it just say the Javascript bootcamp. Now this will appear in the output here but we won't

10

00:00:43.290  -->  00:00:44.360
need the output for now,

11

00:00:44.370  -->  00:00:45.720
so I'll close it.

12

00:00:46.560  -->  00:00:51.110
Let's see how can we execute code in such HTML document.

13

00:00:51.570  -->  00:01:00.000
Well if I go below the title here, I can type script and hit tab and this will create script tags for

14

00:01:00.000  -->  00:01:05.360
me. If I type console log

15

00:01:06.630  -->  00:01:12.670
Hello there and close this with brackets or with parentheses here

16

00:01:13.140  -->  00:01:17.950
and then I click run, you see Hello there in the console

17

00:01:17.970  -->  00:01:20.520
even though I didn't write anything here in the middle, right?

18

00:01:20.760  -->  00:01:28.230
Well the reason for this is this middle column here is just a service or a convenience offered by this

19

00:01:28.230  -->  00:01:30.850
website where I can execute Javascript right away

20

00:01:30.870  -->  00:01:37.230
and indeed we will have to use this throughout the course but in reality, 

21

00:01:37.230  -->  00:01:44.010
you will have to include your scripts like this with such a script tag in your HTML document

22

00:01:44.010  -->  00:01:44.330
.

23

00:01:44.340  -->  00:01:48.790
Now when the browser renders your page, it basically runs through your

24

00:01:48.810  -->  00:01:50.890
HTML code from top to bottom

25

00:01:51.180  -->  00:01:53.130
and when it hits this script code,

26

00:01:53.190  -->  00:01:59.760
it will immediately execute all the code it finds between the opening and the closing tag here.

27

00:01:59.790  -->  00:02:04.110
This is why hello there gets printed to the console because that's all the code I have here

28

00:02:04.230  -->  00:02:06.710
and as I said, it's immediately executed.

29

00:02:06.900  -->  00:02:09.930
Now the script tag also has some attributes you can specify,

30

00:02:10.050  -->  00:02:19.390
for example, the type attribute. I can set this type here to text/javascript and if I click run,

31

00:02:19.410  -->  00:02:26.330
what will happen? I still see Hello there because this is an optional attribute

32

00:02:26.340  -->  00:02:31.730
I can pass to specify that this is indeed Javascript code but I may also leave it out

33

00:02:31.770  -->  00:02:34.130
and indeed, you would leave it out typically.

34

00:02:34.200  -->  00:02:39.050
So there is no difference between both ways of executing this code.

35

00:02:39.060  -->  00:02:44.850
Notice that currently, I'm executing this code or I have the script tag right here in the head section

36

00:02:44.850  -->  00:02:45.770
.

37

00:02:45.780  -->  00:02:48.570
Now imagine I take this code here,

38

00:02:48.570  -->  00:02:54.130
remove it from the head section and put it right before my closing body tag here,

39

00:02:54.150  -->  00:03:00.740
so at the end of the body section. What do you think will happen now?

40

00:03:01.470  -->  00:03:05.050
Well if I click run, we still see Hello there

41

00:03:05.280  -->  00:03:12.360
because as I said, the browser runs over your file from top to bottom and will execute any Javascript

42

00:03:12.360  -->  00:03:13.560
code it finds,

43

00:03:13.590  -->  00:03:18.960
therefore the position of the code doesn't really matter, it doesn't have to be inside the head section

44

00:03:18.960  -->  00:03:20.640
to be executed.

45

00:03:20.640  -->  00:03:27.250
Indeed it's best practice to put it right here where it currently is, right before the closing body tag.

46

00:03:27.270  -->  00:03:29.250
Why is this the best practice?

47

00:03:29.250  -->  00:03:35.790
Well as I said, the browser goes from top to bottom through your file and builds up your webpage,

48

00:03:35.790  -->  00:03:40.830
now imagine you have a Javascript code here which triggers some long running operation.

49

00:03:40.890  -->  00:03:46.260
In this case, the browser would be occupied and couldn't continue loading your webpage

50

00:03:46.260  -->  00:03:48.890
below this script tag here.

51

00:03:49.140  -->  00:03:54.240
Now that would of course mean that you might not see your webpage, even though technically it could be loaded,

52

00:03:54.570  -->  00:03:57.190
even with your script not being finished.

53

00:03:57.270  -->  00:04:03.090
Therefore by putting your scripts at the end of the page, you make sure that the HTML document

54

00:04:03.120  -->  00:04:09.720
actually gets loaded before the script is executed, which of course first results in a performance increase

55

00:04:09.740  -->  00:04:09.900
and

56

00:04:10.050  -->  00:04:17.100
second, it makes sure that if your script is trying to access some HTML elements in your page, those

57

00:04:17.160  -->  00:04:23.540
elements are actually there because the browser already ran over the specific code.

58

00:04:23.550  -->  00:04:28.700
Now as you might be aware, you also have the chance of turning of Javascript in your browser.

59

00:04:29.100  -->  00:04:34.380
How can you handle this case that a user visits your page which has Javascript turned off?

60

00:04:34.710  -->  00:04:39.660
Well it of course depends on your page, if your page depends heavily on Javascript,

61

00:04:39.780  -->  00:04:45.780
you might just want to show him a message telling him that he should turn off Javascript or leave

62

00:04:45.780  -->  00:04:48.920
the page because you're not able to provide a

63

00:04:48.950  -->  00:04:55.290
browsing experience. In other cases, it might not really matter but if you want to display such a message

64

00:04:55.290  -->  00:04:59.310
or any message, you can use the noscript tags

65

00:05:04.530  -->  00:05:09.510
with any message between them and this message here will only be displayed,

66

00:05:09.570  -->  00:05:13.930
of course in the normal page here, not in any console, in the normal page

67

00:05:14.070  -->  00:05:17.920
if a user visits the page with Javascript being turned off
