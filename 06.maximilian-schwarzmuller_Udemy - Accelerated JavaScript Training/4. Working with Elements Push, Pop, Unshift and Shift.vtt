WEBVTT
1

00:00:01.560  -->  00:00:06.790
So I'll clear this and I'll show you another method you have available on arrays,

2

00:00:06.930  -->  00:00:11.180
the push method which you saw earlier. If I push 4

3

00:00:11.610  -->  00:00:14.220
and then I print this array again,

4

00:00:14.430  -->  00:00:17.100
you already saw this in a previous lecture.

5

00:00:17.100  -->  00:00:22.500
So what will show up in the console? You see 1, 2, 3, 4.

6

00:00:22.860  -->  00:00:26.610
Push basically adds an element to the end of the array

7

00:00:26.720  -->  00:00:33.480
and now while technically here, I could have achieved the same by accessing the element with

8

00:00:33.480  -->  00:00:38.520
the index three, which is just the indexed element after three,

9

00:00:38.580  -->  00:00:44.940
this of course is only theoretically the same because in practice, oftentimes you don't know how long

10

00:00:44.940  -->  00:00:50.550
your array is and you can't hardcode indices which you want to access.

11

00:00:50.550  -->  00:00:57.840
Therefore pushing with this method makes sure that the value is always added at the end of the array

12

00:00:58.020  -->  00:01:04.540
and you're not accidentally overwriting values or leaving some empty spaces undefined thereafter.

13

00:01:05.010  -->  00:01:07.190
So this is what push does

14

00:01:07.230  -->  00:01:12.780
and of course this is very important and you'll oftentimes use push in your code.

15

00:01:12.840  -->  00:01:19.740
What do you think will happen if I go to my array here and I'll add a comma here after and then I'll

16

00:01:19.820  -->  00:01:20.890
leave this push method?

17

00:01:21.150  -->  00:01:28.050
So I'm kind of extending this array here with one extra element which stays undefined since I'm entering

18

00:01:28.050  -->  00:01:29.010
nothing here

19

00:01:29.190  -->  00:01:30.960
and then I'm pushing something.

20

00:01:30.960  -->  00:01:32.880
Will this be overwritten?

21

00:01:33.090  -->  00:01:37.520
Let's see what shows up in my console,

22

00:01:37.740  -->  00:01:44.760
So it looks like it got overwritten but actually, if I remove this push method here and I print this again,

23

00:01:45.950  -->  00:01:48.400
you'll see it was never there in the first place.

24

00:01:48.480  -->  00:01:55.230
I need to add another comma here to create such an undefined space here

25

00:01:55.470  -->  00:02:00.950
and now if I run array push 4 again, let's see what happens now.

26

00:02:00.950  -->  00:02:06.940
The undefined space stays here and instead 4 is appended to the end,

27

00:02:07.200  -->  00:02:09.230
so that's important to understand.

28

00:02:09.360  -->  00:02:17.580
Pushing does not occupy the next undefined space or element, it just takes the end of the array as you

29

00:02:17.580  -->  00:02:22.280
defined it and then adds a new element to it.

30

00:02:22.290  -->  00:02:28.370
Now, we have another method than push and I'll just replace this with four to make this look a bit nicer

31

00:02:28.370  -->  00:02:30.380
than undefined.

32

00:02:31.020  -->  00:02:34.470
I can also call pop

33

00:02:37.440  -->  00:02:43.050
and this doesn't take any arguments. What could pop do, what could show up in the console now?

34

00:02:43.050  -->  00:02:53.100
We see 1, 2, 3, so the last element, 4, was taken off the array and actually array.pop

35

00:02:53.190  -->  00:02:54.910
returns this element.

36

00:02:55.020  -->  00:03:02.160
Therefore I can print this method call out and if I run this, you'll see 4 which is the element

37

00:03:02.160  -->  00:03:05.900
which was taken off returned by this method call here

38

00:03:06.150  -->  00:03:09.940
and then you see the new array, without this last element.

39

00:03:10.560  -->  00:03:15.060
What if I don't want to take the last but the first element?

40

00:03:15.360  -->  00:03:20.730
We also get a function for this, it's called shift.

41

00:03:20.730  -->  00:03:28.530
If I run this, you see I get 1 which is the first element which gets taken off and then I get 2, 3,

42

00:03:28.530  -->  00:03:30.540
4 as the remaining array

43

00:03:30.780  -->  00:03:36.260
and do we have kind of a push, just with inserting it at the beginning of the array?

44

00:03:36.600  -->  00:03:46.350
Yes, it's called unshift and unshift of course takes an element, let's insert a string here

45

00:03:46.860  -->  00:03:54.150
and if I hit run now, you see that now this new element is at the beginning in front of the first element

46

00:03:54.170  -->  00:03:54.310
.

47

00:03:54.420  -->  00:03:58.230
So it's the opposite of push in that way.
