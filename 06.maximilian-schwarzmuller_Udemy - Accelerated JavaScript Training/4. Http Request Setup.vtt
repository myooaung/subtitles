WEBVTT
1

00:00:01.440  -->  00:00:06.960
So we're able to retrieve the city name but we also need to be able to get the weather.

2

00:00:06.960  -->  00:00:12.520
Now the good thing is there is a service called openweathermap.org,

3

00:00:12.690  -->  00:00:20.190
it's free to use but you have to sign up in order to get your API key which you need in order to access

4

00:00:20.190  -->  00:00:21.460
their API.

5

00:00:21.810  -->  00:00:29.160
Then if you click on API, you can have a look at the documentation, we need the very first API here, current

6

00:00:29.190  -->  00:00:30.300
weather data

7

00:00:30.840  -->  00:00:35.410
and here you'll find a documentation how you were able to fetch weatherData.

8

00:00:35.580  -->  00:00:41.600
We'll use the simple API call here where we can pass a city name and then we'll get back the weather

9

00:00:41.610  -->  00:00:42.660
for that city.

10

00:00:42.810  -->  00:00:49.530
Now as I mentioned, in order to successfully send request there, you need to sign up for free

11

00:00:49.710  -->  00:00:55.940
and if you sign up, in your dashboard, you'll have this API keys part here where you see a key.

12

00:00:55.950  -->  00:00:58.260
Now it's blurred out here because it's my key

13

00:00:58.270  -->  00:01:00.830
but you will just copy that key

14

00:01:00.840  -->  00:01:07.710
and later I'll come back to that and actually append this key to my API calls to be able to successfully

15

00:01:07.710  -->  00:01:10.450
get weather data but back to the API,

16

00:01:10.740  -->  00:01:16.670
as I said this will be the link we'll access. So back over in plnkr,

17

00:01:16.740  -->  00:01:22.950
it's time to set up this HTTP request to actually get weather data from there.

18

00:01:22.950  -->  00:01:31.790
So I am able to extract the city name of course, from search city values, I'll store this in a new variable

19

00:01:31.790  -->  00:01:37.230
called cityName, the value I just logged to the console 

20

00:01:37.560  -->  00:01:42.630
and of course I also want to reach out to the web.

21

00:01:42.930  -->  00:01:53.400
So I'll set up a new HTTP request, a new XML HTTP request and I'll store my API key here, later on here,

22

00:01:54.360  -->  00:02:00.750
I'm not inserting it now because I'll blur it out anyways but you may already copy your API key into

23

00:02:00.750  -->  00:02:08.450
here, the one you saw in your open weather map dashboard, then I'll set up the URL which I

24

00:02:08.460  -->  00:02:12.240
want to access and we can get this URL from the API docs.

25

00:02:12.240  -->  00:02:19.740
It's this URL here, however very important, make sure to place HTTP in front of it,

26

00:02:19.770  -->  00:02:23.600
it's not inserted in the link

27

00:02:23.700  -->  00:02:25.620
you're able to grab here.

28

00:02:26.190  -->  00:02:29.580
And of course city name here should go away,

29

00:02:29.760  -->  00:02:31.310
we'll leave the question mark

30

00:02:31.320  -->  00:02:38.240
q equals but then I'll add something to that string with a plus sign here, I'll the 

31

00:02:38.310  -->  00:02:44.700
city name which we actually extract up here, so the city name we extracted from our input.

32

00:02:44.700  -->  00:02:46.020
Now we can do something here,

33

00:02:46.020  -->  00:02:57.530
we can also check if city name length is greater or is let's say equal to zero, which means the user

34

00:02:57.550  -->  00:02:59.270
hasn't entered anything.

35

00:02:59.490  -->  00:03:06.210
In this case, we could return an alert, so we return a quit out of this function and alert

36

00:03:06.210  -->  00:03:10.960
please enter a city name.

37

00:03:10.990  -->  00:03:16.800
So if we try this and if I now hit show weather, we get this alert.

38

00:03:17.010  -->  00:03:22.410
However if I enter one single space, it would work and that is certainly not what we want.

39

00:03:22.410  -->  00:03:24.690
So instead, I'll use the

40

00:03:27.420  -->  00:03:33.090
trim function here on city name,

41

00:03:35.730  -->  00:03:37.790
.trim and

42

00:03:37.980  -->  00:03:44.520
now if I enter some whitespaces, I still get the error because all these extra whitespaces will

43

00:03:44.520  -->  00:03:45.810
be trimmed out.

44

00:03:46.290  -->  00:03:46.930
So that works

45

00:03:46.950  -->  00:03:50.770
but as soon as I enter something else, I'm allowed to pass.

46

00:03:50.820  -->  00:03:56.640
So we set up the URL and the city name and we make sure that the city name is actually set

47

00:03:56.640  -->  00:04:01.080
and the last thing I want to set up is the method and this will be a get request because we want to

48

00:04:01.080  -->  00:04:01.870
get data

49

00:04:01.890  -->  00:04:05.750
and we only can send a get request to this route here anyways.

50

00:04:06.450  -->  00:04:13.290
With that, I can open the connection and I pass my method and URL to the HTTP request and then I'll

51

00:04:13.290  -->  00:04:13.760
set up

52

00:04:13.770  -->  00:04:22.020
the event handler, onreadystatechange to do something if the onreadystatechange is of my HTTP request

53

00:04:22.020  -->  00:04:22.580
here.

54

00:04:22.770  -->  00:04:25.350
So then I want to execute this function

55

00:04:25.920  -->  00:04:27.450
and in this function here,

56

00:04:27.480  -->  00:04:35.800
I'll first change if my ready state equals XMLHttpRequest.DONE

57

00:04:36.000  -->  00:04:46.860
and if the status is 200, of course with more than one equal sign here and if this is the case, I know we

58

00:04:46.860  -->  00:04:49.720
got back an answer and it seem to be successful,

59

00:04:49.740  -->  00:04:52.370
so we probably get back some weather data.

60

00:04:52.650  -->  00:04:54.130
I'll handle this case soon,

61

00:04:54.240  -->  00:05:06.870
otherwise if the ready state is done but we didn't get 200 as a code, we know something went wrong. In

62

00:05:06.870  -->  00:05:07.590
this case,

63

00:05:07.590  -->  00:05:13.360
I'll also show an alert where I just say something went wrong.

64

00:05:14.400  -->  00:05:15.750
So that's the bad case,

65

00:05:15.750  -->  00:05:18.350
we had an error and that's a good case

66

00:05:18.690  -->  00:05:23.390
and before I add the HTTP send method here,

67

00:05:23.430  -->  00:05:27.910
I of course want to implement what I want to do if we get back some data.

68

00:05:27.940  -->  00:05:33.410
However that is a bit more complicated but I want to do something special here.

69

00:05:33.420  -->  00:05:35.180
Let's have a look at this next lecture.
