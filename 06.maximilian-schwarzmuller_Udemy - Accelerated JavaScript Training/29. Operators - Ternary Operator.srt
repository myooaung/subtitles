1

00:00:01,260  -->  00:00:07,590
So with the comparison operators and the boolean operators, you're able to write elaborate if statements

2

00:00:07,590  -->  00:00:12,490
or whenever you need boolean statements returning true or false,

3

00:00:12,510  -->  00:00:20,610
for example you could write a statement like this; if a equals b, return

4

00:00:23,220  -->  00:00:30,890
equal and otherwise, print out not equal.

5

00:00:30,890  -->  00:00:39,000
Of course I don't have a and b yet, so I'll quickly create both variables and a should just be 5 and b

6

00:00:40,110  -->  00:00:46,590
will also be 5 for now. If I print this, you'll see equal of course.

7

00:00:46,590  -->  00:00:50,160
Now that is not really a difficult check here but I want to show something else,

8

00:00:50,160  -->  00:00:56,600
I want to show you a shorter way to write short if statements like this one.

9

00:00:56,910  -->  00:01:00,350
You could refactor this like this,

10

00:01:00,360  -->  00:01:08,320
you could console log and then a equals b question mark, then one result,

11

00:01:08,320  -->  00:01:17,050
so a string equal, colon, the else case, not equal.

12

00:01:17,700  -->  00:01:20,390
Before I explain this, let's run it,

13

00:01:21,330  -->  00:01:22,740
you see equal.

14

00:01:22,740  -->  00:01:24,130
So what is this thing here?

15

00:01:24,420  -->  00:01:26,280
It's a ternary operator

16

00:01:26,550  -->  00:01:36,390
and basically this is a way to write a simple if statement with its conditional code and the else code

17

00:01:36,510  -->  00:01:37,980
in one line.

18

00:01:38,010  -->  00:01:45,360
So first comes the check, if a equals b, then separated by a question mark,

19

00:01:45,360  -->  00:01:49,470
we get the code to be executed or to be returned

20

00:01:49,470  -->  00:01:58,230
if this is the case and since I'm in the console log statement, I'm only setting this equal string

21

00:01:58,230  -->  00:02:05,490
here, so this equal string will then be used inside this console log statement or separated with a colon,

22

00:02:05,490  -->  00:02:05,730
I

23

00:02:05,730  -->  00:02:07,540
have the else case,

24

00:02:07,710  -->  00:02:16,080
so if I change b to be 6 and I run this code again, I get not equal.

25

00:02:16,170  -->  00:02:22,500
So this is just a shorter way to write simple Javascript if statements and you may use this when you

26

00:02:22,500  -->  00:02:23,690
find it appropriate,

27

00:02:23,790  -->  00:02:30,660
it's certainly convenient to use it for very plain and simple checks. If you overdo it though, you

28

00:02:30,660  -->  00:02:34,190
might write a very difficult to read code,

29

00:02:34,200  -->  00:02:41,260
so really only fallback to it and use it if the check is really straightforward.
