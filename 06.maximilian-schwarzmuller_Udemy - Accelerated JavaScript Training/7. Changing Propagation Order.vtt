WEBVTT
1

00:00:01.440  -->  00:00:07.710
So to conclude this event module, let's answer another question.

2

00:00:07.710  -->  00:00:13.860
I was talking about the fact that if you don't stop propagation like I do here, you're triggering the

3

00:00:13.860  -->  00:00:17.680
inner and outer div event listeners in this case here.

4

00:00:18.120  -->  00:00:24.840
What if you actually wanted to trigger the outer one first because even if you click on the yellow one,

5

00:00:25.140  -->  00:00:31.260
you might for some reason first want to check if the outer one should handle this event.

6

00:00:31.560  -->  00:00:36.840
So you need to reverse the order so that you're not starting in the inner element but instead in the

7

00:00:36.840  -->  00:00:45.380
outer one? You can easily do this by adding another parameter to the event listeners here.

8

00:00:45.420  -->  00:00:49.640
So here to the outer listener, to the outer event, you can add

9

00:00:49.650  -->  00:00:51.660
true for example

10

00:00:51.660  -->  00:00:56.720
and if I now run this code, you'll see that clicked outer happens first.

11

00:00:56.760  -->  00:01:02.840
So by adding this third parameter and setting it to true, you're telling Javascript that this event listener

12

00:01:02.840  -->  00:01:08.640
should have the priority here and the parent should handle the event first before the child.

13

00:01:09.150  -->  00:01:16.290
And oftentimes, you won't need this functionality but it's good to know in cases where you actually

14

00:01:16.290  -->  00:01:23.220
want to check in the outer event handler if this event handler should handle the event or if it should

15

00:01:23.290  -->  00:01:29.370
just let it pass and let the inner one, the yellow one in this case here handle the event.

16

00:01:29.540  -->  00:01:36.340
So that's just an important note regarding the changing of the order which is possible with this third

17

00:01:36.360  -->  00:01:38.110
argument here.
