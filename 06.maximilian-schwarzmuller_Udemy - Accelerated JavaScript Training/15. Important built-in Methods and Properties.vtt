WEBVTT
1

00:00:01.800  -->  00:00:04.860
To come to an end in this module,

2

00:00:05.010  -->  00:00:12.680
I'll talk about some generic functions and properties you can always use on your objects. I'll again

3

00:00:12.680  -->  00:00:15.570
create my basic person object here

4

00:00:15.570  -->  00:00:22.080
and

5

00:00:24.090  -->  00:00:27.340
let's say I want to delete a property.

6

00:00:27.450  -->  00:00:31.030
Now of course, I could set person.name equal to null

7

00:00:31.230  -->  00:00:36.060
but maybe I want to really get rid of it and not just set it to null,

8

00:00:36.360  -->  00:00:42.900
in this case I could use delete keyword and then person.name

9

00:00:43.050  -->  00:00:52.980
and now if I try to log person.name, let's see what happens if I click run, we get undefined

10

00:00:53.130  -->  00:00:55.180
because now it was really deleted.

11

00:00:55.200  -->  00:00:59.110
It's not set to null, it got deleted, it's no longer there.

12

00:00:59.640  -->  00:01:09.570
What if I wanted to find out if a certain field exists in an object?

13

00:01:09.570  -->  00:01:17.340
I could then specify this field as a string, that's important, name and then with the in keyword, I can

14

00:01:17.340  -->  00:01:21.310
check if this name field exists in this person.

15

00:01:21.600  -->  00:01:23.840
So of course if I click run,

16

00:01:24.120  -->  00:01:25.490
yes we get true,

17

00:01:25.650  -->  00:01:29.010
so name exists as a property here.

18

00:01:29.380  -->  00:01:35.760
Notice though if I use a capital N at the beginning, we get false because it's case sensitive as you

19

00:01:35.760  -->  00:01:36.870
learned earlier 

20

00:01:36.870  -->  00:01:41.750
and capital case N or Name is not the same as with lowercase n.

21

00:01:41.760  -->  00:01:49.010
So this is how you can delete properties, how you can turn them if they are there

22

00:01:49.290  -->  00:01:51.170
and I mentioned something earlier,

23

00:01:51.180  -->  00:01:58.140
there is also a way to loop through all of the properties a person has.

24

00:01:58.140  -->  00:02:03.300
So let me add a greet property which is a function just 

25

00:02:03.300  -->  00:02:11.190
printing hello and now I want to loop through all the three properties. I can use a for loop but it's

26

00:02:11.190  -->  00:02:12.860
a special for loop,

27

00:02:13.470  -->  00:02:23.520
I can specify field for example, var field and the name is up to you, choose whatever you want, in person

28

00:02:23.530  -->  00:02:23.720
.

29

00:02:23.910  -->  00:02:31.470
So with this in keyword or context here, I'm creating a for loop which loops through all the fields,

30

00:02:31.470  -->  00:02:35.280
this is why I named it field, of person

31

00:02:35.460  -->  00:02:43.560
and then I can log the field and let's see what will now show up in the console,

32

00:02:43.560  -->  00:02:50.300
the name of the three fields. Oftentimes though, you want to log the value and not the name.

33

00:02:50.610  -->  00:02:59.220
Well you can do this by logging person and then with square brackets, the field. If you remember, this is

34

00:02:59.220  -->  00:03:06.690
something I showed earlier where I explained if you don't hardcode the field name but derive it dynamically

35

00:03:06.780  -->  00:03:08.320
like we're doing here,

36

00:03:08.520  -->  00:03:14.610
then this syntax is great to access the value of an object field.

37

00:03:14.610  -->  00:03:20.640
So if I now click run, we get the values instead of the field names.
