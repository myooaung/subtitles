1

00:00:02,180  -->  00:00:10,620
Now as mentioned before, this way of doing it is a bit difficult or you have these very long statements

2

00:00:10,620  -->  00:00:17,620
and you have to kind of go to your HTML code and count how many levels 

3

00:00:17,640  -->  00:00:24,540
you have to go deep into to get the correct element, so that's not really the most convenient

4

00:00:24,540  -->  00:00:26,840
way of accessing your elements.

5

00:00:26,880  -->  00:00:28,320
There are better ways.

6

00:00:28,410  -->  00:00:35,370
Now I'll show you the mediocre way first, the way you did it a few years ago before going to the

7

00:00:35,370  -->  00:00:37,390
most optimal one.

8

00:00:37,980  -->  00:00:48,210
So a quicker way than this way here is to use some methods the document offers you, for example the get

9

00:00:48,270  -->  00:00:56,390
elements by tag name method which allows you as a string to specify the tag name you want to get.

10

00:00:57,000  -->  00:00:58,830
So if I now clear this and hit run,

11

00:00:58,830  -->  00:01:01,270
what do you think I'll get?

12

00:01:02,700  -->  00:01:09,630
Well again I get the very complex object but in the end, this will be an array of all the list items

13

00:01:09,630  -->  00:01:10,550
here

14

00:01:11,370  -->  00:01:17,280
and by the way, if you're not liking this way of displaying it in here, you may also open up your developer

15

00:01:17,280  -->  00:01:21,820
tools and here you also get the same console logs

16

00:01:23,160  -->  00:01:25,580
but here you've got the more structured like this

17

00:01:25,590  -->  00:01:29,060
and here you can click into and see what got selected.

18

00:01:29,700  -->  00:01:34,230
So if I clear this and run it again, you see we get an array of list items

19

00:01:34,320  -->  00:01:35,160
by this

20

00:01:37,990  -->  00:01:49,830
method here. We not only got elements by tag name, we also for example have elements by class name.

21

00:01:49,830  -->  00:01:56,310
Now we're not using any classes but let's add some, so I'll add a class here, a CSS class

22

00:01:57,030  -->  00:02:01,550
and I'll name it simple.

23

00:02:01,740  -->  00:02:07,290
Now here, I can specify simple as the class name by which I want to get elements

24

00:02:08,130  -->  00:02:14,760
and if I run this, you see I also get an array which in this case only contains one element with this list item

25

00:02:14,820  -->  00:02:22,620
of class simple and then again, I can access all the properties of this element and so on, the style which

26

00:02:22,620  -->  00:02:24,830
is its own object and so on

27

00:02:25,170  -->  00:02:30,210
and maybe you want to work with this console here which is a bit more clear to see and it's easy to

28

00:02:30,210  -->  00:02:36,540
see which properties your elements have and maybe set or used.

29

00:02:36,540  -->  00:02:47,040
So you got these methods and you also can find elements by ID, by get elements with the get element, not

30

00:02:47,580  -->  00:02:51,360
elements but just element, by ID

31

00:02:51,510  -->  00:02:56,350
and the reason that it's not plural form is that ID should be unique right,

32

00:02:56,370  -->  00:03:00,030
so you shouldn't get an array of elements, you should get only one,

33

00:03:00,030  -->  00:03:02,340
therefore it's get element by ID.

34

00:03:02,370  -->  00:03:10,540
You also have to get element by name, which is if you assign names to your elements and so on.

35

00:03:10,770  -->  00:03:18,390
So these are nice little selectors to let you get the right element very quickly without having to write

36

00:03:18,390  -->  00:03:25,620
these nested statements or chaining multiple property calls to get to the right document, instead here

37

00:03:25,620  -->  00:03:26,830
you can easily find that

38

00:03:26,890  -->  00:03:32,610
and this also has the advantage that if you change something in your HTML code and you add

39

00:03:32,610  -->  00:03:37,900
one extra level to it, you'll still find it instantly if you search by class name

40

00:03:37,950  -->  00:03:44,640
but if you were chaining your children; first child, first child, first child calls and then you add one

41

00:03:44,640  -->  00:03:45,490
extra layer,

42

00:03:45,510  -->  00:03:50,850
well then suddenly all of the statement is broken and you have to add one extra first child or

43

00:03:50,850  -->  00:03:52,080
whatever is appropriate.
