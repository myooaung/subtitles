WEBVTT
1

00:00:01.650  -->  00:00:04.260
Now for the next thing you can do with arrays,

2

00:00:04.260  -->  00:00:06.000
I'll create a new array real quick

3

00:00:08.640  -->  00:00:10.470
which I'll just give

4

00:00:10.470  -->  00:00:22.440
join, me as elements and then I'll call concat on array and I'll pass this huge array to this method

5

00:00:22.440  -->  00:00:23.530
.

6

00:00:23.550  -->  00:00:26.890
Now what would you imagine that happens now?

7

00:00:27.360  -->  00:00:29.640
Well let's have a look.

8

00:00:31.080  -->  00:00:38.640
You see the original array is unchanged but here, this method call returns us a new array which is a

9

00:00:38.640  -->  00:00:44.450
combination of the old array and the new array I'm passing as an argument to this concat function.

10

00:00:44.460  -->  00:00:49.090
So concat allows you to combine two arrays into one single array

11

00:00:49.230  -->  00:00:54.250
and as I just said, it's not altering any of the existing arrays,

12

00:00:54.270  -->  00:00:59.660
I can print out new array too and you will see it's also unchanged

13

00:01:00.540  -->  00:01:05.520
but instead, it creates a new array with the combined values or elements.

14

00:01:05.520  -->  00:01:10.640
Now don't mistake concat with join.

15

00:01:10.740  -->  00:01:14.320
What do you think happens if I run this?

16

00:01:15.780  -->  00:01:18.650
Well that's certainly something else,

17

00:01:18.660  -->  00:01:24.190
now we get this very strange oldjoin, me1join, me2join, me3join, me4

18

00:01:24.650  -->  00:01:27.390
and the old arrays are untouched,

19

00:01:27.390  -->  00:01:29.120
so what is this?

20

00:01:29.550  -->  00:01:34.680
Well join is something completely different, it doesn't join two arrays,

21

00:01:34.860  -->  00:01:39.440
it allows you to join an array into a string

22

00:01:39.510  -->  00:01:48.380
and if you pass an array like here, well then basically it's just using this here as a separator,

23

00:01:48.390  -->  00:01:53.960
join comma me which is why you see join comma me, join comma me and so on

24

00:01:53.970  -->  00:02:00.480
as separators between the values of the old array. A more typical use case would be for example

25

00:02:00.780  -->  00:02:05.880
to use a comma and a whitespace.

26

00:02:05.880  -->  00:02:09.730
Now if I run this, you'll see much better what this method does,

27

00:02:09.750  -->  00:02:16.390
it turns the array into a string and we tell it how to separate the elements inside the string.

28

00:02:16.410  -->  00:02:21.510
Of course we can just leave out any separator, it'll just build one word.
