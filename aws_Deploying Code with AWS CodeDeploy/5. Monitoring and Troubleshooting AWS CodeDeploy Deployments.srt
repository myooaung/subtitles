1
00:00:00,800 --> 00:00:02,840
[Autogenerated] Okay, so now we have the codedeploy.

2
00:00:02,840 --> 00:00:06,020
Agent running and have an application deployed to R E.

3
00:00:06,020 --> 00:00:08,240
C to Auto Scaling Group.

4
00:00:08,240 --> 00:00:12,500
Let's have a look how to monitor and troubleshoot in this demo.

5
00:00:12,500 --> 00:00:15,470
We're going to cover monitoring and troubleshooting.

6
00:00:15,470 --> 00:00:19,240
We're going to view locked air from the codedeploy agent on R E.

7
00:00:19,240 --> 00:00:19,410
C.

8
00:00:19,410 --> 00:00:21,010
Two instance,

9
00:00:21,010 --> 00:00:25,910
and then we're going to look at the cloud watch events for codedeploy We

10
00:00:25,910 --> 00:00:30,650
can then see from here if it's being a success or fail.

11
00:00:30,650 --> 00:00:35,200
You will also get an alert message that pops up saying the error.

12
00:00:35,200 --> 00:00:42,140
If we scroll down, we can select our deployment event to our instance,

13
00:00:42,140 --> 00:00:45,920
and we can also see from here if anything have failed,

14
00:00:45,920 --> 00:00:51,790
that's probably the easiest way to see if a deployment has failed or no.

15
00:00:51,790 --> 00:00:55,430
The next step I would do after that is I would go on to

16
00:00:55,430 --> 00:00:58,020
the actual instance on view the locks.

17
00:00:58,020 --> 00:01:03,640
So if we head over to our easy to dashboard on DDE,

18
00:01:03,640 --> 00:01:08,940
we jump onto ah instance from here,

19
00:01:08,940 --> 00:01:14,850
we can see if the codedeploy service is running on the instant.

20
00:01:14,850 --> 00:01:15,830
Yeah, we can check.

21
00:01:15,830 --> 00:01:18,160
That's right on.

22
00:01:18,160 --> 00:01:22,790
We can also view the lock data for our deployment.

23
00:01:22,790 --> 00:01:30,880
So if we tail the code to play log file here,

24
00:01:30,880 --> 00:01:37,380
you can actually see if anything has been a success or an error

25
00:01:37,380 --> 00:01:40,240
code to play makes it super easy to debug.

26
00:01:40,240 --> 00:01:41,760
The next thing over check is,

27
00:01:41,760 --> 00:01:46,540
if your instance has the correct permissions to access s free,

28
00:01:46,540 --> 00:01:50,000
or whether your codedeploy has the correct service role to access.

29
00:01:50,000 --> 00:01:52,150
Easy to.

30
00:01:52,150 --> 00:01:56,070
You can also check the security groups to make sure that your

31
00:01:56,070 --> 00:01:59,420
instance has the right level of outbound Internet access on

32
00:01:59,420 --> 00:02:02,240
the right level of inbound access.

33
00:02:02,240 --> 00:02:04,840
Here we can see the code to play.

34
00:02:04,840 --> 00:02:11,920
I am Roll we created earlier is attached to our instance on Over On code apply.

35
00:02:11,920 --> 00:02:21,190
We should be able to also see with service role.

36
00:02:21,190 --> 00:02:23,280
Okay, so for the next part of the demo,

37
00:02:23,280 --> 00:02:27,220
we're going to look at the cloudwatch codedeploy events.

38
00:02:27,220 --> 00:02:34,340
So let's go overto the cloudwatch dashboard and then let's go on to the events.

39
00:02:34,340 --> 00:02:37,420
We're guests died.

40
00:02:37,420 --> 00:02:40,320
If we select service in here,

41
00:02:40,320 --> 00:02:46,770
we can go to Codedeploy and then we can also select a different

42
00:02:46,770 --> 00:02:49,530
type of events that we want to have a look at.

43
00:02:49,530 --> 00:02:58,120
So all events will look any state changes on a P I calls from cloudtrail.

44
00:02:58,120 --> 00:03:03,180
Let's drill into the state changes a bit more.

45
00:03:03,180 --> 00:03:13,810
We can specify any detail types that we want thio alert on, such as ST Changes.

46
00:03:13,810 --> 00:03:17,820
We're gonna have a look at specific states such as Ready Start,

47
00:03:17,820 --> 00:03:21,190
stop or success on.

48
00:03:21,190 --> 00:03:27,540
We can actually set it up toe have our specific application that we created.

49
00:03:27,540 --> 00:03:31,900
Here's a preview of the event pattern.

50
00:03:31,900 --> 00:03:34,740
Let me just make that bit bigger.

51
00:03:34,740 --> 00:03:38,540
And you can see here that on a successful state change,

52
00:03:38,540 --> 00:03:41,860
we can create a notification that's all well and good.

53
00:03:41,860 --> 00:03:45,100
But if we don't actually do something without notification,

54
00:03:45,100 --> 00:03:47,130
then what's the point?

55
00:03:47,130 --> 00:03:53,090
So you can actually set up a target for your cloudwatch event,

56
00:03:53,090 --> 00:03:54,480
such as a lambda function.

57
00:03:54,480 --> 00:03:59,970
If you have one on, then that lambda function can manipulate that data on dhe.

58
00:03:59,970 --> 00:04:04,430
Potentially send it to slack.

59
00:04:04,430 --> 00:04:07,060
This builds upon a death SEK ups approach on.

60
00:04:07,060 --> 00:04:12,900
You can monitor on alert on any changes in your environment.

61
00:04:12,900 --> 00:04:23,670
If you want to be super secure, we can have a look at the cloudtrail ones,

62
00:04:23,670 --> 00:04:28,150
and here we can see on alert on any user's actions within code,

63
00:04:28,150 --> 00:04:34,740
a play and the same thing again, we can out put that to the target on that.

64
00:04:34,740 --> 00:04:45,420
Pass it to a function there are all sorts of talk is available.

65
00:04:45,420 --> 00:04:48,680
But I think the London function was probably the most powerful because you could

66
00:04:48,680 --> 00:04:53,280
manipulate the data and send it to somewhere such a slack.

67
00:04:53,280 --> 00:04:55,840
Okay, let's have a quick recap.

68
00:04:55,840 --> 00:04:59,830
We just covered codedeploy and easy to We looked at the

69
00:04:59,830 --> 00:05:04,540
prerequisites required to install the codedeploy agent and

70
00:05:04,540 --> 00:05:07,940
deploy from the code to play dashboard.

71
00:05:07,940 --> 00:05:18,000
We did that using an auto scaling group on a lobe answer. And then we looked at monitoring a debugging our deployments on event actions.

