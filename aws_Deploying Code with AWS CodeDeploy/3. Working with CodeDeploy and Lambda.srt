1
00:00:00,410 --> 00:00:01,010
[Autogenerated] okay.

2
00:00:01,010 --> 00:00:03,750
In our next section, we're going to look at working with code.

3
00:00:03,750 --> 00:00:05,630
Apply in Lunda.

4
00:00:05,630 --> 00:00:09,150
Let's jump right in and gets died in this demo.

5
00:00:09,150 --> 00:00:11,010
We're going to cover the following.

6
00:00:11,010 --> 00:00:13,800
We're going to look a TKO, deploy and Lambda.

7
00:00:13,800 --> 00:00:16,260
You're going to download the package Sham app.

8
00:00:16,260 --> 00:00:19,700
That's in the course documents that I've already pre uploaded for you.

9
00:00:19,700 --> 00:00:22,530
Then we're going to deploy the Sam application on.

10
00:00:22,530 --> 00:00:24,740
We're gonna look at what that involves,

11
00:00:24,740 --> 00:00:28,220
and then we're gonna update some of the some app on with a failed

12
00:00:28,220 --> 00:00:32,270
validation test so we can see how it fails on.

13
00:00:32,270 --> 00:00:35,520
Then we're gonna update the London function on dhe.

14
00:00:35,520 --> 00:00:38,400
We're gonna fix a test, and then we're going to redeploy it.

15
00:00:38,400 --> 00:00:42,560
And then you can see how it all works in place with the right hooks on,

16
00:00:42,560 --> 00:00:43,500
it's gonna be pretty awesome.

17
00:00:43,500 --> 00:00:46,440
So let's go ahead and jump right in.

18
00:00:46,440 --> 00:00:49,040
Okay, so let's start this demo off.

19
00:00:49,040 --> 00:00:53,890
You've downloaded the course files from floor site on you

20
00:00:53,890 --> 00:00:56,820
open them up in your favorite editor on.

21
00:00:56,820 --> 00:00:58,840
Let's take a look was in there.

22
00:00:58,840 --> 00:01:01,000
So here after the sum up.

23
00:01:01,000 --> 00:01:05,070
Now, this app is essentially the Sam, innit?

24
00:01:05,070 --> 00:01:09,310
Hello World on that you can create yourself on.

25
00:01:09,310 --> 00:01:12,470
Do you can just do that by Crate in by going like this,

26
00:01:12,470 --> 00:01:16,090
when your come on line and that'll just spit out

27
00:01:16,090 --> 00:01:17,940
pretty much what we've got there.

28
00:01:17,940 --> 00:01:23,890
Ah, them built on top of that app on added a pre traffic hook.

29
00:01:23,890 --> 00:01:30,470
So this template file is similar to our app spec files in previous modules.

30
00:01:30,470 --> 00:01:36,850
Now, this is what's gonna hold all of our Lambda functions together on dhe.

31
00:01:36,850 --> 00:01:40,850
So what's gonna be read by cold Deploy and also confirmation?

32
00:01:40,850 --> 00:01:42,100
So here we have.

33
00:01:42,100 --> 00:01:48,110
The over two files are probably most notable in here.

34
00:01:48,110 --> 00:01:52,100
We've got our actual little web service.

35
00:01:52,100 --> 00:01:55,240
It just returns a hello world for us.

36
00:01:55,240 --> 00:01:57,700
Ah, it's got a little validation.

37
00:01:57,700 --> 00:02:03,640
Um, value on Also, it's going to return a stage cut of 200.

38
00:02:03,640 --> 00:02:07,680
If it's successful on, then let's jump over to the next one,

39
00:02:07,680 --> 00:02:11,870
which is a pre traffic hook in here.

40
00:02:11,870 --> 00:02:16,940
You can see that we're going to call the first

41
00:02:16,940 --> 00:02:20,590
function that abduct GS function on DDE.

42
00:02:20,590 --> 00:02:22,010
It's going to get a deployment.

43
00:02:22,010 --> 00:02:24,230
I d from codedeploy on.

44
00:02:24,230 --> 00:02:30,650
Then we're going to call the Lambda function the 1st 1 on.

45
00:02:30,650 --> 00:02:33,820
Then we're going to see if the result is what we want it to be.

46
00:02:33,820 --> 00:02:37,340
If it's gonna return to status code of 200 we're

47
00:02:37,340 --> 00:02:40,920
going to test our validation field, too.

48
00:02:40,920 --> 00:02:46,110
And if that's a success than the pre traffic hook will be successful on,

49
00:02:46,110 --> 00:02:49,760
it will deploy the code successfully.

50
00:02:49,760 --> 00:02:53,900
And you can see down here that it's going to tell codedeploy that the test

51
00:02:53,900 --> 00:02:58,540
was successful on then allow the deployment to go ahead.

52
00:02:58,540 --> 00:03:02,860
So free drawn back over is a template we can see in here.

53
00:03:02,860 --> 00:03:04,660
Here's all had a will function and up.

54
00:03:04,660 --> 00:03:06,220
Jess.

55
00:03:06,220 --> 00:03:10,880
It's going to deploy all at once just because it's a bit quicker for the demo.

56
00:03:10,880 --> 00:03:13,460
But you can have over options in its which is this linear?

57
00:03:13,460 --> 00:03:14,740
10%.

58
00:03:14,740 --> 00:03:18,450
On that, I'll just transfer the traffic over 10% at a time.

59
00:03:18,450 --> 00:03:19,400
Wants a minute.

60
00:03:19,400 --> 00:03:22,240
So it was growing a bit further down,

61
00:03:22,240 --> 00:03:25,430
and then we're going to see our pre traffic hook here,

62
00:03:25,430 --> 00:03:31,210
which is actually referenced in the the first half a world apart.

63
00:03:31,210 --> 00:03:34,100
And then, in the pre traffic hook section,

64
00:03:34,100 --> 00:03:39,820
it's going to create a lifecycle event hook on dhe.

65
00:03:39,820 --> 00:03:41,370
It's gonna create a nervous,

66
00:03:41,370 --> 00:03:46,700
separate function that's gonna test the first function.

67
00:03:46,700 --> 00:03:50,530
I've added a little output section down the bottom Here.

68
00:03:50,530 --> 00:03:55,030
It's going to give out our you're out to test our updates as well, too.

69
00:03:55,030 --> 00:03:58,810
So let's go ahead and build this app on.

70
00:03:58,810 --> 00:04:00,020
Then let's deploy it.

71
00:04:00,020 --> 00:04:03,560
So if we now switch over to the command line here,

72
00:04:03,560 --> 00:04:08,690
I am at the root off the application folder on in Here.

73
00:04:08,690 --> 00:04:16,840
We want to do a Sam build command.

74
00:04:16,840 --> 00:04:21,620
Perfect, really simple, really straightforward on that.

75
00:04:21,620 --> 00:04:24,920
The next thing we want to do is fact, it already tells you,

76
00:04:24,920 --> 00:04:28,860
is you can I have a test it locally?

77
00:04:28,860 --> 00:04:29,780
It's probably outside.

78
00:04:29,780 --> 00:04:33,840
The scope of this course is that's probably more of a Sam tutorial.

79
00:04:33,840 --> 00:04:40,240
We want to Sam Deploy that's gonna ask us some

80
00:04:40,240 --> 00:04:42,800
questions because it's a guided deploy.

81
00:04:42,800 --> 00:04:46,940
I'm happy with the original stock name of Sama on.

82
00:04:46,940 --> 00:04:50,240
I wanted to be in my region in Ireland.

83
00:04:50,240 --> 00:04:51,640
Ah,

84
00:04:51,640 --> 00:04:58,440
that's fine as well on DDE yet out to create the resource role on

85
00:04:58,440 --> 00:05:02,290
Also save our arguments to Sam Conflict Animal.

86
00:05:02,290 --> 00:05:09,810
We can have a look at that in a second to fuel, so let's let that build up now.

87
00:05:09,810 --> 00:05:14,260
This is currently building a cloud formation template of all of our

88
00:05:14,260 --> 00:05:18,230
preferences in and all of our values for our Sam deploy,

89
00:05:18,230 --> 00:05:20,230
you know, some super powerful.

90
00:05:20,230 --> 00:05:25,330
It's a really interesting, um, service, I suppose.

91
00:05:25,330 --> 00:05:27,440
Function.

92
00:05:27,440 --> 00:05:28,140
That's pretty cool.

93
00:05:28,140 --> 00:05:28,350
Really.

94
00:05:28,350 --> 00:05:29,590
How it does it and you know,

95
00:05:29,590 --> 00:05:33,280
a duress once again have built on that cloud free 0.0,

96
00:05:33,280 --> 00:05:36,640
model.

97
00:05:36,640 --> 00:05:45,690
So let's just let that create the required resources on Shouldn't take too long.

98
00:05:45,690 --> 00:05:46,110
Okay?

99
00:05:46,110 --> 00:05:50,240
So that just create all the required resources that we need.

100
00:05:50,240 --> 00:05:53,570
So now we're happy with this change that let's have a quick look at what it's

101
00:05:53,570 --> 00:05:57,090
doing is going to create both of our functions forwards.

102
00:05:57,090 --> 00:05:58,080
And you can see here.

103
00:05:58,080 --> 00:06:00,660
Ah, hello World function.

104
00:06:00,660 --> 00:06:05,000
Also our pre traffic hook.

105
00:06:05,000 --> 00:06:06,940
So that's hit.

106
00:06:06,940 --> 00:06:09,790
Yes, let that fire away.

107
00:06:09,790 --> 00:06:13,990
So this is now really in a confirmation template in the background.

108
00:06:13,990 --> 00:06:19,150
And if we just switch over to the eight of us dashboard, we can see that here.

109
00:06:19,150 --> 00:06:20,410
So let's have a look.

110
00:06:20,410 --> 00:06:26,390
Sam up his the one we just created on its now created all of the different

111
00:06:26,390 --> 00:06:32,000
components and service is for us to get this up and running on.

112
00:06:32,000 --> 00:06:35,940
If we switch over to the lander dashboard.

113
00:06:35,940 --> 00:06:40,490
We should be able to see both functions created in here.

114
00:06:40,490 --> 00:06:44,380
That's the 1st 1 perfect.

115
00:06:44,380 --> 00:06:44,990
And there it is.

116
00:06:44,990 --> 00:06:51,770
So there's our go to play hook for pre traffic evaluation.

117
00:06:51,770 --> 00:06:54,690
Now, if we switch over to Codedeploy dashboard as well,

118
00:06:54,690 --> 00:07:00,860
we should also be able to see in applications the sum up that's created for us.

119
00:07:00,860 --> 00:07:01,360
Senator.

120
00:07:01,360 --> 00:07:05,790
How PCs works as well, already created Old Forest,

121
00:07:05,790 --> 00:07:08,010
which is just so also so powerful.

122
00:07:08,010 --> 00:07:09,180
And let's have a quick look at that.

123
00:07:09,180 --> 00:07:15,790
So in here it's create the application on its creator deployment group, too.

124
00:07:15,790 --> 00:07:20,790
And then it shouldn't have create any deployments just yet.

125
00:07:20,790 --> 00:07:25,250
So it only tends to do that when you do so.

126
00:07:25,250 --> 00:07:28,780
Once this is finished at the group's finished let's have a look.

127
00:07:28,780 --> 00:07:32,640
We can find the You're all here for Orlando function.

128
00:07:32,640 --> 00:07:38,310
So let's just copy that that switch over to a chrome or your browser.

129
00:07:38,310 --> 00:07:38,880
I'll pace.

130
00:07:38,880 --> 00:07:42,100
I didn't We should see hello world and a little bit of

131
00:07:42,100 --> 00:07:44,710
Jason that we just create perfect.

132
00:07:44,710 --> 00:07:49,410
So the next thing let's create an update.

133
00:07:49,410 --> 00:07:55,500
So if we jump back to our application and we'll up it a hello world,

134
00:07:55,500 --> 00:07:58,610
too, let's say that on?

135
00:07:58,610 --> 00:08:00,830
Let's break the validation.

136
00:08:00,830 --> 00:08:03,950
So let's say validation is zero.

137
00:08:03,950 --> 00:08:07,180
Our pre hook traffic tests is looking for what?

138
00:08:07,180 --> 00:08:09,610
So let's have a look down there where that is,

139
00:08:09,610 --> 00:08:13,070
so we can see that the state is car's been 200 but

140
00:08:13,070 --> 00:08:15,860
it's expected a validation value,

141
00:08:15,860 --> 00:08:18,290
which could be an if it really any set of data you

142
00:08:18,290 --> 00:08:20,080
want to return and voluntary on.

143
00:08:20,080 --> 00:08:23,830
I've just use a really straightforward one for this example on.

144
00:08:23,830 --> 00:08:28,030
It's gonna expect zero, but where I'm going to say we want one.

145
00:08:28,030 --> 00:08:31,060
So now we've done that.

146
00:08:31,060 --> 00:08:33,140
Let's switch back to bash.

147
00:08:33,140 --> 00:08:38,090
Uh, let's rebuild the app on.

148
00:08:38,090 --> 00:08:39,950
Let's deploy it once again.

149
00:08:39,950 --> 00:08:42,610
So, Sam deploy guided.

150
00:08:42,610 --> 00:08:44,750
It's gonna be the same name again.

151
00:08:44,750 --> 00:08:48,510
A ll the same values so we can use it and toe,

152
00:08:48,510 --> 00:08:53,700
um, settle the defaults for this, which is fine.

153
00:08:53,700 --> 00:08:54,430
It's going up.

154
00:08:54,430 --> 00:08:56,240
There are changes.

155
00:08:56,240 --> 00:08:58,720
Create the new Clough information template forwards,

156
00:08:58,720 --> 00:09:02,550
which isn't gonna redeploy resources and update them.

157
00:09:02,550 --> 00:09:05,710
And it's also going to create a codedeploy deployment.

158
00:09:05,710 --> 00:09:12,890
So let's to play that Yes, that switch back to our dashboard.

159
00:09:12,890 --> 00:09:17,120
In our confirmation stat, we should see that run some new events.

160
00:09:17,120 --> 00:09:19,490
Credit resources and progress.

161
00:09:19,490 --> 00:09:22,610
And then let's switch over to code, apply it and see what's going on here.

162
00:09:22,610 --> 00:09:24,760
So free school down.

163
00:09:24,760 --> 00:09:28,360
We should now start to see a new deployment.

164
00:09:28,360 --> 00:09:31,720
I d in here soon.

165
00:09:31,720 --> 00:09:32,800
There it is.

166
00:09:32,800 --> 00:09:35,320
Uh, let's have a look at that.

167
00:09:35,320 --> 00:09:39,420
Look, it failed because of a pre deployment hook.

168
00:09:39,420 --> 00:09:39,950
Failed.

169
00:09:39,950 --> 00:09:41,340
It's validation.

170
00:09:41,340 --> 00:09:47,820
So you gonna be able to see any Arizona near that you won't on?

171
00:09:47,820 --> 00:09:53,060
Um, if you have any to debug benefit, this is probably the first port of call,

172
00:09:53,060 --> 00:09:55,720
like in the previous modules that we talked about.

173
00:09:55,720 --> 00:10:00,100
You would just go here and have a look at why it failed.

174
00:10:00,100 --> 00:10:05,270
And you can also see is well, that it's because the update has failed in class.

175
00:10:05,270 --> 00:10:07,480
Information is going to roll back to the previous one.

176
00:10:07,480 --> 00:10:09,700
So let's have a look what's happening there.

177
00:10:09,700 --> 00:10:12,820
We can actually go back to Deployments on.

178
00:10:12,820 --> 00:10:13,310
We'll see.

179
00:10:13,310 --> 00:10:18,360
That created another deployment for us to roll back to a previous version,

180
00:10:18,360 --> 00:10:21,690
which was safe.

181
00:10:21,690 --> 00:10:27,440
Look, that was all successful past all of the tests on DDE.

182
00:10:27,440 --> 00:10:28,920
Yeah, that's perfect.

183
00:10:28,920 --> 00:10:32,720
So let's go back to our code editor again on let's

184
00:10:32,720 --> 00:10:36,800
fix this validation back to one.

185
00:10:36,800 --> 00:10:42,460
In fact, before we do that, let's go to our browser and just see if update two.

186
00:10:42,460 --> 00:10:44,040
Hello world, too.

187
00:10:44,040 --> 00:10:49,490
It didn't so it wrote back, obviously, to the previous version on Dhe.

188
00:10:49,490 --> 00:10:53,050
Let's go ahead now and create that third deployment that we want to do.

189
00:10:53,050 --> 00:10:55,260
So let's go back to our code editor.

190
00:10:55,260 --> 00:10:58,610
Let's change that to hello World Free because we know

191
00:10:58,610 --> 00:11:01,080
that Number two was unsuccessful.

192
00:11:01,080 --> 00:11:04,010
I will fix the validation value back to one on.

193
00:11:04,010 --> 00:11:06,000
Then let's jump back to bash on.

194
00:11:06,000 --> 00:11:08,500
Let's create the third and final deployment.

195
00:11:08,500 --> 00:11:13,910
So we're gonna just once again build the Santa perfect.

196
00:11:13,910 --> 00:11:17,710
And then let's do our final guided deployment.

197
00:11:17,710 --> 00:11:21,700
We're gonna select all the default values again,

198
00:11:21,700 --> 00:11:24,740
and then that's going to create the day of final vision for us.

199
00:11:24,740 --> 00:11:27,670
That cloud formation is going to run perfect.

200
00:11:27,670 --> 00:11:33,550
So let's go ahead and run that and let's see what happens this time.

201
00:11:33,550 --> 00:11:36,040
Switch back over to our browser on.

202
00:11:36,040 --> 00:11:41,350
We can see that we have another update in progress here.

203
00:11:41,350 --> 00:11:45,580
Our London functions are still that and then let's go and have a look.

204
00:11:45,580 --> 00:11:46,340
A cold deploy.

205
00:11:46,340 --> 00:11:50,490
So here, in our deployments, we should be able to see.

206
00:11:50,490 --> 00:11:53,950
Um Well, so go.

207
00:11:53,950 --> 00:12:00,940
But applications set toe application and then go to deployments.

208
00:12:00,940 --> 00:12:01,710
We can see here.

209
00:12:01,710 --> 00:12:04,180
That's creating our new deployment.

210
00:12:04,180 --> 00:12:04,610
Here we go.

211
00:12:04,610 --> 00:12:06,450
So here's our new deployment on.

212
00:12:06,450 --> 00:12:12,640
Then let's see it Testing our ah predeployment validation hook

213
00:12:12,640 --> 00:12:16,080
that we created and made fix that really?

214
00:12:16,080 --> 00:12:20,680
So that it should pass this stage again and then redeploy application.

215
00:12:20,680 --> 00:12:21,800
Okay, Perfect.

216
00:12:21,800 --> 00:12:27,130
That succeeded on past our validation tests on our update function.

217
00:12:27,130 --> 00:12:31,390
So if we go ahead to our on hit the FBI for that function now,

218
00:12:31,390 --> 00:12:38,000
we should see our hello world free on it past his validation. How cool is that?

