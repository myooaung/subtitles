1
00:00:00,390 --> 00:00:03,830
[Autogenerated] Okay, so now we have everything set up on in place.

2
00:00:03,830 --> 00:00:07,230
Let's look at how to update PCs with CODEDEPLOY.

3
00:00:07,230 --> 00:00:09,680
In this demo, we're going to cover the following.

4
00:00:09,680 --> 00:00:11,240
We're going to update the E.

5
00:00:11,240 --> 00:00:14,140
C s service, which uses codedeploy.

6
00:00:14,140 --> 00:00:17,710
And then we're also going to look at manually updating codedeploy,

7
00:00:17,710 --> 00:00:19,030
which will end up day E.

8
00:00:19,030 --> 00:00:20,190
C s.

9
00:00:20,190 --> 00:00:22,860
And now let's have a look at how we can update that.

10
00:00:22,860 --> 00:00:25,510
So if we jump back over to E.

11
00:00:25,510 --> 00:00:34,600
C S ah, on go to our test definition, if we can create a new revision on,

12
00:00:34,600 --> 00:00:38,230
let's scroll down to configure Very Jason,

13
00:00:38,230 --> 00:00:43,090
unless edit some of this command that gets pumped into the container.

14
00:00:43,090 --> 00:00:47,340
Let's edit something here so we can see the changes.

15
00:00:47,340 --> 00:00:53,440
You just updated that contain it.

16
00:00:53,440 --> 00:00:59,930
Run a bye, codedeploy.

17
00:00:59,930 --> 00:01:02,370
We'll save that.

18
00:01:02,370 --> 00:01:04,590
We'll create that.

19
00:01:04,590 --> 00:01:05,060
Awesome.

20
00:01:05,060 --> 00:01:10,390
So now we have a task definition number night with my case,

21
00:01:10,390 --> 00:01:15,190
but you should probably have to Let's jump back over to the E.

22
00:01:15,190 --> 00:01:17,410
C s dash boat on.

23
00:01:17,410 --> 00:01:21,940
We're going to update our service.

24
00:01:21,940 --> 00:01:26,930
Uh, you can see that nine is the latest in Unitas definition.

25
00:01:26,930 --> 00:01:35,770
On that scroll down, next step deployment types will find on.

26
00:01:35,770 --> 00:01:42,180
Then let's hit next step again on again.

27
00:01:42,180 --> 00:01:45,090
That all looks brilliant.

28
00:01:45,090 --> 00:01:47,040
Let's update the service.

29
00:01:47,040 --> 00:01:48,040
So what's happening there?

30
00:01:48,040 --> 00:01:54,580
So, actually, E C s is using Codedeploy again to create a new deployment.

31
00:01:54,580 --> 00:01:58,630
Let's switch back over to Codedeploy.

32
00:01:58,630 --> 00:02:05,230
Let's have a look at our deployment groups and you can actually see the

33
00:02:05,230 --> 00:02:10,930
deployment here that's just being created by Easy s So Amazon.

34
00:02:10,930 --> 00:02:14,810
You absolutely killed it on a so much automation here that takes

35
00:02:14,810 --> 00:02:19,150
away lows of heartache from his developers.

36
00:02:19,150 --> 00:02:21,610
We can see that's in progress, just like we did it.

37
00:02:21,610 --> 00:02:23,010
The easy to won't on.

38
00:02:23,010 --> 00:02:27,030
We can see what events are happening.

39
00:02:27,030 --> 00:02:28,590
If we scroll up a bit,

40
00:02:28,590 --> 00:02:32,250
we can have a look at this revision location and you'll

41
00:02:32,250 --> 00:02:34,490
see in here similar to easy to that.

42
00:02:34,490 --> 00:02:39,740
It's created the app Spec fours.

43
00:02:39,740 --> 00:02:41,910
So let's let this finish on.

44
00:02:41,910 --> 00:02:46,340
Then we can then just check that it's update it.

45
00:02:46,340 --> 00:02:48,050
Okay, that succeeded.

46
00:02:48,050 --> 00:02:53,190
Let's terminate the original test set.

47
00:02:53,190 --> 00:02:54,840
All succeeded.

48
00:02:54,840 --> 00:02:56,400
Fantastic.

49
00:02:56,400 --> 00:02:59,840
Let's have a quick look.

50
00:02:59,840 --> 00:03:00,820
Awesome.

51
00:03:00,820 --> 00:03:04,340
There's the message that we just updated in our container.

52
00:03:04,340 --> 00:03:04,820
Okay,

53
00:03:04,820 --> 00:03:08,190
so you can actually update this manually to So if we jump

54
00:03:08,190 --> 00:03:14,020
back over to our task definition on, We create a new revision again.

55
00:03:14,020 --> 00:03:14,980
Scroll down.

56
00:03:14,980 --> 00:03:18,550
Same thing configured via Jason.

57
00:03:18,550 --> 00:03:19,810
Scroll down on.

58
00:03:19,810 --> 00:03:23,430
Then let's update the message one final time.

59
00:03:23,430 --> 00:03:29,560
Let's call it Final form Save.

60
00:03:29,560 --> 00:03:34,370
Create Perfect on the next one's great.

61
00:03:34,370 --> 00:03:39,830
So let's then jump back to our revision that we had a quick look at before.

62
00:03:39,830 --> 00:03:44,480
Let's copy that app spect there.

63
00:03:44,480 --> 00:03:44,900
Okay,

64
00:03:44,900 --> 00:03:49,560
so let's go to our application that select our deployment

65
00:03:49,560 --> 00:03:53,000
group that's already been created for us.

66
00:03:53,000 --> 00:03:58,990
And that's creating new deployment here we can use on in line

67
00:03:58,990 --> 00:04:02,840
up spec editor unless paste in the Jason that we just coffee

68
00:04:02,840 --> 00:04:06,180
it from the original revision.

69
00:04:06,180 --> 00:04:08,070
All we have to do here is up.

70
00:04:08,070 --> 00:04:13,450
They attached definition number to a new one or a completely new one.

71
00:04:13,450 --> 00:04:17,160
If that's what you wanted to do, scroll down on.

72
00:04:17,160 --> 00:04:20,750
Let's create the deployment boom.

73
00:04:20,750 --> 00:04:22,470
Is that easy?

74
00:04:22,470 --> 00:04:26,910
Arifin is just don't foryou of codedeploy on its especially easy with

75
00:04:26,910 --> 00:04:31,990
Easy s Let's scroll down and have a look at some of the events in

76
00:04:31,990 --> 00:04:39,290
progress on advocacy and similar with when we deployed Too easy to

77
00:04:39,290 --> 00:04:47,800
you can see the lifecycle hooks and events from the APP spec file If

78
00:04:47,800 --> 00:04:49,630
we switch over to easy.

79
00:04:49,630 --> 00:04:57,740
Yes, and we view our service,

80
00:04:57,740 --> 00:05:03,040
we can actually see here a new test definition being created.

81
00:05:03,040 --> 00:05:08,610
I'm running alongside our original codedeploy is actually blue Green to

82
00:05:08,610 --> 00:05:13,850
playing our tasks and service is wants that new task.

83
00:05:13,850 --> 00:05:15,900
Pass a health check.

84
00:05:15,900 --> 00:05:16,770
It will lend.

85
00:05:16,770 --> 00:05:23,720
Delete the old one.

86
00:05:23,720 --> 00:05:24,310
Look at that.

87
00:05:24,310 --> 00:05:27,230
It deployed the replacement test set on.

88
00:05:27,230 --> 00:05:29,800
Now it's reroute it to the new one,

89
00:05:29,800 --> 00:05:33,830
and then we just need to terminate the original one.

90
00:05:33,830 --> 00:05:34,810
Let's have a look at that.

91
00:05:34,810 --> 00:05:38,850
Any CS boot?

92
00:05:38,850 --> 00:05:39,420
There we go.

93
00:05:39,420 --> 00:05:42,550
It removed the original task definition and has just

94
00:05:42,550 --> 00:05:45,200
replaced it with our latest current one.

95
00:05:45,200 --> 00:05:50,000
So let's have a quick look and make sure that that's actually happened.

96
00:05:50,000 --> 00:05:52,150
WeII, there it is.

97
00:05:52,150 --> 00:05:53,290
So they go.

98
00:05:53,290 --> 00:05:57,210
There's everything you need to know to deploy to E.

99
00:05:57,210 --> 00:05:57,460
C.

100
00:05:57,460 --> 00:06:00,150
S using codedeploy.

101
00:06:00,150 --> 00:06:03,630
And it's especially easy when using fargate as every Finn

102
00:06:03,630 --> 00:06:11,000
just builds upon that cloud free 0.0, mentality of platform as a service or, in fact, everything as a service

