1
00:00:01,340 --> 00:00:04,340
Adding error handling logic is straightforward.

2
00:00:04,340 --> 00:00:05,080
For example,

3
00:00:05,080 --> 00:00:08,340
what if a user queries for an application that doesn't exist?

4
00:00:08,340 --> 00:00:11,450
Similar to how we handled the error in the RESTful API by

5
00:00:11,450 --> 00:00:13,990
throwing an application not found exception,

6
00:00:13,990 --> 00:00:16,500
we will follow the same model.

7
00:00:16,500 --> 00:00:20,260
Let's look at exception handling. I've opened the project and I've

8
00:00:20,260 --> 00:00:24,130
navigated to the ApplicationNotFoundException.java file.

9
00:00:24,130 --> 00:00:28,020
Adding error handling logic is pretty straightforward. In this example

10
00:00:28,020 --> 00:00:32,330
we are going to throw an ApplicationNotFoundException if the client

11
00:00:32,330 --> 00:00:34,880
requests an application that doesn't exist.

12
00:00:34,880 --> 00:00:37,890
So let's take a look at this.

13
00:00:37,890 --> 00:00:40,830
The first step is to have the exception extend

14
00:00:40,830 --> 00:00:45,620
RuntimeException and then implement GraphQLError.

15
00:00:45,620 --> 00:00:51,180
GraphicQLError provides a field called extensions, right here on line 13.

16
00:00:51,180 --> 00:00:53,720
And this is used to pass an additional data to the

17
00:00:53,720 --> 00:01:00,000
error object sent to the client. In this case simply, we will pass in the invalidApplicationId.

