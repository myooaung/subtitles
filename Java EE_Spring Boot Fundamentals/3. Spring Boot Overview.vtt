WEBVTT
1
00:00:02.210 --> 00:00:05.115
Today I will teach you about Spring Boot and its benefits,

2
00:00:05.115 --> 00:00:07.210
calling out specifics such as,

3
00:00:07.210 --> 00:00:11.330
what is Spring Boot, why was it created, differences between

4
00:00:11.330 --> 00:00:14.450
Spring and Spring Boot and Spring Boot starters?

5
00:00:14.450 --> 00:00:21.740
I will also introduce the CLI, automatic configuration, and the actuator.

6
00:00:21.740 --> 00:00:25.000
Spring Boot is a game changer for the Spring framework,

7
00:00:25.000 --> 00:00:27.650
and its popularity is increasing.

8
00:00:27.650 --> 00:00:31.300
Spring Boot sits on top of the Spring framework and

9
00:00:31.300 --> 00:00:37.920
makes it super easy to set up, configure, and run simple web applications.

10
00:00:37.920 --> 00:00:42.930
Spring Boot allows you to boot up your Spring applications, no pun intended,

11
00:00:42.930 --> 00:00:49.390
with minimal fuss in very little Spring configuration.

12
00:00:49.390 --> 00:00:51.450
If you've used Spring before,

13
00:00:51.450 --> 00:00:55.425
you're familiar with the XML schema‑based configuration files.

14
00:00:55.425 --> 00:00:59.390
Although Spring is a lightweight development framework,

15
00:00:59.390 --> 00:01:04.180
especially when you compare it to EJBs, Enterprise JavaBeans, there were a

16
00:01:04.180 --> 00:01:08.560
lot of complaints about the amount of configuration needed. In later

17
00:01:08.560 --> 00:01:12.830
versions of Spring, annotation‑based configuration was introduced to

18
00:01:12.830 --> 00:01:15.800
reduce the dependency on XML configuration.

19
00:01:15.800 --> 00:01:22.150
Although this helped, it didn't entirely solve the problem.

20
00:01:22.150 --> 00:01:24.240
There's also another problem.

21
00:01:24.240 --> 00:01:27.140
When developing a web application, for example,

22
00:01:27.140 --> 00:01:31.270
the structure is pretty much the same with similar dependencies.

23
00:01:31.270 --> 00:01:36.250
For example, you'll have configuration, a controller,

24
00:01:36.250 --> 00:01:40.460
a service layer, connection to a database, and a servlet

25
00:01:40.460 --> 00:01:44.850
container such as Tomcat to deploy the application to. All of

26
00:01:44.850 --> 00:01:47.580
this is repetitive and boilerplate.

27
00:01:47.580 --> 00:01:50.500
Spring Boot solves this problem, assists with

28
00:01:50.500 --> 00:01:54.170
configuration, and helps with dependency management.

29
00:01:54.170 --> 00:01:59.030
Spring Boot emphasizes convention over configuration and is smart enough to

30
00:01:59.030 --> 00:02:03.663
choose your dependencies for you, and auto configures what you need so that

31
00:02:03.663 --> 00:02:07.913
you can literally launch your application with a single click. Spring Boot

32
00:02:07.913 --> 00:02:12.253
also simplifies the deployment of your application and comes with several

33
00:02:12.253 --> 00:02:16.773
built‑in servlet containers and embeds directly with no need to deploy WAR

34
00:02:16.773 --> 00:02:18.263
files separately.

35
00:02:18.263 --> 00:02:20.033
You no longer need to download,

36
00:02:20.033 --> 00:02:27.000
install, and configure web servers, or package your application. What a time saver.

