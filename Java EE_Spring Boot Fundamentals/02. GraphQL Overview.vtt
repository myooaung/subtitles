WEBVTT
1
00:00:05.440 --> 00:00:06.930
In the previous module,

2
00:00:06.930 --> 00:00:12.140
we learned about building a RESTful API. REST is the most popular way to

3
00:00:12.140 --> 00:00:16.280
expose data from a server through an API; however,

4
00:00:16.280 --> 00:00:20.780
the response returned from a REST API is very rigid and returns

5
00:00:20.780 --> 00:00:24.610
all of the data points as designed by the developer, whether you

6
00:00:24.610 --> 00:00:28.950
need them or not. GraphQL offers greater flexibility in the

7
00:00:28.950 --> 00:00:32.800
response returned than REST.

8
00:00:32.800 --> 00:00:34.410
What is GraphQL?

9
00:00:34.410 --> 00:00:35.540
Simply put,

10
00:00:35.540 --> 00:00:39.740
GraphQL is a query language for APIs or a syntax that

11
00:00:39.740 --> 00:00:43.590
describes how to ask for data and is generally used to load

12
00:00:43.590 --> 00:00:47.180
data from a server to a client.

13
00:00:47.180 --> 00:00:52.130
The neat thing about GraphQL is that it lets the calling client or the user

14
00:00:52.130 --> 00:00:57.140
specify exactly what data it needs, and it also allows for the aggregation

15
00:00:57.140 --> 00:01:00.140
of data from multiple sources on the back end,

16
00:01:00.140 --> 00:01:04.640
allowing the client to make one call to get all of the data it needs.

17
00:01:04.640 --> 00:01:09.470
With GraphQL, there is no longer a need to call one API to get some of the data

18
00:01:09.470 --> 00:01:14.740
you need and then call another API to get the rest of the data that you need.

19
00:01:14.740 --> 00:01:22.040
GraphQL offers maximum efficiency and flexibility.

20
00:01:22.040 --> 00:01:25.390
Each query will have a specific object that it returns,

21
00:01:25.390 --> 00:01:27.460
and based on the object returned,

22
00:01:27.460 --> 00:01:30.620
you can add or remove fields to match the exact data you

23
00:01:30.620 --> 00:01:33.240
need to fit your specific use case.

24
00:01:33.240 --> 00:01:36.430
On the left‑hand side is a sample query,

25
00:01:36.430 --> 00:01:42.100
and on the right‑hand side is the response.

26
00:01:42.100 --> 00:01:47.500
As a query language, GraphQL provides you with a lot of flexibility that most

27
00:01:47.500 --> 00:01:54.320
normal APIs or web services don't. Unlike regular SOAP or REST APIs, GraphQL

28
00:01:54.320 --> 00:01:58.760
gives you the ultimate flexibility in being able to specify in your API

29
00:01:58.760 --> 00:02:04.545
requests specifically what data you need and get that back exactly. In this

30
00:02:04.545 --> 00:02:09.485
example, on the left‑hand side is the query. Notice this time I've included

31
00:02:09.485 --> 00:02:17.000
owner, and on the right‑hand side is the response, and notice this time, it returns the owner.

