1
00:00:01,358 --> 00:00:04,602
I'm not going to take you through a huge architecture discussion and show

2
00:00:04,602 --> 00:00:07,393
you a bunch of class diagrams or anything like that,

3
00:00:07,393 --> 00:00:10,146
but I want to take a minute to talk about why Spring

4
00:00:10,146 --> 00:00:12,350
was developed the way that it is.

5
00:00:12,350 --> 00:00:16,981
Spring was developed to make existing tasks easier.

6
00:00:16,981 --> 00:00:18,024
Before Spring came around,

7
00:00:18,024 --> 00:00:22,545
we used some design patterns from the JEE blueprints to help

8
00:00:22,545 --> 00:00:25,818
establish better code and repeatable processes.

9
00:00:25,818 --> 00:00:30,038
These blueprints helped to establish a consistent way of doing things,

10
00:00:30,038 --> 00:00:33,601
but often still made code brittle and untestable.

11
00:00:33,601 --> 00:00:35,048
If you've ever had to, say,

12
00:00:35,048 --> 00:00:37,522
recompile code because you were moving to a different

13
00:00:37,522 --> 00:00:40,998
environment or change things like URLs or connection

14
00:00:40,998 --> 00:00:42,890
strings because of your environment,

15
00:00:42,890 --> 00:00:47,408
then you realize these are the things that we are trying to fix.

16
00:00:47,408 --> 00:00:50,970
This problem is referred to as write once,

17
00:00:50,970 --> 00:00:59,194
run anywhere and is often abbreviated with WORA or pronounced WORA.

18
00:00:59,194 --> 00:01:01,483
These are the problems that we are faced with.

19
00:01:01,483 --> 00:01:03,667
It can be a lot simpler than this too.

20
00:01:03,667 --> 00:01:07,472
You just may want the actual implementation not hard

21
00:01:07,472 --> 00:01:14,000
coded inside your application. This is what Spring's architecture is going to help us with.

