WEBVTT
1
00:00:00.000 --> 00:00:03.977
Now that we've gone through the Java configuration for Spring,

2
00:00:03.977 --> 00:00:08.188
let's talk about configuring your application using XML.

3
00:00:08.188 --> 00:00:11.115
We're going to take that sample application that we built in the previous

4
00:00:11.115 --> 00:00:14.362
modules and wire it up with XML using the Spring Framework,

5
00:00:14.362 --> 00:00:18.337
but just so you don't think that we are done with Java configuration,

6
00:00:18.337 --> 00:00:21.398
we are going to compare and contrast the XML

7
00:00:21.398 --> 00:00:23.814
configuration with the Java configuration,

8
00:00:23.814 --> 00:00:29.718
and we're going to show a couple more techniques on how to autowire your app up.

9
00:00:29.718 --> 00:00:32.002
So why would you still use XML?

10
00:00:32.002 --> 00:00:35.311
XML configuration was the first method available in Spring,

11
00:00:35.311 --> 00:00:39.234
and although it has declined in popularity over the years,

12
00:00:39.234 --> 00:00:42.650
some things, in my opinion, are still just simpler with XML.

13
00:00:42.650 --> 00:00:47.701
There is a natural separation of concerns that organically happens when

14
00:00:47.701 --> 00:00:51.889
configuration code is removed and replaced in a separate file.

15
00:00:51.889 --> 00:00:54.696
We're going to copy that sample application that we created

16
00:00:54.696 --> 00:00:58.321
in the first module and create a file called an

17
00:00:58.321 --> 00:01:00.270
applicationContext to wire up our app.

18
00:01:00.270 --> 00:01:03.040
Our file doesn't need to be named the appContext,

19
00:01:03.040 --> 00:01:06.070
it's just a standard that's kind of become associated with Spring.

20
00:01:06.070 --> 00:01:08.892
We're going to go through and wire it up in XML to help you

21
00:01:08.892 --> 00:01:14.000
better understand some of those concepts and configurations that we showed with the Java configuration.

