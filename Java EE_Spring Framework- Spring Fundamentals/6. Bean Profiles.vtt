WEBVTT
1
00:00:01.144 --> 00:00:05.553
Bean profiles were implemented later in the Spring code

2
00:00:05.553 --> 00:00:08.543
base to help you adapt to environments.

3
00:00:08.543 --> 00:00:11.921
They allow you to set up specific code that gets ran

4
00:00:11.921 --> 00:00:18.714
only in a specific environment, so we can swap out configurations at runtime.

5
00:00:18.714 --> 00:00:23.715
It's a great way for us to have effective runtime configurations.

6
00:00:23.715 --> 00:00:26.724
I'll be honest, the first time that I saw these,

7
00:00:26.724 --> 00:00:30.849
I wasn't really a fan of them because I don't like it when my

8
00:00:30.849 --> 00:00:34.515
configuration changes in environments and then it's not the same.

9
00:00:34.515 --> 00:00:38.899
I've always worked on my code base to not have that be the case.

10
00:00:38.899 --> 00:00:42.348
But when dealing with sensitive data or that type of

11
00:00:42.348 --> 00:00:45.483
information that I'm going to go pull something from a dev or

12
00:00:45.483 --> 00:00:48.035
sample database until I get into production,

13
00:00:48.035 --> 00:00:50.885
it's a great way for me to set up a profile for that.

14
00:00:50.885 --> 00:00:55.258
Let's see how we want to implement this inside of our application.

15
00:00:55.258 --> 00:00:59.450
Adding bean profiles is actually quite easy to do inside of our application.

16
00:00:59.450 --> 00:01:02.783
I'm going to go ahead and open up one of our bean definitions.

17
00:01:02.783 --> 00:01:04.903
We'll start with the speakerRepository.

18
00:01:04.903 --> 00:01:08.409
I want to go right above the class declaration and

19
00:01:08.409 --> 00:01:11.525
add in an @Profile annotation.

20
00:01:11.525 --> 00:01:15.531
And I'm going to give this a keyword of dev, and that's a word that we chose.

21
00:01:15.531 --> 00:01:17.913
It's not a keyword specific to Spring.

22
00:01:17.913 --> 00:01:19.171
This can be anything you want.

23
00:01:19.171 --> 00:01:22.275
It could be staging_42.

24
00:01:22.275 --> 00:01:24.831
It's whatever we've chose.

25
00:01:24.831 --> 00:01:29.923
We'll do @Profile dev for the HibernateSpeakerRepositoryImpl.

26
00:01:29.923 --> 00:01:34.571
And we'll open up our SpeakerServiceImpl and do the same thing here.

27
00:01:34.571 --> 00:01:41.171
So we'll say @Profile, and, again, we're going to choose dev here as well.

28
00:01:41.171 --> 00:01:46.730
And we want to go inside of our application and edit the run configuration.

29
00:01:46.730 --> 00:01:51.712
This is how we tell it to choose which profile we're going to run.

30
00:01:51.712 --> 00:01:58.891
So in the VM options, I want to do a - Dspring.profiles .active =dev.

31
00:01:58.891 --> 00:01:59.252
Now,

32
00:01:59.252 --> 00:02:02.457
don't make the mistake of putting it in the environment

33
00:02:02.457 --> 00:02:04.394
variables or in one of the other fields.

34
00:02:04.394 --> 00:02:05.458
It will not work.

35
00:02:05.458 --> 00:02:08.381
It needs to be a VM option.

36
00:02:08.381 --> 00:02:11.359
Let's click Apply and hit OK.

37
00:02:11.359 --> 00:02:15.179
And now when we run our application, it will run with a specific profile.

38
00:02:15.179 --> 00:02:16.372
You'll see that everything runs.

39
00:02:16.372 --> 00:02:17.076
Well, great.

40
00:02:17.076 --> 00:02:19.506
What happens if it didn't have a profile for that?

41
00:02:19.506 --> 00:02:21.455
Well, that bean wouldn't be available.

42
00:02:21.455 --> 00:02:24.890
So if we change this to prod, and save this,

43
00:02:24.890 --> 00:02:26.715
and run it again,

44
00:02:26.715 --> 00:02:30.580
we'll get a null pointer exception because it can't find that bean.

45
00:02:30.580 --> 00:02:34.428
So you see how those beans will allow specific code to only be

46
00:02:34.428 --> 00:02:37.728
ran in specific environmental configurations.

47
00:02:37.728 --> 00:02:40.127
I'm going to change this back to dev.

48
00:02:40.127 --> 00:02:42.635
And I want to show you that this HibernateSpeakerRepository really is

49
00:02:42.635 --> 00:02:45.695
a good example of where you'd want this profile.

50
00:02:45.695 --> 00:02:47.651
We have hard-coded values in here that eventually

51
00:02:47.651 --> 00:02:51.404
we want to pull from a database, but we don't have a database set up.

52
00:02:51.404 --> 00:02:54.239
So, I want to set this up to only run in dev.

53
00:02:54.239 --> 00:02:57.959
It's kind of like a to do statement if you use that in your IDE or in

54
00:02:57.959 --> 00:02:59.837
some of the other tools that are out there saying,

55
00:02:59.837 --> 00:03:01.575
hey, I want to come back and fix this.

56
00:03:01.575 --> 00:03:03.520
Well, by marking this as dev,

57
00:03:03.520 --> 00:03:10.000
it's not going to get ran or accidentally deployed into production where you break things.

