0
1
00:00:00,430 --> 00:00:06,270
Well first question you should be asking yourself is what is the use of using my app for?
1

2
00:00:06,300 --> 00:00:09,390
What is the core functionality of my app?
2

3
00:00:09,420 --> 00:00:13,430
What is it that I have to get right in order for my app to be used?
3

4
00:00:13,440 --> 00:00:19,950
So show you what happens when a company doesn't think about this question or doesn't know the answer
4

5
00:00:19,950 --> 00:00:21,180
to this question.
5

6
00:00:21,420 --> 00:00:29,040
So there was a app called SitOrSquat that came out of the Bay Area a few years ago and it had a very
6

7
00:00:29,040 --> 00:00:30,270
simple concept.
7

8
00:00:30,300 --> 00:00:36,000
It was an app to help you find the nearest bathroom and it mapped out a whole bunch of bathrooms across
8

9
00:00:36,000 --> 00:00:41,410
the city and allows you to geolocate which is the nearest one.
9

10
00:00:41,430 --> 00:00:48,200
Now that was all very well and good until it was bought by Charmin the toilet paper brand.
10

11
00:00:48,420 --> 00:00:53,220
And after some corporate adjustments this is the result.
11

12
00:00:53,250 --> 00:00:58,480
And I think you'll see that the user experience is less than optimal.
12

13
00:00:58,740 --> 00:01:05,100
So I want you to imagine that you're in the situation where you are desperate for the bathroom.
13

14
00:01:05,100 --> 00:01:06,890
You really need to pee.
14

15
00:01:07,020 --> 00:01:13,020
Now with this mindset you download the app called SitOrSquat promising you to find your closest toilet
15

16
00:01:13,380 --> 00:01:20,280
and the first screen that you see after the download is a terms and conditions or a EULA and use a license
16

17
00:01:20,280 --> 00:01:21,550
agreement screen.
17

18
00:01:21,630 --> 00:01:24,340
And remember this is not something that's enforced.
18

19
00:01:24,360 --> 00:01:30,990
You don't have to show this in the first instance to the user. Both AppStore say that by downloading the
19

20
00:01:30,990 --> 00:01:36,810
app the user is implicitly agreeing to the end user license agreement and as long as you have this available
20

21
00:01:36,870 --> 00:01:43,470
in some menu somewhere within your app then it is all good and legal. But Sitorsquat decided that
21

22
00:01:43,470 --> 00:01:47,510
this is the first green that you should have to read and accept.
22

23
00:01:47,520 --> 00:01:55,320
Next they ask you for your birthday and they ask it in a really condescending way by saying "We need
23

24
00:01:55,320 --> 00:01:58,280
to confirm that you have been potty trained"
24

25
00:01:58,380 --> 00:01:58,840
Right.
25

26
00:01:58,860 --> 00:02:08,250
So I'm desperate for the loo and I am going to use this really really awkward user interface and find
26

27
00:02:08,340 --> 00:02:09,850
my year of birth.
27

28
00:02:09,930 --> 00:02:15,870
You know, imagine if you're 40 years old and you have to click this button almost 30 times. A, the
28

29
00:02:15,870 --> 00:02:22,190
data is going to be pretty much invalid because nobody is going to bother to give an accurate entry.
29

30
00:02:22,200 --> 00:02:26,880
The next thing is that you're going to annoy the hell out of any users you have
30

31
00:02:26,880 --> 00:02:28,340
left at this stage.
31

32
00:02:28,630 --> 00:02:28,940
OK.
32

33
00:02:28,950 --> 00:02:36,800
So next you say "set" which is inherently confusing and it doesn't make any sense what's set what.
33

34
00:02:36,810 --> 00:02:43,020
And afterwards you could get a pop up that says "Unfortunately you did not meet our requirements to use
34

35
00:02:43,020 --> 00:02:44,100
SitOrSquat."
35

36
00:02:44,100 --> 00:02:47,000
What exactly are the requirements to finding a toilet?
36

37
00:02:47,040 --> 00:02:50,960
Because I'm seven years old and I'm not allowed to find the toilet?
37

38
00:02:50,970 --> 00:02:56,400
I mean it's not like I'm looking for the nearest pub. So this is stride what two or three by now. And
38

39
00:02:56,400 --> 00:03:02,100
then there's another five screens that you have to go through before they will find you the nearest
39

40
00:03:02,190 --> 00:03:03,240
bathroom.
40

41
00:03:03,240 --> 00:03:09,990
So if at this stage you haven't peed yourself yet, you will probably from hysterical laughter at the
41

42
00:03:09,990 --> 00:03:17,160
fact that this company thought that people would want to login with Facebook and share and review bathrooms
42

43
00:03:17,340 --> 00:03:20,490
all across the world.
43

44
00:03:20,760 --> 00:03:22,080
Yeah I don't think so.
44

45
00:03:22,080 --> 00:03:26,100
So this is a really really bad example.
45

46
00:03:26,100 --> 00:03:29,760
This is what we call an anti-pattern in user experience design.
46

47
00:03:29,910 --> 00:03:32,240
Do not make your apps like this.
47

48
00:03:32,250 --> 00:03:37,060
This is classically a company or a team who haven't thought about this question.
48

49
00:03:37,170 --> 00:03:45,330
What is the main thing that my users want to achieve with my app? If that main task is just finding a
49

50
00:03:45,330 --> 00:03:46,390
bathroom
50

51
00:03:46,440 --> 00:03:54,960
then you should make the process of completing that action as friction free as in as few steps as possible.
51

52
00:03:55,080 --> 00:03:59,920
And then afterwards you can think about you know asking them incrementally for more things.
52

53
00:03:59,940 --> 00:04:06,900
But the first thing to think about is knowing what is the core functionality of your app and trying
53

54
00:04:06,900 --> 00:04:11,720
to minimize the number of steps that it takes to achieve it within your app.
54

55
00:04:11,730 --> 00:04:20,340
Now this is a good example of how you should do it and this is the app for YPlan which is a event planning
55

56
00:04:20,340 --> 00:04:21,290
app essentially.
56

57
00:04:21,300 --> 00:04:25,780
So it's basically an app for people who are bad at planning but you want to do cool things. So you head
57

58
00:04:25,780 --> 00:04:31,710
into the app and the first screen that you see is "GO TODAY" "GO TOMORROW" "THIS WEEKEND".
58

59
00:04:31,710 --> 00:04:35,850
And that pretty much covers the end goal of 90 percent of your users.
59

60
00:04:35,850 --> 00:04:39,890
So you tap on go today and you can already start seeing events
60

61
00:04:39,930 --> 00:04:45,200
and within two taps you could be done and you could have booked your event using this app.
61

62
00:04:45,210 --> 00:04:50,580
So when you're mapping out a user's journey through your app which you're going to learn about in a
62

63
00:04:50,580 --> 00:04:57,120
later module in the hands on design process lessons, essentially we're thinking about what is the user's
63

64
00:04:57,120 --> 00:05:03,450
journey through the app and how can you minimize the steps that it takes for them to achieve the main
64

65
00:05:03,450 --> 00:05:04,450
goal.
65

66
00:05:04,590 --> 00:05:10,290
Now if you do one thing really well, then everything else is just an added bonus.
66

67
00:05:10,290 --> 00:05:15,360
So this is the right way to go and think about this question whenever you're making your app.
