0
1
00:00:00,890 --> 00:00:04,010
It's time for yet another Swift Deep Dive.
1

2
00:00:04,100 --> 00:00:08,510
And in this Deep Dive, we're going to look at Variables.
2

3
00:00:08,630 --> 00:00:16,100
So essentially, we've seen that variables are simply a way of giving a name to a piece of data, so that
3

4
00:00:16,100 --> 00:00:18,950
we can reference it in our code later on.
4

5
00:00:18,950 --> 00:00:24,930
We did that for our IBoutlets as well as our dice number variable which we created from scratch.
5

6
00:00:25,040 --> 00:00:27,800
And the problem that it solves is really simple.
6

7
00:00:27,830 --> 00:00:32,780
Let's say that if I was to give you a phone number to remember and I give it to you written down on
7

8
00:00:32,780 --> 00:00:34,170
a piece of paper,
8

9
00:00:34,220 --> 00:00:41,780
now if all I had on there was just a number, I know what my drawers looked like, and if I have a single
9

10
00:00:41,780 --> 00:00:43,690
piece of paper floating around in there,
10

11
00:00:44,330 --> 00:00:47,480
after not even a day I'll forget what that number was all about.
11

12
00:00:48,290 --> 00:00:50,420
So how can we make this better?
12

13
00:00:50,570 --> 00:00:53,960
How can we remember what this piece of data is about?
13

14
00:00:53,960 --> 00:01:00,000
We could associate that data with an actual label and give it a name.
14

15
00:01:00,050 --> 00:01:04,910
So we're essentially taking our data and labeling it with a name.
15

16
00:01:04,910 --> 00:01:10,670
Well this is essentially a variable because if we needed that piece of data in the future, we can simply
16

17
00:01:10,670 --> 00:01:13,820
refer to the label name, which is Angela,
17

18
00:01:13,820 --> 00:01:16,680
and it will be able to retrieve that piece of data.
18

19
00:01:16,730 --> 00:01:20,290
So we have to write a little bit more if we're creating this in code.
19

20
00:01:20,300 --> 00:01:27,740
We have to add a var keyword which tells the computer that we're creating a new variable, and then we
20

21
00:01:27,740 --> 00:01:33,890
add an equal sign to tell the computer that on the right-hand side of the equals sign is the value that
21

22
00:01:33,890 --> 00:01:36,130
we're assigning to that particular variable.
22

23
00:01:36,170 --> 00:01:41,400
So you can essentially view creating variables similar to creating just a box,
23

24
00:01:41,420 --> 00:01:41,860
right?
24

25
00:01:41,900 --> 00:01:47,480
And you whack on a label which we'll be able to identify what's inside the box and you put some data
25

26
00:01:47,510 --> 00:01:48,650
inside the box.
26

27
00:01:48,650 --> 00:01:55,640
And now you can store it somewhere on a shelf ready for retrieval. And by looking at that label, you'll
27

28
00:01:55,640 --> 00:01:57,110
know what's contained inside.
28

29
00:01:57,110 --> 00:02:02,830
So if you need the data that's inside, you simply find the right box with the right label.
29

30
00:02:02,930 --> 00:02:06,270
Now variables were made to be their heat,
30

31
00:02:06,290 --> 00:02:06,560
right?
31

32
00:02:06,560 --> 00:02:07,830
That's the whole point.
32

33
00:02:07,850 --> 00:02:13,660
So we can simply remove the old value and put in a new one if we wanted to.
33

34
00:02:13,820 --> 00:02:22,610
And now that label name Angela is associated with a completely different piece of data. In the resources
34

35
00:02:22,610 --> 00:02:23,450
for this lesson,
35

36
00:02:23,480 --> 00:02:28,590
you'll find a download link for the Swift Cheat Sheet that we've created for you.
36

37
00:02:28,790 --> 00:02:31,210
And this is just a handy reference guide.
37

38
00:02:31,340 --> 00:02:36,350
A lot of students like to print it out to have it beside them when they're learning and it's a way for
38

39
00:02:36,350 --> 00:02:41,840
you to be able to quickly refer to the grammar of the Swift programming language.
39

40
00:02:41,840 --> 00:02:47,000
So just as an English we have our commerce and our full stops and they have meaning in the sentence
40

41
00:02:47,630 --> 00:02:50,520
in Swift and other programming languages.
41

42
00:02:50,600 --> 00:02:57,320
We have certain keywords like the var keyword which is used for creating variables or the equal sign
42

43
00:02:57,410 --> 00:03:01,720
which is used for assigning a value to a variable.
43

44
00:03:01,790 --> 00:03:07,400
And this is a handy guide that you can always flip back to when you're completing challenges and when
44

45
00:03:07,400 --> 00:03:09,080
you're trying to write your own code.
45

46
00:03:09,890 --> 00:03:15,320
So the way that we create a variable is we start out with the var keyword, then we give our variable
46

47
00:03:15,380 --> 00:03:18,720
a name, and then we assign it a value.
47

48
00:03:18,770 --> 00:03:19,970
That's the theory of it.
48

49
00:03:20,120 --> 00:03:24,330
But let's head into a playground and actually create some code from scratch.
49

50
00:03:24,410 --> 00:03:31,460
So let's say that we had a variable code a and we gave it a number, let's say, 5, and then let's create
50

51
00:03:31,460 --> 00:03:36,400
another variable code b and let's give it a value of 8.
51

52
00:03:36,410 --> 00:03:40,170
Now, if I decided to print these values,
52

53
00:03:40,190 --> 00:03:42,500
so print a,
53

54
00:03:42,740 --> 00:03:45,080
and then print B.
54

55
00:03:45,080 --> 00:03:53,150
Now, notice, in this case, I don't have those quote marks around the a and b because if I had that, then
55

56
00:03:53,150 --> 00:04:00,330
it would simply interpret this as a command to simply print the letter or the string a.
56

57
00:04:00,410 --> 00:04:01,700
And that's what you see here.
57

58
00:04:01,760 --> 00:04:07,730
But if I actually want the value of my variable a, then I have to make sure that I'm putting it in as
58

59
00:04:07,730 --> 00:04:13,420
a variable name a and b, rather than anything with quotation marks in it.
59

60
00:04:14,300 --> 00:04:20,900
I can make this a little bit fancier by adding some string interpolation if you remember. The value of
60

61
00:04:20,960 --> 00:04:23,450
a is,
61

62
00:04:23,450 --> 00:04:30,060
and then I can add that backslash and put my variable inside some parentheses.
62

63
00:04:30,170 --> 00:04:31,550
And now I get printed,
63

64
00:04:31,580 --> 00:04:33,960
the value of a is 5.
64

65
00:04:34,160 --> 00:04:42,920
And I can do the same thing for b. The value of B is B. And let's just make sure we're not missing that
65

66
00:04:42,920 --> 00:04:45,160
final quotation mark.
66

67
00:04:45,230 --> 00:04:49,910
And now we get the value of a is 5, the value of b is 8.
67

68
00:04:49,910 --> 00:04:55,580
So now that we've covered the theory of Swift Variables, let's get a little bit more practice with Swift
68

69
00:04:55,580 --> 00:04:58,160
programming through a coding challenge.
69

70
00:04:58,220 --> 00:05:04,000
Now, as always, the challenges are clearly optional, but solving them will help cement the concepts that
70

71
00:05:04,000 --> 00:05:07,330
we've covered and make you a stronger programmer.
71

72
00:05:07,330 --> 00:05:11,390
Also figuring out and solving these little puzzles is gonna be a lot of fun.
72

73
00:05:11,410 --> 00:05:16,180
So I've collated all of this with programming challenges on a website called Repl.it
73

74
00:05:16,210 --> 00:05:19,560
You'll find the link under the student resources as always.
74

75
00:05:19,630 --> 00:05:25,540
So just click on the Interactive Programming Challenges link. Clicking link takes you to the special
75

76
00:05:25,540 --> 00:05:27,660
Repl.it classroom I've set up for you.
76

77
00:05:27,850 --> 00:05:33,100
And the big advantage of using Repl.it for these challenges is that you can get your code checked
77

78
00:05:33,520 --> 00:05:36,520
and look at my model solution.
78

79
00:05:36,520 --> 00:05:42,010
Once you've created your account, then head back into our Swift classroom page.
79

80
00:05:42,010 --> 00:05:47,200
Now, here you can browse the assignments, but you won't be able to take them until you click on this button
80

81
00:05:47,230 --> 00:05:49,480
which says Take and Learn.
81

82
00:05:49,480 --> 00:05:53,860
Now, once you've done that, our challenges are added to your account
82

83
00:05:53,860 --> 00:05:55,720
as a student classroom.
83

84
00:05:55,960 --> 00:06:00,790
So, if you click on the student link, you'll be able to see all the classrooms that you're signed up
84

85
00:06:00,790 --> 00:06:01,600
to
85

86
00:06:01,600 --> 00:06:05,920
and when you click on it, you'll be able to see or the assignments that you can take.
86

87
00:06:05,950 --> 00:06:11,890
So the assignment that we're going to take today is the variables assignment. For this challenge,
87

88
00:06:11,890 --> 00:06:19,030
I've got the starting code right here and I've got a detailed description on the right for what you
88

89
00:06:19,030 --> 00:06:21,520
need to do to complete the challenge.
89

90
00:06:21,550 --> 00:06:28,660
So what's the challenge? Without changing these lines or changing these lines,
90

91
00:06:28,720 --> 00:06:39,280
can you swap the values of a and b, so that when these two lines execute, it will say the value of a
91

92
00:06:39,730 --> 00:06:44,350
is 8 and the value of b is 5.
92

93
00:06:44,380 --> 00:06:48,980
But here's the catch, you can't type a single number.
93

94
00:06:49,300 --> 00:06:54,540
So in your solution, you're not allowed to type a 5 or an 8.
94

95
00:06:54,550 --> 00:07:02,020
You have to figure out how to switch these two without simply assigning it with a different number. Because
95

96
00:07:02,020 --> 00:07:08,810
the easy way is to say, a, well, now equals 8, and b now equals 5.
96

97
00:07:08,890 --> 00:07:13,360
And I will get that a is equal to 8 and B is equal to 5
97

98
00:07:13,360 --> 00:07:17,860
and I've switched those two values around, but I have used a number.
98

99
00:07:17,860 --> 00:07:23,170
So for this programming challenge, we're going to be using code to achieve this,
99

100
00:07:23,350 --> 00:07:28,450
and you have all of the tools and knowledge to be able to do this, but you might have to think a little
100

101
00:07:28,450 --> 00:07:29,930
bit outside of the box.
101

102
00:07:29,950 --> 00:07:35,470
So this is a really, really common interview question that you will get as a programmer.
102

103
00:07:35,470 --> 00:07:41,920
And it just tests you a little bit in terms of your lateral thinking and whether if you understand variables
103

104
00:07:42,040 --> 00:07:42,670
well enough.
104

105
00:07:43,030 --> 00:07:51,460
Once you've completed your solution, you can click this run button to run it down here and it works just
105

106
00:07:51,460 --> 00:07:53,740
like as with playground.
106

107
00:07:53,740 --> 00:07:59,440
Now once you're happy with the output that you're seeing, then you can go ahead and click on the Submit
107

108
00:07:59,440 --> 00:08:06,100
button to submit the assignments. I'll give you a few seconds to pause a video before I show you how
108

109
00:08:06,100 --> 00:08:09,010
to submit the assignment and view the model solution.
109

110
00:08:12,300 --> 00:08:12,550
All right.
110

111
00:08:12,550 --> 00:08:13,120
Ready?
111

112
00:08:13,120 --> 00:08:17,250
Did you have a go at the assignment and did you manage to get it right?
112

113
00:08:17,260 --> 00:08:22,460
Let me show you the solution and how to submit your assignment and check your code.
113

114
00:08:22,510 --> 00:08:27,400
Now, the trick to solving this puzzle is to simply create another variable.
114

115
00:08:27,400 --> 00:08:31,010
So let's go ahead and replace this line with our code.
115

116
00:08:31,030 --> 00:08:37,880
I'm going to create another variable code c and I'm going to set c to equal the current value of a.
116

117
00:08:38,110 --> 00:08:43,360
So at this point, c is going to be equal to 5.
117

118
00:08:43,360 --> 00:08:48,300
Now, next, we can set a equal to b.
118

119
00:08:48,310 --> 00:08:52,340
Now, at this point a is now equal to 8.
119

120
00:08:52,420 --> 00:09:01,820
And finally, we can set B to equal the value of what's held inside c, and so b now equals 5.
120

121
00:09:02,020 --> 00:09:09,160
And within our three steps if we run our code, you'll see that a is now 8 and B is now 5.
121

122
00:09:09,160 --> 00:09:15,970
We've managed to switch these two values around in only three lines of code without needing to write
122

123
00:09:16,420 --> 00:09:22,430
any numbers, such as a = 8 or b = 5.
123

124
00:09:22,450 --> 00:09:31,510
So now that I'm happy with my solution, I can go ahead and click on submit and you can see that I've
124

125
00:09:31,510 --> 00:09:39,260
passed all the tests, I've managed to switch the values correctly. Now if I'd gotten it wrong,
125

126
00:09:39,300 --> 00:09:44,410
now let's say that my code was not yet working and I wasn't getting the right outputs,
126

127
00:09:44,550 --> 00:09:51,930
if I try to click submit now, you'll see that I get a error and that the output is not matching what
127

128
00:09:51,930 --> 00:09:53,280
it should be.
128

129
00:09:53,280 --> 00:10:01,290
So at this point, you can click on "What's wrong?" and you can see the problem which is that the teacher
129

130
00:10:01,290 --> 00:10:08,130
expected a = 8, b = 5, but your output at the moment has a difference.
130

131
00:10:08,130 --> 00:10:14,100
So then we can click Keep trying and make sure we've typed the code that will pass all our tests.
131

132
00:10:14,100 --> 00:10:22,320
We've already checked it using our run button and we now click submit, our tests all passed, and we can finally
132

133
00:10:22,320 --> 00:10:24,160
click on submit.
133

134
00:10:24,450 --> 00:10:31,170
At this point, we can actually click on a link that shows up to see the model solution that we provided
134

135
00:10:31,170 --> 00:10:34,900
for you. So we can go ahead and click OK.
135

136
00:10:35,040 --> 00:10:43,390
And it will show us the model solution right here. So you can only see the model solution after you submit
136

137
00:10:43,390 --> 00:10:49,690
your assignment and you can click on the back to submission button to see your own code.
137

138
00:10:49,690 --> 00:10:52,640
So this is how Repl.it works.
138

139
00:10:52,810 --> 00:10:58,090
And it allows us to show you the model solution as well as test the code that you've got
139

140
00:10:58,180 --> 00:11:04,480
and for you to complete these challenges and improve your programming skills. I'll see you on the next
140

141
00:11:04,480 --> 00:11:07,360
lesson. We will learn more about Swift Arrays.
