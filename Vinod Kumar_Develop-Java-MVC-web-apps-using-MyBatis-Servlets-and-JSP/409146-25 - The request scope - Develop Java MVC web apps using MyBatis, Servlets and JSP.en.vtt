WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.060
in this lecture,

00:00:01.060 --> 00:00:05.950
let's have a look at different scopes that are available in a separate application.

00:00:05.950 --> 00:00:07.630
Consider this scenario.

00:00:07.630 --> 00:00:08.180
Yes.

00:00:08.180 --> 00:00:12.090
One is toe are to sell its The client makes a request.

00:00:12.090 --> 00:00:15.240
Toe s one on the request is reserved by Tomcat.

00:00:15.240 --> 00:00:19.130
This is where Tomcat creates two objects off separately,

00:00:19.130 --> 00:00:19.600
questions,

00:00:19.600 --> 00:00:25.340
direct response types and then passes that as arguments to the survey's function off your

00:00:25.340 --> 00:00:25.650
cell,

00:00:25.650 --> 00:00:26.330
it s one.

00:00:26.330 --> 00:00:27.120
No,

00:00:27.120 --> 00:00:30.950
the service function can be Do gate or do post or other variants.

00:00:30.950 --> 00:00:33.270
All of them have the same signature,

00:00:33.270 --> 00:00:36.720
and they will receive the request and response created by Tom.

00:00:36.720 --> 00:00:41.550
Get Imagine it's when it's supposed to do some business logic making use of the data sent

00:00:41.550 --> 00:00:45.730
by the client on all those data is available in the request object.

00:00:45.730 --> 00:00:49.650
It's one perform some logic and then arise at some result.

00:00:49.650 --> 00:00:50.310
Now,

00:00:50.310 --> 00:00:52.480
that result is supposed to be shared.

00:00:52.480 --> 00:00:58.830
Toe s to and s two will now take the result produced by S one and it's supposed to farmer

00:00:58.830 --> 00:01:02.170
that into an HTML and then give the whole put back to the client.

00:01:02.170 --> 00:01:03.240
In practice,

00:01:03.240 --> 00:01:05.370
this s two would be a jsp.

00:01:05.370 --> 00:01:08.240
But for the time being let's assume it's to is a separate.

00:01:08.240 --> 00:01:13.080
So the question is we know how to forward the control from S one to s too.

00:01:13.080 --> 00:01:14.960
So that is using the request dispatcher.

00:01:14.960 --> 00:01:16.660
We discuss that in the previous lectures.

00:01:16.660 --> 00:01:17.920
However,

00:01:17.920 --> 00:01:21.420
we also want to store the result calculated in S one.

00:01:21.420 --> 00:01:24.350
So that s two has access to the same thing.

00:01:24.350 --> 00:01:24.970
Now,

00:01:24.970 --> 00:01:27.630
this is where we talk about scopes.

00:01:27.630 --> 00:01:30.200
On request is one such scope.

00:01:30.200 --> 00:01:31.340
So there are three scopes.

00:01:31.340 --> 00:01:34.830
Request session on application requested.

00:01:34.830 --> 00:01:36.910
A scope with minimum lifetime.

00:01:36.910 --> 00:01:43.210
The request is created when Dunkirk This is the actual http request from the client and the

00:01:43.210 --> 00:01:48.550
request scope is either destroy or recycle when the responses given back to the client.

00:01:48.550 --> 00:01:54.670
So the way you can store some data in the request is by using the function called ST

00:01:54.670 --> 00:01:55.420
attribute.

00:01:55.420 --> 00:02:01.110
And in S two we can retrieve the data stored in request object by calling the function

00:02:01.110 --> 00:02:03.550
called request our get attribute.

00:02:03.550 --> 00:02:05.330
There are other functions.

00:02:05.330 --> 00:02:06.880
Get attribute names.

00:02:06.880 --> 00:02:09.970
Remove a tribute to understand how this works.

00:02:09.970 --> 00:02:11.320
Let's take an example.

00:02:11.320 --> 00:02:14.980
Let's create an HTML file under our Web APP folder.

00:02:14.980 --> 00:02:18.360
So that's under SRC Main web.

00:02:18.360 --> 00:02:20.450
So let's right click on the NBA.

00:02:20.450 --> 00:02:21.580
New.

00:02:21.580 --> 00:02:22.700
It's Demel fine,

00:02:22.700 --> 00:02:27.240
and it's given name calculator dot It's demon.

00:02:27.240 --> 00:02:31.940
Let's change the title and let's give a hitch one.

00:02:31.940 --> 00:02:34.250
Let's call it a simple calculator.

00:02:34.250 --> 00:02:36.170
Let's add here.

00:02:36.170 --> 00:02:39.730
A phone on action equals toe.

00:02:39.730 --> 00:02:41.500
Let's call it as simple.

00:02:41.500 --> 00:02:43.400
Dash calculator.

00:02:43.400 --> 00:02:47.350
We can also say method equals toe Get our post.

00:02:47.350 --> 00:02:49.040
Get is the default.

00:02:49.040 --> 00:02:50.820
Let's give two text boxes.

00:02:50.820 --> 00:02:53.350
Input type equals toe text.

00:02:53.350 --> 00:02:55.080
Name is important.

00:02:55.080 --> 00:02:56.760
Let's give it us numb one.

00:02:56.760 --> 00:03:04.970
And let's also give a placeholder saying Enter number one will also give a break and I'm

00:03:04.970 --> 00:03:08.570
gonna copy this and pace because I want exactly same textbooks part.

00:03:08.570 --> 00:03:09.370
This is none,

00:03:09.370 --> 00:03:09.750
too.

00:03:09.750 --> 00:03:11.550
On Endor number two,

00:03:11.550 --> 00:03:16.020
Let's out four buttons for four different operations.

00:03:16.020 --> 00:03:19.450
Let's say input type equals toe submit.

00:03:19.450 --> 00:03:21.070
Name equals tow.

00:03:21.070 --> 00:03:24.370
Operator value equals toe add.

00:03:24.370 --> 00:03:29.410
I'm gonna copy and paste three more times for all other buttons.

00:03:29.410 --> 00:03:31.150
I'm gonna take your subtract.

00:03:31.150 --> 00:03:40.100
Let's call this as multiplying and divide when you click on any off these buttons.

00:03:40.100 --> 00:03:42.390
After filling in these two text boxes,

00:03:42.390 --> 00:03:44.330
the farm get submitted toe.

00:03:44.330 --> 00:03:45.170
This resource,

00:03:45.170 --> 00:03:47.800
which is supposed to be a separate on the some road,

00:03:47.800 --> 00:03:53.120
will have access toe three requests perimeters on what one is number one with the value

00:03:53.120 --> 00:03:56.620
entered in the text box number two and its corresponding value.

00:03:56.620 --> 00:04:02.990
An operator is the third perimeter with the value off the person that you clicked.

00:04:02.990 --> 00:04:05.590
We don't have a sublet corresponding to this faction.

00:04:05.590 --> 00:04:07.590
Let's create one That's right.

00:04:07.590 --> 00:04:09.090
Click on corner,

00:04:09.090 --> 00:04:12.750
been ordered Web package and then the new class.

00:04:12.750 --> 00:04:17.450
I'm gonna call this as simple calculator Separate.

00:04:17.450 --> 00:04:18.360
Also,

00:04:18.360 --> 00:04:21.820
our super class as http sublet,

00:04:21.820 --> 00:04:28.450
I can press control space over here and you'll see that there is a http sublet as a class

00:04:28.450 --> 00:04:30.530
and then click on finish toe.

00:04:30.530 --> 00:04:33.510
Get a default template over here.

00:04:33.510 --> 00:04:35.380
And as in the previous cases,

00:04:35.380 --> 00:04:38.560
let's also are serial Wash January The Default one.

00:04:38.560 --> 00:04:42.420
Let's get off this comment and also overrate the method.

00:04:42.420 --> 00:04:47.100
Do get because we are submitting the form using the get method.

00:04:47.100 --> 00:04:48.150
So let's go here.

00:04:48.150 --> 00:04:51.480
That's pest control space and start typing D o g.

00:04:51.480 --> 00:04:54.010
Any good Do get function signature.

00:04:54.010 --> 00:04:58.590
The barometer names have come as Arctic you on our DSP.

00:04:58.590 --> 00:05:02.050
So let's get off this comment and the super or do get.

00:05:02.050 --> 00:05:05.990
And this is where I have toe receive all those three parameters.

00:05:05.990 --> 00:05:12.060
Let's assume that this particular sunlit is only supposed to generate the actual reserve

00:05:12.060 --> 00:05:15.180
based on whether the user has entered proper numbers.

00:05:15.180 --> 00:05:20.370
What is the operator that the user selected but not responsible for producing the output of

00:05:20.370 --> 00:05:21.370
the user,

00:05:21.370 --> 00:05:24.160
but for producing the output back to the browser?

00:05:24.160 --> 00:05:25.950
Let's create another separate.

00:05:25.950 --> 00:05:28.420
So we calculated the result over here.

00:05:28.420 --> 00:05:33.020
Forward the request toe the next Osama it because we want toe.

00:05:33.020 --> 00:05:35.190
Understand how the microscope works.

00:05:35.190 --> 00:05:37.140
Let's full screen the editor.

00:05:37.140 --> 00:05:38.320
First,

00:05:38.320 --> 00:05:42.280
let's declare couple of variables to represent the request perimeters.

00:05:42.280 --> 00:05:43.320
So I'm going to say here,

00:05:43.320 --> 00:05:46.080
string input one equals toe.

00:05:46.080 --> 00:05:48.950
Request our get perimeter off numb one.

00:05:48.950 --> 00:05:52.760
The same thing we need for 2nd 1 Also solid,

00:05:52.760 --> 00:05:59.890
solid us input to on That's numb to the 3rd 1 Let's call it US potpie for operator.

00:05:59.890 --> 00:06:03.590
But remember the buttons Name is operators.

00:06:03.590 --> 00:06:06.630
I mean a copy and paste the same thing for big press perimeter.

00:06:06.630 --> 00:06:13.050
So we have received three parameters provided if you are submitting the form,

00:06:13.050 --> 00:06:16.830
but if the user has visited the summit directly,

00:06:16.830 --> 00:06:18.790
then this will be no.

00:06:18.790 --> 00:06:22.850
So if any one of them is now I want the user to be redirected.

00:06:22.850 --> 00:06:24.650
Toe the calculator dot html.

00:06:24.650 --> 00:06:29.010
So I'm gonna say you're if input one equals toe.

00:06:29.010 --> 00:06:31.550
None are input to equals.

00:06:31.550 --> 00:06:34.270
Two no r o p equals to know.

00:06:34.270 --> 00:06:36.390
Then we will say response.

00:06:36.390 --> 00:06:42.020
Don't send redirect toe dot slash calculator dot html.

00:06:42.020 --> 00:06:42.890
Of course,

00:06:42.890 --> 00:06:47.220
we also have to say everything because if this is successful,

00:06:47.220 --> 00:06:50.490
we don't want to do the rest of the court that we're gonna right over here.

00:06:50.490 --> 00:06:53.250
But if the inputs are available,

00:06:53.250 --> 00:06:58.320
that's at a try cash because they input maybe non numeric values also.

00:06:58.320 --> 00:07:01.590
So I'm gonna say Try catch and inside the try block,

00:07:01.590 --> 00:07:06.010
let's create a couple of variables representing the new medical washing off input one.

00:07:06.010 --> 00:07:06.750
And in Porto,

00:07:06.750 --> 00:07:10.650
that's called a double D one equals toe double dark,

00:07:10.650 --> 00:07:13.210
possible off input one.

00:07:13.210 --> 00:07:14.350
Likewise,

00:07:14.350 --> 00:07:20.310
D two is a second number represented by this input to and in case,

00:07:20.310 --> 00:07:20.870
if any,

00:07:20.870 --> 00:07:25.400
off this to cause a problem because the user didn't enter the numeric value that will throw

00:07:25.400 --> 00:07:26.140
an exception,

00:07:26.140 --> 00:07:27.640
and we're going to go over here.

00:07:27.640 --> 00:07:30.990
Let's declare another variable to represent the result.

00:07:30.990 --> 00:07:36.270
That's college best result itself that's assigned a default value of zero although this

00:07:36.270 --> 00:07:39.950
value gets changed because we are now calculating based on the operator.

00:07:39.950 --> 00:07:41.040
So I'm gonna say here,

00:07:41.040 --> 00:07:42.150
switch,

00:07:42.150 --> 00:07:48.210
potpie and switch can be used with string from Java on 0.7 onwards.

00:07:48.210 --> 00:07:55.650
So I'm gonna say your case on So I have to say result equals toe d one plus D two on,

00:07:55.650 --> 00:07:57.320
then a break statement.

00:07:57.320 --> 00:08:00.390
I'm going to copy this and paste it three more times.

00:08:00.390 --> 00:08:02.090
One for each of them.

00:08:02.090 --> 00:08:08.030
Someone select your subtract and the result is gonna be obviously minus d two d one minus.

00:08:08.030 --> 00:08:17.160
Ditto on this is gonna be multiplying on this is the gastric or star on one last is divide

00:08:17.160 --> 00:08:17.160
.

00:08:17.160 --> 00:08:21.770
Result is d one divided by D to Of course,

00:08:21.770 --> 00:08:23.730
I don't need a break because of the last one.

00:08:23.730 --> 00:08:28.360
But let's still give that in case if the operator is not one off them,

00:08:28.360 --> 00:08:30.340
then I can throw an exception.

00:08:30.340 --> 00:08:37.340
So I'd say your default throw new Probably I can say exception itself and then say your

00:08:37.340 --> 00:08:39.250
invalid operated.

00:08:39.250 --> 00:08:44.280
Now this only happens if you are not coming to this particular separate.

00:08:44.280 --> 00:08:44.940
Why other?

00:08:44.940 --> 00:08:45.850
It's female form,

00:08:45.850 --> 00:08:50.760
but you're typing directly and are disbar saying operator equals toe explicit,

00:08:50.760 --> 00:08:55.770
since an exception is thrown in here and then we're catching Whatever the action that we

00:08:55.770 --> 00:08:58.320
take here will be the action for that as well,

00:08:58.320 --> 00:09:01.740
which is nothing but redirecting to the calculator.

00:09:01.740 --> 00:09:02.230
HTM.

00:09:02.230 --> 00:09:04.800
So once we got our result,

00:09:04.800 --> 00:09:10.850
let's store that in the request cope and then forward that toe another solid toe.

00:09:10.850 --> 00:09:11.660
Print the theme.

00:09:11.660 --> 00:09:12.980
So let's create here.

00:09:12.980 --> 00:09:14.630
A request dispatcher,

00:09:14.630 --> 00:09:19.930
Let's say already equals toe request dot Get request dispatcher.

00:09:19.930 --> 00:09:28.180
Let's set apart here is called Bring to Dash Result that is the Ural off our sell it which

00:09:28.180 --> 00:09:29.670
is supposed to print the result.

00:09:29.670 --> 00:09:33.880
Let's also press command one or control one on Windows Toe auto,

00:09:33.880 --> 00:09:34.980
gender that variable.

00:09:34.980 --> 00:09:42.850
So we got that Ali on will simply say already dot forward request on response and notice.

00:09:42.850 --> 00:09:45.170
Whatever the request we received here,

00:09:45.170 --> 00:09:46.750
which is created by Tomcat,

00:09:46.750 --> 00:09:49.190
is the same thing that we're passing over here.

00:09:49.190 --> 00:09:52.400
Which means if I store something in the request,

00:09:52.400 --> 00:09:55.710
the print result also will have access to the same thing.

00:09:55.710 --> 00:09:57.260
So that's the whole idea here.

00:09:57.260 --> 00:10:03.080
So we called request as a school because its stores some data on being off off one sublet

00:10:03.080 --> 00:10:05.520
so that it can be accessed in another cell It.

00:10:05.520 --> 00:10:09.630
So the way you stories you say request our set,

00:10:09.630 --> 00:10:11.980
attribute and give it a name,

00:10:11.980 --> 00:10:14.800
so print result can go in quietly by that name.

00:10:14.800 --> 00:10:15.520
So let's say,

00:10:15.520 --> 00:10:16.040
for example,

00:10:16.040 --> 00:10:17.950
I'm gonna call it us result.

00:10:17.950 --> 00:10:21.050
This could be anything different than the variable name.

00:10:21.050 --> 00:10:23.800
But general practices you give the same thing.

00:10:23.800 --> 00:10:29.020
Now we see that I'm storing whatever the calculated result in the request.

00:10:29.020 --> 00:10:30.420
Cope with this key,

00:10:30.420 --> 00:10:36.550
which can be anything you want and then print result will now receive the same request on

00:10:36.550 --> 00:10:39.150
inside the requested can find this result,

00:10:39.150 --> 00:10:41.170
and that's what we want to do next.

00:10:41.170 --> 00:10:43.400
One more thing When there is an exception,

00:10:43.400 --> 00:10:46.870
lets redirect the user toe calculator dot html.

00:10:46.870 --> 00:10:49.290
So I'm gonna copy this and then based here.

00:10:49.290 --> 00:10:53.670
So since that's the last line I don't have to do written from here,

00:10:53.670 --> 00:10:59.760
one thing you should observe here is that we never use the response to get writer Our

00:10:59.760 --> 00:11:01.650
response Start said content type.

00:11:01.650 --> 00:11:06.990
And that's because this is accepting the responsibility off only the business logic.

00:11:06.990 --> 00:11:10.350
But the presentation logic is going to be in the sublet.

00:11:10.350 --> 00:11:11.090
Typically,

00:11:11.090 --> 00:11:12.290
it's going to be JSP.

00:11:12.290 --> 00:11:13.540
But for the time being,

00:11:13.540 --> 00:11:16.260
let's do the same thing using a separate one.

00:11:16.260 --> 00:11:21.470
Last thing about this separate is we have to map the separate classes.

00:11:21.470 --> 00:11:22.140
The Ural,

00:11:22.140 --> 00:11:24.650
the euro is simple calculator.

00:11:24.650 --> 00:11:25.770
So this is the action.

00:11:25.770 --> 00:11:28.020
So when I submit this particular form,

00:11:28.020 --> 00:11:30.350
it is supposed to reach to this,

00:11:30.350 --> 00:11:33.120
and that is done by using an addition.

00:11:33.120 --> 00:11:39.240
Web Summit Onda give the name as slash simple calculator.

00:11:39.240 --> 00:11:40.540
That's the Ural pattern.

00:11:40.540 --> 00:11:44.100
Now Dunkirk knows that whenever you submit this particular form,

00:11:44.100 --> 00:11:45.100
it is supposed to go.

00:11:45.100 --> 00:11:50.020
The simple calculator and simple calculator is nothing but this separate instance.

00:11:50.020 --> 00:11:51.600
Let's create another sell it,

00:11:51.600 --> 00:11:56.240
which is supposed to get this data and then bring that to the user.

00:11:56.240 --> 00:11:58.750
So that's also call it does print result.

00:11:58.750 --> 00:12:03.240
So I'm gonna right click on my package here and then say,

00:12:03.240 --> 00:12:04.300
New class.

00:12:04.300 --> 00:12:05.900
Let's call it us,

00:12:05.900 --> 00:12:13.650
putting the results of it and then select the super close from here as http sublet,

00:12:13.650 --> 00:12:17.050
Let's click finish as usual.

00:12:17.050 --> 00:12:21.680
That's at a default cereal washing you I d get it off this comment.

00:12:21.680 --> 00:12:24.880
That's also view this as the U.

00:12:24.880 --> 00:12:27.640
R L patent for this particular summit are copied.

00:12:27.640 --> 00:12:31.810
That's I'm gonna type here at the rate Webster late slash print result.

00:12:31.810 --> 00:12:35.100
And then come here on add the do get functions.

00:12:35.100 --> 00:12:41.450
I'm gonna press control space type D g e And then we got to do get Let's get it off this

00:12:41.450 --> 00:12:42.150
section.

00:12:42.150 --> 00:12:49.040
So the request we receive here is nothing with the request that Waas passed over here.

00:12:49.040 --> 00:12:53.310
So this is the location would be supplied The request response to the request Dispatcher

00:12:53.310 --> 00:12:57.290
request Dispatcher will now send the same thing over here.

00:12:57.290 --> 00:12:59.150
This time it is not coming from Tom.

00:12:59.150 --> 00:13:04.100
Credit is coming from the request Dispatcher Since this has been stored within our tribute

00:13:04.100 --> 00:13:04.100
,

00:13:04.100 --> 00:13:08.980
we can now go and say give you that attribute so I can say here requests start.

00:13:08.980 --> 00:13:15.000
Get a tribute on the name of that tribute is nothing but the result the return value off

00:13:15.000 --> 00:13:18.090
this particular function you can see its object.

00:13:18.090 --> 00:13:23.740
It is very generate because this a pier is not aware off the data type that has been stored

00:13:23.740 --> 00:13:23.740
.

00:13:23.740 --> 00:13:25.650
So everything is considered an object.

00:13:25.650 --> 00:13:28.570
So you have to receive that as an object.

00:13:28.570 --> 00:13:30.550
Let's call it us object O b j.

00:13:30.550 --> 00:13:32.000
And then I can say,

00:13:32.000 --> 00:13:32.550
if o.

00:13:32.550 --> 00:13:32.680
B.

00:13:32.680 --> 00:13:34.200
J not equals TUNEL,

00:13:34.200 --> 00:13:37.910
I'm gonna convert that into a double because I know that it's a double value.

00:13:37.910 --> 00:13:38.820
So I'll tell you,

00:13:38.820 --> 00:13:39.680
if o b.

00:13:39.680 --> 00:13:42.150
J is not equals TUNEL,

00:13:42.150 --> 00:13:50.850
then we'll say double result equals toe double dot Bastable off o b j dot to string that

00:13:50.850 --> 00:13:53.610
actually converts that string value in tow.

00:13:53.610 --> 00:13:54.260
A double.

00:13:54.260 --> 00:13:55.910
Now that we have this,

00:13:55.910 --> 00:13:57.590
let's say we want to print the result.

00:13:57.590 --> 00:13:58.630
First of all,

00:13:58.630 --> 00:14:04.750
let's go to the beginning and then say response start set content type on the content type

00:14:04.750 --> 00:14:06.930
is gonna be texture slash html.

00:14:06.930 --> 00:14:10.810
We also probably might want toe include the it's TML.

00:14:10.810 --> 00:14:12.320
And if you want to do that,

00:14:12.320 --> 00:14:14.480
let's say all the equals toe request.

00:14:14.480 --> 00:14:21.530
Don't get request dispatcher dot slash calculator dotage to Yemen that create the variable

00:14:21.530 --> 00:14:26.590
already off Paper Quest Dispatcher by pressing command one or controlled one on windows and

00:14:26.590 --> 00:14:28.930
then we can say you're already dot Include,

00:14:28.930 --> 00:14:32.950
and then we say request and this once.

00:14:32.950 --> 00:14:34.600
So this is where we are,

00:14:34.600 --> 00:14:38.330
including that village team and now I want toe print the result toe print.

00:14:38.330 --> 00:14:41.550
The result we need the or put variable so that articles.

00:14:41.550 --> 00:14:42.780
Toe response.

00:14:42.780 --> 00:14:44.890
Don't get writer out.

00:14:44.890 --> 00:14:46.640
Needs to be created again.

00:14:46.640 --> 00:14:48.340
Command one or control one.

00:14:48.340 --> 00:14:49.470
And then we got the print.

00:14:49.470 --> 00:14:49.930
Reiter.

00:14:49.930 --> 00:14:56.440
The HTML is included over here and now I can display the results over here by typing out

00:14:56.440 --> 00:14:57.250
dot print.

00:14:57.250 --> 00:14:57.740
Ellen,

00:14:57.740 --> 00:15:00.790
maybe a paragraph result off.

00:15:00.790 --> 00:15:03.810
If you want to know what operation was it?

00:15:03.810 --> 00:15:05.450
You can always stay here.

00:15:05.450 --> 00:15:08.640
Request our get perimeter off.

00:15:08.640 --> 00:15:09.220
Opie.

00:15:09.220 --> 00:15:09.950
Remember,

00:15:09.950 --> 00:15:12.740
the request is nothing with the same request.

00:15:12.740 --> 00:15:14.350
That very sit over here.

00:15:14.350 --> 00:15:15.660
There is this request.

00:15:15.660 --> 00:15:18.460
Get perimeter operators of the same operator.

00:15:18.460 --> 00:15:19.820
We can also access that.

00:15:19.820 --> 00:15:21.650
So this is supposed to be operator.

00:15:21.650 --> 00:15:24.550
And then I say you're operation,

00:15:24.550 --> 00:15:28.750
he's and then I tape your result.

00:15:28.750 --> 00:15:31.670
And let's also do out dark clothes.

00:15:31.670 --> 00:15:38.640
So now our subject is really basically this separate is not doing any business project.

00:15:38.640 --> 00:15:41.060
Its focus is only on the presentation.

00:15:41.060 --> 00:15:44.870
But as this one is doing all the business logic,

00:15:44.870 --> 00:15:45.180
of course,

00:15:45.180 --> 00:15:47.210
the application itself is very simple.

00:15:47.210 --> 00:15:49.950
Let's not focus on the application logic over here,

00:15:49.950 --> 00:15:50.780
but no,

00:15:50.780 --> 00:15:52.240
that this particular son,

00:15:52.240 --> 00:15:54.020
Red is doing the business logic.

00:15:54.020 --> 00:15:56.250
And this is taking care of the presentation logic.

00:15:56.250 --> 00:15:59.730
So let's try running this particular son right now.

00:15:59.730 --> 00:16:02.550
So I'm gonna right click on this and then say,

00:16:02.550 --> 00:16:04.350
run as a run on server.

00:16:04.350 --> 00:16:12.200
So dunker is getting restarted and it's gonna open in a new browser on incidently it came

00:16:12.200 --> 00:16:15.400
as sublet slash under complete class.

00:16:15.400 --> 00:16:16.310
Name on.

00:16:16.310 --> 00:16:18.430
That's not the one that we wanted anyways,

00:16:18.430 --> 00:16:22.430
So I wanted actually toe goto this Ural.

00:16:22.430 --> 00:16:27.540
So if I go this year oral it is going toe redirected the calculator that each team and

00:16:27.540 --> 00:16:28.620
that's what we want to see.

00:16:28.620 --> 00:16:30.620
So if I basted and present,

00:16:30.620 --> 00:16:36.860
you can see that it is going to the calculator that html So it's saying for not for I think

00:16:36.860 --> 00:16:38.150
it must be a spelling mistake.

00:16:38.150 --> 00:16:42.580
Let's go and have a look at that and you can see that the name off my file is wrong.

00:16:42.580 --> 00:16:44.340
So I'm gonna go and change that.

00:16:44.340 --> 00:16:47.430
So So the actual file is here.

00:16:47.430 --> 00:16:48.210
This is the file.

00:16:48.210 --> 00:16:51.640
I'm gonna press f two for redeeming Onda.

00:16:51.640 --> 00:16:54.000
Let's go change the spelling over here.

00:16:54.000 --> 00:16:57.490
So this is a misplaced a I click on.

00:16:57.490 --> 00:16:58.120
OK,

00:16:58.120 --> 00:17:00.110
so now they should be okay.

00:17:00.110 --> 00:17:04.340
Let's go back to the browser and then refresh the same thing are,

00:17:04.340 --> 00:17:05.040
for that matter,

00:17:05.040 --> 00:17:07.200
effective simple calculator and press enter.

00:17:07.200 --> 00:17:11.310
And now we can see we got the simple calculator I take in a number.

00:17:11.310 --> 00:17:13.880
Let's type 12 on 34.

00:17:13.880 --> 00:17:15.320
I click on add.

00:17:15.320 --> 00:17:21.210
I'm supposed to get the result right below the saying that result off operation is so and

00:17:21.210 --> 00:17:23.460
so so you can see the rituals result off.

00:17:23.460 --> 00:17:25.270
I'd operations for the 6.0,

00:17:25.270 --> 00:17:26.810
so we got the result.

00:17:26.810 --> 00:17:27.340
Similarly,

00:17:27.340 --> 00:17:29.590
if I type here some all funny Merrick,

00:17:29.590 --> 00:17:32.660
value it simply going toe redirect back over here.

00:17:32.660 --> 00:17:34.590
Nothing happens over here.

00:17:34.590 --> 00:17:40.530
But you can see that I'm actually calculating the result in one separate.

00:17:40.530 --> 00:17:43.720
But all put is coming from another separate right.

00:17:43.720 --> 00:17:45.800
It's still going to the a simple calculator,

00:17:45.800 --> 00:17:49.390
but the actual output is coming from print result separate.

00:17:49.390 --> 00:17:52.540
If I access this print result directly,

00:17:52.540 --> 00:17:57.900
you will see that it's actually going to include this part because object is now there is

00:17:57.900 --> 00:17:59.190
no output over here.

00:17:59.190 --> 00:18:01.370
So whatever the result,

00:18:01.370 --> 00:18:07.550
it has calculated right now as $57 lost because it was in the request scope,

00:18:07.550 --> 00:18:10.110
so you can see that there is no result.

00:18:10.110 --> 00:18:14.660
So the subject requestion solid response objects which were created when we submitted the

00:18:14.660 --> 00:18:15.200
form,

00:18:15.200 --> 00:18:18.560
are lost when that Childress wants has come back to the user.

00:18:18.560 --> 00:18:19.870
So because of which,

00:18:19.870 --> 00:18:23.500
if I make a fresh request to print resulted directly,

00:18:23.500 --> 00:18:26.240
I'm not seeing the actual result that we got previously.

00:18:26.240 --> 00:18:31.070
In case if you want to maintain data across multiple requests by the same user,

00:18:31.070 --> 00:18:34.530
they would like to make use of something called http session.

00:18:34.530 --> 00:18:35.950
And in the next lecture,

00:18:35.950 --> 00:18:37.230
let's I'm just the same.

