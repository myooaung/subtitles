WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.030
in this lecture,

00:00:01.030 --> 00:00:03.490
let's create a J A Speaker sometime,

00:00:03.490 --> 00:00:06.920
which is also known as J Speak Custom Action.

00:00:06.920 --> 00:00:08.290
To understand the same,

00:00:08.290 --> 00:00:14.200
let's first create a JSP and try to use a tag which is not a regular hitched general time.

00:00:14.200 --> 00:00:16.970
And then we'll convert that into a J speakers.

00:00:16.970 --> 00:00:17.540
Some type.

00:00:17.540 --> 00:00:21.070
So let's right click on Rebekah New JSP file.

00:00:21.070 --> 00:00:24.700
Let's call it as custom bags demo.

00:00:24.700 --> 00:00:25.210
I pressed.

00:00:25.210 --> 00:00:26.600
Enter this change,

00:00:26.600 --> 00:00:29.760
the title toe custom tags,

00:00:29.760 --> 00:00:35.960
demo and the same thing That's also give it toe the heading and let's give a Hitcher.

00:00:35.960 --> 00:00:40.480
Let's say we want to display current date and time for that.

00:00:40.480 --> 00:00:45.330
Let's use that type called Date and this date I is not in each temple,

00:00:45.330 --> 00:00:46.390
Taggart concedes straight away.

00:00:46.390 --> 00:00:48.560
We're getting a warning on the warning.

00:00:48.560 --> 00:00:49.140
Very clearly,

00:00:49.140 --> 00:00:51.190
says unknown tag called date.

00:00:51.190 --> 00:00:53.230
But what we want to do is tow.

00:00:53.230 --> 00:00:56.850
Make sure that this data type brings current data in time.

00:00:56.850 --> 00:01:02.400
So let's save this and then right click on the file run as run on server,

00:01:02.400 --> 00:01:04.360
so Tomcat is restarting,

00:01:04.360 --> 00:01:06.060
and it's gonna open in a new tab.

00:01:06.060 --> 00:01:06.880
As you can see,

00:01:06.880 --> 00:01:08.670
we didn't see any output here,

00:01:08.670 --> 00:01:12.750
but if I right click and then say view pesos.

00:01:12.750 --> 00:01:17.800
You'll see that the tag date is printed here as east.

00:01:17.800 --> 00:01:24.160
The reason for that is the JSP engine understands that this is something special to Jsp,

00:01:24.160 --> 00:01:26.400
so this gets processed on the thorough said.

00:01:26.400 --> 00:01:28.340
That's why you don't see that over here.

00:01:28.340 --> 00:01:31.670
How we were all these lines off court,

00:01:31.670 --> 00:01:33.990
including the one called the Date.

00:01:33.990 --> 00:01:38.950
Here they get converted into a series off out dot right statements,

00:01:38.950 --> 00:01:43.430
and eventually the same thing is given back to the browser and the browser is string toe

00:01:43.430 --> 00:01:43.910
process.

00:01:43.910 --> 00:01:46.080
That brother doesn't know what to do with this,

00:01:46.080 --> 00:01:48.570
because this is not a W three c standard time,

00:01:48.570 --> 00:01:50.730
and it's just printing as is,

00:01:50.730 --> 00:01:53.070
and there is no output produced here.

00:01:53.070 --> 00:01:57.680
But what we want to do is we don't want this date like to be printed over here because it's

00:01:57.680 --> 00:01:58.780
not meant for dawn.

00:01:58.780 --> 00:01:59.820
Instead,

00:01:59.820 --> 00:02:04.680
what we want is some job decor corresponding to this should be executed on the server side

00:02:04.680 --> 00:02:04.680
,

00:02:04.680 --> 00:02:08.260
and then the result off that should be printed over here.

00:02:08.260 --> 00:02:11.050
Let's take a look at the job decor corresponding toe.

00:02:11.050 --> 00:02:12.890
This particular Jsp file,

00:02:12.890 --> 00:02:16.480
which is there on my desktop This is my training workspace.

00:02:16.480 --> 00:02:18.060
The dark matter,

00:02:18.060 --> 00:02:19.450
ditto dot plug ins,

00:02:19.450 --> 00:02:20.740
Wst,

00:02:20.740 --> 00:02:24.150
sir Work or D M P zero work.

00:02:24.150 --> 00:02:27.070
And now that's where you will see your current project,

00:02:27.070 --> 00:02:32.560
which is somewhere Demo our Apache Jsp and you'll see all your files and this is the one

00:02:32.560 --> 00:02:35.410
that is printing the HTML on the browser.

00:02:35.410 --> 00:02:36.900
So I'm gonna right click and then say,

00:02:36.900 --> 00:02:38.730
open with visual studio core.

00:02:38.730 --> 00:02:43.780
So if you scroll down to the location where you have a city's off heart rate statement that

00:02:43.780 --> 00:02:46.750
includes even the date slash also.

00:02:46.750 --> 00:02:50.000
So that is the reason why we're getting this particular output.

00:02:50.000 --> 00:02:55.000
But instead we have to tell the JSP engine that hit This is not html tag.

00:02:55.000 --> 00:02:56.110
Like the other ones,

00:02:56.110 --> 00:02:58.890
this is something special toe jsp,

00:02:58.890 --> 00:03:01.740
and there is a class corresponding to this particular tag.

00:03:01.740 --> 00:03:02.410
We wonder,

00:03:02.410 --> 00:03:03.470
close to be instance,

00:03:03.470 --> 00:03:05.050
hated and be processed.

00:03:05.050 --> 00:03:05.820
So first,

00:03:05.820 --> 00:03:11.590
let's create a class representing this particular tag and then link this particular time to

00:03:11.590 --> 00:03:13.470
the actual tag class.

00:03:13.470 --> 00:03:15.520
So let's go to our package here.

00:03:15.520 --> 00:03:15.970
Corder,

00:03:15.970 --> 00:03:17.650
we know dot bed that's right,

00:03:17.650 --> 00:03:23.290
click and then say new class and let's see the class name as date tag.

00:03:23.290 --> 00:03:24.450
So this class,

00:03:24.450 --> 00:03:29.310
which is supposed to be a handler for the tag class we call it the tag handler class,

00:03:29.310 --> 00:03:35.190
must implement an interface called Tag our extended class called Time Support.

00:03:35.190 --> 00:03:38.690
So let's go to the browse and then say your tag support.

00:03:38.690 --> 00:03:43.420
You can see that it comes from Java X Sudler J speed tag 60.

00:03:43.420 --> 00:03:44.240
Let's click.

00:03:44.240 --> 00:03:46.400
OK and then say Finish.

00:03:46.400 --> 00:03:48.720
That's at the D Fork cereal washing.

00:03:48.720 --> 00:03:51.890
You ready because tax support implement cereal.

00:03:51.890 --> 00:03:58.380
Izabal on your class becomes see relatable automatically on Now we need to override one off

00:03:58.380 --> 00:04:00.840
few functions that this class has.

00:04:00.840 --> 00:04:02.720
So if you want to check what other functions,

00:04:02.720 --> 00:04:08.890
you can go to the source menu overrate implement mater's And here you can see the tag

00:04:08.890 --> 00:04:11.480
Support class has got many functions.

00:04:11.480 --> 00:04:15.350
A few of them are very important and they get automatically called.

00:04:15.350 --> 00:04:16.070
For example,

00:04:16.070 --> 00:04:19.380
you can see that there is a function here called Do start attack.

00:04:19.380 --> 00:04:26.480
This gets automatically called whenever JC engine encounters that open tag corresponding to

00:04:26.480 --> 00:04:27.900
this particular class,

00:04:27.900 --> 00:04:30.640
which is the date attack that we have used.

00:04:30.640 --> 00:04:31.480
Similarly,

00:04:31.480 --> 00:04:33.780
there is a function called duende attack.

00:04:33.780 --> 00:04:37.910
This gets executed when it encounters the closing back.

00:04:37.910 --> 00:04:38.610
In our case,

00:04:38.610 --> 00:04:45.000
we're using open and close tacked together because we're using it like empty time so both

00:04:45.000 --> 00:04:46.960
of them get executed in succession.

00:04:46.960 --> 00:04:53.050
But what we want to do is to override dysfunction that do start so that we want toe print

00:04:53.050 --> 00:04:54.770
something when the tag is open.

00:04:54.770 --> 00:04:56.490
So let's click OK,

00:04:56.490 --> 00:04:57.890
and we got dysfunction.

00:04:57.890 --> 00:04:59.630
Let's get off this to do.

00:04:59.630 --> 00:05:04.870
Let's keep the return value as super dot Do start back because it's supposed to return in

00:05:04.870 --> 00:05:05.790
into value.

00:05:05.790 --> 00:05:08.050
And we don't have to worry about this side despite in time.

00:05:08.050 --> 00:05:13.550
We just want to include our core so that we can print something on the JSP.

00:05:13.550 --> 00:05:15.190
So whatever we print here,

00:05:15.190 --> 00:05:18.580
that print statement will reflect over here.

00:05:18.580 --> 00:05:21.130
So this is the open type plus closing time.

00:05:21.130 --> 00:05:23.130
So let's go back over here now.

00:05:23.130 --> 00:05:25.830
Toe print something we need jsp writer.

00:05:25.830 --> 00:05:28.130
So we can take you out equals too.

00:05:28.130 --> 00:05:33.700
On this class has a inherited member called us Page Context,

00:05:33.700 --> 00:05:36.810
which provides a function called get Out,

00:05:36.810 --> 00:05:38.820
which gives you the J separator.

00:05:38.820 --> 00:05:41.060
Let's create the same thing by pressing command.

00:05:41.060 --> 00:05:43.150
One are controlled one on windows.

00:05:43.150 --> 00:05:44.640
Now we have the out,

00:05:44.640 --> 00:05:47.010
which is nothing but the same out,

00:05:47.010 --> 00:05:51.190
which is actually printing all these values on inside the Jolla.

00:05:51.190 --> 00:05:52.570
Plus corresponding to this date.

00:05:52.570 --> 00:05:57.320
I know the out we have access to and we can print anything we want,

00:05:57.320 --> 00:06:04.020
which is nothing but a new date dot to string on the date should be imported from Java Util

00:06:04.020 --> 00:06:04.020
.

00:06:04.020 --> 00:06:05.250
Let's do the same thing.

00:06:05.250 --> 00:06:09.860
One thing You should also see here that we are overrating this function and it can only

00:06:09.860 --> 00:06:12.080
throw JST exception.

00:06:12.080 --> 00:06:14.440
But as this is gonna throw your exception.

00:06:14.440 --> 00:06:16.320
So if you move the car surrounded,

00:06:16.320 --> 00:06:16.770
it tastes.

00:06:16.770 --> 00:06:18.750
The only option you have is around with Try,

00:06:18.750 --> 00:06:19.230
catch.

00:06:19.230 --> 00:06:20.160
Let's do that.

00:06:20.160 --> 00:06:23.070
Let's not do anything except printing the stack.

00:06:23.070 --> 00:06:23.490
Chris,

00:06:23.490 --> 00:06:27.830
let's say this now we have our JSP tag close.

00:06:27.830 --> 00:06:28.250
Really?

00:06:28.250 --> 00:06:30.090
This is called tag handler,

00:06:30.090 --> 00:06:33.060
but we have to tell the JSP engendered here.

00:06:33.060 --> 00:06:35.970
Whenever there is a tag called date being used,

00:06:35.970 --> 00:06:40.520
it must use an instance off this class and call the appropriate lexical function.

00:06:40.520 --> 00:06:41.410
To do that,

00:06:41.410 --> 00:06:46.900
we need to create an XML file we typically call This is the tablet Descriptor and it must

00:06:46.900 --> 00:06:51.180
be found either in the Lebanon folder or must be in the class plant.

00:06:51.180 --> 00:06:57.090
So let's right click on this web enough and then say new file on the final in can be

00:06:57.090 --> 00:07:02.870
anything but general rule is that the extension should be dark dearly for tag lib

00:07:02.870 --> 00:07:03.550
descriptor.

00:07:03.550 --> 00:07:09.750
Let's give the name as my custom tags dot daily rest Enter.

00:07:09.750 --> 00:07:11.870
This is a regular text file.

00:07:11.870 --> 00:07:17.930
I'm gonna paste a template court here which consist off the bare minimum requirement off in

00:07:17.930 --> 00:07:18.890
Italy file.

00:07:18.890 --> 00:07:20.180
The first part,

00:07:20.180 --> 00:07:20.580
of course,

00:07:20.580 --> 00:07:25.620
is the processing instruction that says what with abortion of XML or to the including the

00:07:25.620 --> 00:07:29.040
second set here is the Doctor declaration,

00:07:29.040 --> 00:07:32.690
which described the tag lib and its child elements,

00:07:32.690 --> 00:07:34.980
which is the root off or XML file here.

00:07:34.980 --> 00:07:38.510
The completely description can be found in this DT file,

00:07:38.510 --> 00:07:44.100
but we don't have to worry about that so that Tagle it has minimum toe wash on information

00:07:44.100 --> 00:07:44.100
.

00:07:44.100 --> 00:07:44.360
Here.

00:07:44.360 --> 00:07:49.740
This is the tablet question which says $1.0 on the jsp Russian witches 1.2.

00:07:49.740 --> 00:07:52.800
The rest of them are customizable.

00:07:52.800 --> 00:07:53.630
For example,

00:07:53.630 --> 00:07:55.420
we need to give a sharp name,

00:07:55.420 --> 00:07:59.370
which becomes the prefix toe tags that were using over here,

00:07:59.370 --> 00:08:00.450
for example,

00:08:00.450 --> 00:08:05.210
in order to distinguish between the HTML tags on the Jay Street tax,

00:08:05.210 --> 00:08:07.250
We may have to specify some prefix.

00:08:07.250 --> 00:08:09.790
The prefix can be totally your choice.

00:08:09.790 --> 00:08:11.550
You can give here anything you want.

00:08:11.550 --> 00:08:12.610
For example,

00:08:12.610 --> 00:08:14.450
I can tape your re Andy,

00:08:14.450 --> 00:08:17.840
which is ah sharp from for we know Andi,

00:08:17.840 --> 00:08:19.140
I can go here.

00:08:19.140 --> 00:08:22.330
I can specify the same thing even here as well.

00:08:22.330 --> 00:08:27.150
Now this could be something different as well as something else can be given over here.

00:08:27.150 --> 00:08:30.050
We'll have a look into this part in a bit later.

00:08:30.050 --> 00:08:36.470
This is only going to be a suggestion to the user off my tag library saying that Hey,

00:08:36.470 --> 00:08:40.460
you use this other perfect stow distinguished from other tax.

00:08:40.460 --> 00:08:42.480
So the next one is the you are,

00:08:42.480 --> 00:08:45.850
which creates a name space for all your tax.

00:08:45.850 --> 00:08:48.580
So generally people give their website names,

00:08:48.580 --> 00:08:50.540
but it can be anything.

00:08:50.540 --> 00:08:54.760
Let me just give it us my custom tag library.

00:08:54.760 --> 00:08:57.560
You can give any description optionally if you want.

00:08:57.560 --> 00:08:59.660
You don't have to give any description over here.

00:08:59.660 --> 00:09:01.360
Let's keep that on.

00:09:01.360 --> 00:09:07.770
There is one time in a tight liberally on the name of the time is something that user off

00:09:07.770 --> 00:09:09.560
the J speak and use.

00:09:09.560 --> 00:09:13.400
And that corresponds to an appropriate type handler class,

00:09:13.400 --> 00:09:16.570
since I want my type to be used as date.

00:09:16.570 --> 00:09:20.310
So let's give you date on the actual class.

00:09:20.310 --> 00:09:21.380
Name is cord out.

00:09:21.380 --> 00:09:24.540
We know dot web dot date time.

00:09:24.540 --> 00:09:30.040
You can move the most over this particular class name holding the command or control key.

00:09:30.040 --> 00:09:32.170
And if you don't see a hyperlink over here,

00:09:32.170 --> 00:09:33.650
that means there is a spell Mistake.

00:09:33.650 --> 00:09:33.800
Now,

00:09:33.800 --> 00:09:34.710
this is okay,

00:09:34.710 --> 00:09:39.110
So our tag is really so I'm gonna say this on.

00:09:39.110 --> 00:09:44.360
Let's go back to the JSP and refer to this particular tag library to referee the tag

00:09:44.360 --> 00:09:45.020
library.

00:09:45.020 --> 00:09:51.240
We will be using something called tag Lib Director on the way you do that is less than a

00:09:51.240 --> 00:09:56.040
percentage at tag lib and then you're I equals two.

00:09:56.040 --> 00:09:57.630
And if you wait for a second,

00:09:57.630 --> 00:10:04.480
you'll see that eclipses scanning your class part on Web in a folder for all the TIG

00:10:04.480 --> 00:10:05.680
libraries that are present.

00:10:05.680 --> 00:10:08.000
And it finds only one which is nothing.

00:10:08.000 --> 00:10:10.430
But you are right that I just gave over here.

00:10:10.430 --> 00:10:12.970
So this could be anything you want,

00:10:12.970 --> 00:10:15.290
and that is what actually is being listed.

00:10:15.290 --> 00:10:19.200
So I press control space here and you can see that it auto completes.

00:10:19.200 --> 00:10:24.530
So we want toe rougher toe one or more tags defined in this particular library.

00:10:24.530 --> 00:10:24.790
You know,

00:10:24.790 --> 00:10:25.710
jsp.

00:10:25.710 --> 00:10:26.690
For that,

00:10:26.690 --> 00:10:30.680
we have to use a perfect and then I'm gonna say perfect equals two.

00:10:30.680 --> 00:10:32.020
And if you wait for a second,

00:10:32.020 --> 00:10:33.810
you will see that it shows VND.

00:10:33.810 --> 00:10:37.430
And that's nothing but the sharp name defined over here.

00:10:37.430 --> 00:10:40.450
So this is as a developer off the tide liberally.

00:10:40.450 --> 00:10:44.150
I'm suggesting the user that you use we Andy.

00:10:44.150 --> 00:10:44.950
However,

00:10:44.950 --> 00:10:47.090
if I'm not happy with that as a user,

00:10:47.090 --> 00:10:48.200
I can do something else.

00:10:48.200 --> 00:10:54.000
Like I can say X but it's a good idea toe refer toe the same prefix as being suggested.

00:10:54.000 --> 00:10:56.060
So I'm gonna use VND now.

00:10:56.060 --> 00:10:59.910
I'm going to stay here less than VND colon on.

00:10:59.910 --> 00:11:01.450
If I press control space here,

00:11:01.450 --> 00:11:07.410
you can see that it comes with open tag and close that incidently my custom tags.

00:11:07.410 --> 00:11:09.720
Ortelli has only one time.

00:11:09.720 --> 00:11:12.010
That's why it just came automatically.

00:11:12.010 --> 00:11:12.560
However,

00:11:12.560 --> 00:11:14.270
if there are multiple types defined,

00:11:14.270 --> 00:11:17.210
then it would have suggested and you could have picked up one of them.

00:11:17.210 --> 00:11:22.070
And since I don't have any content in between I'm gonna just close this old here.

00:11:22.070 --> 00:11:24.230
So now we have a dad,

00:11:24.230 --> 00:11:26.290
which is perfect using the Andy.

00:11:26.290 --> 00:11:30.250
So when Jsp engine starts translating all these things,

00:11:30.250 --> 00:11:33.620
it will translate all these using outdoor trade statement.

00:11:33.620 --> 00:11:36.530
But because there is a perfect stew type over here,

00:11:36.530 --> 00:11:37.370
it will now go on,

00:11:37.370 --> 00:11:39.460
check in this particular tag liberally.

00:11:39.460 --> 00:11:45.540
What is the tag class to responding to this and then start using the lexical function off

00:11:45.540 --> 00:11:48.900
that such as Do start tag and do in the tag and so on.

00:11:48.900 --> 00:11:49.890
So I'm gonna say,

00:11:49.890 --> 00:11:56.410
while the files and then right click on this file run as a run on server this time Sarwar,

00:11:56.410 --> 00:12:00.840
Mary start and then open the jsp in a new tab.

00:12:00.840 --> 00:12:03.750
And you can see this time I got my output.

00:12:03.750 --> 00:12:06.670
And if I go and view the page does this time,

00:12:06.670 --> 00:12:08.740
I don't see the actual tag.

00:12:08.740 --> 00:12:11.910
But I see the result coming from my tag handler.

00:12:11.910 --> 00:12:12.510
Plus,

00:12:12.510 --> 00:12:14.770
let's go back to the jsp.

00:12:14.770 --> 00:12:17.970
We can also supply additional attributes to that.

00:12:17.970 --> 00:12:18.890
For example,

00:12:18.890 --> 00:12:22.040
let's I want to print the dating different patterns like,

00:12:22.040 --> 00:12:22.880
for example,

00:12:22.880 --> 00:12:24.960
a I s o date for murder.

00:12:24.960 --> 00:12:27.900
A long former are accustom format.

00:12:27.900 --> 00:12:31.030
We can supply the former using an attribute,

00:12:31.030 --> 00:12:32.380
so let's give it a try.

00:12:32.380 --> 00:12:33.440
I'm gonna give a break.

00:12:33.440 --> 00:12:36.790
Here it's Copy this and paste couple of times.

00:12:36.790 --> 00:12:44.410
And for the 2nd 1 I'm gonna type your pattern equals two and then give a pattern letter d

00:12:44.410 --> 00:12:51.470
slash M slash y y y Y notice the capital m four month because this is the standard former

00:12:51.470 --> 00:12:53.830
that we use in simple date format.

00:12:53.830 --> 00:12:55.960
But if I save the file,

00:12:55.960 --> 00:13:00.140
you'll see that Titan is causing me an editor or a warning.

00:13:00.140 --> 00:13:03.050
It says undefined activity named Patton.

00:13:03.050 --> 00:13:08.560
Because now the eclipses tryingto look it this attribute in this particular tear,

00:13:08.560 --> 00:13:09.700
the and it is not phone.

00:13:09.700 --> 00:13:15.700
So we can say here that this tiger class may have an attribute so you can see that there is

00:13:15.700 --> 00:13:20.770
an active boots section on the name of the activity is called Patton.

00:13:20.770 --> 00:13:24.260
Is it really required While using the tag,

00:13:24.260 --> 00:13:25.350
we can say no.

00:13:25.350 --> 00:13:27.880
It is not required because if you check it out,

00:13:27.880 --> 00:13:30.460
the 1st 1 we didn't supply over here,

00:13:30.460 --> 00:13:33.880
So I mean the read option on So with the require records to falls.

00:13:33.880 --> 00:13:35.700
But if it'll you use this.

00:13:35.700 --> 00:13:42.020
This can now be passed on toe your tag class by declaring a variable in providing a center

00:13:42.020 --> 00:13:42.620
for the same.

00:13:42.620 --> 00:13:47.280
So I may have to give you private string Parton.

00:13:47.280 --> 00:13:49.210
And if the user didn't supply,

00:13:49.210 --> 00:13:51.120
I can assign an AL value to this.

00:13:51.120 --> 00:13:55.910
I can also provide a center for the same by pressing control space and then start typing

00:13:55.910 --> 00:13:59.490
Set be 80 and you can see we got said pattern.

00:13:59.490 --> 00:14:00.330
Now we see,

00:14:00.330 --> 00:14:03.060
whenever jsp engine encounters this,

00:14:03.060 --> 00:14:09.200
it will supply this value as an argument to the set pattern and eventually they will be

00:14:09.200 --> 00:14:11.580
assigned to the member variable pattern.

00:14:11.580 --> 00:14:13.810
So based on the value of this pattern,

00:14:13.810 --> 00:14:15.860
I can control my output.

00:14:15.860 --> 00:14:23.080
I can say here if pattern equals two equals toe know that means this whatever that I'm

00:14:23.080 --> 00:14:24.840
doing is okay.

00:14:24.840 --> 00:14:25.650
However,

00:14:25.650 --> 00:14:27.470
if the pattern is mentioned,

00:14:27.470 --> 00:14:32.700
then I can see your simple date format as difficult as toe new simple date format,

00:14:32.700 --> 00:14:33.650
off pattern.

00:14:33.650 --> 00:14:35.210
And then I would say,

00:14:35.210 --> 00:14:35.430
Oh,

00:14:35.430 --> 00:14:37.210
don't print Ellen Yes,

00:14:37.210 --> 00:14:40.850
D f dot format off new date object.

00:14:40.850 --> 00:14:42.220
Let's say this.

00:14:42.220 --> 00:14:43.980
Go back to the browser.

00:14:43.980 --> 00:14:45.130
Close this.

00:14:45.130 --> 00:14:46.480
Refresh this.

00:14:46.480 --> 00:14:51.390
You can see that the second output is now coming according to the format that I used over

00:14:51.390 --> 00:14:51.860
here.

00:14:51.860 --> 00:14:53.000
So let's give it a try.

00:14:53.000 --> 00:14:55.410
We can say our Titan equals toe.

00:14:55.410 --> 00:14:59.180
It's a double e double E on the double M double him.

00:14:59.180 --> 00:15:01.650
That is the vehicle a month name.

00:15:01.650 --> 00:15:12.440
The and year we'll also give one more pattern equals toe y y y Y dash MM Dash DD that I

00:15:12.440 --> 00:15:16.350
also want the hour minute on second.

00:15:16.350 --> 00:15:17.860
Let's save this.

00:15:17.860 --> 00:15:20.070
Go back to the browser refresh,

00:15:20.070 --> 00:15:24.000
and you can see that we're able to control the former off the output.

00:15:24.000 --> 00:15:25.470
So if you look at this,

00:15:25.470 --> 00:15:32.760
there is a JSP developer who is using a tag defined by somebody else on that someone else

00:15:32.760 --> 00:15:34.830
who is creating the data tag.

00:15:34.830 --> 00:15:36.380
Also clear to stay.

00:15:36.380 --> 00:15:36.790
So,

00:15:36.790 --> 00:15:37.500
in other words,

00:15:37.500 --> 00:15:44.600
that tag laborer is a combination of the tag handlers classes on a dearly file that defines

00:15:44.600 --> 00:15:46.000
all the tax over here.

00:15:46.000 --> 00:15:47.440
In the next lecture,

00:15:47.440 --> 00:15:50.100
let's see a more complicated washing off tag.

00:15:50.100 --> 00:15:51.040
However,

00:15:51.040 --> 00:15:52.230
for a user,

00:15:52.230 --> 00:15:58.070
it will always be very simple because Jsp developer is going to use these tax as if they're

00:15:58.070 --> 00:15:59.250
xdm attacks

