WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.600
now that we have a fair area off how subjects work In this lecture,

00:00:04.600 --> 00:00:07.190
let's discuss a boat on ultimate toe.

00:00:07.190 --> 00:00:07.740
Some light,

00:00:07.740 --> 00:00:09.100
which is called JST,

00:00:09.100 --> 00:00:09.960
are jobless.

00:00:09.960 --> 00:00:12.950
There were pages which eventually becomes a sunlit.

00:00:12.950 --> 00:00:20.120
According to the Java EE specifications have a container must provide a solid called as a

00:00:20.120 --> 00:00:21.930
JSP sublet a name off.

00:00:21.930 --> 00:00:23.190
This can be different.

00:00:23.190 --> 00:00:28.400
This is pre loaded onto the web container and already has a mapping toe stalled.

00:00:28.400 --> 00:00:29.290
Archie speak,

00:00:29.290 --> 00:00:34.860
which means any request to a Jace before the do make will be received by this particular

00:00:34.860 --> 00:00:35.870
Jsp starlet.

00:00:35.870 --> 00:00:36.870
For example,

00:00:36.870 --> 00:00:40.570
if you make a request toe hello dot jsp this amulet,

00:00:40.570 --> 00:00:45.080
this is the request and then tries to look at an object that is mad to toe.

00:00:45.080 --> 00:00:46.460
Hello Jsp.

00:00:46.460 --> 00:00:48.650
And if you're making the request for the first time,

00:00:48.650 --> 00:00:52.170
it's obvious that you don't have any set sublet on the container.

00:00:52.170 --> 00:00:57.590
But then the jays Miss Alert will look for a file called hello door jsp.

00:00:57.590 --> 00:00:58.240
Typically,

00:00:58.240 --> 00:01:03.860
that would be kept in the root off your applications and this JSP file gets translated into

00:01:03.860 --> 00:01:05.270
a job also scored.

00:01:05.270 --> 00:01:08.170
This face is called as translation face.

00:01:08.170 --> 00:01:12.140
It is possible that your JSP may have some syntax errors,

00:01:12.140 --> 00:01:19.020
and the translation may fail in case there is a translation error that is reported toe JSP

00:01:19.020 --> 00:01:23.000
seller that an exception and the JSP sell it will give the other court find it back to the

00:01:23.000 --> 00:01:23.410
plant.

00:01:23.410 --> 00:01:25.630
But if the translation is successful,

00:01:25.630 --> 00:01:31.500
you have a Java source code in hand and that John also scored gets compiled into a bite

00:01:31.500 --> 00:01:35.590
called This is called compilation Face Now during the compilation Trees.

00:01:35.590 --> 00:01:36.080
Also,

00:01:36.080 --> 00:01:40.620
it is possible that you may have some syntactical errors in jealous or score.

00:01:40.620 --> 00:01:43.380
If compilation fails for one of the reason,

00:01:43.380 --> 00:01:46.750
this also is reported to the JSP seller does an exception,

00:01:46.750 --> 00:01:52.400
and JSP Solid will give the other court finder back to the point with a complete stack

00:01:52.400 --> 00:01:52.870
tricks.

00:01:52.870 --> 00:01:55.140
But if the compilation is successful,

00:01:55.140 --> 00:02:00.440
this plus is now considered as a sublet on that gets instance,

00:02:00.440 --> 00:02:02.760
created and loaded into the William,

00:02:02.760 --> 00:02:03.990
also the subway.

00:02:03.990 --> 00:02:08.040
It is mapped to tow the filing so in our kid is going to be Hello Jsp.

00:02:08.040 --> 00:02:12.440
After the successful loading off the sublet into the Veum,

00:02:12.440 --> 00:02:15.570
the Container in Works its lifecycle function,

00:02:15.570 --> 00:02:19.120
which is called jsp in it once that when it is done,

00:02:19.120 --> 00:02:21.950
the sundered object is now ready for settling the claim.

00:02:21.950 --> 00:02:28.570
Now that the JSP Sublette finds an instance off a subway that is mapped to Hello Jsp Onley

00:02:28.570 --> 00:02:28.860
does.

00:02:28.860 --> 00:02:31.990
Is it in works the appropriate service matter?

00:02:31.990 --> 00:02:33.670
In the case of a JSP,

00:02:33.670 --> 00:02:35.390
it's called Underscore J Space.

00:02:35.390 --> 00:02:36.480
Always on.

00:02:36.480 --> 00:02:42.070
This contains all the X TML content or the Jolla content that you'd have written in your J

00:02:42.070 --> 00:02:42.070
.

00:02:42.070 --> 00:02:45.380
Speak on the HTML content is written to the response.

00:02:45.380 --> 00:02:47.690
The JSP Sadler will take that response.

00:02:47.690 --> 00:02:52.520
Give it back to the point so from no one works any climb making a request to the holiday

00:02:52.520 --> 00:02:52.980
speak.

00:02:52.980 --> 00:02:58.050
The JSP salad can find an instance off suddenly that is back to hello Jsp.

00:02:58.050 --> 00:02:58.780
However,

00:02:58.780 --> 00:03:02.180
it is possible that you may make some changes in your so score,

00:03:02.180 --> 00:03:04.770
but when you say you're so score that time,

00:03:04.770 --> 00:03:10.060
stem on the JSP is new or compared to the time stamp off the dark class fight.

00:03:10.060 --> 00:03:15.790
So every time a request comes to the JCP salad for hello JSP before it can pass under

00:03:15.790 --> 00:03:18.350
control toe underscore J space or its function.

00:03:18.350 --> 00:03:23.200
It will also check whether JSP has a newer timestamp than the class.

00:03:23.200 --> 00:03:24.370
If the answer is yes,

00:03:24.370 --> 00:03:26.330
then this particular instance,

00:03:26.330 --> 00:03:27.960
which is already loaded in the container,

00:03:27.960 --> 00:03:29.180
has to be removed.

00:03:29.180 --> 00:03:31.470
And because the summit is being removed,

00:03:31.470 --> 00:03:34.580
the lifecycle method JSP destroy will be called.

00:03:34.580 --> 00:03:39.090
And then the salad instances removed from the container and after that,

00:03:39.090 --> 00:03:41.860
the process off translation compilation,

00:03:41.860 --> 00:03:44.260
creating an instance loading into the bm,

00:03:44.260 --> 00:03:48.550
calling the jsp in it and then calling the underscore Jace with all of them,

00:03:48.550 --> 00:03:51.960
happen in the same way as it happened in the first case.

00:03:51.960 --> 00:03:53.440
So this is our job.

00:03:53.440 --> 00:03:55.250
Asaro pages work now.

00:03:55.250 --> 00:03:57.980
Since JSP is a plain text file,

00:03:57.980 --> 00:03:59.650
we rate all of its tea,

00:03:59.650 --> 00:04:05.230
milk or directly without having toe embed them using outdoor Prindle and statements like we

00:04:05.230 --> 00:04:06.150
do it in Summit.

00:04:06.150 --> 00:04:06.930
However,

00:04:06.930 --> 00:04:10.210
we write the Java code using some special brackets.

00:04:10.210 --> 00:04:13.140
We generally call them as a script Lex and declarations.

00:04:13.140 --> 00:04:15.750
We will discuss about the same in the subsequent lectures.

00:04:15.750 --> 00:04:17.310
So why last summer?

00:04:17.310 --> 00:04:20.540
It has John Accord and we remembered It's Timberline.

00:04:20.540 --> 00:04:26.910
It jsp is like an HTML course where we're embedding Jolla in ideal scenarios.

00:04:26.910 --> 00:04:29.310
Sunlight should not contain any HTML code.

00:04:29.310 --> 00:04:35.280
JSP should not contain any Delacour on this is that you're using what's going model view

00:04:35.280 --> 00:04:36.350
controller pattern,

00:04:36.350 --> 00:04:38.990
which we will discuss again in the subsequent lectures.

00:04:38.990 --> 00:04:40.400
In the next lecture,

00:04:40.400 --> 00:04:43.300
let's have a look at our first JSP file.

