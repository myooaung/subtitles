WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.430
before we actually start writing a program toe test to these things,

00:00:04.430 --> 00:00:09.250
let's create a factory class that can provide me an object off this interface.

00:00:09.250 --> 00:00:10.330
Remember,

00:00:10.330 --> 00:00:14.070
we are not going to write an implementation for this interface.

00:00:14.070 --> 00:00:18.050
My buddies will give me on implementation dynamically.

00:00:18.050 --> 00:00:19.470
So first,

00:00:19.470 --> 00:00:20.970
let's go to our deal.

00:00:20.970 --> 00:00:26.970
Package rightly can say new class and it's condescends Deol factory.

00:00:26.970 --> 00:00:31.940
So a factory is typically where something is manufacturer and in this case,

00:00:31.940 --> 00:00:35.500
the deal factory supposed to produce objects off dear.

00:00:35.500 --> 00:00:36.150
What types?

00:00:36.150 --> 00:00:37.940
And we have customer deal.

00:00:37.940 --> 00:00:38.470
What year?

00:00:38.470 --> 00:00:44.410
This is also typically a final plus because we don't want the factory class to be inherited

00:00:44.410 --> 00:00:44.720
from.

00:00:44.720 --> 00:00:46.630
So we click finish over here.

00:00:46.630 --> 00:00:49.460
We're also going to add a constructor.

00:00:49.460 --> 00:00:52.820
But that constructor is going to be private now.

00:00:52.820 --> 00:00:58.080
The reason why we want to follow this approach is that there is no way you can now create

00:00:58.080 --> 00:01:00.190
an object off deal factory at all.

00:01:00.190 --> 00:01:03.570
Because in order for deal factory close to be instance,

00:01:03.570 --> 00:01:03.910
hated.

00:01:03.910 --> 00:01:06.710
You have to have a public constructor and I don't have one.

00:01:06.710 --> 00:01:07.830
Alternately,

00:01:07.830 --> 00:01:09.950
we could have inherited this on.

00:01:09.950 --> 00:01:11.980
We could have instant created a subclass,

00:01:11.980 --> 00:01:15.390
but we can't do that because we have a final plus over here now,

00:01:15.390 --> 00:01:16.060
typically,

00:01:16.060 --> 00:01:22.030
all the factory classes are you till classes or like this you can take a look at showered

00:01:22.030 --> 00:01:22.580
of language,

00:01:22.580 --> 00:01:23.250
Matt,

00:01:23.250 --> 00:01:25.780
for a similar approach in this class,

00:01:25.780 --> 00:01:32.970
we're gonna have a function that can return a customer deal for us on generate your public

00:01:32.970 --> 00:01:35.760
static customer deal.

00:01:35.760 --> 00:01:39.440
Let's call it us get customer deal.

00:01:39.440 --> 00:01:42.480
And inside this we have toe ask my bad.

00:01:42.480 --> 00:01:43.060
It's toe,

00:01:43.060 --> 00:01:44.120
give a customer deer,

00:01:44.120 --> 00:01:44.830
for instance,

00:01:44.830 --> 00:01:45.840
and return the same thing.

00:01:45.840 --> 00:01:51.320
The very first thing that we have to do in order to talk to my batteries is to create a

00:01:51.320 --> 00:01:52.300
input stream.

00:01:52.300 --> 00:01:59.060
Representing this particular XML file we can use either file input stream are because the

00:01:59.060 --> 00:02:00.740
file is there in the class part.

00:02:00.740 --> 00:02:04.990
I can use something called Resource is not get resource a stream.

00:02:04.990 --> 00:02:06.250
So I'm gonna do the same thing.

00:02:06.250 --> 00:02:08.510
I'm going to type your resources,

00:02:08.510 --> 00:02:13.980
don't get resource as stream and then the name of the file,

00:02:13.980 --> 00:02:15.780
which is nothing but my back.

00:02:15.780 --> 00:02:23.270
This dash config dot xml So what this does is it's going toe look in the class spot for

00:02:23.270 --> 00:02:25.670
this particular fight and if it's found,

00:02:25.670 --> 00:02:29.570
it's going toe open a file input stream and then return the same thing.

00:02:29.570 --> 00:02:32.480
So I'm gonna type your some variable call.

00:02:32.480 --> 00:02:33.270
I Yes,

00:02:33.270 --> 00:02:34.130
on then.

00:02:34.130 --> 00:02:35.890
Since I s is not created,

00:02:35.890 --> 00:02:37.200
it's giving me another.

00:02:37.200 --> 00:02:42.420
I can press command one or control one on windows on it has cleared a local variable.

00:02:42.420 --> 00:02:43.870
I s press enter.

00:02:43.870 --> 00:02:48.570
You can see that it is It's an input stream Are Java inputs team.

00:02:48.570 --> 00:02:53.480
It is here that there is a possibility of an Iot era like fine art form exception,

00:02:53.480 --> 00:02:53.870
etcetera.

00:02:53.870 --> 00:02:59.380
So I'm gonna simply say add truce declaration on now I have the inputs,

00:02:59.380 --> 00:03:00.920
Chaim representing my file.

00:03:00.920 --> 00:03:03.180
I can supply this toe my batters.

00:03:03.180 --> 00:03:05.710
And when I supply this to my buddies,

00:03:05.710 --> 00:03:10.820
I'm actually asking my brothers to create an instance off something called SQL Session

00:03:10.820 --> 00:03:11.400
Factory.

00:03:11.400 --> 00:03:13.030
And as the name says,

00:03:13.030 --> 00:03:15.090
it creates an SQL session.

00:03:15.090 --> 00:03:17.500
So let's do that in the next step here.

00:03:17.500 --> 00:03:23.920
So I'm gonna type your factory equals toe new esque UAL session,

00:03:23.920 --> 00:03:30.580
factory builder dot build and then supply the input stream that we just now averages.

00:03:30.580 --> 00:03:31.250
I Yes.

00:03:31.250 --> 00:03:38.640
So this is going to create an instance off SQL Session factory factor is not created as a

00:03:38.640 --> 00:03:40.710
valuable search has created local variable.

00:03:40.710 --> 00:03:48.260
I select that we got an STL session factory on SQL Session Factory manufactures an object

00:03:48.260 --> 00:03:49.740
off SQL section,

00:03:49.740 --> 00:03:56.540
so I can now say your session equals toe factory dot open session again.

00:03:56.540 --> 00:03:57.870
Session is not created.

00:03:57.870 --> 00:04:02.350
So press command one our control one on Windows created variable.

00:04:02.350 --> 00:04:05.330
Now that we have this session object,

00:04:05.330 --> 00:04:11.160
we can ask the session object toe given instance off customer deal to do that,

00:04:11.160 --> 00:04:12.550
let's simply say here,

00:04:12.550 --> 00:04:18.380
return citian dot get mapper and then say that Hey,

00:04:18.380 --> 00:04:21.780
I want an instance for customer deal.

00:04:21.780 --> 00:04:23.890
That's our actual mapper class.

00:04:23.890 --> 00:04:26.580
And this is where my batteries is now going toe.

00:04:26.580 --> 00:04:32.650
Create a class that implements this interface on the flight at different time and then

00:04:32.650 --> 00:04:37.640
create an instance off the same returns that over here once you have this particular

00:04:37.640 --> 00:04:38.170
function,

00:04:38.170 --> 00:04:38.600
really,

00:04:38.600 --> 00:04:40.230
you can call this function,

00:04:40.230 --> 00:04:45.510
get a customer beall Instant and call any of the functions in the customer deal with such

00:04:45.510 --> 00:04:46.320
as insert,

00:04:46.320 --> 00:04:46.730
update,

00:04:46.730 --> 00:04:47.090
delete,

00:04:47.090 --> 00:04:47.570
etcetera.

00:04:47.570 --> 00:04:50.820
So that's all for this lecture in the next lecture.

00:04:50.820 --> 00:04:53.420
Let's make use of this object on.

00:04:53.420 --> 00:04:57.750
Call all these functions and test to see if these things work

