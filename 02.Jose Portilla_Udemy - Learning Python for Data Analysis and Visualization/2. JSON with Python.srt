1
1

00:00:00,780  -->  00:00:01,810
Hey guys.
2

2

00:00:01,810  -->  00:00:03,330
Welcome to lecture 26.
3

3

00:00:03,330  -->  00:00:09,060
In this lecture we'll be learning how
to use JSON with Python and Pandas.
4

4

00:00:09,060  -->  00:00:12,690
JSON is the JavaScript object notation
that's used a lot around the web.
5

5

00:00:14,650  -->  00:00:21,330
So I've imported the usual numpy as np,
Pandas Series data frame as well.
6

6

00:00:21,330  -->  00:00:27,240
Let me show you an example of
what a JSON object looks like.
7

7

00:00:27,240  -->  00:00:32,855
I'm gonna copy and
paste this from the iPython notebooks.
8

8

00:00:32,855  -->  00:00:33,833
That you have links to.
9

9

00:00:33,833  -->  00:00:38,533
You can go ahead and open up that link,
and then just copy and
10

10

00:00:38,533  -->  00:00:41,829
paste it into your own iPython Notebook.
11

11

00:00:41,829  -->  00:00:46,780
So, it almost looks like
a dictionary in Python.
12

12

00:00:46,780  -->  00:00:49,470
It's very, very close to that format.
13

13

00:00:49,470  -->  00:00:56,310
In this particular JSON object, we have
a zoo animal category, if you will.
14

14

00:00:56,310  -->  00:00:58,220
We have it called lion.
15

15

00:00:58,220  -->  00:01:00,240
We have the food it eats.
16

16

00:01:00,240  -->  00:01:01,770
It eats meat vegetables and honey.
17

17

00:01:03,140  -->  00:01:04,800
We'll have a descriptor for its fur.
18

18

00:01:04,800  -->  00:01:06,170
It's golden.
19

19

00:01:06,170  -->  00:01:09,120
It doesn't have any clothes
because it's an animal.
20

20

00:01:09,120  -->  00:01:11,570
And, then we have its diet.
21

21

00:01:14,030  -->  00:01:18,290
And that will consist of, for
example, if there's a zoo animal,
22

22

00:01:18,290  -->  00:01:22,860
gazelle, its food that it eats
is grass and its fur is brown.
23

23

00:01:22,860  -->  00:01:27,720
So we can have several layers of
zoo animals in the JSON object.
24

24

00:01:27,720  -->  00:01:31,060
So we can only have two zoo animals here,
the lion and the gazelle and
25

25

00:01:31,060  -->  00:01:36,560
the gazelle can only be
part of the lions diet.
26

26

00:01:37,720  -->  00:01:43,800
Okay, so we're gonna import
the JSON module to work with it.
27

27

00:01:46,490  -->  00:01:50,991
And in order to load the JSON
data we're gonna say data =
28

28

00:01:50,991  -->  00:01:58,260
json.loads and
then the object name we gave it.
29

29

00:01:58,260  -->  00:02:00,000
Go ahead and see what that looks like.
30

30

00:02:01,230  -->  00:02:02,365
We'll type out data.
31

31

00:02:02,365  -->  00:02:05,620
Cool.
32

32

00:02:05,620  -->  00:02:10,610
So now we've loaded the JSON
object as term data.
33

33

00:02:12,080  -->  00:02:17,350
We can also convert this back
to JSON if we wanted to.
34

34

00:02:17,350  -->  00:02:21,790
We can just say json.dumps and
35

35

00:02:21,790  -->  00:02:25,530
then you pass whatever you want
to dump onto as a JSON object.
36

36

00:02:27,420  -->  00:02:29,360
And now we have our JSON object here.
37

37

00:02:29,360  -->  00:02:32,030
Looks almost like a dictionary.
38

38

00:02:35,140  -->  00:02:36,710
So what else can we do?
39

39

00:02:36,710  -->  00:02:41,590
If you wanted to open up
a JSON data after loading
40

40

00:02:41,590  -->  00:02:43,750
with a data frame, you can do that.
41

41

00:02:43,750  -->  00:02:50,960
So we can name our data frame dframe,
and then load,
42

42

00:02:52,330  -->  00:02:58,210
let's say we wanted to see our data,
and we're just interested in the diet.
43

43

00:03:00,550  -->  00:03:02,350
Let's go ahead and
see what that looks like.
44

44

00:03:06,250  -->  00:03:09,148
And so now we have the diet
section of the lion, and
45

45

00:03:09,148  -->  00:03:11,150
then we have information on that.
46

46

00:03:11,150  -->  00:03:13,210
So, it was the zoo animal Gazelle.
47

47

00:03:13,210  -->  00:03:16,590
It's fur was brown, and
the food it eats is grass.
48

48

00:03:16,590  -->  00:03:21,360
We won't be working a whole lot
with JSON objects with Python.
49

49

00:03:21,360  -->  00:03:25,110
So I'll leave this to you guys if
you want to learn more about it.
50

50

00:03:25,110  -->  00:03:29,400
There's a lot of different
arguments you could pass, and
51

51

00:03:29,400  -->  00:03:33,560
custom selections, so you can
specify a specific number of rows or
52

52

00:03:33,560  -->  00:03:36,910
columns to read off from the JSON object.
53

53

00:03:36,910  -->  00:03:41,850
But, really, we won't be using
them that often in this course.
54

54

00:03:41,850  -->  00:03:46,320
This is just almost an in case
if you wanna use JSON objects.
55

55

00:03:46,320  -->  00:03:49,240
And, if you're already familiar
with JSON objects, then you'll
56

56

00:03:49,240  -->  00:03:54,700
be familiar with their formats and this is
just to teach you how to import and load.
57

57

00:03:54,700  -->  00:03:56,560
But this isn't really
a huge part of this course.
58

58

00:03:56,560  -->  00:04:00,220
So it's just for
the more you know basically.
59

59

00:04:00,220  -->  00:04:02,810
Okay, so
in the next section we'll go over,
60

60

00:04:02,810  -->  00:04:06,370
quickly, xml and
html file formats of Python.
61

61

00:04:07,370  -->  00:04:11,270
And that will be lecture 27,
so I'll see you there.
