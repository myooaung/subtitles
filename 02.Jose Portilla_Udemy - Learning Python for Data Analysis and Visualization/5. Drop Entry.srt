1
1

00:00:01,490  -->  00:00:05,220
All right guys, welcome to lecture 18.
2

2

00:00:05,220  -->  00:00:12,270
This will be about dropping entries
from data frames and series.
3

3

00:00:12,270  -->  00:00:14,940
We'll just call it drop entry.
4

4

00:00:14,940  -->  00:00:16,680
So let's take a look at how this works.
5

5

00:00:18,210  -->  00:00:20,610
First off we're gonna import the usual.
6

6

00:00:20,610  -->  00:00:24,990
You might just be copying and pasting now,
but I'll just always be typing it out.
7

7

00:00:26,270  -->  00:00:31,370
Import numpy, and
then from pandas we're gonna
8

8

00:00:31,370  -->  00:00:35,980
import Series and DataFrame.
9

9

00:00:38,140  -->  00:00:41,005
And then we're gonna import pandas as pd.
10

10

00:00:41,005  -->  00:00:43,330
Alt+Enter.
11

11

00:00:43,330  -->  00:00:44,330
All right, great.
12

12

00:00:45,830  -->  00:00:49,630
So let's create a new series to play with,
we'll call it ser1.
13

13

00:00:52,370  -->  00:00:56,810
Call series, and
what are we gonna pass as the series?
14

14

00:00:56,810  -->  00:01:04,440
Well, we'll just pass,
np.arange, function,
15

15

00:01:04,440  -->  00:01:09,550
we'll have it just be three,
switch to be 0,1,2.
16

16

00:01:09,550  -->  00:01:18,179
And then I'll set the index as a, b, c.
17

17

00:01:21,378  -->  00:01:23,150
All right, let's go ahead and
show that series.
18

18

00:01:24,990  -->  00:01:31,791
Cool, so we have our range 0, 1, 2,
those three points, and our index a, b, c.
19

19

00:01:33,890  -->  00:01:36,060
So what if we wanted to drop an index?
20

20

00:01:36,060  -->  00:01:37,520
How would we do that?
21

21

00:01:37,520  -->  00:01:40,930
Well, in pandas,
it's actually pretty easy.
22

22

00:01:40,930  -->  00:01:44,853
You just say,
call drop on your series, and
23

23

00:01:44,853  -->  00:01:50,220
then put the object you wanna drop,
so that index label.
24

24

00:01:50,220  -->  00:01:55,660
Say let's say we wanted to drop b, and
then boom, that whole row is dropped.
25

25

00:01:55,660  -->  00:01:58,460
Anything that was indexed
with b is now dropped.
26

26

00:02:00,690  -->  00:02:02,460
So, let's look at how this
works with a data frame.
27

27

00:02:03,760  -->  00:02:06,520
In order to do that,
let's make a data frame.
28

28

00:02:06,520  -->  00:02:11,280
So we'll make dframe1, call DataFrame.
29

29

00:02:12,860  -->  00:02:18,060
And let's go ahead and
input, we'll use np.arange
30

30

00:02:18,060  -->  00:02:22,530
to create a array of nine numbers, and
31

31

00:02:22,530  -->  00:02:27,320
then, we'll call reshape on it
like we've done in the past.
32

32

00:02:28,830  -->  00:02:31,780
And we'll just make it a 3 x 3 matrix.
33

33

00:02:32,810  -->  00:02:33,600
Awesome.
So
34

34

00:02:33,600  -->  00:02:38,520
now that we have our data value points,
let's create an index.
35

35

00:02:40,190  -->  00:02:43,270
In this case,
I'm just gonna make the index
36

36

00:02:43,270  -->  00:02:47,780
city initials just to mix it up a bit.
37

37

00:02:51,070  -->  00:02:55,440
And last we just need to name the columns,
and
38

38

00:02:55,440  -->  00:02:57,490
we do that by passing
the columns argument.
39

39

00:02:58,560  -->  00:03:04,070
And let's make a list, so
I'll make one pop for population,
40

40

00:03:05,160  -->  00:03:10,075
maybe another for size,
and then a year column.
41

41

00:03:10,075  -->  00:03:13,838
We won't actually be filling
this with real data, so,
42

42

00:03:13,838  -->  00:03:17,580
call them whatever you want.
43

43

00:03:17,580  -->  00:03:22,020
And let's go ahead and show data,
the dframe1 to see what we got.
44

44

00:03:22,020  -->  00:03:26,991
All right, so we have our arange of
nine points, 0, 1, 2, 3, 4, 5, 6, 7, 8,
45

45

00:03:26,991  -->  00:03:31,000
arranged or reshaped into a 3 x 3 matrix.
46

46

00:03:31,000  -->  00:03:36,860
We have our index SF, LA, NY, and
the column names pop, size, and year.
47

47

00:03:39,000  -->  00:03:44,130
So if we wanna drop a row, we do it
just like we did for a data frame.
48

48

00:03:44,130  -->  00:03:49,310
We call a drop on the data frame, and then
I give the index of the row we wanna drop.
49

49

00:03:49,310  -->  00:03:54,173
So if we wanted to drop the index LA row,
we'll do that,
50

50

00:03:54,173  -->  00:03:56,765
and that will get rid of that.
51

51

00:03:58,364  -->  00:04:03,750
So, this doesn't actually
permanently affect your array.
52

52

00:04:03,750  -->  00:04:08,864
If you wanted that to happen,
you'd have to,
53

53

00:04:08,864  -->  00:04:12,938
save another array, with the drop.
54

54

00:04:16,416  -->  00:04:24,230
And now, if I see dframe2 and show it,
it's gonna drop it permanently.
55

55

00:04:24,230  -->  00:04:28,473
But the original dframe, whoops sorry,
56

56

00:04:28,473  -->  00:04:34,070
drame1, will still retain LA.
57

57

00:04:34,070  -->  00:04:36,490
So what if we wanted to drop a column?
58

58

00:04:36,490  -->  00:04:39,900
Well, it's a very similar process.
59

59

00:04:39,900  -->  00:04:41,860
So dframe1, drop.
60

60

00:04:43,580  -->  00:04:48,195
You give the column name, year, but
now since we're not gonna be dropping
61

61

00:04:48,195  -->  00:04:53,010
arow we need to specify
which axis we wanna use, and
62

62

00:04:53,010  -->  00:04:58,097
in this case the axis for
the columns is axis=1.
63

63

00:05:01,050  -->  00:05:05,080
By default the drop uses axis=0,
which would be your rows.
64

64

00:05:05,080  -->  00:05:06,655
The columns would be axis=1.
65

65

00:05:07,910  -->  00:05:13,364
And so you can see we've dropped the year
column and now just have a 3 x 2.
66

66

00:05:13,364  -->  00:05:16,180
And that's about it for dropping entries.
67

67

00:05:16,180  -->  00:05:17,435
You just use .drop.
68

68

00:05:17,435  -->  00:05:19,575
If you wanna drop a row,
69

69

00:05:19,575  -->  00:05:24,340
you just gotta name the index of that row,
and it'll drop it for you.
70

70

00:05:24,340  -->  00:05:27,710
If you wanna drop a column,
just gotta name the column, and
71

71

00:05:27,710  -->  00:05:31,700
then specify that it's on the 1 axis,
or axis=1.
72

72

00:05:31,700  -->  00:05:33,320
Cool.
73

73

00:05:33,320  -->  00:05:36,710
So next we're gonna learn about
selecting entries in the data frame.
74

74

00:05:37,990  -->  00:05:38,930
All right, I'll see you there.
