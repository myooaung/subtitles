WEBVTT
1
1

00:00:01.210  -->  00:00:06.370
Hey everybody, in this notebook slash
lecture, we're gonna be going over
2

2

00:00:06.370  -->  00:00:09.990
just a quick mild introduction
to the normal distribution.
3

3

00:00:09.990  -->  00:00:13.310
Before you check this out you should
look at the binomial distribution first.
4

4

00:00:14.660  -->  00:00:17.170
So we'll just start with
a quick definition of
5

5

00:00:17.170  -->  00:00:19.760
the probability density function for
a normal distribution,
6

6

00:00:19.760  -->  00:00:24.360
and then we'll see how to create that
distribution either using SciPy or NumPy.
7

7

00:00:26.920  -->  00:00:29.619
So the distribution is defined
by this PDF right here.
8

8

00:00:29.619  -->  00:00:32.099
You can see right here.
9

9

00:00:32.099  -->  00:00:36.899
And this Z term is equal
to X minus mu over sigma,
10

10

00:00:36.899  -->  00:00:43.379
where mu is equal to the mean,
sigma is the standard deviation,
11

11

00:00:43.379  -->  00:00:48.430
and then you have pi and
Euler's number N dot PDF.
12

12

00:00:48.430  -->  00:00:53.420
So the total area bounded by that
curve of that PDF function and
13

13

00:00:53.420  -->  00:00:55.700
the X axis is equal to one.
14

14

00:00:55.700  -->  00:00:57.800
So one is your total probability space,
and
15

15

00:00:57.800  -->  00:01:00.190
that's equal to the area under that curve.
16

16

00:01:00.190  -->  00:01:02.639
And we'll see that curve in just a second.
17

17

00:01:02.639  -->  00:01:07.363
So the area under the curve between
two ordinates, such as X equals A and
18

18

00:01:07.363  -->  00:01:09.801
X equals B, where B is bigger than A,
19

19

00:01:09.801  -->  00:01:13.850
that represents the probability
that X lies between A and B.
20

20

00:01:13.850  -->  00:01:18.380
So, you would express that
probability as the probability of X
21

21

00:01:19.570  -->  00:01:20.920
greater than A and less than B.
22

22

00:01:22.640  -->  00:01:27.460
So if you remember from
continuous distributions,
23

23

00:01:27.460  -->  00:01:31.380
you can only take the probability for
a range of values.
24

24

00:01:31.380  -->  00:01:35.350
So, in this case, we're discussing
the probability that X is between A and B.
25

25

00:01:36.880  -->  00:01:37.950
So let's go ahead and look at the curve.
26

26

00:01:37.950  -->  00:01:39.790
I'm just gonna scroll down here for
a second.
27

27

00:01:40.830  -->  00:01:45.260
So I'm using this image from Wikipedia for
the normal distribution.
28

28

00:01:48.680  -->  00:01:50.850
So you have the probability
on the Y axis and
29

29

00:01:50.850  -->  00:01:56.130
the values on the X axis, and there's
some interesting stuff going on here.
30

30

00:01:56.130  -->  00:01:59.340
There's tons of different little things,
but let's go ahead and
31

31

00:01:59.340  -->  00:02:00.430
look at the basics first.
32

32

00:02:02.440  -->  00:02:05.900
So it has a lower tail on the left and
an upper tail on the right.
33

33

00:02:05.900  -->  00:02:09.309
So it has these two tails,
and the curve is symmetric so
34

34

00:02:09.309  -->  00:02:13.704
you can see that the right hand side
is symmetric to the left hand side.
35

35

00:02:13.704  -->  00:02:16.675
Now the peak occurs at the mean, so
36

36

00:02:16.675  -->  00:02:22.160
this peak of that normal
distribution occurs at the mean.
37

37

00:02:22.160  -->  00:02:26.700
So, X with a bar over it, and then
38

38

00:02:26.700  -->  00:02:30.660
what the standard deviation does to your
curve is it gives it a different shape.
39

39

00:02:30.660  -->  00:02:34.067
If you have a really
small standard deviation,
40

40

00:02:34.067  -->  00:02:39.107
then you're gonna have a narrow and
tall normal distribution curve.
41

41

00:02:39.107  -->  00:02:44.167
And if you have a large
standard deviation,
42

42

00:02:44.167  -->  00:02:49.740
you'll have a shallower and fatter curve.
43

43

00:02:49.740  -->  00:02:51.610
It's gonna be a little flat.
44

44

00:02:53.490  -->  00:02:57.900
So for the normal distributions, you can
see what percentages of values lie between
45

45

00:02:57.900  -->  00:03:00.249
a plus or minus of the standard deviation.
46

46

00:03:00.249  -->  00:03:05.065
So about 68% of your values lie
between one standard deviation.
47

47

00:03:05.065  -->  00:03:10.657
95% of your values lie between plus or
minus two standard deviations,
48

48

00:03:10.657  -->  00:03:15.179
and then 99.7 lie between
three standard deviations.
49

49

00:03:15.179  -->  00:03:18.820
Great, and
you can see that here on that chart.
50

50

00:03:20.560  -->  00:03:21.060
Cool.
51

51

00:03:22.730  -->  00:03:26.000
So then there's also Z score values, and
52

52

00:03:26.000  -->  00:03:29.680
that just counts how many
standard deviations you are away.
53

53

00:03:29.680  -->  00:03:32.660
So plus or minus one Z score
is the same as just plus or
54

54

00:03:32.660  -->  00:03:35.840
minus one standard deviation for
the normal distribution.
55

55

00:03:37.150  -->  00:03:39.490
Great, and
you can check out that Wikipedia image.
56

56

00:03:39.490  -->  00:03:40.830
There's tons of information here.
57

57

00:03:40.830  -->  00:03:42.290
This is just a mild introduction to it.
58

58

00:03:44.410  -->  00:03:47.180
So let's learn how to use scipy
to create a normal distribution.
59

59

00:03:48.830  -->  00:03:53.980
Here I'm just importing matplotlib as mpl,
pyplot as plt, and
60

60

00:03:53.980  -->  00:03:57.580
calling that inline function so I can see
my normal distribution in my notebook.
61

61

00:03:59.540  -->  00:04:02.990
So from scipy I'm gonna
import stats library.
62

62

00:04:02.990  -->  00:04:04.960
I'll set the mean and
set the standard deviation.
63

63

00:04:06.700  -->  00:04:11.411
Then I'm gonna create a range using numpy
arrange, which we've seen a bunch in
64

64

00:04:11.411  -->  00:04:16.427
the past, and I'll set it from negative
four to four, with a step size of 0.01.
65

65

00:04:16.427  -->  00:04:21.811
Then creating the normal distribution for
the range, I can just say stats dot norm
66

66

00:04:21.811  -->  00:04:27.587
dot PDF, so probability density function,
and then the arguments I'm gonna pass is,
67

67

00:04:27.587  -->  00:04:32.300
the range, I wanna create that
normal distribution for it.
68

68

00:04:32.300  -->  00:04:34.690
And then its mean and
its standard deviation.
69

69

00:04:34.690  -->  00:04:37.180
And I'll set that equal to Y.
70

70

00:04:37.180  -->  00:04:41.993
And then all I'm gonna
do is say PLT dot plot,
71

71

00:04:41.993  -->  00:04:46.970
X, Y, and don't worry about these fills,
they're not used in this case.
72

72

00:04:46.970  -->  00:04:49.820
So all I really did was
just PLT dot plot here.
73

73

00:04:52.510  -->  00:04:55.570
Great, and now we see our plot, and
74

74

00:04:55.570  -->  00:04:58.870
that's what our theoretical
normal distribution looks like.
75

75

00:05:00.280  -->  00:05:02.730
So we can also use numpy to
create the normal distribution.
76

76

00:05:04.170  -->  00:05:09.840
You can import numpy as np, set the mean
and standard deviation, so I'll say mu and
77

77

00:05:09.840  -->  00:05:15.540
sigma is, zero and 0.1 in respectively,
and now I can grab up to a,
78

78

00:05:15.540  -->  00:05:19.740
well, up to as many random numbers I
want from the normal distribution.
79

79

00:05:19.740  -->  00:05:23.443
And I can do that by saying np
dot random dot normal methods.
80

80

00:05:23.443  -->  00:05:27.064
And I'm gonna pass my mean and
standard deviation, and
81

81

00:05:27.064  -->  00:05:30.770
then as an argument,
the number of values I want.
82

82

00:05:30.770  -->  00:05:34.277
So in this case I just
want 1,000 random numbers,
83

83

00:05:34.277  -->  00:05:38.698
I'll put that as a norm set, and
now let's plot it using seaborn, so
84

84

00:05:38.698  -->  00:05:42.755
I'll import seaborn as SNS, and
I'll plot a histogram of it.
85

85

00:05:42.755  -->  00:05:47.337
So I'm gonna plot that 1,000
random numbers I just grabbed from
86

86

00:05:47.337  -->  00:05:52.315
the normal distribution using numpy,
and I'll set my bins equal to 50.
87

87

00:05:52.315  -->  00:05:59.050
And there we have it, pretty much
looks like a normal distribution.
88

88

00:05:59.050  -->  00:06:00.330
Interesting that there's
a little dip here.
89

89

00:06:01.490  -->  00:06:06.750
Okay, so there's a ton of information
to go over for the normal distribution.
90

90

00:06:06.750  -->  00:06:09.270
It's one of the most well
studied distributions.
91

91

00:06:09.270  -->  00:06:13.320
So this notebook really just serves as
a very mild introduction to the entire
92

92

00:06:14.510  -->  00:06:16.820
study of the normal distribution.
93

93

00:06:16.820  -->  00:06:21.480
So if you want more information, just
check out these following resources and
94

94

00:06:21.480  -->  00:06:22.068
the links here.
95

95

00:06:22.068  -->  00:06:24.889
All right, great, thanks.
