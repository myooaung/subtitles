1
1

00:00:01,290  -->  00:00:02,150
Okay, guys.
2

2

00:00:02,150  -->  00:00:04,730
This is Lecture 11 now.
3

3

00:00:06,470  -->  00:00:11,084
And this will be about
Universal Array Functions.
4

4

00:00:15,226  -->  00:00:20,666
So, let's start off by importing numpy,
as np, Alt+Enter.
5

5

00:00:20,666  -->  00:00:25,560
And let's go ahead and
make an array to start off with.
6

6

00:00:27,480  -->  00:00:33,680
We'll just call 11 points and show it so
we can have zero through ten in our array.
7

7

00:00:35,805  -->  00:00:40,515
So universal functions are basic functions
that you can apply to every value in
8

8

00:00:40,515  -->  00:00:41,166
an array.
9

9

00:00:41,166  -->  00:00:49,596
So for instance we can take
square roots by calling np.sqrt.
10

10

00:00:49,596  -->  00:00:51,716
And we can call it an array.
11

11

00:00:51,716  -->  00:00:57,476
And now we're taking the square
root of every value in the array.
12

12

00:00:57,476  -->  00:01:00,839
So if we look at four,
we should have a two there, yep, and
13

13

00:01:00,839  -->  00:01:02,361
a nine cuz you have three.
14

14

00:01:02,361  -->  00:01:03,570
Cool.
15

15

00:01:03,570  -->  00:01:06,161
So what other things can we do?
16

16

00:01:06,161  -->  00:01:13,220
We could possibly take the exponential
of every value in the array.
17

17

00:01:13,220  -->  00:01:18,540
So basically have e to the power of
the number, the value point in that array.
18

18

00:01:19,980  -->  00:01:24,120
So if we run that, that's what we get.
19

19

00:01:24,120  -->  00:01:25,290
First value makes sense.
20

20

00:01:25,290  -->  00:01:29,136
Right?
Cuz e to the power of zero is just one.
21

21

00:01:29,136  -->  00:01:34,510
So that worked out.
22

22

00:01:34,510  -->  00:01:37,080
There are also binary functions.
23

23

00:01:37,080  -->  00:01:40,670
Those will require two arrays
cuz of the term binary.
24

24

00:01:40,670  -->  00:01:43,230
That makes sense.
25

25

00:01:43,230  -->  00:01:48,730
So how about, in order to see that,
we'll create a random array.
26

26

00:01:48,730  -->  00:01:53,460
In order to do that,
we'll call numpy, using np.
27

27

00:01:53,460  -->  00:01:57,571
Then we'll call random
from the numpy library.
28

28

00:01:57,571  -->  00:02:04,859
And then we'll call a random normal
distribution, and we'll have it be 10.
29

29

00:02:07,061  -->  00:02:09,391
And let's go ahead and see that array.
30

30

00:02:09,391  -->  00:02:11,974
And if you don't quite get
what we just did here,
31

31

00:02:11,974  -->  00:02:15,450
we'll being going over it a lot
more throughout the course.
32

32

00:02:15,450  -->  00:02:17,020
So don't worry about that too much.
33

33

00:02:17,020  -->  00:02:21,051
Let's go ahead and Alt+Enter.
34

34

00:02:21,051  -->  00:02:23,414
Cool.
So, now we have our array,
35

35

00:02:23,414  -->  00:02:28,151
that's a normal distribution
of some random numbers.
36

36

00:02:28,151  -->  00:02:29,431
Let's create another one.
37

37

00:02:29,431  -->  00:02:37,151
np.random.randn of 10.
38

38

00:02:37,151  -->  00:02:39,861
And let's go ahead and seed that as well.
39

39

00:02:39,861  -->  00:02:43,501
Cool, there's our other guy.
40

40

00:02:43,501  -->  00:02:47,361
So in order to do some binary functions.
41

41

00:02:47,361  -->  00:02:55,400
All that means is functions
that use two arrays.
42

42

00:02:55,400  -->  00:02:57,055
So for instance, adding arrays.
43

43

00:02:59,010  -->  00:03:02,660
So this will add every
value A to every value B.
44

44

00:03:02,660  -->  00:03:05,970
So this first value of A to
this first value of B.
45

45

00:03:05,970  -->  00:03:08,240
Let's go ahead and see how that looks.
46

46

00:03:09,440  -->  00:03:14,230
So we have negative 0.3,
blah, blah, blah, plus 0.11,
47

47

00:03:14,230  -->  00:03:18,170
gets you negative 0.23,
et cetera, et cetera.
48

48

00:03:18,170  -->  00:03:22,781
Other things we can do is find the max or
49

49

00:03:22,781  -->  00:03:25,816
min between two arrays.
50

50

00:03:25,816  -->  00:03:29,749
So in order to do that,
51

51

00:03:29,749  -->  00:03:34,096
we can say np.maximum,
52

52

00:03:34,096  -->  00:03:37,616
called two arrays.
53

53

00:03:37,616  -->  00:03:44,860
And this will find the maximum
between the two array values.
54

54

00:03:44,860  -->  00:03:47,120
So to see what I'm talking about here.
55

55

00:03:48,210  -->  00:03:51,564
If we look at our original arrays, A and
56

56

00:03:51,564  -->  00:03:55,440
B, it will compare
the values at each index.
57

57

00:03:55,440  -->  00:04:01,342
So the first one was
negative 0.35 in array A,
58

58

00:04:01,342  -->  00:04:04,301
and 0.11 in array B.
59

59

00:04:04,301  -->  00:04:08,120
So it's gonna compare those and
see which one was the max and
60

60

00:04:08,120  -->  00:04:12,330
then set that as the value for
that array you just called.
61

61

00:04:12,330  -->  00:04:15,660
It's gonna do that for
each of the values comparing A and B.
62

62

00:04:15,660  -->  00:04:21,910
And you can also check for
minimums just by calling np.minimum.
63

63

00:04:21,910  -->  00:04:26,060
So, for a full extensive list
of all the universal functions
64

64

00:04:26,060  -->  00:04:27,590
you can check out the documentation.
65

65

00:04:28,800  -->  00:04:32,900
So I'm just gonna Edit > Copy and
Edit > Paste the website here.
66

66

00:04:34,070  -->  00:04:39,525
And again like always,
you can just click on
67

67

00:04:39,525  -->  00:04:46,020
the links to see the IPython
notebooks from GitHub.
68

68

00:04:46,020  -->  00:04:51,280
If we wanna see this website, a little
trick we can do is import webbrowser
69

69

00:04:54,221  -->  00:04:58,177
And then call webbrowser,
70

70

00:04:58,177  -->  00:05:02,615
to open that website link.
71

71

00:05:02,615  -->  00:05:03,245
Let's see if that works.
72

72

00:05:06,075  -->  00:05:07,965
Yep, looks like it did.
73

73

00:05:07,965  -->  00:05:14,590
So here, all the available math
operations, these universal functions.
74

74

00:05:14,590  -->  00:05:18,170
So you can add, subtract,
multiply, divide.
75

75

00:05:18,170  -->  00:05:21,310
Take the log of the sum of the exponents.
76

76

00:05:21,310  -->  00:05:25,320
Find remainders, find signs.
77

77

00:05:25,320  -->  00:05:26,710
There's a whole bunch of stuff you can do.
78

78

00:05:26,710  -->  00:05:30,180
Take square roots, get the squares.
79

79

00:05:30,180  -->  00:05:32,940
And we'll be using this as we need them.
80

80

00:05:32,940  -->  00:05:35,140
And you can also do
trigonometric functions.
81

81

00:05:35,140  -->  00:05:41,281
Get the sines of the values, the cosines,
the arctans, et cetera, et cetera.
82

82

00:05:41,281  -->  00:05:41,841
The hyperbolics.
83

83

00:05:41,841  -->  00:05:49,650
And then there's comparison functions
as well, which we'll look into later.
84

84

00:05:49,650  -->  00:05:52,920
So you can go ahead and check out
the documentation on these universal
85

85

00:05:52,920  -->  00:05:57,952
functions, in case you're looking for
extra ones or more info.
86

86

00:05:57,952  -->  00:06:00,320
All right.
87

87

00:06:00,320  -->  00:06:02,770
So that'll be the end of lecture 11 and
I'll see you at the next one.
