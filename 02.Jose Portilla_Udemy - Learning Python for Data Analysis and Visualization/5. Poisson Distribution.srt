1
1

00:00:01,560  -->  00:00:02,590
Hey everybody.
2

2

00:00:02,590  -->  00:00:06,380
In this video we're going to be
going over the Poisson distribution.
3

3

00:00:06,380  -->  00:00:10,750
So before you check out this notebook
I suggest you learn about the binomial
4

4

00:00:10,750  -->  00:00:11,740
distribution first.
5

5

00:00:13,310  -->  00:00:16,990
Once you check that out come
back to this video and notebook.
6

6

00:00:19,120  -->  00:00:23,008
So, Poisson Distributions focuses
on the number of discrete events or
7

7

00:00:23,008  -->  00:00:26,070
occurrences over a specified interval.
8

8

00:00:26,070  -->  00:00:28,740
So over a specified amount of time or
distance.
9

9

00:00:28,740  -->  00:00:33,460
So what we're going to do in this notebook
is just look at the formal definition,
10

10

00:00:33,460  -->  00:00:37,580
get a breakdown of what that actually
means, and then see an example.
11

11

00:00:37,580  -->  00:00:39,730
Look at some of the characteristics
such as the mean and
12

12

00:00:39,730  -->  00:00:43,260
standard deviation and then see how we
can use si pi to look at all of that.
13

13

00:00:44,360  -->  00:00:49,340
Okay, so the formal definition is
that a discrete random variable,
14

14

00:00:49,340  -->  00:00:53,760
x has a Poisson Distribution
with a parameter lambda.
15

15

00:00:53,760  -->  00:00:58,140
If for k equals Zero, one,
two, et cetera, et cetera.
16

16

00:00:58,140  -->  00:01:01,490
The probability of that mass
function of x is given by, so
17

17

00:01:01,490  -->  00:01:04,210
here's the pmf for
the Poisson Distribution.
18

18

00:01:04,210  -->  00:01:09,271
So the probability of x equal
to k is equal to lambda
19

19

00:01:09,271  -->  00:01:16,032
to the power of k e to the power of
negative lambda over k factorial.
20

20

00:01:16,032  -->  00:01:20,727
So e is equal to 2.718,
et cetera., et cetera,
21

21

00:01:20,727  -->  00:01:28,100
to infinite amount of numbers, and
then k is the factorial, k factorial.
22

22

00:01:28,100  -->  00:01:28,600
Okay.
23

23

00:01:30,010  -->  00:01:35,670
So, Poisson Distribution has
the following characteristics, so,
24

24

00:01:35,670  -->  00:01:38,140
it needs to have discrete outcomes.
25

25

00:01:38,140  -->  00:01:43,080
So x in 0, 1, 2, 3,
just like the binomial distribution.
26

26

00:01:44,210  -->  00:01:48,410
The number of occurrences can range
to zero to infinity, theoretically,
27

27

00:01:48,410  -->  00:01:52,300
and you'll see what I mean by that in
a sentence, or in a second, excuse me.
28

28

00:01:53,520  -->  00:01:57,460
It describes the distribution
of infrequent or rare events.
29

29

00:01:58,540  -->  00:02:00,840
Each event is independent of other events.
30

30

00:02:02,560  -->  00:02:05,040
And it describes discrete
events over an interval.
31

31

00:02:05,040  -->  00:02:07,110
So it's just time or distance.
32

32

00:02:07,110  -->  00:02:10,720
And the expected number of occurrences,
or E(X),
33

33

00:02:10,720  -->  00:02:12,940
are assumed to be constant
throughout the experiment.
34

34

00:02:15,110  -->  00:02:18,030
So I know that's a lot but
that's all pretty formal stuff.
35

35

00:02:18,030  -->  00:02:19,660
So let's go ahead and
look at an example and
36

36

00:02:19,660  -->  00:02:22,850
see what that actually breaks down like,
in an example problem.
37

37

00:02:24,370  -->  00:02:25,541
So, what does an example
question look like?
38

38

00:02:25,541  -->  00:02:31,541
Let's say the McDonald's has a lunch
rush from 12:30pm to 1:00pm.
39

39

00:02:31,541  -->  00:02:35,563
And from looking at customer
sales from previous days,
40

40

00:02:35,563  -->  00:02:41,664
we know that an average of 10 customers
enter during 12:30pm to 1:00pm.
41

41

00:02:41,664  -->  00:02:46,319
So what's the probability the exactly
7 customers enter during lunch rush?
42

42

00:02:47,350  -->  00:02:49,880
And then we'll also ask what's
the probability of that more than ten
43

43

00:02:49,880  -->  00:02:50,670
customers arrive.
44

44

00:02:52,890  -->  00:02:55,760
We can begin by thinking about
how many customers we expect
45

45

00:02:55,760  -->  00:02:58,740
to come into McDonald's during lunch rush.
46

46

00:02:58,740  -->  00:03:00,881
So we're actually already given
the information, it's ten.
47

47

00:03:00,881  -->  00:03:07,836
This means that the mean is 10, and
that our expected value E(X)=10,
48

48

00:03:07,836  -->  00:03:12,551
so excuse me for
writing a exclamation point there.
49

49

00:03:12,551  -->  00:03:13,990
I just got excited.
50

50

00:03:13,990  -->  00:03:15,120
It's not actually a factorial.
51

51

00:03:17,510  -->  00:03:19,230
Okay.
In the Poisson Distribution,
52

52

00:03:19,230  -->  00:03:19,840
this is Lambda.
53

53

00:03:20,940  -->  00:03:25,300
So the Lambda is the mean for
a Poisson Distribution and
54

54

00:03:25,300  -->  00:03:28,310
it's the expected number of occurrences
over the specified interval.
55

55

00:03:30,290  -->  00:03:34,470
So, now that we know what Lambda is,
we can plug that information into pmf,
56

56

00:03:34,470  -->  00:03:38,620
the probability mass function and
get an answer.
57

57

00:03:38,620  -->  00:03:40,540
So let's use Python to see how that works.
58

58

00:03:40,540  -->  00:03:44,120
And we'll start of by
answering the first question.
59

59

00:03:44,120  -->  00:03:47,711
What's the probability that exactly
seven customers enter during lunch rush?
60

60

00:03:50,171  -->  00:03:53,857
A quick note,
when you're working with Python,
61

61

00:03:53,857  -->  00:03:56,790
don't use lambda as an object name.
62

62

00:03:56,790  -->  00:03:59,530
It's already used for
special lambda functions in Python.
63

63

00:03:59,530  -->  00:04:03,910
So, in this case,
setting lambda I use the object name lamb.
64

64

00:04:05,860  -->  00:04:07,470
So, lambda's equal to ten.
65

65

00:04:07,470  -->  00:04:12,180
Since we know That on average,
ten customers enter during lunch rush.
66

66

00:04:12,180  -->  00:04:16,070
And we set K equal to seven,
since we want to know
67

67

00:04:16,070  -->  00:04:19,560
what's the probability that exactly
seven customers enter during lunch rush.
68

68

00:04:21,420  -->  00:04:24,560
I'm going to set up E and
factorial math statements.
69

69

00:04:24,560  -->  00:04:28,060
So from math, I'm importing
the exponential and factorial.
70

70

00:04:29,610  -->  00:04:31,560
And then from the future
I'm importing division, so
71

71

00:04:31,560  -->  00:04:33,320
I don't have to worry about
floating point numbers.
72

72

00:04:34,370  -->  00:04:37,600
And then I'm going to plug that
all in to that probability math
73

73

00:04:37,600  -->  00:04:39,580
function we saw earlier.
74

74

00:04:39,580  -->  00:04:44,330
And then I'm going to print it out,
times a hundred in percentage form.
75

75

00:04:44,330  -->  00:04:47,390
So now I see there's a 9.01% chance
76

76

00:04:47,390  -->  00:04:50,020
that exactly seven customers
show up at lunch rush.
77

77

00:04:51,250  -->  00:04:53,680
So that's how we create the PMF manually.
78

78

00:04:53,680  -->  00:04:55,543
But we can also do it
automatically with SciPi.
79

79

00:04:55,543  -->  00:04:59,223
So from SciPi.stats,
80

80

00:04:59,223  -->  00:05:03,830
you can just import poisson.
81

81

00:05:03,830  -->  00:05:05,530
So we set our mean equal to ten.
82

82

00:05:05,530  -->  00:05:07,970
So I'm going to say mu is equal to ten.
83

83

00:05:07,970  -->  00:05:09,250
Customers for the lunch rush.
84

84

00:05:10,720  -->  00:05:13,120
Remember that was just
equal to lambda as well.
85

85

00:05:13,120  -->  00:05:19,290
And then we can get the mean and variance
by calling .stats method on the poisson.
86

86

00:05:19,290  -->  00:05:23,360
So I can say poisson.stats import lambda,
87

87

00:05:23,360  -->  00:05:27,690
and, set mean and variance equal to that.
88

88

00:05:27,690  -->  00:05:30,590
So I can get the mean and
variance out of that.
89

89

00:05:30,590  -->  00:05:34,610
I can also calculate the probability
mass function at certain points.
90

90

00:05:34,610  -->  00:05:40,670
So for instance we wanted to know what are
the odds of exactly 7 customers arriving.
91

91

00:05:40,670  -->  00:05:47,990
So I can pass the argument
7 Into the .pmf method.
92

92

00:05:47,990  -->  00:05:50,530
So go ahead and
just print out those statements.
93

93

00:05:50,530  -->  00:05:54,330
And we'll see that there's a 9.01%
chance that exactly 7 customers
94

94

00:05:54,330  -->  00:05:56,580
show up at the lunch rush and
that the mean is 10.00.
95

95

00:05:56,580  -->  00:06:00,410
So that's awesome,
because our manual results match up
96

96

00:06:00,410  -->  00:06:03,759
perfectly with scipy's built-in
stats distribution generator.
97

97

00:06:04,900  -->  00:06:05,560
Great.
98

98

00:06:05,560  -->  00:06:08,330
So, instead of having to
write all this out, manually,
99

99

00:06:08,330  -->  00:06:13,440
you can just use scipy.ststs and
import Poisson, great.
100

100

00:06:15,160  -->  00:06:17,950
So what if I wanted to see
the entire distribution?
101

101

00:06:17,950  -->  00:06:19,961
So we're going to need this information
to answer that second question.
102

102

00:06:19,961  -->  00:06:22,945
And the second question was,
if we scroll back up here,
103

103

00:06:22,945  -->  00:06:26,261
what is the probability that
more than ten customers arrive?
104

104

00:06:30,267  -->  00:06:34,576
So if you scroll down here we want
to see the entire distribution, so
105

105

00:06:34,576  -->  00:06:37,260
let's get the PMF and plot it out.
106

106

00:06:37,260  -->  00:06:39,420
So first, the PMF looks like this.
107

107

00:06:39,420  -->  00:06:40,520
We're going toa import numpy as np.
108

108

00:06:42,320  -->  00:06:45,960
And let's see the PMF all
the way to 30 customers.
109

109

00:06:45,960  -->  00:06:50,770
Remember theoretically an infinite number
of customers can come during lunch rush.
110

110

00:06:50,770  -->  00:06:54,170
It's super unlikely, but
it's technically possible that
111

111

00:06:54,170  -->  00:06:58,210
an infinite number of customers
come in during that lunch rush.
112

112

00:06:58,210  -->  00:07:02,290
So I'm going to see the odds all
the way to 30 customers then I'm going
113

113

00:07:02,290  -->  00:07:05,740
to say an average of ten customers for
the time interval.
114

114

00:07:05,740  -->  00:07:06,961
So I'll set lamb = 10 again.
115

115

00:07:06,961  -->  00:07:12,401
And the pmf will use the plot so
I'm going to say poisson.pmf.
116

116

00:07:12,401  -->  00:07:15,585
And pass k in lambda arguments and
117

117

00:07:15,585  -->  00:07:20,056
set that equal to
an object called pmf_pois.
118

118

00:07:20,056  -->  00:07:24,620
And now if I want to plot it,
I can just simply say,
119

119

00:07:24,620  -->  00:07:27,700
import matplotlib.pyplot as plt.
120

120

00:07:27,700  -->  00:07:29,031
I'll import seaborn as sns.
121

121

00:07:29,031  -->  00:07:34,456
And then remember if we want to see
the matplotlibs output inline your
122

122

00:07:34,456  -->  00:07:38,471
notebook, you have to use
this special magic commands.
123

123

00:07:38,471  -->  00:07:42,411
And then when you simply
just call that bar plot.
124

124

00:07:42,411  -->  00:07:47,671
Plt.bar With k and pmf_pois.
125

125

00:07:50,100  -->  00:07:51,280
And this is our output.
126

126

00:07:53,240  -->  00:07:58,420
So now we see the probability
distribution for up to 30 customers.
127

127

00:07:58,420  -->  00:08:02,860
So you can see as you
basically pass around 22-ish,
128

128

00:08:02,860  -->  00:08:06,210
you get very, very,
very small probabilities.
129

129

00:08:06,210  -->  00:08:10,340
And you can barely see them on this graph,
that that many customers arrives.
130

130

00:08:10,340  -->  00:08:12,320
And that makes sense since
our average was ten.
131

131

00:08:13,850  -->  00:08:16,670
So what's the probability that
more than ten customers arrive?
132

132

00:08:16,670  -->  00:08:22,920
So in order to do that we would just need
to sum every value of the bars past ten.
133

133

00:08:25,480  -->  00:08:30,320
We can just do this automatically using
a Cumulative Distribution Function,
134

134

00:08:30,320  -->  00:08:32,500
also known as CDFs.
135

135

00:08:32,500  -->  00:08:36,540
And this describes a probability that a
random variable x with a given probability
136

136

00:08:36,540  -->  00:08:40,280
distribution, which is
the Poisson in our current case,
137

137

00:08:40,280  -->  00:08:42,780
will be found to have a value less than or
equal to x.
138

138

00:08:42,780  -->  00:08:47,650
So you can think of it as it's just
accumulating all the probability.
139

139

00:08:47,650  -->  00:08:51,290
So it's just summing that all up.
140

140

00:08:51,290  -->  00:08:54,710
So what this means is if we use
a CDF to calculate the probability.
141

141

00:08:54,710  -->  00:08:58,280
of ten or less customers showing up,
we can take that probability and then
142

142

00:08:58,280  -->  00:09:01,880
subtract it from the total probability
space which is always just one.
143

143

00:09:01,880  -->  00:09:04,460
The sum of all probabilities for
every number of customers.
144

144

00:09:05,710  -->  00:09:08,920
So, we're going to use scipy built in cdf.
145

145

00:09:08,920  -->  00:09:11,273
So, again, I'll set k,mu.
146

146

00:09:11,273  -->  00:09:16,961
So, K = 10 for ten customers, and the mean
is ten for the average of ten customers
147

147

00:09:16,961  -->  00:09:22,011
during lunch rush and then I'm going
to say an object, the prob up to ten.
148

148

00:09:22,011  -->  00:09:27,691
So the probability of up to ten customers
or less show up is polsson.cdf.
149

149

00:09:27,691  -->  00:09:32,151
So the cumulative distribution
function with the arguments, KMU.
150

150

00:09:32,151  -->  00:09:35,796
And now I know that
the probability of that ten or
151

151

00:09:35,796  -->  00:09:42,840
less customer showing up is 58.3% but
remember the question was more than ten.
152

152

00:09:42,840  -->  00:09:47,586
So, that's just going to be equal
to one minus probably up to ten.
153

153

00:09:47,586  -->  00:09:50,240
So I'm going to say
the probability of more than ten,
154

154

00:09:50,240  -->  00:09:52,890
equals one minus probability up to ten.
155

155

00:09:52,890  -->  00:09:54,296
So I'm sorry for
these long object names but
156

156

00:09:54,296  -->  00:09:56,171
I just want to make this really
clear what I'm doing here.
157

157

00:09:56,171  -->  00:10:01,098
So now to answer that second question,
the probability that more than
158

158

00:10:01,098  -->  00:10:05,621
ten customers show up during
lunch rush is 41.7%, great.
159

159

00:10:05,621  -->  00:10:07,650
So that's just a quick overview.
160

160

00:10:07,650  -->  00:10:11,210
Take your time and
go through the notebooks yourself.
161

161

00:10:11,210  -->  00:10:14,460
There's a lot of extra stuff written
on them, and they're heavily commented.
162

162

00:10:15,530  -->  00:10:18,300
This video is just a quick guide for you.
163

163

00:10:19,730  -->  00:10:20,810
That's the basics of it, so
164

164

00:10:20,810  -->  00:10:25,010
if you want more information you can check
out these sources here at the bottom.
165

165

00:10:25,010  -->  00:10:29,310
There's the documentation for scipy,
as well as Wikipedia and Stat Trek for
166

166

00:10:29,310  -->  00:10:32,120
just basic information on
the Poisson distribution.
167

167

00:10:33,670  -->  00:10:34,680
Great.
168

168

00:10:34,680  -->  00:10:40,140
So just remember, if we scroll up here,
the Poisson Distribution has a outcomes.
169

169

00:10:40,140  -->  00:10:44,850
It's number of occurrences can range from
zero to infinity, theoretically speaking.
170

170

00:10:44,850  -->  00:10:48,050
Each event is independent
of the other events, and
171

171

00:10:48,050  -->  00:10:52,760
it describes events over and
interval such as the time or distance.
172

172

00:10:52,760  -->  00:10:54,490
All right, great.
173

173

00:10:54,490  -->  00:10:54,990
Thanks guys.
