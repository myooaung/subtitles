WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.830 --> 00:00:05.115
The type of components used so far using this

00:00:05.115 --> 00:00:09.165
app.component is classed as a global component,

00:00:09.165 --> 00:00:13.785
meaning they are instantly available to use anywhere in our application.

00:00:13.785 --> 00:00:16.860
This also includes subcomponents too.

00:00:16.860 --> 00:00:21.495
By subcomponents, I mean components which are nested inside of others.

00:00:21.495 --> 00:00:23.790
For example, not that it makes a lot sense,

00:00:23.790 --> 00:00:28.620
but we could also place our header components inside of this blog post.

00:00:28.620 --> 00:00:31.080
This template is just like our HTML,

00:00:31.080 --> 00:00:34.425
so we could place this in just like we did in the index page,

00:00:34.425 --> 00:00:37.410
but this was app-header,

00:00:37.410 --> 00:00:40.240
and also close this off.

00:00:41.120 --> 00:00:45.095
If we now save this and refresh our project,

00:00:45.095 --> 00:00:47.090
we see that our header title and

00:00:47.090 --> 00:00:51.530
our navigation links is available in each one of our blog posts,

00:00:51.530 --> 00:00:54.280
and this is because they are globally available.

00:00:54.280 --> 00:00:57.380
So unless you specifically want this behavior,

00:00:57.380 --> 00:01:03.395
we can also restrict the use of components by instead registering them locally.

00:01:03.395 --> 00:01:06.830
Local registration involves moving away from

00:01:06.830 --> 00:01:12.025
app.component and creating regular JavaScript objects.

00:01:12.025 --> 00:01:15.925
These objects need to be created above Vue.createApp,

00:01:15.925 --> 00:01:18.665
and we'll see why in just a moment.

00:01:18.665 --> 00:01:22.800
The first one is going to be for our appHeader.

00:01:22.910 --> 00:01:27.425
Just like we said, this is going to be a regular JavaScript object.

00:01:27.425 --> 00:01:31.320
The second component was for blogPost.

00:01:31.340 --> 00:01:34.040
Now, we can grab the contents of both of

00:01:34.040 --> 00:01:37.490
our components and place them inside of these objects.

00:01:37.490 --> 00:01:40.420
So the first one is the appHeader,

00:01:40.420 --> 00:01:43.709
so I'll scroll down to our appHeader component,

00:01:43.709 --> 00:01:47.540
and then we can copy all of the contents inside of these curly brace.

00:01:47.540 --> 00:01:49.190
Don't copy this curly brace,

00:01:49.190 --> 00:01:54.295
we're just going to copy the contents right down to the closing header section.

00:01:54.295 --> 00:02:00.225
Let's grab this and then paste this inside of our object.

00:02:00.225 --> 00:02:02.300
The next one is our blogPost,

00:02:02.300 --> 00:02:04.620
and we can do exactly the same.

00:02:05.550 --> 00:02:10.070
You're going to grab the props and also the template.

00:02:11.850 --> 00:02:14.250
Add this inside here.

00:02:14.250 --> 00:02:16.740
We're then going to register our intent.

00:02:16.740 --> 00:02:20.800
They use these components inside of Vue.createApp.

00:02:20.800 --> 00:02:24.770
We can do this by creating a component section,

00:02:25.490 --> 00:02:28.470
and then add a comma at the end.

00:02:28.470 --> 00:02:33.955
So the name of the first component is going to be blog-post,

00:02:33.955 --> 00:02:39.920
which is going to be equal to our object which you created above, which is blogPost.

00:02:42.190 --> 00:02:47.070
Separated by comma, the second one is going to be the appHeader.

00:02:50.030 --> 00:02:55.610
Our components are now registered to use inside of our index page.

00:02:55.610 --> 00:02:57.805
A few things to first note,

00:02:57.805 --> 00:03:00.475
the JavaScript object, which we create above,

00:03:00.475 --> 00:03:01.990
must be declared above

00:03:01.990 --> 00:03:06.665
this createApp so we can then access them inside of our components.

00:03:06.665 --> 00:03:10.185
If we also have multiple Vue instances,

00:03:10.185 --> 00:03:13.570
we can now control exactly which components

00:03:13.570 --> 00:03:17.675
we want to appear or to be available in each one.

00:03:17.675 --> 00:03:21.400
We no longer need these global components down at the bottom,

00:03:21.400 --> 00:03:28.310
so I'm going to comment out the appHeader and also the blogPost over to the browser.

00:03:28.550 --> 00:03:31.395
Refresh the page, add our blogPost,

00:03:31.395 --> 00:03:34.175
and now appearing alongside our header.

00:03:34.175 --> 00:03:37.490
But one thing to note that inside of each one

00:03:37.490 --> 00:03:40.895
of our blogPost would no longer see this appHeader.

00:03:40.895 --> 00:03:45.185
Remember from before, if we scroll up to our components,

00:03:45.185 --> 00:03:49.714
we still have in place this appHeader components inside of each blogPost,

00:03:49.714 --> 00:03:52.280
but we no longer see it inside the browser.

00:03:52.280 --> 00:03:58.579
Why is this? Well, this app-header is now a subcomponents of our blogPost,

00:03:58.579 --> 00:04:01.925
and now that our components are local rather than global,

00:04:01.925 --> 00:04:06.070
we now don't have access to our components anywhere we want to.

00:04:06.070 --> 00:04:11.300
If we did want to use this appHeader or any other components inside of here,

00:04:11.300 --> 00:04:15.280
we would also need to pass in the components option too.

00:04:15.280 --> 00:04:18.785
Just like we did inside a Vue.createApp,

00:04:18.785 --> 00:04:22.040
we can also pass in our components.

00:04:23.510 --> 00:04:26.010
This, again, is an object,

00:04:26.010 --> 00:04:30.410
and then we're going to declare that we're using this app-header,

00:04:30.670 --> 00:04:35.025
which is going to point to the appHeader object.

00:04:35.025 --> 00:04:38.290
Save and refresh, and

00:04:38.290 --> 00:04:43.130
its local registration now place our appHeader into each one of these blogPosts.

00:04:43.130 --> 00:04:45.630
Of course we don't need this for our project,

00:04:45.630 --> 00:04:51.055
so I'm going to remove this components and also the line of code inside of here.

00:04:51.055 --> 00:04:54.430
But this is an example if you did want to locally

00:04:54.430 --> 00:04:57.735
register a component inside of another one.

00:04:57.735 --> 00:05:01.400
Now, we understand more about Vue and components.

00:05:01.400 --> 00:05:04.100
Next, let's discover a better setup using

00:05:04.100 --> 00:05:08.330
a Vue CLI along with beginning our next project.
