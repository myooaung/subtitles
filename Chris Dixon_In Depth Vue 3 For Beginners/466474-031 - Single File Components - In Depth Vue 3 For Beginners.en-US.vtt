WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.290 --> 00:00:03.030
Earlier when we looked at components,

00:00:03.030 --> 00:00:05.670
we had a preview of what we're going to build now,

00:00:05.670 --> 00:00:08.245
and also the components structure too.

00:00:08.245 --> 00:00:10.700
Using this view CLI setup,

00:00:10.700 --> 00:00:13.740
we can create these components in their own file to keep

00:00:13.740 --> 00:00:17.175
them organized using the single file components method.

00:00:17.175 --> 00:00:20.520
This is possible since the CLI uses tools such

00:00:20.520 --> 00:00:23.865
as Web Park to bundle them all up for production.

00:00:23.865 --> 00:00:28.620
So we are not penalized for having lots of files to download for the user.

00:00:28.620 --> 00:00:31.850
On things to note is we do have a components folder,

00:00:31.850 --> 00:00:35.925
but we can create components anywhere inside of this source folder.

00:00:35.925 --> 00:00:39.275
But generally we group them together into the components folder,

00:00:39.275 --> 00:00:41.045
so it's more organized.

00:00:41.045 --> 00:00:44.705
Now let's create our first component for this project,

00:00:44.705 --> 00:00:47.935
which is going to be the Event.vue.

00:00:47.935 --> 00:00:49.910
As a naming convention,

00:00:49.910 --> 00:00:53.480
we generally start component names with a capital letter.

00:00:53.480 --> 00:00:56.434
These needs have the.vue extension.

00:00:56.434 --> 00:00:59.570
This Event.vue is going to be the component which we are going

00:00:59.570 --> 00:01:02.800
to use for each one of the events listed.

00:01:02.800 --> 00:01:08.030
Here, we can set up the components just like we've seen earlier with our free sections.

00:01:08.030 --> 00:01:10.355
Have the template section.

00:01:10.355 --> 00:01:14.410
We have the script section with our export defaults.

00:01:14.410 --> 00:01:17.780
Then finally at the bottom of the styles section.

00:01:17.780 --> 00:01:22.310
This works just like earlier when we looked at global and local components.

00:01:22.310 --> 00:01:25.909
We move over the template section of our HTML.

00:01:25.909 --> 00:01:31.265
This is much more convenient now since we can just write it like a regular HTML file,

00:01:31.265 --> 00:01:34.165
rather than including a this as a string.

00:01:34.165 --> 00:01:37.470
Our JavaScript goes into the scripts action,

00:01:37.470 --> 00:01:40.050
include our data, our methods,

00:01:40.050 --> 00:01:42.195
props, and others too.

00:01:42.195 --> 00:01:45.285
We then wrap this in a export default,

00:01:45.285 --> 00:01:49.290
so we can import all components into other files.

00:01:49.290 --> 00:01:54.000
The style section, it can be wrote just like a regular style sheet.

00:01:54.000 --> 00:01:57.590
The CSS we write applies to all of our application,

00:01:57.590 --> 00:02:00.740
not just the template inside of this file.

00:02:00.740 --> 00:02:05.180
However, if you do want to restrict this to only apply to the single file,

00:02:05.180 --> 00:02:07.685
we have the scoped attributes.

00:02:07.685 --> 00:02:10.430
Also, if we want to use other languages too,

00:02:10.430 --> 00:02:14.585
we can add this as a Lang attributes, within appropriate loader.

00:02:14.585 --> 00:02:17.060
Put more on this later.

00:02:17.060 --> 00:02:22.585
See our component. We first need to add some content inside of the template.

00:02:22.585 --> 00:02:28.570
Now, let's go to our Event.vue and simply add AP elements with the text of hi.

00:02:28.570 --> 00:02:32.990
At the moment, our event component is just a regular Vue file.

00:02:32.990 --> 00:02:36.875
To see it, we need to place it exactly where we want it to appear.

00:02:36.875 --> 00:02:40.065
Remember from early we hard at this App.vue file,

00:02:40.065 --> 00:02:42.060
which is the main Vue.js file,

00:02:42.060 --> 00:02:43.540
which is mounted to the DOM.

00:02:43.540 --> 00:02:46.385
So meaning everything starts from here.

00:02:46.385 --> 00:02:49.505
This is going to be the place where we can add and register,

00:02:49.505 --> 00:02:51.850
our component to display.

00:02:51.850 --> 00:02:55.215
First of all, we could remove the HelloWorld components.

00:02:55.215 --> 00:02:59.030
We can also remove this from the components folder.

00:03:01.970 --> 00:03:06.135
Then we can register our new Event.vue file.

00:03:06.135 --> 00:03:09.585
Scroll down to just below this sample object.

00:03:09.585 --> 00:03:13.240
Here we see we are still trying to import the HelloWorld example.

00:03:13.240 --> 00:03:15.730
Where instead we want to import our event,

00:03:15.730 --> 00:03:19.310
which is also inside of the components folder.

00:03:19.650 --> 00:03:23.995
We then need to register this component to use in our template.

00:03:23.995 --> 00:03:29.690
To do this, we pass in our imported name into the components object.

00:03:30.380 --> 00:03:34.575
With this now registered, we can go up to the template.

00:03:34.575 --> 00:03:38.660
Then I'll put this in between a template tags.

00:03:38.900 --> 00:03:44.640
We can even do this just like a HTML element with the opening and closing tag.

00:03:44.640 --> 00:03:47.315
Or we can also use a self-closing tag,

00:03:47.315 --> 00:03:49.685
just like we would do with an image.

00:03:49.685 --> 00:03:53.375
Save this and we see the text of high inside the browser.

00:03:53.375 --> 00:03:57.395
This is another one of the benefits of using the Vue CLI setup.

00:03:57.395 --> 00:03:59.990
By default, it includes hot reloading,

00:03:59.990 --> 00:04:01.310
so if we save the project,

00:04:01.310 --> 00:04:04.085
it will be instantly updated in the browser.

00:04:04.085 --> 00:04:06.300
We obviously don't want this message of hi,

00:04:06.300 --> 00:04:10.014
so instead we're going to go over to our Event.vue components,

00:04:10.014 --> 00:04:13.070
and replaces with our event data.

00:04:13.070 --> 00:04:17.300
Each one of our events is going to be surrounded in an article,

00:04:17.300 --> 00:04:19.980
so we can change this to an article elements.

00:04:19.980 --> 00:04:24.075
Next, a div which is going to have the class of data.

00:04:24.075 --> 00:04:27.310
Then alongside this we're going to have a second div,

00:04:27.310 --> 00:04:30.830
and this is going to have the class of countdown.

00:04:31.380 --> 00:04:34.555
This will give us the structure which we need for our events.

00:04:34.555 --> 00:04:40.205
The data section is going to contain the name and also the details for our events.

00:04:40.205 --> 00:04:44.380
Then the countdown section below is going to be the section on the right-hand side,

00:04:44.380 --> 00:04:47.680
which will count down the number of days for this events.

00:04:47.680 --> 00:04:50.110
So first inside of the data,

00:04:50.110 --> 00:04:51.700
the level three heading,

00:04:51.700 --> 00:04:53.680
which is going to be for the title.

00:04:53.680 --> 00:04:57.535
For now, we can just hard code in any event inside of here,

00:04:57.535 --> 00:04:59.800
such as a graduation,

00:04:59.800 --> 00:05:02.010
a class of name.

00:05:02.010 --> 00:05:05.355
Which will use NCSS, very soon.

00:05:05.355 --> 00:05:09.420
AP elements, which is going to be the details.

00:05:09.850 --> 00:05:14.340
Then we can hard-code some text for our details.

00:05:14.620 --> 00:05:18.370
This is going to be all of the structure for the data section,

00:05:18.370 --> 00:05:20.455
so down to the countdown.

00:05:20.455 --> 00:05:25.490
This will be split up into two sections: The first is going to be a div,

00:05:25.490 --> 00:05:27.020
which will contain a button.

00:05:27.020 --> 00:05:31.820
This button will simply output a cross so we can delete the event.

00:05:31.820 --> 00:05:37.450
The wrapper will have a class of remove_btn_wrapper,

00:05:37.450 --> 00:05:41.525
then we can place our button nested inside.

00:05:41.525 --> 00:05:44.855
To give us the cross we can add a h small entity,

00:05:44.855 --> 00:05:47.495
which is the ampersand, the hash,

00:05:47.495 --> 00:05:51.475
and then the value of 10060.

00:05:51.475 --> 00:05:54.640
This would a semicolon and a button class,

00:05:54.640 --> 00:05:57.780
but I will style in which is going to be remove_btn.

00:06:00.110 --> 00:06:02.385
We'll add some styling soon,

00:06:02.385 --> 00:06:07.265
so this data section is on the left and then this countdown section is on the right.

00:06:07.265 --> 00:06:10.940
For now though, if we go below this remove_btn_wrapper,

00:06:10.940 --> 00:06:13.505
the next thing is to add AP elements,

00:06:13.505 --> 00:06:15.920
which will be the number of days left.

00:06:15.920 --> 00:06:20.260
For now this would be a hard coded value of 56,

00:06:20.260 --> 00:06:23.570
a break tag, and then inside of the small elements,

00:06:23.570 --> 00:06:26.640
we can have the texts of days left.

00:06:27.500 --> 00:06:31.760
Scrolling down for now, all we need to do inside of our scripts action,

00:06:31.760 --> 00:06:34.625
is to give this components a name.

00:06:34.625 --> 00:06:37.955
Given a component named couldn't help with debugging,

00:06:37.955 --> 00:06:41.270
since the component name can show up alongside messages,

00:06:41.270 --> 00:06:44.380
and also in the Vue developer tools too.

00:06:44.380 --> 00:06:47.045
Then finally I'll style section at the bottom,

00:06:47.045 --> 00:06:49.865
and this is also going to have the sculpt attributes.

00:06:49.865 --> 00:06:53.140
So these styles only apply to this template.

00:06:53.140 --> 00:06:57.785
From the very top, the whole event is surrounded in the article elements.

00:06:57.785 --> 00:06:59.870
The colors will be dynamic soon,

00:06:59.870 --> 00:07:04.350
but for now we can set a background color of light slate gray.

00:07:05.330 --> 00:07:10.805
This will also make use of the flexbox for layout so display flex.

00:07:10.805 --> 00:07:16.535
Then this will allow us to use a line items and then censor our content.

00:07:16.535 --> 00:07:21.055
The border radius of one rem.

00:07:21.055 --> 00:07:23.150
Since there will be multiple events,

00:07:23.150 --> 00:07:26.825
we can also add some margin on the outside of this article of

00:07:26.825 --> 00:07:31.250
one rem on top and bottom and zero on the left and right.

00:07:31.250 --> 00:07:33.440
Some padding, which is the space in,

00:07:33.440 --> 00:07:37.835
inside of the event of 0.2 rems on the top and bottom.

00:07:37.835 --> 00:07:41.555
Then a larger value of one rem on the left and right.

00:07:41.555 --> 00:07:47.730
The text color solely stands out on the darker backgrounds of white smoke.

00:07:48.310 --> 00:07:52.800
Finally the font weight of 300.

00:07:54.310 --> 00:08:00.635
Next up we have nested inside the data section and also the countdown section.

00:08:00.635 --> 00:08:05.380
These are going to make use of the flexbox so we can add some space in.

00:08:05.380 --> 00:08:10.620
To do this, we can apply a flex value first of all to the data.

00:08:10.620 --> 00:08:13.035
It should be a value of three.

00:08:13.035 --> 00:08:15.470
Then we can move down to the countdown section.

00:08:15.470 --> 00:08:18.905
If we set the flex value inside here to be one,

00:08:18.905 --> 00:08:24.365
the data section will now take up three times the space of the countdown section.

00:08:24.365 --> 00:08:29.480
After the downtown, the text-align to be in the center,

00:08:29.480 --> 00:08:33.535
the font size of 1.6 rems.

00:08:33.535 --> 00:08:35.840
Then a board on the left-hand side,

00:08:35.840 --> 00:08:38.780
which is going to split up our two sections.

00:08:38.780 --> 00:08:41.940
We can do this with a border left,

00:08:42.520 --> 00:08:47.250
which will be one pixel wide and a solid line.

00:08:48.130 --> 00:08:54.820
After this, let's set the font size for our text of name and also details.

00:08:55.310 --> 00:09:02.790
We only name sections be little larger so we can set the font size to be 1.8 rems.

00:09:05.330 --> 00:09:08.160
Then the details section,

00:09:08.160 --> 00:09:09.720
which will be a little smaller,

00:09:09.720 --> 00:09:14.005
so let's go for a font size of 1.6.

00:09:14.005 --> 00:09:19.610
The last section is to take care of is this remove button and also the text.

00:09:19.610 --> 00:09:22.280
So first of all, let's go through the actual button.

00:09:22.280 --> 00:09:24.200
If we scroll up, we can see this has

00:09:24.200 --> 00:09:33.330
a class of remove_btn.

00:09:33.330 --> 00:09:37.215
A transparent background to remove the white background color.

00:09:37.215 --> 00:09:40.830
Set the border wide button none.

00:09:41.680 --> 00:09:45.575
We can also change the cursor to be a pointer.

00:09:45.575 --> 00:09:49.060
When the user hovers over this button.

00:09:49.060 --> 00:09:52.560
Finally we can push this button over to the right-hand side,

00:09:52.560 --> 00:09:55.550
by setting the text line on the wrapper.

00:09:55.550 --> 00:10:00.210
The wrapper had the class of remove_btn_wrapper.

00:10:01.370 --> 00:10:06.805
The only CSS property is to set the text line to be right.

00:10:06.805 --> 00:10:10.520
This now gives us the base which we need for our event.

00:10:10.520 --> 00:10:12.650
Now we can use a for loop,

00:10:12.650 --> 00:10:16.770
to loop through this event and make the content more dynamic.
