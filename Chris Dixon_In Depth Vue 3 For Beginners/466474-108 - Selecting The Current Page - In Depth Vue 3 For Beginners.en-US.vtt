WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.560 --> 00:00:04.020
In the previous video, we said this create page

00:00:04.020 --> 00:00:08.175
displays the full information from the selected card.

00:00:08.175 --> 00:00:09.885
But in fact, for this view,

00:00:09.885 --> 00:00:13.125
we only need to show a certain piece of data.

00:00:13.125 --> 00:00:16.140
Remember that our card is split up into four pages.

00:00:16.140 --> 00:00:18.465
We have the front, the inside left,

00:00:18.465 --> 00:00:21.540
the inside right, and also the back view.

00:00:21.540 --> 00:00:23.610
When we are editing this page,

00:00:23.610 --> 00:00:26.910
we only want to see one of these sections at a time.

00:00:26.910 --> 00:00:29.010
Only when we click on these cards,

00:00:29.010 --> 00:00:30.750
we're then taken into the view,

00:00:30.750 --> 00:00:33.210
which is the front of the card.

00:00:33.210 --> 00:00:38.535
The data for these four pages is stored inside of this page's array just here,

00:00:38.535 --> 00:00:40.895
and retrieving the exact page we need from

00:00:40.895 --> 00:00:44.495
this array is what we're going to focus on in this video.

00:00:44.495 --> 00:00:48.685
We'll then also add in some links so you can switch between these pages.

00:00:48.685 --> 00:00:52.125
To start things off over in the useCurrent card file,

00:00:52.125 --> 00:00:55.855
read the constant to store the selected page in.

00:00:55.855 --> 00:00:58.840
Now we don't need this console log.

00:00:58.880 --> 00:01:04.320
This constant is going to store in the selected page.

00:01:04.520 --> 00:01:08.195
This will also be dynamic and a date type of

00:01:08.195 --> 00:01:13.530
objects that's obey function called get selected page.

00:01:15.230 --> 00:01:19.800
This function is going to set our selected page.

00:01:20.780 --> 00:01:24.630
This is a ref, so we grab the value,

00:01:24.630 --> 00:01:31.155
and this is going to be equal to our selected card, the value.

00:01:31.155 --> 00:01:32.810
As we've seen in the browser,

00:01:32.810 --> 00:01:36.810
we also need to access the pages array inside here.

00:01:36.810 --> 00:01:40.355
We then need to get the index number for the selected page.

00:01:40.355 --> 00:01:42.815
We have four different values for the front,

00:01:42.815 --> 00:01:44.420
the inside left, right,

00:01:44.420 --> 00:01:46.880
and back, so this could be either zero,

00:01:46.880 --> 00:01:48.710
one, two or three.

00:01:48.710 --> 00:01:52.445
To get the index number for the particular page we need,

00:01:52.445 --> 00:01:57.240
I'm going to hand it over to a separate function, to keep things clean.

00:01:57.560 --> 00:02:01.990
The function will be called get page index.

00:02:04.400 --> 00:02:06.945
To get the page index we need,

00:02:06.945 --> 00:02:09.645
we need to grab the selected card,

00:02:09.645 --> 00:02:13.029
the value, the pages,

00:02:13.029 --> 00:02:17.720
and then use a JavaScript array method called find index.

00:02:17.850 --> 00:02:23.500
Find index is going to run a function for each one of our pages in these cards.

00:02:23.500 --> 00:02:27.460
Each one of our pages will be stored inside of this page constant.

00:02:27.460 --> 00:02:33.590
We want to check if the page.name is equal to route.

00:02:34.350 --> 00:02:38.610
params.id. Just to recap,

00:02:38.610 --> 00:02:41.995
we are accessing all of the pages in the selected card.

00:02:41.995 --> 00:02:43.854
We then use any JavaScript,

00:02:43.854 --> 00:02:48.100
find index method, and this is going to check if the page.name.

00:02:48.100 --> 00:02:51.340
Which you can see if we go into our data,

00:02:51.340 --> 00:02:55.440
each one of our pages has its name property such as front,

00:02:55.440 --> 00:03:00.065
and we're comparing this name to the value inside of all parameters.

00:03:00.065 --> 00:03:02.230
In fact, rather than ID,

00:03:02.230 --> 00:03:04.015
this one to be the page,

00:03:04.015 --> 00:03:06.940
such as the front which we have just here.

00:03:06.940 --> 00:03:09.675
This will then return back the index number,

00:03:09.675 --> 00:03:12.990
so I need to return this back from our function.

00:03:13.070 --> 00:03:15.890
We can access this return value,

00:03:15.890 --> 00:03:18.715
my call now function inside of here.

00:03:18.715 --> 00:03:22.820
Good. Now we have this function called get selected page,

00:03:22.820 --> 00:03:25.445
and now we need a way to actually call this.

00:03:25.445 --> 00:03:35.110
Well we can do this by using unmounted assuming our function called get selected page.

00:03:35.660 --> 00:03:39.710
It's going up and bind has imported automatically when saving,

00:03:39.710 --> 00:03:40.865
but if yours hasn't,

00:03:40.865 --> 00:03:44.120
if you were to add in unmounted to this import.

00:03:44.120 --> 00:03:48.780
Now we also need to return back our selected page,

00:03:49.100 --> 00:03:52.365
so we can use this in the template.

00:03:52.365 --> 00:03:56.795
And also add a semicolon if this is causing some problems,

00:03:56.795 --> 00:03:58.415
and over to the Create.

00:03:58.415 --> 00:04:01.970
view. Now instead of rendering out the full selected card,

00:04:01.970 --> 00:04:05.260
we can replace this with the selected page,

00:04:05.260 --> 00:04:10.385
returning us back, and then I'll put this inside of a template.

00:04:10.385 --> 00:04:14.325
Refresh. Good, there's the front.

00:04:14.325 --> 00:04:16.480
Let's try the back.

00:04:17.270 --> 00:04:20.590
Good, the inside right.

00:04:23.240 --> 00:04:27.080
Excellent. Now this is working and we can now set up some links in

00:04:27.080 --> 00:04:31.230
the next video to switch between these four pages.
