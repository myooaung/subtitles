WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.020 --> 00:00:05.265
Welcome back. Now to update and remove any of these events,

00:00:05.265 --> 00:00:08.535
we again need to make use of our custom events.

00:00:08.535 --> 00:00:14.220
We're also going to make use of this same form which we used to add a new event but

00:00:14.220 --> 00:00:16.650
this time we're going to pre-fill all of the form

00:00:16.650 --> 00:00:20.145
details with the details of the current event.

00:00:20.145 --> 00:00:23.880
The first thing we need to do before we get onto any of this is to

00:00:23.880 --> 00:00:27.690
enable a click handler onto any one of these events.

00:00:27.690 --> 00:00:29.490
Once we click on these events,

00:00:29.490 --> 00:00:34.905
we want this form to then open so the user can then edit this particular event.

00:00:34.905 --> 00:00:38.235
Now to do this, we're going to listen now for a click over in the

00:00:38.235 --> 00:00:43.750
app.view inside of this event component or in fact,

00:00:43.750 --> 00:00:45.740
this is surrounded in the list item,

00:00:45.740 --> 00:00:49.085
so we can also add this onto the parent wrapper.

00:00:49.085 --> 00:00:55.755
We'll add a click listener and then we're going to trigger a new method called setForm.

00:00:55.755 --> 00:01:01.520
The setForm is going to then pass the details of the current event.

00:01:01.520 --> 00:01:05.200
We're grabbing the event details from our loop.

00:01:05.200 --> 00:01:08.380
Each time we click on any one of these particular items,

00:01:08.380 --> 00:01:12.765
it will then grab the event data for the one which we've clicked on.

00:01:12.765 --> 00:01:15.820
Down to the method section.

00:01:16.360 --> 00:01:20.015
This method now needs to do two things.

00:01:20.015 --> 00:01:23.425
It needs to first actually display the form

00:01:23.425 --> 00:01:27.470
and also pass the selected event to the data property.

00:01:27.470 --> 00:01:32.525
This data property will then be used as a prop for the form component itself,

00:01:32.525 --> 00:01:37.055
meaning we have all of the data to pre-fill all of the sections.

00:01:37.055 --> 00:01:41.435
To begin our method which was setForm,

00:01:41.435 --> 00:01:48.795
we are receiving the details of the event and a comma at the end.

00:01:48.795 --> 00:01:51.215
The first thing we want to do is to set

00:01:51.215 --> 00:01:54.485
the current event data property which we haven't created yet.

00:01:54.485 --> 00:01:57.080
This is going to be called current event.

00:01:57.080 --> 00:02:00.580
Actually this is [inaudible] case.

00:02:00.580 --> 00:02:04.250
We'll set this equal to the event which is passed.

00:02:04.250 --> 00:02:06.935
If there's an error or no data is passed,

00:02:06.935 --> 00:02:09.500
we'll just send an empty object.

00:02:09.500 --> 00:02:13.610
Now we'll set this current event as a data property just

00:02:13.610 --> 00:02:17.830
above and initially set this to an object.

00:02:17.830 --> 00:02:22.820
What is going to happen is we'll click on this section or any one of these events.

00:02:22.820 --> 00:02:25.055
This will then trigger this method,

00:02:25.055 --> 00:02:28.265
we'll then it pass this event data to current event,

00:02:28.265 --> 00:02:31.595
which we can then pass to all form in just a second.

00:02:31.595 --> 00:02:34.190
But first we actually need to display this form.

00:02:34.190 --> 00:02:38.850
We can do this by toggling this showForm property.

00:02:39.410 --> 00:02:42.270
We want this to be true, so the form will

00:02:42.270 --> 00:02:45.810
display on to the browser. Let's check this out.

00:02:45.810 --> 00:02:49.960
Click on any of these, all form appears,

00:02:49.970 --> 00:02:54.080
and this all seems to work for each one of our events.

00:02:54.080 --> 00:02:59.525
This form now needs this event data which we have stored in current event.

00:02:59.525 --> 00:03:06.485
We can grab this and move up to our template and then pass this to our AddUpdateForm.

00:03:06.485 --> 00:03:08.120
This is going to be dynamic,

00:03:08.120 --> 00:03:09.980
so we need the binding.

00:03:09.980 --> 00:03:12.740
The property name is going to be current event,

00:03:12.740 --> 00:03:16.540
which is also equal to the data of current event.

00:03:16.540 --> 00:03:22.490
Overt to the form we can now add in our props array inside of the export default.

00:03:22.490 --> 00:03:27.600
The single prop which we have at the moment is going to be current event.

00:03:29.330 --> 00:03:33.520
At the moment we have the current event which is passed to this form.

00:03:33.520 --> 00:03:36.910
We have the event object which is stored in data.

00:03:36.910 --> 00:03:43.415
This event object is also making use of v-model to bind this to all of our form input.

00:03:43.415 --> 00:03:46.900
Now to pass this current event as the initial value,

00:03:46.900 --> 00:03:51.835
we first need to set this event to be equal to our current event.

00:03:51.835 --> 00:03:55.780
We can do this as soon as the application loads inside of

00:03:55.780 --> 00:04:00.640
the mounted hook where we'll

00:04:00.640 --> 00:04:07.790
set this.event to be equal to this.current event.

00:04:07.790 --> 00:04:13.990
Let's test this is all working by clicking on any of these events and refresh first.

00:04:13.990 --> 00:04:15.460
We have the graduation.

00:04:15.460 --> 00:04:17.320
Let's try the birthday.

00:04:17.320 --> 00:04:24.125
The conference talk. Also now if we go into our plus icon for add form,

00:04:24.125 --> 00:04:27.530
the next thing we're going to do is to toggle this button at the bottom,

00:04:27.530 --> 00:04:30.860
currently we see the add button but if we go into the edit section,

00:04:30.860 --> 00:04:33.140
we still see the add button too.

00:04:33.140 --> 00:04:37.700
This is because inside of the template we only have the single add button.

00:04:37.700 --> 00:04:42.550
We also need to duplicate this and create a update button.

00:04:42.550 --> 00:04:45.020
This is going to be for update.

00:04:45.020 --> 00:04:46.820
This also needs to run through

00:04:46.820 --> 00:04:49.190
the same validate method to make sure

00:04:49.190 --> 00:04:51.995
that all of the form fields which we use is changing,

00:04:51.995 --> 00:04:54.755
is still present after they save.

00:04:54.755 --> 00:04:57.680
We only want to show one of these buttons at a time.

00:04:57.680 --> 00:05:03.370
The way we can do this is to check if our event has a id property.

00:05:03.370 --> 00:05:06.500
This is because the id property is only added

00:05:06.500 --> 00:05:09.350
once we save therefore the event already exists,

00:05:09.350 --> 00:05:11.530
so we must be updating it.

00:05:11.530 --> 00:05:15.010
Inside of the first button which is update,

00:05:15.010 --> 00:05:17.750
we'll add a v-if section,

00:05:17.750 --> 00:05:23.160
and this is going to check if the currentEvent.id exist.

00:05:23.160 --> 00:05:25.190
If this statement is true,

00:05:25.190 --> 00:05:26.915
we will see the update button.

00:05:26.915 --> 00:05:32.970
If not, we'll add the el-section to show the add button. Let's try this out.

00:05:32.970 --> 00:05:35.920
We'll go to the add button to begin.

00:05:35.930 --> 00:05:40.620
We'll see both here because we have not added v-else.

00:05:40.620 --> 00:05:43.385
We need this because this is not just regular JavaScript.

00:05:43.385 --> 00:05:45.275
I will now just see the update button,

00:05:45.275 --> 00:05:47.995
so this is all working fine.

00:05:47.995 --> 00:05:50.750
Now back over to our two buttons.

00:05:50.750 --> 00:05:52.235
Now both of these buttons,

00:05:52.235 --> 00:05:55.055
a first, calling the validate method.

00:05:55.055 --> 00:06:00.820
When we call this, it needs to know if we are updating an event or going to add new one.

00:06:00.820 --> 00:06:04.665
To do this, we're going to pass in a string and for this one,

00:06:04.665 --> 00:06:08.640
this will be update. This one will be add.

00:06:08.640 --> 00:06:13.380
Now we have a type of event which you'll want to run after the validation.

00:06:13.380 --> 00:06:16.785
Pass this in to our validate method.

00:06:16.785 --> 00:06:20.780
This is a variable name which I'm going to call type.

00:06:20.780 --> 00:06:23.945
This is going to run through all of the validation.

00:06:23.945 --> 00:06:26.585
Before we go ahead and add a new event,

00:06:26.585 --> 00:06:31.840
we only want to call this method if the type is equal to add.

00:06:31.840 --> 00:06:34.125
We'll add an if statement.

00:06:34.125 --> 00:06:37.880
If outside variable is equal to add,

00:06:37.880 --> 00:06:40.870
we'll then call this.addEvent.

00:06:40.870 --> 00:06:43.710
If not, we'll add an el-section,

00:06:43.710 --> 00:06:47.260
so this must mean that the type is update and therefore

00:06:47.260 --> 00:06:51.870
we want to call a different method which is going to be called updateEvent.

00:06:51.940 --> 00:06:56.720
Updating our event is going to look very similar to this addEvent method,

00:06:56.720 --> 00:06:58.640
so we can duplicate this to begin,

00:06:58.640 --> 00:07:01.915
it changes to be update.

00:07:01.915 --> 00:07:04.950
We've not created a custom update event yet,

00:07:04.950 --> 00:07:06.675
so we're going to just leave this blank.

00:07:06.675 --> 00:07:10.760
You will also still need to receive the new event details and close the form,

00:07:10.760 --> 00:07:13.225
so the rest is all fine.

00:07:13.225 --> 00:07:20.090
Let's now create this custom event over in the app.view up to the AddUpdateForm section.

00:07:20.090 --> 00:07:24.460
This is going to follow a similar pattern to this add new event section.

00:07:24.460 --> 00:07:26.775
But this time this is for updating,

00:07:26.775 --> 00:07:31.540
so we'll add a new custom event called update event.

00:07:31.550 --> 00:07:37.790
This is going to trigger a update function and we'll also receive the event data.

00:07:37.790 --> 00:07:41.580
Let's now set this up down in our methods.

00:07:43.370 --> 00:07:47.870
This will take in the event details which is passed.

00:07:48.950 --> 00:07:55.495
The first thing we need to do when we are updating an event inside of these event array,

00:07:55.495 --> 00:08:00.005
we want to find the index position for the one which we want to update.

00:08:00.005 --> 00:08:06.015
The way we can do this is by calling this.event to grab our full array,

00:08:06.015 --> 00:08:11.240
and then we need to call a JavaScript array method called findIndex.

00:08:11.520 --> 00:08:15.135
This going to then call a function,

00:08:15.135 --> 00:08:19.720
and this function is going to be called for each item inside of our events array.

00:08:19.720 --> 00:08:25.135
We are effectively looping through each one and then it running a function.

00:08:25.135 --> 00:08:28.210
Each time we loop through an individual event,

00:08:28.210 --> 00:08:33.070
we'll then store the value or the element inside of this el property.

00:08:33.070 --> 00:08:34.510
This is just a variable name,

00:08:34.510 --> 00:08:37.130
so you can call this anything which you want.

00:08:37.130 --> 00:08:38.730
We'll then check if this

00:08:38.730 --> 00:08:46.060
element.id is going to be equal to the id which is passed from this event.

00:08:47.630 --> 00:08:51.705
This is in a constant called index.

00:08:51.705 --> 00:08:58.030
This should now give us the index position of our event inside of this events array.

00:08:58.030 --> 00:09:00.220
If we have selected the first one,

00:09:00.220 --> 00:09:02.200
this will be index position zero.

00:09:02.200 --> 00:09:03.475
This will be position one,

00:09:03.475 --> 00:09:05.255
two, three, and so on.

00:09:05.255 --> 00:09:10.205
We'll then call this.events and grab the particular one by the index number,

00:09:10.205 --> 00:09:13.800
and then replace this with our new event object.

00:09:13.970 --> 00:09:20.685
All that's now left to do is to call this custom event over from our component.

00:09:20.685 --> 00:09:22.845
Into the add update form,

00:09:22.845 --> 00:09:26.790
we first need to receive this in the emit array.

00:09:29.950 --> 00:09:33.800
Then this is ready to call from our method.

00:09:33.800 --> 00:09:38.885
Into update event and we can replace this with update event,

00:09:38.885 --> 00:09:42.125
say this, and we can test out our update functionality.

00:09:42.125 --> 00:09:44.135
Go into any one of these,

00:09:44.135 --> 00:09:47.160
we can edit the details.

00:09:47.240 --> 00:09:51.510
Click on update, and this is now saved.

00:09:51.510 --> 00:09:57.340
Let's try a different one. I'll change the background color to be orange.

00:09:58.820 --> 00:10:01.410
This all works fine.

00:10:01.410 --> 00:10:04.760
Let's just do a quick recap because it is quite a lot going on here.

00:10:04.760 --> 00:10:07.280
We're passing data between two different components.

00:10:07.280 --> 00:10:09.755
The first thing we did over in the

00:10:09.755 --> 00:10:14.560
app.view was to listen out for a click on any one of these events.

00:10:14.560 --> 00:10:18.195
We then triggered a method called setForm.

00:10:18.195 --> 00:10:21.655
This also received the current event data.

00:10:21.655 --> 00:10:23.825
Now inside of this method,

00:10:23.825 --> 00:10:28.820
the first thing which we did was to set a data property called current event.

00:10:28.820 --> 00:10:34.285
This was equal to our event information and then it also popped up the form.

00:10:34.285 --> 00:10:40.200
This current event back up to the top was then a passed to our form,

00:10:40.200 --> 00:10:44.715
which it then used to fill in all of the sections inside of here.

00:10:44.715 --> 00:10:49.085
It did this because we assigned this to our data property.

00:10:49.085 --> 00:10:55.280
As soon as this component mounted this update button then called the validate method.

00:10:55.280 --> 00:10:58.430
Then once you checked through all of the validation,

00:10:58.430 --> 00:11:00.965
we then called either the add or the update method,

00:11:00.965 --> 00:11:05.120
which we set up just above using our custom events.

00:11:05.120 --> 00:11:08.525
Just before we move on, we'll also just check that

00:11:08.525 --> 00:11:11.270
the validation is working or the update section.

00:11:11.270 --> 00:11:17.495
If we remove a name, the name is required and also event details is required too.

00:11:17.495 --> 00:11:20.720
One thing to note though, if we refresh this application,

00:11:20.720 --> 00:11:23.419
the app will revert back to how it was originally,

00:11:23.419 --> 00:11:26.875
since we're not using a database to store all of these events in.

00:11:26.875 --> 00:11:29.360
Next we're going to move on to actually removing

00:11:29.360 --> 00:11:33.030
these events when the user clicks on this button.
