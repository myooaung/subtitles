WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.270 --> 00:00:08.590
We now captured the form data from the user and stored this inside of this data property.

00:00:08.590 --> 00:00:13.295
Now, we're going to use this data to add a new event to our array.

00:00:13.295 --> 00:00:18.005
Currently, this new event data is in the AddUpdateForm component.

00:00:18.005 --> 00:00:21.955
However, the actual events array is inside this parent,

00:00:21.955 --> 00:00:28.460
App.vue, which means we need to emit a custom event backup from our form.

00:00:28.460 --> 00:00:32.580
Let's set this up just like we've looked up previously in the App.vue.

00:00:32.580 --> 00:00:35.445
Let's go up to the AddUpdateForm.

00:00:35.445 --> 00:00:41.045
Inside of here, we can add a new attribute which is going to be for our custom events.

00:00:41.045 --> 00:00:44.710
These custom events, we can give this any name which you want.

00:00:44.710 --> 00:00:47.780
Mine is going to be add new event.

00:00:48.650 --> 00:00:52.815
Just about when we added this close-form event,

00:00:52.815 --> 00:00:57.560
we directly set this showForm data to be equal to false.

00:00:57.560 --> 00:01:01.415
This is very simple, but our add new event will have a few more steps.

00:01:01.415 --> 00:01:03.620
So instead of bloating this template,

00:01:03.620 --> 00:01:06.790
we can instead pass in a method.

00:01:06.790 --> 00:01:11.075
This method then needs to be settled down in our script section.

00:01:11.075 --> 00:01:13.190
Let's go through our methods section.

00:01:13.190 --> 00:01:16.125
At the very top, we can place in our add method.

00:01:16.125 --> 00:01:20.645
This is going to be responsible for pushing to our events array.

00:01:20.645 --> 00:01:22.310
Before we go any further, though,

00:01:22.310 --> 00:01:26.000
let's take a step back and think about exactly what we want to do.

00:01:26.000 --> 00:01:30.440
The job of this method is to add a new event to our array

00:01:30.440 --> 00:01:35.480
but how do you access these new event data which you want to push?

00:01:35.480 --> 00:01:42.020
Well, this can be passed when we trigger the custom event over in our AddUpdateForm.

00:01:42.020 --> 00:01:44.870
Firstly, just like we've done with close-form,

00:01:44.870 --> 00:01:47.820
we need to add this to emits array.

00:01:49.640 --> 00:01:54.420
We're then going to emit this when the Add button is clicked.

00:01:54.420 --> 00:01:56.680
This is the button which you see just here,

00:01:56.680 --> 00:02:01.335
and this is going to trigger our custom events into the button.

00:02:01.335 --> 00:02:03.315
When clicked, this is going to emit

00:02:03.315 --> 00:02:06.930
our custom events which we pass in as the first parameter,

00:02:06.930 --> 00:02:09.670
and this was add new events.

00:02:09.950 --> 00:02:14.870
The difference this time though when we emitted an event called close-form,

00:02:14.870 --> 00:02:18.190
this didn't have any data which we needed to pass.

00:02:18.190 --> 00:02:20.800
We can also remove this keyword too,

00:02:20.800 --> 00:02:22.750
this is not required in our template.

00:02:22.750 --> 00:02:24.700
But as a second argument,

00:02:24.700 --> 00:02:29.060
we're going to pass in the actual data which is the events.

00:02:29.580 --> 00:02:35.145
We could also extract this out and place a method called inside of here if we wanted to,

00:02:35.145 --> 00:02:37.380
but this is pretty simple for now.

00:02:37.380 --> 00:02:41.590
Since we're now passing this information alongside our custom event,

00:02:41.590 --> 00:02:43.915
back over in the App.vue,

00:02:43.915 --> 00:02:50.660
we can now receive this information using a special variable called dollar symbol event.

00:02:51.820 --> 00:02:54.440
Just to also be clear here too,

00:02:54.440 --> 00:02:57.035
this is always called dollar symbol event.

00:02:57.035 --> 00:03:01.485
We have not just named this event since we pass in some event information.

00:03:01.485 --> 00:03:03.570
If we had a user which will pass in,

00:03:03.570 --> 00:03:06.690
this would still be called dollar symbol event.

00:03:06.690 --> 00:03:09.360
Now, this is passed into our add method,

00:03:09.360 --> 00:03:12.880
it's now available in our method down below.

00:03:12.880 --> 00:03:16.460
We'll receive this just like we would normally do with any event,

00:03:16.460 --> 00:03:19.295
so we can give this any name which we want to.

00:03:19.295 --> 00:03:22.790
We can test if this is working with a console log,

00:03:22.790 --> 00:03:27.365
and check we're receiving the event information from our form.

00:03:27.365 --> 00:03:32.180
To test this out, we need to refresh and go into the Developer Tools,

00:03:32.180 --> 00:03:34.055
open up the console,

00:03:34.055 --> 00:03:36.910
and then we can try to add a new event.

00:03:36.910 --> 00:03:39.270
It doesn't matter which data we're putting for now,

00:03:39.270 --> 00:03:43.060
this can be any values, click on "Add".

00:03:43.280 --> 00:03:47.640
What just happened there, we don't see anything inside the console,

00:03:47.640 --> 00:03:49.720
and now, all forms are being closed.

00:03:49.720 --> 00:03:54.805
Well, if we take a closer look and take a look at this refresh arrow just on here,

00:03:54.805 --> 00:03:58.300
we can add the new form event.

00:04:00.200 --> 00:04:04.230
Watch this arrow disappear if we click on "Add",

00:04:04.230 --> 00:04:08.090
this now refreshes the page and also clears our console.

00:04:08.090 --> 00:04:11.420
This happens because the default behavior of

00:04:11.420 --> 00:04:15.459
the browser is to refresh when a form is submitted.

00:04:15.459 --> 00:04:17.900
If you've came across this before and worked with

00:04:17.900 --> 00:04:20.230
other libraries or work with JavaScript,

00:04:20.230 --> 00:04:25.875
you may have already wrote something like event.preventDefault inside of the method.

00:04:25.875 --> 00:04:29.075
But Vue does also provide a shortcut for this,

00:04:29.075 --> 00:04:33.110
and this is to add a event modifier which we can add when

00:04:33.110 --> 00:04:37.990
using [inaudible] in our form when we click on this button.

00:04:37.990 --> 00:04:42.000
Back over to AddUpdateForm, here,

00:04:42.000 --> 00:04:44.325
we're using the V on syntax,

00:04:44.325 --> 00:04:47.420
and then we can also call dot prevent.

00:04:47.420 --> 00:04:51.560
This event modifier should now prevent the default behavior.

00:04:51.560 --> 00:04:54.890
Let's go back to the browser and test this out.

00:04:54.890 --> 00:04:57.750
Open up the Dev Tools,

00:05:02.150 --> 00:05:08.365
click on "Add", which then gives us our console log with all of the form data.

00:05:08.365 --> 00:05:12.380
We can now use this data to push a new entry to our array,

00:05:12.380 --> 00:05:15.815
but one thing we also need to do is to add a ID.

00:05:15.815 --> 00:05:18.005
Currently, we have the name, details,

00:05:18.005 --> 00:05:25.460
dates and backgrounds, but remember that each one of these events also needs a unique ID.

00:05:25.460 --> 00:05:28.400
If you were saving this entry to a database,

00:05:28.400 --> 00:05:33.500
we would often get back a unique ID from the database which we could then use.

00:05:33.500 --> 00:05:36.755
But for simplicity, I'm just going to number these in order,

00:05:36.755 --> 00:05:39.490
just like we have with our sample data.

00:05:39.490 --> 00:05:46.430
To do this, we can add a new property to our event object called ID,

00:05:46.430 --> 00:05:51.320
and then we need to also find out how many events is currently inside of our array,

00:05:51.320 --> 00:05:53.800
and then add a number onto the end.

00:05:53.800 --> 00:05:56.255
If you currently have six events,

00:05:56.255 --> 00:05:58.430
the next one we add will be number seven,

00:05:58.430 --> 00:06:00.505
number eight, and so on.

00:06:00.505 --> 00:06:05.710
First, we can grab the length of our current array with this.events.length,

00:06:05.800 --> 00:06:09.430
and then set this ID to be one extra.

00:06:09.430 --> 00:06:12.120
Next, we're going to access our events,

00:06:12.120 --> 00:06:15.410
and then call the JavaScript push method which will

00:06:15.410 --> 00:06:19.385
push our new events to the end of this array.

00:06:19.385 --> 00:06:26.130
Then finally, we can close down our form. Let's give this a go.

00:06:31.990 --> 00:06:36.765
Click on "Add", there's one we just added.

00:06:36.765 --> 00:06:44.010
Let's try one more. We go

00:06:44.010 --> 00:06:47.550
for the different color this time and check this is all fine, add this.

00:06:47.550 --> 00:06:51.250
Now, two events are now displayed in the browser.
