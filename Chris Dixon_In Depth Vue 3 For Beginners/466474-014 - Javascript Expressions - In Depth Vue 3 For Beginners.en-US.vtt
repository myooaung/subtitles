WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.680 --> 00:00:02.820
In our HTML files,

00:00:02.820 --> 00:00:05.895
we have already used the double calibraces so far,

00:00:05.895 --> 00:00:11.410
also referred to as interpolation to outputs our data properties,

00:00:11.410 --> 00:00:15.915
and also inside our loops to output a variable too.

00:00:15.915 --> 00:00:22.530
If required, these double calibraces can also support JavaScript expressions too.

00:00:22.530 --> 00:00:25.485
A small symbol could use these to perform

00:00:25.485 --> 00:00:29.250
a JavaScript calculation and then output the result.

00:00:29.250 --> 00:00:31.605
Anywhere inside of here,

00:00:31.605 --> 00:00:33.290
let's go just below the header.

00:00:33.290 --> 00:00:39.775
We can use these double calibraces and create a simple addition such as 1 plus 3.

00:00:39.775 --> 00:00:45.545
If you just will evaluate this expression and then output the result of 4,

00:00:45.545 --> 00:00:47.870
we could use our JavaScript expressions too,

00:00:47.870 --> 00:00:51.505
such as divide or we could say 10 divided by 2,

00:00:51.505 --> 00:00:53.340
the value of 5.

00:00:53.340 --> 00:00:56.960
We can also use built-in JavaScript methods too.

00:00:56.960 --> 00:01:03.190
For example, we could access the math object and then select a method called random.

00:01:03.190 --> 00:01:07.250
This will then generate a random number between zero and one,

00:01:07.250 --> 00:01:09.940
each time we reload the browser.

00:01:09.940 --> 00:01:14.360
We can also access our existing data properties,

00:01:14.360 --> 00:01:21.900
such as the name and transform this using JavaScript methods such as toUpperCase.

00:01:22.970 --> 00:01:26.015
It will then take our original name,

00:01:26.015 --> 00:01:28.055
which is placed in a date property,

00:01:28.055 --> 00:01:33.280
and then transform this to be uppercase before outputing this in the browser.

00:01:33.280 --> 00:01:38.435
We could go even further to an odd things such as the JavaScript ternary operator.

00:01:38.435 --> 00:01:44.200
We could check if the name.length is greater than zero.

00:01:44.200 --> 00:01:50.335
This is currently true since we have more than zero characters inside the string.

00:01:50.335 --> 00:01:53.790
If this is true, which we know it is,

00:01:53.790 --> 00:01:57.000
so we're just going to outputs a string of welcome,

00:01:57.000 --> 00:01:59.325
followed by our user's name.

00:01:59.325 --> 00:02:02.645
If not, we use the colon to provide a second condition,

00:02:02.645 --> 00:02:05.640
which is going to be "Welcome Guest."

00:02:08.450 --> 00:02:13.510
This is regular JavaScript and it's nothing specific to view JS.

00:02:13.510 --> 00:02:19.620
The only view involvement is we're outputting this using the double calibraces.

00:02:19.620 --> 00:02:23.225
We know our name.length is greater than zero,

00:02:23.225 --> 00:02:26.275
so we see the message of welcome on our name.

00:02:26.275 --> 00:02:29.830
If we were to create an empty string.

00:02:29.830 --> 00:02:32.830
For example, if a user is not logged in,

00:02:32.830 --> 00:02:36.070
we would see the message of "Welcome guest".

00:02:37.570 --> 00:02:40.180
Another thing we can do to,

00:02:40.180 --> 00:02:44.665
is to add expressions into our dynamic attributes too,

00:02:44.665 --> 00:02:48.210
just above where we set this dynamic style property.

00:02:48.210 --> 00:02:54.980
Let's say we wanted to only set the darkMode object if a certain condition is true.

00:02:54.980 --> 00:02:56.630
As a random example,

00:02:56.630 --> 00:03:01.730
we could say if 10 is less than five, if this is true,

00:03:01.730 --> 00:03:05.240
we're then going to display the darkMode, or if not,

00:03:05.240 --> 00:03:07.580
we're going to output an empty string,

00:03:07.580 --> 00:03:10.210
meaning no class will be applied.

00:03:10.210 --> 00:03:13.500
Save this and refresh.

00:03:13.500 --> 00:03:15.315
Ten is less than five,

00:03:15.315 --> 00:03:19.850
so the darkMode will not be applied if we change this to be true,

00:03:19.850 --> 00:03:21.725
so 10 is greater than five,

00:03:21.725 --> 00:03:25.210
darkMode should now be applied to our project,

00:03:25.210 --> 00:03:27.770
or as a more realistic example,

00:03:27.770 --> 00:03:29.330
back over in our scripts.

00:03:29.330 --> 00:03:32.755
We have this darkMode set property.

00:03:32.755 --> 00:03:38.570
We can now use this to conditionally render our darkMode rather than this number value,

00:03:38.570 --> 00:03:41.070
we can say "darkModeSet",

00:03:42.440 --> 00:03:46.890
which is currently true, so darkMode will stay enabled.

00:03:46.890 --> 00:03:49.635
If we set this to be false,

00:03:49.635 --> 00:03:52.380
it should now be removed.

00:03:52.380 --> 00:03:56.280
We can also remove our welcome message too.

00:03:58.400 --> 00:04:02.945
Toggling this darkMode on and off manually is not ideal.

00:04:02.945 --> 00:04:07.230
In the next video, we're going to set this to react to a button.
