WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.350 --> 00:00:05.940
Previously we've made an axios request to save our images to Cloudinary.

00:00:05.940 --> 00:00:11.730
This image or this image's URL will also need to be saved to our card object too.

00:00:11.730 --> 00:00:15.990
But how do we get this image into our card object?

00:00:15.990 --> 00:00:18.810
Well, we can pass in a URL reference,

00:00:18.810 --> 00:00:21.015
which is provided by Cloudinary.

00:00:21.015 --> 00:00:22.980
When we see our cards just here,

00:00:22.980 --> 00:00:25.275
we have this copy URL section.

00:00:25.275 --> 00:00:29.670
If we copy this, paste this into a new tab,

00:00:29.670 --> 00:00:32.580
and this is a direct link to our image.

00:00:32.580 --> 00:00:36.385
This is provided for any images which you upload to Cloudinary,

00:00:36.385 --> 00:00:39.845
but we don't need to manually copy all of the URLs like this.

00:00:39.845 --> 00:00:42.770
Instead, when we make this post request with axios,

00:00:42.770 --> 00:00:49.340
we get back a response which we can then store inside of an object and access this data,

00:00:49.340 --> 00:00:54.140
hence we don't know how long it'll take to save this image and get back a response.

00:00:54.140 --> 00:00:57.095
We can also make use of async/await.

00:00:57.095 --> 00:01:00.710
Async/await will allow us to wait on the data coming back from

00:01:00.710 --> 00:01:04.310
the server before we save this into our constants,

00:01:04.310 --> 00:01:08.120
this will stop us from trying to access the data saved inside here,

00:01:08.120 --> 00:01:10.420
before it's actually returned.

00:01:10.420 --> 00:01:12.695
We'll await this data coming back,

00:01:12.695 --> 00:01:14.330
and so we can use this keyword.

00:01:14.330 --> 00:01:18.450
We also need to mark our function as async.

00:01:19.780 --> 00:01:23.070
We can log our response back to the console,

00:01:23.070 --> 00:01:29.485
and see what data is returned into our project.

00:01:29.485 --> 00:01:32.245
Upload a new file,

00:01:32.245 --> 00:01:36.235
since we're sending this to the server and it needs to be returned back,

00:01:36.235 --> 00:01:39.070
we may need to wait a few seconds for this to happen.

00:01:39.070 --> 00:01:41.845
Once this is saved and we get back a response,

00:01:41.845 --> 00:01:44.300
we see our console log just here.

00:01:44.300 --> 00:01:48.100
The data we need is inside of this data section,

00:01:48.100 --> 00:01:50.649
and this will then contain our URL,

00:01:50.649 --> 00:01:55.600
and it's this URL which we need to save to our card object.

00:01:55.600 --> 00:01:59.350
We've not yet created a function to perform this update,

00:01:59.350 --> 00:02:02.550
but we can place this inside of our component for now,

00:02:02.550 --> 00:02:04.345
remove the console log,

00:02:04.345 --> 00:02:07.580
and this function will be called updateImage.

00:02:08.030 --> 00:02:13.900
Passing the URL which is stored inside of the response, the data,

00:02:13.900 --> 00:02:17.960
and then the URL, this function is going to be placed inside of

00:02:17.960 --> 00:02:22.490
our useCurrentCard composable along with the other update functions.

00:02:22.490 --> 00:02:26.610
We also need to import this for the top.

00:02:26.840 --> 00:02:30.855
Import the useCurrentCard from this file path,

00:02:30.855 --> 00:02:33.270
which is the composables,

00:02:33.270 --> 00:02:36.670
and then into useCurrentCard.

00:02:37.100 --> 00:02:39.720
Before we can call this function,

00:02:39.720 --> 00:02:41.135
which we're doing just here,

00:02:41.135 --> 00:02:46.105
we also need to extract this from our file into the setup.

00:02:46.105 --> 00:02:48.660
Save it as a constant,

00:02:48.660 --> 00:02:51.480
which will be called updateImage,

00:02:51.480 --> 00:02:57.600
from our useCurrentCard function over to the useCurrentCard file,

00:02:57.600 --> 00:03:00.210
we'll now need to setup this updateImage.

00:03:00.210 --> 00:03:08.060
Now at the bottom, write this function and to update the card,

00:03:08.060 --> 00:03:10.205
this needs to take in the URL,

00:03:10.205 --> 00:03:14.220
which we're passing when we call this function just here.

00:03:15.320 --> 00:03:17.360
Now to update this card,

00:03:17.360 --> 00:03:21.590
we'll use a similar technique which we've used in the update function just above.

00:03:21.590 --> 00:03:25.190
We grab the selected card and then the current page.

00:03:25.190 --> 00:03:28.970
I'll copy this, at this interval of function.

00:03:28.970 --> 00:03:32.305
We don't need to go into the sections because if we take a look

00:03:32.305 --> 00:03:35.529
at our card directly inside of our pages,

00:03:35.529 --> 00:03:37.900
is where we have the background image stored,

00:03:37.900 --> 00:03:43.640
meaning we just need to update this background property, so like this.

00:03:43.640 --> 00:03:48.755
I set this equal to the URL which is passed to this function,

00:03:48.755 --> 00:03:51.120
return this back from our function,

00:03:51.120 --> 00:03:54.155
and now we can test this out over in the browser.

00:03:54.155 --> 00:03:56.250
What we want to see here is,

00:03:56.250 --> 00:03:58.140
now when we select a new file,

00:03:58.140 --> 00:04:01.300
we see the preview, it is saved to Cloudinary,

00:04:01.300 --> 00:04:04.420
and this should also update our current preview too,

00:04:04.420 --> 00:04:10.450
since this is kept up to date with our reactive data, let's use a file.

00:04:13.040 --> 00:04:19.625
Our function is triggered and our card preview is now updated with this new image URL.

00:04:19.625 --> 00:04:23.300
These images can also be placed on different pages too.

00:04:23.300 --> 00:04:25.655
If we select a different image for this page,

00:04:25.655 --> 00:04:30.140
this will be completely independent to all of the other pages.

00:04:30.140 --> 00:04:32.520
Good. Now when all this is working.

00:04:32.520 --> 00:04:34.790
In the next video, we're going to focus on

00:04:34.790 --> 00:04:37.685
these three alignment buttons to align this image,

00:04:37.685 --> 00:04:38.750
the top, the middle,

00:04:38.750 --> 00:04:41.190
or the bottom of this card.
