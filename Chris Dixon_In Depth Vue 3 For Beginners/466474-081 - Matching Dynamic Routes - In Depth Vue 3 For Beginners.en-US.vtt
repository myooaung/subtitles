WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.650 --> 00:00:04.980
URL's are not always as simple as what we have here

00:00:04.980 --> 00:00:08.925
with our forward slash and the forward slash about route.

00:00:08.925 --> 00:00:12.210
They also need to be more dynamic and contain data

00:00:12.210 --> 00:00:16.095
which will change your data which is different for each user.

00:00:16.095 --> 00:00:19.545
For example, you may have a path which looks like this,

00:00:19.545 --> 00:00:22.095
you may have forward slash accounts.

00:00:22.095 --> 00:00:24.810
This path would be simple for the routers handle,

00:00:24.810 --> 00:00:27.480
we'll just need to map this to an account component.

00:00:27.480 --> 00:00:30.930
But what if we wanted to also pass in the user ID,

00:00:30.930 --> 00:00:34.440
that link to a certain user just like this?

00:00:34.440 --> 00:00:38.160
It would be way too much work to create a new route

00:00:38.160 --> 00:00:42.150
for every single use which we had in our database,

00:00:42.150 --> 00:00:47.590
but for this the router provides what is called a dynamic segments which is a way to have

00:00:47.590 --> 00:00:53.015
part of our URL which may change those two points to the same components.

00:00:53.015 --> 00:00:55.900
Inside of our routers index file the first thing we're

00:00:55.900 --> 00:00:58.540
going to do is to import a new component,

00:00:58.540 --> 00:01:02.305
we have not yet created this but will do this in just a moment.

00:01:02.305 --> 00:01:04.685
We'll import our account,

00:01:04.685 --> 00:01:07.795
this would be the same location as just above,

00:01:07.795 --> 00:01:10.045
it will be in the views folder,

00:01:10.045 --> 00:01:13.400
and this will be the account.vue.

00:01:13.440 --> 00:01:18.650
After this, we'll create a path object just like we see here,

00:01:18.650 --> 00:01:22.630
so open up the curly braces and the path for this,

00:01:22.630 --> 00:01:25.000
we'll come back to you in just a second.

00:01:25.000 --> 00:01:32.920
We'll have a name of account and also point to our components which we

00:01:32.920 --> 00:01:37.000
just imported that service file

00:01:37.000 --> 00:01:41.690
and we can now create this account components inside of our views folder.

00:01:45.590 --> 00:01:47.820
It'll be pretty simple for now,

00:01:47.820 --> 00:01:51.800
we'll just place in a level one heading of my account.

00:01:51.800 --> 00:01:56.265
I go to the router we can now create our path for this component,

00:01:56.265 --> 00:01:59.830
so we want this to map to forward slash accounts,

00:01:59.830 --> 00:02:05.350
and then we want to handle any dynamic sections such as our user ID.

00:02:05.350 --> 00:02:08.645
So what we're going to do in here is basically pass in

00:02:08.645 --> 00:02:13.250
a variable using the colon we can give this a name of our choice,

00:02:13.250 --> 00:02:16.925
this is going to allow us to capture this information if required.

00:02:16.925 --> 00:02:19.870
In our case we'll call this the user ID,

00:02:19.870 --> 00:02:22.580
and then over to the app.vue we need to create

00:02:22.580 --> 00:02:27.720
a router link to link to our new components so its placed at the end,

00:02:28.270 --> 00:02:32.570
opening and closing tags and then inside of the opening tag.

00:02:32.570 --> 00:02:34.535
When I did the two prop,

00:02:34.535 --> 00:02:37.490
I see no object where the path,

00:02:37.490 --> 00:02:42.695
this will be dynamic so we can place this inside of the back ticks and we want to go to

00:02:42.695 --> 00:02:49.110
forward slash account and then we can make use of our user objects and link to the ID.

00:02:52.820 --> 00:02:58.880
So over in the browser, and we also need to add a name inside of here,

00:02:59.340 --> 00:03:02.780
and we can also place one of these separated in two

00:03:02.780 --> 00:03:06.170
between each one of these behalf this pipe symbol.

00:03:06.170 --> 00:03:10.860
Refresh and now click on our accounts and our my account section is now

00:03:10.860 --> 00:03:15.560
displaying when we link to this account section which includes the dynamic user ID.

00:03:15.560 --> 00:03:21.235
If we do need to access the data inside of this dynamic section such as this user ID,

00:03:21.235 --> 00:03:23.995
we can access these weird routes.params,

00:03:23.995 --> 00:03:25.805
just like we looked at earlier.

00:03:25.805 --> 00:03:28.305
Up to the account.vue,

00:03:28.305 --> 00:03:33.145
open up the double curly braces we can access the current route information,

00:03:33.145 --> 00:03:36.890
the params which now gives us access to

00:03:36.890 --> 00:03:41.905
this user ID variable which we sat inside of our router file.

00:03:41.905 --> 00:03:47.135
Also if we wanted to link to this route by the name of an app.view,

00:03:47.135 --> 00:03:50.870
we can do this just like we did both with this home route so

00:03:50.870 --> 00:03:55.435
instead of having a path just like this which includes a dynamic section,

00:03:55.435 --> 00:03:59.150
we can link to the route name which was account then we can pass

00:03:59.150 --> 00:04:02.750
in the parameters just like we see above which was an object.

00:04:02.750 --> 00:04:05.135
We need to pass in the user ID,

00:04:05.135 --> 00:04:07.770
which is equal to the user.id.

00:04:09.110 --> 00:04:12.585
By this out, the Home, the About,

00:04:12.585 --> 00:04:15.390
and the Account page is still working too,

00:04:15.390 --> 00:04:20.590
we could also pass in a multiple params and also have multiple dynamics sections too.

00:04:20.590 --> 00:04:23.390
So for example, if this account section and then

00:04:23.390 --> 00:04:26.635
go on to list all of the blog posts for this user,

00:04:26.635 --> 00:04:30.065
we could then also store any of the individual blog posts

00:04:30.065 --> 00:04:33.920
into eight dynamic segments and this works exactly the same.

00:04:33.920 --> 00:04:35.959
If we go to the app.vue,

00:04:35.959 --> 00:04:39.035
we can pass in a second parameter.

00:04:39.035 --> 00:04:43.880
This one was the post and we can pass in any unique name into here,

00:04:43.880 --> 00:04:47.270
refresh, let's try this out.

00:04:47.270 --> 00:04:51.600
We see our post ID is also available too.
