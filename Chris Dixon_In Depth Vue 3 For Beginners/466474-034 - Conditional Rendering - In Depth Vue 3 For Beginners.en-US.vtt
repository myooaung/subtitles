WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.920 --> 00:00:05.100
Earlier when we first looked at this event data array,

00:00:05.100 --> 00:00:07.680
I recommended that you set some of the dates in

00:00:07.680 --> 00:00:10.740
these objects be in the past and some in the future.

00:00:10.740 --> 00:00:12.270
If you've not yet done this,

00:00:12.270 --> 00:00:14.385
now will be the time to do it.

00:00:14.385 --> 00:00:19.005
This is what I would like you to do: set at least one date to be in the past,

00:00:19.005 --> 00:00:21.075
one to be with today's date,

00:00:21.075 --> 00:00:23.460
one to be with the date tomorrow,

00:00:23.460 --> 00:00:26.685
and another with any of a future date.

00:00:26.685 --> 00:00:30.355
This will help with testing things out very soon.

00:00:30.355 --> 00:00:33.950
To do this, we're going to make use of conditional rendering,

00:00:33.950 --> 00:00:36.680
which is a way of only showing something,

00:00:36.680 --> 00:00:38.000
such as our event,

00:00:38.000 --> 00:00:40.670
when a certain condition is met.

00:00:40.670 --> 00:00:45.140
In our case, the condition is going to be the number of days left,

00:00:45.140 --> 00:00:49.915
which we have setup from the last video inside of this method.

00:00:49.915 --> 00:00:52.400
If this returns a positive number,

00:00:52.400 --> 00:00:55.205
this event is still yet to take place.

00:00:55.205 --> 00:00:57.545
However, if it returns a negative number,

00:00:57.545 --> 00:00:59.525
we know this date has passed.

00:00:59.525 --> 00:01:02.425
Meaning we can hide this from the user inside the browser.

00:01:02.425 --> 00:01:04.365
To do this we're going to go over to our

00:01:04.365 --> 00:01:09.030
event.view and then open inside of the opening article section.

00:01:09.030 --> 00:01:13.125
We can show and hide these events by using a view directive called

00:01:13.125 --> 00:01:16.415
v-show.v-show is another directive

00:01:16.415 --> 00:01:20.210
and will only show this element if this condition is true.

00:01:20.210 --> 00:01:23.480
For example, if 10 is greater than 1,

00:01:23.480 --> 00:01:27.070
this is now a true and our events will now display.

00:01:27.070 --> 00:01:29.860
If we say if 10 is equal to 1,

00:01:29.860 --> 00:01:33.365
this is not true, so this will now remove our events.

00:01:33.365 --> 00:01:36.800
But instead what we need to do is to look at this days left

00:01:36.800 --> 00:01:40.880
prop and decide if it's a positive or negative number.

00:01:40.880 --> 00:01:45.140
To d this, we can use a JavaScript function called Math.sign.

00:01:45.140 --> 00:01:49.205
This will allow us to pass in any number and get back either a negative one,

00:01:49.205 --> 00:01:51.825
a positive one or a zero.

00:01:51.825 --> 00:01:53.800
We can see here with the examples,

00:01:53.800 --> 00:01:55.510
if we pass in the value of three,

00:01:55.510 --> 00:01:56.970
will get an output of one.

00:01:56.970 --> 00:02:00.115
If it's negative, we'll get the value of negative one.

00:02:00.115 --> 00:02:03.140
If it's zero, we get the value of zero.

00:02:03.140 --> 00:02:05.770
It doesn't care the value of the number which we're passing,

00:02:05.770 --> 00:02:07.900
we're only ever going to get back a one,

00:02:07.900 --> 00:02:10.315
a negative one, or a zero.

00:02:10.315 --> 00:02:12.700
This is going to be perfect for using in

00:02:12.700 --> 00:02:19.760
our v-show let's pass in Math.sign and then our days left prop.

00:02:19.760 --> 00:02:25.610
We can now check if this is equal to negative one or to the project.

00:02:25.610 --> 00:02:28.180
The results which you see back here will depend on

00:02:28.180 --> 00:02:31.240
the date which you've set for each one of your events.

00:02:31.240 --> 00:02:34.225
I currently only have one event which is in the past,

00:02:34.225 --> 00:02:36.455
so I only see one in the browser.

00:02:36.455 --> 00:02:39.360
To see the events which is still yet to happen,

00:02:39.360 --> 00:02:41.470
we can change this to be a positive one.

00:02:41.470 --> 00:02:42.770
But with these two options,

00:02:42.770 --> 00:02:46.175
we've only seen five out of our six events.

00:02:46.175 --> 00:02:49.940
This is because we have set one of these events to be today's date,

00:02:49.940 --> 00:02:52.815
meaning that there will be zero days left.

00:02:52.815 --> 00:02:57.935
To deal with this, we're going to set this to be not equal to negative one,

00:02:57.935 --> 00:03:01.250
which will filter out all of the expiry dates and only leave us with

00:03:01.250 --> 00:03:04.930
the date which are either today or any in the future.

00:03:04.930 --> 00:03:07.460
The next thing to take care of is the text,

00:03:07.460 --> 00:03:09.320
which is the days left.

00:03:09.320 --> 00:03:11.690
If the number of days left is zero,

00:03:11.690 --> 00:03:13.190
it should read today,

00:03:13.190 --> 00:03:14.930
and for any past events,

00:03:14.930 --> 00:03:17.155
it should read days ago.

00:03:17.155 --> 00:03:21.365
We can, again, make use of the days left prop, which is eventReceive,

00:03:21.365 --> 00:03:26.870
and combine it with some more view directives called v-if and v-else.

00:03:26.870 --> 00:03:31.380
As they sound, these work just like JavaScript if-else statements.

00:03:31.380 --> 00:03:34.780
We provide two sections of code called if and else.

00:03:34.780 --> 00:03:36.400
If the condition is true,

00:03:36.400 --> 00:03:37.765
that section will run.

00:03:37.765 --> 00:03:41.075
If it's false, the else section that will run instead.

00:03:41.075 --> 00:03:43.250
Down at the bottom of this event template,

00:03:43.250 --> 00:03:44.665
we have this p elements,

00:03:44.665 --> 00:03:47.955
which I'll put to this section just above.

00:03:47.955 --> 00:03:50.415
Let's deal with today's events first.

00:03:50.415 --> 00:03:54.880
Open up the p elements and we'll set the text to be today.

00:03:54.880 --> 00:03:58.910
So what condition do we want to display this element?

00:03:58.910 --> 00:04:04.655
Well, we're going to check if the number of days left is equal to the value of zero.

00:04:04.655 --> 00:04:07.955
We can then combine this with a v-if directive

00:04:07.955 --> 00:04:11.630
and check if the number of days left is equal to zero.

00:04:11.630 --> 00:04:13.070
If this is true,

00:04:13.070 --> 00:04:17.255
this is going to render the text of today for this particular event.

00:04:17.255 --> 00:04:20.495
Save this, and we only have one event which is today,

00:04:20.495 --> 00:04:22.825
and we see this text inside here.

00:04:22.825 --> 00:04:26.270
This now leaves our two p elements alongside each other,

00:04:26.270 --> 00:04:29.150
but we only want to show one or the other.

00:04:29.150 --> 00:04:34.380
For this, we can add the v-else directive to the next p element.

00:04:34.730 --> 00:04:38.270
Save this, and now we only ever see one of

00:04:38.270 --> 00:04:42.240
these sections depending on the number of days left.

00:04:42.460 --> 00:04:46.564
It's one thing to be aware of when using v-if and v-else,

00:04:46.564 --> 00:04:51.325
the v-else section must immediately follow the v-if element,

00:04:51.325 --> 00:04:54.790
so we couldn't have anything in between such as a span.

00:04:54.790 --> 00:04:57.720
As we can see, this will cause an error.

00:04:57.880 --> 00:05:03.940
This now means the first element of today will show if the number of days is zero.

00:05:03.940 --> 00:05:06.515
If the event is in the past or the future,

00:05:06.515 --> 00:05:09.205
the second p element will display.

00:05:09.205 --> 00:05:11.480
Inside of this second p elements,

00:05:11.480 --> 00:05:15.530
there is some further work which we need to do to show the correct words.

00:05:15.530 --> 00:05:17.270
First of all, inside the small section,

00:05:17.270 --> 00:05:19.360
we have this word of days.

00:05:19.360 --> 00:05:23.180
This word should be changed to the word day if only one day

00:05:23.180 --> 00:05:27.580
is left and the JavaScript ternary operator is going to help with this.

00:05:27.580 --> 00:05:31.605
Cut this out, open up the curly braces.

00:05:31.605 --> 00:05:36.310
We can check if the number of days left is equal to one.

00:05:36.310 --> 00:05:39.840
If it's true, we'll output the string of day.

00:05:39.840 --> 00:05:43.600
If not, we'll say days.

00:05:43.670 --> 00:05:46.845
This is a question mark.

00:05:46.845 --> 00:05:50.780
We save this is all in our work and we see one day in the browser,

00:05:50.780 --> 00:05:54.515
59 days and a 144 days too.

00:05:54.515 --> 00:05:58.220
We also need to do a similar thing for this word of "left".

00:05:58.220 --> 00:06:03.155
To see this, if we go through this off and temporarily change this to be positive one,

00:06:03.155 --> 00:06:05.450
any events which have expired,

00:06:05.450 --> 00:06:08.260
the text should read "days ago."

00:06:08.260 --> 00:06:11.160
Let's remove the word of "left",

00:06:11.160 --> 00:06:13.695
open up the double curly braces,

00:06:13.695 --> 00:06:16.805
and then we're going to do a similar thing too up at the where we use

00:06:16.805 --> 00:06:21.930
Math.sign to check if this is a positive or negative number,

00:06:23.150 --> 00:06:25.590
as in the days left.

00:06:25.590 --> 00:06:31.770
Then we're going to check if the returned number is not equal to negative one.

00:06:32.180 --> 00:06:35.790
This will return true if the date is in the future,

00:06:35.790 --> 00:06:39.380
and we can output the text which is going to be "left".

00:06:39.380 --> 00:06:42.720
Or alternatively the text of "ago".

00:06:42.890 --> 00:06:45.810
Over to the browser the section now works,

00:06:45.810 --> 00:06:47.970
we see "12 days ago".

00:06:47.970 --> 00:06:50.740
Change this to be negative one.

00:06:51.500 --> 00:06:54.910
For future events we see days left.

00:06:54.910 --> 00:06:56.855
Something else which we need to take care of

00:06:56.855 --> 00:06:59.990
is if we change this to be a positive number,

00:06:59.990 --> 00:07:02.015
for any events which have expired,

00:07:02.015 --> 00:07:04.130
we still see negative 12.

00:07:04.130 --> 00:07:07.540
This should be simplified to just say "12 days ago."

00:07:07.540 --> 00:07:11.255
For this, we can use another JavaScript math function,

00:07:11.255 --> 00:07:13.440
which is called absolute.

00:07:13.440 --> 00:07:18.320
If we go back to the Mozilla website and down into the method section,

00:07:18.320 --> 00:07:20.525
we have this Maths.abs.

00:07:20.525 --> 00:07:23.560
Down to the example section,

00:07:23.560 --> 00:07:29.210
we can see regardless of if we pass in a negative number or any positive number,

00:07:29.210 --> 00:07:32.330
this will always return the absolute value without

00:07:32.330 --> 00:07:36.230
the negative symbol and this will be ideal for our use case.

00:07:36.230 --> 00:07:40.820
Back over to our template and where we output the number of days left.

00:07:40.820 --> 00:07:44.070
We're going to now pass this into Math.abs,

00:07:44.210 --> 00:07:48.360
save this, and now our negative number should be removed.

00:07:48.360 --> 00:07:55.090
Let's just check the positive numbers are working fine and this is all now working too.
