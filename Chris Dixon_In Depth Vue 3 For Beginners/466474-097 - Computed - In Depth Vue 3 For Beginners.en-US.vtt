WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.230 --> 00:00:05.640
Computed properties are also available in composition too and

00:00:05.640 --> 00:00:10.815
we can now make use of them to filter out our cards by the selected category.

00:00:10.815 --> 00:00:14.370
Over in the AppHome.vue components,

00:00:14.370 --> 00:00:16.035
up in the template,

00:00:16.035 --> 00:00:21.315
we have a link which links to our category and then forward slash our params.

00:00:21.315 --> 00:00:24.420
In fact, this can be shortened and see

00:00:24.420 --> 00:00:29.560
both the same name and also over in our router's index page.

00:00:29.660 --> 00:00:33.210
We've already setup a path to handle this,

00:00:33.210 --> 00:00:35.940
and then display our Category component.

00:00:35.940 --> 00:00:39.030
It's now inside of this Category where we can now handle,

00:00:39.030 --> 00:00:42.345
filtering out these cards by the clicked on category.

00:00:42.345 --> 00:00:45.720
Just below the template, we'll create a script section,

00:00:45.720 --> 00:00:47.920
and then we'll create a setup section which is

00:00:47.920 --> 00:00:50.795
going to handle all of our composition code.

00:00:50.795 --> 00:00:55.315
We need to access all of the available cards to be able to filter.

00:00:55.315 --> 00:00:59.590
We can also make this reactive too by importing ref.

00:00:59.590 --> 00:01:02.200
First, we'll import all of

00:01:02.200 --> 00:01:09.480
our cards and we'll import these from dot dot slash and into our data.

00:01:09.480 --> 00:01:11.440
Since this will be reactive,

00:01:11.440 --> 00:01:18.570
we'll also import the ref from the vue library down to the setup.

00:01:18.570 --> 00:01:22.035
We can now import our cards into vue JS,

00:01:22.035 --> 00:01:25.530
store this inside of a constant called allCards,

00:01:25.530 --> 00:01:27.465
as in the ref as a wrapper,

00:01:27.465 --> 00:01:29.860
and we'll wrap our cards.

00:01:29.930 --> 00:01:32.090
Just as a temporary measure,

00:01:32.090 --> 00:01:35.600
we're going to set up a constant called category.

00:01:35.600 --> 00:01:38.420
This is going to store in the category which use

00:01:38.420 --> 00:01:41.420
the clicks on such as travel, Halloween, or birthday.

00:01:41.420 --> 00:01:44.890
But we will soon get this from the URL parameters.

00:01:44.890 --> 00:01:47.295
Now, we'll set this to be all.

00:01:47.295 --> 00:01:52.280
Then we can setup a computed property which watches this category and when it changes,

00:01:52.280 --> 00:01:55.270
it will then return the filtered down cards.

00:01:55.270 --> 00:02:01.130
We set this up as a variable or a constant and once I call my in cardsByCategory,

00:02:01.130 --> 00:02:04.565
and then we can assign this to be a computed value.

00:02:04.565 --> 00:02:10.780
Inside here we pass in a function which will run each time the data changes.

00:02:10.780 --> 00:02:12.540
Since we are now using computed,

00:02:12.540 --> 00:02:16.085
this also needs to be imported from the vue library.

00:02:16.085 --> 00:02:19.950
Now, inside here we can return one of two values.

00:02:19.950 --> 00:02:23.240
First of all, if the category is equal to all,

00:02:23.240 --> 00:02:26.960
all we want to do is to return all of the available cards.

00:02:26.960 --> 00:02:29.960
We don't want to perform any filtering.

00:02:29.960 --> 00:02:35.700
We'll first check if category is equal to all.

00:02:35.700 --> 00:02:38.645
If it is, we'll then return back the data,

00:02:38.645 --> 00:02:40.580
which is the allCards.

00:02:40.580 --> 00:02:43.010
Since this is a reactive reference,

00:02:43.010 --> 00:02:45.020
we also need to return the value.

00:02:45.020 --> 00:02:47.000
If this is not equal to all,

00:02:47.000 --> 00:02:51.425
this means we've clicked on a category and have some filtering we need to do.

00:02:51.425 --> 00:02:55.290
Instead, we'll return allCards.value,

00:02:57.140 --> 00:03:00.275
call the JavaScript filter method.

00:03:00.275 --> 00:03:05.675
This will then run through all of our cards and then we'll run a function for each one.

00:03:05.675 --> 00:03:10.405
This will only return back the filtered version of all cards.

00:03:10.405 --> 00:03:16.010
Now, we need to pass in the individual card and perform a test for each one.

00:03:16.010 --> 00:03:20.300
The test which we're going to add in is to run through the card,

00:03:20.300 --> 00:03:23.600
select the categories, and then we want to

00:03:23.600 --> 00:03:27.020
check if the category includes a certain value.

00:03:27.020 --> 00:03:32.160
The category which we want to check against is this category just here.

00:03:33.830 --> 00:03:36.610
Just to recap, we're looping through all of

00:03:36.610 --> 00:03:39.875
our cards and then we're going to return a filtered version.

00:03:39.875 --> 00:03:44.470
The way we filter is by selecting each individual card looping through

00:03:44.470 --> 00:03:49.535
the categories and checking if it includes the selected category from above.

00:03:49.535 --> 00:03:52.020
Just before our closing, set a brace.

00:03:52.020 --> 00:03:53.340
We'll then return this.

00:03:53.340 --> 00:03:58.830
We can use this in our template, up to the top.

00:03:58.830 --> 00:04:00.870
Inside of the Category header,

00:04:00.870 --> 00:04:04.945
what we're going to do is select the router or the current route.

00:04:04.945 --> 00:04:07.450
Then when we click on any of these,

00:04:07.450 --> 00:04:09.130
we can then take into forward

00:04:09.130 --> 00:04:13.580
slash category and then we can access the individual params.

00:04:13.700 --> 00:04:20.170
Select the params and the one we're interested in is the category.

00:04:22.270 --> 00:04:25.530
Make sure this is spelled correctly.

00:04:25.580 --> 00:04:30.810
See anniversary, husband, wife.

00:04:30.810 --> 00:04:33.440
Then below this we can check our computer property is

00:04:33.440 --> 00:04:37.430
working by outputting the cardsByCategory.

00:04:38.570 --> 00:04:42.195
First of all, we'll click on any of these links,

00:04:42.195 --> 00:04:44.865
we'll see a list of all of our cards.

00:04:44.865 --> 00:04:47.460
Now, we don't see the filtered version just here

00:04:47.460 --> 00:04:49.930
because we've set the category to be all.

00:04:49.930 --> 00:04:53.880
We change this to be any other value such as birthday.

00:04:55.430 --> 00:05:00.530
We should now only see cards which have been filtered down by the birthday category.

00:05:00.530 --> 00:05:04.765
We can try one more. It's by wife,

00:05:04.765 --> 00:05:08.370
refresh, and we can see the category for card number 1.

00:05:08.370 --> 00:05:10.500
Includes the category of wife.

00:05:10.500 --> 00:05:12.210
Now, we know this is working.

00:05:12.210 --> 00:05:14.280
Let's now go over to the template.

00:05:14.280 --> 00:05:16.530
I'll put this in an unordered list,

00:05:16.530 --> 00:05:21.960
a class for the CSS which is going to be grid and this is called wrapper.

00:05:22.720 --> 00:05:27.045
Then a list item which will include the for loop,

00:05:27.045 --> 00:05:34.440
which will be card in cardsByCategory, a key.

00:05:34.440 --> 00:05:38.145
Each one of our cards has access to a unique ID.

00:05:38.145 --> 00:05:41.010
This is an ideal key to use.

00:05:41.010 --> 00:05:43.140
Between this list item,

00:05:43.140 --> 00:05:45.170
we can also allow the user to click on

00:05:45.170 --> 00:05:48.785
this card and then we forward it to the edit screen.

00:05:48.785 --> 00:05:51.510
This will need a router link.

00:05:52.010 --> 00:05:56.135
Now, we'll keep it simple and we'll output the card.name.

00:05:56.135 --> 00:05:58.550
It also needs the to property.

00:05:58.550 --> 00:06:01.420
We'll just link this to the homepage.

00:06:01.420 --> 00:06:04.605
Save over to the browser,

00:06:04.605 --> 00:06:09.395
click on any of these, and then we're taking it back to the homepage.

00:06:09.395 --> 00:06:12.560
Now, this all works and a bit later on we'll come back to

00:06:12.560 --> 00:06:16.410
this and we will link these cards to the edit screen.
