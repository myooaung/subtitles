WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.350 --> 00:00:04.200
In an earlier video, we mentioned Vue.js and

00:00:04.200 --> 00:00:08.265
control either all parts of a user interface.

00:00:08.265 --> 00:00:10.410
To get some experience of Vue.js,

00:00:10.410 --> 00:00:13.620
we are now going to take a simple HTML site,

00:00:13.620 --> 00:00:15.210
which is a personal site,

00:00:15.210 --> 00:00:18.705
and apply some Vue.js to create a blog section.

00:00:18.705 --> 00:00:21.330
We can jump into Vue.js,

00:00:21.330 --> 00:00:25.980
the starter project is available to download from the GitHub repository.

00:00:25.980 --> 00:00:28.050
To find this, you need to head over to

00:00:28.050 --> 00:00:33.700
this link which is github.com/chrisdixon161/vue-3-course.

00:00:34.580 --> 00:00:39.840
You can also find this as a pin repository from my profile.

00:00:39.840 --> 00:00:42.230
Once you head into this section,

00:00:42.230 --> 00:00:45.170
we're going to have all of the code which you need for this course.

00:00:45.170 --> 00:00:47.970
Currently we just have the portfolio starter,

00:00:47.970 --> 00:00:52.715
but your version will have all of the sample code which is needed for other projects,

00:00:52.715 --> 00:00:57.535
along with also the final code for each video so we can compare if you get stuck.

00:00:57.535 --> 00:01:00.680
What you'll need to do is to download all of this repository.

00:01:00.680 --> 00:01:02.705
So if you go into the code section,

00:01:02.705 --> 00:01:06.000
you can download this as a zip file.

00:01:06.530 --> 00:01:09.270
Lets open this. Then from here,

00:01:09.270 --> 00:01:12.660
we can extract all the information which we need.

00:01:12.660 --> 00:01:16.370
So lets just place this on the desktop and open this up.

00:01:16.370 --> 00:01:19.790
From here, we have the portfolio starter,

00:01:19.790 --> 00:01:22.504
which is just the basic HTML and CSS,

00:01:22.504 --> 00:01:27.010
which we're going to use to test how view works on a simple project.

00:01:27.010 --> 00:01:29.925
What you'll need to do is to rename this,

00:01:29.925 --> 00:01:32.640
I'm just going to keep this as a portfolio,

00:01:32.640 --> 00:01:35.875
and then keep this separate from the rest of the code.

00:01:35.875 --> 00:01:40.385
Open this up in Visual Studio code or your editor of choice.

00:01:40.385 --> 00:01:44.275
Then inside here, all will see is a index page,

00:01:44.275 --> 00:01:48.040
which is just some regular HTML we have of our head section,

00:01:48.040 --> 00:01:49.855
we will link to a font,

00:01:49.855 --> 00:01:52.370
we link to a provided style sheets,

00:01:52.370 --> 00:01:55.854
we have a basic header section which has a title,

00:01:55.854 --> 00:01:57.805
and then some navigation links.

00:01:57.805 --> 00:02:00.425
Then we have this blog section.

00:02:00.425 --> 00:02:04.995
This blog section just has two static HTML articles,

00:02:04.995 --> 00:02:08.185
I'm going to make this dynamic with Vue.js.

00:02:08.185 --> 00:02:11.300
The important thing now is down at the bottom,

00:02:11.300 --> 00:02:15.940
you have a script which is a link to the Vue CDN,

00:02:15.940 --> 00:02:18.010
so this is a link to

00:02:18.010 --> 00:02:22.925
the Vue Call Library which we're going to use to explore some of the Vue features.

00:02:22.925 --> 00:02:26.940
This means we don't need to do anything special such as downloading packages.

00:02:26.940 --> 00:02:30.410
All we're doing here is directly linking it to Vue.js.

00:02:30.410 --> 00:02:34.210
Then we can include some of the features in our project.

00:02:34.210 --> 00:02:36.210
To begin with Vue.js,

00:02:36.210 --> 00:02:38.660
we're going to create a new file,

00:02:38.660 --> 00:02:40.580
which is going to be a JavaScript file,

00:02:40.580 --> 00:02:44.345
and I'm going to call this the script.js.

00:02:44.345 --> 00:02:50.329
We can link this just like any regular script down at the bottom of our HTML,

00:02:50.329 --> 00:02:56.065
and we add the source attribute which is going to link to the script.js.

00:02:56.065 --> 00:02:58.550
We can also opens this index page up in the browser,

00:02:58.550 --> 00:03:03.020
we can double-click on the index or HTML file inside of our project.

00:03:03.020 --> 00:03:04.820
Or if using a Visual Studio Code,

00:03:04.820 --> 00:03:11.730
we can right-click on this tab and then copy the path, paste this in.

00:03:11.730 --> 00:03:13.040
This is the starter project,

00:03:13.040 --> 00:03:14.930
which is just HTML.

00:03:14.930 --> 00:03:21.060
We're going to begin by converting these HTML sections to be controlled by Vue.js.

00:03:21.110 --> 00:03:25.205
To do this, we'll head over to the script file.

00:03:25.205 --> 00:03:29.270
The first thing we need to do is to create a new Vue instance.

00:03:29.270 --> 00:03:31.775
We do this with Vue, capital V,

00:03:31.775 --> 00:03:35.545
and then use a function code to createApp.

00:03:35.545 --> 00:03:39.350
We have access to Vue.createApp since we're using

00:03:39.350 --> 00:03:43.550
the CDN link down at the bottom of our index page.

00:03:43.550 --> 00:03:49.775
In the upcoming videos, we'll also pass a Options object that is instance too.

00:03:49.775 --> 00:03:55.390
But for now, we need to mount this Vue application to our index page.

00:03:55.390 --> 00:03:59.560
To do this, we need to tell Vue exactly where we want to mount to.

00:03:59.560 --> 00:04:04.055
We could control the full HTML page if you wanted to.

00:04:04.055 --> 00:04:07.655
All can mount to just a certain path if you wanted.

00:04:07.655 --> 00:04:12.200
For example, this Vue instance is going to control our blog section,

00:04:12.200 --> 00:04:15.200
which is a wrapper for all of our articles.

00:04:15.200 --> 00:04:18.150
Will have this section with the idea of blog,

00:04:18.150 --> 00:04:21.065
so we're going to make use of this and tell Vue.js that

00:04:21.065 --> 00:04:25.105
this section is the part of the HTML which you want to control.

00:04:25.105 --> 00:04:26.760
This has the id blog,

00:04:26.760 --> 00:04:29.600
so all we need to do is to go over to createApp,

00:04:29.600 --> 00:04:32.330
and then call the mount method where we're

00:04:32.330 --> 00:04:35.330
going to pass in the elements which you want to link to.

00:04:35.330 --> 00:04:38.360
This is just like regular CSS selectors,

00:04:38.360 --> 00:04:40.570
so if this is an idea, we use the hash,

00:04:40.570 --> 00:04:46.560
we use the [inaudible] or we can directly target any of our elements by name,

00:04:46.560 --> 00:04:48.920
so we could target this section,

00:04:48.920 --> 00:04:51.500
and we want to target to the blog.

00:04:51.500 --> 00:04:55.000
Although here we are targeting a section element,

00:04:55.000 --> 00:04:57.670
it doesn't matter what type of elements we mount to.

00:04:57.670 --> 00:04:59.390
It could be the body section,

00:04:59.390 --> 00:05:00.695
it could be DIV,

00:05:00.695 --> 00:05:03.065
anything is completely fine.

00:05:03.065 --> 00:05:06.470
We could also create multiple Vue instances too.

00:05:06.470 --> 00:05:08.315
If we duplicated this,

00:05:08.315 --> 00:05:10.640
we could again call Vue.createApp,

00:05:10.640 --> 00:05:13.795
but this time could mount to a different section.

00:05:13.795 --> 00:05:18.260
For example, if we wanted to have this Vue instance to control the blog,

00:05:18.260 --> 00:05:21.805
and then we wanted to also control the header section,

00:05:21.805 --> 00:05:24.110
all we need to do is to pass in

00:05:24.110 --> 00:05:28.585
our different selector and let's go for the header element,

00:05:28.585 --> 00:05:32.430
which is the header section which contains our level one heading,

00:05:32.430 --> 00:05:34.490
alongside our nav links.

00:05:34.490 --> 00:05:38.910
We can also change this title to be our name,

00:05:40.070 --> 00:05:44.460
and also the same for the page title too.

00:05:47.200 --> 00:05:49.954
This means we have now created

00:05:49.954 --> 00:05:52.430
two separate Vue applications which

00:05:52.430 --> 00:05:55.415
are completely independent and can have their own data,

00:05:55.415 --> 00:05:57.990
as we'll see in the next video.
