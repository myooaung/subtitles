WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.070
Jumping into repository.

00:00:02.070 --> 00:00:07.275
We see that this is Repository which deals with vets objects of classes.

00:00:07.275 --> 00:00:09.975
The vet class, it's key type is integer.

00:00:09.975 --> 00:00:13.260
And on this particular repository just has one method which is findall,

00:00:13.260 --> 00:00:15.030
which returns a collection of vectors.

00:00:15.030 --> 00:00:19.180
And because it's extends the spring data repository,

00:00:19.610 --> 00:00:22.920
then the implementation of this is dynamically

00:00:22.920 --> 00:00:25.785
generated and just available for us out of the box.

00:00:25.785 --> 00:00:28.095
Also, you'll notice as well that it's cacheable.

00:00:28.095 --> 00:00:30.375
So this is hacking into Springs caching framework.

00:00:30.375 --> 00:00:33.450
And how this works is that this string which is passed in here,

00:00:33.450 --> 00:00:35.475
establishes a so-called cache region,

00:00:35.475 --> 00:00:37.015
which is effectively a map.

00:00:37.015 --> 00:00:41.300
And what's inside that map is going to be a set of all the different responses on the,

00:00:41.300 --> 00:00:43.130
all the different combinations of keys

00:00:43.130 --> 00:00:45.350
that come in are rather request paths that come in.

00:00:45.350 --> 00:00:48.125
So because the requests Parthia doesn't change,

00:00:48.125 --> 00:00:52.415
then we'll only have one collection of vet inside this vets cash region.

00:00:52.415 --> 00:00:55.340
But it just means that the next time when a request is made to

00:00:55.340 --> 00:00:57.440
this repository is just gonna return it from

00:00:57.440 --> 00:01:00.080
the cache instead of going back out to the database.

00:01:00.080 --> 00:01:05.570
Okay, let's have another look around. Everything else.

00:01:05.570 --> 00:01:07.590
It's interesting.

00:01:09.220 --> 00:01:12.930
Okay, so let's close those down for now.

00:01:14.890 --> 00:01:17.790
And these two.
