WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.760
So if we just get rid of that for a second.

00:00:02.760 --> 00:00:08.130
And this two. So now we've got an understanding of how dependency resolution works.

00:00:08.130 --> 00:00:11.070
Let's look at what that means for us actually in the ID.

00:00:11.070 --> 00:00:13.990
So if I open up idea,

00:00:16.100 --> 00:00:20.850
so this is basically the project which is the default we've just seen.

00:00:20.850 --> 00:00:24.030
So we've got demo here and we've got this pond XML file.

00:00:24.030 --> 00:00:25.290
And it's formed XML file.

00:00:25.290 --> 00:00:27.150
You can see here we've got Spring Boot starter,

00:00:27.150 --> 00:00:28.965
Then we've got spring bookstore to test.

00:00:28.965 --> 00:00:31.305
We've generally vintage excluded.

00:00:31.305 --> 00:00:33.270
If we're going to side-by-side

00:00:33.270 --> 00:00:42.995
almost with the palm file as it's shown inside that it's been initialized project.

00:00:42.995 --> 00:00:45.545
You can see that these are the same.

00:00:45.545 --> 00:00:46.835
So it's the same project.

00:00:46.835 --> 00:00:49.325
And we're going to plug in here as well because I'm going to plug in here.

00:00:49.325 --> 00:00:50.705
So exactly the same project,

00:00:50.705 --> 00:00:53.975
the default project you'll get from a spring initializer created project.

00:00:53.975 --> 00:00:57.515
So just killed up there and reopen the project inspector.

00:00:57.515 --> 00:01:00.124
So we can make this dependency resolution mechanism,

00:01:00.124 --> 00:01:02.720
this graphic dependencies a little more tangible by

00:01:02.720 --> 00:01:05.525
basically going into the Maven window over here.

00:01:05.525 --> 00:01:07.910
And if we look inside the dependency section,

00:01:07.910 --> 00:01:11.720
we can see here we've got Spring Boot starter and 2.3.1,

00:01:11.720 --> 00:01:14.945
which corresponds to this dependency here, Spring Boot starter.

00:01:14.945 --> 00:01:16.325
We've also got this other one here.

00:01:16.325 --> 00:01:18.890
Spring was not a test, which is a test scope dependency,

00:01:18.890 --> 00:01:21.710
which corresponds to this one here spring would start to test,

00:01:21.710 --> 00:01:23.285
but the test scope dependency.

00:01:23.285 --> 00:01:26.540
But again, let's focus on the production one because that's really where all the magic

00:01:26.540 --> 00:01:28.730
happens with how spin boots bringing in

00:01:28.730 --> 00:01:31.355
all of the technologies which you specify in your dependencies.

00:01:31.355 --> 00:01:38.330
So if we open this up, we can see that Spring Boot starter requires these unnatural fact.

00:01:38.330 --> 00:01:46.460
If I go back search.org very quickly,

00:01:46.460 --> 00:01:47.750
a prohibition that close that window up.

00:01:47.750 --> 00:01:53.570
And nevertheless, if we go into here again, here,

00:01:53.570 --> 00:01:57.095
again, back here, this side,

00:01:57.095 --> 00:01:59.975
nobody fully, otherwise, it just shows you the right-hand pain.

00:01:59.975 --> 00:02:01.280
But if we're looking inside here,

00:02:01.280 --> 00:02:06.845
we can see the top-level dependencies in this dependency section, which we saw before.

00:02:06.845 --> 00:02:08.975
We can see it's getting Spring Boot,

00:02:08.975 --> 00:02:10.610
spring Bu auto configure,

00:02:10.610 --> 00:02:12.230
Spring Boot started logging,

00:02:12.230 --> 00:02:14.435
which corresponds to Spring Boot.

00:02:14.435 --> 00:02:18.425
Spring Boot also configure spring boots data logging and so on.

00:02:18.425 --> 00:02:21.095
And also we looked inside the Spring Boot one before.

00:02:21.095 --> 00:02:23.780
I won't go back to social moveon.org and show you that again.

00:02:23.780 --> 00:02:25.880
But again you can see,

00:02:25.880 --> 00:02:28.984
but it brought in spring K4 and spring context.

00:02:28.984 --> 00:02:32.870
And you can see that this one is actually grayed out because maybe been

00:02:32.870 --> 00:02:37.235
smart enough to not include that because it's already included by another dependency.

00:02:37.235 --> 00:02:40.490
And you can see here that's the dependency which has included it as well.

00:02:40.490 --> 00:02:44.900
So yeah, so we can actually take this and go through and we can see

00:02:44.900 --> 00:02:49.310
all of the different dependencies in we can expand,

00:02:49.310 --> 00:02:52.920
expand the tree and one explain the entire tree, but you get the idea.
