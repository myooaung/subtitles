1
00:00:01,040 --> 00:00:05,120
After having executed a built‑in command, we now want to

2
00:00:05,120 --> 00:00:08,740
understand how we can create our own custom command.

3
00:00:08,740 --> 00:00:09,340
For that,

4
00:00:09,340 --> 00:00:12,760
we need to understand that commands are just documents and

5
00:00:12,760 --> 00:00:16,700
that those are plain JSON or YAML files.

6
00:00:16,700 --> 00:00:20,040
I prefer the YAML version of them, by the way,

7
00:00:20,040 --> 00:00:22,040
as it's much easier for humans,

8
00:00:22,040 --> 00:00:26,680
or at least for me, to read. They can be created via the

9
00:00:26,680 --> 00:00:31,040
console, CLI, or other tools like CloudFormation,

10
00:00:31,040 --> 00:00:34,970
and they are deployed into a single account.

11
00:00:34,970 --> 00:00:38,570
But from there, it can be shared to other accounts so

12
00:00:38,570 --> 00:00:42,740
that they can then in turn use them.

13
00:00:42,740 --> 00:00:47,010
This is handy in environments where a central team might create and manage

14
00:00:47,010 --> 00:00:51,850
these documents and then shares them to other accounts so that other teams

15
00:00:51,850 --> 00:00:56,340
can then integrate them into their own workflows.

16
00:00:56,340 --> 00:01:00,740
This process applies to Run Command and Automation workflows.

17
00:01:00,740 --> 00:01:07,320
Both rely on the same type of documents. So let's look at creating a new

18
00:01:07,320 --> 00:01:13,950
document for Run Command. In the Systems Manager console, we scroll all the

19
00:01:13,950 --> 00:01:19,240
way down to Documents in the Shared Resources section.

20
00:01:19,240 --> 00:01:22,900
We'll find all the documents here that are owned by Amazon and

21
00:01:22,900 --> 00:01:27,340
the ones we created or that are shared with us.

22
00:01:27,340 --> 00:01:30,770
We want to create our own, so we click on Create command or

23
00:01:30,770 --> 00:01:36,240
session to get to the Create document console.

24
00:01:36,240 --> 00:01:39,820
We give our new document a name. A naming convention helps to

25
00:01:39,820 --> 00:01:43,290
find the document later on. In this case,

26
00:01:43,290 --> 00:01:47,830
we call it chocolatey‑install‑app to show users that this

27
00:01:47,830 --> 00:01:52,740
document can install applications using chocolatey. The hyphens

28
00:01:52,740 --> 00:01:56,240
are important as spaces are not allowed.

29
00:01:56,240 --> 00:02:00,420
We can then optionally configure what AWS resource types we

30
00:02:00,420 --> 00:02:04,550
want to allow this document to run on. Let's search for

31
00:02:04,550 --> 00:02:09,140
instance and select the EC2::Instance type.

32
00:02:09,140 --> 00:02:11,990
This makes sure that it will only run on EC2

33
00:02:11,990 --> 00:02:14,740
instances. I mentioned I prefer YAML,

34
00:02:14,740 --> 00:02:19,000
so that's what I'm going to select here. And the code editor

35
00:02:19,000 --> 00:02:23,740
changes the example code from JSON to YAML.

36
00:02:23,740 --> 00:02:26,870
I will paste the command in here and then walk through it step

37
00:02:26,870 --> 00:02:31,770
by step. The schemaVersion needs to be 2.2.

38
00:02:31,770 --> 00:02:36,000
That's a fixed version number, at least for now.

39
00:02:36,000 --> 00:02:41,240
The description can be any string that describes what this document will do.

40
00:02:41,240 --> 00:02:45,900
The parameters property is a list of parameters we want users

41
00:02:45,900 --> 00:02:48,740
to provide when executing this document.

42
00:02:48,740 --> 00:02:54,540
The only parameter we need is the name of the app we want to install.

43
00:02:54,540 --> 00:03:01,240
Moving on to the mainSteps part, we have a list of actions we can execute.

44
00:03:01,240 --> 00:03:07,340
Essentially, here we reference built‑in actions of the Systems Manager service,

45
00:03:07,340 --> 00:03:12,270
for example, the aws:RunPowerShellScript action.

46
00:03:12,270 --> 00:03:17,240
The AWS documentation is very helpful in finding other available actions.

47
00:03:17,240 --> 00:03:21,840
Each action will have different input requirements.

48
00:03:21,840 --> 00:03:26,500
This specific action here only needs the Run Command input,

49
00:03:26,500 --> 00:03:30,880
which is the command we want to run. To install an app via Chocolatey,

50
00:03:30,880 --> 00:03:37,340
we need to run choco install on the application name.

51
00:03:37,340 --> 00:03:41,800
We can reference document parameters using this double curly bracket

52
00:03:41,800 --> 00:03:50,170
syntax here and reference our app parameter. The yes parameter tells

53
00:03:50,170 --> 00:03:52,880
chocolatey to approve all prompts.

54
00:03:52,880 --> 00:03:56,040
That's all we need to do.

55
00:03:56,040 --> 00:03:59,830
Click Create the document, and then under Owned by

56
00:03:59,830 --> 00:04:04,640
me, we can now see our document.

57
00:04:04,640 --> 00:04:08,980
We can also go to the Run Command service tab, execute a

58
00:04:08,980 --> 00:04:15,940
command, and in here filter the commands by those we own, and we

59
00:04:15,940 --> 00:04:25,000
can see our command with the app parameter we configured. Voila, our very own custom document.

