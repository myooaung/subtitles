1
00:00:01,030 --> 00:00:06,840
In this demo, we will execute the second type of Systems Manager document,

2
00:00:06,840 --> 00:00:14,340
an automation document in order to build a new AMI from an EC2 instance.

3
00:00:14,340 --> 00:00:18,990
We're in our, by now, very familiar Systems Manager console.

4
00:00:18,990 --> 00:00:22,140
And in order to execute an automation document,

5
00:00:22,140 --> 00:00:26,540
we browse to the automation entry here.

6
00:00:26,540 --> 00:00:27,970
Inside of automation,

7
00:00:27,970 --> 00:00:32,490
we can find historical information about previous automation executions.

8
00:00:32,490 --> 00:00:33,030
And from here,

9
00:00:33,030 --> 00:00:38,610
we can also execute a new automation document There are plenty of

10
00:00:38,610 --> 00:00:42,140
categories of automation documents available here.

11
00:00:42,140 --> 00:00:46,040
I definitely encourage you to have a browse through them.

12
00:00:46,040 --> 00:00:47,190
But for now,

13
00:00:47,190 --> 00:00:50,740
we're interested in the AMI management category where we

14
00:00:50,740 --> 00:00:55,870
can find the AWS‑CreateImage document.

15
00:00:55,870 --> 00:00:58,830
This document is used to create a new Amazon machine

16
00:00:58,830 --> 00:01:03,140
image from existing EC2 instances.

17
00:01:03,140 --> 00:01:10,120
This can be very useful, for example, as a backup solution for certain workloads.

18
00:01:10,120 --> 00:01:11,290
In a previous module,

19
00:01:11,290 --> 00:01:13,910
we talked about maintenance windows and how they

20
00:01:13,910 --> 00:01:17,140
can execute automation documents.

21
00:01:17,140 --> 00:01:21,290
Imagine a maintenance window that executes this document on a

22
00:01:21,290 --> 00:01:24,810
schedule and creates a new AMI once a week.

23
00:01:24,810 --> 00:01:27,730
These are very powerful scenarios that Globomantics

24
00:01:27,730 --> 00:01:29,430
will definitely want to make use of.

25
00:01:29,430 --> 00:01:31,470
Click on Next,

26
00:01:31,470 --> 00:01:37,790
and all we really need to configure is which instance to execute this against.

27
00:01:37,790 --> 00:01:40,040
But hold on, what's this?

28
00:01:40,040 --> 00:01:42,060
AutomationAssumeRole.

29
00:01:42,060 --> 00:01:46,690
We need to create an IAM role that has permissions to execute these

30
00:01:46,690 --> 00:01:53,040
actions against our EC2 instances because the automation service will

31
00:01:53,040 --> 00:01:57,240
have to assume this role to get the permissions.

32
00:01:57,240 --> 00:02:02,240
Okay, over to the IAM console to create a new role.

33
00:02:02,240 --> 00:02:09,340
We create the role and select the EC2 service as the use case.

34
00:02:09,340 --> 00:02:13,740
This will give us a good scaffolding to work with.

35
00:02:13,740 --> 00:02:19,040
Permissions is next, and we search for automation.

36
00:02:19,040 --> 00:02:22,140
There's only this one AutomationAssumeRole,

37
00:02:22,140 --> 00:02:26,140
and it's named here, and that's also the one we now need.

38
00:02:26,140 --> 00:02:29,630
Skip the tags and give our role a name.

39
00:02:29,630 --> 00:02:32,040
And that's pretty much it.

40
00:02:32,040 --> 00:02:34,140
We create the role.

41
00:02:34,140 --> 00:02:37,890
However, there's one more step we need to perform.

42
00:02:37,890 --> 00:02:40,090
As you can see,

43
00:02:40,090 --> 00:02:47,540
selecting the EC2 service configured EC2 as the trusted entity on this role.

44
00:02:47,540 --> 00:02:51,540
That means only EC2 services can assume this role.

45
00:02:51,540 --> 00:02:52,720
Let's change this.

46
00:02:52,720 --> 00:02:58,740
Go back into the role we created and click on Trust relationships.

47
00:02:58,740 --> 00:02:59,720
Edit and,

48
00:02:59,720 --> 00:03:05,280
here under service principal, we need to change this here to an array and

49
00:03:05,280 --> 00:03:15,440
add the ssm.amazonaws.com service. Update and done.

50
00:03:15,440 --> 00:03:22,740
We can now see both SSM and the EC2 service as trusted entities.

51
00:03:22,740 --> 00:03:26,320
We can now go back to the automation service and select our

52
00:03:26,320 --> 00:03:33,210
create AMI document again just like before, only that now we

53
00:03:33,210 --> 00:03:37,040
have all the information we need.

54
00:03:37,040 --> 00:03:42,560
We select the simple instance picker and select our EC2 instance. Here

55
00:03:42,560 --> 00:03:49,220
in the dropdown, we can now simply select the IAM role we just created.

56
00:03:49,220 --> 00:03:57,480
Notice also the NoReboot option here. By default, this is set to false.

57
00:03:57,480 --> 00:04:02,450
Setting this to true means the instance will not be shut down while the

58
00:04:02,450 --> 00:04:04,740
AMI is created.

59
00:04:04,740 --> 00:04:08,590
This doesn't guarantee application‑consistent backups.

60
00:04:08,590 --> 00:04:11,540
We need to make sure we understand this.

61
00:04:11,540 --> 00:04:16,640
If possible, I recommend this should stay on false.

62
00:04:16,640 --> 00:04:20,520
We also get this nice execution link here that we can give

63
00:04:20,520 --> 00:04:24,200
to other people in order to execute this automation document

64
00:04:24,200 --> 00:04:27,040
without going to the console.

65
00:04:27,040 --> 00:04:31,540
Very handy for further automation workflows.

66
00:04:31,540 --> 00:04:37,330
Let's execute this process. Depending on the size of the EC2 instance,

67
00:04:37,330 --> 00:04:42,540
this process can take anywhere from 2 minutes to a couple of minutes more.

68
00:04:42,540 --> 00:04:48,290
Eventually, the status would change from pending to success, and we can go and

69
00:04:48,290 --> 00:04:53,530
check the output. It will tell us the new AMI ID here,

70
00:04:53,530 --> 00:04:57,490
which we can then use to create new AWS instances,

71
00:04:57,490 --> 00:04:59,340
for example.

72
00:04:59,340 --> 00:05:05,770
But where do we find this AMI? That's over in the EC2

73
00:05:05,770 --> 00:05:08,840
service console. Let's go over there.

74
00:05:08,840 --> 00:05:16,420
And in here, we can browse to AMIs. We need to make sure it's configured to

75
00:05:16,420 --> 00:05:29,000
show the AMIs that are owned by us. And yep, here we'll be able to find the AMI ID we just saw in the Systems Manager output.

