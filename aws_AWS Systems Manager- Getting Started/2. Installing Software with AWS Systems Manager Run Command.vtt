WEBVTT
1
00:00:00.990 --> 00:00:02.440
In this demo,

2
00:00:02.440 --> 00:00:07.000
we will be installing software with the use of Systems Manager Run

3
00:00:07.000 --> 00:00:12.540
Command on our managed EC2 Windows instance.

4
00:00:12.540 --> 00:00:14.750
So we find ourselves back in these Systems Manager

5
00:00:14.750 --> 00:00:20.240
console, and scroll down to Run Command.

6
00:00:20.240 --> 00:00:24.760
Here we can see currently running commands. Depending on how busy an

7
00:00:24.760 --> 00:00:30.840
environment is, this list can be empty, like now, or very busy.

8
00:00:30.840 --> 00:00:32.330
Remember, also,

9
00:00:32.330 --> 00:00:36.770
Systems Manager is a regional service. If this here doesn't look

10
00:00:36.770 --> 00:00:41.640
right, make sure you're in the correct region.

11
00:00:41.640 --> 00:00:45.610
The Command History tab shows us all the commands that

12
00:00:45.610 --> 00:00:50.930
have run in the past on our managed instances. This is

13
00:00:50.930 --> 00:00:55.240
very handy for auditing purposes.

14
00:00:55.240 --> 00:00:59.270
Going back to Commands, we can run a command by pressing the orange button

15
00:00:59.270 --> 00:01:06.300
here. Lots of commands are already available. For this demo, we want to show

16
00:01:06.300 --> 00:01:11.140
how to install software on our Windows EC2 instance.

17
00:01:11.140 --> 00:01:15.640
Best way to do this is using PowerShell, of course.

18
00:01:15.640 --> 00:01:25.100
So let's filter this list for commands that support Windows and also

19
00:01:25.100 --> 00:01:33.030
by those commands where the prefix begins with AWS‑Run. We could

20
00:01:33.030 --> 00:01:35.740
also just click through this whole list,

21
00:01:35.740 --> 00:01:40.990
but I know that the command to run a PowerShell script starts with this prefix

22
00:01:40.990 --> 00:01:48.640
here. Now, the next step is important for user experience.

23
00:01:48.640 --> 00:01:50.430
We can click on the name of the command,

24
00:01:50.430 --> 00:01:55.000
but that won't select it at all. That will only open the command's definition

25
00:01:55.000 --> 00:02:00.450
up in a separate tab. Or, to actually select this command,

26
00:02:00.450 --> 00:02:04.540
we can select the radio button next to the name.

27
00:02:04.540 --> 00:02:10.130
So let's do that. Scrolling down, we now need to

28
00:02:10.130 --> 00:02:13.240
configure what we want this command to do.

29
00:02:13.240 --> 00:02:17.640
First of all, we need to select the document version to run.

30
00:02:17.640 --> 00:02:19.070
In a lot of cases,

31
00:02:19.070 --> 00:02:24.240
it will be whatever someone decided the default version should be.

32
00:02:24.240 --> 00:02:31.340
But if that doesn't fit our use case, we can change this to any other version.

33
00:02:31.340 --> 00:02:38.140
Next, we have this Commands parameter in the Command parameters section.

34
00:02:38.140 --> 00:02:41.840
This is where our PowerShell script goes. We don't have to

35
00:02:41.840 --> 00:02:45.300
worry about any escaping of code or anything, just straight

36
00:02:45.300 --> 00:02:48.840
copy and paste of our code.

37
00:02:48.840 --> 00:02:52.240
So, a quick explanation what I'm doing here.

38
00:02:52.240 --> 00:02:56.860
This code is used to install the package manager Chocolatey on this

39
00:02:56.860 --> 00:03:01.730
Windows instance. Chocolatey is a great tool to install all kinds

40
00:03:01.730 --> 00:03:04.740
of other software on Windows devices.

41
00:03:04.740 --> 00:03:10.490
Definitely check it out if you're not familiar with it. So this tiny script

42
00:03:10.490 --> 00:03:16.590
will install Chocolatey. We won't need a working directory, and we can keep

43
00:03:16.590 --> 00:03:20.940
the Execution Timeout at the default of 1 hour.

44
00:03:20.940 --> 00:03:23.790
I don't expect this to require more than a few seconds,

45
00:03:23.790 --> 00:03:27.740
but if we had a process requiring more than 1 hour,

46
00:03:27.740 --> 00:03:32.540
then we could absolutely bump this up to 48 hours.

47
00:03:32.540 --> 00:03:36.990
Next, we need to select where we want this command to run,

48
00:03:36.990 --> 00:03:39.940
either by specifying the instance tag,

49
00:03:39.940 --> 00:03:43.560
the AWS resource group, our resource assigned, or

50
00:03:43.560 --> 00:03:46.140
manually picking the instances.

51
00:03:46.140 --> 00:03:49.830
And that's exactly what I'm going to do here by selecting the

52
00:03:49.830 --> 00:03:54.840
Windows EC2 instance here. The command now has enough

53
00:03:54.840 --> 00:03:58.840
information to execute on a single instance.

54
00:03:58.840 --> 00:04:02.440
If we ran this command across many instances,

55
00:04:02.440 --> 00:04:05.780
then under Rate control we could control on how many

56
00:04:05.780 --> 00:04:09.610
instances in parallel we want this to execute.

57
00:04:09.610 --> 00:04:12.090
And after how many failures, we want to deem the whole

58
00:04:12.090 --> 00:04:16.480
execution to have been a failure.

59
00:04:16.480 --> 00:04:20.100
Commands can send their output to S3 buckets,

60
00:04:20.100 --> 00:04:24.000
which is very helpful as the console output will be

61
00:04:24.000 --> 00:04:29.700
truncated at 2500 characters.

62
00:04:29.700 --> 00:04:34.980
If we require the full output and expected this to be more than 2500

63
00:04:34.980 --> 00:04:38.730
characters, we should definitely do this; otherwise,

64
00:04:38.730 --> 00:04:43.350
all of that output is gone. Right now in this case, this

65
00:04:43.350 --> 00:04:47.640
is fine, and I deselect the box here.

66
00:04:47.640 --> 00:04:48.850
Alternatively,

67
00:04:48.850 --> 00:04:54.590
the output could also be sent to CloudWatch logs. Depending on the scenario,

68
00:04:54.590 --> 00:04:57.010
especially in production environments, I recommend

69
00:04:57.010 --> 00:05:02.340
you store command output somewhere.

70
00:05:02.340 --> 00:05:08.140
Commands can also send their status messages to SNS topics.

71
00:05:08.140 --> 00:05:13.950
Failures, successes, and other status updates can be sent to SNS, and

72
00:05:13.950 --> 00:05:17.490
from there, be used to execute other workflows.

73
00:05:17.490 --> 00:05:21.740
This last drop‑down is quite handy for repetitive tasks.

74
00:05:21.740 --> 00:05:24.610
We can copy of the AWS command line from here,

75
00:05:24.610 --> 00:05:27.820
save it in a script somewhere, and then in the future don't have to come

76
00:05:27.820 --> 00:05:33.140
back into the console to execute the same command again.

77
00:05:33.140 --> 00:05:37.300
Let's click Run and just wait a couple of seconds.

78
00:05:37.300 --> 00:05:38.190
You can come up here,

79
00:05:38.190 --> 00:05:43.770
refresh, and see that the status has already changed to Success.

80
00:05:43.770 --> 00:05:55.000
The whole execution only took 9 seconds, and clicking on the instance ID, we can also see the output of our PowerShell script here.

