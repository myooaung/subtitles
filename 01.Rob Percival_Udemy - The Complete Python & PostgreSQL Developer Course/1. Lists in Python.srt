1

00:00:00,140  -->  00:00:05,370
Play and we'll come back and this video will look at lists in Python.

2

00:00:05,370  -->  00:00:09,410
Up until now we've been looking at variables as a box that contain one thing.

3

00:00:09,460  -->  00:00:15,030
So just one number on one string that is useful no doubt.

4

00:00:15,030  -->  00:00:19,130
But sometimes we want to have a variable that contains many things.

5

00:00:19,170  -->  00:00:24,900
For example if we had a web application we may have a variable that contains all of our users.

6

00:00:25,440  -->  00:00:32,340
Or if we had a list of telephone numbers we want to call we may want to store them in one variable as

7

00:00:32,340  -->  00:00:34,980
opposed to many variables.

8

00:00:34,980  -->  00:00:40,330
So there's a lot of uses for variables with a list inside them.

9

00:00:40,380  -->  00:00:47,250
So let's look at exactly how we can create a list in Python and it's actually really simple.

10

00:00:47,250  -->  00:00:55,130
For example I'm going to create a list of numbers and the only thing you have to do is say numbers which

11

00:00:55,130  -->  00:00:59,330
is your variable name equals and then open and close.

12

00:00:59,370  -->  00:01:02,350
Square brackets in Python.

13

00:01:02,370  -->  00:01:05,610
The square bracket is a list.

14

00:01:05,670  -->  00:01:07,800
So right now this is an empty list.

15

00:01:07,800  -->  00:01:09,950
It doesn't have anything inside it.

16

00:01:10,020  -->  00:01:12,680
However we can put things inside the list.

17

00:01:12,780  -->  00:01:20,040
For example I'm going to put the numbers from 0 to 9 so the first number is 0 and then a comma and then

18

00:01:20,040  -->  00:01:24,400
one two three four five or so.

19

00:01:24,420  -->  00:01:26,490
Now this list contains 10 elements.

20

00:01:26,490  -->  00:01:32,980
The numbers from 0 to 9 and I'm going to press Enter at the end to see if this list.

21

00:01:32,980  -->  00:01:38,700
And now if I type numbers then this is going to give me my list.

22

00:01:38,730  -->  00:01:40,230
Notice that is a list.

23

00:01:40,290  -->  00:01:42,360
It's not a string it's not a number.

24

00:01:42,390  -->  00:01:44,670
It's a different type.

25

00:01:44,670  -->  00:01:47,900
Notice how it's not a string because it doesn't have quotation marks around it.

26

00:01:48,060  -->  00:01:53,610
It's not a number because numbers are only digits themselves and not the square brackets so this is

27

00:01:53,610  -->  00:02:00,630
an entirely different type which is a list which contains many elements lists also have a length.

28

00:02:00,660  -->  00:02:03,340
And we know the length of this list to be 10.

29

00:02:04,560  -->  00:02:10,110
What is going to happen when I try to get the length of this list.

30

00:02:10,440  -->  00:02:17,890
So if I say Len and the numbers what do you think is going to get printed out.

31

00:02:18,120  -->  00:02:20,690
9 is the largest number in this list.

32

00:02:21,000  -->  00:02:22,640
There are 10 elements however.

33

00:02:23,220  -->  00:02:32,420
So I would expect the number 10 to be printed out and indeed that is what does get printed out.

34

00:02:32,700  -->  00:02:37,890
The length of the list is not the largest number in it it's not any specific element but rather how

35

00:02:37,890  -->  00:02:41,690
many elements are inside.

36

00:02:41,760  -->  00:02:46,940
So how do we access the last element of the list the number 9.

37

00:02:47,910  -->  00:02:56,580
Well we need to say numbers and then we need to give it the position of the number we want.

38

00:02:56,580  -->  00:03:01,180
So for example if we give it position 1.

39

00:03:01,980  -->  00:03:05,620
What do you think is going to get printed out.

40

00:03:05,700  -->  00:03:08,360
There's only 10 numbers in this list.

41

00:03:08,580  -->  00:03:15,880
So then position 1 is going to be the number one.

42

00:03:16,050  -->  00:03:20,340
So in computing we always start counting from the number 0.

43

00:03:20,340  -->  00:03:24,040
So if you guessed that the number that should be printed out is zero.

44

00:03:24,090  -->  00:03:25,400
That's absolutely fine.

45

00:03:25,590  -->  00:03:28,730
It's a very common thought in the beginning.

46

00:03:28,860  -->  00:03:31,100
But in computing we start counting from zero.

47

00:03:31,240  -->  00:03:38,800
So numbers zero is actually the number 0 which is the first element of this list.

48

00:03:38,910  -->  00:03:46,830
So there are 10 elements but actually the number 9 is not in position 10 even though the length of the

49

00:03:46,830  -->  00:03:48,320
list is 10.

50

00:03:48,370  -->  00:03:53,050
The last number is always the length minus 1.

51

00:03:53,250  -->  00:03:59,430
So in this case numbers 9 is the number 9.

52

00:03:59,850  -->  00:04:03,690
So numbers LN numbers.

53

00:04:03,750  -->  00:04:14,250
So if we try to access the position that is Lenn numbers aka 10 we will get an error list index out

54

00:04:14,250  -->  00:04:15,090
of range.

55

00:04:15,090  -->  00:04:20,070
So we're trying to access index number 10 and it's telling us that that does not exist.

56

00:04:20,120  -->  00:04:22,370
It's outside of the range of this list.

57

00:04:22,410  -->  00:04:26,340
This list ranges from 0 to 9 inclusive.

58

00:04:27,000  -->  00:04:32,760
So if we wanted to access the last the number take a guess at how you would do it only with a length

59

00:04:32,770  -->  00:04:34,170
.

60

00:04:35,640  -->  00:04:40,940
So the solution to that is numbers and then Lenn numbers minus 1.

61

00:04:41,640  -->  00:04:44,520
And that way you would get the 10 from here.

62

00:04:44,670  -->  00:04:51,390
Take away 1 would give you one index before the length which is nine in this case and that would give

63

00:04:51,390  -->  00:04:54,180
you the number 9.

64

00:04:54,240  -->  00:04:59,910
So this is a very basic about lists how we can create them how we can access elements in it and how

65

00:04:59,910  -->  00:05:06,630
we can get the length of the list and also accessing the last element is not the same as the length

66

00:05:06,720  -->  00:05:08,300
of the list.

67

00:05:08,320  -->  00:05:08,760
OK.

68

00:05:08,930  -->  00:05:14,070
I'll be seeing you in the next video where we're going to look at how we can access each of the elements

69

00:05:14,190  -->  00:05:15,140
in order.

70

00:05:15,260  -->  00:05:15,800
And so you're
