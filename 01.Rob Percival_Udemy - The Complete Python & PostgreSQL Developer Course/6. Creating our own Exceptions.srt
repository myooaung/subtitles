1

00:00:00,230  -->  00:00:05,190
Hard work a Mac in this world you we're going to be creating our own exceptions.

2

00:00:05,580  -->  00:00:13,320
Now in the last video I mentioned that sometimes it's better to not catch everything or rather not deal

3

00:00:13,320  -->  00:00:18,940
with everything because then if you just get a lot of things printed out you may skip some errors.

4

00:00:19,170  -->  00:00:25,380
In many instances it is better for the error to appear for the error to crash an application so that

5

00:00:25,380  -->  00:00:27,860
you can realize that the error is there.

6

00:00:28,530  -->  00:00:35,690
When that happens maybe a Jason de-code error or a key error is not the best error to receive.

7

00:00:35,700  -->  00:00:40,520
Maybe you don't really know what that is or am I don't know.

8

00:00:40,690  -->  00:00:50,190
Maybe you think a key error just means that's the Jason wasn't ready or the response was incorrect but

9

00:00:50,190  -->  00:00:54,930
rather what you would have is a missing label error.

10

00:00:54,990  -->  00:01:03,550
For example instead of adjacent decode error maybe you would rather have a incorrect Jason response

11

00:01:03,630  -->  00:01:06,120
error or something along those lines.

12

00:01:06,510  -->  00:01:10,500
So what we can do in some of these instances is create our own exception so I'm going to create a new

13

00:01:10,500  -->  00:01:16,350
play in file and call it create exceptions to create your own exception.

14

00:01:16,350  -->  00:01:18,290
It's really simple.

15

00:01:18,390  -->  00:01:23,250
All you have to do is say class then your exception name.

16

00:01:23,250  -->  00:01:26,810
For example missing label error.

17

00:01:27,300  -->  00:01:35,550
We should be a subclass of key area and I should be a subclass of Kibera.

18

00:01:35,760  -->  00:01:37,240
If that is appropriate.

19

00:01:37,260  -->  00:01:42,770
So if the missing label error is a key error is missing from a dictionary.

20

00:01:42,780  -->  00:01:52,050
In this case if it's missing from a class for example or missing from a web site you may have to supply

21

00:01:52,080  -->  00:01:53,240
a different era.

22

00:01:53,730  -->  00:01:57,470
Which ever you subclass isn't the most important thing.

23

00:01:57,690  -->  00:02:01,080
But it just gives you a bit more information.

24

00:02:01,080  -->  00:02:08,590
Similarly you could have a class page not found error that could be a subclass of lookup error.

25

00:02:09,480  -->  00:02:16,900
You could have incorrect password error that could be a subclass of value error.

26

00:02:17,610  -->  00:02:27,410
You can have a class API throttle limit error which could be a subclass of runtime error.

27

00:02:27,990  -->  00:02:28,740
So why am I.

28

00:02:28,740  -->  00:02:31,110
Why am I telling you all these things.

29

00:02:31,110  -->  00:02:39,190
Well in some cases you can receive a value error and that's fine.

30

00:02:39,480  -->  00:02:47,130
In other cases you may want a bit more granularity in what your exceptions mean and in those cases creating

31

00:02:47,130  -->  00:02:48,080
your own.

32

00:02:48,300  -->  00:02:52,770
Even if they are just value errors with a different name because that's what this is.

33

00:02:53,040  -->  00:02:55,290
It gives you just a bit more information.

34

00:02:55,560  -->  00:03:00,970
You can have for example class incorrect user name error

35

00:03:04,020  -->  00:03:06,990
and these two classes really are the same thing.

36

00:03:06,990  -->  00:03:08,590
They're both value errors.

37

00:03:08,640  -->  00:03:13,550
They don't add anything to value error but they have different names.

38

00:03:13,680  -->  00:03:16,350
When you see that in your code you're going to know.

39

00:03:16,420  -->  00:03:25,270
OK I know what happened and also you can catch them and do things differently with both.

40

00:03:25,590  -->  00:03:30,840
What I mean with that is say you have a user trying to log in to your application and they give you

41

00:03:30,840  -->  00:03:36,960
their username and password and you know that the username doesn't exist in the database.

42

00:03:37,050  -->  00:03:42,930
You could raise an incorrect username error and then the user would see that this is an incorrect username

43

00:03:42,930  -->  00:03:43,600
error.

44

00:03:44,100  -->  00:03:51,710
For example this is how you raise exceptions by the way raise incorrect username error.

45

00:03:52,980  -->  00:03:59,970
That if we run this you can see there that we get the traceback and we get incorrect user name error

46

00:04:00,420  -->  00:04:01,620
so something happen.

47

00:04:01,620  -->  00:04:11,050
See we have our program program user enters wrong username and your program raises an incorrect username

48

00:04:11,110  -->  00:04:11,550
.

49

00:04:11,970  -->  00:04:21,420
OK so you have this method that is logging in and the user enters the wrong details and we raise an

50

00:04:21,420  -->  00:04:23,620
incorrect username error.

51

00:04:23,700  -->  00:04:35,920
What you would do is you would say try and log in and you would catch incorrect username error or not

52

00:04:35,940  -->  00:04:40,850
catch sorry except I keep thinking Java terms and you would print here.

53

00:04:41,160  -->  00:04:43,820
Your username was incorrect.

54

00:04:44,280  -->  00:04:55,890
Have you forgotten it and you would also accept an incorrect password error and here you would say print

55

00:04:56,460  -->  00:04:58,900
your password was wrong.

56

00:05:00,090  -->  00:05:04,010
Have you forgotten it.

57

00:05:05,520  -->  00:05:10,320
So when we run this we get you using was incorrect.

58

00:05:10,320  -->  00:05:15,080
Have you forgotten it because the logon method raised an incorrect username.

59

00:05:15,120  -->  00:05:19,470
If this raised an incorrect password error we would get your Paschall was wrong.

60

00:05:19,470  -->  00:05:21,370
Have you forgotten it now.

61

00:05:21,390  -->  00:05:30,840
This is not very useful like this but when we ask a user to log in say in a web site a logging method

62

00:05:30,970  -->  00:05:37,020
that takes in a username and password may raise an incorrect password error and if that is the case

63

00:05:37,170  -->  00:05:41,920
maybe you'd want your web application to redirect the user to a.

64

00:05:41,940  -->  00:05:43,980
Have you forgotten your password page.

65

00:05:44,010  -->  00:05:46,940
For example if they forgot the username.

66

00:05:47,070  -->  00:05:50,700
Maybe you want to refresh the page and show them an error message.

67

00:05:50,970  -->  00:05:52,680
What you want to do doesn't matter.

68

00:05:52,860  -->  00:05:58,950
But now you can reuse different errors when different things happen and then deal with them in different

69

00:05:58,950  -->  00:05:59,600
ways.

70

00:05:59,730  -->  00:06:03,880
And that's always nice and also it's a very Pythonic way of doing things.

71

00:06:03,900  -->  00:06:10,350
So definitely recommended that when you encounter a situation that you cannot fix raise an error for

72

00:06:10,350  -->  00:06:17,200
it and you can deal with it in a different level of your application.

73

00:06:17,190  -->  00:06:21,690
OK that's everything for this video I just wanted to show you that you can create your own exceptions

74

00:06:21,930  -->  00:06:26,940
and we could even use them here instead of Jewson the code error we could create our own and use it

75

00:06:26,940  -->  00:06:32,550
there and maybe with a better name as I was mentioning at the beginning but that's it you can create

76

00:06:32,550  -->  00:06:33,350
your own exceptions.

77

00:06:33,360  -->  00:06:40,080
Give them good names subclass of valuable built in error classes and that will give you a lot of info

78

00:06:40,160  -->  00:06:44,730
and in the very next video we're actually going to be looking into some of the built in classes so that

79

00:06:44,730  -->  00:06:47,940
you are not completely in the blank with this.

80

00:06:47,980  -->  00:06:49,020
I'll see you in the very next video
