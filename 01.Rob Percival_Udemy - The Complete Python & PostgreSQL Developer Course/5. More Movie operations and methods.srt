1

00:00:00,270  -->  00:00:02,180
I will come back in this video.

2

00:00:02,220  -->  00:00:05,680
We're going to do two movie operations.

3

00:00:06,330  -->  00:00:06,860
Both of them.

4

00:00:06,870  -->  00:00:11,680
Y'all really know how to do so let's get started with the first one.

5

00:00:11,850  -->  00:00:17,130
The first operation that I'd like to be able to do as a user is to add a new movie and tell the system

6

00:00:17,130  -->  00:00:21,090
that I have or own a movie.

7

00:00:21,120  -->  00:00:23,700
I'll give you some structure and then you can continue the implementation

8

00:00:30,210  -->  00:00:30,980
here too.

9

00:00:30,990  -->  00:00:40,440
And a new movie you would simply append the movie object to self-taught movies because we are currently

10

00:00:40,740  -->  00:00:51,670
inside the user which means whoever is calling the ADD movie method must be doing so in this way.

11

00:00:51,990  -->  00:01:02,280
My user object or some variable name dot and movie and then we obviously need some movie parameters

12

00:01:03,810  -->  00:01:05,390
name and genre.

13

00:01:05,670  -->  00:01:09,870
For example movie name and genre.

14

00:01:11,190  -->  00:01:20,880
When this method gets called it is going to get called in this way some user object dot add movie with

15

00:01:20,880  -->  00:01:22,650
a name and a genre.

16

00:01:22,650  -->  00:01:29,870
Therefore the user object is going to be somebody with a name and a list of movies which means that

17

00:01:29,870  -->  00:01:38,570
we can then append a new movie using these two properties to self-dual movies.

18

00:01:38,640  -->  00:01:45,690
Also remember the movie has a watched property and we are gonna see that the movie has not been watched

19

00:01:46,140  -->  00:01:48,790
by default.

20

00:01:48,900  -->  00:01:51,630
OK so go ahead and post a video and try that.

21

00:01:51,750  -->  00:01:56,890
And a new movie using this name and genre and see that it has not been watched.

22

00:01:56,970  -->  00:01:59,430
And add that movie to self-taught movies

23

00:02:04,010  -->  00:02:09,250
once thats been attempted lets go over a how I would recommend to do it.

24

00:02:09,750  -->  00:02:16,110
First thing to do is say the new movie is going to be a movie which will have to import and I'm just

25

00:02:16,110  -->  00:02:24,150
going to import them here through Pinetree I'm with a name and a genre but it also needs whether it's

26

00:02:24,150  -->  00:02:25,500
been botched or not.

27

00:02:25,500  -->  00:02:32,170
And I'm gonna say no it could be false and that's what that means.

28

00:02:32,190  -->  00:02:37,380
You know we created the new movie object which has a specific name and a specific genre.

29

00:02:37,380  -->  00:02:39,410
We don't know what those are in here.

30

00:02:39,720  -->  00:02:45,520
But we know that they've been passed in from somewhere else and that has not been watched.

31

00:02:45,660  -->  00:02:53,940
And then we can self-taught movies top and movie and that just adds the movie at the end of the list

32

00:02:53,940  -->  00:02:55,560
.

33

00:02:56,250  -->  00:02:59,790
If you wanted to simplify this further you could just put this in here

34

00:03:03,560  -->  00:03:09,270
like so whoever however for the sake of readability I'm not going to do that and I'm just going to keep

35

00:03:09,270  -->  00:03:10,670
it like this.

36

00:03:10,740  -->  00:03:13,840
I think that's slightly easier to read.

37

00:03:13,980  -->  00:03:20,640
However I do remember that doing it this way is slightly less performing because you have to initialize

38

00:03:20,640  -->  00:03:21,490
a variable.

39

00:03:21,600  -->  00:03:22,940
It doesn't really matter much.

40

00:03:23,190  -->  00:03:27,830
I think it is more readable to leave it like that.

41

00:03:27,880  -->  00:03:30,900
The other thing I want to do is to delete a movie

42

00:03:35,010  -->  00:03:38,980
and in this case we going to delete a movie with a specific name.

43

00:03:39,030  -->  00:03:42,360
We're going to pass in the name of the movie we want to delete.

44

00:03:42,360  -->  00:03:48,070
And that movie is going to get deleted from self-taught movies.

45

00:03:48,540  -->  00:03:49,800
I'm going to let you implement this.

46

00:03:49,800  -->  00:03:57,900
Whichever way you see best you can do it in two ways really just like the watched movies but remember

47

00:03:58,080  -->  00:04:06,990
self-taught movies must end with the movie with that name deleted if it exists and that is you may want

48

00:04:06,990  -->  00:04:09,970
to use the filter method.

49

00:04:10,830  -->  00:04:16,870
Or you can also build up a list that doesn't have this movie in it.

50

00:04:16,890  -->  00:04:19,450
Post a video and try that and I recommend taking your time.

51

00:04:19,450  -->  00:04:25,170
If you understand the implementation and how you're going to do it and then implemented and then come

52

00:04:25,170  -->  00:04:31,000
back and watch.

53

00:04:31,020  -->  00:04:33,040
OK I hope you did well in that.

54

00:04:33,240  -->  00:04:38,190
Let's implement this using the simpler method which is the filter.

55

00:04:38,820  -->  00:04:51,210
What I'm going to do is say the new movies the ones without that movie name are filter Lamda movie where

56

00:04:51,210  -->  00:04:58,740
movie name is not equal to name and then I passed and self-taught movies.

57

00:04:58,740  -->  00:05:04,360
So this is going to filter from self movies all the movies where this is true.

58

00:05:04,710  -->  00:05:09,860
The movies where this is true are going to get removed from self-edit movies.

59

00:05:10,290  -->  00:05:17,100
But remember we have to say self-direct movies equals that it doesn't happen automatically we have to

60

00:05:17,100  -->  00:05:24,520
reassign self-taught movies to whatever this returns and over a number just like below.

61

00:05:24,870  -->  00:05:26,960
We have to convert this to a list.

62

00:05:27,150  -->  00:05:30,780
If you're using Python 2.7 you won't have to do this conversion.

63

00:05:31,050  -->  00:05:36,720
But if you're using Python three point three or later you will have to use this list in.

64

00:05:37,260  -->  00:05:45,510
OK so to recap what this does is it goes over iterates over self-doubt movies and even the movie name

65

00:05:45,960  -->  00:05:48,870
is not equal to the name we pass in.

66

00:05:48,980  -->  00:05:50,300
It keeps that movie.

67

00:05:50,550  -->  00:05:57,300
If the name is equal then it does not keep the movie and what that means is that the movies that match

68

00:05:57,330  -->  00:06:02,220
this name get deleted.

69

00:06:02,710  -->  00:06:04,300
OK so that's everything for this video.

70

00:06:04,320  -->  00:06:08,970
We've looked at how to append a movie and also how to delete a movie.

71

00:06:09,000  -->  00:06:11,750
Do remember to add onto the leads movies.

72

00:06:11,770  -->  00:06:16,010
We're going to have to pass in these values from somewhere else probably.

73

00:06:16,060  -->  00:06:19,950
I use a menu with which the user will interact.

74

00:06:20,430  -->  00:06:21,500
But again that's everything.

75

00:06:21,510  -->  00:06:23,070
So I'll see you in the next video.
