1

00:00:00,220  -->  00:00:05,500
Will come back in this video we're going to look at cleaning up the database class.

2

00:00:06,030  -->  00:00:10,370
I think it looks quite clean but we can still do more.

3

00:00:10,380  -->  00:00:18,270
The first thing that we'd like to do is make sure that's the connection pool is not accessible from

4

00:00:18,270  -->  00:00:23,170
outside the class which is making a variable private.

5

00:00:23,760  -->  00:00:26,850
And we don't really have a keyword for that in Python.

6

00:00:26,850  -->  00:00:32,100
If you know any other programming languages they sometimes do in python we don't have a keyboard to

7

00:00:32,100  -->  00:00:35,390
make a variable private.

8

00:00:35,460  -->  00:00:39,490
The first question to answer is Why do we want to make these variable private.

9

00:00:39,630  -->  00:00:48,090
And what does that mean say in the cursor from connection from pool class which I know is a bad name

10

00:00:48,120  -->  00:00:50,370
but let's leave it at that.

11

00:00:50,940  -->  00:00:54,300
We have these self-conviction equals database.

12

00:00:54,300  -->  00:00:55,790
Don't get connection.

13

00:00:56,460  -->  00:00:57,560
And that is great.

14

00:00:57,570  -->  00:01:05,040
It allows us to get a connection from that database say that this connection does get connection method

15

00:01:05,040  -->  00:01:05,440
.

16

00:01:05,460  -->  00:01:14,060
Not only did this say it did more stuff for example said that connection are poor.

17

00:01:14,100  -->  00:01:15,500
You know something it doesn't.

18

00:01:15,510  -->  00:01:16,710
But imagine it did.

19

00:01:16,710  -->  00:01:22,250
Imagine it did things with the connection before giving it back.

20

00:01:22,470  -->  00:01:29,550
Right now even though we have this method nothing is stopping other classes and other parts of the program

21

00:01:29,550  -->  00:01:33,190
from doing what we did before.

22

00:01:33,360  -->  00:01:36,490
Database Dogget connection database not connection pool.

23

00:01:36,490  -->  00:01:37,680
Don't get caught.

24

00:01:38,100  -->  00:01:44,960
Nothing is preventing my program from doing this or if somebody else was working with me their code

25

00:01:45,350  -->  00:01:45,700
.

26

00:01:45,930  -->  00:01:48,600
Promoting their code from doing that either.

27

00:01:49,500  -->  00:01:56,910
And if this method was setting things up and doing more things then doing this could potentially be

28

00:01:56,910  -->  00:01:57,620
dangerous.

29

00:01:57,630  -->  00:02:00,460
It could have unexpected results.

30

00:02:00,750  -->  00:02:05,200
Ideally we would want everyone to be forced to use get connection.

31

00:02:05,700  -->  00:02:06,570
Because of that.

32

00:02:06,570  -->  00:02:10,830
Not only is getting the connection but also setting things up and all that.

33

00:02:10,920  -->  00:02:12,490
So I imagine it does do that.

34

00:02:13,200  -->  00:02:21,510
Well fortunately we can kind of stop them from accessing this variable directly.

35

00:02:22,290  -->  00:02:32,350
Let's select the variable and then press shift FCX or the refactor and then refactor this rename.

36

00:02:32,460  -->  00:02:37,160
Now we go refactor and then rename and then in front of the connection pool.

37

00:02:37,170  -->  00:02:43,020
Put two underscores So not just one underscore not one long underscore but two separate underscores

38

00:02:43,070  -->  00:02:44,060
.

39

00:02:44,990  -->  00:02:46,680
OK that does that.

40

00:02:46,680  -->  00:02:48,770
It renames the variable to two underscores.

41

00:02:48,780  -->  00:02:50,330
Connection Pool.

42

00:02:50,340  -->  00:02:56,330
Now let's go back to our cursor from connection from pool and try to do that.

43

00:02:56,770  -->  00:02:59,100
As you can see it can no longer be done.

44

00:02:59,100  -->  00:03:05,520
That variable is no longer accessible and that is how you make variables private and make them hidden

45

00:03:05,520  -->  00:03:09,370
from other programs or other parts of the program using Peifer.

46

00:03:09,390  -->  00:03:12,250
You just put two underscores in front.

47

00:03:14,180  -->  00:03:14,770
OK.

48

00:03:15,120  -->  00:03:21,060
Something as I mentioned in the last video that I also wanted to be able to do was limit or rather decide

49

00:03:21,390  -->  00:03:28,260
way I'm connecting to in the initialize method and what I mean with this is I'd like in my apt on P

50

00:03:28,260  -->  00:03:43,380
Y to be able to say database equals learning host equals localhost him user equals postscripts

51

00:03:46,470  -->  00:03:47,750
with T Room.

52

00:03:47,940  -->  00:03:49,480
Yes it is.

53

00:03:49,680  -->  00:03:54,880
And password Schrank password equals 1 2 3 4.

54

00:03:55,050  -->  00:04:02,790
I'd like to be able to put it here in the initialize method so that I can change it more easily so that

55

00:04:02,790  -->  00:04:07,640
I only have to change it in here if I do want to change it.

56

00:04:07,660  -->  00:04:10,110
And there is a way to do that.

57

00:04:10,110  -->  00:04:12,360
There is a way to do that.

58

00:04:12,810  -->  00:04:17,550
As you can see these four parameters then are named parameters.

59

00:04:17,550  -->  00:04:21,870
They have a name to them and then they have equals and then they have a value.

60

00:04:21,930  -->  00:04:31,890
So these are named parameters and we can pass all of these parameters together.

61

00:04:32,820  -->  00:04:39,390
What I mean with that is we can do as we discussed risk quorums and we've seen the aster discussed this

62

00:04:39,390  -->  00:04:47,520
before and we can put apologies asterisk asterisk quorums here and now.

63

00:04:47,520  -->  00:04:51,080
Notice how the yellowness disappears pyjamas says.

64

00:04:51,090  -->  00:04:57,160
This is now OK and that is OK with the sonic asterisk asterisk.

65

00:04:57,190  -->  00:05:07,080
Means is any named parameters so the apt IPY that is passing for named parameters.

66

00:05:07,110  -->  00:05:15,570
That is fine because the initialize method is now accepting any number of named parameters and it knows

67

00:05:15,570  -->  00:05:17,850
the name as well as the value.

68

00:05:18,180  -->  00:05:26,490
So then we can posit those named parameters to the simple connection pool and then that if we go into

69

00:05:26,490  -->  00:05:28,660
simple connection pool.

70

00:05:29,100  -->  00:05:32,790
It also accepts keyword arguments there as well.

71

00:05:32,790  -->  00:05:36,560
And I know this is a bit quick and I'm not giving you a chance to look at this code.

72

00:05:36,570  -->  00:05:41,420
But we don't care about this code just know that this is something that you can do.

73

00:05:41,460  -->  00:05:46,650
So what we're doing is we're accepting any number of named parameters named arguments and then we're

74

00:05:46,650  -->  00:05:47,980
passing them on.

75

00:05:48,000  -->  00:05:51,240
So now we can accept these things here.

76

00:05:52,410  -->  00:05:57,630
And this was just a cleanup of the Database class to make sure that we can choose where we want to connect

77

00:05:57,630  -->  00:06:01,680
to more easily and so that we can hide the property connection pool.

78

00:06:01,740  -->  00:06:07,540
So it's not mis used by other areas of the program and that's it for this video.

79

00:06:07,640  -->  00:06:09,400
So you the next one.
