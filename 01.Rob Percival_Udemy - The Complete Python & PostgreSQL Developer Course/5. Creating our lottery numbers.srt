1

00:00:00,390  -->  00:00:05,940
Hi and welcome back in this video we're going to continue with our app and we're going to enable it

2

00:00:05,970  -->  00:00:12,270
to create some random numbers so that we can then compare those with the play numbers and then calculate

3

00:00:12,270  -->  00:00:19,160
the winnings after that what we did in the last video was this first part.

4

00:00:19,740  -->  00:00:21,590
So what we wanted to do in this video.

5

00:00:21,660  -->  00:00:29,400
It's the second part here to calculate the six random numbers between 1 and 20.

6

00:00:29,400  -->  00:00:33,360
So the way we're going to do this is once again in a method and I'm going to create this method create

7

00:00:33,420  -->  00:00:43,800
lottery numbers and this method is going to initialize an empty set and then it's going to populate

8

00:00:43,800  -->  00:00:50,080
that sent with empty numbers and make sure that the set has six numbers at the end.

9

00:00:50,520  -->  00:00:56,310
So the first part you can do initialize an empty set.

10

00:00:56,310  -->  00:00:58,440
So go ahead and try that.

11

00:00:58,500  -->  00:01:04,340
And I'm sure you can do it.

12

00:01:04,500  -->  00:01:10,260
So as we've seen before the way we initialize an empty set is we see the set name the variable equals

13

00:01:10,350  -->  00:01:17,250
set room of that a set is always represented as being inside the curly braces.

14

00:01:17,490  -->  00:01:20,210
But in python we initialize an empty set.

15

00:01:20,370  -->  00:01:29,220
Using this we cannot initialize like so.

16

00:01:29,220  -->  00:01:34,700
So don't initialize an empty set like that because in Python that means something different.

17

00:01:36,000  -->  00:01:43,050
OK so now that we've got the empty set we want to add numbers to the set.

18

00:01:43,140  -->  00:01:44,840
So let's do that.

19

00:01:45,090  -->  00:01:46,580
We want to add six numbers.

20

00:01:46,710  -->  00:01:49,420
So therefore we can do a for loop.

21

00:01:49,440  -->  00:01:51,020
Right.

22

00:01:51,030  -->  00:01:57,990
We know how to do a for loop between that iterates over six numbers and then we can add six random numbers

23

00:01:58,350  -->  00:02:01,050
into our set.

24

00:02:01,080  -->  00:02:05,000
You guys know how to do a for loop that runs six times.

25

00:02:05,040  -->  00:02:06,280
So go ahead and try it out.

26

00:02:06,300  -->  00:02:14,650
You can use the range method for that.

27

00:02:14,670  -->  00:02:15,150
OK.

28

00:02:15,210  -->  00:02:27,160
So the way I would do it is see for index in range 6 and this will run six times Ramba range is 0 1

29

00:02:27,160  -->  00:02:28,740
2 3 4 and 5.

30

00:02:28,920  -->  00:02:35,000
So index it will start at 0 and then it will be 1 and 2 then 3 and 4 and 5.

31

00:02:35,010  -->  00:02:37,250
So in total it'll run six times.

32

00:02:37,290  -->  00:02:43,530
We're not going to use the index variable in the for loop because we're going to be creating random

33

00:02:43,650  -->  00:02:50,270
numbers but nevertheless the index variable goes from zero to 5 in order to generate random numbers

34

00:02:50,270  -->  00:02:50,310
.

35

00:02:50,300  -->  00:02:52,630
We're going to have to import the random modules.

36

00:02:52,650  -->  00:03:04,080
Let's put that to the top and then we can say values Daut and random dot Rand in between 1 and 20.

37

00:03:04,890  -->  00:03:11,160
And this is going to add to the values array which show the values set.

38

00:03:11,240  -->  00:03:15,480
Right I'm at the end with return values.

39

00:03:16,980  -->  00:03:17,310
OK.

40

00:03:17,310  -->  00:03:20,780
So in theory this should work right.

41

00:03:21,000  -->  00:03:22,790
We are initializing an empty set.

42

00:03:22,860  -->  00:03:28,920
Then we are going over six times this fall loop and then we're adding a random number between 1 and

43

00:03:28,920  -->  00:03:35,040
20 to the values sent six times and then we're returning the values set.

44

00:03:35,040  -->  00:03:36,360
So let's run that

45

00:03:40,650  -->  00:03:42,010
and see what happens.

46

00:03:42,020  -->  00:03:45,980
What do you think is going to happen when we run this.

47

00:03:47,880  -->  00:03:57,580
Well what I expect to happen is that everything will work more or less OK but with a minor caveat.

48

00:03:57,600  -->  00:04:03,590
See we've only got five numbers in here.

49

00:04:04,070  -->  00:04:06,680
We want to run that again.

50

00:04:08,940  -->  00:04:09,900
And there we go.

51

00:04:09,900  -->  00:04:12,060
Here we go six numbers.

52

00:04:12,060  -->  00:04:18,000
The first two times we ran the SAT the generation we only got 5 numbers and now we've got six numbers

53

00:04:18,000  -->  00:04:20,280
here.

54

00:04:20,280  -->  00:04:22,770
So why could this be why.

55

00:04:23,250  -->  00:04:32,550
What is wrong with our create lottery numbers method that it is allowing the set to have either five

56

00:04:32,580  -->  00:04:35,460
or six numbers.

57

00:04:37,770  -->  00:04:43,830
And what is wrong is that the random number generator can generate the same number twice.

58

00:04:43,830  -->  00:04:44,340
It doesn't.

59

00:04:44,340  -->  00:04:45,200
It doesn't generate.

60

00:04:45,240  -->  00:04:49,240
Always a different number because there's only 20 to choose from.

61

00:04:49,250  -->  00:04:55,800
So in this case in two of those cases actually the number generated was already in the set and that

62

00:04:55,800  -->  00:04:57,300
meant that we couldn't put it in the set.

63

00:04:57,320  -->  00:05:00,770
Again because the Sanch don't have duplicates.

64

00:05:01,560  -->  00:05:08,220
So what we wanted to do is not this for a loop because this fordable always want to run six times.

65

00:05:08,550  -->  00:05:19,320
And really what we wanted to do is run it until the values set has six numbers in it which is not to

66

00:05:19,320  -->  00:05:22,610
say the same thing that Foley was going to run six times.

67

00:05:22,650  -->  00:05:26,070
So with the number generator generates the same number twice.

68

00:05:26,100  -->  00:05:28,850
That means our set is going to end up with five numbers.

69

00:05:29,400  -->  00:05:35,460
What we want to do is run the loop until our set has six values.

70

00:05:35,460  -->  00:05:40,710
So the way we can do that is with a WHILE loop in a while we get a new contract that we've not seen

71

00:05:40,710  -->  00:05:44,940
yet but it is similar to the for loop.

72

00:05:45,000  -->  00:05:49,300
The way it works is that we say a while and then we give a condition.

73

00:05:49,470  -->  00:05:57,570
And as long as that condition is true then the loop will continue running.

74

00:05:58,170  -->  00:06:04,030
So how do you think we should put this into Python code.

75

00:06:04,110  -->  00:06:16,660
We want to run this loop while the set does not have six elements.

76

00:06:17,400  -->  00:06:19,090
So I hope you gave that ago.

77

00:06:19,440  -->  00:06:28,460
And the way I do it is I would say a while the length of the values sent is less than six.

78

00:06:28,770  -->  00:06:36,300
I'm going to keep adding When the length is 6 or more which it shouldn't be then I'm going to stop the

79

00:06:36,300  -->  00:06:39,230
while loop and I'm going to return values.

80

00:06:39,480  -->  00:06:43,910
So this loop this code here is going to run as many times as it needs.

81

00:06:44,190  -->  00:06:50,480
While the length of the center the number of elements in the set is less than six.

82

00:06:51,400  -->  00:06:51,890
OK.

83

00:06:52,020  -->  00:06:56,080
So let's save that and run that again and that how now we've gone there six numbers.

84

00:06:56,080  -->  00:06:57,380
I'm going to run it again.

85

00:06:57,590  -->  00:07:00,530
Now right now we've got six numbers and so.

86

00:07:01,140  -->  00:07:08,880
So trust me we'll always get six numbers from now on Woods and this is how you use a while loop and

87

00:07:08,880  -->  00:07:12,990
how you would create these random lottery numbers.

88

00:07:13,020  -->  00:07:18,870
It is a bit more work because you need to make sure that you've got six numbers all the time and that

89

00:07:18,870  -->  00:07:21,890
you have to use sets which is something that's under used in Python.

90

00:07:21,930  -->  00:07:29,430
But now that you've got the two cents it's really easy to check how many the user got right just by

91

00:07:29,430  -->  00:07:30,620
doing an intersection.

92

00:07:30,810  -->  00:07:35,670
So we're going to be doing that in the very next video and see you there.
