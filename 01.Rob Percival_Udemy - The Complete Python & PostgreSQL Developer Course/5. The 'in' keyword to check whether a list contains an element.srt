1

00:00:00,210  -->  00:00:04,810
Hi welcome back in this review we're going to look at the in key.

2

00:00:05,100  -->  00:00:08,550
We've already seen the in keyword in our four loops.

3

00:00:08,550  -->  00:00:15,050
It's right here in orange but we've not really understood what it means.

4

00:00:15,540  -->  00:00:24,240
So what we're going to do now is try and use it outside of a for loop and see what happens.

5

00:00:24,240  -->  00:00:35,430
So let me give you a sort of hint I'm going to type 10 in numbers and what do you think is going to

6

00:00:35,430  -->  00:00:42,130
get printed out when I type 10 in numbers it sort of follows.

7

00:00:42,210  -->  00:00:46,890
English language convention.

8

00:00:46,890  -->  00:00:49,300
What gets printed out is false.

9

00:00:49,950  -->  00:00:51,420
And you know why that is.

10

00:00:51,420  -->  00:00:53,320
Now you can join the dots together.

11

00:00:53,460  -->  00:00:57,030
Ten is not inside that list than is not in numbers.

12

00:00:57,150  -->  00:01:00,840
So it prints false.

13

00:01:00,840  -->  00:01:09,550
Now I can also say 10 not in numbers and then that Prince group as you would expect.

14

00:01:10,630  -->  00:01:11,150
OK.

15

00:01:11,280  -->  00:01:15,020
The not keyword can also be used in other contexts as well.

16

00:01:15,150  -->  00:01:22,170
For example if not three greater than five print this is weird

17

00:01:24,520  -->  00:01:28,220
if it is a bit strange you would never use this.

18

00:01:28,230  -->  00:01:32,630
You would rather say three less than five for example.

19

00:01:32,640  -->  00:01:38,880
But nevertheless you can use it in front of any boolean expression and it just inverts it.

20

00:01:39,240  -->  00:01:42,870
So true is true.

21

00:01:42,870  -->  00:01:47,220
Not true is false and that's the way Python thinks about it.

22

00:01:47,220  -->  00:01:52,100
You've got your boolean expression ten in numbers three greater than five.

23

00:01:52,140  -->  00:01:52,840
True.

24

00:01:53,040  -->  00:01:56,850
And if you put not in front of it it just invert it and gives you the opposite.

25

00:01:56,850  -->  00:01:58,680
So in this case it would give you false.

26

00:01:58,800  -->  00:02:00,350
In this case it would give you true.

27

00:02:00,420  -->  00:02:03,930
And in this case it would give you true.

28

00:02:05,310  -->  00:02:05,680
OK.

29

00:02:05,730  -->  00:02:10,940
So now we can proceed with our magic numbers app.

30

00:02:10,950  -->  00:02:13,280
Now we're going to be developing in this section.

31

00:02:14,310  -->  00:02:20,910
Let's create a magic underscore numbers list that contains a couple of numbers and our user is going

32

00:02:20,910  -->  00:02:23,520
to guess one of these numbers.

33

00:02:23,520  -->  00:02:31,890
So for example I'm going to type 3 or 9 and now that's inside our variable we can ask the user for a

34

00:02:31,890  -->  00:02:37,400
number which I'm going to just pretend a user on the school number is going to be 4.

35

00:02:37,950  -->  00:02:44,030
And then we're going to tell the user whether they got the number right or not.

36

00:02:44,040  -->  00:02:49,160
So essentially whether the number they gave us is inside this list or not.

37

00:02:49,200  -->  00:02:50,160
You can do that.

38

00:02:50,340  -->  00:02:53,320
You know the key word and there's two variables there.

39

00:02:53,370  -->  00:02:57,330
So you can get whether this is true or false

40

00:03:00,420  -->  00:03:01,360
the way you would do it.

41

00:03:01,380  -->  00:03:06,830
You say use it on the number in magic underscore numbers and that would give you false.

42

00:03:07,200  -->  00:03:11,350
But it's not very good if we just add the user false.

43

00:03:11,400  -->  00:03:18,270
So we want to tell the user this number is not part of the magic numbers for example and you can do

44

00:03:18,270  -->  00:03:21,570
this with an if statement and with a print method.

45

00:03:21,600  -->  00:03:24,220
So go ahead and try and do that.

46

00:03:24,510  -->  00:03:30,970
If you use a number is not in magic numbers print you got it wrong.

47

00:03:33,690  -->  00:03:35,020
So there's two ways we could do this.

48

00:03:35,100  -->  00:03:45,190
If use a number in magic numbers print you got it right.

49

00:03:46,540  -->  00:03:51,300
Which it doesn't print anything or if user Andreyko number.

50

00:03:51,330  -->  00:03:54,780
Not in magic numbers print.

51

00:03:54,930  -->  00:03:56,670
You got it wrong.

52

00:03:57,720  -->  00:04:00,090
Which does print something.

53

00:04:00,120  -->  00:04:06,120
However if they do get it right this version is not going to print anything if they get it wrong.

54

00:04:06,210  -->  00:04:08,460
This version is not going to print anything.

55

00:04:08,460  -->  00:04:14,250
So if we say user on this call number is three and then we say this he's going to copy and paste it

56

00:04:15,870  -->  00:04:18,290
then that doesn't print anything which is what you would want.

57

00:04:18,540  -->  00:04:24,310
And this one does print something which is that you got it right.

58

00:04:24,450  -->  00:04:26,090
So that's fantastic.

59

00:04:26,920  -->  00:04:33,840
And in the next video we're going to look at how we can simplify this a bit more and make sure that

60

00:04:33,840  -->  00:04:38,620
the user is getting the feedback that they want.

61

00:04:38,670  -->  00:04:40,100
So I'll be seeing you in the very next video
