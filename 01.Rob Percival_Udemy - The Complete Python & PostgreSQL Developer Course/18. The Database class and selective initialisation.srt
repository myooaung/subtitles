1

00:00:00,250  -->  00:00:01,770
Hi will come back.

2

00:00:01,900  -->  00:00:06,960
This way you will going forwards and creating a database class through all this section.

3

00:00:06,990  -->  00:00:12,850
We've learned loads about Python and I know it can get quite confusing quite quickly.

4

00:00:12,900  -->  00:00:19,950
I am going to use this moment to just encourage you to ask questions in the course Q&A if you have any

5

00:00:19,950  -->  00:00:20,830
.

6

00:00:20,880  -->  00:00:29,330
I am truly honestly committed to helping you learn and I answer any questions as soon as I can.

7

00:00:29,370  -->  00:00:31,560
Let's create a database class.

8

00:00:31,560  -->  00:00:34,670
Now you may wonder why we're doing anymore.

9

00:00:34,710  -->  00:00:40,620
You know we've got this cursor from connection pool that gets us the cursor really easily we've got

10

00:00:40,620  -->  00:00:45,720
this connection pool that OK only has one connection available but they can have more.

11

00:00:45,950  -->  00:00:47,430
And you know that is great.

12

00:00:47,430  -->  00:00:51,500
This is very fast performing quickly because we've got the connection pool.

13

00:00:51,510  -->  00:00:56,340
We don't need to create new connections.

14

00:00:56,340  -->  00:00:58,970
And yeah you know that's correct.

15

00:00:59,110  -->  00:01:00,460
It's good.

16

00:01:00,690  -->  00:01:06,160
I'm telling you but we can do better and we should.

17

00:01:06,300  -->  00:01:09,760
There is one problem though that it's something I don't really like about pythoness.

18

00:01:09,780  -->  00:01:16,230
One of the few things I don't like about Python but it is unavoidable and it is I don't know if you

19

00:01:16,230  -->  00:01:20,260
knew this but Python is a compiled language.

20

00:01:20,260  -->  00:01:29,070
So before running files like database Doppie why before being able to gain this connection pool we have

21

00:01:29,070  -->  00:01:34,360
to compile this file and converted into something the computer can understand.

22

00:01:34,620  -->  00:01:38,860
I'm not going to go into what compiling is essentially converting this into something else.

23

00:01:39,030  -->  00:01:45,240
Converting this text essentially all this text into something else than the computer or in this case

24

00:01:45,600  -->  00:01:49,670
the Python interpreter which is another program can understand that can execute.

25

00:01:50,010  -->  00:01:55,450
So we have to compile all this and that's OK.

26

00:01:55,770  -->  00:02:03,980
But something else that also has to happen is that the imports have to get cleared.

27

00:02:04,080  -->  00:02:11,550
And what that means is if we go into an app which is our starting point app Doppie why we execute apt

28

00:02:11,550  -->  00:02:19,560
IPY when we run our app we right click app IPY Y and we run it at dopy y imports user the user class

29

00:02:19,560  -->  00:02:20,910
.

30

00:02:21,030  -->  00:02:29,940
So before going to app before running the first line what we do is we go into user and we run that we

31

00:02:29,940  -->  00:02:33,240
run the user file first because that's the first thing here.

32

00:02:33,360  -->  00:02:39,230
And we have to make sure that the import is available you know when it works ok that makes sense.

33

00:02:39,450  -->  00:02:42,770
So we go into the user file and we run this file.

34

00:02:42,990  -->  00:02:46,370
And what this file does is it imports something else.

35

00:02:46,470  -->  00:02:49,020
It imports from the database file.

36

00:02:49,020  -->  00:02:53,560
So before going in and running this we run the database file.

37

00:02:53,610  -->  00:02:59,110
So here we go in the database and the first thing it does is it imports from cyclopedia.

38

00:02:59,130  -->  00:03:03,440
So it goes and then runs that we're not going to get into that but that's what happens.

39

00:03:03,600  -->  00:03:09,300
And eventually it finishes running psycho-BS you too and it gets back to the database and then it says

40

00:03:09,300  -->  00:03:14,180
OK I'm going to run this now and then it runs this.

41

00:03:14,250  -->  00:03:21,460
So the first thing in our application the first thing that happens is this variable gets created that

42

00:03:21,600  -->  00:03:30,780
the pool gets created one connection gets created into our database and then the class gets analyzed

43

00:03:30,780  -->  00:03:31,180
.

44

00:03:31,200  -->  00:03:33,440
We kind of realizes that this is a class.

45

00:03:33,540  -->  00:03:35,470
It does not execute the methods.

46

00:03:35,520  -->  00:03:37,240
That doesn't happen.

47

00:03:37,410  -->  00:03:39,470
It just knows that they are there essentially.

48

00:03:39,960  -->  00:03:42,210
But this does get executed.

49

00:03:42,240  -->  00:03:43,720
We created the connection.

50

00:03:43,720  -->  00:03:46,620
That's the first thing that we do in our app.

51

00:03:46,770  -->  00:03:51,990
Then it goes back to the user it goes back in time essentially and it runs these and then realizes this

52

00:03:51,990  -->  00:03:54,340
is a class as well and it has some methods you know.

53

00:03:54,780  -->  00:03:59,130
And then it goes back to the app and then realizes OK we can import the user that class that exists

54

00:03:59,130  -->  00:03:59,520
.

55

00:03:59,610  -->  00:04:00,690
Let's do that.

56

00:04:00,690  -->  00:04:06,570
And then it runs the first line there then it creates the user object and then it runs this method.

57

00:04:06,570  -->  00:04:10,550
It knows this method exists because it saw it when it was analyzing the other file.

58

00:04:10,920  -->  00:04:14,870
But this is the first time this method runs.

59

00:04:16,010  -->  00:04:16,410
OK.

60

00:04:16,410  -->  00:04:18,320
So that's what happens.

61

00:04:18,330  -->  00:04:24,450
The thing I don't like is that the connection pool gets executed before anything else.

62

00:04:24,450  -->  00:04:29,530
We don't have the ability to say when we wanted to execute this connection pool.

63

00:04:29,580  -->  00:04:35,550
So for example this application had a graphical interface and we wanted our users to be able to interact

64

00:04:35,550  -->  00:04:42,360
with the interface potentially the first thing we'd want to do is show them the interface not initialize

65

00:04:42,360  -->  00:04:44,140
a connection pool.

66

00:04:45,090  -->  00:04:49,830
Now I appreciate this connection pool does not take a lot of time to be initialized but potentially

67

00:04:49,920  -->  00:04:51,210
it could.

68

00:04:51,210  -->  00:04:58,260
So this is why I'm telling you all this if we put these in a class and we initialize it inside a method

69

00:04:58,290  -->  00:05:02,700
of the class it does not get executed immediately.

70

00:05:02,730  -->  00:05:08,030
So that's what we're going to be doing so that we can control when it gets executed.

71

00:05:09,440  -->  00:05:15,110
So I'm going to read a class database and this database is going to have the connection pool in it.

72

00:05:15,190  -->  00:05:19,950
But if we do this then this is not the best way to do it.

73

00:05:19,990  -->  00:05:26,950
So what are we going to do is we're going to initialize the collection pool property of the database

74

00:05:28,270  -->  00:05:29,500
inside the method.

75

00:05:29,740  -->  00:05:33,230
So the connection pool is going to be none.

76

00:05:33,790  -->  00:05:35,260
Sorry about that up there we go.

77

00:05:35,470  -->  00:05:37,740
And I'm going to cut all that stuff.

78

00:05:37,780  -->  00:05:44,950
So now we've got a class database and the date the class itself has a property called Connection Pool

79

00:05:44,960  -->  00:05:45,270
.

80

00:05:45,320  -->  00:05:49,120
Notice this is not inside the init method.

81

00:05:49,210  -->  00:05:51,700
This is inside the class.

82

00:05:52,060  -->  00:05:57,640
So this property here belongs to the class itself and not one of the objects.

83

00:05:57,640  -->  00:05:58,980
OK.

84

00:06:00,100  -->  00:06:04,120
And then we're going to do def initialize and we're going to say

85

00:06:06,590  -->  00:06:14,810
database dot connection pool equals the pool that we know and love.

86

00:06:14,910  -->  00:06:15,980
OK.

87

00:06:16,870  -->  00:06:22,060
So we're seeing the property connection pool of the data base class.

88

00:06:22,060  -->  00:06:24,620
Note not an object.

89

00:06:24,850  -->  00:06:29,440
The Database class if it was an object we would have to do something like database equals database.

90

00:06:29,470  -->  00:06:34,830
Remember that and then database dot connection pool which is also valid by the way.

91

00:06:34,930  -->  00:06:42,650
But the connection pool is not belonging to an object it is belonging to the database itself.

92

00:06:42,880  -->  00:06:49,210
And so all objects that we create of type database would have the same connection pool available to

93

00:06:49,210  -->  00:06:50,900
them.

94

00:06:50,980  -->  00:06:52,820
We're going to get into this more later on.

95

00:06:52,830  -->  00:06:55,290
But I just wanted to tell you about this a bit more.

96

00:06:56,500  -->  00:07:02,650
So when we run this initial x method we initialize the connection pool we see data which is dot connection

97

00:07:02,650  -->  00:07:07,780
pool equals pool or simple connection pool blah blah blah.

98

00:07:08,450  -->  00:07:09,240
OK.

99

00:07:09,730  -->  00:07:16,930
So I'm going to go back into my app I'm going to delete this stuff here and I'm going to show you what

100

00:07:17,140  -->  00:07:19,700
the data is not Cornish and pool means.

101

00:07:20,350  -->  00:07:23,240
So I want to objects.

102

00:07:23,290  -->  00:07:29,590
Well first of all I want from database import database and then I want two objects the lobby one is

103

00:07:29,620  -->  00:07:35,160
going to be a new database database two is going to be a new database too.

104

00:07:35,980  -->  00:07:36,620
OK.

105

00:07:36,850  -->  00:07:45,770
And then we are going into the following print database.

106

00:07:45,790  -->  00:07:51,420
One dot connection pool print data is to dog connection pool.

107

00:07:52,050  -->  00:07:55,890
What would you expect them to be printed out at this point.

108

00:07:55,930  -->  00:08:03,070
We've created the database object with another object and we're printing out the connection pools that

109

00:08:03,070  -->  00:08:04,310
are in them.

110

00:08:04,390  -->  00:08:11,040
I'm going to go into the database now and see that there is no init method.

111

00:08:11,170  -->  00:08:12,280
There is no init method.

112

00:08:12,280  -->  00:08:18,760
There's only a initialize method that will tell you that does not get executed automatically and there

113

00:08:18,760  -->  00:08:24,250
is a connection pool variable there inside the class that is none.

114

00:08:25,210  -->  00:08:30,230
What do you think is going to get printed out.

115

00:08:30,580  -->  00:08:33,330
Possibly your answer was none.

116

00:08:33,820  -->  00:08:36,990
And you would be correct none gets printed out.

117

00:08:36,990  -->  00:08:42,290
In both cases the connection pool for the top one is none.

118

00:08:42,310  -->  00:08:45,260
The connection pool for the two is also none.

119

00:08:45,970  -->  00:08:48,050
But here's here's what happens.

120

00:08:48,670  -->  00:08:54,190
I'm going to do deliveries one not initialize.

121

00:08:54,220  -->  00:08:55,620
What do you think is going to happen now.

122

00:08:55,690  -->  00:09:02,470
What is going to get printed out.

123

00:09:03,940  -->  00:09:10,510
Now this is weird and I appreciate it if this is the first time you're encountering this sort of stuff

124

00:09:10,530  -->  00:09:11,020
.

125

00:09:11,180  -->  00:09:15,250
You're thinking this is way over my head but it's really not.

126

00:09:15,250  -->  00:09:21,310
Trust me we've got database one which is the database object and we know that these objects are separate

127

00:09:21,310  -->  00:09:27,610
from one another completely separate from the properties of one object can have the same names as the

128

00:09:27,610  -->  00:09:31,240
properties of another object but they have completely different values.

129

00:09:32,170  -->  00:09:37,190
So we print the connection pool of database one and we get none.

130

00:09:37,330  -->  00:09:44,140
Then we initialize database one then we print the connection pool of the database to and there is a

131

00:09:44,140  -->  00:09:46,200
connection pool there.

132

00:09:46,450  -->  00:09:56,860
What is going on here is what this connection pool belongs to the database and I've said this before

133

00:09:56,870  -->  00:09:57,090
.

134

00:09:57,310  -->  00:10:04,540
Not to a specific object so it is shared amongst all objects of type database.

135

00:10:04,540  -->  00:10:13,980
When we set a value to it all of the objects of type database get to that new value and now you're thinking

136

00:10:14,070  -->  00:10:22,170
is that useful for anything and yeah yeah I mean it's useful for some things.

137

00:10:22,600  -->  00:10:24,600
I can't really think of any of the top of my head.

138

00:10:25,290  -->  00:10:35,160
But the great thing about giving this connection pool to the Database class is that we can also just

139

00:10:35,160  -->  00:10:44,190
skip objects completely just see databases dot connection pool because the connection pool belongs to

140

00:10:44,790  -->  00:10:47,670
the Database class.

141

00:10:47,670  -->  00:10:51,280
What do you think is going to happen when I run this.

142

00:10:51,450  -->  00:10:58,170
Think carefully about it because it is a trick question.

143

00:10:58,170  -->  00:11:01,420
OK let's run it.

144

00:11:01,650  -->  00:11:03,680
Error message type error.

145

00:11:03,790  -->  00:11:08,530
Initialize missing one required positional argument self.

146

00:11:09,120  -->  00:11:10,860
We are not passing itself.

147

00:11:11,130  -->  00:11:18,430
Remember when we have an object my object equals database and are misspelled.

148

00:11:19,260  -->  00:11:22,340
And we do this just cannot spell it correctly.

149

00:11:22,350  -->  00:11:25,210
I get OCD and we do this.

150

00:11:25,230  -->  00:11:29,980
My object gets passed in ASP self right.

151

00:11:30,000  -->  00:11:36,060
We've looked at this before briefly but now we want to run the method directly on the database because

152

00:11:36,750  -->  00:11:40,830
the connection pool belongs to data because it does not belong to a specific object so it doesn't make

153

00:11:40,830  -->  00:11:42,200
sense to create an object.

154

00:11:42,420  -->  00:11:44,610
We just want to run it on database.

155

00:11:44,640  -->  00:11:46,520
Can we do this.

156

00:11:47,490  -->  00:11:49,760
Yes we can.

157

00:11:50,430  -->  00:11:51,410
Just like at.

158

00:11:51,420  -->  00:11:53,330
Class method.

159

00:11:54,150  -->  00:12:00,610
Replace the self for CLX and pointed to the currently bound class static method.

160

00:12:00,780  -->  00:12:02,310
Just remove it completely.

161

00:12:02,310  -->  00:12:04,540
There is no reference to the current class.

162

00:12:04,650  -->  00:12:10,810
There's no reference to anything else we could do.

163

00:12:10,830  -->  00:12:14,670
Class method and then we would have to put CLX here.

164

00:12:14,770  -->  00:12:20,100
CLX would be a reference to the currently bound class so we could do this.

165

00:12:20,130  -->  00:12:21,890
That would be totally fine.

166

00:12:22,020  -->  00:12:22,590
We can do that.

167

00:12:22,600  -->  00:12:25,160
Well.

168

00:12:27,750  -->  00:12:31,350
OK so a lot of stuff going on this video.

169

00:12:32,010  -->  00:12:36,460
What else can we do.

170

00:12:36,480  -->  00:12:42,200
I've just introduced static method to you and have introduced static properties such as Connection Pool

171

00:12:42,200  -->  00:12:43,860
as a static or class property.

172

00:12:43,860  -->  00:12:47,010
That's what they're called and we can do more things we can do.

173

00:12:47,010  -->  00:12:55,620
Class method because we can access where we can access the connection pool directly.

174

00:12:55,620  -->  00:12:59,680
So I'm down here instead of connection underskirt pool.

175

00:12:59,700  -->  00:13:05,780
We could see the Tabby's dot connection pool and Dot get clean.

176

00:13:05,920  -->  00:13:13,350
This is something that's valid and down here we could do database dot connection pool dot put on we

177

00:13:13,350  -->  00:13:14,790
can return the connection to the pool.

178

00:13:15,060  -->  00:13:17,170
But this is not very good style.

179

00:13:17,170  -->  00:13:18,730
The table is dot connection.

180

00:13:18,730  -->  00:13:19,810
Please don't get caught.

181

00:13:19,850  -->  00:13:20,850
There's too many dots.

182

00:13:20,940  -->  00:13:29,790
This is too confusing when I want to do is say database don't get connection and what I want to do is

183

00:13:29,830  -->  00:13:33,310
a database don't return connection.

184

00:13:33,330  -->  00:13:37,530
I think that reads better for me that's cleaner code.

185

00:13:37,530  -->  00:13:39,540
So we're rolling with that.

186

00:13:39,810  -->  00:13:41,250
We want to be able to do this.

187

00:13:41,370  -->  00:13:42,820
That's actually quite simple.

188

00:13:42,900  -->  00:13:52,260
Using another class method we can get connection and all this has to do is return C-Class dot connection

189

00:13:52,260  -->  00:13:54,950
pool and don't get caught.

190

00:13:56,070  -->  00:14:03,660
So this is doing what we were doing down here but now whenever we interact with a database class it's

191

00:14:03,660  -->  00:14:04,450
a lot simpler.

192

00:14:04,530  -->  00:14:06,590
We just call database dog connection.

193

00:14:06,600  -->  00:14:10,680
We don't have to say database dot connection pool don't get connection.

194

00:14:10,680  -->  00:14:11,700
It's a bit simpler.

195

00:14:11,700  -->  00:14:18,680
This is only in one place in our code database dog connection could be in many places now.

196

00:14:19,710  -->  00:14:24,150
We can also have a static method for a class method.

197

00:14:24,150  -->  00:14:25,230
It doesn't matter which one to use.

198

00:14:25,230  -->  00:14:30,810
Just remember CLSA is totally replaceable for database.

199

00:14:30,810  -->  00:14:36,950
There's a few reasons why class method exists but we're not going to get into those just yet return

200

00:14:36,960  -->  00:14:38,270
connection.

201

00:14:39,600  -->  00:14:44,010
And here we want to say database dot connection pool.

202

00:14:44,040  -->  00:14:49,430
Don't put on and we need the connection that we want to put back in.

203

00:14:50,820  -->  00:14:54,690
So I'm gonna pass it in as a parameter as an argument.

204

00:14:54,720  -->  00:14:55,520
Same thing.

205

00:14:55,860  -->  00:15:01,230
And then that is going in event database don't return connection and I'm passing it in the connection

206

00:15:01,230  -->  00:15:04,410
that is in this cursor from connection from pool.

207

00:15:05,380  -->  00:15:07,050
OK and that's that.

208

00:15:07,440  -->  00:15:12,390
There's also another thing that we could implement and which is just useful to do.

209

00:15:12,430  -->  00:15:16,710
And it is part of the connection pool which is close all connections

210

00:15:18,960  -->  00:15:21,590
.

211

00:15:24,210  -->  00:15:25,300
There we go.

212

00:15:25,830  -->  00:15:30,570
That just stops the commit from going through to any connection and closes them all.

213

00:15:30,570  -->  00:15:35,130
It's not something we've used but it's something that can be done and just in case we need it for later

214

00:15:35,130  -->  00:15:37,590
on I'm going to put that in.

215

00:15:39,090  -->  00:15:42,470
OK so does this work.

216

00:15:42,510  -->  00:15:52,920
Can we do what we were doing before and I'm just going to copy it so I don't bore you.

217

00:15:52,920  -->  00:15:57,000
Can we create a new user and then save it and then load it and then print it out

218

00:16:01,320  -->  00:16:03,160
and want to import user.

219

00:16:03,400  -->  00:16:08,080
And then I'm going to create one user like so save it to the database.

220

00:16:08,130  -->  00:16:14,670
Sorry I have to put none down there at the end of the ID field and then we're going to load it from

221

00:16:14,670  -->  00:16:19,000
the database with that email and we're going to print it out.

222

00:16:19,080  -->  00:16:22,310
So do you think it is going to work.

223

00:16:22,350  -->  00:16:26,050
Do you see any reason why it shouldn't work.

224

00:16:26,070  -->  00:16:27,820
Give it a think.

225

00:16:27,870  -->  00:16:30,610
Remember I'm always trying to catch you out.

226

00:16:31,740  -->  00:16:33,200
So think about it carefully.

227

00:16:33,360  -->  00:16:35,520
Let's run this thing.

228

00:16:36,210  -->  00:16:42,310
Oh no I caught you none type object has no attribute get conned.

229

00:16:42,360  -->  00:16:44,590
You were thinking that was going to work didn't you.

230

00:16:45,420  -->  00:16:48,980
It says get caught is not an attribute of none.

231

00:16:49,380  -->  00:16:52,380
So let's dot connection pool is none.

232

00:16:52,920  -->  00:16:53,540
Let's get to it.

233

00:16:53,540  -->  00:17:03,090
It's basically saying you're trying to run this but this thing here this CLX not Connection Pool is

234

00:17:03,090  -->  00:17:08,470
none and none doesn't have get to as part of it.

235

00:17:08,670  -->  00:17:12,020
So you can't call get con on none.

236

00:17:12,150  -->  00:17:12,810
It makes sense.

237

00:17:12,810  -->  00:17:18,640
None is an anything so why should it have a get con method associated with it.

238

00:17:18,720  -->  00:17:22,240
So how do we fix that.

239

00:17:22,380  -->  00:17:23,780
That is nutten.

240

00:17:23,970  -->  00:17:25,500
I smell a pattern here.

241

00:17:25,500  -->  00:17:30,230
This is also known that is non knowledge.

242

00:17:30,390  -->  00:17:34,110
How do we fix this being none.

243

00:17:36,210  -->  00:17:41,140
Well I'm sure you got it from database import database.

244

00:17:41,820  -->  00:17:46,230
And remember we have to initialize the database.

245

00:17:46,320  -->  00:17:50,580
We now can choose when we want to initialize the database.

246

00:17:50,580  -->  00:17:55,660
So now we can run this and that is fine because we can choose.

247

00:17:55,710  -->  00:17:58,290
We could potentially initialize it after creating the user.

248

00:17:58,290  -->  00:17:59,090
That would be OK.

249

00:17:59,090  -->  00:18:00,660
We've not used that yet.

250

00:18:00,960  -->  00:18:03,380
We can we can initialize it here instead.

251

00:18:03,640  -->  00:18:13,960
That's fine but naturally if we put it down here then that is not fine because then that is none.

252

00:18:15,750  -->  00:18:18,320
Let's put it at the top.

253

00:18:19,830  -->  00:18:22,180
OK a long video.

254

00:18:22,260  -->  00:18:23,160
I appreciate.

255

00:18:23,160  -->  00:18:27,540
I do admire you for staying with me until here.

256

00:18:27,690  -->  00:18:30,910
Hopefully you are learning some stuff.

257

00:18:31,380  -->  00:18:33,140
And that's it for this video.

258

00:18:33,270  -->  00:18:37,470
So in the next video we're going to be looking into more stuff and what we're going to be looking at

259

00:18:37,560  -->  00:18:47,170
is into him making sure that we are not limited into what servers we connect to for our database.

260

00:18:47,190  -->  00:18:47,740
So I see you.

261

00:18:47,850  -->  00:18:49,930
Actually I'm excited about that.
