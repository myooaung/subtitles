WEBVTT
1

00:00:00.140  -->  00:00:05.550
Kind welcome back in this video we're looking at printing out the student list which is going to involve

2

00:00:05.910  -->  00:00:11.750
iterating over a list of students and printing out details for every student.

3

00:00:11.760  -->  00:00:18.510
The first thing we want to do is create a method that will essentially print out the details of a single

4

00:00:18.510  -->  00:00:20.290
student.

5

00:00:21.720  -->  00:00:31.530
I'm going to call this method student details and I cannot spell details and it's going to take an A-student

6

00:00:31.980  -->  00:00:32.810
dictionary.

7

00:00:33.060  -->  00:00:43.020
And what I want this method to do is print out a string that tells the user important information about

8

00:00:43.650  -->  00:00:47.770
the student.

9

00:00:47.820  -->  00:00:52.130
Now the important information might be the name it might be.

10

00:00:52.230  -->  00:00:53.910
Each of them are actually a student.

11

00:00:53.970  -->  00:00:55.480
It might be the average mark.

12

00:00:55.590  -->  00:01:01.120
You can decide what you want to print out and just print it out here under student details.

13

00:01:01.140  -->  00:01:05.100
And then we're going to just do that for each of the students in our system and we're going to get to

14

00:01:05.190  -->  00:01:08.010
exactly how we're going to do that in just a moment.

15

00:01:08.010  -->  00:01:13.740
First let's pause the video and print out the important details that you feel the user of the system

16

00:01:13.770  -->  00:01:17.930
should be able to see.

17

00:01:18.150  -->  00:01:25.800
Now that we've got that I'm going to be printing out the name and the average mark you may want to print

18

00:01:25.800  -->  00:01:27.840
on each individual lock as well if you want.

19

00:01:27.930  -->  00:01:36.720
But in my case I'm just gonna keep it simple and print the name and the average mark which is going

20

00:01:36.720  -->  00:01:43.160
to be that and then I you know dot format and all we're going to put here is first the student name

21

00:01:45.450  -->  00:01:52.280
and then the student to write the calculate average mark for the student.

22

00:01:53.070  -->  00:01:59.730
And you know what that does is it gets that string and it formats it with these two values you name

23

00:02:00.060  -->  00:02:03.090
goes where the first set of curly braces is.

24

00:02:03.250  -->  00:02:06.780
Calculate average mark goes with the second set of collaborators.

25

00:02:06.960  -->  00:02:13.140
And then we can just do that and print all of that out.

26

00:02:16.040  -->  00:02:16.500
OK.

27

00:02:16.500  -->  00:02:20.910
Now we can really the comment is no longer necessary and we've got ourselves a method that we'll print

28

00:02:20.910  -->  00:02:23.820
details for one single student.

29

00:02:23.820  -->  00:02:28.560
Now we want to create a method that will print out the details for all of the students in our student

30

00:02:28.560  -->  00:02:31.090
list that your list doesn't yet exist.

31

00:02:31.140  -->  00:02:38.490
So we're going to create that first student on the call list is going to be an empty list when the user

32

00:02:38.490  -->  00:02:41.660
runs the program and they want to add a student.

33

00:02:41.880  -->  00:02:46.200
We're going to put that student in this list and when they want to nab another student We're also going

34

00:02:46.200  -->  00:02:48.280
to put it in this list and so on.

35

00:02:48.300  -->  00:02:52.780
Remember that a list unlike a set is ordered.

36

00:02:53.190  -->  00:02:56.340
The first student that the user adds is going to be index 0.

37

00:02:56.370  -->  00:03:00.530
The next student is going to be in next one and so on and so on.

38

00:03:01.800  -->  00:03:05.780
So let's create a method that will print out the details for each of the students.

39

00:03:05.850  -->  00:03:06.950
And I think you can do this.

40

00:03:07.230  -->  00:03:12.870
Just define a method called Print student details or something like that or print students and then

41

00:03:13.050  -->  00:03:20.330
iterate over the list using a for loop and call the student details method on each of the elements.

42

00:03:20.460  -->  00:03:25.980
I would recommend once again pausing trying that because by practicing it's the best way for you to

43

00:03:25.980  -->  00:03:30.190
learn and to make sure that you're keeping all that knowledge in your head.

44

00:03:30.240  -->  00:03:37.260
So post a video try that and then come back and we'll continue.

45

00:03:37.290  -->  00:03:43.950
Now that we've done that I'm going to create a method called Print students will print student list

46

00:03:43.950  -->  00:03:44.040
.

47

00:03:44.040  -->  00:03:51.600
It doesn't matter what you call it as long as it is fairly self-explanatory name and that's going to

48

00:03:51.600  -->  00:03:56.420
take in a students list which is going to be that one up there.

49

00:03:58.710  -->  00:04:07.080
And the other thing is going to do is for student in students and then it gets a student details of

50

00:04:07.110  -->  00:04:08.770
the shoot.

51

00:04:09.270  -->  00:04:16.650
And this is not students but rather student list because a student list is the same as the name outside

52

00:04:17.100  -->  00:04:22.050
Pi tells you that you're shadowing a name for an outer scope.

53

00:04:22.160  -->  00:04:25.430
So this thing exists out side of this method.

54

00:04:25.590  -->  00:04:32.070
The one that we're calling here is always the one that is defining the method but it is confusing nevertheless

55

00:04:32.100  -->  00:04:35.100
because it has the same name as something that's been defined outside.

56

00:04:35.100  -->  00:04:38.700
So Pensham recommends that you don't do that if you can avoid it.

57

00:04:38.790  -->  00:04:44.280
And I'm just going to call this students just to make that a bit clearer.

58

00:04:44.750  -->  00:04:51.870
And now she didn't details we don't immediately know what that means because it isn't telling us that

59

00:04:51.870  -->  00:04:53.190
it's printing things out.

60

00:04:53.190  -->  00:05:01.140
So what I'm going to do is shift and function 6 and just put print in front and then at the bottom here

61

00:05:01.440  -->  00:05:07.500
it tells you where it'll be used it's been used in the student's package which is our program and then

62

00:05:07.620  -->  00:05:08.810
it can say app.

63

00:05:08.890  -->  00:05:12.040
Why am I in there so we can just do refactor.

64

00:05:12.150  -->  00:05:15.550
And I noticed how the method name changes there as well.

65

00:05:15.680  -->  00:05:20.710
And that now tells us a bit more info for each of the students and student.

66

00:05:21.210  -->  00:05:22.660
We're going to print out that usually tails.

67

00:05:22.960  -->  00:05:27.420
And before if we only have student details it's not really clear what that's doing.

68

00:05:27.420  -->  00:05:28.380
Is that printing things out.

69

00:05:28.380  -->  00:05:30.050
Is that returning a value.

70

00:05:30.120  -->  00:05:34.090
So now it's a bit clearer which is fantastic.

71

00:05:35.700  -->  00:05:36.190
OK.

72

00:05:36.300  -->  00:05:41.940
So this is printing this you know details out and in the next video we are going to be working on the

73

00:05:41.940  -->  00:05:45.800
menu and we're going to realize that we're going to have to make a small change here but we're going

74

00:05:45.810  -->  00:05:47.960
to leave that change for the next video.

75

00:05:48.180  -->  00:05:54.350
Just so you guys can be a bit more clearly why the change is necessary.

76

00:05:54.360  -->  00:05:59.180
So let's leave a small change for the next video and let's go directly onto that.

77

00:05:59.190  -->  00:06:03.130
We're more going to be working on creating a menu for our users.

78

00:06:03.360  -->  00:06:04.200
So what's in the next video
