WEBVTT
1

00:00:00.180  -->  00:00:05.640
Hi and welcome back in this video we're looking at views of you is not something we've seen before.

2

00:00:05.880  -->  00:00:14.220
So let me quickly explain what a view is a view is essentially the result of a query.

3

00:00:14.310  -->  00:00:21.300
It's not quite that simple because you can do things with views that you cannot do just with a basic

4

00:00:21.300  -->  00:00:22.830
result.

5

00:00:22.980  -->  00:00:32.100
Think of a view as a camera or looking at a table and then you can interact with that camera.

6

00:00:32.190  -->  00:00:38.550
You can interact with that view in any way that you could interact with a normal table.

7

00:00:38.610  -->  00:00:40.110
I appreciate it a bit confusing.

8

00:00:40.200  -->  00:00:45.240
So I think the best way to go about this is that I'll show you how to create a view of the different

9

00:00:45.240  -->  00:00:48.780
ways that you can interact with it.

10

00:00:48.780  -->  00:00:55.790
For example let's say we want to get the total revenue per customer.

11

00:00:55.920  -->  00:01:00.120
Essentially how much they've spent in our business.

12

00:01:00.270  -->  00:01:02.450
Let's let's do that with a normal query.

13

00:01:02.490  -->  00:01:13.770
First we would do something like select Stolle from customers in a join and then we would join on purchases

14

00:01:14.450  -->  00:01:22.290
on customers don't ID equal purchases dot customer ID and as you know this would give us the customer

15

00:01:22.740  -->  00:01:26.010
and then the purchases that we've made with the duplicate.

16

00:01:26.040  -->  00:01:32.710
So we have to Rolf's to Ralph Smiths there and all that good Janz and then we can do.

17

00:01:32.790  -->  00:01:42.570
And in a joint story about this too that it's a bit more readable inner join items on purchases tot

18

00:01:42.630  -->  00:01:49.550
item id equal items that IAB and I'm going to run this and as you know that gives me the customer the

19

00:01:49.560  -->  00:01:50.890
purchase that they did.

20

00:01:51.000  -->  00:01:57.790
And then what item and that it's linked to that purchase.

21

00:01:57.870  -->  00:02:03.510
So now what I want to do is get the total that they've spent in their purchases and we've done this

22

00:02:03.510  -->  00:02:04.310
before.

23

00:02:04.770  -->  00:02:08.120
So what to do is group by customer.

24

00:02:08.430  -->  00:02:15.390
So we only get one customer row and then output the some of the prices.

25

00:02:15.390  -->  00:02:16.360
So I think you can do that.

26

00:02:16.420  -->  00:02:17.800
We're going to group by customer.

27

00:02:18.240  -->  00:02:19.590
And in the select.

28

00:02:19.680  -->  00:02:21.230
We're not going to select store.

29

00:02:21.390  -->  00:02:26.610
Instead we're going to select the customer first name last name and the some of the price.

30

00:02:26.610  -->  00:02:31.340
My recommendation is to pause the video and give this a go.

31

00:02:33.420  -->  00:02:33.860
OK.

32

00:02:33.960  -->  00:02:36.720
Once that's done let's go over it.

33

00:02:36.720  -->  00:02:43.270
It will be grouped by customers dot ID and then select it will run this.

34

00:02:43.270  -->  00:02:50.120
Now it tells us that we can't because the purchasers call them it's not in the group by clause.

35

00:02:50.160  -->  00:02:52.400
So we've essentially lost that granularity.

36

00:02:52.410  -->  00:03:00.360
We no longer have access to purchases separately or items so we cannot select each of the purchase items

37

00:03:00.810  -->  00:03:04.330
because we've lost the granularity when we buy customer ID.

38

00:03:04.350  -->  00:03:11.670
So what we have to do is not select each row individually unless it is part of the customers table then

39

00:03:11.670  -->  00:03:12.690
we can do that.

40

00:03:12.690  -->  00:03:23.790
So customers not first name customers don't last name and the sum of item prices and we can do this

41

00:03:23.790  -->  00:03:31.500
because sequel realizes that some is acting on each of the items linked in the stable.

42

00:03:31.680  -->  00:03:33.940
But before it is being grouped.

43

00:03:33.960  -->  00:03:39.850
So when we execute this we get the total amount they've spent in our business.

44

00:03:39.900  -->  00:03:48.390
Now this may be quite a useful result for a business to know which customers are the top customers for

45

00:03:48.390  -->  00:03:51.190
example to send them promotions and things like that.

46

00:03:52.020  -->  00:04:01.400
So it is not great if you have to do this every time that you want to get out your top customers or

47

00:04:01.400  -->  00:04:05.700
it every time you want to see how much each of your customers have spent.

48

00:04:05.700  -->  00:04:09.670
So what we can do is we can see this resolved as a view.

49

00:04:10.020  -->  00:04:12.070
So let's let's do that.

50

00:04:12.360  -->  00:04:18.360
We're going to do create value and then we give the viewer a name and when to call it total revenue

51

00:04:18.390  -->  00:04:24.990
per customer and then we type as and then whatever comes after the AS In our case all of this stuff

52

00:04:25.740  -->  00:04:30.840
is saved as the query that this view represents.

53

00:04:30.840  -->  00:04:35.340
So if we run that we just get query returns successfully.

54

00:04:35.700  -->  00:04:41.450
And now we can say select start from total revenue per customer

55

00:04:44.600  -->  00:04:51.110
which is exactly what you want notice that where we've lost the customer ID because we didn't save it

56

00:04:51.290  -->  00:04:52.300
in the view.

57

00:04:52.580  -->  00:05:02.250
But if we wanted we could drop the view drop view like so and then we can go back here and create the

58

00:05:02.250  -->  00:05:03.180
view again.

59

00:05:03.200  -->  00:05:06.950
But in this case customers don't ID there as well.

60

00:05:06.950  -->  00:05:09.650
So that's how you drop a view on how you can recreate it.

61

00:05:09.720  -->  00:05:15.940
And this once again works and we can select star from total revenue per customer.

62

00:05:16.940  -->  00:05:20.380
And now that gives us the view as well.

63

00:05:20.990  -->  00:05:27.410
The reason why I've included the idea here is so you can show you what happens when we add a new purchase

64

00:05:28.100  -->  00:05:30.150
for one of these customers.

65

00:05:30.350  -->  00:05:36.440
So what are going to do is select start from items and I'm going to find one of these items for example

66

00:05:36.830  -->  00:05:43.750
item 6 item id 6 I'm going to add that as a purchase for one of my users.

67

00:05:43.940  -->  00:05:48.690
So I'm going to add item 6 to user 5.

68

00:05:49.000  -->  00:05:53.560
And remember we have to do that here in the purchasers table.

69

00:05:53.660  -->  00:06:02.420
So I'm going to insert into purchases values the purchase ID which is going to be 11.

70

00:06:03.050  -->  00:06:07.110
The item id which is going to be 6 and the customer which is going to be 5.

71

00:06:07.670  -->  00:06:11.450
Run that and then select start from.

72

00:06:11.450  -->  00:06:19.160
And just when looking at them we see that his money spend has increased.

73

00:06:19.160  -->  00:06:24.580
So what this means is that the view is updatable.

74

00:06:24.690  -->  00:06:30.020
And what I mean with that is whenever you select anything from the view what is happening in the background

75

00:06:30.350  -->  00:06:34.610
is the quality that we saved is getting executed.

76

00:06:34.610  -->  00:06:39.810
So this is not saving the result it is saving the query that we have doing.

77

00:06:40.160  -->  00:06:45.080
And that's an important distinction because it means that base is constantly up to date with the rest

78

00:06:45.080  -->  00:06:53.480
of our data and it's a lot simpler than executing the other query Lindsley that we want to get the top

79

00:06:53.480  -->  00:06:58.460
most customers those customers that have spend over $150.

80

00:06:58.460  -->  00:07:02.770
It's easy they will say you select start from total revenue per customer.

81

00:07:02.840  -->  00:07:11.600
Where in the case this is called Some sum is greater than 150 and then we lose the customer that then

82

00:07:11.600  -->  00:07:14.060
spend too much.

83

00:07:14.060  -->  00:07:19.100
So this could be our awesome customers our top customers whatever you want to call it.

84

00:07:19.220  -->  00:07:28.580
And once again we can create a view for this create few awesome customers as and then select staff from

85

00:07:28.670  -->  00:07:33.660
that of a view where some is greater than 150.

86

00:07:33.860  -->  00:07:41.540
So let's say that view that you can see that just works and then we can say select staff from some customers

87

00:07:43.000  -->  00:07:46.090
and there you go.

88

00:07:46.970  -->  00:07:53.720
We could also then order by some I'm descending.

89

00:07:53.870  -->  00:08:01.310
And what this will do is will give us the top most customer first like so 365 comes first and then 1

90

00:08:01.310  -->  00:08:02.630
9 6.

91

00:08:02.660  -->  00:08:10.510
So as you can see a view behaves exactly like a table but the data that's coming into that view is a

92

00:08:10.500  -->  00:08:12.050
result of another query.

93

00:08:12.050  -->  00:08:17.720
So this lets us to the squeeze while still keeping the code and in the query is very readable.

94

00:08:17.780  -->  00:08:19.580
So that's nice.

95

00:08:20.750  -->  00:08:21.490
Okay.

96

00:08:21.920  -->  00:08:30.890
Other things we can do is insert into A view and now that's a bit more complicated and because you cannot

97

00:08:30.950  -->  00:08:39.650
insert into A view if the view has a group by clause for example as you remember our total revenue per

98

00:08:39.640  -->  00:08:42.950
customer view is grouping by customer ID.

99

00:08:43.050  -->  00:08:50.120
I'll just bring it up here as you can see our total revenue per customer view in-groups by customer

100

00:08:50.120  -->  00:08:51.280
ID.

101

00:08:51.290  -->  00:08:56.970
And because of this grouping we use granularity and we cannot insert data into this view.

102

00:08:57.560  -->  00:08:59.750
That's just one of the limitations of views.

103

00:08:59.750  -->  00:09:03.160
Let's create another view and then insert data into it.

104

00:09:03.260  -->  00:09:12.620
I'm going to create a view called expensive items and it's going to be select start from items where

105

00:09:12.950  -->  00:09:16.520
prices greater than 100.

106

00:09:16.630  -->  00:09:22.920
So if I do this with it it's going to do is just return those items that are more expensive than $100

107

00:09:22.930  -->  00:09:28.320
from going to create this view and didn't like that can you.

108

00:09:28.680  -->  00:09:30.530
I don't know why that happens.

109

00:09:30.530  -->  00:09:37.810
I keep saying this but it is a small bag select start from expensive items.

110

00:09:37.950  -->  00:09:43.610
Give you those items that are above $100 as we would expect.

111

00:09:43.700  -->  00:09:49.310
And now what we can do is insert into expensive items

112

00:09:52.620  -->  00:09:58.850
and we are going to put in a name an ID and a price so we can do it in any order we want.

113

00:09:58.850  -->  00:10:08.910
ID name price and the value that we're going to put in our pan the name can be for example.

114

00:10:08.950  -->  00:10:11.700
I actually think it's 9:00 the next day the that's available.

115

00:10:11.950  -->  00:10:15.450
Remember you can not worry about the idea if you use a sequence.

116

00:10:15.490  -->  00:10:18.400
But we are not using a sequence in the items table.

117

00:10:18.520  -->  00:10:27.730
In this case the name can be for example a DSL or camera camera and the price can be $400.

118

00:10:28.090  -->  00:10:31.300
We can run this and

119

00:10:34.930  -->  00:10:44.860
it has to be my bad single quotation marks and the quotation marks is used only for table and column

120

00:10:44.860  -->  00:10:45.700
names.

121

00:10:46.240  -->  00:10:46.900
So there you go.

122

00:10:46.930  -->  00:10:49.420
That works and we've put in our items.

123

00:10:49.420  -->  00:10:53.560
Once again we can select staff from expensive items.

124

00:10:53.560  -->  00:11:00.310
And and that that appears there something we can do is insert into expensive items.

125

00:11:00.400  -->  00:11:10.600
I'm just going to go back into here and we can insert into a pencil where the price is ten dollars.

126

00:11:10.720  -->  00:11:15.210
And as if it expands $5 that also returns to those.

127

00:11:15.610  -->  00:11:23.430
Do you think this is going to work even though we're inserting into expensive items which only catch

128

00:11:23.440  -->  00:11:25.690
those items that are above $100.

129

00:11:25.690  -->  00:11:28.180
What do you think is going to happen when we press play

130

00:11:32.290  -->  00:11:34.410
in this case.

131

00:11:35.920  -->  00:11:39.090
Well the truth is it just works.

132

00:11:39.130  -->  00:11:46.180
And then if we go and select staff from items we get the pencil down there and that may not be what

133

00:11:46.180  -->  00:11:54.010
you want maybe you want to limit what you can insert by making sure that you can only insert into expensive

134

00:11:54.010  -->  00:11:59.290
items when an item is over the $100.

135

00:11:59.300  -->  00:12:00.850
Well there is a way that we can do that.

136

00:12:00.850  -->  00:12:03.390
So let's drop the view drop for you.

137

00:12:03.520  -->  00:12:07.490
Expensive items and let's recreate.

138

00:12:07.660  -->  00:12:19.000
Creative you expensive items as select start from items where price is greater than 100.

139

00:12:19.060  -->  00:12:25.490
This is our view before and as we know this let us insert the pencil which was under $100.

140

00:12:25.930  -->  00:12:34.390
What we can do instead is at the end add another bit of Pasqua sequel only code which is with local

141

00:12:34.390  -->  00:12:36.370
check option.

142

00:12:37.120  -->  00:12:43.690
And what this does is it makes sure that each of the parts of the WHERE clause each of the filters is

143

00:12:43.690  -->  00:12:48.600
being checked for when we insert or update data using this view.

144

00:12:48.940  -->  00:12:56.200
So if we create this and then we go back to insert the pencil remember to change the ID so we don't

145

00:12:56.200  -->  00:13:04.030
get an error then we say we get here that the new row violates check option for you expensive items

146

00:13:04.570  -->  00:13:08.000
filling row contains this $2.

147

00:13:08.050  -->  00:13:15.620
It doesn't give you much information about the error itself but nevertheless it does not let you into

148

00:13:15.810  -->  00:13:22.510
the the pencil in there which you would if it was a hundred and $1.

149

00:13:22.570  -->  00:13:25.720
What happens if it is $100 does it.

150

00:13:25.730  -->  00:13:28.820
Letters insert the data or not.

151

00:13:29.560  -->  00:13:38.500
Well unfortunately no because the view says that we're getting the items greater than $100 and that's

152

00:13:38.500  -->  00:13:41.280
you know hundred dollars is not greater than $100.

153

00:13:41.480  -->  00:13:42.810
It is equal to $100.

154

00:13:42.850  -->  00:13:44.550
So this doesn't work either.

155

00:13:45.040  -->  00:13:48.250
So once again drop view expensive item

156

00:13:51.940  -->  00:13:54.280
and then we can go back to create view.

157

00:13:54.490  -->  00:13:57.520
And here we can put an equal sign there.

158

00:13:57.730  -->  00:14:02.740
And this is just like Python code and most other programming languages we can select where price is

159

00:14:02.740  -->  00:14:06.490
greater than or equal to 100 dollars there.

160

00:14:06.670  -->  00:14:14.960
And then we can press play and then we can go back and insert our pencil with $100.

161

00:14:16.510  -->  00:14:19.500
And that works now.

162

00:14:20.100  -->  00:14:25.920
OK this is getting a bit long video but there is also another option that is important.

163

00:14:26.260  -->  00:14:31.630
And the other option comes into play when you create a view of another view.

164

00:14:31.630  -->  00:14:41.820
So as you know we've got our app our view here that doesn't let us enter data that is $2 under $100

165

00:14:42.040  -->  00:14:45.600
because of that local check option that we've put in.

166

00:14:46.480  -->  00:14:51.310
OK so now let's see I want to create a view for non luxury items.

167

00:14:52.090  -->  00:14:58.360
Well I want to show you something specific which is why I'm going to first drop this expensive items

168

00:14:58.360  -->  00:15:05.600
view and I'm going to recreate it without the local check option and create You expensive items.

169

00:15:06.100  -->  00:15:08.960
And I think I've got it here.

170

00:15:09.250  -->  00:15:14.450
So this is the same view as before but without the with local check option.

171

00:15:14.470  -->  00:15:18.190
So now I could insert the pencil with $2 if I wanted.

172

00:15:18.190  -->  00:15:25.870
So let's let's create that view and then going to create another view based on this one for non luxury

173

00:15:25.870  -->  00:15:26.320
items.

174

00:15:26.320  -->  00:15:34.000
I'm going to create value non luxury items which selects start from expensive items where the price

175

00:15:34.000  -->  00:15:37.140
is less than 10000.

176

00:15:37.670  -->  00:15:38.880
So they are.

177

00:15:39.310  -->  00:15:43.450
So this is going to select items that are between 100 and 10000 items.

178

00:15:43.450  -->  00:15:49.730
And in this view I'm going to put in with local check option.

179

00:15:49.740  -->  00:15:52.890
So I'm going to create this view and then that's fine.

180

00:15:53.400  -->  00:16:05.200
And now I am going to once again insert into non luxury items this pencil that we know failed to before

181

00:16:05.230  -->  00:16:06.800
with that check option.

182

00:16:07.370  -->  00:16:08.880
So what do you think is going to happen.

183

00:16:09.070  -->  00:16:11.360
I'm inserting into non luxury items.

184

00:16:11.410  -->  00:16:13.360
They spend a lot as two dollars.

185

00:16:13.720  -->  00:16:18.260
The non luxury items view is checking whether the item is less than 10000.

186

00:16:18.670  -->  00:16:25.870
And the expensive items view from which we get data is checking where the items are over 100.

187

00:16:25.870  -->  00:16:30.930
Do you think this is going to be an arrow or do you think it is going to work.

188

00:16:32.650  -->  00:16:38.510
Well the truth is it bugs out right now.

189

00:16:39.100  -->  00:16:48.790
The truth is it works and it works because local check option is somewhat special local check option

190

00:16:48.880  -->  00:16:55.750
as the name says Czech's only for local checks local to the view that we are using.

191

00:16:56.410  -->  00:17:03.250
So this does not let us put in a pencil that is ten thousand dollars because it 10000 is not less than

192

00:17:03.250  -->  00:17:04.270
10000.

193

00:17:04.300  -->  00:17:13.790
So this fails but we can put in under $100 because we are not checking for that in the view.

194

00:17:14.000  -->  00:17:20.490
So you can see this local check is only price less than 10000.

195

00:17:21.120  -->  00:17:28.570
Okay so what I'm going to do is I'm going to drop this view dropped you know on luxury items and then

196

00:17:28.570  -->  00:17:37.540
I'm going to recreate but instead of local check option I'm going to use cascaded check option and what

197

00:17:37.540  -->  00:17:46.180
that does is it checks for the local checks and then it also checks cascading scathingly for any checks

198

00:17:46.180  -->  00:17:46.240
.

199

00:17:46.240  -->  00:17:51.600
I don't even know if that's a word for any checks that are in other views that we use in this view.

200

00:17:52.060  -->  00:17:52.730
OK.

201

00:17:52.930  -->  00:18:01.380
So let's create that and then go back and try to insert our pencil here at 8:30.

202

00:18:02.150  -->  00:18:11.350
And now you can see that and this violates the check option for expensive items a view quite a lot to

203

00:18:11.530  -->  00:18:11.960
take in.

204

00:18:11.960  -->  00:18:19.360
In this video remember that views are just looking at the results of a query but we can also interact

205

00:18:19.360  -->  00:18:26.840
with it if it matches some of the restrictions such as not having a good by not having a limit essentially

206

00:18:26.890  -->  00:18:30.370
not having anything that decreases the granularity of the data.

207

00:18:30.580  -->  00:18:34.840
And we've looked at how we can call views from other views and that works fine.

208

00:18:34.840  -->  00:18:43.580
And we've also looked at making sure that inserting or updating data of the view can be validated.

209

00:18:43.720  -->  00:18:50.850
Really that the word didn't come out can be validated by using local or Cascada check option.

210

00:18:50.980  -->  00:18:53.550
So that's quite a long video apologies for that.

211

00:18:53.680  -->  00:18:54.970
But I'll see you in the next one.

212

00:18:54.970  -->  00:18:58.010
Well we're going to be looking at some functions that we can use.

213

00:18:58.460  -->  00:18:59.010
And so you there
