1

00:00:00,300  -->  00:00:06,630
Hi welcome back in this video we're going to be creating our new project and create our first class

2

00:00:06,630  -->  00:00:07,560
.

3

00:00:07,680  -->  00:00:12,720
The first thing to do is open up charm and create your new project and you'll be greeted with a screen

4

00:00:12,740  -->  00:00:13,140
.

5

00:00:13,620  -->  00:00:18,660
Remember if you are using the community edition instead of the professional edition you won't have all

6

00:00:18,660  -->  00:00:20,620
these options on the left but that's fine.

7

00:00:20,670  -->  00:00:27,960
The option we want is pure Python and then select where you want to save your project which is going

8

00:00:27,960  -->  00:00:35,170
to select my options here and my thing moved to my other screen for some reason.

9

00:00:35,640  -->  00:00:45,870
It is here and then a new phone number which you use when the system.

10

00:00:45,870  -->  00:00:54,500
And then I don't know why this keeps moving that will be that and then selects the interpreter that

11

00:00:54,530  -->  00:00:55,350
you want to use.

12

00:00:55,350  -->  00:01:03,330
And in this instance it is just the ADD installed version of Python that you should have in your system

13

00:01:03,380  -->  00:01:04,510
.

14

00:01:04,560  -->  00:01:07,790
I am going to go with this one.

15

00:01:07,830  -->  00:01:12,600
It doesn't really matter and it'll be version 3.5 or version three point four

16

00:01:18,000  -->  00:01:25,680
and then you get this screen which we know already you'll have your empty project folder on the left

17

00:01:25,770  -->  00:01:30,250
and then your external libraries which won't have much except the Python version you're using.

18

00:01:30,540  -->  00:01:32,190
And for now it doesn't really matter.

19

00:01:32,190  -->  00:01:38,760
And if you're using Python 2.7 than 3.4 3.5 they're all fine.

20

00:01:38,760  -->  00:01:42,670
So the first thing to do is create our first class.

21

00:01:42,930  -->  00:01:44,870
Let's go into new python file.

22

00:01:44,970  -->  00:01:53,630
And because we're creating a movie rental system I'm going to call this movie and this movie dot P Why

23

00:01:53,650  -->  00:01:57,890
file is going to hold my movie class.

24

00:01:57,930  -->  00:02:00,070
Notice that they don't have to be called the same.

25

00:02:00,090  -->  00:02:05,120
The file can be called whatever you want.

26

00:02:05,130  -->  00:02:14,790
Class as we've seen in the last video is just a structure that lets us store properties stored data

27

00:02:15,540  -->  00:02:19,990
but also has the ability to contain some actions that it can do.

28

00:02:20,310  -->  00:02:23,680
And it can do those actions on itself.

29

00:02:25,020  -->  00:02:32,340
So our class movie is going to contain data related to the movie and also is going to contain a few

30

00:02:32,340  -->  00:02:37,430
actions that a movie might take on itself.

31

00:02:38,490  -->  00:02:46,530
As you know the properties of a class of an object are defined in the signed underscore underscore unit

32

00:02:46,860  -->  00:02:47,950
underscore underscore.

33

00:02:47,950  -->  00:02:55,410
And remember these are two separate on the scores there and inside the init method we define the properties

34

00:02:55,470  -->  00:02:59,910
that each object will have in the case of movies.

35

00:02:59,910  -->  00:03:04,320
These are going to be a name and a genre for now.

36

00:03:04,950  -->  00:03:11,100
And these are these properties are going to get passed in when we create a new movie object and therefore

37

00:03:11,400  -->  00:03:16,380
self-taught name should be equal to name and self-taught genre should be equal to John.

38

00:03:16,920  -->  00:03:26,340
And what it does is it sets the object's name to be the name that we passed in and the objects John-Roger

39

00:03:26,670  -->  00:03:30,080
to be the genre that we passed in.

40

00:03:32,120  -->  00:03:40,170
OK let's now go into our folder and create a new Python file which is going to be app Doppie y and in

41

00:03:40,170  -->  00:03:41,470
here we're going to use very fine.

42

00:03:41,470  -->  00:03:43,340
The movie is working well.

43

00:03:43,530  -->  00:03:54,390
So let's first of all import the movie file which can be done by from movie import movie.

44

00:03:54,390  -->  00:04:01,440
Remember the capital M because what we're importing here is the class and we are importing it from the

45

00:04:01,440  -->  00:04:11,960
movie Doppie why file and then what we can do is say my underskirt movie is a movie with a capital M

46

00:04:11,980  -->  00:04:12,120
.

47

00:04:12,300  -->  00:04:19,320
And here we can put the name and the genre of the movie because that's the parameters that's the init

48

00:04:19,410  -->  00:04:19,820
method.

49

00:04:19,860  -->  00:04:20,610
Except

50

00:04:23,410  -->  00:04:29,160
I'm going to put the Matrix and I'm not really sure what genre it is scifi I guess action sort of thing

51

00:04:29,170  -->  00:04:29,990
.

52

00:04:30,730  -->  00:04:39,090
And now we've created the movie and what this does is it says OK I'm going to see what a movie is and

53

00:04:39,090  -->  00:04:40,680
then he goes here and he sees the closet.

54

00:04:40,710  -->  00:04:43,030
OK this is this is a movie.

55

00:04:43,270  -->  00:04:45,400
It has this init method.

56

00:04:46,050  -->  00:04:52,020
And then he says OK because you're asking me to create a new movie which you know it is because it's

57

00:04:52,020  -->  00:04:53,700
using the class name.

58

00:04:53,880  -->  00:04:56,550
And then the opening and closing bracket it goes OK.

59

00:04:56,550  -->  00:05:00,770
So the method I want to run is the in its method and Python just knows that.

60

00:05:01,080  -->  00:05:04,640
And then it says OK let's run the method you're giving me two parameters.

61

00:05:04,740  -->  00:05:06,130
The Matrix and cipher.

62

00:05:06,270  -->  00:05:11,460
So I'm just going to put those in name and genre respectively and then it runs through this method and

63

00:05:11,460  -->  00:05:17,730
it says OK now this movie has is going to have a name and a genre and the name is going to be the name

64

00:05:17,730  -->  00:05:20,130
passed in the genre are going to be the genre passed in.

65

00:05:20,670  -->  00:05:25,600
And then what we can do is say print my underscore movie Daut name.

66

00:05:26,130  -->  00:05:32,550
So let's run this Right-Click the app Y and select Run and we get back the Matrix which is what we'd

67

00:05:32,550  -->  00:05:35,800
expect.

68

00:05:35,880  -->  00:05:37,050
So here's a question for you.

69

00:05:37,160  -->  00:05:42,240
What happens if we print my movie don't direct

70

00:05:47,780  -->  00:05:49,270
what we think about it.

71

00:05:50,100  -->  00:05:52,260
Let's press play and see what happens.

72

00:05:52,260  -->  00:05:57,670
But I would expect a bunch of red text to appear.

73

00:05:57,810  -->  00:06:05,040
I am right and it's important in Python especially that you read the errors and you try to understand

74

00:06:05,040  -->  00:06:15,210
them the property of an object is also known as an attribute and the arrow down here is saying on the

75

00:06:15,210  -->  00:06:15,980
line.

76

00:06:16,080  -->  00:06:18,390
Print my movie dot director.

77

00:06:18,690  -->  00:06:27,690
There was an attribute error movie object a key my movie has no attribute director.

78

00:06:27,960  -->  00:06:29,520
It doesn't have that property.

79

00:06:29,550  -->  00:06:37,170
We haven't defined self don't direct or any way anywhere but if we do self-doubting director equals

80

00:06:40,820  -->  00:06:42,830
I'm going to embarrass myself spelling that

81

00:06:47,100  -->  00:06:55,470
if you do define that inside the init method then you can run this again and see the name coming out

82

00:06:55,470  -->  00:06:56,930
.

83

00:06:57,000  -->  00:07:03,180
So it's especially important to remember to define the properties that you want inside the in its method

84

00:07:03,180  -->  00:07:04,710
.

85

00:07:04,710  -->  00:07:08,240
Try to avoid defining properties inside a different method.

86

00:07:08,310  -->  00:07:11,240
But we'll get to that later.

87

00:07:11,250  -->  00:07:12,700
So that's everything for this video.

88

00:07:12,870  -->  00:07:19,410
Just to get you once you get acquainted with creating a class which is done with a class keyword and

89

00:07:19,410  -->  00:07:27,090
then the class name and the init method which is underscore underscore in it underscore underscore has

90

00:07:27,180  -->  00:07:32,620
self as the first parameter and then other parameters that you want to pass it.

91

00:07:33,120  -->  00:07:41,930
You define the classes properties in the in its method and you can pass values to populate them in here

92

00:07:41,940  -->  00:07:49,800
when you create the object itself and also to realize that you can access properties using the dot operator

93

00:07:50,160  -->  00:07:55,710
and if x is a property that doesn't exist you get an attribute error but that's everything for this

94

00:07:55,710  -->  00:07:56,660
video.

95

00:07:56,670  -->  00:07:58,300
Just a quick look at that.

96

00:07:58,350  -->  00:08:00,320
And now let's move on into the next one.

97

00:08:00,640  -->  00:08:01,140
That's you there
