1

00:00:00,210  -->  00:00:06,510
Hi will come back in this video we're talking about adding files and committing them before we can add

2

00:00:06,510  -->  00:00:07,650
files and commit them.

3

00:00:07,650  -->  00:00:09,450
We need to create a file.

4

00:00:09,630  -->  00:00:15,810
We do have the dot D.S. store file but this is a file that is created by the finder in Apple and is

5

00:00:15,810  -->  00:00:17,550
not really useful for anything.

6

00:00:17,760  -->  00:00:21,650
So let's not add that to our Snapshot.

7

00:00:21,660  -->  00:00:24,180
In fact I would recommend that you never add that to your snapshot.

8

00:00:24,180  -->  00:00:26,050
It's not a very useful thing to add.

9

00:00:26,700  -->  00:00:29,260
Let's create a file called app Doppie Y.

10

00:00:29,520  -->  00:00:33,000
And as you remember we can do that using vim.

11

00:00:33,270  -->  00:00:39,680
Do you remember the command that we have to use to create a new file with vim.

12

00:00:39,690  -->  00:00:46,260
The answer is vim and then the name of the file that we want to create at IPY And this as you can see

13

00:00:46,260  -->  00:00:48,070
creates a new file.

14

00:00:48,240  -->  00:00:55,230
Something interesting to notice is that we also create a file even before saving the file that we created

15

00:00:55,230  -->  00:00:55,720
.

16

00:00:56,160  -->  00:01:06,720
And this file is called dot dot dot as W.P. and you won't see this normally unless you've got this show

17

00:01:06,720  -->  00:01:10,150
hidden files and folders option activated in your computer.

18

00:01:10,380  -->  00:01:16,770
But nevertheless what this file does is as I've mentioned before and of course prevents other people

19

00:01:16,770  -->  00:01:24,780
from accessing the apt IPY file while you're modifying it the swap file and essentially tells the system

20

00:01:24,780  -->  00:01:28,900
that the file is being currently modified by someone.

21

00:01:28,920  -->  00:01:30,760
So that's what that file is.

22

00:01:30,760  -->  00:01:32,590
Anyway that was just an aside.

23

00:01:32,610  -->  00:01:40,140
Let's press I to go into insert mode and then enter some Python code like print hello world then press

24

00:01:40,170  -->  00:01:46,830
escape to leave insert mode colon WQ to right and quit.

25

00:01:47,550  -->  00:01:53,330
And that now deletes the swap file and creates apt y in there.

26

00:01:53,490  -->  00:01:59,010
Now let's press get staffer's again and see what the difference is.

27

00:02:00,030  -->  00:02:06,690
As you can see the only difference now is that it adds app Doppie y to the untracked files.

28

00:02:06,720  -->  00:02:14,250
Let's follow the recommendation and use get add to include it in what will be committed so get ADD and

29

00:02:14,250  -->  00:02:15,030
then apt.

30

00:02:15,150  -->  00:02:18,690
Why that doesn't seem to do anything.

31

00:02:18,900  -->  00:02:27,000
And now get status will show us a bit of a difference now as well as the untracked file in datt the

32

00:02:27,150  -->  00:02:27,990
store.

33

00:02:27,990  -->  00:02:34,620
We also have changes to be committed and in them there's this new file that we've just created called

34

00:02:34,650  -->  00:02:41,760
app Doppie Why get says this is a new file because we've never included it in a previous snapshot before

35

00:02:41,760  -->  00:02:42,820
.

36

00:02:42,820  -->  00:02:46,890
And so this is why it says this new file at IPY there.

37

00:02:47,340  -->  00:02:54,390
And we also can unstaged files and remove them from the staging area which is what we've done so that

38

00:02:54,390  -->  00:02:57,550
they will not be committed when we do we commit.

39

00:02:57,780  -->  00:03:01,470
Remember we can only have one staging area at a time.

40

00:03:01,470  -->  00:03:05,640
So when you're doing a commit you may want to include some files but not others.

41

00:03:05,700  -->  00:03:10,570
And if you add a file by accident to the staging area you can unstaged it.

42

00:03:10,620  -->  00:03:13,370
This will not change the contents of the file.

43

00:03:13,400  -->  00:03:20,880
You can do that with get r.m dash dash cached and then up top you might notice how Abdul was still in

44

00:03:20,880  -->  00:03:21,670
my folder.

45

00:03:21,990  -->  00:03:29,520
But if we do get status nowadays untracked again let's add it uncommitted.

46

00:03:29,580  -->  00:03:31,640
So I'm going to get ADD at Doppie why.

47

00:03:31,950  -->  00:03:35,520
And now once again get stato shows that this is going to be committed.

48

00:03:35,730  -->  00:03:40,680
And I would recommend that you get into the habit of running get status after every command just to

49

00:03:40,680  -->  00:03:43,530
make sure you're not doing anything incorrectly.

50

00:03:43,530  -->  00:03:48,240
It's a bit of a hassle if you commit something that you didn't want to commit although you can go back

51

00:03:48,240  -->  00:03:49,700
and change history.

52

00:03:49,740  -->  00:03:52,240
It does take a bit of effort actually.

53

00:03:52,410  -->  00:03:59,250
So it's better to run get starters and make sure you're doing the right thing to run a commit that will

54

00:03:59,340  -->  00:04:06,690
save a snapshot of the file and it will essentially just get that file get the contents of the file

55

00:04:06,690  -->  00:04:09,020
and saved them in saying that don't get folder.

56

00:04:09,210  -->  00:04:16,660
And then it will and remove it from the staging area because you've already committed the exchange.

57

00:04:17,280  -->  00:04:26,130
Let's do get commit and now an important part of the commit is a description of what the commit is for

58

00:04:26,130  -->  00:04:32,610
what it does what it contains essentially good is very useful because in the future you can go back

59

00:04:32,700  -->  00:04:38,820
and look at a list of commits and it's useful if each commit has a message that tells you kind of what

60

00:04:38,820  -->  00:04:40,630
happened in that commit.

61

00:04:40,650  -->  00:04:46,230
It's good to be able to quickly glance at a history so you can locate the correct commit more easily

62

00:04:46,250  -->  00:04:47,130
.

63

00:04:47,140  -->  00:04:54,390
The way we add a message to commit is by doing dash em and then here at the end we can in safe quotes

64

00:04:54,540  -->  00:05:05,070
put in a short message for example added printing of Hello World to the app and then we press enter

65

00:05:06,120  -->  00:05:09,390
and then we get a few things we get.

66

00:05:09,480  -->  00:05:14,920
This first line tells the committee that was created in M..

67

00:05:15,000  -->  00:05:19,440
It is the route Committee which just means that is the first commit that we've ever done.

68

00:05:19,440  -->  00:05:24,810
And then it gives you a short code which is the commit ID identifier and then it gives you the commit

69

00:05:24,810  -->  00:05:29,000
message that you've added just so you can verify that this is correct.

70

00:05:29,010  -->  00:05:30,840
Then it tells you who made the commit.

71

00:05:30,900  -->  00:05:36,570
In this case it's me and also it gives you my email although this is not my e-mail address.

72

00:05:36,840  -->  00:05:43,230
And after it tells you a bit of an error or a bit of a warning rather it says your name and e-mail address

73

00:05:43,290  -->  00:05:46,900
were configured automatically based on your username and hostname.

74

00:05:47,580  -->  00:05:51,220
My laptop is called Joses dasht MBP.

75

00:05:51,900  -->  00:05:54,270
Please check that they are accurate which they are not.

76

00:05:54,600  -->  00:05:57,300
You can suppress this message by setting them explicitly.

77

00:05:57,480  -->  00:06:01,560
Run the following command and follow the instructions in your editor to edit your configuration file

78

00:06:01,580  -->  00:06:01,890
.

79

00:06:02,160  -->  00:06:08,250
So basically get has smartly tried to figure out my name and my e-mail address to save those along the

80

00:06:08,250  -->  00:06:12,250
commit so people can then see who made the commit.

81

00:06:12,270  -->  00:06:16,390
However it wasn't smart enough to figure out my real email address naturally.

82

00:06:16,580  -->  00:06:18,960
So we have to go and change that.

83

00:06:18,990  -->  00:06:21,870
Never the less the commit has happened.

84

00:06:22,290  -->  00:06:28,550
So if we do get status we will see that the file has now disappeared from the staging area.

85

00:06:28,770  -->  00:06:32,740
And now the only thing that remains is the untracked files.

86

00:06:32,940  -->  00:06:33,870
So the commit has happened.

87

00:06:33,870  -->  00:06:37,620
We're going to look in the next video at how we can tell that it has happened.

88

00:06:37,830  -->  00:06:43,680
But in this video let's also access that config by just running this command here so we can copy that

89

00:06:43,890  -->  00:06:53,130
and paste it in and then it damn it has the config file here and we can just remove the hash symbols

90

00:06:53,160  -->  00:06:58,740
by going into insert mode and deleting each other has symbols and then going and changing the email

91

00:06:58,740  -->  00:07:05,920
address to whatever you think is reasonable which should be your email address.

92

00:07:06,270  -->  00:07:11,160
However you can set that to whatever you want if you don't want people looking at your e-mail address

93

00:07:11,160  -->  00:07:11,420
.

94

00:07:11,490  -->  00:07:18,620
You can just leave that as null or a fake e-mail address your name should probably be correct.

95

00:07:18,660  -->  00:07:19,140
OK.

96

00:07:19,230  -->  00:07:24,760
Once that's done you can escape and press call on WQ for right and quit.

97

00:07:25,020  -->  00:07:25,800
And that's that.

98

00:07:26,040  -->  00:07:31,080
You now have saved your e-mail address in there.

99

00:07:31,080  -->  00:07:38,700
And finally if you want to change the commit so it doesn't show as an incorrect e-mail address you can

100

00:07:38,700  -->  00:07:39,850
run this Kamandi.

101

00:07:40,150  -->  00:07:43,750
And I'm going to run it just to make sure that it is correct.

102

00:07:43,900  -->  00:07:49,380
And here this is the commit message that we can also change but we don't want to change that so just

103

00:07:49,380  -->  00:07:55,230
press call on WQ and that's that changed.

104

00:07:55,230  -->  00:07:55,620
OK.

105

00:07:55,680  -->  00:08:02,820
So for a lot we've covered in this video like how to add to files how to stage them how to commit them

106

00:08:02,970  -->  00:08:09,780
at the commit message sent to your get config and change the author of a previous commit.

107

00:08:10,350  -->  00:08:14,940
And also as part of that we've also looked at how to change the commit message of a previous comment

108

00:08:15,210  -->  00:08:18,340
although we haven't changed the commit message.

109

00:08:18,810  -->  00:08:19,840
That's it for this video.

110

00:08:19,920  -->  00:08:22,500
Then the next one we're going to be looking at some more.

111

00:08:22,600  -->  00:08:25,390
Get goodness See you there.
