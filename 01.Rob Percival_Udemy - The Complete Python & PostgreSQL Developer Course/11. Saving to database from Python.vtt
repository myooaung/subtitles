WEBVTT
1

00:00:00.150  -->  00:00:07.140
And will come back in this video we're going to be looking at saving to Pasic race using Python.

2

00:00:07.200  -->  00:00:10.050
We're going to be storing data related to our users.

3

00:00:10.200  -->  00:00:13.740
So the first thing to do is to create a table for them.

4

00:00:13.800  -->  00:00:20.490
Now our application should be able to create the table before it runs because that's something that

5

00:00:20.490  -->  00:00:21.420
it needs.

6

00:00:21.540  -->  00:00:23.590
What we're going to be looking at that later on.

7

00:00:23.640  -->  00:00:26.720
For now let's create the table manually first.

8

00:00:27.060  -->  00:00:34.220
As you know just launch your learning database and then just press the sequel editor.

9

00:00:34.470  -->  00:00:43.580
And here we can create table users and then we can put in the columns that make that table up.

10

00:00:43.710  -->  00:00:48.000
And I'm not going to slowly with this because we've already been looking at a sequel over the last few

11

00:00:48.000  -->  00:00:51.950
sections so we know how this works.

12

00:00:52.050  -->  00:00:56.730
I wonder if you columns here which should match the properties of the news.

13

00:00:57.450  -->  00:01:08.190
So the first property is ID and the ID is auto incremental and towards the end of our advanced passphrase

14

00:01:08.310  -->  00:01:12.460
section we saw how to make an auto incremental field.

15

00:01:12.480  -->  00:01:18.900
There's two ways to do this either with a sequence or with the serial data type and the serial data

16

00:01:18.900  -->  00:01:21.070
type is just a shortcut for a sequence.

17

00:01:21.170  -->  00:01:22.770
So it makes sense to use that.

18

00:01:22.980  -->  00:01:25.540
And we also want this to be the primary key.

19

00:01:25.980  -->  00:01:31.850
We want an email which is going to be candidates of varying up to 255 characters.

20

00:01:31.980  -->  00:01:38.010
We have first name which is character varying up to 255 characters and we have a last name which is

21

00:01:38.010  -->  00:01:40.650
carked varying up to 250 of our characters.

22

00:01:40.800  -->  00:01:42.190
So that's it.

23

00:01:42.600  -->  00:01:48.400
And remember that instead of these you can use text instead the text type if you prefer.

24

00:01:48.840  -->  00:01:50.310
But I'm going to stick with this.

25

00:01:50.340  -->  00:01:56.580
It's more sort of sequel rather than text it's more Pasko sequel stuff but it doesn't matter.

26

00:01:56.580  -->  00:01:57.750
Either one is fine.

27

00:01:58.050  -->  00:02:03.430
Once we've got this just press play Appia or press the function five key to run it.

28

00:02:03.630  -->  00:02:05.230
And that's the table created.

29

00:02:05.400  -->  00:02:12.980
So if we select start from users we should see the columns then but with no content in them unnaturally

30

00:02:13.050  -->  00:02:14.540
.

31

00:02:15.290  -->  00:02:15.790
OK.

32

00:02:15.840  -->  00:02:22.600
Now we can close Jetman three and go back to PI John.

33

00:02:23.040  -->  00:02:27.550
So in this video we're going to be looking at saving the user into the database.

34

00:02:27.870  -->  00:02:31.280
The objective of the video is to be able to do this.

35

00:02:31.350  -->  00:02:37.440
My underscore user don't save too D-B.

36

00:02:38.040  -->  00:02:45.830
And when we run this the user should appear in AM Potter sequel with this data up here.

37

00:02:46.020  -->  00:02:52.140
But naturally the IED is going to be not one but an auto incrementing number.

38

00:02:53.460  -->  00:02:57.240
Because the idea is going to be auto incrementing in Pasqua sequel.

39

00:02:57.360  -->  00:03:04.020
That means we don't have to worry about it in Python at all and therefore instead of giving it a number

40

00:03:04.290  -->  00:03:07.180
which would be the ID I'm just going to give it none.

41

00:03:07.500  -->  00:03:11.140
Which in Python that stands for just not a value.

42

00:03:11.790  -->  00:03:13.540
We're not going to give it a value.

43

00:03:13.860  -->  00:03:18.900
And then we're just going to let Pasqua sequels deal with it.

44

00:03:18.900  -->  00:03:24.660
Let's go back into our user file and implement the method saved to TB because that's the one we want

45

00:03:24.660  -->  00:03:25.400
to be running.

46

00:03:25.410  -->  00:03:37.060
So Steve to D.B and this method should be able to just save the user to the database.

47

00:03:37.160  -->  00:03:37.890
OK.

48

00:03:38.350  -->  00:03:41.790
Here is where we are going to start using psycho Peasey too.

49

00:03:41.820  -->  00:03:44.170
So the first thing to do is to import it.

50

00:03:44.730  -->  00:03:50.450
So at the top of the file will say import psyco P.G. 2 and you won't see that.

51

00:03:50.460  -->  00:03:55.440
If you have not installed it so please refer to the first few videos in the section for instructions

52

00:03:55.440  -->  00:03:58.430
on how to do that.

53

00:03:58.830  -->  00:04:06.540
And then we are going to be having to do the first step which is connect to the database and I think

54

00:04:06.540  -->  00:04:11.220
this is kind of expected by now because we know that when we launched Patras sequel we also have to

55

00:04:11.220  -->  00:04:15.210
connect to it and we have to put in our password you know all that stuff.

56

00:04:15.570  -->  00:04:20.570
So the first step in saving to the database is to connect to it.

57

00:04:20.640  -->  00:04:27.870
So let's create a variable called connection that is going to store an active connection to Pasko sequel

58

00:04:28.740  -->  00:04:35.480
the way we're going to do that is by running psycho-BS G-2 don't connect.

59

00:04:36.180  -->  00:04:41.730
And this method here allows us to open up a connection to postru sequel.

60

00:04:41.730  -->  00:04:49.410
However it takes a few parameters the parameters it takes the user that you want to log in as this can

61

00:04:49.410  -->  00:04:56.680
be your user or it can just be the postscripts user there I'm using the Parker as a user because that

62

00:04:56.690  -->  00:05:00.550
is a super user which means we know it's going to have access to everything.

63

00:05:00.560  -->  00:05:06.260
We don't have to concern ourselves potentially with other things the sake of this video is to teach

64

00:05:06.310  -->  00:05:12.220
how to use psycho to and not to concern ourselves with you logging in with different users and things

65

00:05:12.220  -->  00:05:18.860
like that in order to be able to log in with this the user that you were using.

66

00:05:18.880  -->  00:05:22.410
If it's not the post-crash user needs to have a password.

67

00:05:22.540  -->  00:05:26.290
So if you're a user it doesn't have a password and you don't want to use the as user.

68

00:05:26.290  -->  00:05:28.660
You're going to have to create another user with a password.

69

00:05:28.880  -->  00:05:35.620
So that's why I'm using the potty refugia because mine doesn't have a password and then password.

70

00:05:35.620  -->  00:05:37.690
In my case it's one two three four.

71

00:05:37.740  -->  00:05:40.260
It's not a very secure password.

72

00:05:40.420  -->  00:05:44.110
And then the database which in my case is called learning.

73

00:05:44.200  -->  00:05:50.200
And if you've imported the database from the files provided in an earlier section your database will

74

00:05:50.200  -->  00:05:54.450
also be called learning but you can create another one and call it differently if you wish.

75

00:05:54.550  -->  00:05:56.730
And we've looked at how to do that as well before.

76

00:05:57.070  -->  00:06:05.800
And finally the most important parameter is where is a database running in which server it is running

77

00:06:06.280  -->  00:06:13.990
and the server in which it is running is the local server your computer and therefore the host is going

78

00:06:14.000  -->  00:06:19.180
to be equal to the local your current computer the local host.

79

00:06:19.630  -->  00:06:28.540
And that's just your current computer and the host is just what is hosting containing the sequel server

80

00:06:28.560  -->  00:06:29.130
.

81

00:06:29.650  -->  00:06:30.100
OK.

82

00:06:30.310  -->  00:06:31.320
So that's the connection.

83

00:06:31.340  -->  00:06:32.970
Now Open.

84

00:06:33.380  -->  00:06:38.850
Now we have to be able to execute things in the server.

85

00:06:39.940  -->  00:06:47.630
Nearly all of these add library to connect to relational databases be it Potter sequel using psycho-BS

86

00:06:47.630  -->  00:06:51.390
G-2 or something like My sequel using a bunch of other libraries.

87

00:06:51.620  -->  00:06:59.890
They all work with a thing called cursors and the cursor is just a thing that lets you retrieve data

88

00:07:00.310  -->  00:07:07.570
and read it row by row or it lets you execute arbitrary sequence statements in the form of inserting

89

00:07:07.570  -->  00:07:09.680
data for example.

90

00:07:09.860  -->  00:07:16.600
So we have to open up a cursor to this connection so let's do that.

91

00:07:16.650  -->  00:07:26.650
I'm going to do with connection dot cursor as cursor and what this is doing is he's creating a cursor

92

00:07:26.870  -->  00:07:33.670
using this connection and it's calling the variable that is containing this value is calling that variable

93

00:07:33.670  -->  00:07:34.720
cursor.

94

00:07:35.710  -->  00:07:42.590
And with the with command is doing is it's opening the cursor up and then we are going to be running

95

00:07:42.580  -->  00:07:50.020
some code and then I'm going to put pass in just for that moment and then when it gets to the end of

96

00:07:50.020  -->  00:07:54.920
the code that it's running it's going to close the cursor and that is a good thing to do.

97

00:07:54.980  -->  00:07:57.520
Always close your cursor at the end.

98

00:07:57.820  -->  00:08:06.940
After running all this stuff we're also going to have to come it's the connection and warlords are going

99

00:08:06.940  -->  00:08:12.190
to have to close the connection and we're going to look at exactly what those things are.

100

00:08:12.190  -->  00:08:13.910
In just a moment.

101

00:08:14.950  -->  00:08:19.820
OK so the code that we want to run is cursor dot execute.

102

00:08:20.260  -->  00:08:24.180
And here we can put in the sequence statement that we want to run.

103

00:08:24.230  -->  00:08:26.970
So I'm going to remove this pass.

104

00:08:27.400  -->  00:08:36.550
So what sequence statement Do we want to run if we want to save this user data to the users table.

105

00:08:38.040  -->  00:08:42.300
And I'm sure you've got that what we want to do is to insert into users.

106

00:08:42.350  -->  00:08:45.470
So let's type that in insert into users.

107

00:08:45.670  -->  00:08:48.690
And here we put the columns that we want to put data into.

108

00:08:48.790  -->  00:08:54.650
And remember we don't want to put data into the ID column because that is all too incremental and we

109

00:08:54.640  -->  00:08:58.180
don't have to worry about that part we're going to deal with that for us.

110

00:08:58.180  -->  00:09:05.380
So the columns that we want to put data into our email first name and last name and the values that

111

00:09:05.380  -->  00:09:06.510
we want to put into it.

112

00:09:06.640  -->  00:09:08.040
Ah.

113

00:09:08.530  -->  00:09:13.860
And here is the magical moment percent s percent as percent x.

114

00:09:14.260  -->  00:09:19.710
And now you're wondering what the help and yes to I'll mean that in a moment.

115

00:09:19.720  -->  00:09:22.270
So that's the string that we want to execute.

116

00:09:22.580  -->  00:09:29.900
But naturally the percent Essie's should be replaced by the email the first name the last name etc.

117

00:09:29.910  -->  00:09:30.600
.

118

00:09:31.310  -->  00:09:40.150
So after the end of the string after the end of the string we put in a coma and then in here inside

119

00:09:40.150  -->  00:09:46.280
brackets we put in self-doubt email self the first name self the last name.

120

00:09:47.000  -->  00:09:51.610
And then what the cursor is going to do is he's going to pop in those values in there.

121

00:09:54.080  -->  00:09:58.230
It's going to do pretty much the same thing that the format a method does.

122

00:09:58.760  -->  00:10:02.350
But we don't have to do it ourselves.

123

00:10:02.600  -->  00:10:04.530
And there's a few reasons for that.

124

00:10:04.640  -->  00:10:11.720
This is secure and we're going to look at what happens if you don't do it this way and very soon and

125

00:10:11.810  -->  00:10:12.740
why it's dangerous.

126

00:10:12.740  -->  00:10:13.830
We'll look at that later on.

127

00:10:14.210  -->  00:10:15.080
This is cure.

128

00:10:15.140  -->  00:10:17.380
And this is what we want to be running.

129

00:10:18.100  -->  00:10:19.000
OK.

130

00:10:19.730  -->  00:10:23.410
So now we are ready to press play and see what happens.

131

00:10:23.450  -->  00:10:31.160
So let's press play and notice that nothing is printed out because we no longer have anything to print

132

00:10:31.190  -->  00:10:31.940
here.

133

00:10:32.300  -->  00:10:36.190
Let's go into psycho PGE sorry.

134

00:10:36.200  -->  00:10:37.280
Potter sequel.

135

00:10:37.490  -->  00:10:46.700
Reichlich your tables refresh them and access your user staple them and we can here view the data and

136

00:10:46.700  -->  00:10:48.620
view the top 100 rows.

137

00:10:48.990  -->  00:10:55.580
And as we can see we've got our data there and the idea is number one which is the first element of

138

00:10:55.580  -->  00:10:58.300
a sequence which is going to be auto incremental.

139

00:10:58.440  -->  00:11:00.700
And we've got our data there.

140

00:11:00.710  -->  00:11:03.770
So good job in getting him.

141

00:11:04.050  -->  00:11:09.920
You are now able to insert data into posho sequel from your Python apps.

142

00:11:09.920  -->  00:11:15.240
Let's close this up and I'll give you a couple more things you can do which are going to simplify this

143

00:11:15.260  -->  00:11:17.470
code a wee bit.

144

00:11:17.870  -->  00:11:23.720
The first thing that we should realize is that we've got three things related to connecting.

145

00:11:23.720  -->  00:11:28.760
We've got this thing then which opens up the connection.

146

00:11:28.760  -->  00:11:32.930
We've got this thing here which commits the connection and this thing here which closes that connection

147

00:11:32.940  -->  00:11:33.270
.

148

00:11:33.560  -->  00:11:36.330
What happens if we remove the commit.

149

00:11:37.220  -->  00:11:41.490
So we run this again and see what happens.

150

00:11:41.720  -->  00:11:44.070
Same output.

151

00:11:44.090  -->  00:11:45.630
Now let's go back in here.

152

00:11:46.130  -->  00:11:49.760
View the data and it is not there.

153

00:11:49.760  -->  00:11:54.650
We've got the same lead as before but we've inserted a new one and that one is not there.

154

00:11:55.590  -->  00:11:59.120
OK let's put it back in and press play again.

155

00:11:59.120  -->  00:12:00.630
What do you think is going to happen.

156

00:12:00.710  -->  00:12:02.980
What do you think is going to appear in our ATP's.

157

00:12:03.560  -->  00:12:07.640
Well maybe nothing is going up here in our database.

158

00:12:07.640  -->  00:12:12.910
Take a moment to think about that and let's have a look.

159

00:12:12.950  -->  00:12:15.900
I'm going to press this button here which refreshes the reader.

160

00:12:16.850  -->  00:12:20.410
And do you notice anything strange.

161

00:12:20.480  -->  00:12:23.480
I'm sure you do.

162

00:12:23.480  -->  00:12:28.590
The strange thing is that we've skipped the two we've jumped from one to three.

163

00:12:28.730  -->  00:12:33.050
And just for your convenience I want to run the app again and refresh the data again and you'll see

164

00:12:33.050  -->  00:12:33.850
for an hour.

165

00:12:34.010  -->  00:12:37.750
So it's not that it is only printing out or numbers or anything like that.

166

00:12:38.120  -->  00:12:40.750
It's skipped the two.

167

00:12:40.760  -->  00:12:51.110
And the reason why skip the two is this one and a theory behind it really but sequel letterboxes work

168

00:12:51.110  -->  00:12:52.660
with transactions.

169

00:12:52.910  -->  00:13:01.100
So what we are telling it to when we do this cursorial execute is presumed that this data two uses and

170

00:13:01.100  -->  00:13:04.820
then the database says OK I'll do that later.

171

00:13:05.480  -->  00:13:07.170
And we tell it no do it now.

172

00:13:07.330  -->  00:13:08.930
That's what we're saying.

173

00:13:09.200  -->  00:13:12.140
And then it's like OK I'll commit that to the disk.

174

00:13:12.140  -->  00:13:14.860
So then if it saves it fine.

175

00:13:15.020  -->  00:13:21.590
If we don't commit before we close like we did when we deleted that we deleted that and we closed without

176

00:13:21.590  -->  00:13:26.550
committing then the data suddenly just shuts down.

177

00:13:26.690  -->  00:13:33.710
And the fact that I said I'll save it later ends up being I will not save it because he didn't tell

178

00:13:33.710  -->  00:13:34.770
me to.

179

00:13:35.570  -->  00:13:40.640
And now you're wondering well why is that thing like why would you ever want to do that.

180

00:13:41.150  -->  00:13:43.050
And it's quite simple.

181

00:13:43.100  -->  00:13:45.870
It comes from the days of the days off.

182

00:13:45.900  -->  00:13:48.230
That sounds old but it's not that really.

183

00:13:48.250  -->  00:13:51.650
It comes from the days of a spinning hard drives.

184

00:13:51.700  -->  00:13:58.130
Now computers nowadays tend to have solid state drives which are like a giant flash drive like a giant

185

00:13:58.130  -->  00:14:02.550
pen drive but him back in the days and still.

186

00:14:02.580  -->  00:14:06.480
So we had spinning drives that are magnetic.

187

00:14:06.530  -->  00:14:14.330
And for those spinning drives to save some thing into a disk it take it took took a while a few milliseconds

188

00:14:14.330  -->  00:14:16.280
.

189

00:14:16.280  -->  00:14:24.520
So this commit method was used to only write to the disk when necessary.

190

00:14:24.680  -->  00:14:30.150
That meant you could insert a bunch of things and then write them all at the same time which saves time

191

00:14:30.160  -->  00:14:30.660
.

192

00:14:30.980  -->  00:14:34.200
But now we're not really that concerned with it.

193

00:14:34.280  -->  00:14:36.320
Especially if you're service have a solid state drive.

194

00:14:36.440  -->  00:14:42.920
If you don't then maybe that is more of a concern and maybe what you should do is commit a smaller intervals

195

00:14:42.950  -->  00:14:45.350
than after every statement.

196

00:14:45.350  -->  00:14:47.740
But we're not really going to worry about that.

197

00:14:47.960  -->  00:14:53.320
So for now we're going to commit after each insert so that we don't lose any data.

198

00:14:54.530  -->  00:14:56.830
So this is why we need to commit.

199

00:14:56.870  -->  00:14:59.460
And then when we close then the connection gets closed.

200

00:14:59.630  -->  00:15:02.990
The memory of the database gets erased.

201

00:15:03.050  -->  00:15:06.850
So if there's anything pending commit that gets lost.

202

00:15:07.280  -->  00:15:10.650
So that's why the sequence generally to the new number.

203

00:15:10.880  -->  00:15:13.340
The data we used was all the good with that.

204

00:15:13.670  -->  00:15:16.180
And then we just told it to delete the data.

205

00:15:16.490  -->  00:15:21.020
So the sequence did generate number two but then we didn't save it.

206

00:15:21.050  -->  00:15:22.340
So that's why it's not here.

207

00:15:22.730  -->  00:15:26.230
But then when we told it to generate a new number then the next number was three.

208

00:15:26.240  -->  00:15:28.370
So that's why this one is there.

209

00:15:29.630  -->  00:15:30.120
OK.

210

00:15:30.260  -->  00:15:31.510
So that is that.

211

00:15:31.670  -->  00:15:42.680
But when we want to skip on doing this stuff we want to not have to specify I want to commit I want

212

00:15:42.680  -->  00:15:52.550
to close what we can do is just as we're doing with this Carcer do with the connection.

213

00:15:52.550  -->  00:15:58.070
So instead of psychobilly two connection equal psycho-BS to the conect what I'm going to do is we've

214

00:15:58.490  -->  00:16:05.710
psychobilly to the connect connection and then I'm going to delete the commit and close.

215

00:16:05.770  -->  00:16:08.400
Now I'm going to invent all of that.

216

00:16:08.420  -->  00:16:17.090
To put it inside this with statement what this is doing is open up a connection to this Patreus database

217

00:16:17.100  -->  00:16:17.240
.

218

00:16:17.390  -->  00:16:27.020
Call it connection but now the creators of Cyclopedia to have specified that at the end of the with

219

00:16:27.110  -->  00:16:32.400
statement it will automatically commit and close for you.

220

00:16:32.660  -->  00:16:38.100
If we run this again now.

221

00:16:38.490  -->  00:16:40.090
Now we have the number five.

222

00:16:40.550  -->  00:16:45.990
So this is just a shorter way of doing the same thing and it saves you code.

223

00:16:46.010  -->  00:16:52.770
It makes it more readable and it means that you do not forget to commit or close the connection.

224

00:16:52.790  -->  00:16:53.650
It does it for you.

225

00:16:53.720  -->  00:16:55.670
And that's nice.

226

00:16:55.700  -->  00:17:01.730
So we have a long video but I wanted to make sure that you understand where each of the pieces comes

227

00:17:01.730  -->  00:17:08.270
from and that you understand that although you can do with Connect and connection that are also other

228

00:17:08.270  -->  00:17:10.230
ways of doing it and in the background.

229

00:17:10.280  -->  00:17:15.530
This is what this with statement is doing is creating a connection variable committing at the end and

230

00:17:15.530  -->  00:17:16.280
closing.

231

00:17:16.280  -->  00:17:18.070
And that's what's happening here.

232

00:17:18.980  -->  00:17:23.970
So with that said I'll see you in the very next video where we're going to be looking at more into Pasquier

233

00:17:24.040  -->  00:17:27.070
unpacked than I see there.
