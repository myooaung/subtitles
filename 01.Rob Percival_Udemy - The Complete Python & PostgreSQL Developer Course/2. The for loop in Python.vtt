WEBVTT
1

00:00:00.210  -->  00:00:05.360
Hi will come back in this video we're going to look out the for loop.

2

00:00:05.460  -->  00:00:11.790
So in the last video we created the list we accessed the length of the list and also each of the elements

3

00:00:11.790  -->  00:00:12.260
.

4

00:00:12.390  -->  00:00:17.150
However if we want to access the first element we need to type of numbers 0.

5

00:00:17.160  -->  00:00:22.080
We want to access the second element we need to type numbers 1 and so on and so on.

6

00:00:22.080  -->  00:00:32.480
So if we wanted to print each of those numbers we would have to say print numbers 0 and then print numbers

7

00:00:32.520  -->  00:00:35.940
1 and then print numbers 2.

8

00:00:36.330  -->  00:00:38.400
And you're getting bored and so am I.

9

00:00:38.820  -->  00:00:41.400
So there is a faster way to do it.

10

00:00:41.460  -->  00:00:48.630
There is a much better way to do it which is to iterate or navigate through each of the elements of

11

00:00:48.720  -->  00:00:54.240
this list and then you can do something with each of those elements.

12

00:00:54.450  -->  00:00:57.370
The way to do that is with something called the for loop.

13

00:00:57.510  -->  00:01:06.600
So we use the keyword for and we say for each of the elements in the list number in numbers in this

14

00:01:06.600  -->  00:01:07.200
case.

15

00:01:07.200  -->  00:01:14.810
So what this does is it says for the first number I'm going to assign its value to the variable number

16

00:01:15.960  -->  00:01:21.270
and then once I'm done with that one I'm going to move onto the next which is 1 and I'm going to assign

17

00:01:21.270  -->  00:01:26.580
one to number and then I'm going to move on to to an assigned to two number and then I'm going to move

18

00:01:26.580  -->  00:01:28.170
on to three and three to number.

19

00:01:28.320  -->  00:01:36.330
So this variable number is going to contain 0 then 1 then 2 then 3 and so up to nine.

20

00:01:36.570  -->  00:01:41.100
And every time it changes value we can do something with that number.

21

00:01:41.550  -->  00:01:47.610
So now we press enter and we can see a print number and then we pressed enter twice.

22

00:01:47.750  -->  00:01:55.420
And notice how now the output comes out which is fantastic.

23

00:01:55.440  -->  00:02:00.190
So knowing what you know already about Python right.

24

00:02:00.210  -->  00:02:06.630
Another for loop that would not print out every number but rather print out every number to the power

25

00:02:06.660  -->  00:02:08.380
of two.

26

00:02:08.610  -->  00:02:14.070
We looked at this in a very first video I believe.

27

00:02:14.080  -->  00:02:21.780
So the solution to this problem is exactly the same as above for number in numbers and numbers.

28

00:02:22.260  -->  00:02:30.450
And then we're going to print number times times two but times times that two times symbol multiply

29

00:02:30.450  -->  00:02:32.260
something to the power of.

30

00:02:32.310  -->  00:02:38.600
So we press enter twice and now we get our new list with every number to the power of two.

31

00:02:38.940  -->  00:02:45.390
However do remember if we play numbers that the list itself is unchanged.

32

00:02:45.630  -->  00:02:50.790
The only thing we've done is printed out the number to the power of two but we've not changed the actual

33

00:02:50.790  -->  00:02:53.510
list.

34

00:02:53.640  -->  00:02:54.070
OK.

35

00:02:54.120  -->  00:03:00.330
In the next video we're going to be looking at boolean expressions which is a great way to make decisions

36

00:03:00.420  -->  00:03:01.940
in our programs.

37

00:03:02.040  -->  00:03:03.030
So actually in the next video
